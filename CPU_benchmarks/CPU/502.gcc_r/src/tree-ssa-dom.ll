; ModuleID = 'tree-ssa-dom.bc'
source_filename = "tree-ssa-dom.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.gimple_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.opt_stats_d = type { i64, i64, i64, i64, i64 }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_expr_hash_elt_t_heap = type { %struct.VEC_expr_hash_elt_t_base }
%struct.VEC_expr_hash_elt_t_base = type { i32, i32, [1 x %struct.expr_hash_elt*] }
%struct.expr_hash_elt = type { %union.tree_node*, %struct.hashable_expr, %union.gimple_statement_d*, i32, %struct.expr_hash_elt* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.hashable_expr = type { %union.tree_node*, i32, %union.anon.0 }
%union.anon.0 = type { %struct.anon.3 }
%struct.anon.3 = type { %union.tree_node*, i8, i64, %union.tree_node** }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.real_format = type { void (%struct.real_format*, i64*, %struct.real_value*)*, void (%struct.real_format*, %struct.real_value*, i64*)*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.dom_walk_data = type { i8, void (%struct.dom_walk_data*, %struct.basic_block_def*, i8)*, void (%struct.dom_walk_data*, %struct.basic_block_def*)*, void (%struct.dom_walk_data*, %struct.basic_block_def*)*, i8*, %struct.VEC_void_p_heap*, i64, %struct.VEC_void_p_heap* }
%struct.VEC_void_p_heap = type { %struct.VEC_void_p_base }
%struct.VEC_void_p_base = type { i32, i32, [1 x i8*] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.edge_info = type { %union.tree_node*, %union.tree_node*, %struct.cond_equivalence*, i32 }
%struct.cond_equivalence = type { %struct.hashable_expr, %union.tree_node* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [4 x i8] c"dom\00", align 1
@pass_dominator = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8 ()* @gate_dominator, i32 ()* @tree_ssa_dominator_optimize, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 62, i32 40, i32 0, i32 0, i32 0, i32 2085 } }, align 8, !dbg !0
@.str.1 = private unnamed_addr constant [53 x i8] c"Total number of statements:                   %6ld\0A\0A\00", align 1
@opt_stats = internal global %struct.opt_stats_d zeroinitializer, align 8, !dbg !2178
@.str.2 = private unnamed_addr constant [52 x i8] c"Exprs considered for dominator optimizations: %6ld\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"\0AHash table statistics:\0A\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"    avail_exprs: \00", align 1
@avail_exprs = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2176
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.5 = private unnamed_addr constant [9 x i8] c"phicprop\00", align 1
@pass_phi_only_cprop = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8 ()* @gate_dominator, i32 ()* @eliminate_degenerate_phis, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 66, i32 40, i32 0, i32 0, i32 0, i32 2103 } }, align 8, !dbg !2148
@flag_tree_dom = external dso_local local_unnamed_addr global i32, align 4
@avail_exprs_stack = internal global %struct.VEC_expr_hash_elt_t_heap* null, align 8, !dbg !2187
@const_and_copies_stack = internal global %struct.VEC_tree_heap* null, align 8, !dbg !2189
@need_eh_cleanup = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2191
@cfg_altered = internal unnamed_addr global i8 0, align 1, !dbg !2193
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@first_pass_instance = external dso_local local_unnamed_addr global i8, align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Redundant expressions eliminated\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"Constants propagated\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"Copies propagated\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@ssa_name_values = external dso_local local_unnamed_addr global %struct.VEC_tree_heap*, align 8
@.str.9 = private unnamed_addr constant [15 x i8] c"tree-ssa-dom.c\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"\0A\0AOptimizing block #%d\0A\0A\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@real_format_for_mode = external dso_local local_unnamed_addr global [7 x %struct.real_format*], align 16
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@flag_signed_zeros = external dso_local local_unnamed_addr global i32, align 4
@dconst0 = external dso_local global %struct.real_value, align 8
@.str.13 = private unnamed_addr constant [11 x i8] c"0>>> COPY \00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"1>>> \00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"STMT \00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"COND \00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@tree_code_name = external dso_local local_unnamed_addr constant [0 x i8*], align 8
@.str.20 = private unnamed_addr constant [5 x i8] c" %s \00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"          \00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"Optimizing statement \00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"  Folded to: \00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.27 = private unnamed_addr constant [30 x i8] c"  Flagged to clear EH edges.\0A\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.29 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"  Replaced '\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"' with %s '\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"constant\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"variable\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"'\0A\00", align 1
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"  Replaced redundant expr '\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"' with '\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"LKUP \00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"2>>> \00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"FIND: \00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"==== ASGN \00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.41 = private unnamed_addr constant [6 x i8] c"<<<< \00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"<<<< COPY \00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.43 = private unnamed_addr constant [51 x i8] c"size %ld, %ld elements, %f collision/search ratio\0A\00", align 1
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@.str.44 = private unnamed_addr constant [14 x i8] c"  Replacing '\00", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"    Original statement:\00", align 1
@.str.46 = private unnamed_addr constant [23 x i8] c"    Updated statement:\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2199 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2212, metadata !DIExpression()), !dbg !2214
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2213, metadata !DIExpression()), !dbg !2214
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2215
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2216
  ret i32 %call, !dbg !2217
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2218 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2222
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2223
  ret i32 %call, !dbg !2224
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2225 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2280, metadata !DIExpression()), !dbg !2281
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2282
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2282
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2282
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2282
  %cmp = icmp uge i8* %0, %1, !dbg !2282
  %conv1 = zext i1 %cmp to i64, !dbg !2282
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2282
  %tobool = icmp eq i64 %expval, 0, !dbg !2282
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2282

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2282
  br label %cond.end, !dbg !2282

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2282
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2282
  %2 = load i8, i8* %0, align 1, !dbg !2282
  %conv3 = zext i8 %2 to i32, !dbg !2282
  br label %cond.end, !dbg !2282

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2282
  ret i32 %cond, !dbg !2283
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2284 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2286, metadata !DIExpression()), !dbg !2287
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2288
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2288
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2288
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2288
  %cmp = icmp uge i8* %0, %1, !dbg !2288
  %conv1 = zext i1 %cmp to i64, !dbg !2288
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2288
  %tobool = icmp eq i64 %expval, 0, !dbg !2288
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2288

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2288
  br label %cond.end, !dbg !2288

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2288
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2288
  %2 = load i8, i8* %0, align 1, !dbg !2288
  %conv3 = zext i8 %2 to i32, !dbg !2288
  br label %cond.end, !dbg !2288

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2288
  ret i32 %cond, !dbg !2289
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2290 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2291
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2291
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2291
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2291
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2291
  %cmp = icmp uge i8* %1, %2, !dbg !2291
  %conv1 = zext i1 %cmp to i64, !dbg !2291
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2291
  %tobool = icmp eq i64 %expval, 0, !dbg !2291
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2291

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2291
  br label %cond.end, !dbg !2291

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2291
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2291
  %3 = load i8, i8* %1, align 1, !dbg !2291
  %conv3 = zext i8 %3 to i32, !dbg !2291
  br label %cond.end, !dbg !2291

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2291
  ret i32 %cond, !dbg !2292
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2293 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2297, metadata !DIExpression()), !dbg !2298
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2299
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2300
  ret i32 %call, !dbg !2301
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2302 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2306, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2307, metadata !DIExpression()), !dbg !2308
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2309
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2309
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2309
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2309
  %cmp = icmp uge i8* %0, %1, !dbg !2309
  %conv1 = zext i1 %cmp to i64, !dbg !2309
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2309
  %tobool = icmp eq i64 %expval, 0, !dbg !2309
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2309

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2309
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2309
  br label %cond.end, !dbg !2309

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2309
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2309
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2309
  store i8 %conv2, i8* %0, align 1, !dbg !2309
  %conv6 = and i32 %__c, 255, !dbg !2309
  br label %cond.end, !dbg !2309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2309
  ret i32 %cond, !dbg !2310
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2311 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2313, metadata !DIExpression()), !dbg !2315
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2314, metadata !DIExpression()), !dbg !2315
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2316
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2316
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2316
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2316
  %cmp = icmp uge i8* %0, %1, !dbg !2316
  %conv1 = zext i1 %cmp to i64, !dbg !2316
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2316
  %tobool = icmp eq i64 %expval, 0, !dbg !2316
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2316

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2316
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2316
  br label %cond.end, !dbg !2316

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2316
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2316
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2316
  store i8 %conv2, i8* %0, align 1, !dbg !2316
  %conv6 = and i32 %__c, 255, !dbg !2316
  br label %cond.end, !dbg !2316

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2316
  ret i32 %cond, !dbg !2317
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2318 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2320, metadata !DIExpression()), !dbg !2321
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2322
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2322
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2322
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2322
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2322
  %cmp = icmp uge i8* %1, %2, !dbg !2322
  %conv1 = zext i1 %cmp to i64, !dbg !2322
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2322
  %tobool = icmp eq i64 %expval, 0, !dbg !2322
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2322

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2322
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2322
  br label %cond.end, !dbg !2322

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2322
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2322
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2322
  store i8 %conv4, i8* %1, align 1, !dbg !2322
  %conv6 = and i32 %__c, 255, !dbg !2322
  br label %cond.end, !dbg !2322

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2322
  ret i32 %cond, !dbg !2323
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2324 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2330, metadata !DIExpression()), !dbg !2333
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2331, metadata !DIExpression()), !dbg !2333
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2332, metadata !DIExpression()), !dbg !2333
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2334
  ret i64 %call, !dbg !2335
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2336 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2338, metadata !DIExpression()), !dbg !2339
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2340
  %0 = load i32, i32* %_flags, align 8, !dbg !2340
  %and = lshr i32 %0, 4, !dbg !2340
  %and.lobit = and i32 %and, 1, !dbg !2340
  ret i32 %and.lobit, !dbg !2341
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2342 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2344, metadata !DIExpression()), !dbg !2345
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2346
  %0 = load i32, i32* %_flags, align 8, !dbg !2346
  %and = lshr i32 %0, 5, !dbg !2346
  %and.lobit = and i32 %and, 1, !dbg !2346
  ret i32 %and.lobit, !dbg !2347
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2348 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2351, metadata !DIExpression()), !dbg !2352
  %__c.off = add i32 %__c, 128, !dbg !2353
  %0 = icmp ult i32 %__c.off, 384, !dbg !2353
  br i1 %0, label %cond.true, label %cond.end, !dbg !2353

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2354
  %1 = load i32*, i32** %call, align 8, !dbg !2355
  %idxprom = sext i32 %__c to i64, !dbg !2356
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2356
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2356
  br label %cond.end, !dbg !2357

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2357
  ret i32 %cond, !dbg !2358
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2359 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2361, metadata !DIExpression()), !dbg !2362
  %__c.off = add i32 %__c, 128, !dbg !2363
  %0 = icmp ult i32 %__c.off, 384, !dbg !2363
  br i1 %0, label %cond.true, label %cond.end, !dbg !2363

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2364
  %1 = load i32*, i32** %call, align 8, !dbg !2365
  %idxprom = sext i32 %__c to i64, !dbg !2366
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2366
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2366
  br label %cond.end, !dbg !2367

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2367
  ret i32 %cond, !dbg !2368
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2369 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2374, metadata !DIExpression()), !dbg !2375
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2376
  %conv = trunc i64 %call to i32, !dbg !2377
  ret i32 %conv, !dbg !2378
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2379 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2383, metadata !DIExpression()), !dbg !2384
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2385
  ret i64 %call, !dbg !2386
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2387 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2392, metadata !DIExpression()), !dbg !2393
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2394
  ret i64 %call, !dbg !2395
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2396 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2402, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2403, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2404, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2405, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2406, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 0, metadata !2407, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2408, metadata !DIExpression()), !dbg !2412
  br label %while.cond, !dbg !2413

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2414
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2408, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2407, metadata !DIExpression()), !dbg !2412
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2415
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2413

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2416
  %div = lshr i64 %add, 1, !dbg !2418
  call void @llvm.dbg.value(metadata i64 %div, metadata !2409, metadata !DIExpression()), !dbg !2412
  %mul = mul i64 %div, %__size, !dbg !2419
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2420
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2410, metadata !DIExpression()), !dbg !2412
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2421
  call void @llvm.dbg.value(metadata i32 %call, metadata !2411, metadata !DIExpression()), !dbg !2412
  %cmp1 = icmp slt i32 %call, 0, !dbg !2422
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2424

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2425
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2427

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2428
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2407, metadata !DIExpression()), !dbg !2412
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2412
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2408, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2407, metadata !DIExpression()), !dbg !2412
  br label %while.cond, !dbg !2413, !llvm.loop !2429

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2412
  ret i8* %retval.0, !dbg !2431
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2432 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2438, metadata !DIExpression()), !dbg !2439
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2440
  ret double %call, !dbg !2441
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2442 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2451, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2452, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.value(metadata i32 %base, metadata !2453, metadata !DIExpression()), !dbg !2454
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2455
  ret i64 %call, !dbg !2456
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2457 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2463, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2464, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.value(metadata i32 %base, metadata !2465, metadata !DIExpression()), !dbg !2466
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2467
  ret i64 %call, !dbg !2468
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2469 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2480, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2481, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata i32 %base, metadata !2482, metadata !DIExpression()), !dbg !2483
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2484
  ret i64 %call, !dbg !2485
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2486 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2490, metadata !DIExpression()), !dbg !2493
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2491, metadata !DIExpression()), !dbg !2493
  call void @llvm.dbg.value(metadata i32 %base, metadata !2492, metadata !DIExpression()), !dbg !2493
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2494
  ret i64 %call, !dbg !2495
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2496 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2536, metadata !DIExpression()), !dbg !2538
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2537, metadata !DIExpression()), !dbg !2538
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2539
  ret i32 %call, !dbg !2540
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2541 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2543, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2544, metadata !DIExpression()), !dbg !2545
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2546
  ret i32 %call, !dbg !2547
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2548 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2552, metadata !DIExpression()), !dbg !2554
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2553, metadata !DIExpression()), !dbg !2554
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2555
  ret i32 %call, !dbg !2556
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2557 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2561, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2562, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2563, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2564, metadata !DIExpression()), !dbg !2565
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2566
  ret i32 %call, !dbg !2567
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2568 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2572, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2573, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2574, metadata !DIExpression()), !dbg !2575
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2574, metadata !DIExpression(DW_OP_deref)), !dbg !2575
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2576
  ret i32 %call, !dbg !2577
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2578 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2582, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2583, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2584, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2585, metadata !DIExpression()), !dbg !2586
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2585, metadata !DIExpression(DW_OP_deref)), !dbg !2586
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2587
  ret i32 %call, !dbg !2588
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2589 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2613, metadata !DIExpression()), !dbg !2615
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2614, metadata !DIExpression()), !dbg !2615
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2616
  ret i32 %call, !dbg !2617
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2618 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2620, metadata !DIExpression()), !dbg !2622
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2621, metadata !DIExpression()), !dbg !2622
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2623
  ret i32 %call, !dbg !2624
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2625 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2629, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2630, metadata !DIExpression()), !dbg !2631
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2632
  ret i32 %call, !dbg !2633
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2634 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2638, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2639, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2640, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2641, metadata !DIExpression()), !dbg !2642
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2643
  ret i32 %call, !dbg !2644
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_dominator() #5 !dbg !2645 {
entry:
  %0 = load i32, i32* @flag_tree_dom, align 4, !dbg !2646
  %cmp = icmp ne i32 %0, 0, !dbg !2647
  %conv1 = zext i1 %cmp to i8, !dbg !2646
  ret i8 %conv1, !dbg !2648
}

; Function Attrs: nounwind uwtable
define internal i32 @tree_ssa_dominator_optimize() #5 !dbg !2649 {
entry:
  %walk_data = alloca %struct.dom_walk_data, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %0 = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 0, !dbg !2707
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #7, !dbg !2707
  %call = tail call i8* @memset(i8* bitcast (%struct.opt_stats_d* @opt_stats to i8*), i32 0, i64 40) #6, !dbg !2708
  %call1 = tail call %struct.htab* @htab_create(i64 1024, i32 (i8*)* nonnull @real_avail_expr_hash, i32 (i8*, i8*)* nonnull @avail_expr_eq, void (i8*)* nonnull @free_expr_hash_elt) #6, !dbg !2709
  store %struct.htab* %call1, %struct.htab** @avail_exprs, align 8, !dbg !2710
  %call2 = tail call fastcc %struct.VEC_expr_hash_elt_t_heap* @VEC_expr_hash_elt_t_heap_alloc(i32 20) #8, !dbg !2711
  store %struct.VEC_expr_hash_elt_t_heap* %call2, %struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack, align 8, !dbg !2712
  %call3 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 20) #8, !dbg !2713
  store %struct.VEC_tree_heap* %call3, %struct.VEC_tree_heap** @const_and_copies_stack, align 8, !dbg !2714
  %call4 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2715
  store %struct.bitmap_head_def* %call4, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !2716
  store i8 1, i8* %0, align 8, !dbg !2717
  %initialize_block_local_data = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 1, !dbg !2718
  store void (%struct.dom_walk_data*, %struct.basic_block_def*, i8)* null, void (%struct.dom_walk_data*, %struct.basic_block_def*, i8)** %initialize_block_local_data, align 8, !dbg !2719
  %before_dom_children = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 2, !dbg !2720
  store void (%struct.dom_walk_data*, %struct.basic_block_def*)* @dom_opt_enter_block, void (%struct.dom_walk_data*, %struct.basic_block_def*)** %before_dom_children, align 8, !dbg !2721
  %after_dom_children = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 3, !dbg !2722
  store void (%struct.dom_walk_data*, %struct.basic_block_def*)* @dom_opt_leave_block, void (%struct.dom_walk_data*, %struct.basic_block_def*)** %after_dom_children, align 8, !dbg !2723
  %global_data = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 4, !dbg !2724
  store i8* null, i8** %global_data, align 8, !dbg !2725
  %block_local_data_size = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 6, !dbg !2726
  store i64 0, i64* %block_local_data_size, align 8, !dbg !2727
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !2651, metadata !DIExpression(DW_OP_deref)), !dbg !2728
  call void @init_walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data) #6, !dbg !2729
  call void @calculate_dominance_info(i32 1) #6, !dbg !2730
  store i8 0, i8* @cfg_altered, align 1, !dbg !2731
  call void @loop_optimizer_init(i32 2) #6, !dbg !2732
  call void @threadedge_initialize_values() #6, !dbg !2733
  %call5 = call zeroext i8 @mark_dfs_back_edges() #6, !dbg !2734
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2735
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !2735
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2735
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !2735
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2735
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !2651, metadata !DIExpression(DW_OP_deref)), !dbg !2728
  call void @walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data, %struct.basic_block_def* %3) #6, !dbg !2736
  %4 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !2737
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !2737
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2738
  %cfg7 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !2738
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7, align 8, !dbg !2738
  %x_entry_block_ptr8 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !2738
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr8, align 8, !dbg !2738
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !2740
  br label %for.cond, !dbg !2738

for.cond:                                         ; preds = %for.inc15, %entry
  %9 = phi %struct.control_flow_graph* [ %6, %entry ], [ %.pre2, %for.inc15 ], !dbg !2744
  %.pn = phi %struct.basic_block_def* [ %7, %entry ], [ %bb.0, %for.inc15 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2745
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2745
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2691, metadata !DIExpression()), !dbg !2746
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 1, !dbg !2744
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2744
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %10, !dbg !2744
  br i1 %cmp, label %for.end17, label %for.body, !dbg !2738

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7, !dbg !2747
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #8, !dbg !2747
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !2747
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7, !dbg !2747
  br label %for.cond11, !dbg !2748

for.cond11:                                       ; preds = %for.body13, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2683, metadata !DIExpression(DW_OP_deref)), !dbg !2746
  %call12 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2749
  %tobool = icmp eq i8 %call12, 0, !dbg !2751
  br i1 %tobool, label %for.body13, label %for.inc15, !dbg !2752

for.body13:                                       ; preds = %for.cond11
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2683, metadata !DIExpression(DW_OP_deref)), !dbg !2746
  %call14 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2753
  call fastcc void @update_stmt_if_modified(%union.gimple_statement_d* %call14) #8, !dbg !2754
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2683, metadata !DIExpression(DW_OP_deref)), !dbg !2746
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !2755
  br label %for.cond11, !dbg !2756, !llvm.loop !2757

for.inc15:                                        ; preds = %for.cond11
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2744
  %cfg10.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !2759
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg10.phi.trans.insert, align 8, !dbg !2744
  br label %for.cond, !dbg !2744, !llvm.loop !2760

for.end17:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !2762
  call void @update_ssa(i32 2048) #6, !dbg !2763
  call fastcc void @free_all_edge_infos() #8, !dbg !2764
  %11 = load i8, i8* @first_pass_instance, align 1, !dbg !2765
  %call18 = call zeroext i8 @thread_through_all_blocks(i8 zeroext %11) #6, !dbg !2766
  %12 = load i8, i8* @cfg_altered, align 1, !dbg !2767
  %or1 = or i8 %12, %call18, !dbg !2767
  store i8 %or1, i8* @cfg_altered, align 1, !dbg !2767
  %tobool21 = icmp eq i8 %or1, 0, !dbg !2768
  br i1 %tobool21, label %if.end, label %if.then, !dbg !2770

if.then:                                          ; preds = %for.end17
  call void @free_dominance_info(i32 1) #6, !dbg !2771
  br label %if.end, !dbg !2771

if.end:                                           ; preds = %for.end17, %if.then
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !2772
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %13, i64 0, i32 0, !dbg !2772
  %14 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !2772
  %tobool22 = icmp eq %struct.bitmap_element_def* %14, null, !dbg !2772
  br i1 %tobool22, label %if.end51, label %if.then23, !dbg !2773

if.then23:                                        ; preds = %if.end
  %15 = bitcast i32* %i to i8*, !dbg !2774
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #7, !dbg !2774
  %16 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !2775
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #7, !dbg !2775
  call void @llvm.dbg.value(metadata i32* %i, metadata !2692, metadata !DIExpression(DW_OP_deref)), !dbg !2776
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2695, metadata !DIExpression(DW_OP_deref)), !dbg !2776
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %13, i32 0, i32* nonnull %i) #8, !dbg !2777
  br label %for.cond24, !dbg !2777

for.cond24:                                       ; preds = %for.inc48, %if.then23
  call void @llvm.dbg.value(metadata i32* %i, metadata !2692, metadata !DIExpression(DW_OP_deref)), !dbg !2776
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2695, metadata !DIExpression(DW_OP_deref)), !dbg !2776
  %call25 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !2778
  %tobool26 = icmp eq i8 %call25, 0, !dbg !2777
  br i1 %tobool26, label %for.end49, label %for.body27, !dbg !2777

for.body27:                                       ; preds = %for.cond24
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2779
  %cfg30 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !2779
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg30, align 8, !dbg !2779
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 2, !dbg !2779
  %19 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !2779
  %tobool31 = icmp eq %struct.VEC_basic_block_gc* %19, null, !dbg !2779
  br i1 %tobool31, label %cond.end, label %cond.true, !dbg !2779

cond.true:                                        ; preds = %for.body27
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %19, i64 0, i32 0, !dbg !2779
  br label %cond.end, !dbg !2779

cond.end:                                         ; preds = %for.body27, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body27 ], !dbg !2779
  %20 = load i32, i32* %i, align 4, !dbg !2779
  call void @llvm.dbg.value(metadata i32 %20, metadata !2692, metadata !DIExpression()), !dbg !2776
  %call35 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %20) #8, !dbg !2779
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call35, metadata !2703, metadata !DIExpression()), !dbg !2780
  %call36 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %call35) #8, !dbg !2781
  %cmp38 = icmp eq i8 %call36, 1, !dbg !2783
  br i1 %cmp38, label %land.lhs.true, label %for.inc48, !dbg !2784

land.lhs.true:                                    ; preds = %cond.end
  %call40 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %call35) #8, !dbg !2785
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call40, i64 0, i32 7, !dbg !2786
  %21 = load i32, i32* %flags, align 8, !dbg !2786
  %and = and i32 %21, 8, !dbg !2787
  %cmp41 = icmp eq i32 %and, 0, !dbg !2788
  br i1 %cmp41, label %if.then43, label %for.inc48, !dbg !2789

if.then43:                                        ; preds = %land.lhs.true
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !2790
  %23 = load i32, i32* %i, align 4, !dbg !2792
  call void @llvm.dbg.value(metadata i32 %23, metadata !2692, metadata !DIExpression()), !dbg !2776
  %call44 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %22, i32 %23) #6, !dbg !2793
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !2794
  %call45 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %call35) #8, !dbg !2795
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call45, i64 0, i32 9, !dbg !2796
  %25 = load i32, i32* %index, align 8, !dbg !2796
  %call46 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %24, i32 %25) #6, !dbg !2797
  br label %for.inc48, !dbg !2798

for.inc48:                                        ; preds = %cond.end, %land.lhs.true, %if.then43
  call void @llvm.dbg.value(metadata i32* %i, metadata !2692, metadata !DIExpression(DW_OP_deref)), !dbg !2776
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2695, metadata !DIExpression(DW_OP_deref)), !dbg !2776
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !2778
  br label %for.cond24, !dbg !2778, !llvm.loop !2799

for.end49:                                        ; preds = %for.cond24
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !2801
  %call50 = call zeroext i8 @gimple_purge_all_dead_eh_edges(%struct.bitmap_head_def* %26) #6, !dbg !2802
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !2803
  call void @bitmap_clear(%struct.bitmap_head_def* %27) #6, !dbg !2803
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #7, !dbg !2804
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #7, !dbg !2804
  br label %if.end51, !dbg !2805

if.end51:                                         ; preds = %if.end, %for.end49
  %28 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2806
  %29 = load i64, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 2), align 8, !dbg !2807
  %conv53 = trunc i64 %29 to i32, !dbg !2808
  call void @statistics_counter_event(%struct.function* %28, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i32 %conv53) #6, !dbg !2809
  %30 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2810
  %31 = load i64, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 3), align 8, !dbg !2811
  %conv55 = trunc i64 %31 to i32, !dbg !2812
  call void @statistics_counter_event(%struct.function* %30, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i32 %conv55) #6, !dbg !2813
  %32 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2814
  %33 = load i64, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 4), align 8, !dbg !2815
  %conv57 = trunc i64 %33 to i32, !dbg !2816
  call void @statistics_counter_event(%struct.function* %32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i32 %conv57) #6, !dbg !2817
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2818
  %tobool58 = icmp eq %struct._IO_FILE* %34, null, !dbg !2818
  br i1 %tobool58, label %if.end63, label %land.lhs.true59, !dbg !2820

land.lhs.true59:                                  ; preds = %if.end51
  %35 = load i32, i32* @dump_flags, align 4, !dbg !2821
  %and60 = and i32 %35, 16, !dbg !2822
  %tobool61 = icmp eq i32 %and60, 0, !dbg !2822
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !2823

if.then62:                                        ; preds = %land.lhs.true59
  call void @dump_dominator_optimization_stats(%struct._IO_FILE* nonnull %34) #8, !dbg !2824
  br label %if.end63, !dbg !2824

if.end63:                                         ; preds = %land.lhs.true59, %if.end51, %if.then62
  call void @loop_optimizer_finalize() #6, !dbg !2825
  %36 = load %struct.htab*, %struct.htab** @avail_exprs, align 8, !dbg !2826
  call void @htab_delete(%struct.htab* %36) #6, !dbg !2827
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !2651, metadata !DIExpression(DW_OP_deref)), !dbg !2728
  call void @fini_walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data) #6, !dbg !2828
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !2829
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %37) #6, !dbg !2829
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !2829
  call fastcc void @VEC_expr_hash_elt_t_heap_free(%struct.VEC_expr_hash_elt_t_heap** nonnull @avail_exprs_stack) #8, !dbg !2830
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull @const_and_copies_stack) #8, !dbg !2831
  call void @threadedge_finalize_values() #6, !dbg !2832
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !2833
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #7, !dbg !2834
  ret i32 0, !dbg !2835
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_dominator_optimization_stats(%struct._IO_FILE* %file) local_unnamed_addr #5 !dbg !2836 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2840, metadata !DIExpression()), !dbg !2841
  %0 = load i64, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 0), align 8, !dbg !2842
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i64 %0) #6, !dbg !2843
  %1 = load i64, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 1), align 8, !dbg !2844
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), i64 %1) #6, !dbg !2845
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2846
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2847
  %2 = load %struct.htab*, %struct.htab** @avail_exprs, align 8, !dbg !2848
  tail call fastcc void @htab_statistics(%struct._IO_FILE* %file, %struct.htab* %2) #8, !dbg !2849
  ret void, !dbg !2850
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @htab_statistics(%struct._IO_FILE* %file, %struct.htab* %htab) unnamed_addr #5 !dbg !2851 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2855, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata %struct.htab* %htab, metadata !2856, metadata !DIExpression()), !dbg !2857
  %call = tail call i64 @htab_size(%struct.htab* %htab) #6, !dbg !2858
  %call1 = tail call i64 @htab_elements(%struct.htab* %htab) #6, !dbg !2859
  %call2 = tail call double @htab_collisions(%struct.htab* %htab) #6, !dbg !2860
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.43, i64 0, i64 0), i64 %call, i64 %call1, double %call2) #6, !dbg !2861
  ret void, !dbg !2862
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_dominator_optimization_stats() local_unnamed_addr #5 !dbg !2863 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2866
  tail call void @dump_dominator_optimization_stats(%struct._IO_FILE* %0) #8, !dbg !2867
  ret void, !dbg !2868
}

; Function Attrs: nounwind uwtable
define dso_local i32 @loop_depth_of_name(%union.tree_node* %x) local_unnamed_addr #5 !dbg !2869 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !2873, metadata !DIExpression()), !dbg !2876
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2877
  %bf.load = load i64, i64* %0, align 8, !dbg !2877
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2879
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !2879
  br i1 %cmp, label %if.end, label %cleanup, !dbg !2880

if.end:                                           ; preds = %entry
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2881
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !2881
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !2881
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !2874, metadata !DIExpression()), !dbg !2876
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %2) #8, !dbg !2882
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !2875, metadata !DIExpression()), !dbg !2876
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !2883
  br i1 %tobool, label %cleanup, label %if.end2, !dbg !2885

if.end2:                                          ; preds = %if.end
  %loop_depth = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 10, !dbg !2886
  %3 = load i32, i32* %loop_depth, align 4, !dbg !2886
  br label %cleanup, !dbg !2887

cleanup:                                          ; preds = %if.end, %entry, %if.end2
  %retval.0 = phi i32 [ %3, %if.end2 ], [ 0, %entry ], [ 0, %if.end ], !dbg !2876
  ret i32 %retval.0, !dbg !2888
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2889 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2894, metadata !DIExpression()), !dbg !2895
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !2896
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2896
  ret %struct.basic_block_def* %0, !dbg !2897
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @degenerate_phi_result(%union.gimple_statement_d* %phi) local_unnamed_addr #5 !dbg !2898 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !2902, metadata !DIExpression()), !dbg !2910
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #8, !dbg !2911
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2903, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2904, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.value(metadata i64 0, metadata !2905, metadata !DIExpression()), !dbg !2910
  br label %for.cond, !dbg !2912

for.cond:                                         ; preds = %for.inc, %entry
  %val.0 = phi %union.tree_node* [ null, %entry ], [ %val.2, %for.inc ], !dbg !2913
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc ], !dbg !2914
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !2905, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !2904, metadata !DIExpression()), !dbg !2910
  %call1 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #8, !dbg !2915
  %conv = zext i32 %call1 to i64, !dbg !2915
  %cmp = icmp ult i64 %i.0, %conv, !dbg !2916
  br i1 %cmp, label %for.body, label %for.end, !dbg !2917

for.body:                                         ; preds = %for.cond
  %call3 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %phi, i64 %i.0) #8, !dbg !2918
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !2906, metadata !DIExpression()), !dbg !2919
  %cmp4 = icmp eq %union.tree_node* %call3, %call, !dbg !2920
  br i1 %cmp4, label %cleanup, label %if.else, !dbg !2922

if.else:                                          ; preds = %for.body
  %tobool = icmp eq %union.tree_node* %call3, null, !dbg !2923
  br i1 %tobool, label %cleanup, label %if.else7, !dbg !2925

if.else7:                                         ; preds = %if.else
  %tobool8 = icmp eq %union.tree_node* %val.0, null, !dbg !2926
  br i1 %tobool8, label %if.end34, label %if.else10, !dbg !2928

if.else10:                                        ; preds = %if.else7
  %cmp11 = icmp eq %union.tree_node* %call3, %val.0, !dbg !2929
  br i1 %cmp11, label %cleanup, label %if.else14, !dbg !2931

if.else14:                                        ; preds = %if.else10
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %val.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2932
  %bf.load = load i64, i64* %0, align 8, !dbg !2932
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2934
  %bf.load16 = load i64, i64* %1, align 8, !dbg !2934
  %2 = xor i64 %bf.load, %bf.load16, !dbg !2935
  %3 = and i64 %2, 65535, !dbg !2935
  %cmp19 = icmp eq i64 %3, 0, !dbg !2935
  br i1 %cmp19, label %lor.lhs.false, label %cleanup, !dbg !2936

lor.lhs.false:                                    ; preds = %if.else14
  %bf.cast241 = and i64 %bf.load, 65535, !dbg !2937
  %cmp25 = icmp eq i64 %bf.cast241, 141, !dbg !2937
  br i1 %cmp25, label %cleanup, label %lor.lhs.false27, !dbg !2938

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %call28 = tail call i32 @operand_equal_p(%union.tree_node* nonnull %call3, %union.tree_node* nonnull %val.0, i32 0) #6, !dbg !2939
  %tobool29 = icmp eq i32 %call28, 0, !dbg !2939
  br i1 %tobool29, label %cleanup, label %if.end34, !dbg !2940

if.end34:                                         ; preds = %lor.lhs.false27, %if.else7
  %val.1 = phi %union.tree_node* [ %call3, %if.else7 ], [ %val.0, %lor.lhs.false27 ], !dbg !2910
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !2904, metadata !DIExpression()), !dbg !2910
  br label %cleanup, !dbg !2941

cleanup:                                          ; preds = %lor.lhs.false27, %if.else14, %if.else, %lor.lhs.false, %if.else10, %for.body, %if.end34
  %val.2 = phi %union.tree_node* [ %val.1, %if.end34 ], [ %val.0, %for.body ], [ %val.0, %if.else ], [ %val.0, %if.else10 ], [ %val.0, %lor.lhs.false27 ], [ %val.0, %lor.lhs.false ], [ %val.0, %if.else14 ], !dbg !2913
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end34 ], [ false, %for.body ], [ true, %if.else ], [ false, %if.else10 ], [ true, %lor.lhs.false27 ], [ true, %lor.lhs.false ], [ true, %if.else14 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val.2, metadata !2904, metadata !DIExpression()), !dbg !2910
  br i1 %cleanup.dest.slot.0, label %for.end, label %for.inc

for.inc:                                          ; preds = %cleanup
  %inc = add nuw nsw i64 %i.0, 1, !dbg !2942
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2905, metadata !DIExpression()), !dbg !2910
  br label %for.cond, !dbg !2943, !llvm.loop !2944

for.end:                                          ; preds = %cleanup, %for.cond
  %i.0.lcssa = phi i64 [ %i.0, %cleanup ], [ %i.0, %for.cond ], !dbg !2914
  %val.3 = phi %union.tree_node* [ %val.2, %cleanup ], [ %val.0, %for.cond ], !dbg !2913
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2905, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2905, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2905, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2905, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2905, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2905, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.value(metadata %union.tree_node* %val.3, metadata !2904, metadata !DIExpression()), !dbg !2910
  %call35 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #8, !dbg !2946
  %conv36 = zext i32 %call35 to i64, !dbg !2946
  %cmp37 = icmp eq i64 %i.0.lcssa, %conv36, !dbg !2947
  %val.3. = select i1 %cmp37, %union.tree_node* %val.3, %union.tree_node* null, !dbg !2948
  ret %union.tree_node* %val.3., !dbg !2949
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2950 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2954, metadata !DIExpression()), !dbg !2955
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !2956
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !2956
  ret %union.tree_node* %0, !dbg !2957
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2958 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2962, metadata !DIExpression()), !dbg !2963
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !2964
  %0 = load i32, i32* %nargs, align 4, !dbg !2964
  ret i32 %0, !dbg !2965
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %gs, i64 %index) unnamed_addr #0 !dbg !2966 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2971, metadata !DIExpression()), !dbg !2975
  call void @llvm.dbg.value(metadata i64 %index, metadata !2972, metadata !DIExpression()), !dbg !2975
  %conv = trunc i64 %index to i32, !dbg !2976
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #8, !dbg !2977
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call, metadata !2973, metadata !DIExpression()), !dbg !2975
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !2978
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %imm_use) #8, !dbg !2979
  ret %union.tree_node* %call1, !dbg !2980
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @eliminate_degenerate_phis() #5 !dbg !2981 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2992
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !2993
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2994
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !2983, metadata !DIExpression()), !dbg !2995
  %call2 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2996
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call2, metadata !2984, metadata !DIExpression()), !dbg !2995
  tail call void @calculate_dominance_info(i32 1) #6, !dbg !2997
  store i8 0, i8* @cfg_altered, align 1, !dbg !2998
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2999
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2999
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2999
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !2999
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2999
  tail call fastcc void @eliminate_degenerate_phis_1(%struct.basic_block_def* %2, %struct.bitmap_head_def* %call1) #8, !dbg !3000
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %call1, i64 0, i32 0, !dbg !2995
  %3 = bitcast i32* %i to i8*, !dbg !3001
  %4 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3001
  br label %while.cond, !dbg !3002

while.cond:                                       ; preds = %for.end, %entry
  %5 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !3003
  %tobool = icmp eq %struct.bitmap_element_def* %5, null, !dbg !3003
  br i1 %tobool, label %while.end, label %while.body, !dbg !3002

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7, !dbg !3004
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7, !dbg !3005
  call void @bitmap_copy(%struct.bitmap_head_def* %call2, %struct.bitmap_head_def* %call1) #6, !dbg !3006
  call void @llvm.dbg.value(metadata i32* %i, metadata !2985, metadata !DIExpression(DW_OP_deref)), !dbg !3001
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2987, metadata !DIExpression(DW_OP_deref)), !dbg !3001
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call2, i32 0, i32* nonnull %i) #8, !dbg !3007
  br label %for.cond, !dbg !3007

for.cond:                                         ; preds = %for.inc, %while.body
  call void @llvm.dbg.value(metadata i32* %i, metadata !2985, metadata !DIExpression(DW_OP_deref)), !dbg !3001
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2987, metadata !DIExpression(DW_OP_deref)), !dbg !3001
  %call4 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !3008
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3007
  br i1 %tobool5, label %for.end, label %for.body, !dbg !3007

for.body:                                         ; preds = %for.cond
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3009
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 3, !dbg !3009
  %7 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3009
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %7, i64 0, i32 2, !dbg !3009
  %8 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3009
  %tobool7 = icmp eq %struct.VEC_tree_gc* %8, null, !dbg !3009
  br i1 %tobool7, label %cond.end, label %cond.true, !dbg !3009

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %8, i64 0, i32 0, !dbg !3009
  br label %cond.end, !dbg !3009

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !3009
  %9 = load i32, i32* %i, align 4, !dbg !3009
  call void @llvm.dbg.value(metadata i32 %9, metadata !2985, metadata !DIExpression()), !dbg !3001
  %call11 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %9) #8, !dbg !3009
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !2988, metadata !DIExpression()), !dbg !3010
  %tobool12 = icmp eq %union.tree_node* %call11, null, !dbg !3011
  br i1 %tobool12, label %for.inc, label %if.then, !dbg !3013

if.then:                                          ; preds = %cond.end
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3014
  %gimple_df14 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 3, !dbg !3014
  %11 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df14, align 8, !dbg !3014
  %ssa_names15 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %11, i64 0, i32 2, !dbg !3014
  %12 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names15, align 8, !dbg !3014
  %tobool16 = icmp eq %struct.VEC_tree_gc* %12, null, !dbg !3014
  br i1 %tobool16, label %cond.end23, label %cond.true17, !dbg !3014

cond.true17:                                      ; preds = %if.then
  %base21 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %12, i64 0, i32 0, !dbg !3014
  br label %cond.end23, !dbg !3014

cond.end23:                                       ; preds = %if.then, %cond.true17
  %cond24 = phi %struct.VEC_tree_base* [ %base21, %cond.true17 ], [ null, %if.then ], !dbg !3014
  %13 = load i32, i32* %i, align 4, !dbg !3014
  call void @llvm.dbg.value(metadata i32 %13, metadata !2985, metadata !DIExpression()), !dbg !3001
  %call25 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond24, i32 %13) #8, !dbg !3014
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3014
  %14 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !3014
  %15 = load %union.gimple_statement_d*, %union.gimple_statement_d** %14, align 8, !dbg !3014
  call fastcc void @eliminate_const_or_copy(%union.gimple_statement_d* %15, %struct.bitmap_head_def* %call1) #8, !dbg !3015
  br label %for.inc, !dbg !3015

for.inc:                                          ; preds = %cond.end, %cond.end23
  call void @llvm.dbg.value(metadata i32* %i, metadata !2985, metadata !DIExpression(DW_OP_deref)), !dbg !3001
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2987, metadata !DIExpression(DW_OP_deref)), !dbg !3001
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !3008
  br label %for.cond, !dbg !3008, !llvm.loop !3016

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7, !dbg !3018
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7, !dbg !3018
  br label %while.cond, !dbg !3002, !llvm.loop !3019

while.end:                                        ; preds = %while.cond
  %16 = load i8, i8* @cfg_altered, align 1, !dbg !3020
  %tobool26 = icmp eq i8 %16, 0, !dbg !3020
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !3022

if.then27:                                        ; preds = %while.end
  call void @free_dominance_info(i32 1) #6, !dbg !3023
  br label %if.end28, !dbg !3023

if.end28:                                         ; preds = %while.end, %if.then27
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !3024
  %first29 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %17, i64 0, i32 0, !dbg !3024
  %18 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first29, align 8, !dbg !3024
  %tobool30 = icmp eq %struct.bitmap_element_def* %18, null, !dbg !3024
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !3026

if.then31:                                        ; preds = %if.end28
  %call32 = call zeroext i8 @gimple_purge_all_dead_eh_edges(%struct.bitmap_head_def* %17) #6, !dbg !3027
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !3029
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %19) #6, !dbg !3029
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !3029
  br label %if.end33, !dbg !3030

if.end33:                                         ; preds = %if.end28, %if.then31
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call1) #6, !dbg !3031
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2983, metadata !DIExpression()), !dbg !2995
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call2) #6, !dbg !3032
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2984, metadata !DIExpression()), !dbg !2995
  ret i32 0, !dbg !3033
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @real_avail_expr_hash(i8* %p) #5 !dbg !3034 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !3036, metadata !DIExpression()), !dbg !3037
  %hash = getelementptr inbounds i8, i8* %p, i64 64, !dbg !3038
  %0 = bitcast i8* %hash to i32*, !dbg !3038
  %1 = load i32, i32* %0, align 8, !dbg !3038
  ret i32 %1, !dbg !3039
}

; Function Attrs: nounwind uwtable
define internal i32 @avail_expr_eq(i8* %p1, i8* %p2) #5 !dbg !3040 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !3042, metadata !DIExpression()), !dbg !3052
  call void @llvm.dbg.value(metadata i8* %p2, metadata !3043, metadata !DIExpression()), !dbg !3052
  %stmt = getelementptr inbounds i8, i8* %p1, i64 56, !dbg !3053
  %0 = bitcast i8* %stmt to %union.gimple_statement_d**, !dbg !3053
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !3053
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !3044, metadata !DIExpression()), !dbg !3052
  %expr = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !3054
  %2 = bitcast i8* %expr to %struct.hashable_expr*, !dbg !3054
  call void @llvm.dbg.value(metadata %struct.hashable_expr* %2, metadata !3045, metadata !DIExpression()), !dbg !3052
  %stamp = getelementptr inbounds i8, i8* %p1, i64 72, !dbg !3055
  %3 = bitcast i8* %stamp to %struct.expr_hash_elt**, !dbg !3055
  %4 = load %struct.expr_hash_elt*, %struct.expr_hash_elt** %3, align 8, !dbg !3055
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %4, metadata !3048, metadata !DIExpression()), !dbg !3052
  %stmt3 = getelementptr inbounds i8, i8* %p2, i64 56, !dbg !3056
  %5 = bitcast i8* %stmt3 to %union.gimple_statement_d**, !dbg !3056
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %5, align 8, !dbg !3056
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %6, metadata !3049, metadata !DIExpression()), !dbg !3052
  %expr4 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !3057
  %7 = bitcast i8* %expr4 to %struct.hashable_expr*, !dbg !3057
  call void @llvm.dbg.value(metadata %struct.hashable_expr* %7, metadata !3050, metadata !DIExpression()), !dbg !3052
  %stamp5 = getelementptr inbounds i8, i8* %p2, i64 72, !dbg !3058
  %8 = bitcast i8* %stamp5 to %struct.expr_hash_elt**, !dbg !3058
  %9 = load %struct.expr_hash_elt*, %struct.expr_hash_elt** %8, align 8, !dbg !3058
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %9, metadata !3051, metadata !DIExpression()), !dbg !3052
  %cmp = icmp eq %struct.expr_hash_elt* %4, %9, !dbg !3059
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3061

if.end:                                           ; preds = %entry
  %hash = getelementptr inbounds i8, i8* %p1, i64 64, !dbg !3062
  %10 = bitcast i8* %hash to i32*, !dbg !3062
  %11 = load i32, i32* %10, align 8, !dbg !3062
  %hash6 = getelementptr inbounds i8, i8* %p2, i64 64, !dbg !3064
  %12 = bitcast i8* %hash6 to i32*, !dbg !3064
  %13 = load i32, i32* %12, align 8, !dbg !3064
  %cmp7 = icmp eq i32 %11, %13, !dbg !3065
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !3066

if.end9:                                          ; preds = %if.end
  %call = tail call fastcc zeroext i8 @hashable_expr_equal_p(%struct.hashable_expr* nonnull %2, %struct.hashable_expr* nonnull %7) #8, !dbg !3067
  %tobool = icmp eq i8 %call, 0, !dbg !3067
  br i1 %tobool, label %cleanup, label %land.lhs.true, !dbg !3069

land.lhs.true:                                    ; preds = %if.end9
  %type = bitcast i8* %expr to %union.tree_node**, !dbg !3070
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3070
  %type10 = bitcast i8* %expr4 to %union.tree_node**, !dbg !3071
  %15 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !3071
  %call11 = tail call zeroext i8 @types_compatible_p(%union.tree_node* %14, %union.tree_node* %15) #6, !dbg !3072
  %tobool13 = icmp eq i8 %call11, 0, !dbg !3072
  br i1 %tobool13, label %cleanup, label %if.then14, !dbg !3073

if.then14:                                        ; preds = %land.lhs.true
  %tobool15 = icmp eq %union.gimple_statement_d* %1, null, !dbg !3074
  br i1 %tobool15, label %cond.end, label %cond.true, !dbg !3074

cond.true:                                        ; preds = %if.then14
  %call16 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* nonnull %1) #8, !dbg !3076
  br label %cond.end, !dbg !3074

cond.end:                                         ; preds = %if.then14, %cond.true
  %cond = phi %union.tree_node* [ %call16, %cond.true ], [ null, %if.then14 ], !dbg !3074
  %tobool17 = icmp eq %union.gimple_statement_d* %6, null, !dbg !3077
  br i1 %tobool17, label %cond.end21, label %cond.true18, !dbg !3077

cond.true18:                                      ; preds = %cond.end
  %call19 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* nonnull %6) #8, !dbg !3078
  br label %cond.end21, !dbg !3077

cond.end21:                                       ; preds = %cond.end, %cond.true18
  %cond22 = phi %union.tree_node* [ %call19, %cond.true18 ], [ null, %cond.end ], !dbg !3077
  %cmp23 = icmp eq %union.tree_node* %cond, %cond22, !dbg !3079
  %conv24 = zext i1 %cmp23 to i32, !dbg !3079
  br label %cleanup, !dbg !3080

cleanup:                                          ; preds = %land.lhs.true, %if.end9, %if.end, %entry, %cond.end21
  %retval.0 = phi i32 [ %conv24, %cond.end21 ], [ 1, %entry ], [ 0, %if.end ], [ 0, %land.lhs.true ], [ 0, %if.end9 ], !dbg !3052
  ret i32 %retval.0, !dbg !3081
}

; Function Attrs: nounwind uwtable
define internal void @free_expr_hash_elt(i8* %elt) #5 !dbg !3082 {
entry:
  call void @llvm.dbg.value(metadata i8* %elt, metadata !3084, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.value(metadata i8* %elt, metadata !3085, metadata !DIExpression()), !dbg !3086
  %kind = getelementptr inbounds i8, i8* %elt, i64 16, !dbg !3087
  %0 = bitcast i8* %kind to i32*, !dbg !3087
  %1 = load i32, i32* %0, align 8, !dbg !3087
  %cmp = icmp eq i32 %1, 3, !dbg !3089
  br i1 %cmp, label %if.then, label %if.end, !dbg !3090

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %elt, metadata !3085, metadata !DIExpression()), !dbg !3086
  %args = getelementptr inbounds i8, i8* %elt, i64 48, !dbg !3091
  %2 = bitcast i8* %args to i8**, !dbg !3091
  %3 = load i8*, i8** %2, align 8, !dbg !3091
  tail call void @free(i8* %3) #6, !dbg !3092
  br label %if.end, !dbg !3092

if.end:                                           ; preds = %if.then, %entry
  tail call void @free(i8* %elt) #6, !dbg !3093
  ret void, !dbg !3094
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_expr_hash_elt_t_heap* @VEC_expr_hash_elt_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3095 {
entry:
  call void @llvm.dbg.value(metadata i32 20, metadata !3099, metadata !DIExpression()), !dbg !3100
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 20) #6, !dbg !3101
  %0 = bitcast i8* %call to %struct.VEC_expr_hash_elt_t_heap*, !dbg !3101
  ret %struct.VEC_expr_hash_elt_t_heap* %0, !dbg !3101
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3102 {
entry:
  call void @llvm.dbg.value(metadata i32 20, metadata !3106, metadata !DIExpression()), !dbg !3107
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 20) #6, !dbg !3108
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !3108
  ret %struct.VEC_tree_heap* %0, !dbg !3108
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @dom_opt_enter_block(%struct.dom_walk_data* %walk_data, %struct.basic_block_def* %bb) #5 !dbg !3109 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !3111, metadata !DIExpression()), !dbg !3114
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3112, metadata !DIExpression()), !dbg !3114
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3115
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3115
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3116
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !3116
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3118

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !3119
  %and = and i32 %2, 8, !dbg !3120
  %tobool1 = icmp eq i32 %and, 0, !dbg !3120
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3121

if.then:                                          ; preds = %land.lhs.true
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !3122
  %3 = load i32, i32* %index, align 8, !dbg !3122
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i32 %3) #6, !dbg !3123
  br label %if.end, !dbg !3123

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call2 = tail call fastcc %struct.expr_hash_elt** @VEC_expr_hash_elt_t_heap_safe_push(%struct.VEC_expr_hash_elt_t_heap** nonnull @avail_exprs_stack, %struct.expr_hash_elt* null) #8, !dbg !3124
  %call3 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull @const_and_copies_stack, %union.tree_node* null) #8, !dbg !3125
  tail call fastcc void @record_equivalences_from_incoming_edge(%struct.basic_block_def* %bb) #8, !dbg !3126
  tail call fastcc void @record_equivalences_from_phis(%struct.basic_block_def* %bb) #8, !dbg !3127
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3128
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !3128
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #8, !dbg !3128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !3128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !3128
  br label %for.cond, !dbg !3130

for.cond:                                         ; preds = %for.body, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3113, metadata !DIExpression(DW_OP_deref)), !dbg !3114
  %call4 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3131
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3133
  br i1 %tobool5, label %for.body, label %for.end, !dbg !3134

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3113, metadata !DIExpression(DW_OP_deref)), !dbg !3114
  call fastcc void @optimize_stmt(%struct.basic_block_def* %bb, %struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3135
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3113, metadata !DIExpression(DW_OP_deref)), !dbg !3114
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3136
  br label %for.cond, !dbg !3137, !llvm.loop !3138

for.end:                                          ; preds = %for.cond
  call fastcc void @record_edge_info(%struct.basic_block_def* %bb) #8, !dbg !3140
  call fastcc void @cprop_into_successor_phis(%struct.basic_block_def* %bb) #8, !dbg !3141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3142
  ret void, !dbg !3142
}

; Function Attrs: nounwind uwtable
define internal void @dom_opt_leave_block(%struct.dom_walk_data* %walk_data, %struct.basic_block_def* %bb) #5 !dbg !3143 {
entry:
  %true_edge = alloca %struct.edge_def*, align 8
  %false_edge = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !3145, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3146, metadata !DIExpression()), !dbg !3171
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !3172
  %tobool = icmp eq i8 %call, 0, !dbg !3172
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3173

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #8, !dbg !3174
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 7, !dbg !3175
  %0 = load i32, i32* %flags, align 8, !dbg !3175
  %and = and i32 %0, 2, !dbg !3176
  %cmp = icmp eq i32 %and, 0, !dbg !3177
  br i1 %cmp, label %land.lhs.true3, label %if.else, !dbg !3178

land.lhs.true3:                                   ; preds = %land.lhs.true
  %call4 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) #8, !dbg !3179
  %call5 = tail call zeroext i8 @potentially_threadable_block(%struct.basic_block_def* %call4) #6, !dbg !3180
  %tobool7 = icmp eq i8 %call5, 0, !dbg !3180
  br i1 %tobool7, label %if.else, label %if.then, !dbg !3181

if.then:                                          ; preds = %land.lhs.true3
  %call8 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #8, !dbg !3182
  tail call fastcc void @dom_thread_across_edge(%struct.dom_walk_data* %walk_data, %struct.edge_def* %call8) #8, !dbg !3184
  br label %if.end115, !dbg !3185

if.else:                                          ; preds = %land.lhs.true3, %entry, %land.lhs.true
  %call9 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #6, !dbg !3186
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !3147, metadata !DIExpression()), !dbg !3171
  %tobool10 = icmp eq %union.gimple_statement_d* %call9, null, !dbg !3187
  br i1 %tobool10, label %if.end115, label %land.lhs.true11, !dbg !3188

land.lhs.true11:                                  ; preds = %if.else
  %call12 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call9) #8, !dbg !3189
  %cmp13 = icmp eq i32 %call12, 1, !dbg !3190
  br i1 %cmp13, label %land.lhs.true15, label %if.end115, !dbg !3191

land.lhs.true15:                                  ; preds = %land.lhs.true11
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !3192
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3192
  %tobool16 = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !3192
  br i1 %tobool16, label %cond.end, label %cond.true, !dbg !3192

cond.true:                                        ; preds = %land.lhs.true15
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !3192
  br label %cond.end, !dbg !3192

cond.end:                                         ; preds = %land.lhs.true15, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %land.lhs.true15 ], !dbg !3192
  %call18 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !3192
  %cmp19 = icmp eq i32 %call18, 2, !dbg !3193
  br i1 %cmp19, label %land.lhs.true21, label %if.end115, !dbg !3194

land.lhs.true21:                                  ; preds = %cond.end
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3195
  %tobool23 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !3195
  br i1 %tobool23, label %cond.end28, label %cond.true24, !dbg !3195

cond.true24:                                      ; preds = %land.lhs.true21
  %base26 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !3195
  br label %cond.end28, !dbg !3195

cond.end28:                                       ; preds = %land.lhs.true21, %cond.true24
  %cond29 = phi %struct.VEC_edge_base* [ %base26, %cond.true24 ], [ null, %land.lhs.true21 ], !dbg !3195
  %call30 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond29, i32 0) #8, !dbg !3195
  %flags31 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call30, i64 0, i32 7, !dbg !3196
  %3 = load i32, i32* %flags31, align 8, !dbg !3196
  %and32 = and i32 %3, 2, !dbg !3197
  %cmp33 = icmp eq i32 %and32, 0, !dbg !3198
  br i1 %cmp33, label %land.lhs.true35, label %if.end115, !dbg !3199

land.lhs.true35:                                  ; preds = %cond.end28
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3200
  %tobool37 = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !3200
  br i1 %tobool37, label %cond.end42, label %cond.true38, !dbg !3200

cond.true38:                                      ; preds = %land.lhs.true35
  %base40 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !3200
  br label %cond.end42, !dbg !3200

cond.end42:                                       ; preds = %land.lhs.true35, %cond.true38
  %cond43 = phi %struct.VEC_edge_base* [ %base40, %cond.true38 ], [ null, %land.lhs.true35 ], !dbg !3200
  %call44 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond43, i32 1) #8, !dbg !3200
  %flags45 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call44, i64 0, i32 7, !dbg !3201
  %5 = load i32, i32* %flags45, align 8, !dbg !3201
  %and46 = and i32 %5, 2, !dbg !3202
  %cmp47 = icmp eq i32 %and46, 0, !dbg !3203
  br i1 %cmp47, label %if.then49, label %if.end115, !dbg !3204

if.then49:                                        ; preds = %cond.end42
  %6 = bitcast %struct.edge_def** %true_edge to i8*, !dbg !3205
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !3205
  %7 = bitcast %struct.edge_def** %false_edge to i8*, !dbg !3205
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !3205
  call void @llvm.dbg.value(metadata %struct.edge_def** %true_edge, metadata !3148, metadata !DIExpression(DW_OP_deref)), !dbg !3206
  call void @llvm.dbg.value(metadata %struct.edge_def** %false_edge, metadata !3152, metadata !DIExpression(DW_OP_deref)), !dbg !3206
  call void @extract_true_false_edges_from_block(%struct.basic_block_def* %bb, %struct.edge_def** nonnull %true_edge, %struct.edge_def** nonnull %false_edge) #6, !dbg !3207
  %8 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !3208
  call void @llvm.dbg.value(metadata %struct.edge_def* %8, metadata !3148, metadata !DIExpression()), !dbg !3206
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %8, i64 0, i32 1, !dbg !3209
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3209
  %call50 = call zeroext i8 @potentially_threadable_block(%struct.basic_block_def* %9) #6, !dbg !3210
  %tobool51 = icmp eq i8 %call50, 0, !dbg !3210
  br i1 %tobool51, label %if.end72, label %if.then52, !dbg !3211

if.then52:                                        ; preds = %if.then49
  %call53 = call fastcc %struct.expr_hash_elt** @VEC_expr_hash_elt_t_heap_safe_push(%struct.VEC_expr_hash_elt_t_heap** nonnull @avail_exprs_stack, %struct.expr_hash_elt* null) #8, !dbg !3212
  %call54 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull @const_and_copies_stack, %union.tree_node* null) #8, !dbg !3213
  %10 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !3214
  call void @llvm.dbg.value(metadata %struct.edge_def* %10, metadata !3148, metadata !DIExpression()), !dbg !3206
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %10, i64 0, i32 3, !dbg !3215
  %11 = bitcast i8** %aux to %struct.edge_info**, !dbg !3215
  %12 = load %struct.edge_info*, %struct.edge_info** %11, align 8, !dbg !3215
  call void @llvm.dbg.value(metadata %struct.edge_info* %12, metadata !3153, metadata !DIExpression()), !dbg !3216
  %tobool55 = icmp eq %struct.edge_info* %12, null, !dbg !3217
  br i1 %tobool55, label %if.end71, label %if.then56, !dbg !3218

if.then56:                                        ; preds = %if.then52
  %cond_equivalences57 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %12, i64 0, i32 2, !dbg !3219
  %13 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences57, align 8, !dbg !3219
  call void @llvm.dbg.value(metadata %struct.cond_equivalence* %13, metadata !3157, metadata !DIExpression()), !dbg !3220
  %lhs58 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %12, i64 0, i32 0, !dbg !3221
  %14 = load %union.tree_node*, %union.tree_node** %lhs58, align 8, !dbg !3221
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !3160, metadata !DIExpression()), !dbg !3220
  %rhs59 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %12, i64 0, i32 1, !dbg !3222
  %15 = load %union.tree_node*, %union.tree_node** %rhs59, align 8, !dbg !3222
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !3161, metadata !DIExpression()), !dbg !3220
  %tobool60 = icmp eq %union.tree_node* %14, null, !dbg !3223
  br i1 %tobool60, label %if.end, label %land.lhs.true61, !dbg !3225

land.lhs.true61:                                  ; preds = %if.then56
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3226
  %bf.load = load i64, i64* %16, align 8, !dbg !3226
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3227
  %cmp63 = icmp eq i64 %bf.cast2, 141, !dbg !3227
  br i1 %cmp63, label %if.then65, label %if.end, !dbg !3228

if.then65:                                        ; preds = %land.lhs.true61
  call fastcc void @record_const_or_copy(%union.tree_node* nonnull %14, %union.tree_node* %15) #8, !dbg !3229
  br label %if.end, !dbg !3229

if.end:                                           ; preds = %if.then56, %if.then65, %land.lhs.true61
  %tobool66 = icmp eq %struct.cond_equivalence* %13, null, !dbg !3230
  br i1 %tobool66, label %if.end71, label %for.cond.preheader, !dbg !3232

for.cond.preheader:                               ; preds = %if.end
  %max_cond_equivalences = getelementptr inbounds %struct.edge_info, %struct.edge_info* %12, i64 0, i32 3, !dbg !3233
  br label %for.cond, !dbg !3236

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv8 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next9, %for.body ], !dbg !3237
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !3156, metadata !DIExpression()), !dbg !3216
  %17 = load i32, i32* %max_cond_equivalences, align 8, !dbg !3238
  %18 = zext i32 %17 to i64, !dbg !3239
  %cmp68 = icmp ult i64 %indvars.iv8, %18, !dbg !3239
  br i1 %cmp68, label %for.body, label %if.end71.loopexit, !dbg !3236

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %13, i64 %indvars.iv8, !dbg !3240
  call fastcc void @record_cond(%struct.cond_equivalence* nonnull %arrayidx) #8, !dbg !3241
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !3242
  br label %for.cond, !dbg !3243, !llvm.loop !3244

if.end71.loopexit:                                ; preds = %for.cond
  br label %if.end71, !dbg !3246

if.end71:                                         ; preds = %if.end71.loopexit, %if.end, %if.then52
  %19 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !3246
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !3148, metadata !DIExpression()), !dbg !3206
  call fastcc void @dom_thread_across_edge(%struct.dom_walk_data* %walk_data, %struct.edge_def* %19) #8, !dbg !3247
  call fastcc void @remove_local_expressions_from_table() #8, !dbg !3248
  br label %if.end72, !dbg !3249

if.end72:                                         ; preds = %if.then49, %if.end71
  %20 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !3250
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !3152, metadata !DIExpression()), !dbg !3206
  %dest73 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 1, !dbg !3251
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %dest73, align 8, !dbg !3251
  %call74 = call zeroext i8 @potentially_threadable_block(%struct.basic_block_def* %21) #6, !dbg !3252
  %tobool75 = icmp eq i8 %call74, 0, !dbg !3252
  br i1 %tobool75, label %if.end113, label %if.then76, !dbg !3253

if.then76:                                        ; preds = %if.end72
  %call79 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull @const_and_copies_stack, %union.tree_node* null) #8, !dbg !3254
  %22 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !3255
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !3152, metadata !DIExpression()), !dbg !3206
  %aux80 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i64 0, i32 3, !dbg !3256
  %23 = bitcast i8** %aux80 to %struct.edge_info**, !dbg !3256
  %24 = load %struct.edge_info*, %struct.edge_info** %23, align 8, !dbg !3256
  call void @llvm.dbg.value(metadata %struct.edge_info* %24, metadata !3162, metadata !DIExpression()), !dbg !3257
  %tobool81 = icmp eq %struct.edge_info* %24, null, !dbg !3258
  br i1 %tobool81, label %if.end112, label %if.then82, !dbg !3259

if.then82:                                        ; preds = %if.then76
  %cond_equivalences84 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %24, i64 0, i32 2, !dbg !3260
  %25 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences84, align 8, !dbg !3260
  call void @llvm.dbg.value(metadata %struct.cond_equivalence* %25, metadata !3166, metadata !DIExpression()), !dbg !3261
  %lhs86 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %24, i64 0, i32 0, !dbg !3262
  %26 = load %union.tree_node*, %union.tree_node** %lhs86, align 8, !dbg !3262
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !3169, metadata !DIExpression()), !dbg !3261
  %rhs88 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %24, i64 0, i32 1, !dbg !3263
  %27 = load %union.tree_node*, %union.tree_node** %rhs88, align 8, !dbg !3263
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !3170, metadata !DIExpression()), !dbg !3261
  %tobool89 = icmp eq %union.tree_node* %26, null, !dbg !3264
  br i1 %tobool89, label %if.end98, label %land.lhs.true90, !dbg !3266

land.lhs.true90:                                  ; preds = %if.then82
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3267
  %bf.load92 = load i64, i64* %28, align 8, !dbg !3267
  %bf.cast941 = and i64 %bf.load92, 65535, !dbg !3268
  %cmp95 = icmp eq i64 %bf.cast941, 141, !dbg !3268
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !3269

if.then97:                                        ; preds = %land.lhs.true90
  call fastcc void @record_const_or_copy(%union.tree_node* nonnull %26, %union.tree_node* %27) #8, !dbg !3270
  br label %if.end98, !dbg !3270

if.end98:                                         ; preds = %if.then82, %if.then97, %land.lhs.true90
  %tobool99 = icmp eq %struct.cond_equivalence* %25, null, !dbg !3271
  br i1 %tobool99, label %if.end112, label %for.cond101.preheader, !dbg !3273

for.cond101.preheader:                            ; preds = %if.end98
  %max_cond_equivalences102 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %24, i64 0, i32 3, !dbg !3274
  br label %for.cond101, !dbg !3277

for.cond101:                                      ; preds = %for.cond101.preheader, %for.body105
  %indvars.iv = phi i64 [ 0, %for.cond101.preheader ], [ %indvars.iv.next, %for.body105 ], !dbg !3278
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3165, metadata !DIExpression()), !dbg !3257
  %29 = load i32, i32* %max_cond_equivalences102, align 8, !dbg !3279
  %30 = zext i32 %29 to i64, !dbg !3280
  %cmp103 = icmp ult i64 %indvars.iv, %30, !dbg !3280
  br i1 %cmp103, label %for.body105, label %if.end112.loopexit, !dbg !3277

for.body105:                                      ; preds = %for.cond101
  %arrayidx107 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %25, i64 %indvars.iv, !dbg !3281
  call fastcc void @record_cond(%struct.cond_equivalence* nonnull %arrayidx107) #8, !dbg !3282
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3283
  br label %for.cond101, !dbg !3284, !llvm.loop !3285

if.end112.loopexit:                               ; preds = %for.cond101
  br label %if.end112, !dbg !3287

if.end112:                                        ; preds = %if.end112.loopexit, %if.end98, %if.then76
  %31 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !3287
  call void @llvm.dbg.value(metadata %struct.edge_def* %31, metadata !3152, metadata !DIExpression()), !dbg !3206
  call fastcc void @dom_thread_across_edge(%struct.dom_walk_data* %walk_data, %struct.edge_def* %31) #8, !dbg !3288
  br label %if.end113, !dbg !3289

if.end113:                                        ; preds = %if.end72, %if.end112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !3290
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !3290
  br label %if.end115, !dbg !3291

if.end115:                                        ; preds = %if.else, %land.lhs.true11, %cond.end, %cond.end28, %cond.end42, %if.end113, %if.then
  call fastcc void @remove_local_expressions_from_table() #8, !dbg !3292
  call fastcc void @restore_vars_to_original_value() #8, !dbg !3293
  ret void, !dbg !3294
}

declare dso_local void @init_walk_dominator_tree(%struct.dom_walk_data*) local_unnamed_addr #2

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #2

declare dso_local void @loop_optimizer_init(i32) local_unnamed_addr #2

declare dso_local void @threadedge_initialize_values() local_unnamed_addr #2

declare dso_local zeroext i8 @mark_dfs_back_edges() local_unnamed_addr #2

declare dso_local void @walk_dominator_tree(%struct.dom_walk_data*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3295 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3299, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !3300, metadata !DIExpression()), !dbg !3303
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !3304
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !3301, metadata !DIExpression()), !dbg !3302
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #8, !dbg !3305
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !3306
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3307
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !3308
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !3309
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !3310
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !3311
  ret void, !dbg !3312
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3313 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3317, metadata !DIExpression()), !dbg !3318
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3319
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3319
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !3320
  %conv1 = zext i1 %cmp to i8, !dbg !3321
  ret i8 %conv1, !dbg !3322
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt_if_modified(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !3323 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !3327, metadata !DIExpression()), !dbg !3328
  %call = tail call fastcc zeroext i8 @gimple_modified_p(%union.gimple_statement_d* %s) #8, !dbg !3329
  %tobool = icmp eq i8 %call, 0, !dbg !3329
  br i1 %tobool, label %if.end, label %if.then, !dbg !3331

if.then:                                          ; preds = %entry
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !3332
  br label %if.end, !dbg !3332

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3333
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3334 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3338, metadata !DIExpression()), !dbg !3339
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3340
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3340
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !3341
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3341
  ret %union.gimple_statement_d* %1, !dbg !3342
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !3343 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3348, metadata !DIExpression()), !dbg !3349
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3350
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3350
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !3351
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !3351
  %2 = load i64, i64* %1, align 8, !dbg !3351
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !3352
  store i64 %2, i64* %3, align 8, !dbg !3352
  ret void, !dbg !3353
}

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @free_all_edge_infos() unnamed_addr #5 !dbg !3354 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3372
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !3372
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !3373
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3373
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3374
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !3374
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3374
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !3374
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3374
  %5 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3375
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3375
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3375
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3376
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3376
  br label %for.cond, !dbg !3374

for.cond:                                         ; preds = %for.inc12, %entry
  %10 = phi %struct.control_flow_graph* [ %3, %entry ], [ %.pre1, %for.inc12 ], !dbg !3377
  %.pn = phi %struct.basic_block_def* [ %4, %entry ], [ %bb.0, %for.inc12 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3378
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3378
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3356, metadata !DIExpression()), !dbg !3379
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 1, !dbg !3377
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3377
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %11, !dbg !3377
  br i1 %cmp, label %for.end14, label %for.body, !dbg !3374

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7, !dbg !3380
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 0, !dbg !3380
  %call = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !3380
  %12 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !3380
  store i32 %12, i32* %6, align 8, !dbg !3380
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !3380
  store %struct.VEC_edge_gc** %13, %struct.VEC_edge_gc*** %7, align 8, !dbg !3380
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !3380
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7, !dbg !3380
  br label %for.cond3, !dbg !3380

for.cond3:                                        ; preds = %for.inc, %for.body
  %14 = load i32, i32* %8, align 8, !dbg !3381
  %15 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %9, align 8, !dbg !3381
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3364, metadata !DIExpression(DW_OP_deref)), !dbg !3379
  %call4 = call fastcc zeroext i8 @ei_cond(i32 %14, %struct.VEC_edge_gc** %15, %struct.edge_def** nonnull %e) #8, !dbg !3381
  %tobool = icmp eq i8 %call4, 0, !dbg !3380
  br i1 %tobool, label %for.inc12, label %for.body5, !dbg !3380

for.body5:                                        ; preds = %for.cond3
  %16 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3382
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !3364, metadata !DIExpression()), !dbg !3379
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %16, i64 0, i32 3, !dbg !3383
  %17 = bitcast i8** %aux to %struct.edge_info**, !dbg !3383
  %18 = load %struct.edge_info*, %struct.edge_info** %17, align 8, !dbg !3383
  call void @llvm.dbg.value(metadata %struct.edge_info* %18, metadata !3365, metadata !DIExpression()), !dbg !3384
  %tobool6 = icmp eq %struct.edge_info* %18, null, !dbg !3385
  br i1 %tobool6, label %for.inc, label %if.then, !dbg !3387

if.then:                                          ; preds = %for.body5
  %cond_equivalences = getelementptr inbounds %struct.edge_info, %struct.edge_info* %18, i64 0, i32 2, !dbg !3388
  %19 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences, align 8, !dbg !3388
  %tobool7 = icmp eq %struct.cond_equivalence* %19, null, !dbg !3391
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !3392

if.then8:                                         ; preds = %if.then
  %20 = bitcast %struct.cond_equivalence* %19 to i8*, !dbg !3392
  call void @free(i8* nonnull %20) #6, !dbg !3393
  br label %if.end, !dbg !3393

if.end:                                           ; preds = %if.then, %if.then8
  %21 = bitcast %struct.edge_info* %18 to i8*, !dbg !3394
  call void @free(i8* nonnull %21) #6, !dbg !3395
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3396
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !3364, metadata !DIExpression()), !dbg !3379
  %aux10 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i64 0, i32 3, !dbg !3397
  store i8* null, i8** %aux10, align 8, !dbg !3398
  br label %for.inc, !dbg !3399

for.inc:                                          ; preds = %for.body5, %if.end
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3357, metadata !DIExpression(DW_OP_deref)), !dbg !3379
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !3381
  br label %for.cond3, !dbg !3381, !llvm.loop !3400

for.inc12:                                        ; preds = %for.cond3
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3377
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3402
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3377
  br label %for.cond, !dbg !3377, !llvm.loop !3403

for.end14:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3405
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !3405
  ret void, !dbg !3405
}

declare dso_local zeroext i8 @thread_through_all_blocks(i8 zeroext) local_unnamed_addr #2

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !3406 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3415, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !3416, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.value(metadata i32 0, metadata !3417, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3418, metadata !DIExpression()), !dbg !3419
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !3420
  %1 = load i64, i64* %0, align 8, !dbg !3420
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !3421
  store i64 %1, i64* %2, align 8, !dbg !3421
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !3422
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !3423
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !3424
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !3427
  br label %while.body, !dbg !3427

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !3428
  br i1 %tobool, label %if.then, label %if.end, !dbg !3429

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !3430
  br label %while.end, !dbg !3432

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !3433

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !3427, !llvm.loop !3434

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !3436

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !3436
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !3438
  %7 = load i32, i32* %indx9, align 8, !dbg !3438
  %cmp11 = icmp eq i32 %7, 0, !dbg !3439
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !3440

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !3441
  %8 = load i32, i32* %indx14, align 8, !dbg !3441
  %mul = shl i32 %8, 7, !dbg !3442
  call void @llvm.dbg.value(metadata i32 %mul, metadata !3417, metadata !DIExpression()), !dbg !3419
  br label %if.end15, !dbg !3443

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !3417, metadata !DIExpression()), !dbg !3419
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !3444
  store i32 0, i32* %word_no, align 8, !dbg !3445
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !3446
  %9 = load i64, i64* %arrayidx, align 8, !dbg !3446
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3447
  store i64 %9, i64* %bits21, align 8, !dbg !3448
  %tobool23 = icmp eq i64 %9, 0, !dbg !3449
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !3449
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !3450
  call void @llvm.dbg.value(metadata i32 %add, metadata !3417, metadata !DIExpression()), !dbg !3419
  store i32 %add, i32* %bit_no, align 4, !dbg !3451
  ret void, !dbg !3452
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !3453 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3457, metadata !DIExpression()), !dbg !3462
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3458, metadata !DIExpression()), !dbg !3462
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3463
  %0 = load i64, i64* %bits, align 8, !dbg !3463
  %tobool = icmp eq i64 %0, 0, !dbg !3464
  br i1 %tobool, label %if.end, label %next_bit, !dbg !3465

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !3466
  br label %next_bit, !dbg !3469

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !3459), !dbg !3470
  br label %while.cond, !dbg !3469

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !3471
  %and = and i64 %2, 1, !dbg !3472
  %tobool2 = icmp eq i64 %and, 0, !dbg !3473
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !3469

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !3474
  store i64 %shr, i64* %bits, align 8, !dbg !3474
  %3 = load i32, i32* %bit_no, align 4, !dbg !3476
  %add = add i32 %3, 1, !dbg !3476
  store i32 %add, i32* %bit_no, align 4, !dbg !3476
  %.pre = load i64, i64* %bits, align 8, !dbg !3471
  br label %while.cond, !dbg !3469, !llvm.loop !3477

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !3479
  %sub = add i32 %4, 63, !dbg !3480
  %div = and i32 %sub, -64, !dbg !3481
  store i32 %div, i32* %bit_no, align 4, !dbg !3482
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !3483
  %5 = load i32, i32* %word_no, align 8, !dbg !3484
  %inc = add i32 %5, 1, !dbg !3484
  store i32 %inc, i32* %word_no, align 8, !dbg !3484
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !3485
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !3485
  br label %while.body6, !dbg !3486

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !3487

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !3488
  %cmp = icmp eq i32 %8, 2, !dbg !3489
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !3485
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !3487

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !3466
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !3466
  %10 = load i64, i64* %arrayidx, align 8, !dbg !3466
  store i64 %10, i64* %bits, align 8, !dbg !3490
  %tobool14 = icmp eq i64 %10, 0, !dbg !3491
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !3493

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !3494
  %add17 = add i32 %11, 64, !dbg !3494
  store i32 %add17, i32* %bit_no, align 4, !dbg !3494
  %12 = load i32, i32* %word_no, align 8, !dbg !3495
  %inc19 = add i32 %12, 1, !dbg !3495
  store i32 %inc19, i32* %word_no, align 8, !dbg !3495
  br label %while.cond7, !dbg !3487, !llvm.loop !3496

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !3485
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !3498
  %14 = load i64, i64* %13, align 8, !dbg !3498
  store i64 %14, i64* %6, align 8, !dbg !3499
  %tobool24 = icmp eq i64 %14, 0, !dbg !3500
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !3502

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !3502
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !3503
  %16 = load i32, i32* %indx, align 8, !dbg !3503
  %mul28 = shl i32 %16, 7, !dbg !3504
  store i32 %mul28, i32* %bit_no, align 4, !dbg !3505
  store i32 0, i32* %word_no, align 8, !dbg !3506
  br label %while.body6, !dbg !3486, !llvm.loop !3507

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !3509

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !3509

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !3462
  ret i8 %retval.0, !dbg !3509
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3510 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !3516, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3517, metadata !DIExpression()), !dbg !3518
  br label %land.end, !dbg !3519

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3519
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3519
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3519
  ret %struct.basic_block_def* %0, !dbg !3519
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3520 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3527, metadata !DIExpression()), !dbg !3528
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !3529
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3529
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !3529
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3529

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !3529
  br label %cond.end, !dbg !3529

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3529
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !3529
  %cmp = icmp eq i32 %call, 1, !dbg !3530
  %conv2 = zext i1 %cmp to i8, !dbg !3529
  ret i8 %conv2, !dbg !3531
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3532 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3536, metadata !DIExpression()), !dbg !3537
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !3538
  %tobool = icmp eq i8 %call, 0, !dbg !3538
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3538

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3538
  br label %cond.end, !dbg !3538

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !3539
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3539
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !3539
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !3539

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !3539
  br label %cond.end5, !dbg !3539

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !3539
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !3539
  ret %struct.edge_def* %call7, !dbg !3540
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3541 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3545, metadata !DIExpression()), !dbg !3546
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #8, !dbg !3547
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !3548
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3548
  ret %struct.basic_block_def* %0, !dbg !3549
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !3550 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3554, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3555, metadata !DIExpression()), !dbg !3556
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3557
  %0 = load i64, i64* %bits, align 8, !dbg !3558
  %shr = lshr i64 %0, 1, !dbg !3558
  store i64 %shr, i64* %bits, align 8, !dbg !3558
  %1 = load i32, i32* %bit_no, align 4, !dbg !3559
  %add = add i32 %1, 1, !dbg !3559
  store i32 %add, i32* %bit_no, align 4, !dbg !3559
  ret void, !dbg !3560
}

declare dso_local zeroext i8 @gimple_purge_all_dead_eh_edges(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @statistics_counter_event(%struct.function*, i8*, i32) local_unnamed_addr #2

declare dso_local void @loop_optimizer_finalize() local_unnamed_addr #2

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

declare dso_local void @fini_walk_dominator_tree(%struct.dom_walk_data*) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_expr_hash_elt_t_heap_free(%struct.VEC_expr_hash_elt_t_heap** %vec_) unnamed_addr #0 !dbg !3561 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack, metadata !3566, metadata !DIExpression()), !dbg !3567
  %0 = load %struct.VEC_expr_hash_elt_t_heap*, %struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack, align 8, !dbg !3568
  %tobool = icmp eq %struct.VEC_expr_hash_elt_t_heap* %0, null, !dbg !3568
  br i1 %tobool, label %if.end, label %if.then, !dbg !3570

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_expr_hash_elt_t_heap* %0 to i8*, !dbg !3570
  tail call void @free(i8* nonnull %1) #6, !dbg !3568
  br label %if.end, !dbg !3568

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_expr_hash_elt_t_heap* null, %struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack, align 8, !dbg !3570
  ret void, !dbg !3570
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !3571 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** @const_and_copies_stack, metadata !3576, metadata !DIExpression()), !dbg !3577
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @const_and_copies_stack, align 8, !dbg !3578
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !3578
  br i1 %tobool, label %if.end, label %if.then, !dbg !3580

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !3580
  tail call void @free(i8* nonnull %1) #6, !dbg !3578
  br label %if.end, !dbg !3578

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** @const_and_copies_stack, align 8, !dbg !3580
  ret void, !dbg !3580
}

declare dso_local void @threadedge_finalize_values() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @hashable_expr_equal_p(%struct.hashable_expr* %expr0, %struct.hashable_expr* %expr1) unnamed_addr #5 !dbg !3581 {
entry:
  call void @llvm.dbg.value(metadata %struct.hashable_expr* %expr0, metadata !3585, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata %struct.hashable_expr* %expr1, metadata !3586, metadata !DIExpression()), !dbg !3592
  %type = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 0, !dbg !3593
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3593
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3587, metadata !DIExpression()), !dbg !3592
  %type2 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 0, !dbg !3594
  %1 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !3594
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3588, metadata !DIExpression()), !dbg !3592
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !3595
  %cmp3 = icmp eq %union.tree_node* %1, null, !dbg !3597
  %xor1 = xor i1 %cmp, %cmp3, !dbg !3598
  br i1 %xor1, label %cleanup219, label %if.end, !dbg !3599

if.end:                                           ; preds = %entry
  %cmp5 = icmp eq %union.tree_node* %0, %1, !dbg !3600
  br i1 %cmp5, label %if.end67, label %land.lhs.true, !dbg !3602

land.lhs.true:                                    ; preds = %if.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3603
  %bf.load = load i64, i64* %2, align 8, !dbg !3603
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3604
  %cmp7 = icmp eq i64 %bf.cast2, 0, !dbg !3604
  br i1 %cmp7, label %cleanup219, label %lor.lhs.false, !dbg !3605

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3606
  %bf.load10 = load i64, i64* %3, align 8, !dbg !3606
  %bf.cast123 = and i64 %bf.load10, 65535, !dbg !3607
  %cmp13 = icmp eq i64 %bf.cast123, 0, !dbg !3607
  br i1 %cmp13, label %cleanup219, label %lor.lhs.false15, !dbg !3608

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %bf.lshr6 = xor i64 %bf.load, %bf.load10, !dbg !3609
  %4 = and i64 %bf.lshr6, 2097152, !dbg !3609
  %cmp25 = icmp eq i64 %4, 0, !dbg !3609
  br i1 %cmp25, label %lor.lhs.false27, label %cleanup219, !dbg !3610

lor.lhs.false27:                                  ; preds = %lor.lhs.false15
  %type28 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !3611
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type28, i64 0, i32 6, !dbg !3611
  %bf.load29 = load i32, i32* %precision, align 4, !dbg !3611
  %type31 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !3612
  %precision32 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type31, i64 0, i32 6, !dbg !3612
  %bf.load33 = load i32, i32* %precision32, align 4, !dbg !3612
  %5 = xor i32 %bf.load29, %bf.load33, !dbg !3613
  %6 = and i32 %5, 1023, !dbg !3613
  %cmp35 = icmp eq i32 %6, 0, !dbg !3613
  br i1 %cmp35, label %lor.lhs.false37, label %cleanup219, !dbg !3614

lor.lhs.false37:                                  ; preds = %lor.lhs.false27
  %cmp42 = icmp eq i64 %bf.cast2, 14, !dbg !3615
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !3615

cond.true:                                        ; preds = %lor.lhs.false37
  %call = tail call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !3615
  %bf.load49.pre = load i64, i64* %3, align 8, !dbg !3616
  br label %cond.end, !dbg !3615

cond.false:                                       ; preds = %lor.lhs.false37
  %bf.lshr46 = lshr i32 %bf.load29, 16, !dbg !3615
  %bf.clear47 = and i32 %bf.lshr46, 255, !dbg !3615
  br label %cond.end, !dbg !3615

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load49 = phi i64 [ %bf.load49.pre, %cond.true ], [ %bf.load10, %cond.false ], !dbg !3616
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear47, %cond.false ], !dbg !3615
  %bf.cast515 = and i64 %bf.load49, 65535, !dbg !3616
  %cmp52 = icmp eq i64 %bf.cast515, 14, !dbg !3616
  br i1 %cmp52, label %cond.true54, label %cond.false56, !dbg !3616

cond.true54:                                      ; preds = %cond.end
  %call55 = tail call i32 @vector_type_mode(%union.tree_node* %1) #6, !dbg !3616
  br label %cond.end62, !dbg !3616

cond.false56:                                     ; preds = %cond.end
  %bf.load59 = load i32, i32* %precision32, align 4, !dbg !3616
  %bf.lshr60 = lshr i32 %bf.load59, 16, !dbg !3616
  %bf.clear61 = and i32 %bf.lshr60, 255, !dbg !3616
  br label %cond.end62, !dbg !3616

cond.end62:                                       ; preds = %cond.false56, %cond.true54
  %cond63 = phi i32 [ %call55, %cond.true54 ], [ %bf.clear61, %cond.false56 ], !dbg !3616
  %cmp64 = icmp eq i32 %cond, %cond63, !dbg !3617
  br i1 %cmp64, label %if.end67, label %cleanup219, !dbg !3618

if.end67:                                         ; preds = %cond.end62, %if.end
  %kind = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 1, !dbg !3619
  %7 = load i32, i32* %kind, align 8, !dbg !3619
  %kind68 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 1, !dbg !3621
  %8 = load i32, i32* %kind68, align 8, !dbg !3621
  %cmp69 = icmp eq i32 %7, %8, !dbg !3622
  br i1 %cmp69, label %if.end72, label %cleanup219, !dbg !3623

if.end72:                                         ; preds = %if.end67
  switch i32 %7, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb79
    i32 2, label %sw.bb129
    i32 3, label %sw.bb180
  ], !dbg !3624

sw.bb:                                            ; preds = %if.end72
  %rhs = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, i32 0, i32 0, !dbg !3625
  %9 = load %union.tree_node*, %union.tree_node** %rhs, align 8, !dbg !3625
  %rhs76 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 2, i32 0, i32 0, !dbg !3626
  %10 = load %union.tree_node*, %union.tree_node** %rhs76, align 8, !dbg !3626
  %call77 = tail call i32 @operand_equal_p(%union.tree_node* %9, %union.tree_node* %10, i32 0) #6, !dbg !3627
  %conv78 = trunc i32 %call77 to i8, !dbg !3627
  br label %cleanup219, !dbg !3628

sw.bb79:                                          ; preds = %if.end72
  %ops80 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, !dbg !3629
  %op = bitcast %union.anon.0* %ops80 to i32*, !dbg !3631
  %11 = load i32, i32* %op, align 8, !dbg !3631
  %ops81 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 2, !dbg !3632
  %op83 = bitcast %union.anon.0* %ops81 to i32*, !dbg !3633
  %12 = load i32, i32* %op83, align 8, !dbg !3633
  %cmp84 = icmp eq i32 %11, %12, !dbg !3634
  br i1 %cmp84, label %if.end87, label %cleanup219, !dbg !3635

if.end87:                                         ; preds = %sw.bb79
  %cmp91 = icmp eq i32 %11, 116, !dbg !3636
  br i1 %cmp91, label %land.lhs.true105, label %lor.lhs.false93, !dbg !3636

lor.lhs.false93:                                  ; preds = %if.end87
  %cmp97 = icmp eq i32 %11, 113, !dbg !3636
  br i1 %cmp97, label %land.lhs.true105, label %lor.lhs.false99, !dbg !3638

lor.lhs.false99:                                  ; preds = %lor.lhs.false93
  %cmp103 = icmp eq i32 %11, 117, !dbg !3639
  br i1 %cmp103, label %land.lhs.true105, label %if.end121, !dbg !3640

land.lhs.true105:                                 ; preds = %lor.lhs.false99, %lor.lhs.false93, %if.end87
  %13 = bitcast %struct.hashable_expr* %expr0 to i64**, !dbg !3641
  %14 = load i64*, i64** %13, align 8, !dbg !3641
  %bf.load108 = load i64, i64* %14, align 8, !dbg !3641
  %15 = bitcast %struct.hashable_expr* %expr1 to i64**, !dbg !3642
  %16 = load i64*, i64** %15, align 8, !dbg !3642
  %bf.load114 = load i64, i64* %16, align 8, !dbg !3642
  %bf.lshr1097 = xor i64 %bf.load108, %bf.load114, !dbg !3643
  %17 = and i64 %bf.lshr1097, 2097152, !dbg !3643
  %cmp118 = icmp eq i64 %17, 0, !dbg !3643
  br i1 %cmp118, label %if.end121, label %cleanup219, !dbg !3644

if.end121:                                        ; preds = %land.lhs.true105, %lor.lhs.false99
  %opnd = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, i32 0, i32 1, !dbg !3645
  %18 = bitcast i8* %opnd to %union.tree_node**, !dbg !3645
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !3645
  %opnd126 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 2, i32 0, i32 1, !dbg !3646
  %20 = bitcast i8* %opnd126 to %union.tree_node**, !dbg !3646
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !3646
  %call127 = tail call i32 @operand_equal_p(%union.tree_node* %19, %union.tree_node* %21, i32 0) #6, !dbg !3647
  %conv128 = trunc i32 %call127 to i8, !dbg !3647
  br label %cleanup219, !dbg !3648

sw.bb129:                                         ; preds = %if.end72
  %ops130 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, !dbg !3649
  %op131 = bitcast %union.anon.0* %ops130 to i32*, !dbg !3652
  %22 = load i32, i32* %op131, align 8, !dbg !3652
  %ops132 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 2, !dbg !3653
  %op134 = bitcast %union.anon.0* %ops132 to i32*, !dbg !3654
  %23 = load i32, i32* %op134, align 8, !dbg !3654
  %cmp135 = icmp eq i32 %22, %23, !dbg !3655
  br i1 %cmp135, label %if.end138, label %cleanup219, !dbg !3656

if.end138:                                        ; preds = %sw.bb129
  %opnd0 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, i32 0, i32 1, !dbg !3657
  %24 = bitcast i8* %opnd0 to %union.tree_node**, !dbg !3657
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !3657
  %opnd0143 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 2, i32 0, i32 1, !dbg !3659
  %26 = bitcast i8* %opnd0143 to %union.tree_node**, !dbg !3659
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !3659
  %call144 = tail call i32 @operand_equal_p(%union.tree_node* %25, %union.tree_node* %27, i32 0) #6, !dbg !3660
  %tobool145 = icmp eq i32 %call144, 0, !dbg !3660
  br i1 %tobool145, label %if.end155, label %land.lhs.true146, !dbg !3661

land.lhs.true146:                                 ; preds = %if.end138
  %opnd1 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, i32 0, i32 2, !dbg !3662
  %28 = bitcast i64* %opnd1 to %union.tree_node**, !dbg !3662
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !3662
  %opnd1151 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 2, i32 0, i32 2, !dbg !3663
  %30 = bitcast i64* %opnd1151 to %union.tree_node**, !dbg !3663
  %31 = load %union.tree_node*, %union.tree_node** %30, align 8, !dbg !3663
  %call152 = tail call i32 @operand_equal_p(%union.tree_node* %29, %union.tree_node* %31, i32 0) #6, !dbg !3664
  %tobool153 = icmp eq i32 %call152, 0, !dbg !3664
  br i1 %tobool153, label %if.end155, label %cleanup219, !dbg !3665

if.end155:                                        ; preds = %land.lhs.true146, %if.end138
  %32 = load i32, i32* %op131, align 8, !dbg !3666
  %call159 = tail call zeroext i8 @commutative_tree_code(i32 %32) #6, !dbg !3667
  %tobool161 = icmp eq i8 %call159, 0, !dbg !3667
  br i1 %tobool161, label %land.end, label %land.lhs.true162, !dbg !3668

land.lhs.true162:                                 ; preds = %if.end155
  %33 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !3669
  %opnd1168 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 2, i32 0, i32 2, !dbg !3670
  %34 = bitcast i64* %opnd1168 to %union.tree_node**, !dbg !3670
  %35 = load %union.tree_node*, %union.tree_node** %34, align 8, !dbg !3670
  %call169 = tail call i32 @operand_equal_p(%union.tree_node* %33, %union.tree_node* %35, i32 0) #6, !dbg !3671
  %tobool170 = icmp eq i32 %call169, 0, !dbg !3671
  br i1 %tobool170, label %land.end, label %land.rhs, !dbg !3672

land.rhs:                                         ; preds = %land.lhs.true162
  %opnd1173 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, i32 0, i32 2, !dbg !3673
  %36 = bitcast i64* %opnd1173 to %union.tree_node**, !dbg !3673
  %37 = load %union.tree_node*, %union.tree_node** %36, align 8, !dbg !3673
  %38 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !3674
  %call177 = tail call i32 @operand_equal_p(%union.tree_node* %37, %union.tree_node* %38, i32 0) #6, !dbg !3675
  %tobool178 = icmp ne i32 %call177, 0, !dbg !3672
  %phitmp = zext i1 %tobool178 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true162, %if.end155, %land.rhs
  %39 = phi i8 [ 0, %land.lhs.true162 ], [ 0, %if.end155 ], [ %phitmp, %land.rhs ]
  br label %cleanup219, !dbg !3676

sw.bb180:                                         ; preds = %if.end72
  %fn = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, i32 0, i32 0, !dbg !3677
  %40 = load %union.tree_node*, %union.tree_node** %fn, align 8, !dbg !3677
  %fn185 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 2, i32 0, i32 0, !dbg !3679
  %41 = load %union.tree_node*, %union.tree_node** %fn185, align 8, !dbg !3679
  %call186 = tail call i32 @operand_equal_p(%union.tree_node* %40, %union.tree_node* %41, i32 0) #6, !dbg !3680
  %tobool187 = icmp eq i32 %call186, 0, !dbg !3680
  br i1 %tobool187, label %cleanup219, label %if.end189, !dbg !3681

if.end189:                                        ; preds = %sw.bb180
  %pure = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, i32 0, i32 1, !dbg !3682
  %42 = load i8, i8* %pure, align 8, !dbg !3682
  %tobool192 = icmp eq i8 %42, 0, !dbg !3684
  br i1 %tobool192, label %cleanup219, label %if.end194, !dbg !3685

if.end194:                                        ; preds = %if.end189
  %nargs = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, i32 0, i32 2, !dbg !3686
  %43 = load i64, i64* %nargs, align 8, !dbg !3686
  %nargs199 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 2, i32 0, i32 2, !dbg !3688
  %44 = load i64, i64* %nargs199, align 8, !dbg !3688
  %cmp200 = icmp eq i64 %43, %44, !dbg !3689
  br i1 %cmp200, label %for.cond.preheader, label %cleanup219, !dbg !3690

for.cond.preheader:                               ; preds = %if.end194
  %args = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr0, i64 0, i32 2, i32 0, i32 3, !dbg !3691
  %args213 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 2, i32 0, i32 3, !dbg !3695
  br label %for.cond, !dbg !3696

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %45 = phi i64 [ %.pre, %for.inc ], [ %43, %for.cond.preheader ], !dbg !3697
  %i.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !3698
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3589, metadata !DIExpression()), !dbg !3699
  %cmp207 = icmp ult i64 %i.0, %45, !dbg !3700
  br i1 %cmp207, label %for.body, label %cleanup219.loopexit, !dbg !3696

for.body:                                         ; preds = %for.cond
  %46 = load %union.tree_node**, %union.tree_node*** %args, align 8, !dbg !3691
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %46, i64 %i.0, !dbg !3701
  %47 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3701
  %48 = load %union.tree_node**, %union.tree_node*** %args213, align 8, !dbg !3702
  %arrayidx214 = getelementptr inbounds %union.tree_node*, %union.tree_node** %48, i64 %i.0, !dbg !3703
  %49 = load %union.tree_node*, %union.tree_node** %arrayidx214, align 8, !dbg !3703
  %call215 = tail call i32 @operand_equal_p(%union.tree_node* %47, %union.tree_node* %49, i32 0) #6, !dbg !3704
  %tobool216 = icmp eq i32 %call215, 0, !dbg !3704
  br i1 %tobool216, label %cleanup219.loopexit, label %for.inc, !dbg !3705

for.inc:                                          ; preds = %for.body
  %inc = add i64 %i.0, 1, !dbg !3706
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3589, metadata !DIExpression()), !dbg !3699
  %.pre = load i64, i64* %nargs, align 8, !dbg !3697
  br label %for.cond, !dbg !3707, !llvm.loop !3708

sw.default:                                       ; preds = %if.end72
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 420, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3710
  br label %cleanup219, !dbg !3711

cleanup219.loopexit:                              ; preds = %for.cond, %for.body
  %retval.1.ph = phi i8 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup219, !dbg !3712

cleanup219:                                       ; preds = %cleanup219.loopexit, %cond.end62, %lor.lhs.false27, %lor.lhs.false15, %land.lhs.true105, %sw.bb79, %land.lhs.true146, %sw.bb129, %if.end194, %if.end189, %sw.bb180, %if.end67, %land.lhs.true, %lor.lhs.false, %entry, %sw.default, %land.end, %if.end121, %sw.bb
  %retval.1 = phi i8 [ 0, %sw.default ], [ %39, %land.end ], [ %conv128, %if.end121 ], [ %conv78, %sw.bb ], [ 0, %entry ], [ 0, %cond.end62 ], [ 0, %lor.lhs.false27 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true ], [ 0, %if.end67 ], [ 0, %sw.bb79 ], [ 0, %land.lhs.true105 ], [ 0, %sw.bb129 ], [ 1, %land.lhs.true146 ], [ 0, %sw.bb180 ], [ 0, %if.end189 ], [ 0, %if.end194 ], [ %retval.1.ph, %cleanup219.loopexit ], !dbg !3592
  ret i8 %retval.1, !dbg !3712
}

declare dso_local zeroext i8 @types_compatible_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3713 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3715, metadata !DIExpression()), !dbg !3716
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !3717
  %tobool = icmp eq i8 %call, 0, !dbg !3717
  br i1 %tobool, label %return, label %if.end, !dbg !3719

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !3720
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !3720
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3720
  br label %return, !dbg !3721

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !3716
  ret %union.tree_node* %retval.0, !dbg !3722
}

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @commutative_tree_code(i32) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3723 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3727, metadata !DIExpression()), !dbg !3728
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !3729
  %cmp = icmp ugt i32 %call, 5, !dbg !3730
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3731

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !3732
  %cmp2 = icmp ult i32 %call1, 10, !dbg !3733
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !3734
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3735 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3739, metadata !DIExpression()), !dbg !3740
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3741
  %bf.load = load i32, i32* %0, align 8, !dbg !3741
  %bf.clear = and i32 %bf.load, 255, !dbg !3741
  ret i32 %bf.clear, !dbg !3742
}

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.expr_hash_elt** @VEC_expr_hash_elt_t_heap_safe_push(%struct.VEC_expr_hash_elt_t_heap** %vec_, %struct.expr_hash_elt* %obj_) unnamed_addr #0 !dbg !3743 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack, metadata !3748, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %obj_, metadata !3749, metadata !DIExpression()), !dbg !3750
  %call = tail call fastcc i32 @VEC_expr_hash_elt_t_heap_reserve(%struct.VEC_expr_hash_elt_t_heap** nonnull @avail_exprs_stack, i32 1) #8, !dbg !3751
  %0 = load %struct.VEC_expr_hash_elt_t_heap*, %struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack, align 8, !dbg !3751
  %tobool = icmp eq %struct.VEC_expr_hash_elt_t_heap* %0, null, !dbg !3751
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3751

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_expr_hash_elt_t_heap, %struct.VEC_expr_hash_elt_t_heap* %0, i64 0, i32 0, !dbg !3751
  br label %cond.end, !dbg !3751

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_expr_hash_elt_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3751
  %call1 = tail call fastcc %struct.expr_hash_elt** @VEC_expr_hash_elt_t_base_quick_push(%struct.VEC_expr_hash_elt_t_base* %cond, %struct.expr_hash_elt* %obj_) #8, !dbg !3751
  ret %struct.expr_hash_elt** %call1, !dbg !3751
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !3752 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** @const_and_copies_stack, metadata !3756, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3757, metadata !DIExpression()), !dbg !3758
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** nonnull @const_and_copies_stack, i32 1) #8, !dbg !3759
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @const_and_copies_stack, align 8, !dbg !3759
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !3759
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3759

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !3759
  br label %cond.end, !dbg !3759

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3759
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* null) #8, !dbg !3759
  ret %union.tree_node** %call1, !dbg !3759
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_equivalences_from_incoming_edge(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !3760 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3764, metadata !DIExpression()), !dbg !3776
  %call = tail call %struct.basic_block_def* @get_immediate_dominator(i32 1, %struct.basic_block_def* %bb) #6, !dbg !3777
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !3766, metadata !DIExpression()), !dbg !3776
  %call1 = tail call fastcc %struct.edge_def* @single_incoming_edge_ignoring_loop_edges(%struct.basic_block_def* %bb) #8, !dbg !3778
  call void @llvm.dbg.value(metadata %struct.edge_def* %call1, metadata !3765, metadata !DIExpression()), !dbg !3776
  %tobool = icmp eq %struct.edge_def* %call1, null, !dbg !3779
  br i1 %tobool, label %if.end14, label %land.lhs.true, !dbg !3780

land.lhs.true:                                    ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 0, !dbg !3781
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3781
  %cmp = icmp eq %struct.basic_block_def* %0, %call, !dbg !3782
  br i1 %cmp, label %if.then, label %if.end14, !dbg !3783

if.then:                                          ; preds = %land.lhs.true
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 3, !dbg !3784
  %1 = bitcast i8** %aux to %struct.edge_info**, !dbg !3784
  %2 = load %struct.edge_info*, %struct.edge_info** %1, align 8, !dbg !3784
  call void @llvm.dbg.value(metadata %struct.edge_info* %2, metadata !3767, metadata !DIExpression()), !dbg !3776
  %tobool2 = icmp eq %struct.edge_info* %2, null, !dbg !3785
  br i1 %tobool2, label %if.end14, label %if.then3, !dbg !3786

if.then3:                                         ; preds = %if.then
  %lhs4 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %2, i64 0, i32 0, !dbg !3787
  %3 = load %union.tree_node*, %union.tree_node** %lhs4, align 8, !dbg !3787
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3771, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !3774, metadata !DIExpression()), !dbg !3788
  %cond_equivalences6 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %2, i64 0, i32 2, !dbg !3789
  %4 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences6, align 8, !dbg !3789
  call void @llvm.dbg.value(metadata %struct.cond_equivalence* %4, metadata !3775, metadata !DIExpression()), !dbg !3788
  %tobool7 = icmp eq %union.tree_node* %3, null, !dbg !3790
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !3792

if.then8:                                         ; preds = %if.then3
  %rhs5 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %2, i64 0, i32 1, !dbg !3793
  %5 = load %union.tree_node*, %union.tree_node** %rhs5, align 8, !dbg !3793
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !3774, metadata !DIExpression()), !dbg !3788
  tail call fastcc void @record_equality(%union.tree_node* nonnull %3, %union.tree_node* %5) #8, !dbg !3794
  br label %if.end, !dbg !3794

if.end:                                           ; preds = %if.then3, %if.then8
  %tobool9 = icmp eq %struct.cond_equivalence* %4, null, !dbg !3795
  br i1 %tobool9, label %if.end14, label %for.cond.preheader, !dbg !3797

for.cond.preheader:                               ; preds = %if.end
  %max_cond_equivalences = getelementptr inbounds %struct.edge_info, %struct.edge_info* %2, i64 0, i32 3, !dbg !3798
  br label %for.cond, !dbg !3801

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.body ], !dbg !3802
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3768, metadata !DIExpression()), !dbg !3803
  %6 = load i32, i32* %max_cond_equivalences, align 8, !dbg !3804
  %7 = zext i32 %6 to i64, !dbg !3805
  %cmp11 = icmp ult i64 %indvars.iv, %7, !dbg !3805
  br i1 %cmp11, label %for.body, label %if.end14.loopexit, !dbg !3801

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %4, i64 %indvars.iv, !dbg !3806
  tail call fastcc void @record_cond(%struct.cond_equivalence* nonnull %arrayidx) #8, !dbg !3807
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3808
  br label %for.cond, !dbg !3809, !llvm.loop !3810

if.end14.loopexit:                                ; preds = %for.cond
  br label %if.end14, !dbg !3812

if.end14:                                         ; preds = %if.end14.loopexit, %if.end, %if.then, %entry, %land.lhs.true
  ret void, !dbg !3812
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_equivalences_from_phis(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !3813 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3815, metadata !DIExpression()), !dbg !3828
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3829
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3829
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3830
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !3830
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #6, !dbg !3830
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !3830
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !3830
  br label %for.cond, !dbg !3831

for.cond:                                         ; preds = %for.inc30, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3816, metadata !DIExpression(DW_OP_deref)), !dbg !3828
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3832
  %tobool = icmp eq i8 %call, 0, !dbg !3833
  br i1 %tobool, label %for.body, label %for.end31, !dbg !3834

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3816, metadata !DIExpression(DW_OP_deref)), !dbg !3828
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3835
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !3817, metadata !DIExpression()), !dbg !3836
  %call2 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call1) #8, !dbg !3837
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !3821, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3822, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i64 0, metadata !3823, metadata !DIExpression()), !dbg !3836
  br label %for.cond3, !dbg !3838

for.cond3:                                        ; preds = %for.inc, %for.body
  %rhs.0 = phi %union.tree_node* [ null, %for.body ], [ %rhs.2, %for.inc ], !dbg !3839
  %i.0 = phi i64 [ 0, %for.body ], [ %inc, %for.inc ], !dbg !3840
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3823, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !3822, metadata !DIExpression()), !dbg !3836
  %call4 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %call1) #8, !dbg !3841
  %conv = zext i32 %call4 to i64, !dbg !3841
  %cmp = icmp ult i64 %i.0, %conv, !dbg !3842
  br i1 %cmp, label %for.body6, label %for.end, !dbg !3843

for.body6:                                        ; preds = %for.cond3
  %call7 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %call1, i64 %i.0) #8, !dbg !3844
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !3824, metadata !DIExpression()), !dbg !3845
  %cmp8 = icmp eq %union.tree_node* %call2, %call7, !dbg !3846
  br i1 %cmp8, label %cleanup, label %if.end, !dbg !3848

if.end:                                           ; preds = %for.body6
  %cmp10 = icmp eq %union.tree_node* %rhs.0, null, !dbg !3849
  br i1 %cmp10, label %if.end17, label %if.else, !dbg !3851

if.else:                                          ; preds = %if.end
  %call13 = call i32 @operand_equal_for_phi_arg_p(%union.tree_node* nonnull %rhs.0, %union.tree_node* %call7) #6, !dbg !3852
  %tobool14 = icmp eq i32 %call13, 0, !dbg !3852
  br i1 %tobool14, label %cleanup, label %if.end17, !dbg !3854

if.end17:                                         ; preds = %if.else, %if.end
  %rhs.1 = phi %union.tree_node* [ %call7, %if.end ], [ %rhs.0, %if.else ], !dbg !3836
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.1, metadata !3822, metadata !DIExpression()), !dbg !3836
  br label %cleanup, !dbg !3855

cleanup:                                          ; preds = %if.else, %for.body6, %if.end17
  %rhs.2 = phi %union.tree_node* [ %rhs.1, %if.end17 ], [ %rhs.0, %for.body6 ], [ %rhs.0, %if.else ], !dbg !3836
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end17 ], [ false, %for.body6 ], [ true, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.2, metadata !3822, metadata !DIExpression()), !dbg !3836
  br i1 %cleanup.dest.slot.0, label %for.end, label %for.inc

for.inc:                                          ; preds = %cleanup
  %inc = add nuw nsw i64 %i.0, 1, !dbg !3856
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3823, metadata !DIExpression()), !dbg !3836
  br label %for.cond3, !dbg !3857, !llvm.loop !3858

for.end:                                          ; preds = %cleanup, %for.cond3
  %i.0.lcssa = phi i64 [ %i.0, %cleanup ], [ %i.0, %for.cond3 ], !dbg !3840
  %rhs.3 = phi %union.tree_node* [ %rhs.2, %cleanup ], [ %rhs.0, %for.cond3 ], !dbg !3839
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !3823, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !3823, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !3823, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !3823, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !3823, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !3823, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.3, metadata !3822, metadata !DIExpression()), !dbg !3836
  %tobool18 = icmp eq %union.tree_node* %rhs.3, null, !dbg !3860
  %spec.select = select i1 %tobool18, %union.tree_node* %call2, %union.tree_node* %rhs.3, !dbg !3862
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !3822, metadata !DIExpression()), !dbg !3836
  %call21 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %call1) #8, !dbg !3863
  %conv22 = zext i32 %call21 to i64, !dbg !3863
  %cmp23 = icmp eq i64 %i.0.lcssa, %conv22, !dbg !3865
  br i1 %cmp23, label %land.lhs.true, label %for.inc30, !dbg !3866

land.lhs.true:                                    ; preds = %for.end
  %call25 = call zeroext i8 @may_propagate_copy(%union.tree_node* %call2, %union.tree_node* %spec.select) #6, !dbg !3867
  %tobool27 = icmp eq i8 %call25, 0, !dbg !3867
  br i1 %tobool27, label %for.inc30, label %if.then28, !dbg !3868

if.then28:                                        ; preds = %land.lhs.true
  call void @set_ssa_name_value(%union.tree_node* %call2, %union.tree_node* %spec.select) #6, !dbg !3869
  br label %for.inc30, !dbg !3869

for.inc30:                                        ; preds = %land.lhs.true, %for.end, %if.then28
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3816, metadata !DIExpression(DW_OP_deref)), !dbg !3828
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3870
  br label %for.cond, !dbg !3871, !llvm.loop !3872

for.end31:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3874
  ret void, !dbg !3874
}

; Function Attrs: nounwind uwtable
define internal fastcc void @optimize_stmt(%struct.basic_block_def* %bb, %struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %si) unnamed_addr #5 !dbg !3875 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3879, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %si, metadata !3880, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i8 0, metadata !3884, metadata !DIExpression()), !dbg !3896
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !3898
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3881, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3882, metadata !DIExpression()), !dbg !3896
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #8, !dbg !3899
  %cmp = icmp eq i32 %call1, 1, !dbg !3901
  br i1 %cmp, label %if.then, label %if.end, !dbg !3902

if.then:                                          ; preds = %entry
  tail call fastcc void @canonicalize_comparison(%union.gimple_statement_d* %call) #8, !dbg !3903
  br label %if.end, !dbg !3903

if.end:                                           ; preds = %if.then, %entry
  tail call fastcc void @update_stmt_if_modified(%union.gimple_statement_d* %call) #8, !dbg !3904
  %0 = load i64, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 0), align 8, !dbg !3905
  %inc = add nsw i64 %0, 1, !dbg !3905
  store i64 %inc, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 0), align 8, !dbg !3905
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3906
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !3906
  br i1 %tobool, label %if.end5, label %land.lhs.true, !dbg !3908

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* @dump_flags, align 4, !dbg !3909
  %and = and i32 %2, 8, !dbg !3910
  %tobool2 = icmp eq i32 %and, 0, !dbg !3910
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !3911

if.then3:                                         ; preds = %land.lhs.true
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !3912
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3914
  tail call void @print_gimple_stmt(%struct._IO_FILE* %3, %union.gimple_statement_d* %call, i32 0, i32 2) #6, !dbg !3915
  br label %if.end5, !dbg !3916

if.end5:                                          ; preds = %land.lhs.true, %if.end, %if.then3
  tail call fastcc void @cprop_into_stmt(%union.gimple_statement_d* %call) #8, !dbg !3917
  %call6 = tail call fastcc zeroext i8 @gimple_modified_p(%union.gimple_statement_d* %call) #8, !dbg !3918
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3918
  br i1 %tobool7, label %if.end42, label %if.then8, !dbg !3919

if.then8:                                         ; preds = %if.end5
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3885, metadata !DIExpression()), !dbg !3920
  %call9 = call zeroext i8 @fold_stmt(%struct.gimple_stmt_iterator* nonnull %si) #6, !dbg !3921
  %tobool10 = icmp eq i8 %call9, 0, !dbg !3921
  br i1 %tobool10, label %if.end20, label %if.then11, !dbg !3923

if.then11:                                        ; preds = %if.then8
  %call12 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !3924
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !3881, metadata !DIExpression()), !dbg !3896
  call void @gimple_set_modified(%union.gimple_statement_d* %call12, i8 zeroext 1) #6, !dbg !3926
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3927
  %tobool13 = icmp eq %struct._IO_FILE* %4, null, !dbg !3927
  br i1 %tobool13, label %if.end20, label %land.lhs.true14, !dbg !3929

land.lhs.true14:                                  ; preds = %if.then11
  %5 = load i32, i32* @dump_flags, align 4, !dbg !3930
  %and15 = and i32 %5, 8, !dbg !3931
  %tobool16 = icmp eq i32 %and15, 0, !dbg !3931
  br i1 %tobool16, label %if.end20, label %if.then17, !dbg !3932

if.then17:                                        ; preds = %land.lhs.true14
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !3933
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3935
  call void @print_gimple_stmt(%struct._IO_FILE* %6, %union.gimple_statement_d* %call12, i32 0, i32 2) #6, !dbg !3936
  br label %if.end20, !dbg !3937

if.end20:                                         ; preds = %land.lhs.true14, %if.then11, %if.then8, %if.then17
  %stmt.0 = phi %union.gimple_statement_d* [ %call, %if.then8 ], [ %call12, %if.then17 ], [ %call12, %land.lhs.true14 ], [ %call12, %if.then11 ], !dbg !3896
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !3881, metadata !DIExpression()), !dbg !3896
  %call21 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt.0) #6, !dbg !3938
  %tobool22 = icmp eq i8 %call21, 0, !dbg !3938
  br i1 %tobool22, label %if.else, label %if.then23, !dbg !3940

if.then23:                                        ; preds = %if.end20
  %call24 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt.0) #8, !dbg !3941
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !3885, metadata !DIExpression()), !dbg !3920
  br label %if.end36, !dbg !3942

if.else:                                          ; preds = %if.end20
  %call25 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.0) #8, !dbg !3943
  %cmp26 = icmp eq i32 %call25, 3, !dbg !3945
  br i1 %cmp26, label %if.then27, label %if.else29, !dbg !3946

if.then27:                                        ; preds = %if.else
  %call28 = call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %stmt.0) #8, !dbg !3947
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !3885, metadata !DIExpression()), !dbg !3920
  br label %if.end36, !dbg !3948

if.else29:                                        ; preds = %if.else
  %call30 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.0) #8, !dbg !3949
  %cmp31 = icmp eq i32 %call30, 5, !dbg !3951
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !3952

if.then32:                                        ; preds = %if.else29
  %call33 = call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %stmt.0) #8, !dbg !3953
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !3885, metadata !DIExpression()), !dbg !3920
  br label %if.end36, !dbg !3954

if.end36:                                         ; preds = %if.then27, %if.then32, %if.else29, %if.then23
  %rhs.2 = phi %union.tree_node* [ %call24, %if.then23 ], [ %call28, %if.then27 ], [ %call33, %if.then32 ], [ null, %if.else29 ], !dbg !3955
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.2, metadata !3885, metadata !DIExpression()), !dbg !3920
  %tobool37 = icmp eq %union.tree_node* %rhs.2, null, !dbg !3956
  br i1 %tobool37, label %if.end42, label %land.lhs.true38, !dbg !3958

land.lhs.true38:                                  ; preds = %if.end36
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3959
  %bf.load = load i64, i64* %7, align 8, !dbg !3959
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3960
  %cmp39 = icmp eq i64 %bf.cast2, 121, !dbg !3960
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !3961

if.then40:                                        ; preds = %land.lhs.true38
  call void @recompute_tree_invariant_for_addr_expr(%union.tree_node* nonnull %rhs.2) #6, !dbg !3962
  br label %if.end42, !dbg !3962

if.end42:                                         ; preds = %if.end36, %if.end5, %land.lhs.true38, %if.then40
  %modified_p.0 = phi i32 [ 0, %if.end5 ], [ 1, %if.then40 ], [ 1, %land.lhs.true38 ], [ 1, %if.end36 ]
  %stmt.1 = phi %union.gimple_statement_d* [ %call, %if.end5 ], [ %stmt.0, %if.then40 ], [ %stmt.0, %land.lhs.true38 ], [ %stmt.0, %if.end36 ], !dbg !3896
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1, metadata !3881, metadata !DIExpression()), !dbg !3896
  %call43 = call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt.1) #8, !dbg !3963
  %tobool44 = icmp eq i8 %call43, 0, !dbg !3963
  br i1 %tobool44, label %land.rhs, label %land.end, !dbg !3964

land.rhs:                                         ; preds = %if.end42
  %call45 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt.1) #8, !dbg !3965
  %tobool46 = icmp eq i8 %call45, 0, !dbg !3965
  br i1 %tobool46, label %lor.lhs.false, label %land.lhs.true47, !dbg !3966

land.lhs.true47:                                  ; preds = %land.rhs
  %call48 = call zeroext i8 @gimple_rhs_has_side_effects(%union.gimple_statement_d* %stmt.1) #6, !dbg !3967
  %tobool49 = icmp eq i8 %call48, 0, !dbg !3967
  br i1 %tobool49, label %land.end, label %lor.lhs.false, !dbg !3968

lor.lhs.false:                                    ; preds = %land.lhs.true47, %land.rhs
  %call50 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt.1) #8, !dbg !3969
  %tobool52 = icmp eq i8 %call50, 0, !dbg !3969
  br i1 %tobool52, label %lor.lhs.false60, label %land.lhs.true53, !dbg !3970

land.lhs.true53:                                  ; preds = %lor.lhs.false
  %call54 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt.1) #8, !dbg !3971
  %cmp55 = icmp eq %union.tree_node* %call54, null, !dbg !3972
  br i1 %cmp55, label %lor.lhs.false60, label %land.lhs.true57, !dbg !3973

land.lhs.true57:                                  ; preds = %land.lhs.true53
  %call58 = call zeroext i8 @gimple_rhs_has_side_effects(%union.gimple_statement_d* %stmt.1) #6, !dbg !3974
  %tobool59 = icmp eq i8 %call58, 0, !dbg !3974
  br i1 %tobool59, label %land.end, label %lor.lhs.false60, !dbg !3975

lor.lhs.false60:                                  ; preds = %land.lhs.true57, %land.lhs.true53, %lor.lhs.false
  %call61 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.1) #8, !dbg !3976
  %cmp62 = icmp eq i32 %call61, 1, !dbg !3977
  br i1 %cmp62, label %land.end, label %lor.rhs, !dbg !3978

lor.rhs:                                          ; preds = %lor.lhs.false60
  %call64 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.1) #8, !dbg !3979
  %cmp65 = icmp eq i32 %call64, 5, !dbg !3980
  %phitmp = zext i1 %cmp65 to i8, !dbg !3978
  br label %land.end, !dbg !3978

land.end:                                         ; preds = %land.lhs.true47, %land.lhs.true57, %if.end42, %lor.lhs.false60, %lor.rhs
  %8 = phi i8 [ 0, %if.end42 ], [ 1, %lor.lhs.false60 ], [ 1, %land.lhs.true57 ], [ 1, %land.lhs.true47 ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i8 %8, metadata !3883, metadata !DIExpression()), !dbg !3896
  %tobool68 = icmp eq i8 %8, 0, !dbg !3981
  br i1 %tobool68, label %if.end92, label %if.then69, !dbg !3982

if.then69:                                        ; preds = %land.end
  %call70 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.1) #8, !dbg !3983
  %cmp71 = icmp eq i32 %call70, 8, !dbg !3984
  br i1 %cmp71, label %if.then73, label %if.end90, !dbg !3985

if.then73:                                        ; preds = %if.then69
  %call74 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt.1) #8, !dbg !3986
  call void @llvm.dbg.value(metadata %union.tree_node* %call74, metadata !3888, metadata !DIExpression()), !dbg !3987
  %tobool75 = icmp eq %union.tree_node* %call74, null, !dbg !3988
  br i1 %tobool75, label %if.end90, label %land.lhs.true76, !dbg !3990

land.lhs.true76:                                  ; preds = %if.then73
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call74, i64 0, i32 0, i32 5, !dbg !3991
  %bf.load77 = load i32, i32* %built_in_class, align 8, !dbg !3991
  %bf.clear78 = and i32 %bf.load77, 6144, !dbg !3991
  %cmp79 = icmp eq i32 %bf.clear78, 6144, !dbg !3992
  br i1 %cmp79, label %land.lhs.true81, label %if.end90, !dbg !3993

land.lhs.true81:                                  ; preds = %land.lhs.true76
  %bf.clear84 = and i32 %bf.load77, 2047, !dbg !3994
  %cmp85 = icmp eq i32 %bf.clear84, 428, !dbg !3995
  br i1 %cmp85, label %if.then87, label %if.end90, !dbg !3996

if.then87:                                        ; preds = %land.lhs.true81
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !3997
  call void @propagate_tree_value_into_stmt(%struct.gimple_stmt_iterator* nonnull %si, %union.tree_node* %9) #6, !dbg !3999
  %call88 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !4000
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call88, metadata !3881, metadata !DIExpression()), !dbg !3896
  br label %if.end90, !dbg !4001

if.end90:                                         ; preds = %if.then73, %land.lhs.true76, %land.lhs.true81, %if.then87, %if.then69
  %stmt.3 = phi %union.gimple_statement_d* [ %stmt.1, %if.then69 ], [ %call88, %if.then87 ], [ %stmt.1, %land.lhs.true81 ], [ %stmt.1, %land.lhs.true76 ], [ %stmt.1, %if.then73 ], !dbg !3896
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.3, metadata !3881, metadata !DIExpression()), !dbg !3896
  call fastcc void @update_stmt_if_modified(%union.gimple_statement_d* %stmt.3) #8, !dbg !4002
  call fastcc void @eliminate_redundant_computations(%struct.gimple_stmt_iterator* nonnull %si) #8, !dbg !4003
  %call91 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !4004
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call91, metadata !3881, metadata !DIExpression()), !dbg !3896
  br label %if.end92, !dbg !4005

if.end92:                                         ; preds = %land.end, %if.end90
  %stmt.4 = phi %union.gimple_statement_d* [ %call91, %if.end90 ], [ %stmt.1, %land.end ], !dbg !3896
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.4, metadata !3881, metadata !DIExpression()), !dbg !3896
  %call93 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt.4) #8, !dbg !4006
  %tobool94 = icmp eq i8 %call93, 0, !dbg !4006
  br i1 %tobool94, label %if.end97, label %if.then95, !dbg !4008

if.then95:                                        ; preds = %if.end92
  %conv96 = zext i8 %8 to i32, !dbg !4009
  call fastcc void @record_equivalences_from_stmt(%union.gimple_statement_d* %stmt.4, i32 %conv96) #8, !dbg !4010
  br label %if.end97, !dbg !4010

if.end97:                                         ; preds = %if.end92, %if.then95
  %call98 = call fastcc zeroext i8 @gimple_modified_p(%union.gimple_statement_d* %stmt.4) #8, !dbg !4011
  %tobool100 = icmp ne i8 %call98, 0, !dbg !4011
  %tobool103 = icmp ne i32 %modified_p.0, 0, !dbg !4012
  %or.cond = or i1 %tobool100, %tobool103, !dbg !4013
  br i1 %or.cond, label %if.then104, label %if.end147, !dbg !4013

if.then104:                                       ; preds = %if.end97
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3893, metadata !DIExpression()), !dbg !4014
  call fastcc void @update_stmt_if_modified(%union.gimple_statement_d* %stmt.4) #8, !dbg !4015
  %call105 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.4) #8, !dbg !4016
  %cmp106 = icmp eq i32 %call105, 1, !dbg !4018
  br i1 %cmp106, label %if.then108, label %if.else114, !dbg !4019

if.then108:                                       ; preds = %if.then104
  %call109 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt.4) #8, !dbg !4020
  %call110 = call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %stmt.4) #8, !dbg !4021
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4022
  %call111 = call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %stmt.4) #8, !dbg !4023
  %call112 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %stmt.4) #8, !dbg !4024
  %call113 = call %union.tree_node* @fold_binary_loc(i32 %call109, i32 %call110, %union.tree_node* %10, %union.tree_node* %call111, %union.tree_node* %call112) #6, !dbg !4025
  call void @llvm.dbg.value(metadata %union.tree_node* %call113, metadata !3893, metadata !DIExpression()), !dbg !4014
  br label %if.end121, !dbg !4026

if.else114:                                       ; preds = %if.then104
  %call115 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.4) #8, !dbg !4027
  %cmp116 = icmp eq i32 %call115, 5, !dbg !4029
  br i1 %cmp116, label %if.then118, label %if.end121, !dbg !4030

if.then118:                                       ; preds = %if.else114
  %call119 = call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %stmt.4) #8, !dbg !4031
  call void @llvm.dbg.value(metadata %union.tree_node* %call119, metadata !3893, metadata !DIExpression()), !dbg !4014
  br label %if.end121, !dbg !4032

if.end121:                                        ; preds = %if.else114, %if.then118, %if.then108
  %val.1 = phi %union.tree_node* [ %call113, %if.then108 ], [ %call119, %if.then118 ], [ null, %if.else114 ], !dbg !4033
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !3893, metadata !DIExpression()), !dbg !4014
  %tobool122 = icmp eq %union.tree_node* %val.1, null, !dbg !4034
  br i1 %tobool122, label %if.end134, label %land.lhs.true123, !dbg !4036

land.lhs.true123:                                 ; preds = %if.end121
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %val.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4037
  %bf.load125 = load i64, i64* %11, align 8, !dbg !4037
  %bf.cast1271 = and i64 %bf.load125, 65535, !dbg !4038
  %cmp128 = icmp eq i64 %bf.cast1271, 23, !dbg !4038
  br i1 %cmp128, label %land.lhs.true130, label %if.end134, !dbg !4039

land.lhs.true130:                                 ; preds = %land.lhs.true123
  %call131 = call %struct.edge_def* @find_taken_edge(%struct.basic_block_def* %bb, %union.tree_node* nonnull %val.1) #6, !dbg !4040
  %tobool132 = icmp eq %struct.edge_def* %call131, null, !dbg !4040
  br i1 %tobool132, label %if.end134, label %if.then133, !dbg !4041

if.then133:                                       ; preds = %land.lhs.true130
  store i8 1, i8* @cfg_altered, align 1, !dbg !4042
  br label %if.end134, !dbg !4043

if.end134:                                        ; preds = %land.lhs.true130, %if.end121, %if.then133, %land.lhs.true123
  %call135 = call zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d* %call, %union.gimple_statement_d* %stmt.4) #6, !dbg !4044
  %tobool136 = icmp eq i8 %call135, 0, !dbg !4044
  br i1 %tobool136, label %if.end147, label %if.then137, !dbg !4046

if.then137:                                       ; preds = %if.end134
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !4047
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4049
  %13 = load i32, i32* %index, align 8, !dbg !4049
  %call138 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %12, i32 %13) #6, !dbg !4050
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4051
  %tobool139 = icmp eq %struct._IO_FILE* %14, null, !dbg !4051
  br i1 %tobool139, label %if.end147, label %land.lhs.true140, !dbg !4053

land.lhs.true140:                                 ; preds = %if.then137
  %15 = load i32, i32* @dump_flags, align 4, !dbg !4054
  %and141 = and i32 %15, 8, !dbg !4055
  %tobool142 = icmp eq i32 %and141, 0, !dbg !4055
  br i1 %tobool142, label %if.end147, label %if.then143, !dbg !4056

if.then143:                                       ; preds = %land.lhs.true140
  %call144 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4057
  br label %if.end147, !dbg !4057

if.end147:                                        ; preds = %land.lhs.true140, %if.then137, %if.end134, %if.then143, %if.end97
  ret void, !dbg !4058
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_edge_info(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !4059 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %true_edge = alloca %struct.edge_def*, align 8
  %false_edge = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4061, metadata !DIExpression()), !dbg !4109
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4110
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4110
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4062, metadata !DIExpression(DW_OP_deref)), !dbg !4109
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %gsi, %struct.basic_block_def* %bb) #8, !dbg !4111
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4062, metadata !DIExpression(DW_OP_deref)), !dbg !4109
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4112
  %tobool = icmp eq i8 %call, 0, !dbg !4112
  br i1 %tobool, label %if.then, label %if.end209, !dbg !4113

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4062, metadata !DIExpression(DW_OP_deref)), !dbg !4109
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4114
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4064, metadata !DIExpression()), !dbg !4115
  %call2 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call1) #8, !dbg !4116
  call void @llvm.dbg.value(metadata i32 %call2, metadata !4067, metadata !DIExpression()), !dbg !4115
  %call3 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #8, !dbg !4117
  %cmp = icmp eq i32 %call3, 5, !dbg !4118
  br i1 %cmp, label %if.then4, label %if.end58, !dbg !4119

if.then4:                                         ; preds = %if.then
  %call5 = call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %call1) #8, !dbg !4120
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !4068, metadata !DIExpression()), !dbg !4121
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4122
  %bf.load = load i64, i64* %1, align 8, !dbg !4122
  %bf.cast7 = and i64 %bf.load, 65535, !dbg !4123
  %cmp6 = icmp eq i64 %bf.cast7, 141, !dbg !4123
  br i1 %cmp6, label %if.then7, label %if.end58, !dbg !4124

if.then7:                                         ; preds = %if.then4
  %call8 = call fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* %call1) #8, !dbg !4125
  call void @llvm.dbg.value(metadata i32 %call8, metadata !4074, metadata !DIExpression()), !dbg !4126
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4127
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !4127
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4127
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 5, !dbg !4127
  %4 = load i32, i32* %x_last_basic_block, align 8, !dbg !4127
  %conv = sext i32 %4 to i64, !dbg !4127
  %call9 = call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !4127
  %5 = bitcast i8* %call9 to %union.tree_node**, !dbg !4127
  call void @llvm.dbg.value(metadata %union.tree_node** %5, metadata !4075, metadata !DIExpression()), !dbg !4126
  %6 = bitcast %struct.edge_def** %e to i8*, !dbg !4128
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !4128
  %7 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4129
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7, !dbg !4129
  call void @llvm.dbg.value(metadata i32 0, metadata !4071, metadata !DIExpression()), !dbg !4126
  br label %for.cond, !dbg !4130

for.cond:                                         ; preds = %for.inc, %if.then7
  %i.0 = phi i32 [ 0, %if.then7 ], [ %inc, %for.inc ], !dbg !4131
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4071, metadata !DIExpression()), !dbg !4126
  %cmp10 = icmp slt i32 %i.0, %call8, !dbg !4132
  br i1 %cmp10, label %for.body, label %for.end, !dbg !4133

for.body:                                         ; preds = %for.cond
  %call12 = call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %call1, i32 %i.0) #8, !dbg !4134
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !4078, metadata !DIExpression()), !dbg !4135
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4136
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4136
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !4136
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4136
  %call14 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %8, %union.tree_node* %9) #6, !dbg !4136
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call14, metadata !4082, metadata !DIExpression()), !dbg !4135
  %arrayidx17 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !4137
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx17, align 8, !dbg !4137
  %tobool18 = icmp eq %union.tree_node* %10, null, !dbg !4137
  br i1 %tobool18, label %lor.lhs.false, label %if.then27, !dbg !4139

lor.lhs.false:                                    ; preds = %for.body
  %11 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4140
  %tobool22 = icmp eq %union.tree_node* %11, null, !dbg !4140
  br i1 %tobool22, label %if.then27, label %lor.lhs.false23, !dbg !4141

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %index24 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call14, i64 0, i32 9, !dbg !4142
  %12 = load i32, i32* %index24, align 8, !dbg !4142
  %idxprom = sext i32 %12 to i64, !dbg !4143
  %arrayidx25 = getelementptr inbounds %union.tree_node*, %union.tree_node** %5, i64 %idxprom, !dbg !4143
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8, !dbg !4143
  %tobool26 = icmp eq %union.tree_node* %13, null, !dbg !4143
  br i1 %tobool26, label %if.else, label %if.then27, !dbg !4144

if.then27:                                        ; preds = %lor.lhs.false23, %lor.lhs.false, %for.body
  %14 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !4145
  %index28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call14, i64 0, i32 9, !dbg !4146
  %15 = load i32, i32* %index28, align 8, !dbg !4146
  %idxprom29 = sext i32 %15 to i64, !dbg !4147
  %arrayidx30 = getelementptr inbounds %union.tree_node*, %union.tree_node** %5, i64 %idxprom29, !dbg !4147
  %16 = bitcast %union.tree_node** %arrayidx30 to i64*, !dbg !4148
  store i64 %14, i64* %16, align 8, !dbg !4148
  br label %for.inc, !dbg !4147

if.else:                                          ; preds = %lor.lhs.false23
  store %union.tree_node* %call12, %union.tree_node** %arrayidx25, align 8, !dbg !4149
  br label %for.inc

for.inc:                                          ; preds = %if.then27, %if.else
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4150
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4071, metadata !DIExpression()), !dbg !4126
  br label %for.cond, !dbg !4151, !llvm.loop !4152

for.end:                                          ; preds = %for.cond
  %17 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4154
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #7, !dbg !4154
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4154
  %call34 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !4154
  %18 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4154
  %19 = extractvalue { i32, %struct.VEC_edge_gc** } %call34, 0, !dbg !4154
  store i32 %19, i32* %18, align 8, !dbg !4154
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4154
  %21 = extractvalue { i32, %struct.VEC_edge_gc** } %call34, 1, !dbg !4154
  store %struct.VEC_edge_gc** %21, %struct.VEC_edge_gc*** %20, align 8, !dbg !4154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %17, i64 16, i1 false), !dbg !4154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #7, !dbg !4154
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4155
  %23 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4155
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4156
  br label %for.cond35, !dbg !4154

for.cond35:                                       ; preds = %for.inc55, %for.end
  %24 = load i32, i32* %22, align 8, !dbg !4157
  %25 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %23, align 8, !dbg !4157
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4076, metadata !DIExpression(DW_OP_deref)), !dbg !4126
  %call36 = call fastcc zeroext i8 @ei_cond(i32 %24, %struct.VEC_edge_gc** %25, %struct.edge_def** nonnull %e) #8, !dbg !4157
  %tobool37 = icmp eq i8 %call36, 0, !dbg !4154
  br i1 %tobool37, label %for.end56, label %for.body38, !dbg !4154

for.body38:                                       ; preds = %for.cond35
  %26 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4158
  call void @llvm.dbg.value(metadata %struct.edge_def* %26, metadata !4076, metadata !DIExpression()), !dbg !4126
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %26, i64 0, i32 1, !dbg !4159
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4159
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %27, metadata !4083, metadata !DIExpression()), !dbg !4160
  %index41 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i64 0, i32 9, !dbg !4161
  %28 = load i32, i32* %index41, align 8, !dbg !4161
  %idxprom42 = sext i32 %28 to i64, !dbg !4162
  %arrayidx43 = getelementptr inbounds %union.tree_node*, %union.tree_node** %5, i64 %idxprom42, !dbg !4162
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx43, align 8, !dbg !4162
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !4087, metadata !DIExpression()), !dbg !4160
  %cmp44 = icmp ne %union.tree_node* %29, null, !dbg !4163
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4164
  %cmp46 = icmp ne %union.tree_node* %29, %30, !dbg !4165
  %or.cond = and i1 %cmp44, %cmp46, !dbg !4166
  br i1 %or.cond, label %if.then48, label %for.inc55, !dbg !4166

if.then48:                                        ; preds = %for.body38
  %31 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4167
  %operands50 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4168
  %32 = load %union.tree_node*, %union.tree_node** %operands50, align 8, !dbg !4168
  %call52 = call %union.tree_node* @fold_convert_loc(i32 %call2, %union.tree_node* %31, %union.tree_node* %32) #6, !dbg !4169
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !4088, metadata !DIExpression()), !dbg !4156
  %33 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4170
  call void @llvm.dbg.value(metadata %struct.edge_def* %33, metadata !4076, metadata !DIExpression()), !dbg !4126
  %call53 = call fastcc %struct.edge_info* @allocate_edge_info(%struct.edge_def* %33) #8, !dbg !4171
  call void @llvm.dbg.value(metadata %struct.edge_info* %call53, metadata !4063, metadata !DIExpression()), !dbg !4109
  %lhs = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call53, i64 0, i32 0, !dbg !4172
  store %union.tree_node* %call5, %union.tree_node** %lhs, align 8, !dbg !4173
  %rhs = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call53, i64 0, i32 1, !dbg !4174
  store %union.tree_node* %call52, %union.tree_node** %rhs, align 8, !dbg !4175
  br label %for.inc55, !dbg !4176

for.inc55:                                        ; preds = %for.body38, %if.then48
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4077, metadata !DIExpression(DW_OP_deref)), !dbg !4126
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !4157
  br label %for.cond35, !dbg !4157, !llvm.loop !4177

for.end56:                                        ; preds = %for.cond35
  call void @free(i8* %call9) #6, !dbg !4179
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7, !dbg !4180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !4180
  br label %if.end58, !dbg !4181

if.end58:                                         ; preds = %if.then4, %for.end56, %if.then
  %call59 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #8, !dbg !4182
  %cmp60 = icmp eq i32 %call59, 1, !dbg !4183
  br i1 %cmp60, label %if.then62, label %if.end209, !dbg !4184

if.then62:                                        ; preds = %if.end58
  %34 = bitcast %struct.edge_def** %true_edge to i8*, !dbg !4185
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7, !dbg !4185
  %35 = bitcast %struct.edge_def** %false_edge to i8*, !dbg !4186
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7, !dbg !4186
  %call63 = call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %call1) #8, !dbg !4187
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !4095, metadata !DIExpression()), !dbg !4188
  %call64 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call1) #8, !dbg !4189
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !4096, metadata !DIExpression()), !dbg !4188
  %call65 = call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %call1) #8, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %call65, metadata !4097, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.value(metadata %struct.edge_def** %true_edge, metadata !4091, metadata !DIExpression(DW_OP_deref)), !dbg !4188
  call void @llvm.dbg.value(metadata %struct.edge_def** %false_edge, metadata !4094, metadata !DIExpression(DW_OP_deref)), !dbg !4188
  call void @extract_true_false_edges_from_block(%struct.basic_block_def* %bb, %struct.edge_def** nonnull %true_edge, %struct.edge_def** nonnull %false_edge) #6, !dbg !4191
  %call65.off = add i32 %call65, -101, !dbg !4192
  %switch = icmp ult i32 %call65.off, 2, !dbg !4192
  br i1 %switch, label %land.lhs.true71, label %if.else129, !dbg !4192

land.lhs.true71:                                  ; preds = %if.then62
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4193
  %bf.load73 = load i64, i64* %36, align 8, !dbg !4193
  %bf.cast755 = and i64 %bf.load73, 65535, !dbg !4194
  %cmp76 = icmp eq i64 %bf.cast755, 141, !dbg !4194
  br i1 %cmp76, label %land.lhs.true78, label %if.else129, !dbg !4195

land.lhs.true78:                                  ; preds = %land.lhs.true71
  %type80 = getelementptr inbounds %union.tree_node, %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4196
  %37 = bitcast %union.tree_node** %type80 to i64**, !dbg !4196
  %38 = load i64*, i64** %37, align 8, !dbg !4196
  %bf.load82 = load i64, i64* %38, align 8, !dbg !4196
  %bf.cast846 = and i64 %bf.load82, 65535, !dbg !4197
  %cmp85 = icmp eq i64 %bf.cast846, 7, !dbg !4197
  br i1 %cmp85, label %land.lhs.true87, label %if.else129, !dbg !4198

land.lhs.true87:                                  ; preds = %land.lhs.true78
  %call88 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call64) #6, !dbg !4199
  %tobool90 = icmp eq i8 %call88, 0, !dbg !4199
  br i1 %tobool90, label %if.else129, label %if.then91, !dbg !4200

if.then91:                                        ; preds = %land.lhs.true87
  %cmp92 = icmp eq i32 %call65, 101, !dbg !4201
  %39 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !4204
  call void @llvm.dbg.value(metadata %struct.edge_def* %39, metadata !4091, metadata !DIExpression()), !dbg !4188
  %call95 = call fastcc %struct.edge_info* @allocate_edge_info(%struct.edge_def* %39) #8, !dbg !4204
  call void @llvm.dbg.value(metadata %struct.edge_info* %call95, metadata !4063, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.value(metadata %struct.edge_info* %call95, metadata !4063, metadata !DIExpression()), !dbg !4109
  %lhs96 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call95, i64 0, i32 0, !dbg !4204
  store %union.tree_node* %call63, %union.tree_node** %lhs96, align 8, !dbg !4204
  %call97 = call i32 @integer_zerop(%union.tree_node* %call64) #6, !dbg !4204
  %tobool98 = icmp ne i32 %call97, 0, !dbg !4204
  br i1 %cmp92, label %if.then94, label %if.else109, !dbg !4205

if.then94:                                        ; preds = %if.then91
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !4206
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !4206
  %cond = select i1 %tobool98, %union.tree_node* %40, %union.tree_node* %41, !dbg !4206
  %rhs99 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call95, i64 0, i32 1, !dbg !4208
  store %union.tree_node* %cond, %union.tree_node** %rhs99, align 8, !dbg !4209
  %42 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !4210
  call void @llvm.dbg.value(metadata %struct.edge_def* %42, metadata !4094, metadata !DIExpression()), !dbg !4188
  %call100 = call fastcc %struct.edge_info* @allocate_edge_info(%struct.edge_def* %42) #8, !dbg !4211
  call void @llvm.dbg.value(metadata %struct.edge_info* %call100, metadata !4063, metadata !DIExpression()), !dbg !4109
  %lhs101 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call100, i64 0, i32 0, !dbg !4212
  store %union.tree_node* %call63, %union.tree_node** %lhs101, align 8, !dbg !4213
  %call102 = call i32 @integer_zerop(%union.tree_node* %call64) #6, !dbg !4214
  %tobool103 = icmp eq i32 %call102, 0, !dbg !4214
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !4214
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !4214
  %cond107 = select i1 %tobool103, %union.tree_node* %44, %union.tree_node* %43, !dbg !4214
  %rhs108 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call100, i64 0, i32 1, !dbg !4215
  store %union.tree_node* %cond107, %union.tree_node** %rhs108, align 8, !dbg !4216
  br label %if.end207, !dbg !4217

if.else109:                                       ; preds = %if.then91
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !4218
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !4218
  %cond117 = select i1 %tobool98, %union.tree_node* %45, %union.tree_node* %46, !dbg !4218
  %rhs118 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call95, i64 0, i32 1, !dbg !4220
  store %union.tree_node* %cond117, %union.tree_node** %rhs118, align 8, !dbg !4221
  %47 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !4222
  call void @llvm.dbg.value(metadata %struct.edge_def* %47, metadata !4094, metadata !DIExpression()), !dbg !4188
  %call119 = call fastcc %struct.edge_info* @allocate_edge_info(%struct.edge_def* %47) #8, !dbg !4223
  call void @llvm.dbg.value(metadata %struct.edge_info* %call119, metadata !4063, metadata !DIExpression()), !dbg !4109
  %lhs120 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call119, i64 0, i32 0, !dbg !4224
  store %union.tree_node* %call63, %union.tree_node** %lhs120, align 8, !dbg !4225
  %call121 = call i32 @integer_zerop(%union.tree_node* %call64) #6, !dbg !4226
  %tobool122 = icmp eq i32 %call121, 0, !dbg !4226
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !4226
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !4226
  %cond126 = select i1 %tobool122, %union.tree_node* %49, %union.tree_node* %48, !dbg !4226
  %rhs127 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call119, i64 0, i32 1, !dbg !4227
  store %union.tree_node* %cond126, %union.tree_node** %rhs127, align 8, !dbg !4228
  br label %if.end207

if.else129:                                       ; preds = %land.lhs.true87, %if.then62, %land.lhs.true78, %land.lhs.true71
  %call130 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call63) #6, !dbg !4229
  %tobool132 = icmp eq i8 %call130, 0, !dbg !4229
  br i1 %tobool132, label %if.else163, label %land.lhs.true133, !dbg !4230

land.lhs.true133:                                 ; preds = %if.else129
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %call64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4231
  %bf.load135 = load i64, i64* %50, align 8, !dbg !4231
  %bf.cast1374 = and i64 %bf.load135, 65535, !dbg !4232
  %cmp138 = icmp eq i64 %bf.cast1374, 141, !dbg !4232
  br i1 %cmp138, label %if.then144, label %lor.lhs.false140, !dbg !4233

lor.lhs.false140:                                 ; preds = %land.lhs.true133
  %call141 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call64) #6, !dbg !4234
  %tobool143 = icmp eq i8 %call141, 0, !dbg !4234
  br i1 %tobool143, label %if.else163, label %if.then144, !dbg !4235

if.then144:                                       ; preds = %lor.lhs.false140, %land.lhs.true133
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4236
  %call146 = call %union.tree_node* @build2_stat(i32 %call65, %union.tree_node* %51, %union.tree_node* %call63, %union.tree_node* %call64) #6, !dbg !4236
  call void @llvm.dbg.value(metadata %union.tree_node* %call146, metadata !4098, metadata !DIExpression()), !dbg !4237
  %call147 = call %union.tree_node* @invert_truthvalue_loc(i32 %call2, %union.tree_node* %call146) #6, !dbg !4238
  call void @llvm.dbg.value(metadata %union.tree_node* %call147, metadata !4102, metadata !DIExpression()), !dbg !4237
  %52 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !4239
  call void @llvm.dbg.value(metadata %struct.edge_def* %52, metadata !4091, metadata !DIExpression()), !dbg !4188
  %call149 = call fastcc %struct.edge_info* @allocate_edge_info(%struct.edge_def* %52) #8, !dbg !4240
  call void @llvm.dbg.value(metadata %struct.edge_info* %call149, metadata !4103, metadata !DIExpression()), !dbg !4237
  call fastcc void @record_conditions(%struct.edge_info* %call149, %union.tree_node* %call146, %union.tree_node* %call147) #8, !dbg !4241
  %cmp150 = icmp eq i32 %call65, 101, !dbg !4242
  br i1 %cmp150, label %if.then152, label %if.end155, !dbg !4244

if.then152:                                       ; preds = %if.then144
  %lhs153 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call149, i64 0, i32 0, !dbg !4245
  store %union.tree_node* %call64, %union.tree_node** %lhs153, align 8, !dbg !4247
  %rhs154 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call149, i64 0, i32 1, !dbg !4248
  store %union.tree_node* %call63, %union.tree_node** %rhs154, align 8, !dbg !4249
  br label %if.end155, !dbg !4250

if.end155:                                        ; preds = %if.then152, %if.then144
  %53 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !4251
  call void @llvm.dbg.value(metadata %struct.edge_def* %53, metadata !4094, metadata !DIExpression()), !dbg !4188
  %call156 = call fastcc %struct.edge_info* @allocate_edge_info(%struct.edge_def* %53) #8, !dbg !4252
  call void @llvm.dbg.value(metadata %struct.edge_info* %call156, metadata !4103, metadata !DIExpression()), !dbg !4237
  call fastcc void @record_conditions(%struct.edge_info* %call156, %union.tree_node* %call147, %union.tree_node* %call146) #8, !dbg !4253
  %cmp157 = icmp eq i32 %call65, 102, !dbg !4254
  br i1 %cmp157, label %if.then159, label %if.end207, !dbg !4256

if.then159:                                       ; preds = %if.end155
  %lhs160 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call156, i64 0, i32 0, !dbg !4257
  store %union.tree_node* %call64, %union.tree_node** %lhs160, align 8, !dbg !4259
  %rhs161 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call156, i64 0, i32 1, !dbg !4260
  store %union.tree_node* %call63, %union.tree_node** %rhs161, align 8, !dbg !4261
  br label %if.end207, !dbg !4262

if.else163:                                       ; preds = %lor.lhs.false140, %if.else129
  %54 = getelementptr inbounds %union.tree_node, %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4263
  %bf.load165 = load i64, i64* %54, align 8, !dbg !4263
  %bf.cast1671 = and i64 %bf.load165, 65535, !dbg !4264
  %cmp168 = icmp eq i64 %bf.cast1671, 141, !dbg !4264
  br i1 %cmp168, label %land.lhs.true170, label %if.end207, !dbg !4265

land.lhs.true170:                                 ; preds = %if.else163
  %call171 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call64) #6, !dbg !4266
  %tobool173 = icmp eq i8 %call171, 0, !dbg !4266
  br i1 %tobool173, label %lor.lhs.false174, label %if.then181, !dbg !4267

lor.lhs.false174:                                 ; preds = %land.lhs.true170
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %call64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4268
  %bf.load176 = load i64, i64* %55, align 8, !dbg !4268
  %bf.cast1782 = and i64 %bf.load176, 65535, !dbg !4269
  %cmp179 = icmp eq i64 %bf.cast1782, 141, !dbg !4269
  br i1 %cmp179, label %if.then181, label %if.end207, !dbg !4270

if.then181:                                       ; preds = %land.lhs.true170, %lor.lhs.false174
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4271
  %call183 = call %union.tree_node* @build2_stat(i32 %call65, %union.tree_node* %56, %union.tree_node* %call63, %union.tree_node* %call64) #6, !dbg !4271
  call void @llvm.dbg.value(metadata %union.tree_node* %call183, metadata !4104, metadata !DIExpression()), !dbg !4272
  %call185 = call %union.tree_node* @invert_truthvalue_loc(i32 %call2, %union.tree_node* %call183) #6, !dbg !4273
  call void @llvm.dbg.value(metadata %union.tree_node* %call185, metadata !4107, metadata !DIExpression()), !dbg !4272
  %57 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !4274
  call void @llvm.dbg.value(metadata %struct.edge_def* %57, metadata !4091, metadata !DIExpression()), !dbg !4188
  %call187 = call fastcc %struct.edge_info* @allocate_edge_info(%struct.edge_def* %57) #8, !dbg !4275
  call void @llvm.dbg.value(metadata %struct.edge_info* %call187, metadata !4108, metadata !DIExpression()), !dbg !4272
  call fastcc void @record_conditions(%struct.edge_info* %call187, %union.tree_node* %call183, %union.tree_node* %call185) #8, !dbg !4276
  %cmp188 = icmp eq i32 %call65, 101, !dbg !4277
  br i1 %cmp188, label %if.then190, label %if.end193, !dbg !4279

if.then190:                                       ; preds = %if.then181
  %lhs191 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call187, i64 0, i32 0, !dbg !4280
  store %union.tree_node* %call63, %union.tree_node** %lhs191, align 8, !dbg !4282
  %rhs192 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call187, i64 0, i32 1, !dbg !4283
  store %union.tree_node* %call64, %union.tree_node** %rhs192, align 8, !dbg !4284
  br label %if.end193, !dbg !4285

if.end193:                                        ; preds = %if.then190, %if.then181
  %58 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !4286
  call void @llvm.dbg.value(metadata %struct.edge_def* %58, metadata !4094, metadata !DIExpression()), !dbg !4188
  %call194 = call fastcc %struct.edge_info* @allocate_edge_info(%struct.edge_def* %58) #8, !dbg !4287
  call void @llvm.dbg.value(metadata %struct.edge_info* %call194, metadata !4108, metadata !DIExpression()), !dbg !4272
  call fastcc void @record_conditions(%struct.edge_info* %call194, %union.tree_node* %call185, %union.tree_node* %call183) #8, !dbg !4288
  %59 = getelementptr inbounds %union.tree_node, %union.tree_node* %call183, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4289
  %bf.load196 = load i64, i64* %59, align 8, !dbg !4289
  %bf.cast1983 = and i64 %bf.load196, 65535, !dbg !4291
  %cmp199 = icmp eq i64 %bf.cast1983, 102, !dbg !4291
  br i1 %cmp199, label %if.then201, label %if.end207, !dbg !4292

if.then201:                                       ; preds = %if.end193
  %lhs202 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call194, i64 0, i32 0, !dbg !4293
  store %union.tree_node* %call63, %union.tree_node** %lhs202, align 8, !dbg !4295
  %rhs203 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %call194, i64 0, i32 1, !dbg !4296
  store %union.tree_node* %call64, %union.tree_node** %rhs203, align 8, !dbg !4297
  br label %if.end207, !dbg !4298

if.end207:                                        ; preds = %if.then159, %if.end155, %if.end193, %if.then201, %lor.lhs.false174, %if.else163, %if.then94, %if.else109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7, !dbg !4299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7, !dbg !4299
  br label %if.end209, !dbg !4300

if.end209:                                        ; preds = %entry, %if.end58, %if.end207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4301
  ret void, !dbg !4301
}

; Function Attrs: nounwind uwtable
define internal fastcc void @cprop_into_successor_phis(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !4302 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp3 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4304, metadata !DIExpression()), !dbg !4319
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !4320
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4320
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4321
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !4321
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4322
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #7, !dbg !4322
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4322
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !4322
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4322
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !4322
  store i32 %4, i32* %3, align 8, !dbg !4322
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4322
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !4322
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !4322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !4322
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #7, !dbg !4322
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4323
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4323
  %9 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4324
  %10 = bitcast %struct.gimple_stmt_iterator* %tmp3 to i8*, !dbg !4324
  br label %for.cond, !dbg !4322

for.cond:                                         ; preds = %cleanup53, %entry
  %11 = load i32, i32* %7, align 8, !dbg !4325
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !4325
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4305, metadata !DIExpression(DW_OP_deref)), !dbg !4319
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %11, %struct.VEC_edge_gc** %12, %struct.edge_def** nonnull %e) #8, !dbg !4325
  %tobool = icmp eq i8 %call1, 0, !dbg !4322
  br i1 %tobool, label %for.end58, label %for.body, !dbg !4322

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7, !dbg !4326
  %13 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4327
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !4305, metadata !DIExpression()), !dbg !4319
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i64 0, i32 7, !dbg !4329
  %14 = load i32, i32* %flags, align 8, !dbg !4329
  %and = and i32 %14, 2, !dbg !4330
  %tobool2 = icmp eq i32 %and, 0, !dbg !4330
  br i1 %tobool2, label %if.end, label %cleanup53, !dbg !4331

if.end:                                           ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7, !dbg !4332
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !4305, metadata !DIExpression()), !dbg !4319
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i64 0, i32 1, !dbg !4333
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4333
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp3, %struct.basic_block_def* %15) #6, !dbg !4332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !4332
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7, !dbg !4332
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4311, metadata !DIExpression(DW_OP_deref)), !dbg !4324
  %call4 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4334
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4334
  br i1 %tobool5, label %if.end7, label %cleanup53, !dbg !4336

if.end7:                                          ; preds = %if.end
  %16 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4337
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !4305, metadata !DIExpression()), !dbg !4319
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %16, i64 0, i32 6, !dbg !4338
  %17 = load i32, i32* %dest_idx, align 4, !dbg !4338
  call void @llvm.dbg.value(metadata i32 %17, metadata !4307, metadata !DIExpression()), !dbg !4324
  br label %for.cond8, !dbg !4339

for.cond8:                                        ; preds = %cleanup, %if.end7
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4311, metadata !DIExpression(DW_OP_deref)), !dbg !4324
  %call9 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4340
  %tobool10 = icmp eq i8 %call9, 0, !dbg !4341
  br i1 %tobool10, label %for.body11, label %cleanup53.loopexit, !dbg !4342

for.body11:                                       ; preds = %for.cond8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4311, metadata !DIExpression(DW_OP_deref)), !dbg !4324
  %call12 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4343
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !4318, metadata !DIExpression()), !dbg !4344
  %call13 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call12, i32 %17) #8, !dbg !4345
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call13, metadata !4316, metadata !DIExpression()), !dbg !4344
  %call14 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call13) #8, !dbg !4346
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !4317, metadata !DIExpression()), !dbg !4344
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4347
  %bf.load = load i64, i64* %18, align 8, !dbg !4347
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !4349
  %cmp = icmp eq i64 %bf.cast2, 141, !dbg !4349
  br i1 %cmp, label %if.end16, label %cleanup, !dbg !4350

if.end16:                                         ; preds = %for.body11
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4351
  %19 = bitcast %union.tree_node** %version to i32*, !dbg !4351
  %20 = load i32, i32* %19, align 8, !dbg !4351
  %21 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !4351
  %base18 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %21, i64 0, i32 0, !dbg !4351
  %call19 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base18) #8, !dbg !4351
  %cmp20 = icmp ult i32 %20, %call19, !dbg !4351
  br i1 %cmp20, label %cond.true21, label %cond.end32, !dbg !4351

cond.true21:                                      ; preds = %if.end16
  %22 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !4351
  %base24 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %22, i64 0, i32 0, !dbg !4351
  %23 = load i32, i32* %19, align 8, !dbg !4351
  %call30 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base24, i32 %23) #8, !dbg !4351
  br label %cond.end32, !dbg !4351

cond.end32:                                       ; preds = %if.end16, %cond.true21
  %cond33 = phi %union.tree_node* [ %call30, %cond.true21 ], [ null, %if.end16 ], !dbg !4351
  call void @llvm.dbg.value(metadata %union.tree_node* %cond33, metadata !4312, metadata !DIExpression()), !dbg !4344
  %tobool34 = icmp ne %union.tree_node* %cond33, null, !dbg !4352
  %cmp35 = icmp ne %union.tree_node* %cond33, %call14, !dbg !4354
  %or.cond = and i1 %tobool34, %cmp35, !dbg !4355
  br i1 %or.cond, label %land.lhs.true36, label %cleanup, !dbg !4355

land.lhs.true36:                                  ; preds = %cond.end32
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4356
  %bf.load38 = load i64, i64* %24, align 8, !dbg !4356
  %bf.cast403 = and i64 %bf.load38, 65535, !dbg !4357
  %cmp41 = icmp eq i64 %bf.cast403, 141, !dbg !4357
  br i1 %cmp41, label %land.lhs.true44, label %lor.lhs.false, !dbg !4358

lor.lhs.false:                                    ; preds = %land.lhs.true36
  %call42 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %cond33) #6, !dbg !4359
  %tobool43 = icmp eq i8 %call42, 0, !dbg !4359
  br i1 %tobool43, label %cleanup, label %land.lhs.true44, !dbg !4360

land.lhs.true44:                                  ; preds = %lor.lhs.false, %land.lhs.true36
  %call45 = call zeroext i8 @may_propagate_copy(%union.tree_node* %call14, %union.tree_node* nonnull %cond33) #6, !dbg !4361
  %tobool47 = icmp eq i8 %call45, 0, !dbg !4361
  br i1 %tobool47, label %cleanup, label %if.then48, !dbg !4362

if.then48:                                        ; preds = %land.lhs.true44
  call void @propagate_value(%struct.ssa_use_operand_d* %call13, %union.tree_node* nonnull %cond33) #6, !dbg !4363
  br label %cleanup, !dbg !4363

cleanup:                                          ; preds = %land.lhs.true44, %lor.lhs.false, %for.body11, %cond.end32, %if.then48
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4311, metadata !DIExpression(DW_OP_deref)), !dbg !4324
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !4364
  br label %for.cond8, !dbg !4365, !llvm.loop !4366

cleanup53.loopexit:                               ; preds = %for.cond8
  br label %cleanup53, !dbg !4368

cleanup53:                                        ; preds = %cleanup53.loopexit, %if.end, %for.body
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7, !dbg !4368
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4306, metadata !DIExpression(DW_OP_deref)), !dbg !4319
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !4325
  br label %for.cond, !dbg !4325, !llvm.loop !4369

for.end58:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !4371
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4371
  ret void, !dbg !4371
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_hash_elt_t_heap_reserve(%struct.VEC_expr_hash_elt_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4372 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack, metadata !4376, metadata !DIExpression()), !dbg !4379
  call void @llvm.dbg.value(metadata i32 1, metadata !4377, metadata !DIExpression()), !dbg !4379
  %0 = load %struct.VEC_expr_hash_elt_t_heap*, %struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack, align 8, !dbg !4380
  %tobool = icmp eq %struct.VEC_expr_hash_elt_t_heap* %0, null, !dbg !4380
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4380

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_expr_hash_elt_t_heap, %struct.VEC_expr_hash_elt_t_heap* %0, i64 0, i32 0, !dbg !4380
  br label %cond.end, !dbg !4380

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_expr_hash_elt_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4380
  %call = tail call fastcc i32 @VEC_expr_hash_elt_t_base_space(%struct.VEC_expr_hash_elt_t_base* %cond, i32 1) #8, !dbg !4380
  %tobool1 = icmp eq i32 %call, 0, !dbg !4380
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4378, metadata !DIExpression()), !dbg !4379
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4380

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack to i8**), align 8, !dbg !4381
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 1) #6, !dbg !4381
  store i8* %call3, i8** bitcast (%struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack to i8**), align 8, !dbg !4381
  br label %if.end, !dbg !4381

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4380
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.expr_hash_elt** @VEC_expr_hash_elt_t_base_quick_push(%struct.VEC_expr_hash_elt_t_base* %vec_, %struct.expr_hash_elt* %obj_) unnamed_addr #0 !dbg !4383 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_hash_elt_t_base* %vec_, metadata !4388, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %obj_, metadata !4389, metadata !DIExpression()), !dbg !4391
  %num1 = getelementptr inbounds %struct.VEC_expr_hash_elt_t_base, %struct.VEC_expr_hash_elt_t_base* %vec_, i64 0, i32 0, !dbg !4392
  %0 = load i32, i32* %num1, align 8, !dbg !4392
  %inc = add i32 %0, 1, !dbg !4392
  store i32 %inc, i32* %num1, align 8, !dbg !4392
  %idxprom = zext i32 %0 to i64, !dbg !4392
  %arrayidx = getelementptr inbounds %struct.VEC_expr_hash_elt_t_base, %struct.VEC_expr_hash_elt_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4392
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt** %arrayidx, metadata !4390, metadata !DIExpression()), !dbg !4391
  store %struct.expr_hash_elt* %obj_, %struct.expr_hash_elt** %arrayidx, align 8, !dbg !4392
  ret %struct.expr_hash_elt** %arrayidx, !dbg !4392
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_hash_elt_t_base_space(%struct.VEC_expr_hash_elt_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4393 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_hash_elt_t_base* %vec_, metadata !4397, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 1, metadata !4398, metadata !DIExpression()), !dbg !4399
  %tobool = icmp eq %struct.VEC_expr_hash_elt_t_base* %vec_, null, !dbg !4400
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4400

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_expr_hash_elt_t_base, %struct.VEC_expr_hash_elt_t_base* %vec_, i64 0, i32 1, !dbg !4400
  %0 = load i32, i32* %alloc, align 4, !dbg !4400
  %num = getelementptr inbounds %struct.VEC_expr_hash_elt_t_base, %struct.VEC_expr_hash_elt_t_base* %vec_, i64 0, i32 0, !dbg !4400
  %1 = load i32, i32* %num, align 8, !dbg !4400
  %cmp1 = icmp ne i32 %0, %1, !dbg !4400
  %phitmp = zext i1 %cmp1 to i32, !dbg !4400
  br label %cond.end, !dbg !4400

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4400

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !4400
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4401 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** @const_and_copies_stack, metadata !4405, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4406, metadata !DIExpression()), !dbg !4408
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @const_and_copies_stack, align 8, !dbg !4409
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !4409
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4409

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !4409
  br label %cond.end, !dbg !4409

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4409
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 %alloc_) #8, !dbg !4409
  %tobool1 = icmp eq i32 %call, 0, !dbg !4409
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4407, metadata !DIExpression()), !dbg !4408
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4409

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_tree_heap** @const_and_copies_stack to i8**), align 8, !dbg !4410
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 %alloc_) #6, !dbg !4410
  store i8* %call3, i8** bitcast (%struct.VEC_tree_heap** @const_and_copies_stack to i8**), align 8, !dbg !4410
  br label %if.end, !dbg !4410

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4409
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !4412 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4417, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !4418, metadata !DIExpression()), !dbg !4420
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4421
  %0 = load i32, i32* %num1, align 8, !dbg !4421
  %inc = add i32 %0, 1, !dbg !4421
  store i32 %inc, i32* %num1, align 8, !dbg !4421
  %idxprom = zext i32 %0 to i64, !dbg !4421
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4421
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !4419, metadata !DIExpression()), !dbg !4420
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !4421
  ret %union.tree_node** %arrayidx, !dbg !4421
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4422 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4426, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4427, metadata !DIExpression()), !dbg !4428
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4429
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4429

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !4429
  %0 = load i32, i32* %alloc, align 4, !dbg !4429
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4429
  %1 = load i32, i32* %num, align 8, !dbg !4429
  %sub = sub i32 %0, %1, !dbg !4429
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !4429
  br label %cond.end, !dbg !4429

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !4429
  br label %cond.end, !dbg !4429

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !4429
  ret i32 %cond, !dbg !4429
}

declare dso_local %struct.basic_block_def* @get_immediate_dominator(i32, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_def* @single_incoming_edge_ignoring_loop_edges(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !4430 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4434, metadata !DIExpression()), !dbg !4438
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !4435, metadata !DIExpression()), !dbg !4438
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !4439
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4439
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4440
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !4440
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4441
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #7, !dbg !4441
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !4441
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !4441
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4441
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !4441
  store i32 %4, i32* %3, align 8, !dbg !4441
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4441
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !4441
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !4441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !4441
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #7, !dbg !4441
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4443
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4443
  br label %for.cond, !dbg !4441

for.cond:                                         ; preds = %for.inc, %entry
  %retval1.0 = phi %struct.edge_def* [ null, %entry ], [ %retval1.1, %for.inc ], !dbg !4445
  call void @llvm.dbg.value(metadata %struct.edge_def* %retval1.0, metadata !4435, metadata !DIExpression()), !dbg !4438
  %9 = load i32, i32* %7, align 8, !dbg !4446
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !4446
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4436, metadata !DIExpression(DW_OP_deref)), !dbg !4438
  %call2 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #8, !dbg !4446
  %tobool = icmp eq i8 %call2, 0, !dbg !4441
  br i1 %tobool, label %cleanup, label %for.body, !dbg !4441

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4447
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !4436, metadata !DIExpression()), !dbg !4438
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 0, !dbg !4450
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4450
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !4436, metadata !DIExpression()), !dbg !4438
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 1, !dbg !4451
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4451
  %call3 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %12, %struct.basic_block_def* %13) #6, !dbg !4452
  %tobool4 = icmp eq i8 %call3, 0, !dbg !4452
  br i1 %tobool4, label %if.end, label %for.inc, !dbg !4453

if.end:                                           ; preds = %for.body
  %tobool5 = icmp eq %struct.edge_def* %retval1.0, null, !dbg !4454
  br i1 %tobool5, label %if.end7, label %cleanup, !dbg !4456

if.end7:                                          ; preds = %if.end
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4457
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !4436, metadata !DIExpression()), !dbg !4438
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !4435, metadata !DIExpression()), !dbg !4438
  br label %for.inc, !dbg !4458

for.inc:                                          ; preds = %for.body, %if.end7
  %retval1.1 = phi %struct.edge_def* [ %14, %if.end7 ], [ %retval1.0, %for.body ], !dbg !4438
  call void @llvm.dbg.value(metadata %struct.edge_def* %retval1.1, metadata !4435, metadata !DIExpression()), !dbg !4438
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4437, metadata !DIExpression(DW_OP_deref)), !dbg !4438
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !4446
  br label %for.cond, !dbg !4446, !llvm.loop !4459

cleanup:                                          ; preds = %if.end, %for.cond
  %retval.0 = phi %struct.edge_def* [ null, %if.end ], [ %retval1.0, %for.cond ], !dbg !4438
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !4461
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4461
  ret %struct.edge_def* %retval.0, !dbg !4461
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_equality(%union.tree_node* %x, %union.tree_node* %y) unnamed_addr #5 !dbg !4462 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !4466, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata %union.tree_node* %y, metadata !4467, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4468, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4469, metadata !DIExpression()), !dbg !4470
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4471
  %bf.load = load i64, i64* %0, align 8, !dbg !4471
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4473
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4473
  br i1 %cmp, label %if.then, label %if.end, !dbg !4474

if.then:                                          ; preds = %entry
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4475
  %1 = bitcast %union.tree_node** %version to i32*, !dbg !4475
  %2 = load i32, i32* %1, align 8, !dbg !4475
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !4475
  %base1 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !4475
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base1) #8, !dbg !4475
  %cmp2 = icmp ult i32 %2, %call, !dbg !4475
  br i1 %cmp2, label %cond.true3, label %if.end, !dbg !4475

cond.true3:                                       ; preds = %if.then
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !4475
  %base6 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !4475
  %5 = load i32, i32* %1, align 8, !dbg !4475
  %call12 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base6, i32 %5) #8, !dbg !4475
  br label %if.end, !dbg !4475

if.end:                                           ; preds = %cond.true3, %if.then, %entry
  %prev_x.0 = phi %union.tree_node* [ null, %entry ], [ %call12, %cond.true3 ], [ null, %if.then ], !dbg !4470
  call void @llvm.dbg.value(metadata %union.tree_node* %prev_x.0, metadata !4468, metadata !DIExpression()), !dbg !4470
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %y, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4476
  %bf.load17 = load i64, i64* %6, align 8, !dbg !4476
  %bf.cast192 = and i64 %bf.load17, 65535, !dbg !4478
  %cmp20 = icmp eq i64 %bf.cast192, 141, !dbg !4478
  br i1 %cmp20, label %if.then21, label %if.end45, !dbg !4479

if.then21:                                        ; preds = %if.end
  %version23 = getelementptr inbounds %union.tree_node, %union.tree_node* %y, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4480
  %7 = bitcast %union.tree_node** %version23 to i32*, !dbg !4480
  %8 = load i32, i32* %7, align 8, !dbg !4480
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !4480
  %base26 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !4480
  %call30 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base26) #8, !dbg !4480
  %cmp31 = icmp ult i32 %8, %call30, !dbg !4480
  br i1 %cmp31, label %cond.true32, label %if.end45, !dbg !4480

cond.true32:                                      ; preds = %if.then21
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !4480
  %base35 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !4480
  %11 = load i32, i32* %7, align 8, !dbg !4480
  %call41 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base35, i32 %11) #8, !dbg !4480
  br label %if.end45, !dbg !4480

if.end45:                                         ; preds = %cond.true32, %if.then21, %if.end
  %prev_y.0 = phi %union.tree_node* [ null, %if.end ], [ %call41, %cond.true32 ], [ null, %if.then21 ], !dbg !4470
  call void @llvm.dbg.value(metadata %union.tree_node* %prev_y.0, metadata !4469, metadata !DIExpression()), !dbg !4470
  %call46 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %y) #6, !dbg !4481
  %tobool47 = icmp eq i8 %call46, 0, !dbg !4481
  br i1 %tobool47, label %if.else, label %if.end68, !dbg !4483

if.else:                                          ; preds = %if.end45
  %call49 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %x) #6, !dbg !4484
  %tobool50 = icmp eq i8 %call49, 0, !dbg !4484
  br i1 %tobool50, label %lor.lhs.false, label %if.end68, !dbg !4486

lor.lhs.false:                                    ; preds = %if.else
  %call51 = tail call i32 @loop_depth_of_name(%union.tree_node* %x) #8, !dbg !4487
  %call52 = tail call i32 @loop_depth_of_name(%union.tree_node* %y) #8, !dbg !4488
  %cmp53 = icmp sgt i32 %call51, %call52, !dbg !4489
  br i1 %cmp53, label %if.else56, label %if.end68, !dbg !4490

if.else56:                                        ; preds = %lor.lhs.false
  %tobool57 = icmp eq %union.tree_node* %prev_x.0, null, !dbg !4491
  br i1 %tobool57, label %if.else62, label %land.lhs.true, !dbg !4493

land.lhs.true:                                    ; preds = %if.else56
  %call58 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %prev_x.0) #6, !dbg !4494
  %tobool60 = icmp eq i8 %call58, 0, !dbg !4494
  br i1 %tobool60, label %if.else62, label %if.end68, !dbg !4495

if.else62:                                        ; preds = %land.lhs.true, %if.else56
  %tobool63 = icmp eq %union.tree_node* %prev_y.0, null, !dbg !4496
  %spec.select = select i1 %tobool63, %union.tree_node* %y, %union.tree_node* %prev_y.0, !dbg !4498
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !4467, metadata !DIExpression()), !dbg !4470
  br label %if.end68

if.end68:                                         ; preds = %land.lhs.true, %lor.lhs.false, %if.else, %if.end45, %if.else62
  %prev_x.3 = phi %union.tree_node* [ %prev_x.0, %if.end45 ], [ %prev_y.0, %lor.lhs.false ], [ %prev_y.0, %if.else ], [ %prev_x.0, %if.else62 ], [ %prev_y.0, %land.lhs.true ], !dbg !4470
  %y.addr.3 = phi %union.tree_node* [ %y, %if.end45 ], [ %x, %lor.lhs.false ], [ %x, %if.else ], [ %spec.select, %if.else62 ], [ %prev_x.0, %land.lhs.true ]
  %x.addr.2 = phi %union.tree_node* [ %x, %if.end45 ], [ %y, %lor.lhs.false ], [ %y, %if.else ], [ %x, %if.else62 ], [ %y, %land.lhs.true ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.2, metadata !4466, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata %union.tree_node* %y.addr.3, metadata !4467, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata %union.tree_node* %prev_x.3, metadata !4468, metadata !DIExpression()), !dbg !4470
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4499
  %bf.load70 = load i64, i64* %12, align 8, !dbg !4499
  %bf.cast723 = and i64 %bf.load70, 65535, !dbg !4501
  %cmp73 = icmp eq i64 %bf.cast723, 141, !dbg !4501
  br i1 %cmp73, label %if.end76, label %cleanup.cont, !dbg !4502

if.end76:                                         ; preds = %if.end68
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4503
  %13 = bitcast %union.tree_node** %type to i64**, !dbg !4503
  %14 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load78 = load i64, i64* %14, align 8, !dbg !4503
  %bf.cast804 = and i64 %bf.load78, 65535, !dbg !4503
  %cmp81 = icmp eq i64 %bf.cast804, 14, !dbg !4503
  br i1 %cmp81, label %cond.true83, label %cond.false87, !dbg !4503

cond.true83:                                      ; preds = %if.end76
  %.cast = bitcast i64* %14 to %union.tree_node*, !dbg !4503
  %call86 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !4503
  br label %cond.end93, !dbg !4503

cond.false87:                                     ; preds = %if.end76
  %type90 = bitcast i64* %14 to %struct.tree_type*, !dbg !4503
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type90, i64 0, i32 6, !dbg !4503
  %bf.load91 = load i32, i32* %mode, align 4, !dbg !4503
  %bf.lshr = lshr i32 %bf.load91, 16, !dbg !4503
  %bf.clear92 = and i32 %bf.lshr, 255, !dbg !4503
  br label %cond.end93, !dbg !4503

cond.end93:                                       ; preds = %cond.false87, %cond.true83
  %cond94 = phi i32 [ %call86, %cond.true83 ], [ %bf.clear92, %cond.false87 ], !dbg !4503
  %idxprom = zext i32 %cond94 to i64, !dbg !4503
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4503
  %15 = load i8, i8* %arrayidx, align 1, !dbg !4503
  %cmp96 = icmp eq i8 %15, 8, !dbg !4503
  br i1 %cmp96, label %land.lhs.true182, label %lor.lhs.false98, !dbg !4503

lor.lhs.false98:                                  ; preds = %cond.end93
  %16 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load102 = load i64, i64* %16, align 8, !dbg !4503
  %bf.cast1045 = and i64 %bf.load102, 65535, !dbg !4503
  %cmp105 = icmp eq i64 %bf.cast1045, 14, !dbg !4503
  br i1 %cmp105, label %cond.true107, label %cond.false111, !dbg !4503

cond.true107:                                     ; preds = %lor.lhs.false98
  %.cast6 = bitcast i64* %16 to %union.tree_node*, !dbg !4503
  %call110 = tail call i32 @vector_type_mode(%union.tree_node* %.cast6) #6, !dbg !4503
  br label %cond.end119, !dbg !4503

cond.false111:                                    ; preds = %lor.lhs.false98
  %type114 = bitcast i64* %16 to %struct.tree_type*, !dbg !4503
  %mode115 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type114, i64 0, i32 6, !dbg !4503
  %bf.load116 = load i32, i32* %mode115, align 4, !dbg !4503
  %bf.lshr117 = lshr i32 %bf.load116, 16, !dbg !4503
  %bf.clear118 = and i32 %bf.lshr117, 255, !dbg !4503
  br label %cond.end119, !dbg !4503

cond.end119:                                      ; preds = %cond.false111, %cond.true107
  %cond120 = phi i32 [ %call110, %cond.true107 ], [ %bf.clear118, %cond.false111 ], !dbg !4503
  %idxprom121 = zext i32 %cond120 to i64, !dbg !4503
  %arrayidx122 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom121, !dbg !4503
  %17 = load i8, i8* %arrayidx122, align 1, !dbg !4503
  %cmp124 = icmp eq i8 %17, 9, !dbg !4503
  br i1 %cmp124, label %land.lhs.true182, label %lor.lhs.false126, !dbg !4503

lor.lhs.false126:                                 ; preds = %cond.end119
  %18 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load130 = load i64, i64* %18, align 8, !dbg !4503
  %bf.cast1327 = and i64 %bf.load130, 65535, !dbg !4503
  %cmp133 = icmp eq i64 %bf.cast1327, 14, !dbg !4503
  br i1 %cmp133, label %cond.true135, label %cond.false139, !dbg !4503

cond.true135:                                     ; preds = %lor.lhs.false126
  %.cast8 = bitcast i64* %18 to %union.tree_node*, !dbg !4503
  %call138 = tail call i32 @vector_type_mode(%union.tree_node* %.cast8) #6, !dbg !4503
  br label %cond.end147, !dbg !4503

cond.false139:                                    ; preds = %lor.lhs.false126
  %type142 = bitcast i64* %18 to %struct.tree_type*, !dbg !4503
  %mode143 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type142, i64 0, i32 6, !dbg !4503
  %bf.load144 = load i32, i32* %mode143, align 4, !dbg !4503
  %bf.lshr145 = lshr i32 %bf.load144, 16, !dbg !4503
  %bf.clear146 = and i32 %bf.lshr145, 255, !dbg !4503
  br label %cond.end147, !dbg !4503

cond.end147:                                      ; preds = %cond.false139, %cond.true135
  %cond148 = phi i32 [ %call138, %cond.true135 ], [ %bf.clear146, %cond.false139 ], !dbg !4503
  %idxprom149 = zext i32 %cond148 to i64, !dbg !4503
  %arrayidx150 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom149, !dbg !4503
  %19 = load i8, i8* %arrayidx150, align 1, !dbg !4503
  %cmp152 = icmp eq i8 %19, 11, !dbg !4503
  br i1 %cmp152, label %land.lhs.true182, label %lor.lhs.false154, !dbg !4503

lor.lhs.false154:                                 ; preds = %cond.end147
  %20 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load158 = load i64, i64* %20, align 8, !dbg !4503
  %bf.cast1609 = and i64 %bf.load158, 65535, !dbg !4503
  %cmp161 = icmp eq i64 %bf.cast1609, 14, !dbg !4503
  br i1 %cmp161, label %cond.true163, label %cond.false167, !dbg !4503

cond.true163:                                     ; preds = %lor.lhs.false154
  %.cast10 = bitcast i64* %20 to %union.tree_node*, !dbg !4503
  %call166 = tail call i32 @vector_type_mode(%union.tree_node* %.cast10) #6, !dbg !4503
  br label %cond.end175, !dbg !4503

cond.false167:                                    ; preds = %lor.lhs.false154
  %type170 = bitcast i64* %20 to %struct.tree_type*, !dbg !4503
  %mode171 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type170, i64 0, i32 6, !dbg !4503
  %bf.load172 = load i32, i32* %mode171, align 4, !dbg !4503
  %bf.lshr173 = lshr i32 %bf.load172, 16, !dbg !4503
  %bf.clear174 = and i32 %bf.lshr173, 255, !dbg !4503
  br label %cond.end175, !dbg !4503

cond.end175:                                      ; preds = %cond.false167, %cond.true163
  %cond176 = phi i32 [ %call166, %cond.true163 ], [ %bf.clear174, %cond.false167 ], !dbg !4503
  %idxprom177 = zext i32 %cond176 to i64, !dbg !4503
  %arrayidx178 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom177, !dbg !4503
  %21 = load i8, i8* %arrayidx178, align 1, !dbg !4503
  %cmp180 = icmp eq i8 %21, 17, !dbg !4503
  br i1 %cmp180, label %land.lhs.true182, label %if.end529, !dbg !4503

land.lhs.true182:                                 ; preds = %cond.end175, %cond.end147, %cond.end119, %cond.end93
  %22 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load186 = load i64, i64* %22, align 8, !dbg !4503
  %bf.cast18811 = and i64 %bf.load186, 65535, !dbg !4503
  %cmp189 = icmp eq i64 %bf.cast18811, 14, !dbg !4503
  br i1 %cmp189, label %cond.true191, label %cond.false195, !dbg !4503

cond.true191:                                     ; preds = %land.lhs.true182
  %.cast12 = bitcast i64* %22 to %union.tree_node*, !dbg !4503
  %call194 = tail call i32 @vector_type_mode(%union.tree_node* %.cast12) #6, !dbg !4503
  br label %cond.end203, !dbg !4503

cond.false195:                                    ; preds = %land.lhs.true182
  %type198 = bitcast i64* %22 to %struct.tree_type*, !dbg !4503
  %mode199 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type198, i64 0, i32 6, !dbg !4503
  %bf.load200 = load i32, i32* %mode199, align 4, !dbg !4503
  %bf.lshr201 = lshr i32 %bf.load200, 16, !dbg !4503
  %bf.clear202 = and i32 %bf.lshr201, 255, !dbg !4503
  br label %cond.end203, !dbg !4503

cond.end203:                                      ; preds = %cond.false195, %cond.true191
  %cond204 = phi i32 [ %call194, %cond.true191 ], [ %bf.clear202, %cond.false195 ], !dbg !4503
  %idxprom205 = zext i32 %cond204 to i64, !dbg !4503
  %arrayidx206 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom205, !dbg !4503
  %23 = load i8, i8* %arrayidx206, align 1, !dbg !4503
  %cmp208 = icmp eq i8 %23, 8, !dbg !4503
  br i1 %cmp208, label %cond.true238, label %lor.lhs.false210, !dbg !4503

lor.lhs.false210:                                 ; preds = %cond.end203
  %24 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load214 = load i64, i64* %24, align 8, !dbg !4503
  %bf.cast21613 = and i64 %bf.load214, 65535, !dbg !4503
  %cmp217 = icmp eq i64 %bf.cast21613, 14, !dbg !4503
  br i1 %cmp217, label %cond.true219, label %cond.false223, !dbg !4503

cond.true219:                                     ; preds = %lor.lhs.false210
  %.cast14 = bitcast i64* %24 to %union.tree_node*, !dbg !4503
  %call222 = tail call i32 @vector_type_mode(%union.tree_node* %.cast14) #6, !dbg !4503
  br label %cond.end231, !dbg !4503

cond.false223:                                    ; preds = %lor.lhs.false210
  %type226 = bitcast i64* %24 to %struct.tree_type*, !dbg !4503
  %mode227 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type226, i64 0, i32 6, !dbg !4503
  %bf.load228 = load i32, i32* %mode227, align 4, !dbg !4503
  %bf.lshr229 = lshr i32 %bf.load228, 16, !dbg !4503
  %bf.clear230 = and i32 %bf.lshr229, 255, !dbg !4503
  br label %cond.end231, !dbg !4503

cond.end231:                                      ; preds = %cond.false223, %cond.true219
  %cond232 = phi i32 [ %call222, %cond.true219 ], [ %bf.clear230, %cond.false223 ], !dbg !4503
  %idxprom233 = zext i32 %cond232 to i64, !dbg !4503
  %arrayidx234 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom233, !dbg !4503
  %25 = load i8, i8* %arrayidx234, align 1, !dbg !4503
  %cmp236 = icmp eq i8 %25, 9, !dbg !4503
  br i1 %cmp236, label %cond.true238, label %cond.false261, !dbg !4503

cond.true238:                                     ; preds = %cond.end231, %cond.end203
  %26 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load242 = load i64, i64* %26, align 8, !dbg !4503
  %bf.cast24432 = and i64 %bf.load242, 65535, !dbg !4503
  %cmp245 = icmp eq i64 %bf.cast24432, 14, !dbg !4503
  br i1 %cmp245, label %cond.true247, label %cond.false251, !dbg !4503

cond.true247:                                     ; preds = %cond.true238
  %.cast33 = bitcast i64* %26 to %union.tree_node*, !dbg !4503
  %call250 = tail call i32 @vector_type_mode(%union.tree_node* %.cast33) #6, !dbg !4503
  br label %cond.end287, !dbg !4503

cond.false251:                                    ; preds = %cond.true238
  %type254 = bitcast i64* %26 to %struct.tree_type*, !dbg !4503
  %mode255 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type254, i64 0, i32 6, !dbg !4503
  %bf.load256 = load i32, i32* %mode255, align 4, !dbg !4503
  %bf.lshr257 = lshr i32 %bf.load256, 16, !dbg !4503
  %bf.clear258 = and i32 %bf.lshr257, 255, !dbg !4503
  br label %cond.end287, !dbg !4503

cond.false261:                                    ; preds = %cond.end231
  %27 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load265 = load i64, i64* %27, align 8, !dbg !4503
  %bf.cast26715 = and i64 %bf.load265, 65535, !dbg !4503
  %cmp268 = icmp eq i64 %bf.cast26715, 14, !dbg !4503
  br i1 %cmp268, label %cond.true270, label %cond.false274, !dbg !4503

cond.true270:                                     ; preds = %cond.false261
  %.cast16 = bitcast i64* %27 to %union.tree_node*, !dbg !4503
  %call273 = tail call i32 @vector_type_mode(%union.tree_node* %.cast16) #6, !dbg !4503
  br label %cond.end282, !dbg !4503

cond.false274:                                    ; preds = %cond.false261
  %type277 = bitcast i64* %27 to %struct.tree_type*, !dbg !4503
  %mode278 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type277, i64 0, i32 6, !dbg !4503
  %bf.load279 = load i32, i32* %mode278, align 4, !dbg !4503
  %bf.lshr280 = lshr i32 %bf.load279, 16, !dbg !4503
  %bf.clear281 = and i32 %bf.lshr280, 255, !dbg !4503
  br label %cond.end282, !dbg !4503

cond.end282:                                      ; preds = %cond.false274, %cond.true270
  %cond283 = phi i32 [ %call273, %cond.true270 ], [ %bf.clear281, %cond.false274 ], !dbg !4503
  %idxprom284 = zext i32 %cond283 to i64, !dbg !4503
  %arrayidx285 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom284, !dbg !4503
  %28 = load i8, i8* %arrayidx285, align 1, !dbg !4503
  %conv286 = zext i8 %28 to i32, !dbg !4503
  br label %cond.end287, !dbg !4503

cond.end287:                                      ; preds = %cond.true247, %cond.false251, %cond.end282
  %cond288 = phi i32 [ %conv286, %cond.end282 ], [ %call250, %cond.true247 ], [ %bf.clear258, %cond.false251 ], !dbg !4503
  %idxprom289 = zext i32 %cond288 to i64, !dbg !4503
  %arrayidx290 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom289, !dbg !4503
  %29 = load i8, i8* %arrayidx290, align 1, !dbg !4503
  %cmp292 = icmp eq i8 %29, 9, !dbg !4503
  %30 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load298 = load i64, i64* %30, align 8, !dbg !4503
  %bf.cast30017 = and i64 %bf.load298, 65535, !dbg !4503
  %cmp301 = icmp eq i64 %bf.cast30017, 14, !dbg !4503
  %.cast18 = bitcast i64* %30 to %union.tree_node*, !dbg !4503
  br i1 %cmp292, label %cond.true294, label %cond.false401, !dbg !4503

cond.true294:                                     ; preds = %cond.end287
  br i1 %cmp301, label %cond.true303, label %cond.false307, !dbg !4503

cond.true303:                                     ; preds = %cond.true294
  %call306 = tail call i32 @vector_type_mode(%union.tree_node* %.cast18) #6, !dbg !4503
  br label %cond.end315, !dbg !4503

cond.false307:                                    ; preds = %cond.true294
  %type310 = bitcast i64* %30 to %struct.tree_type*, !dbg !4503
  %mode311 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type310, i64 0, i32 6, !dbg !4503
  %bf.load312 = load i32, i32* %mode311, align 4, !dbg !4503
  %bf.lshr313 = lshr i32 %bf.load312, 16, !dbg !4503
  %bf.clear314 = and i32 %bf.lshr313, 255, !dbg !4503
  br label %cond.end315, !dbg !4503

cond.end315:                                      ; preds = %cond.false307, %cond.true303
  %cond316 = phi i32 [ %call306, %cond.true303 ], [ %bf.clear314, %cond.false307 ], !dbg !4503
  %idxprom317 = zext i32 %cond316 to i64, !dbg !4503
  %arrayidx318 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom317, !dbg !4503
  %31 = load i8, i8* %arrayidx318, align 1, !dbg !4503
  %cmp320 = icmp eq i8 %31, 8, !dbg !4503
  br i1 %cmp320, label %cond.true350, label %lor.lhs.false322, !dbg !4503

lor.lhs.false322:                                 ; preds = %cond.end315
  %32 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load326 = load i64, i64* %32, align 8, !dbg !4503
  %bf.cast32826 = and i64 %bf.load326, 65535, !dbg !4503
  %cmp329 = icmp eq i64 %bf.cast32826, 14, !dbg !4503
  br i1 %cmp329, label %cond.true331, label %cond.false335, !dbg !4503

cond.true331:                                     ; preds = %lor.lhs.false322
  %.cast27 = bitcast i64* %32 to %union.tree_node*, !dbg !4503
  %call334 = tail call i32 @vector_type_mode(%union.tree_node* %.cast27) #6, !dbg !4503
  br label %cond.end343, !dbg !4503

cond.false335:                                    ; preds = %lor.lhs.false322
  %type338 = bitcast i64* %32 to %struct.tree_type*, !dbg !4503
  %mode339 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type338, i64 0, i32 6, !dbg !4503
  %bf.load340 = load i32, i32* %mode339, align 4, !dbg !4503
  %bf.lshr341 = lshr i32 %bf.load340, 16, !dbg !4503
  %bf.clear342 = and i32 %bf.lshr341, 255, !dbg !4503
  br label %cond.end343, !dbg !4503

cond.end343:                                      ; preds = %cond.false335, %cond.true331
  %cond344 = phi i32 [ %call334, %cond.true331 ], [ %bf.clear342, %cond.false335 ], !dbg !4503
  %idxprom345 = zext i32 %cond344 to i64, !dbg !4503
  %arrayidx346 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom345, !dbg !4503
  %33 = load i8, i8* %arrayidx346, align 1, !dbg !4503
  %cmp348 = icmp eq i8 %33, 9, !dbg !4503
  br i1 %cmp348, label %cond.true350, label %cond.false373, !dbg !4503

cond.true350:                                     ; preds = %cond.end343, %cond.end315
  %34 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load354 = load i64, i64* %34, align 8, !dbg !4503
  %bf.cast35630 = and i64 %bf.load354, 65535, !dbg !4503
  %cmp357 = icmp eq i64 %bf.cast35630, 14, !dbg !4503
  br i1 %cmp357, label %cond.true359, label %cond.false363, !dbg !4503

cond.true359:                                     ; preds = %cond.true350
  %.cast31 = bitcast i64* %34 to %union.tree_node*, !dbg !4503
  %call362 = tail call i32 @vector_type_mode(%union.tree_node* %.cast31) #6, !dbg !4503
  br label %cond.end399, !dbg !4503

cond.false363:                                    ; preds = %cond.true350
  %type366 = bitcast i64* %34 to %struct.tree_type*, !dbg !4503
  %mode367 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type366, i64 0, i32 6, !dbg !4503
  %bf.load368 = load i32, i32* %mode367, align 4, !dbg !4503
  %bf.lshr369 = lshr i32 %bf.load368, 16, !dbg !4503
  %bf.clear370 = and i32 %bf.lshr369, 255, !dbg !4503
  br label %cond.end399, !dbg !4503

cond.false373:                                    ; preds = %cond.end343
  %35 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load377 = load i64, i64* %35, align 8, !dbg !4503
  %bf.cast37928 = and i64 %bf.load377, 65535, !dbg !4503
  %cmp380 = icmp eq i64 %bf.cast37928, 14, !dbg !4503
  br i1 %cmp380, label %cond.true382, label %cond.false386, !dbg !4503

cond.true382:                                     ; preds = %cond.false373
  %.cast29 = bitcast i64* %35 to %union.tree_node*, !dbg !4503
  %call385 = tail call i32 @vector_type_mode(%union.tree_node* %.cast29) #6, !dbg !4503
  br label %cond.end394, !dbg !4503

cond.false386:                                    ; preds = %cond.false373
  %type389 = bitcast i64* %35 to %struct.tree_type*, !dbg !4503
  %mode390 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type389, i64 0, i32 6, !dbg !4503
  %bf.load391 = load i32, i32* %mode390, align 4, !dbg !4503
  %bf.lshr392 = lshr i32 %bf.load391, 16, !dbg !4503
  %bf.clear393 = and i32 %bf.lshr392, 255, !dbg !4503
  br label %cond.end394, !dbg !4503

cond.end394:                                      ; preds = %cond.false386, %cond.true382
  %cond395 = phi i32 [ %call385, %cond.true382 ], [ %bf.clear393, %cond.false386 ], !dbg !4503
  %idxprom396 = zext i32 %cond395 to i64, !dbg !4503
  %arrayidx397 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom396, !dbg !4503
  %36 = load i8, i8* %arrayidx397, align 1, !dbg !4503
  %conv398 = zext i8 %36 to i32, !dbg !4503
  br label %cond.end399, !dbg !4503

cond.end399:                                      ; preds = %cond.true359, %cond.false363, %cond.end394
  %cond400 = phi i32 [ %conv398, %cond.end394 ], [ %call362, %cond.true359 ], [ %bf.clear370, %cond.false363 ], !dbg !4503
  br label %cond.end509, !dbg !4503

cond.false401:                                    ; preds = %cond.end287
  br i1 %cmp301, label %cond.true410, label %cond.false414, !dbg !4503

cond.true410:                                     ; preds = %cond.false401
  %call413 = tail call i32 @vector_type_mode(%union.tree_node* %.cast18) #6, !dbg !4503
  br label %cond.end422, !dbg !4503

cond.false414:                                    ; preds = %cond.false401
  %type417 = bitcast i64* %30 to %struct.tree_type*, !dbg !4503
  %mode418 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type417, i64 0, i32 6, !dbg !4503
  %bf.load419 = load i32, i32* %mode418, align 4, !dbg !4503
  %bf.lshr420 = lshr i32 %bf.load419, 16, !dbg !4503
  %bf.clear421 = and i32 %bf.lshr420, 255, !dbg !4503
  br label %cond.end422, !dbg !4503

cond.end422:                                      ; preds = %cond.false414, %cond.true410
  %cond423 = phi i32 [ %call413, %cond.true410 ], [ %bf.clear421, %cond.false414 ], !dbg !4503
  %idxprom424 = zext i32 %cond423 to i64, !dbg !4503
  %arrayidx425 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom424, !dbg !4503
  %37 = load i8, i8* %arrayidx425, align 1, !dbg !4503
  %cmp427 = icmp eq i8 %37, 8, !dbg !4503
  br i1 %cmp427, label %cond.true457, label %lor.lhs.false429, !dbg !4503

lor.lhs.false429:                                 ; preds = %cond.end422
  %38 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load433 = load i64, i64* %38, align 8, !dbg !4503
  %bf.cast43519 = and i64 %bf.load433, 65535, !dbg !4503
  %cmp436 = icmp eq i64 %bf.cast43519, 14, !dbg !4503
  br i1 %cmp436, label %cond.true438, label %cond.false442, !dbg !4503

cond.true438:                                     ; preds = %lor.lhs.false429
  %.cast20 = bitcast i64* %38 to %union.tree_node*, !dbg !4503
  %call441 = tail call i32 @vector_type_mode(%union.tree_node* %.cast20) #6, !dbg !4503
  br label %cond.end450, !dbg !4503

cond.false442:                                    ; preds = %lor.lhs.false429
  %type445 = bitcast i64* %38 to %struct.tree_type*, !dbg !4503
  %mode446 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type445, i64 0, i32 6, !dbg !4503
  %bf.load447 = load i32, i32* %mode446, align 4, !dbg !4503
  %bf.lshr448 = lshr i32 %bf.load447, 16, !dbg !4503
  %bf.clear449 = and i32 %bf.lshr448, 255, !dbg !4503
  br label %cond.end450, !dbg !4503

cond.end450:                                      ; preds = %cond.false442, %cond.true438
  %cond451 = phi i32 [ %call441, %cond.true438 ], [ %bf.clear449, %cond.false442 ], !dbg !4503
  %idxprom452 = zext i32 %cond451 to i64, !dbg !4503
  %arrayidx453 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom452, !dbg !4503
  %39 = load i8, i8* %arrayidx453, align 1, !dbg !4503
  %cmp455 = icmp eq i8 %39, 9, !dbg !4503
  br i1 %cmp455, label %cond.true457, label %cond.false480, !dbg !4503

cond.true457:                                     ; preds = %cond.end450, %cond.end422
  %40 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load461 = load i64, i64* %40, align 8, !dbg !4503
  %bf.cast46324 = and i64 %bf.load461, 65535, !dbg !4503
  %cmp464 = icmp eq i64 %bf.cast46324, 14, !dbg !4503
  br i1 %cmp464, label %cond.true466, label %cond.false470, !dbg !4503

cond.true466:                                     ; preds = %cond.true457
  %.cast25 = bitcast i64* %40 to %union.tree_node*, !dbg !4503
  %call469 = tail call i32 @vector_type_mode(%union.tree_node* %.cast25) #6, !dbg !4503
  br label %cond.end506, !dbg !4503

cond.false470:                                    ; preds = %cond.true457
  %type473 = bitcast i64* %40 to %struct.tree_type*, !dbg !4503
  %mode474 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type473, i64 0, i32 6, !dbg !4503
  %bf.load475 = load i32, i32* %mode474, align 4, !dbg !4503
  %bf.lshr476 = lshr i32 %bf.load475, 16, !dbg !4503
  %bf.clear477 = and i32 %bf.lshr476, 255, !dbg !4503
  br label %cond.end506, !dbg !4503

cond.false480:                                    ; preds = %cond.end450
  %41 = load i64*, i64** %13, align 8, !dbg !4503
  %bf.load484 = load i64, i64* %41, align 8, !dbg !4503
  %bf.cast48621 = and i64 %bf.load484, 65535, !dbg !4503
  %cmp487 = icmp eq i64 %bf.cast48621, 14, !dbg !4503
  br i1 %cmp487, label %cond.true489, label %cond.false493, !dbg !4503

cond.true489:                                     ; preds = %cond.false480
  %.cast22 = bitcast i64* %41 to %union.tree_node*, !dbg !4503
  %call492 = tail call i32 @vector_type_mode(%union.tree_node* %.cast22) #6, !dbg !4503
  br label %cond.end501, !dbg !4503

cond.false493:                                    ; preds = %cond.false480
  %type496 = bitcast i64* %41 to %struct.tree_type*, !dbg !4503
  %mode497 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type496, i64 0, i32 6, !dbg !4503
  %bf.load498 = load i32, i32* %mode497, align 4, !dbg !4503
  %bf.lshr499 = lshr i32 %bf.load498, 16, !dbg !4503
  %bf.clear500 = and i32 %bf.lshr499, 255, !dbg !4503
  br label %cond.end501, !dbg !4503

cond.end501:                                      ; preds = %cond.false493, %cond.true489
  %cond502 = phi i32 [ %call492, %cond.true489 ], [ %bf.clear500, %cond.false493 ], !dbg !4503
  %idxprom503 = zext i32 %cond502 to i64, !dbg !4503
  %arrayidx504 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom503, !dbg !4503
  %42 = load i8, i8* %arrayidx504, align 1, !dbg !4503
  %conv505 = zext i8 %42 to i32, !dbg !4503
  br label %cond.end506, !dbg !4503

cond.end506:                                      ; preds = %cond.true466, %cond.false470, %cond.end501
  %cond507 = phi i32 [ %conv505, %cond.end501 ], [ %call469, %cond.true466 ], [ %bf.clear477, %cond.false470 ], !dbg !4503
  br label %cond.end509, !dbg !4503

cond.end509:                                      ; preds = %cond.end506, %cond.end399
  %cond510.in = phi i32 [ %cond400, %cond.end399 ], [ %cond507, %cond.end506 ]
  %cond510 = add i32 %cond510.in, -38, !dbg !4503
  %idxprom511 = zext i32 %cond510 to i64, !dbg !4503
  %arrayidx512 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom511, !dbg !4503
  %43 = load %struct.real_format*, %struct.real_format** %arrayidx512, align 8, !dbg !4503
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %43, i64 0, i32 14, !dbg !4503
  %44 = load i8, i8* %has_signed_zero, align 1, !dbg !4503
  %tobool514 = icmp ne i8 %44, 0, !dbg !4503
  %45 = load i32, i32* @flag_signed_zeros, align 4, !dbg !4503
  %tobool516 = icmp ne i32 %45, 0, !dbg !4503
  %or.cond = and i1 %tobool514, %tobool516, !dbg !4503
  br i1 %or.cond, label %land.lhs.true517, label %if.end529, !dbg !4503

land.lhs.true517:                                 ; preds = %cond.end509
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %y.addr.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4505
  %bf.load519 = load i64, i64* %46, align 8, !dbg !4505
  %bf.cast52123 = and i64 %bf.load519, 65535, !dbg !4506
  %cmp522 = icmp eq i64 %bf.cast52123, 24, !dbg !4506
  br i1 %cmp522, label %lor.lhs.false524, label %cleanup.cont, !dbg !4507

lor.lhs.false524:                                 ; preds = %land.lhs.true517
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %y.addr.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4508
  %47 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !4508
  %48 = load %struct.real_value*, %struct.real_value** %47, align 8, !dbg !4508
  %call525 = tail call zeroext i8 @real_compare(i32 101, %struct.real_value* nonnull @dconst0, %struct.real_value* %48) #6, !dbg !4508
  %tobool527 = icmp eq i8 %call525, 0, !dbg !4508
  br i1 %tobool527, label %if.end529, label %cleanup.cont, !dbg !4509

if.end529:                                        ; preds = %lor.lhs.false524, %cond.end509, %cond.end175
  tail call fastcc void @record_const_or_copy_1(%union.tree_node* %x.addr.2, %union.tree_node* %y.addr.3, %union.tree_node* %prev_x.3) #8, !dbg !4510
  br label %cleanup.cont, !dbg !4511

cleanup.cont:                                     ; preds = %lor.lhs.false524, %land.lhs.true517, %if.end68, %if.end529
  ret void, !dbg !4511
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_cond(%struct.cond_equivalence* %p) unnamed_addr #5 !dbg !4512 {
entry:
  call void @llvm.dbg.value(metadata %struct.cond_equivalence* %p, metadata !4516, metadata !DIExpression()), !dbg !4519
  %call = tail call i8* @xcalloc(i64 1, i64 80) #6, !dbg !4520
  %0 = bitcast i8* %call to %struct.expr_hash_elt*, !dbg !4520
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %0, metadata !4517, metadata !DIExpression()), !dbg !4519
  %cond = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %p, i64 0, i32 0, !dbg !4521
  %value = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %p, i64 0, i32 1, !dbg !4522
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !4522
  tail call fastcc void @initialize_hash_element_from_expr(%struct.hashable_expr* %cond, %union.tree_node* %1, %struct.expr_hash_elt* %0) #8, !dbg !4523
  %2 = load %struct.htab*, %struct.htab** @avail_exprs, align 8, !dbg !4524
  %hash = getelementptr inbounds i8, i8* %call, i64 64, !dbg !4525
  %3 = bitcast i8* %hash to i32*, !dbg !4525
  %4 = load i32, i32* %3, align 8, !dbg !4525
  %call1 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %2, i8* %call, i32 %4, i32 1) #6, !dbg !4526
  call void @llvm.dbg.value(metadata i8** %call1, metadata !4518, metadata !DIExpression()), !dbg !4519
  %5 = load i8*, i8** %call1, align 8, !dbg !4527
  %cmp = icmp eq i8* %5, null, !dbg !4529
  br i1 %cmp, label %if.then, label %if.else, !dbg !4530

if.then:                                          ; preds = %entry
  store i8* %call, i8** %call1, align 8, !dbg !4531
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4533
  %tobool = icmp eq %struct._IO_FILE* %6, null, !dbg !4533
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4535

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* @dump_flags, align 4, !dbg !4536
  %and = and i32 %7, 8, !dbg !4537
  %tobool2 = icmp eq i32 %and, 0, !dbg !4537
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !4538

if.then3:                                         ; preds = %land.lhs.true
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !4539
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4541
  tail call fastcc void @print_expr_hash_elt(%struct._IO_FILE* %8, %struct.expr_hash_elt* %0) #8, !dbg !4542
  br label %if.end, !dbg !4543

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then3
  %call5 = tail call fastcc %struct.expr_hash_elt** @VEC_expr_hash_elt_t_heap_safe_push(%struct.VEC_expr_hash_elt_t_heap** nonnull @avail_exprs_stack, %struct.expr_hash_elt* %0) #8, !dbg !4544
  br label %if.end6, !dbg !4545

if.else:                                          ; preds = %entry
  tail call void @free(i8* %call) #6, !dbg !4546
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  ret void, !dbg !4547
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !4548 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !4552, metadata !DIExpression()), !dbg !4554
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !4555
  store i32 0, i32* %index, align 8, !dbg !4556
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !4557
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !4558
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !4559
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !4559
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !4559
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !4560 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !4566, metadata !DIExpression()), !dbg !4567
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !4568
  %tobool = icmp eq i8 %call, 0, !dbg !4568
  br i1 %tobool, label %if.then, label %if.else, !dbg !4570

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !4571
  br label %return, !dbg !4573

if.else:                                          ; preds = %entry
  br label %return, !dbg !4574

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !4576
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !4576
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !4576
  ret i8 %retval.0, !dbg !4577
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !4578 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !4583, metadata !DIExpression()), !dbg !4584
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !4585
  %0 = load i32, i32* %index, align 8, !dbg !4585
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !4585
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4585
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #8, !dbg !4585
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4585
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4585

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !4585
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4585
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #8, !dbg !4585
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4585
  br label %cond.end, !dbg !4585

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4585
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !4585
  %cmp = icmp ult i32 %0, %call2, !dbg !4585
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !4585

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4585
  br label %cond.end5, !dbg !4585

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !4586
  %inc = add i32 %5, 1, !dbg !4586
  store i32 %inc, i32* %index, align 8, !dbg !4586
  ret void, !dbg !4587
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4588 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !4593
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4593
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4593

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !4593
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4593
  br label %cond.end, !dbg !4593

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4593
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !4593
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !4594
  %conv3 = zext i1 %cmp to i8, !dbg !4595
  ret i8 %conv3, !dbg !4596
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4597 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !4602
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4602
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4602

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !4602
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4602
  br label %cond.end, !dbg !4602

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4602
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #8, !dbg !4602
  ret %struct.edge_def* %call2, !dbg !4603
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4604 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4610, metadata !DIExpression()), !dbg !4611
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4612
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4612

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4612
  %0 = load i32, i32* %num, align 8, !dbg !4612
  br label %cond.end, !dbg !4612

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4612
  ret i32 %cond, !dbg !4612
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4613 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !4618
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4618

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4618
  br label %cond.end, !dbg !4618

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !4619
  ret %struct.VEC_edge_gc* %0, !dbg !4620
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4621 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4625, metadata !DIExpression()), !dbg !4627
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4626, metadata !DIExpression()), !dbg !4627
  br label %land.end, !dbg !4628

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4628
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4628
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4628
  ret %struct.edge_def* %0, !dbg !4628
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !4629 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4635, metadata !DIExpression()), !dbg !4636
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4637
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4637

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4637
  %0 = load i32, i32* %num, align 8, !dbg !4637
  br label %cond.end, !dbg !4637

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4637
  ret i32 %cond, !dbg !4637
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4638 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4642, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4643, metadata !DIExpression()), !dbg !4644
  br label %land.end, !dbg !4645

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4645
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4645
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4645
  ret %union.tree_node* %0, !dbg !4645
}

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @real_compare(i32, %struct.real_value*, %struct.real_value*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @record_const_or_copy_1(%union.tree_node* %x, %union.tree_node* %y, %union.tree_node* %prev_x) unnamed_addr #5 !dbg !4646 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !4650, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata %union.tree_node* %y, metadata !4651, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata %union.tree_node* %prev_x, metadata !4652, metadata !DIExpression()), !dbg !4653
  tail call void @set_ssa_name_value(%union.tree_node* %x, %union.tree_node* %y) #6, !dbg !4654
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4655
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !4655
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4657

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !4658
  %and = and i32 %1, 8, !dbg !4659
  %tobool1 = icmp eq i32 %and, 0, !dbg !4659
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4660

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4661
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4663
  tail call void @print_generic_expr(%struct._IO_FILE* %2, %union.tree_node* %x, i32 0) #6, !dbg !4664
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4665
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4666
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4667
  tail call void @print_generic_expr(%struct._IO_FILE* %4, %union.tree_node* %y, i32 0) #6, !dbg !4668
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4669
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4670
  br label %if.end, !dbg !4671

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call4 = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** nonnull @const_and_copies_stack, i32 2) #8, !dbg !4672
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @const_and_copies_stack, align 8, !dbg !4673
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %6, i64 0, i32 0, !dbg !4673
  %call6 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %prev_x) #8, !dbg !4673
  %7 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @const_and_copies_stack, align 8, !dbg !4674
  %base9 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %7, i64 0, i32 0, !dbg !4674
  %call13 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base9, %union.tree_node* %x) #8, !dbg !4674
  ret void, !dbg !4675
}

declare dso_local void @set_ssa_name_value(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_hash_element_from_expr(%struct.hashable_expr* %expr, %union.tree_node* %lhs, %struct.expr_hash_elt* %element) unnamed_addr #5 !dbg !4676 {
entry:
  call void @llvm.dbg.value(metadata %struct.hashable_expr* %expr, metadata !4681, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !4682, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %element, metadata !4683, metadata !DIExpression()), !dbg !4684
  %expr1 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, !dbg !4685
  %0 = bitcast %struct.hashable_expr* %expr1 to i8*, !dbg !4686
  %1 = bitcast %struct.hashable_expr* %expr to i8*, !dbg !4686
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %1, i64 48, i1 false), !dbg !4686
  %lhs2 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 0, !dbg !4687
  store %union.tree_node* %lhs, %union.tree_node** %lhs2, align 8, !dbg !4688
  %stmt = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 2, !dbg !4689
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !4690
  %2 = bitcast %struct.expr_hash_elt* %element to i8*, !dbg !4691
  %call = tail call fastcc i32 @avail_expr_hash(i8* %2) #8, !dbg !4692
  %hash = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 3, !dbg !4693
  store i32 %call, i32* %hash, align 8, !dbg !4694
  %stamp = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 4, !dbg !4695
  store %struct.expr_hash_elt* %element, %struct.expr_hash_elt** %stamp, align 8, !dbg !4696
  ret void, !dbg !4697
}

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @print_expr_hash_elt(%struct._IO_FILE* %stream, %struct.expr_hash_elt* %element) unnamed_addr #5 !dbg !4698 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %stream, metadata !4702, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %element, metadata !4703, metadata !DIExpression()), !dbg !4708
  %stmt = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 2, !dbg !4709
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4709
  %tobool = icmp eq %union.gimple_statement_d* %0, null, !dbg !4711
  br i1 %tobool, label %if.else, label %if.then, !dbg !4712

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !4713
  br label %if.end, !dbg !4713

if.else:                                          ; preds = %entry
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !4714
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %lhs = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 0, !dbg !4715
  %1 = load %union.tree_node*, %union.tree_node** %lhs, align 8, !dbg !4715
  %tobool2 = icmp eq %union.tree_node* %1, null, !dbg !4717
  br i1 %tobool2, label %if.end6, label %if.then3, !dbg !4718

if.then3:                                         ; preds = %if.end
  tail call void @print_generic_expr(%struct._IO_FILE* %stream, %union.tree_node* nonnull %1, i32 0) #6, !dbg !4719
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4721
  br label %if.end6, !dbg !4722

if.end6:                                          ; preds = %if.end, %if.then3
  %kind = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 1, !dbg !4723
  %2 = load i32, i32* %kind, align 8, !dbg !4723
  switch i32 %2, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb15
    i32 3, label %sw.bb28
  ], !dbg !4724

sw.bb:                                            ; preds = %if.end6
  %rhs = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 0, !dbg !4725
  %3 = load %union.tree_node*, %union.tree_node** %rhs, align 8, !dbg !4725
  tail call void @print_generic_expr(%struct._IO_FILE* %stream, %union.tree_node* %3, i32 0) #6, !dbg !4726
  br label %sw.epilog, !dbg !4727

sw.bb8:                                           ; preds = %if.end6
  %ops10 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, !dbg !4728
  %op = bitcast %union.anon.0* %ops10 to i32*, !dbg !4729
  %4 = load i32, i32* %op, align 8, !dbg !4729
  %idxprom = zext i32 %4 to i64, !dbg !4730
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* @tree_code_name, i64 0, i64 %idxprom, !dbg !4730
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !4730
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i8* %5) #6, !dbg !4731
  %opnd = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 1, !dbg !4732
  %6 = bitcast i8* %opnd to %union.tree_node**, !dbg !4732
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !4732
  tail call void @print_generic_expr(%struct._IO_FILE* %stream, %union.tree_node* %7, i32 0) #6, !dbg !4733
  br label %sw.epilog, !dbg !4734

sw.bb15:                                          ; preds = %if.end6
  %opnd0 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 1, !dbg !4735
  %8 = bitcast i8* %opnd0 to %union.tree_node**, !dbg !4735
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !4735
  tail call void @print_generic_expr(%struct._IO_FILE* %stream, %union.tree_node* %9, i32 0) #6, !dbg !4736
  %ops19 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, !dbg !4737
  %op21 = bitcast %union.anon.0* %ops19 to i32*, !dbg !4738
  %10 = load i32, i32* %op21, align 8, !dbg !4738
  %idxprom22 = zext i32 %10 to i64, !dbg !4739
  %arrayidx23 = getelementptr inbounds [0 x i8*], [0 x i8*]* @tree_code_name, i64 0, i64 %idxprom22, !dbg !4739
  %11 = load i8*, i8** %arrayidx23, align 8, !dbg !4739
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i8* %11) #6, !dbg !4740
  %opnd1 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 2, !dbg !4741
  %12 = bitcast i64* %opnd1 to %union.tree_node**, !dbg !4741
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !4741
  tail call void @print_generic_expr(%struct._IO_FILE* %stream, %union.tree_node* %13, i32 0) #6, !dbg !4742
  br label %sw.epilog, !dbg !4743

sw.bb28:                                          ; preds = %if.end6
  %nargs32 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 2, !dbg !4744
  %14 = load i64, i64* %nargs32, align 8, !dbg !4744
  call void @llvm.dbg.value(metadata i64 %14, metadata !4707, metadata !DIExpression()), !dbg !4745
  %fn = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 0, !dbg !4746
  %15 = load %union.tree_node*, %union.tree_node** %fn, align 8, !dbg !4746
  tail call void @print_generic_expr(%struct._IO_FILE* %stream, %union.tree_node* %15, i32 0) #6, !dbg !4747
  %call36 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !4748
  call void @llvm.dbg.value(metadata i64 0, metadata !4704, metadata !DIExpression()), !dbg !4745
  %args = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 3, !dbg !4749
  br label %for.cond, !dbg !4753

for.cond:                                         ; preds = %for.inc, %sw.bb28
  %i.0 = phi i64 [ 0, %sw.bb28 ], [ %add, %for.inc ], !dbg !4754
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4704, metadata !DIExpression()), !dbg !4745
  %exitcond = icmp eq i64 %i.0, %14, !dbg !4755
  br i1 %exitcond, label %for.end, label %for.body, !dbg !4756

for.body:                                         ; preds = %for.cond
  %16 = load %union.tree_node**, %union.tree_node*** %args, align 8, !dbg !4757
  %arrayidx40 = getelementptr inbounds %union.tree_node*, %union.tree_node** %16, i64 %i.0, !dbg !4758
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx40, align 8, !dbg !4758
  tail call void @print_generic_expr(%struct._IO_FILE* %stream, %union.tree_node* %17, i32 0) #6, !dbg !4759
  %add = add i64 %i.0, 1, !dbg !4760
  %cmp41 = icmp ult i64 %add, %14, !dbg !4762
  br i1 %cmp41, label %if.then42, label %for.inc, !dbg !4763

if.then42:                                        ; preds = %for.body
  %call43 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4764
  br label %for.inc, !dbg !4764

for.inc:                                          ; preds = %for.body, %if.then42
  call void @llvm.dbg.value(metadata i64 %add, metadata !4704, metadata !DIExpression()), !dbg !4745
  br label %for.cond, !dbg !4765, !llvm.loop !4766

for.end:                                          ; preds = %for.cond
  %call45 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !4768
  br label %sw.epilog, !dbg !4769

sw.epilog:                                        ; preds = %if.end6, %for.end, %sw.bb15, %sw.bb8, %sw.bb
  %call46 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4770
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4771
  %tobool48 = icmp eq %union.gimple_statement_d* %18, null, !dbg !4773
  br i1 %tobool48, label %if.end52, label %if.then49, !dbg !4774

if.then49:                                        ; preds = %sw.epilog
  %call50 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !4775
  %19 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4777
  tail call void @print_gimple_stmt(%struct._IO_FILE* %stream, %union.gimple_statement_d* %19, i32 0, i32 0) #6, !dbg !4778
  br label %if.end52, !dbg !4779

if.end52:                                         ; preds = %sw.epilog, %if.then49
  ret void, !dbg !4780
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @avail_expr_hash(i8* %p) unnamed_addr #5 !dbg !4781 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !4783, metadata !DIExpression()), !dbg !4788
  %stmt1 = getelementptr inbounds i8, i8* %p, i64 56, !dbg !4789
  %0 = bitcast i8* %stmt1 to %union.gimple_statement_d**, !dbg !4789
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !4789
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !4784, metadata !DIExpression()), !dbg !4788
  %expr2 = getelementptr inbounds i8, i8* %p, i64 8, !dbg !4790
  %2 = bitcast i8* %expr2 to %struct.hashable_expr*, !dbg !4790
  call void @llvm.dbg.value(metadata %struct.hashable_expr* %2, metadata !4785, metadata !DIExpression()), !dbg !4788
  call void @llvm.dbg.value(metadata i32 0, metadata !4787, metadata !DIExpression()), !dbg !4788
  %call = tail call fastcc i32 @iterative_hash_hashable_expr(%struct.hashable_expr* nonnull %2, i32 0) #8, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %call, metadata !4787, metadata !DIExpression()), !dbg !4788
  %tobool = icmp eq %union.gimple_statement_d* %1, null, !dbg !4792
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4794

if.end:                                           ; preds = %entry
  %call3 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* nonnull %1) #8, !dbg !4795
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !4786, metadata !DIExpression()), !dbg !4788
  %tobool4 = icmp eq %union.tree_node* %call3, null, !dbg !4797
  br i1 %tobool4, label %cleanup, label %if.then5, !dbg !4798

if.then5:                                         ; preds = %if.end
  %call6 = tail call i32 @iterative_hash_expr(%union.tree_node* nonnull %call3, i32 %call) #6, !dbg !4799
  call void @llvm.dbg.value(metadata i32 %call6, metadata !4787, metadata !DIExpression()), !dbg !4788
  br label %cleanup, !dbg !4800

cleanup:                                          ; preds = %if.end, %entry, %if.then5
  %retval.0 = phi i32 [ %call, %entry ], [ %call6, %if.then5 ], [ %call, %if.end ], !dbg !4788
  ret i32 %retval.0, !dbg !4801
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @iterative_hash_hashable_expr(%struct.hashable_expr* %expr, i32 %val) unnamed_addr #5 !dbg !4802 {
entry:
  %code = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.hashable_expr* %expr, metadata !4806, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 0, metadata !4807, metadata !DIExpression()), !dbg !4812
  %kind = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 1, !dbg !4813
  %0 = load i32, i32* %kind, align 8, !dbg !4813
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb19
    i32 3, label %sw.bb42
  ], !dbg !4814

sw.bb:                                            ; preds = %entry
  %rhs = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 0, !dbg !4815
  %1 = load %union.tree_node*, %union.tree_node** %rhs, align 8, !dbg !4815
  %call = tail call i32 @iterative_hash_expr(%union.tree_node* %1, i32 0) #6, !dbg !4816
  call void @llvm.dbg.value(metadata i32 %call, metadata !4807, metadata !DIExpression()), !dbg !4812
  br label %sw.epilog, !dbg !4817

sw.bb1:                                           ; preds = %entry
  %ops2 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, !dbg !4818
  %2 = bitcast %union.anon.0* %ops2 to i8*, !dbg !4818
  %call3 = tail call i32 @iterative_hash(i8* nonnull %2, i64 4, i32 0) #6, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %call3, metadata !4807, metadata !DIExpression()), !dbg !4812
  %op6 = bitcast %union.anon.0* %ops2 to i32*, !dbg !4819
  %3 = load i32, i32* %op6, align 8, !dbg !4819
  %cmp = icmp eq i32 %3, 116, !dbg !4819
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4819

lor.lhs.false:                                    ; preds = %sw.bb1
  %cmp10 = icmp eq i32 %3, 113, !dbg !4819
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !4821

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %cmp15 = icmp eq i32 %3, 117, !dbg !4822
  br i1 %cmp15, label %if.then, label %if.end, !dbg !4823

if.then:                                          ; preds = %lor.lhs.false11, %lor.lhs.false, %sw.bb1
  %4 = bitcast %struct.hashable_expr* %expr to i64**, !dbg !4824
  %5 = load i64*, i64** %4, align 8, !dbg !4824
  %bf.load = load i64, i64* %5, align 8, !dbg !4824
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !4824
  %6 = trunc i64 %bf.lshr to i32, !dbg !4824
  %bf.cast = and i32 %6, 1, !dbg !4824
  %add = add i32 %call3, %bf.cast, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %add, metadata !4807, metadata !DIExpression()), !dbg !4812
  br label %if.end, !dbg !4826

if.end:                                           ; preds = %if.then, %lor.lhs.false11
  %val.addr.0 = phi i32 [ %add, %if.then ], [ %call3, %lor.lhs.false11 ], !dbg !4827
  call void @llvm.dbg.value(metadata i32 %val.addr.0, metadata !4807, metadata !DIExpression()), !dbg !4812
  %opnd = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 1, !dbg !4828
  %7 = bitcast i8* %opnd to %union.tree_node**, !dbg !4828
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !4828
  %call18 = tail call i32 @iterative_hash_expr(%union.tree_node* %8, i32 %val.addr.0) #6, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %call18, metadata !4807, metadata !DIExpression()), !dbg !4812
  br label %sw.epilog, !dbg !4830

sw.bb19:                                          ; preds = %entry
  %ops20 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, !dbg !4831
  %9 = bitcast %union.anon.0* %ops20 to i8*, !dbg !4831
  %call22 = tail call i32 @iterative_hash(i8* nonnull %9, i64 4, i32 0) #6, !dbg !4831
  call void @llvm.dbg.value(metadata i32 %call22, metadata !4807, metadata !DIExpression()), !dbg !4812
  %op25 = bitcast %union.anon.0* %ops20 to i32*, !dbg !4832
  %10 = load i32, i32* %op25, align 8, !dbg !4832
  %call26 = tail call zeroext i8 @commutative_tree_code(i32 %10) #6, !dbg !4834
  %tobool = icmp eq i8 %call26, 0, !dbg !4834
  %opnd0 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 1, !dbg !4835
  %11 = bitcast i8* %opnd0 to %union.tree_node**, !dbg !4835
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !4835
  br i1 %tobool, label %if.else, label %if.then27, !dbg !4836

if.then27:                                        ; preds = %sw.bb19
  %opnd1 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 2, !dbg !4837
  %13 = bitcast i64* %opnd1 to %union.tree_node**, !dbg !4837
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !4837
  %call32 = tail call i32 @iterative_hash_exprs_commutative(%union.tree_node* %12, %union.tree_node* %14, i32 %call22) #6, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %call32, metadata !4807, metadata !DIExpression()), !dbg !4812
  br label %sw.epilog, !dbg !4839

if.else:                                          ; preds = %sw.bb19
  %call36 = tail call i32 @iterative_hash_expr(%union.tree_node* %12, i32 %call22) #6, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %call36, metadata !4807, metadata !DIExpression()), !dbg !4812
  %opnd139 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 2, !dbg !4842
  %15 = bitcast i64* %opnd139 to %union.tree_node**, !dbg !4842
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !4842
  %call40 = tail call i32 @iterative_hash_expr(%union.tree_node* %16, i32 %call36) #6, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %call40, metadata !4807, metadata !DIExpression()), !dbg !4812
  br label %sw.epilog

sw.bb42:                                          ; preds = %entry
  %17 = bitcast i32* %code to i8*, !dbg !4844
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #7, !dbg !4844
  call void @llvm.dbg.value(metadata i32 59, metadata !4811, metadata !DIExpression()), !dbg !4845
  store i32 59, i32* %code, align 4, !dbg !4846
  %call43 = call i32 @iterative_hash(i8* nonnull %17, i64 4, i32 0) #6, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %call43, metadata !4807, metadata !DIExpression()), !dbg !4812
  %fn = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 0, !dbg !4848
  %18 = load %union.tree_node*, %union.tree_node** %fn, align 8, !dbg !4848
  %call46 = call i32 @iterative_hash_expr(%union.tree_node* %18, i32 %call43) #6, !dbg !4849
  call void @llvm.dbg.value(metadata i32 %call46, metadata !4807, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i64 0, metadata !4808, metadata !DIExpression()), !dbg !4845
  %nargs = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 2, !dbg !4850
  %args = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 3, !dbg !4850
  br label %for.cond, !dbg !4853

for.cond:                                         ; preds = %for.body, %sw.bb42
  %val.addr.2 = phi i32 [ %call46, %sw.bb42 ], [ %call52, %for.body ], !dbg !4845
  %i.0 = phi i64 [ 0, %sw.bb42 ], [ %inc, %for.body ], !dbg !4854
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4808, metadata !DIExpression()), !dbg !4845
  call void @llvm.dbg.value(metadata i32 %val.addr.2, metadata !4807, metadata !DIExpression()), !dbg !4812
  %19 = load i64, i64* %nargs, align 8, !dbg !4855
  %cmp49 = icmp ult i64 %i.0, %19, !dbg !4856
  br i1 %cmp49, label %for.body, label %for.end, !dbg !4857

for.body:                                         ; preds = %for.cond
  %20 = load %union.tree_node**, %union.tree_node*** %args, align 8, !dbg !4858
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %20, i64 %i.0, !dbg !4859
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4859
  %call52 = call i32 @iterative_hash_expr(%union.tree_node* %21, i32 %val.addr.2) #6, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %call52, metadata !4807, metadata !DIExpression()), !dbg !4812
  %inc = add i64 %i.0, 1, !dbg !4861
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4808, metadata !DIExpression()), !dbg !4845
  br label %for.cond, !dbg !4862, !llvm.loop !4863

for.end:                                          ; preds = %for.cond
  %val.addr.2.lcssa = phi i32 [ %val.addr.2, %for.cond ], !dbg !4845
  call void @llvm.dbg.value(metadata i32 %val.addr.2.lcssa, metadata !4807, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %val.addr.2.lcssa, metadata !4807, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %val.addr.2.lcssa, metadata !4807, metadata !DIExpression()), !dbg !4812
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #7, !dbg !4865
  br label %sw.epilog, !dbg !4866

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 481, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4867
  br label %sw.epilog, !dbg !4868

sw.epilog:                                        ; preds = %if.then27, %if.else, %sw.default, %for.end, %if.end, %sw.bb
  %val.addr.3 = phi i32 [ 0, %sw.default ], [ %val.addr.2.lcssa, %for.end ], [ %call18, %if.end ], [ %call, %sw.bb ], [ %call32, %if.then27 ], [ %call40, %if.else ]
  call void @llvm.dbg.value(metadata i32 %val.addr.3, metadata !4807, metadata !DIExpression()), !dbg !4812
  ret i32 %val.addr.3, !dbg !4869
}

declare dso_local i32 @iterative_hash_expr(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @iterative_hash(i8*, i64, i32) local_unnamed_addr #2

declare dso_local i32 @iterative_hash_exprs_commutative(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local i32 @operand_equal_for_phi_arg_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @may_propagate_copy(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @canonicalize_comparison(%union.gimple_statement_d* %condstmt) unnamed_addr #5 !dbg !4870 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %condstmt, metadata !4872, metadata !DIExpression()), !dbg !4876
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %condstmt) #8, !dbg !4877
  %cmp = icmp eq i32 %call, 1, !dbg !4877
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4877

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 776, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4877
  br label %cond.end, !dbg !4877

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %condstmt) #8, !dbg !4878
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4873, metadata !DIExpression()), !dbg !4876
  %call2 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %condstmt) #8, !dbg !4879
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4874, metadata !DIExpression()), !dbg !4876
  %call3 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %condstmt) #8, !dbg !4880
  call void @llvm.dbg.value(metadata i32 %call3, metadata !4875, metadata !DIExpression()), !dbg !4876
  %call4 = tail call zeroext i8 @tree_swap_operands_p(%union.tree_node* %call1, %union.tree_node* %call2, i8 zeroext 0) #6, !dbg !4881
  %tobool = icmp ne i8 %call4, 0, !dbg !4881
  %call3.off = add i32 %call3, -97, !dbg !4883
  %switch = icmp ult i32 %call3.off, 4, !dbg !4883
  %or.cond = and i1 %tobool, %switch, !dbg !4886
  br i1 %or.cond, label %if.then11, label %if.end13, !dbg !4886

if.then11:                                        ; preds = %cond.end
  %call12 = tail call i32 @swap_tree_comparison(i32 %call3) #6, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %call12, metadata !4875, metadata !DIExpression()), !dbg !4876
  tail call fastcc void @gimple_cond_set_code(%union.gimple_statement_d* %condstmt, i32 %call12) #8, !dbg !4889
  tail call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %condstmt, %union.tree_node* %call2) #8, !dbg !4890
  tail call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %condstmt, %union.tree_node* %call1) #8, !dbg !4891
  tail call fastcc void @update_stmt(%union.gimple_statement_d* %condstmt) #8, !dbg !4892
  br label %if.end13, !dbg !4893

if.end13:                                         ; preds = %if.then11, %cond.end
  ret void, !dbg !4894
}

; Function Attrs: nounwind uwtable
define internal fastcc void @cprop_into_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !4895 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4897, metadata !DIExpression()), !dbg !4912
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !4913
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #7, !dbg !4913
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4899, metadata !DIExpression(DW_OP_deref)), !dbg !4912
  %call = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 5) #8, !dbg !4914
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call, metadata !4898, metadata !DIExpression()), !dbg !4912
  br label %for.cond, !dbg !4914

for.cond:                                         ; preds = %for.inc, %entry
  %op_p.0 = phi %struct.ssa_use_operand_d* [ %call, %entry ], [ %call3, %for.inc ], !dbg !4916
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %op_p.0, metadata !4898, metadata !DIExpression()), !dbg !4912
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4899, metadata !DIExpression(DW_OP_deref)), !dbg !4912
  %call1 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !4917
  %tobool = icmp eq i8 %call1, 0, !dbg !4917
  br i1 %tobool, label %for.body, label %for.end, !dbg !4914

for.body:                                         ; preds = %for.cond
  %call2 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %op_p.0) #8, !dbg !4919
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4919
  %bf.load = load i64, i64* %1, align 8, !dbg !4919
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4922
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4922
  br i1 %cmp, label %if.then, label %for.inc, !dbg !4923

if.then:                                          ; preds = %for.body
  call fastcc void @cprop_operand(%union.gimple_statement_d* %stmt, %struct.ssa_use_operand_d* %op_p.0) #8, !dbg !4924
  br label %for.inc, !dbg !4924

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4899, metadata !DIExpression(DW_OP_deref)), !dbg !4912
  %call3 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !4917
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call3, metadata !4898, metadata !DIExpression()), !dbg !4912
  br label %for.cond, !dbg !4917, !llvm.loop !4925

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #7, !dbg !4927
  ret void, !dbg !4927
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_modified_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4928 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4930, metadata !DIExpression()), !dbg !4931
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !4932
  %tobool = icmp eq i8 %call, 0, !dbg !4933
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4933

cond.true:                                        ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !4934
  %bf.load = load i32, i32* %0, align 8, !dbg !4934
  %bf.lshr = lshr i32 %bf.load, 13, !dbg !4934
  %1 = trunc i32 %bf.lshr to i8, !dbg !4935
  %conv1 = and i8 %1, 1, !dbg !4935
  br label %cond.end, !dbg !4933

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i8 [ %conv1, %cond.true ], [ 0, %entry ]
  ret i8 %cond, !dbg !4936
}

declare dso_local zeroext i8 @fold_stmt(%struct.gimple_stmt_iterator*) local_unnamed_addr #2

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4937 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4939, metadata !DIExpression()), !dbg !4940
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !4941
  ret %union.tree_node* %call, !dbg !4942
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4943 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4945, metadata !DIExpression()), !dbg !4946
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !4947
  ret %union.tree_node* %call, !dbg !4948
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4949 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4951, metadata !DIExpression()), !dbg !4952
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !4953
  ret %union.tree_node* %call, !dbg !4954
}

declare dso_local void @recompute_tree_invariant_for_addr_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !4955 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4957, metadata !DIExpression()), !dbg !4958
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #8, !dbg !4959
  %tobool = icmp eq i8 %call, 0, !dbg !4959
  br i1 %tobool, label %return, label %if.then, !dbg !4961

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !4962
  %bf.load = load i32, i32* %0, align 8, !dbg !4962
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !4962
  %1 = trunc i32 %bf.lshr to i8, !dbg !4963
  %conv = and i8 %1, 1, !dbg !4963
  br label %return, !dbg !4964

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv, %if.then ], [ 0, %entry ], !dbg !4965
  ret i8 %retval.0, !dbg !4966
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4967 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4969, metadata !DIExpression()), !dbg !4970
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !4971
  %cmp = icmp eq i32 %call, 6, !dbg !4972
  %conv1 = zext i1 %cmp to i8, !dbg !4971
  ret i8 %conv1, !dbg !4973
}

declare dso_local zeroext i8 @gimple_rhs_has_side_effects(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4974 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4976, metadata !DIExpression()), !dbg !4977
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !4978
  %cmp = icmp eq i32 %call, 8, !dbg !4979
  %conv1 = zext i1 %cmp to i8, !dbg !4978
  ret i8 %conv1, !dbg !4980
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4981 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4983, metadata !DIExpression()), !dbg !4984
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !4985
  ret %union.tree_node* %call, !dbg !4986
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4987 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4989, metadata !DIExpression()), !dbg !4991
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #8, !dbg !4992
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4990, metadata !DIExpression()), !dbg !4991
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4993
  %bf.load = load i64, i64* %0, align 8, !dbg !4993
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4995
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !4995
  br i1 %cmp, label %if.then, label %cleanup, !dbg !4996

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4997
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4997
  br label %cleanup, !dbg !4998

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !4991
  ret %union.tree_node* %retval.0, !dbg !4999
}

declare dso_local void @propagate_tree_value_into_stmt(%struct.gimple_stmt_iterator*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @eliminate_redundant_computations(%struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !5000 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5002, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i8 1, metadata !5005, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i8 0, metadata !5006, metadata !DIExpression()), !dbg !5009
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5010
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5007, metadata !DIExpression()), !dbg !5009
  %call1 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call) #6, !dbg !5011
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5008, metadata !DIExpression()), !dbg !5009
  %tobool = icmp eq %union.tree_node* %call1, null, !dbg !5012
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5014

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5015
  %bf.load = load i64, i64* %0, align 8, !dbg !5015
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5016
  %cmp = icmp eq i64 %bf.cast2, 141, !dbg !5016
  br i1 %cmp, label %lor.lhs.false2, label %if.then, !dbg !5017

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %bf.cast63 = and i64 %bf.load, 4194304, !dbg !5018
  %tobool7 = icmp eq i64 %bf.cast63, 0, !dbg !5018
  br i1 %tobool7, label %lor.lhs.false8, label %if.then, !dbg !5019

lor.lhs.false8:                                   ; preds = %lor.lhs.false2
  %call9 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %call) #8, !dbg !5020
  %tobool10 = icmp eq %union.tree_node* %call9, null, !dbg !5020
  br i1 %tobool10, label %lor.lhs.false11, label %if.then, !dbg !5021

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %call12 = tail call fastcc zeroext i8 @simple_iv_increment_p(%union.gimple_statement_d* %call) #8, !dbg !5022
  %tobool13 = icmp eq i8 %call12, 0, !dbg !5022
  br i1 %tobool13, label %if.end, label %if.then, !dbg !5023

if.then:                                          ; preds = %lor.lhs.false11, %lor.lhs.false8, %lor.lhs.false2, %lor.lhs.false, %entry
  call void @llvm.dbg.value(metadata i8 0, metadata !5005, metadata !DIExpression()), !dbg !5009
  br label %if.end, !dbg !5024

if.end:                                           ; preds = %lor.lhs.false11, %if.then
  %insert.0 = phi i8 [ 0, %if.then ], [ 1, %lor.lhs.false11 ], !dbg !5009
  call void @llvm.dbg.value(metadata i8 %insert.0, metadata !5005, metadata !DIExpression()), !dbg !5009
  %call14 = tail call fastcc %union.tree_node* @lookup_avail_expr(%union.gimple_statement_d* %call, i8 zeroext %insert.0) #8, !dbg !5025
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !5004, metadata !DIExpression()), !dbg !5009
  %1 = load i64, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 1), align 8, !dbg !5026
  %inc = add nsw i64 %1, 1, !dbg !5026
  store i64 %inc, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 1), align 8, !dbg !5026
  %call15 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %call) #8, !dbg !5027
  %tobool16 = icmp eq i8 %call15, 0, !dbg !5027
  br i1 %tobool16, label %if.else, label %if.then17, !dbg !5029

if.then17:                                        ; preds = %if.end
  %call18 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call) #8, !dbg !5030
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5030
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5030
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5003, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i8 1, metadata !5006, metadata !DIExpression()), !dbg !5009
  br label %if.end44, !dbg !5032

if.else:                                          ; preds = %if.end
  %call19 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #8, !dbg !5033
  %cmp20 = icmp eq i32 %call19, 1, !dbg !5035
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !5036

if.then22:                                        ; preds = %if.else
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !5037
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5003, metadata !DIExpression()), !dbg !5009
  br label %if.end44, !dbg !5038

if.else23:                                        ; preds = %if.else
  %call24 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call) #8, !dbg !5039
  %tobool25 = icmp eq i8 %call24, 0, !dbg !5039
  br i1 %tobool25, label %if.else32, label %if.then26, !dbg !5041

if.then26:                                        ; preds = %if.else23
  %call27 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call) #8, !dbg !5042
  %tobool28 = icmp eq %union.tree_node* %call27, null, !dbg !5042
  br i1 %tobool28, label %cond.true, label %cond.end, !dbg !5042

cond.true:                                        ; preds = %if.then26
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 1815, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5042
  br label %cond.end, !dbg !5042

cond.end:                                         ; preds = %if.then26, %cond.true
  %call29 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call) #8, !dbg !5044
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5044
  %4 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !5044
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5003, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i8 1, metadata !5006, metadata !DIExpression()), !dbg !5009
  br label %if.end44, !dbg !5045

if.else32:                                        ; preds = %if.else23
  %call33 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #8, !dbg !5046
  %cmp34 = icmp eq i32 %call33, 5, !dbg !5048
  br i1 %cmp34, label %if.then36, label %if.else40, !dbg !5049

if.then36:                                        ; preds = %if.else32
  %call37 = tail call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %call) #8, !dbg !5050
  %type39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5050
  %5 = load %union.tree_node*, %union.tree_node** %type39, align 8, !dbg !5050
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5003, metadata !DIExpression()), !dbg !5009
  br label %if.end44, !dbg !5051

if.else40:                                        ; preds = %if.else32
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 1822, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5052
  br label %if.end44

if.end44:                                         ; preds = %if.then22, %if.then36, %if.else40, %cond.end, %if.then17
  %assigns_var_p.2 = phi i32 [ 1, %if.then17 ], [ 0, %if.then22 ], [ 1, %cond.end ], [ 0, %if.else40 ], [ 0, %if.then36 ]
  %expr_type.3 = phi %union.tree_node* [ %2, %if.then17 ], [ %3, %if.then22 ], [ %4, %cond.end ], [ undef, %if.else40 ], [ %5, %if.then36 ], !dbg !5053
  call void @llvm.dbg.value(metadata %union.tree_node* %expr_type.3, metadata !5003, metadata !DIExpression()), !dbg !5009
  %tobool45 = icmp eq %union.tree_node* %call14, null, !dbg !5054
  br i1 %tobool45, label %cleanup.cont, label %if.end47, !dbg !5056

if.end47:                                         ; preds = %if.end44
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5057
  %bf.load49 = load i64, i64* %6, align 8, !dbg !5057
  %bf.cast511 = and i64 %bf.load49, 65535, !dbg !5059
  %cmp52 = icmp eq i64 %bf.cast511, 141, !dbg !5059
  br i1 %cmp52, label %lor.lhs.false62, label %land.lhs.true, !dbg !5060

land.lhs.true:                                    ; preds = %if.end47
  %tobool55 = icmp eq i32 %assigns_var_p.2, 0, !dbg !5061
  br i1 %tobool55, label %lor.lhs.false56, label %if.then66, !dbg !5062

lor.lhs.false56:                                  ; preds = %land.lhs.true
  %type58 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5063
  %7 = load %union.tree_node*, %union.tree_node** %type58, align 8, !dbg !5063
  %call59 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %expr_type.3, %union.tree_node* %7) #6, !dbg !5064
  %tobool61 = icmp eq i8 %call59, 0, !dbg !5064
  br i1 %tobool61, label %lor.lhs.false62, label %if.then66, !dbg !5065

lor.lhs.false62:                                  ; preds = %lor.lhs.false56, %if.end47
  %call63 = tail call zeroext i8 @may_propagate_copy_into_stmt(%union.gimple_statement_d* %call, %union.tree_node* nonnull %call14) #6, !dbg !5066
  %tobool65 = icmp eq i8 %call63, 0, !dbg !5066
  br i1 %tobool65, label %cleanup.cont, label %if.then66, !dbg !5067

if.then66:                                        ; preds = %lor.lhs.false56, %land.lhs.true, %lor.lhs.false62
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5068
  %tobool67 = icmp eq %struct._IO_FILE* %8, null, !dbg !5068
  br i1 %tobool67, label %if.end74, label %land.lhs.true68, !dbg !5071

land.lhs.true68:                                  ; preds = %if.then66
  %9 = load i32, i32* @dump_flags, align 4, !dbg !5072
  %and = and i32 %9, 8, !dbg !5073
  %tobool69 = icmp eq i32 %and, 0, !dbg !5073
  br i1 %tobool69, label %if.end74, label %if.then70, !dbg !5074

if.then70:                                        ; preds = %land.lhs.true68
  %call71 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !5075
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5077
  %11 = load i32, i32* @dump_flags, align 4, !dbg !5078
  tail call void @print_gimple_expr(%struct._IO_FILE* %10, %union.gimple_statement_d* %call, i32 0, i32 %11) #6, !dbg !5079
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5080
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !5081
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5082
  %14 = load i32, i32* @dump_flags, align 4, !dbg !5083
  tail call void @print_generic_expr(%struct._IO_FILE* %13, %union.tree_node* nonnull %call14, i32 %14) #6, !dbg !5084
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5085
  %call73 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !5086
  br label %if.end74, !dbg !5087

if.end74:                                         ; preds = %land.lhs.true68, %if.then66, %if.then70
  %16 = load i64, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 2), align 8, !dbg !5088
  %inc75 = add nsw i64 %16, 1, !dbg !5088
  store i64 %inc75, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 2), align 8, !dbg !5088
  %tobool77 = icmp eq i32 %assigns_var_p.2, 0, !dbg !5089
  br i1 %tobool77, label %if.end85, label %land.lhs.true78, !dbg !5091

land.lhs.true78:                                  ; preds = %if.end74
  %type80 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5092
  %17 = load %union.tree_node*, %union.tree_node** %type80, align 8, !dbg !5092
  %call81 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %expr_type.3, %union.tree_node* %17) #6, !dbg !5093
  %tobool82 = icmp eq i8 %call81, 0, !dbg !5093
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !5094

if.then83:                                        ; preds = %land.lhs.true78
  %call84 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %expr_type.3, %union.tree_node* nonnull %call14) #6, !dbg !5095
  call void @llvm.dbg.value(metadata %union.tree_node* %call84, metadata !5004, metadata !DIExpression()), !dbg !5009
  br label %if.end85, !dbg !5096

if.end85:                                         ; preds = %land.lhs.true78, %if.end74, %if.then83
  %cached_lhs.0 = phi %union.tree_node* [ %call14, %land.lhs.true78 ], [ %call84, %if.then83 ], [ %call14, %if.end74 ], !dbg !5009
  call void @llvm.dbg.value(metadata %union.tree_node* %cached_lhs.0, metadata !5004, metadata !DIExpression()), !dbg !5009
  tail call void @propagate_tree_value_into_stmt(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %cached_lhs.0) #6, !dbg !5097
  %call86 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5098
  tail call void @gimple_set_modified(%union.gimple_statement_d* %call86, i8 zeroext 1) #6, !dbg !5099
  br label %cleanup.cont, !dbg !5100

cleanup.cont:                                     ; preds = %lor.lhs.false62, %if.end44, %if.end85
  ret void, !dbg !5101
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_equivalences_from_stmt(%union.gimple_statement_d* %stmt, i32 %may_optimize_p) unnamed_addr #5 !dbg !5102 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5106, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.value(metadata i32 %may_optimize_p, metadata !5107, metadata !DIExpression()), !dbg !5120
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #8, !dbg !5121
  %tobool = icmp eq i8 %call, 0, !dbg !5121
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5121

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 1878, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5121
  br label %cond.end, !dbg !5121

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !5122
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5108, metadata !DIExpression()), !dbg !5120
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5123
  %bf.load = load i64, i64* %0, align 8, !dbg !5123
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5124
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5124
  br i1 %cmp, label %land.lhs.true, label %if.end25, !dbg !5125

land.lhs.true:                                    ; preds = %cond.end
  %call2 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt) #6, !dbg !5126
  %tobool3 = icmp eq i8 %call2, 0, !dbg !5126
  br i1 %tobool3, label %if.end25, label %if.then, !dbg !5127

if.then:                                          ; preds = %land.lhs.true
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !5128
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5110, metadata !DIExpression()), !dbg !5129
  %tobool5 = icmp eq i32 %may_optimize_p, 0, !dbg !5130
  br i1 %tobool5, label %if.end25, label %land.lhs.true6, !dbg !5132

land.lhs.true6:                                   ; preds = %if.then
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5133
  %bf.load8 = load i64, i64* %1, align 8, !dbg !5133
  %bf.cast104 = and i64 %bf.load8, 65535, !dbg !5134
  %cmp11 = icmp eq i64 %bf.cast104, 141, !dbg !5134
  br i1 %cmp11, label %if.then16, label %lor.lhs.false, !dbg !5135

lor.lhs.false:                                    ; preds = %land.lhs.true6
  %call13 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call4) #6, !dbg !5136
  %tobool15 = icmp eq i8 %call13, 0, !dbg !5136
  br i1 %tobool15, label %if.end25, label %if.then16, !dbg !5137

if.then16:                                        ; preds = %lor.lhs.false, %land.lhs.true6
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5138
  %tobool17 = icmp eq %struct._IO_FILE* %2, null, !dbg !5138
  br i1 %tobool17, label %if.end, label %land.lhs.true18, !dbg !5141

land.lhs.true18:                                  ; preds = %if.then16
  %3 = load i32, i32* @dump_flags, align 4, !dbg !5142
  %and = and i32 %3, 8, !dbg !5143
  %tobool19 = icmp eq i32 %and, 0, !dbg !5143
  br i1 %tobool19, label %if.end, label %if.then20, !dbg !5144

if.then20:                                        ; preds = %land.lhs.true18
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !5145
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5147
  tail call void @print_generic_expr(%struct._IO_FILE* %4, %union.tree_node* %call1, i32 0) #6, !dbg !5148
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5149
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5150
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5151
  tail call void @print_generic_expr(%struct._IO_FILE* %6, %union.tree_node* %call4, i32 0) #6, !dbg !5152
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5153
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5154
  br label %if.end, !dbg !5155

if.end:                                           ; preds = %land.lhs.true18, %if.then16, %if.then20
  tail call void @set_ssa_name_value(%union.tree_node* %call1, %union.tree_node* %call4) #6, !dbg !5156
  br label %if.end25, !dbg !5157

if.end25:                                         ; preds = %lor.lhs.false, %if.then, %land.lhs.true, %if.end, %cond.end
  %call26 = tail call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5158
  %tobool27 = icmp eq i8 %call26, 0, !dbg !5158
  br i1 %tobool27, label %land.lhs.true28, label %if.end69, !dbg !5159

land.lhs.true28:                                  ; preds = %if.end25
  %call29 = tail call fastcc zeroext i8 @gimple_references_memory_p(%union.gimple_statement_d* %stmt) #8, !dbg !5160
  %tobool31 = icmp eq i8 %call29, 0, !dbg !5160
  br i1 %tobool31, label %if.end69, label %land.lhs.true32, !dbg !5161

land.lhs.true32:                                  ; preds = %land.lhs.true28
  %call33 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt) #6, !dbg !5162
  %tobool35 = icmp eq i8 %call33, 0, !dbg !5162
  br i1 %tobool35, label %if.end69, label %land.lhs.true36, !dbg !5163

land.lhs.true36:                                  ; preds = %land.lhs.true32
  %call37 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !5164
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5164
  %bf.load39 = load i64, i64* %8, align 8, !dbg !5164
  %bf.cast412 = and i64 %bf.load39, 65535, !dbg !5165
  %cmp42 = icmp eq i64 %bf.cast412, 141, !dbg !5165
  br i1 %cmp42, label %land.lhs.true49, label %lor.lhs.false44, !dbg !5166

lor.lhs.false44:                                  ; preds = %land.lhs.true36
  %call45 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !5167
  %call46 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call45) #6, !dbg !5168
  %tobool48 = icmp eq i8 %call46, 0, !dbg !5168
  br i1 %tobool48, label %if.end69, label %land.lhs.true49, !dbg !5169

land.lhs.true49:                                  ; preds = %lor.lhs.false44, %land.lhs.true36
  %call50 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call1) #6, !dbg !5170
  %tobool51 = icmp eq i8 %call50, 0, !dbg !5170
  br i1 %tobool51, label %if.then52, label %if.end69, !dbg !5171

if.then52:                                        ; preds = %land.lhs.true49
  %call54 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !5172
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !5113, metadata !DIExpression()), !dbg !5173
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5174
  %bf.load56 = load i64, i64* %9, align 8, !dbg !5174
  %bf.cast583 = and i64 %bf.load56, 65535, !dbg !5175
  %cmp59 = icmp eq i64 %bf.cast583, 141, !dbg !5175
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !5176

if.then61:                                        ; preds = %if.then52
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5177
  %10 = bitcast %union.tree_node** %def_stmt to i64*, !dbg !5177
  %11 = load i64, i64* %10, align 8, !dbg !5177
  %call62 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call54, %union.tree_node* %call1) #6, !dbg !5178
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call62, metadata !5116, metadata !DIExpression()), !dbg !5173
  store i64 %11, i64* %10, align 8, !dbg !5179
  br label %if.end66, !dbg !5180

if.else:                                          ; preds = %if.then52
  %call65 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call54, %union.tree_node* %call1) #6, !dbg !5181
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call65, metadata !5116, metadata !DIExpression()), !dbg !5173
  br label %if.end66

if.end66:                                         ; preds = %if.else, %if.then61
  %new_stmt.0 = phi %union.gimple_statement_d* [ %call62, %if.then61 ], [ %call65, %if.else ], !dbg !5182
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.0, metadata !5116, metadata !DIExpression()), !dbg !5173
  %call67 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #8, !dbg !5183
  tail call fastcc void @gimple_set_vuse(%union.gimple_statement_d* %new_stmt.0, %union.tree_node* %call67) #8, !dbg !5184
  %call68 = tail call fastcc %union.tree_node* @lookup_avail_expr(%union.gimple_statement_d* %new_stmt.0, i8 zeroext 1) #8, !dbg !5185
  br label %if.end69, !dbg !5186

if.end69:                                         ; preds = %land.lhs.true49, %lor.lhs.false44, %land.lhs.true32, %land.lhs.true28, %if.end25, %if.end66
  ret void, !dbg !5187
}

declare dso_local %union.tree_node* @fold_binary_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5188 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5192, metadata !DIExpression()), !dbg !5193
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !5194
  %0 = load i32, i32* %location, align 8, !dbg !5194
  ret i32 %0, !dbg !5195
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5196 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5200, metadata !DIExpression()), !dbg !5201
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !5202
  %bf.load = load i32, i32* %0, align 8, !dbg !5202
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5202
  ret i32 %bf.lshr, !dbg !5203
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5204 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5206, metadata !DIExpression()), !dbg !5207
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !5208
  ret %union.tree_node* %call, !dbg !5209
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5210 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5212, metadata !DIExpression()), !dbg !5213
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !5214
  ret %union.tree_node* %call, !dbg !5215
}

declare dso_local %struct.edge_def* @find_taken_edge(%struct.basic_block_def*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @tree_swap_operands_p(%union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @swap_tree_comparison(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_code(%union.gimple_statement_d* %gs, i32 %code) unnamed_addr #0 !dbg !5216 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5220, metadata !DIExpression()), !dbg !5222
  call void @llvm.dbg.value(metadata i32 %code, metadata !5221, metadata !DIExpression()), !dbg !5222
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !5223
  %bf.load = load i32, i32* %0, align 8, !dbg !5224
  %bf.shl = shl i32 %code, 16, !dbg !5224
  %bf.clear = and i32 %bf.load, 65535, !dbg !5224
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !5224
  store i32 %bf.set, i32* %0, align 8, !dbg !5224
  ret void, !dbg !5225
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !5226 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5230, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !5231, metadata !DIExpression()), !dbg !5232
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #8, !dbg !5233
  ret void, !dbg !5234
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !5235 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5237, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !5238, metadata !DIExpression()), !dbg !5239
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #8, !dbg !5240
  ret void, !dbg !5241
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !5242 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !5244, metadata !DIExpression()), !dbg !5245
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #8, !dbg !5246
  %tobool = icmp eq i8 %call, 0, !dbg !5246
  br i1 %tobool, label %if.end, label %if.then, !dbg !5248

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !5249
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !5251
  br label %if.end, !dbg !5252

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5253
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !5254 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5258, metadata !DIExpression()), !dbg !5261
  call void @llvm.dbg.value(metadata i32 %i, metadata !5259, metadata !DIExpression()), !dbg !5261
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5260, metadata !DIExpression()), !dbg !5261
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !5262
  %tobool = icmp eq i8 %call, 0, !dbg !5262
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !5262

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !5262
  %cmp = icmp ugt i32 %call1, %i, !dbg !5262
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5262

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5262
  br label %cond.end, !dbg !5262

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !5263
  %idxprom = zext i32 %i to i64, !dbg !5263
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !5263
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !5264
  ret void, !dbg !5265
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5266 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5268, metadata !DIExpression()), !dbg !5269
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !5270
  %cmp = icmp eq i32 %call, 0, !dbg !5271
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !5272

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !5273
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5274
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5275
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5276 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5278, metadata !DIExpression()), !dbg !5279
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !5280
  %0 = load i32, i32* %num_ops, align 4, !dbg !5280
  ret i32 %0, !dbg !5281
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5282 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5286, metadata !DIExpression()), !dbg !5288
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !5289
  %idxprom = zext i32 %call to i64, !dbg !5290
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !5290
  %0 = load i64, i64* %arrayidx, align 8, !dbg !5290
  call void @llvm.dbg.value(metadata i64 %0, metadata !5287, metadata !DIExpression()), !dbg !5288
  %cmp = icmp eq i64 %0, 0, !dbg !5291
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5291

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5291
  br label %cond.end, !dbg !5291

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !5292
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !5293
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !5294
  ret %union.tree_node** %2, !dbg !5295
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5296 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5300, metadata !DIExpression()), !dbg !5301
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !5302
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !5303
  ret i32 %call1, !dbg !5304
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !5305 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5309, metadata !DIExpression()), !dbg !5310
  %idxprom = zext i32 %code to i64, !dbg !5311
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !5311
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5311
  ret i32 %0, !dbg !5312
}

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5313 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5318, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5319, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5320, metadata !DIExpression()), !dbg !5321
  %0 = and i32 %flags, 11, !dbg !5322
  %1 = icmp eq i32 %0, 1, !dbg !5322
  br i1 %1, label %cond.end, label %cond.true, !dbg !5322

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5322
  br label %cond.end, !dbg !5322

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #8, !dbg !5323
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5324
  store i32 2, i32* %iter_type, align 4, !dbg !5325
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !5326
  ret %struct.ssa_use_operand_d* %call, !dbg !5327
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5328 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5334, metadata !DIExpression()), !dbg !5335
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5336
  %0 = load i8, i8* %done, align 8, !dbg !5336
  ret i8 %0, !dbg !5337
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5338 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5342, metadata !DIExpression()), !dbg !5343
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5344
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5344
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5345
  ret %union.tree_node* %1, !dbg !5346
}

; Function Attrs: nounwind uwtable
define internal fastcc void @cprop_operand(%union.gimple_statement_d* %stmt, %struct.ssa_use_operand_d* %op_p) unnamed_addr #5 !dbg !5347 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5351, metadata !DIExpression()), !dbg !5355
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %op_p, metadata !5352, metadata !DIExpression()), !dbg !5355
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %op_p) #8, !dbg !5356
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5354, metadata !DIExpression()), !dbg !5355
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5357
  %0 = bitcast %union.tree_node** %version to i32*, !dbg !5357
  %1 = load i32, i32* %0, align 8, !dbg !5357
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !5357
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !5357
  %call1 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !5357
  %cmp = icmp ult i32 %1, %call1, !dbg !5357
  br i1 %cmp, label %cond.true2, label %cond.end13, !dbg !5357

cond.true2:                                       ; preds = %entry
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !5357
  %base5 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !5357
  %4 = load i32, i32* %0, align 8, !dbg !5357
  %call11 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base5, i32 %4) #8, !dbg !5357
  br label %cond.end13, !dbg !5357

cond.end13:                                       ; preds = %entry, %cond.true2
  %cond14 = phi %union.tree_node* [ %call11, %cond.true2 ], [ null, %entry ], !dbg !5357
  call void @llvm.dbg.value(metadata %union.tree_node* %cond14, metadata !5353, metadata !DIExpression()), !dbg !5355
  %tobool15 = icmp ne %union.tree_node* %cond14, null, !dbg !5358
  %cmp16 = icmp ne %union.tree_node* %cond14, %call, !dbg !5360
  %or.cond = and i1 %tobool15, %cmp16, !dbg !5361
  br i1 %or.cond, label %if.then, label %cleanup.cont, !dbg !5361

if.then:                                          ; preds = %cond.end13
  %call17 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !5362
  %tobool18 = icmp eq i8 %call17, 0, !dbg !5362
  br i1 %tobool18, label %land.lhs.true19, label %if.end, !dbg !5365

land.lhs.true19:                                  ; preds = %if.then
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5366
  %bf.load = load i64, i64* %5, align 8, !dbg !5366
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5367
  %cmp21 = icmp eq i64 %bf.cast1, 141, !dbg !5367
  br i1 %cmp21, label %lor.lhs.false, label %cleanup.cont, !dbg !5368

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %call22 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* nonnull %cond14) #6, !dbg !5369
  %tobool23 = icmp eq i8 %call22, 0, !dbg !5369
  br i1 %tobool23, label %lor.lhs.false24, label %cleanup.cont, !dbg !5370

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %call25 = tail call %union.tree_node* @get_virtual_var(%union.tree_node* nonnull %cond14) #6, !dbg !5371
  %call26 = tail call %union.tree_node* @get_virtual_var(%union.tree_node* %call) #6, !dbg !5372
  %cmp27 = icmp eq %union.tree_node* %call25, %call26, !dbg !5373
  br i1 %cmp27, label %if.end, label %cleanup.cont, !dbg !5374

if.end:                                           ; preds = %lor.lhs.false24, %if.then
  %call30 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !5375
  %cmp31 = icmp eq i32 %call30, 7, !dbg !5377
  br i1 %cmp31, label %land.lhs.true33, label %if.end37, !dbg !5378

land.lhs.true33:                                  ; preds = %if.end
  %call34 = tail call zeroext i8 @may_propagate_copy_into_asm(%union.tree_node* %call) #6, !dbg !5379
  %tobool35 = icmp eq i8 %call34, 0, !dbg !5379
  br i1 %tobool35, label %cleanup.cont, label %if.end37, !dbg !5380

if.end37:                                         ; preds = %land.lhs.true33, %if.end
  %call38 = tail call zeroext i8 @may_propagate_copy(%union.tree_node* %call, %union.tree_node* nonnull %cond14) #6, !dbg !5381
  %tobool39 = icmp eq i8 %call38, 0, !dbg !5381
  br i1 %tobool39, label %cleanup.cont, label %if.end41, !dbg !5383

if.end41:                                         ; preds = %if.end37
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %cond14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5384
  %6 = bitcast %union.tree_node** %type to i64**, !dbg !5384
  %7 = load i64*, i64** %6, align 8, !dbg !5384
  %bf.load43 = load i64, i64* %7, align 8, !dbg !5384
  %bf.cast452 = and i64 %bf.load43, 65535, !dbg !5384
  %cmp46 = icmp eq i64 %bf.cast452, 10, !dbg !5384
  br i1 %cmp46, label %land.lhs.true57, label %lor.lhs.false48, !dbg !5384

lor.lhs.false48:                                  ; preds = %if.end41
  %cmp55 = icmp eq i64 %bf.cast452, 12, !dbg !5384
  br i1 %cmp55, label %land.lhs.true57, label %if.end75, !dbg !5386

land.lhs.true57:                                  ; preds = %lor.lhs.false48, %if.end41
  %type61 = getelementptr inbounds i64, i64* %7, i64 2, !dbg !5387
  %8 = bitcast i64* %type61 to i64**, !dbg !5387
  %9 = load i64*, i64** %8, align 8, !dbg !5387
  %bf.load63 = load i64, i64* %9, align 8, !dbg !5387
  %bf.cast657 = and i64 %bf.load63, 524288, !dbg !5387
  %tobool66 = icmp eq i64 %bf.cast657, 0, !dbg !5387
  br i1 %tobool66, label %if.end75, label %land.lhs.true67, !dbg !5388

land.lhs.true67:                                  ; preds = %land.lhs.true57
  %call68 = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5389
  %tobool70 = icmp eq i8 %call68, 0, !dbg !5389
  br i1 %tobool70, label %if.end75, label %land.lhs.true71, !dbg !5390

land.lhs.true71:                                  ; preds = %land.lhs.true67
  %call72 = tail call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5391
  %tobool73 = icmp eq i8 %call72, 0, !dbg !5391
  br i1 %tobool73, label %cleanup.cont, label %if.end75, !dbg !5392

if.end75:                                         ; preds = %land.lhs.true71, %land.lhs.true67, %land.lhs.true57, %lor.lhs.false48
  %call76 = tail call i32 @loop_depth_of_name(%union.tree_node* nonnull %cond14) #8, !dbg !5393
  %call77 = tail call i32 @loop_depth_of_name(%union.tree_node* %call) #8, !dbg !5395
  %cmp78 = icmp sgt i32 %call76, %call77, !dbg !5396
  br i1 %cmp78, label %cleanup.cont, label %if.end81, !dbg !5397

if.end81:                                         ; preds = %if.end75
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5398
  %bf.load83 = load i64, i64* %10, align 8, !dbg !5398
  %bf.cast854 = and i64 %bf.load83, 65535, !dbg !5400
  %cmp86 = icmp eq i64 %bf.cast854, 23, !dbg !5400
  br i1 %cmp86, label %if.end93, label %land.lhs.true88, !dbg !5401

land.lhs.true88:                                  ; preds = %if.end81
  %call89 = tail call fastcc zeroext i8 @simple_iv_increment_p(%union.gimple_statement_d* %stmt) #8, !dbg !5402
  %tobool91 = icmp eq i8 %call89, 0, !dbg !5402
  br i1 %tobool91, label %if.end93, label %cleanup.cont, !dbg !5403

if.end93:                                         ; preds = %land.lhs.true88, %if.end81
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5404
  %tobool94 = icmp eq %struct._IO_FILE* %11, null, !dbg !5404
  br i1 %tobool94, label %if.end108, label %land.lhs.true95, !dbg !5406

land.lhs.true95:                                  ; preds = %if.end93
  %12 = load i32, i32* @dump_flags, align 4, !dbg !5407
  %and = and i32 %12, 8, !dbg !5408
  %tobool96 = icmp eq i32 %and, 0, !dbg !5408
  br i1 %tobool96, label %if.end108, label %if.then97, !dbg !5409

if.then97:                                        ; preds = %land.lhs.true95
  %call98 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !5410
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5412
  %14 = load i32, i32* @dump_flags, align 4, !dbg !5413
  tail call void @print_generic_expr(%struct._IO_FILE* %13, %union.tree_node* %call, i32 %14) #6, !dbg !5414
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5415
  %bf.load100 = load i64, i64* %10, align 8, !dbg !5416
  %bf.cast1026 = and i64 %bf.load100, 65535, !dbg !5417
  %cmp103 = icmp eq i64 %bf.cast1026, 141, !dbg !5417
  %cond105 = select i1 %cmp103, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), !dbg !5416
  %call106 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8* %cond105) #6, !dbg !5418
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5419
  %17 = load i32, i32* @dump_flags, align 4, !dbg !5420
  tail call void @print_generic_expr(%struct._IO_FILE* %16, %union.tree_node* nonnull %cond14, i32 %17) #6, !dbg !5421
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5422
  %call107 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !5423
  br label %if.end108, !dbg !5424

if.end108:                                        ; preds = %land.lhs.true95, %if.end93, %if.then97
  %bf.load110 = load i64, i64* %10, align 8, !dbg !5425
  %bf.cast1125 = and i64 %bf.load110, 65535, !dbg !5427
  %cmp113 = icmp eq i64 %bf.cast1125, 141, !dbg !5427
  br i1 %cmp113, label %if.else, label %if.then115, !dbg !5428

if.then115:                                       ; preds = %if.end108
  %19 = load i64, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 3), align 8, !dbg !5429
  %inc = add nsw i64 %19, 1, !dbg !5429
  store i64 %inc, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 3), align 8, !dbg !5429
  br label %if.end117, !dbg !5430

if.else:                                          ; preds = %if.end108
  %20 = load i64, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 4), align 8, !dbg !5431
  %inc116 = add nsw i64 %20, 1, !dbg !5431
  store i64 %inc116, i64* getelementptr inbounds (%struct.opt_stats_d, %struct.opt_stats_d* @opt_stats, i64 0, i32 4), align 8, !dbg !5431
  br label %if.end117

if.end117:                                        ; preds = %if.else, %if.then115
  tail call void @propagate_value(%struct.ssa_use_operand_d* %op_p, %union.tree_node* nonnull %cond14) #6, !dbg !5432
  tail call void @gimple_set_modified(%union.gimple_statement_d* %stmt, i8 zeroext 1) #6, !dbg !5433
  br label %cleanup.cont, !dbg !5434

cleanup.cont:                                     ; preds = %land.lhs.true33, %land.lhs.true71, %land.lhs.true88, %if.end37, %lor.lhs.false24, %lor.lhs.false, %land.lhs.true19, %if.end75, %if.end117, %cond.end13
  ret void, !dbg !5435
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5436 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5440, metadata !DIExpression()), !dbg !5442
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5443
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !5443
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !5445
  br i1 %tobool, label %if.end, label %if.then, !dbg !5446

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !5447
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !5441, metadata !DIExpression()), !dbg !5442
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !5449
  %2 = load i64, i64* %1, align 8, !dbg !5449
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5450
  store i64 %2, i64* %3, align 8, !dbg !5450
  br label %cleanup, !dbg !5451

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5452
  %4 = load i32, i32* %phi_i, align 8, !dbg !5452
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5454
  %5 = load i32, i32* %num_phi, align 4, !dbg !5454
  %cmp = icmp slt i32 %4, %5, !dbg !5455
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !5456

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5457
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5457
  %inc = add nsw i32 %4, 1, !dbg !5457
  store i32 %inc, i32* %phi_i, align 8, !dbg !5457
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #8, !dbg !5457
  br label %cleanup, !dbg !5459

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5460
  store i8 1, i8* %done, align 8, !dbg !5461
  br label %cleanup, !dbg !5462

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !5442
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5463
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5464 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5468, metadata !DIExpression()), !dbg !5471
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5469, metadata !DIExpression()), !dbg !5471
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5470, metadata !DIExpression()), !dbg !5471
  %0 = and i32 %flags, 10, !dbg !5472
  %1 = icmp eq i32 %0, 8, !dbg !5472
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !5472

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !5472
  %3 = icmp eq i32 %2, 4, !dbg !5472
  br i1 %3, label %cond.true, label %cond.end, !dbg !5472

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5472
  br label %cond.end, !dbg !5472

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !5473
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !5474

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5475
  br label %cond.end12, !dbg !5474

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !5474
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5476
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !5477
  %and14 = and i32 %flags, 8, !dbg !5478
  %tobool15 = icmp eq i32 %and14, 0, !dbg !5478
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !5480

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !5481
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !5482

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #8, !dbg !5483
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !5484
  br i1 %cmp, label %if.end, label %if.then, !dbg !5485

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5486
  %6 = load i64*, i64** %5, align 8, !dbg !5486
  %7 = load i64, i64* %6, align 8, !dbg !5487
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5488
  store i64 %7, i64* %8, align 8, !dbg !5488
  br label %if.end, !dbg !5489

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !5490
  %tobool24 = icmp eq i32 %and23, 0, !dbg !5490
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !5491

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5492
  br label %cond.end28, !dbg !5491

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !5491
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5493
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !5494
  %and30 = and i32 %flags, 4, !dbg !5495
  %tobool31 = icmp eq i32 %and30, 0, !dbg !5495
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !5497

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !5498
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !5499

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #8, !dbg !5500
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !5501
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !5502

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5503
  %11 = load i64*, i64** %10, align 8, !dbg !5503
  %12 = load i64, i64* %11, align 8, !dbg !5504
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5505
  store i64 %12, i64* %13, align 8, !dbg !5505
  br label %if.end42, !dbg !5506

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5507
  store i8 0, i8* %done, align 8, !dbg !5508
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5509
  store i32 0, i32* %phi_i, align 8, !dbg !5510
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5511
  store i32 0, i32* %num_phi, align 4, !dbg !5512
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5513
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5514
  ret void, !dbg !5515
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5516 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5520, metadata !DIExpression()), !dbg !5521
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !5522
  %tobool = icmp eq i8 %call, 0, !dbg !5522
  br i1 %tobool, label %return, label %if.end, !dbg !5524

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !5525
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !5525
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !5525
  br label %return, !dbg !5526

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5521
  ret %struct.def_optype_d* %retval.0, !dbg !5527
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5528 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5530, metadata !DIExpression()), !dbg !5531
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !5532
  %tobool = icmp eq i8 %call, 0, !dbg !5532
  br i1 %tobool, label %return, label %if.end, !dbg !5534

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !5535
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !5535
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5535
  br label %return, !dbg !5536

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5531
  ret %union.tree_node* %retval.0, !dbg !5537
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5538 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5542, metadata !DIExpression()), !dbg !5543
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !5544
  %tobool = icmp eq i8 %call, 0, !dbg !5544
  br i1 %tobool, label %return, label %if.end, !dbg !5546

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !5547
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !5547
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !5547
  br label %return, !dbg !5548

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5543
  ret %struct.use_optype_d* %retval.0, !dbg !5549
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_virtual_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @may_propagate_copy_into_asm(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @simple_iv_increment_p(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5550 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5554, metadata !DIExpression()), !dbg !5559
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !5560
  %cmp = icmp eq i32 %call, 6, !dbg !5562
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5563

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !5564
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5555, metadata !DIExpression()), !dbg !5559
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5565
  %bf.load = load i64, i64* %0, align 8, !dbg !5565
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5567
  %cmp2 = icmp eq i64 %bf.cast1, 141, !dbg !5567
  br i1 %cmp2, label %if.end4, label %cleanup, !dbg !5568

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !5569
  %cmp6 = icmp eq i32 %call5, 63, !dbg !5571
  br i1 %cmp6, label %if.end10, label %land.lhs.true, !dbg !5572

land.lhs.true:                                    ; preds = %if.end4
  %call7 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !5573
  %cmp8 = icmp eq i32 %call7, 64, !dbg !5574
  br i1 %cmp8, label %if.end10, label %cleanup, !dbg !5575

if.end10:                                         ; preds = %land.lhs.true, %if.end4
  %call11 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !5576
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5556, metadata !DIExpression()), !dbg !5559
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5577
  %bf.load13 = load i64, i64* %1, align 8, !dbg !5577
  %bf.cast152 = and i64 %bf.load13, 65535, !dbg !5579
  %cmp16 = icmp eq i64 %bf.cast152, 141, !dbg !5579
  br i1 %cmp16, label %if.end18, label %cleanup, !dbg !5580

if.end18:                                         ; preds = %if.end10
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5581
  %2 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5581
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %2, align 8, !dbg !5581
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %3, metadata !5557, metadata !DIExpression()), !dbg !5559
  %call19 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %3) #8, !dbg !5582
  %cmp20 = icmp eq i32 %call19, 16, !dbg !5584
  br i1 %cmp20, label %for.cond.preheader, label %cleanup, !dbg !5585

for.cond.preheader:                               ; preds = %if.end18
  br label %for.cond, !dbg !5586

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5588
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5558, metadata !DIExpression()), !dbg !5559
  %call23 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %3) #8, !dbg !5589
  %conv = zext i32 %call23 to i64, !dbg !5589
  %cmp24 = icmp ult i64 %i.0, %conv, !dbg !5591
  br i1 %cmp24, label %for.body, label %cleanup.loopexit, !dbg !5586

for.body:                                         ; preds = %for.cond
  %call26 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %3, i64 %i.0) #8, !dbg !5592
  %cmp27 = icmp eq %union.tree_node* %call26, %call1, !dbg !5594
  br i1 %cmp27, label %cleanup.loopexit, label %for.inc, !dbg !5595

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5596
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5558, metadata !DIExpression()), !dbg !5559
  br label %for.cond, !dbg !5597, !llvm.loop !5598

cleanup.loopexit:                                 ; preds = %for.body, %for.cond
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !5600

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %if.end18, %if.end10, %if.end, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ 0, %land.lhs.true ], [ 0, %if.end10 ], [ 0, %if.end18 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !5559
  ret i8 %retval.0, !dbg !5600
}

declare dso_local void @propagate_value(%struct.ssa_use_operand_d*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5601 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5603, metadata !DIExpression()), !dbg !5604
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !5605
  ret %union.tree_node* %call, !dbg !5606
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5607 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5609, metadata !DIExpression()), !dbg !5611
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #8, !dbg !5612
  call void @llvm.dbg.value(metadata i32 %call, metadata !5610, metadata !DIExpression()), !dbg !5611
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #8, !dbg !5613
  %cmp = icmp eq i32 %call1, 3, !dbg !5615
  br i1 %cmp, label %if.then, label %if.end, !dbg !5616

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #8, !dbg !5617
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5617
  %bf.load = load i64, i64* %0, align 8, !dbg !5617
  %1 = trunc i64 %bf.load to i32, !dbg !5617
  %bf.cast = and i32 %1, 65535, !dbg !5617
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5610, metadata !DIExpression()), !dbg !5611
  br label %if.end, !dbg !5618

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !5611
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !5610, metadata !DIExpression()), !dbg !5611
  ret i32 %code.0, !dbg !5619
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5620 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5624, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 %i, metadata !5625, metadata !DIExpression()), !dbg !5626
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !5627
  %tobool = icmp eq i8 %call, 0, !dbg !5627
  br i1 %tobool, label %return, label %if.then, !dbg !5629

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !5630
  %idxprom = zext i32 %i to i64, !dbg !5630
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !5630
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5630
  br label %return, !dbg !5632

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !5633
  ret %union.tree_node* %retval.0, !dbg !5634
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5635 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5637, metadata !DIExpression()), !dbg !5639
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !5640
  call void @llvm.dbg.value(metadata i32 %call, metadata !5638, metadata !DIExpression()), !dbg !5639
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !5641

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5643
  %bf.load = load i32, i32* %0, align 8, !dbg !5643
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5643
  br label %cleanup, !dbg !5644

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5645
  br label %cleanup, !dbg !5647

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !5639
  ret i32 %retval.0, !dbg !5648
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !5649 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5653, metadata !DIExpression()), !dbg !5654
  %idxprom = sext i32 %code to i64, !dbg !5655
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !5655
  %0 = load i8, i8* %arrayidx, align 1, !dbg !5655
  %conv = zext i8 %0 to i32, !dbg !5656
  ret i32 %conv, !dbg !5657
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5658 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5662, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.value(metadata i32 %i, metadata !5663, metadata !DIExpression()), !dbg !5664
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #8, !dbg !5665
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !5666
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !5667
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5668 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5672, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.value(metadata i32 %index, metadata !5673, metadata !DIExpression()), !dbg !5674
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !5675
  %0 = load i32, i32* %capacity, align 8, !dbg !5675
  %cmp = icmp ult i32 %0, %index, !dbg !5675
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5675

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5675
  br label %cond.end, !dbg !5675

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !5676
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !5676
  ret %struct.phi_arg_d* %arrayidx, !dbg !5677
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5678 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5680, metadata !DIExpression()), !dbg !5681
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !5682
  ret %union.tree_node* %call, !dbg !5683
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lookup_avail_expr(%union.gimple_statement_d* %stmt, i8 zeroext %insert) unnamed_addr #5 !dbg !5684 {
entry:
  %element = alloca %struct.expr_hash_elt, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5688, metadata !DIExpression()), !dbg !5697
  call void @llvm.dbg.value(metadata i8 %insert, metadata !5689, metadata !DIExpression()), !dbg !5697
  %0 = bitcast %struct.expr_hash_elt* %element to i8*, !dbg !5698
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #7, !dbg !5698
  %call = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !5699
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5691, metadata !DIExpression()), !dbg !5697
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %element, metadata !5693, metadata !DIExpression(DW_OP_deref)), !dbg !5697
  call fastcc void @initialize_hash_element(%union.gimple_statement_d* %stmt, %union.tree_node* %call, %struct.expr_hash_elt* nonnull %element) #8, !dbg !5700
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5701
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !5701
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5703

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !5704
  %and = and i32 %2, 8, !dbg !5705
  %tobool1 = icmp eq i32 %and, 0, !dbg !5705
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5706

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !5707
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5709
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %element, metadata !5693, metadata !DIExpression(DW_OP_deref)), !dbg !5697
  call fastcc void @print_expr_hash_elt(%struct._IO_FILE* %3, %struct.expr_hash_elt* nonnull %element) #8, !dbg !5710
  br label %if.end, !dbg !5711

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %kind = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 1, !dbg !5712
  %4 = load i32, i32* %kind, align 8, !dbg !5712
  %cmp = icmp eq i32 %4, 0, !dbg !5714
  br i1 %cmp, label %land.lhs.true3, label %if.end13, !dbg !5715

land.lhs.true3:                                   ; preds = %if.end
  %rhs = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 0, !dbg !5716
  %5 = bitcast %union.tree_node** %rhs to i64**, !dbg !5716
  %6 = load i64*, i64** %5, align 8, !dbg !5716
  %bf.load = load i64, i64* %6, align 8, !dbg !5716
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5717
  %cmp5 = icmp eq i64 %bf.cast2, 141, !dbg !5717
  br i1 %cmp5, label %cleanup, label %lor.lhs.false, !dbg !5718

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %7 = bitcast i64* %6 to %union.tree_node*, !dbg !5718
  %call10 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %7) #6, !dbg !5719
  %tobool11 = icmp eq i8 %call10, 0, !dbg !5719
  br i1 %tobool11, label %if.end13, label %cleanup, !dbg !5720

if.end13:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct.htab*, %struct.htab** @avail_exprs, align 8, !dbg !5721
  %hash = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 3, !dbg !5722
  %9 = load i32, i32* %hash, align 8, !dbg !5722
  %tobool15 = icmp ne i8 %insert, 0, !dbg !5723
  %cond = zext i1 %tobool15 to i32, !dbg !5723
  %call16 = call i8** @htab_find_slot_with_hash(%struct.htab* %8, i8* nonnull %0, i32 %9, i32 %cond) #6, !dbg !5724
  call void @llvm.dbg.value(metadata i8** %call16, metadata !5690, metadata !DIExpression()), !dbg !5697
  %cmp17 = icmp eq i8** %call16, null, !dbg !5725
  br i1 %cmp17, label %cleanup, label %if.end20, !dbg !5727

if.end20:                                         ; preds = %if.end13
  %10 = load i8*, i8** %call16, align 8, !dbg !5728
  %cmp21 = icmp eq i8* %10, null, !dbg !5729
  br i1 %cmp21, label %if.then23, label %if.end33, !dbg !5730

if.then23:                                        ; preds = %if.end20
  %call24 = call i8* @xmalloc(i64 80) #6, !dbg !5731
  %11 = bitcast i8* %call24 to %struct.expr_hash_elt*, !dbg !5731
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %11, metadata !5694, metadata !DIExpression()), !dbg !5732
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call24, i8* nonnull align 8 %0, i64 72, i1 false), !dbg !5733
  %stamp = getelementptr inbounds i8, i8* %call24, i64 72, !dbg !5734
  %12 = bitcast i8* %stamp to i8**, !dbg !5735
  store i8* %call24, i8** %12, align 8, !dbg !5735
  store i8* %call24, i8** %call16, align 8, !dbg !5736
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5737
  %tobool25 = icmp eq %struct._IO_FILE* %13, null, !dbg !5737
  br i1 %tobool25, label %if.end31, label %land.lhs.true26, !dbg !5739

land.lhs.true26:                                  ; preds = %if.then23
  %14 = load i32, i32* @dump_flags, align 4, !dbg !5740
  %and27 = and i32 %14, 8, !dbg !5741
  %tobool28 = icmp eq i32 %and27, 0, !dbg !5741
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !5742

if.then29:                                        ; preds = %land.lhs.true26
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !5743
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5745
  call fastcc void @print_expr_hash_elt(%struct._IO_FILE* %15, %struct.expr_hash_elt* %11) #8, !dbg !5746
  br label %if.end31, !dbg !5747

if.end31:                                         ; preds = %land.lhs.true26, %if.then23, %if.then29
  %call32 = call fastcc %struct.expr_hash_elt** @VEC_expr_hash_elt_t_heap_safe_push(%struct.VEC_expr_hash_elt_t_heap** nonnull @avail_exprs_stack, %struct.expr_hash_elt* %11) #8, !dbg !5748
  br label %cleanup

if.end33:                                         ; preds = %if.end20
  %lhs34 = bitcast i8* %10 to %union.tree_node**, !dbg !5749
  %16 = load %union.tree_node*, %union.tree_node** %lhs34, align 8, !dbg !5749
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !5691, metadata !DIExpression()), !dbg !5697
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5750
  %bf.load36 = load i64, i64* %17, align 8, !dbg !5750
  %bf.cast381 = and i64 %bf.load36, 65535, !dbg !5752
  %cmp39 = icmp eq i64 %bf.cast381, 141, !dbg !5752
  br i1 %cmp39, label %if.then41, label %if.end64, !dbg !5753

if.then41:                                        ; preds = %if.end33
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5754
  %18 = bitcast %union.tree_node** %version to i32*, !dbg !5754
  %19 = load i32, i32* %18, align 8, !dbg !5754
  %20 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !5754
  %base43 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %20, i64 0, i32 0, !dbg !5754
  %call45 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base43) #8, !dbg !5754
  %cmp46 = icmp ult i32 %19, %call45, !dbg !5754
  br i1 %cmp46, label %cond.true48, label %cond.end59, !dbg !5754

cond.true48:                                      ; preds = %if.then41
  %21 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !5754
  %base51 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %21, i64 0, i32 0, !dbg !5754
  %22 = load i32, i32* %18, align 8, !dbg !5754
  %call57 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base51, i32 %22) #8, !dbg !5754
  br label %cond.end59, !dbg !5754

cond.end59:                                       ; preds = %if.then41, %cond.true48
  %cond60 = phi %union.tree_node* [ %call57, %cond.true48 ], [ null, %if.then41 ], !dbg !5754
  call void @llvm.dbg.value(metadata %union.tree_node* %cond60, metadata !5692, metadata !DIExpression()), !dbg !5697
  %tobool61 = icmp eq %union.tree_node* %cond60, null, !dbg !5756
  %spec.select = select i1 %tobool61, %union.tree_node* %16, %union.tree_node* %cond60, !dbg !5758
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !5691, metadata !DIExpression()), !dbg !5697
  br label %if.end64, !dbg !5759

if.end64:                                         ; preds = %cond.end59, %if.end33
  %lhs.1 = phi %union.tree_node* [ %spec.select, %cond.end59 ], [ %16, %if.end33 ], !dbg !5697
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.1, metadata !5691, metadata !DIExpression()), !dbg !5697
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5760
  %tobool65 = icmp eq %struct._IO_FILE* %23, null, !dbg !5760
  br i1 %tobool65, label %cleanup, label %land.lhs.true66, !dbg !5762

land.lhs.true66:                                  ; preds = %if.end64
  %24 = load i32, i32* @dump_flags, align 4, !dbg !5763
  %and67 = and i32 %24, 8, !dbg !5764
  %tobool68 = icmp eq i32 %and67, 0, !dbg !5764
  br i1 %tobool68, label %cleanup, label %if.then69, !dbg !5765

if.then69:                                        ; preds = %land.lhs.true66
  %call70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !5766
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5768
  call void @print_generic_expr(%struct._IO_FILE* %25, %union.tree_node* %lhs.1, i32 0) #6, !dbg !5769
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5770
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5771
  br label %cleanup, !dbg !5772

cleanup:                                          ; preds = %lor.lhs.false, %land.lhs.true66, %if.end64, %if.then69, %if.end13, %land.lhs.true3, %if.end31
  %retval.0 = phi %union.tree_node* [ null, %if.end31 ], [ null, %lor.lhs.false ], [ null, %land.lhs.true3 ], [ null, %if.end13 ], [ %lhs.1, %if.then69 ], [ %lhs.1, %land.lhs.true66 ], [ %lhs.1, %if.end64 ], !dbg !5697
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #7, !dbg !5773
  ret %union.tree_node* %retval.0, !dbg !5773
}

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @may_propagate_copy_into_stmt(%union.gimple_statement_d*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @print_gimple_expr(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_hash_element(%union.gimple_statement_d* %stmt, %union.tree_node* %lhs, %struct.expr_hash_elt* %element) unnamed_addr #5 !dbg !5774 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5778, metadata !DIExpression()), !dbg !5791
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !5779, metadata !DIExpression()), !dbg !5791
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %element, metadata !5780, metadata !DIExpression()), !dbg !5791
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !5792
  call void @llvm.dbg.value(metadata i32 %call, metadata !5781, metadata !DIExpression()), !dbg !5791
  %expr1 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, !dbg !5793
  call void @llvm.dbg.value(metadata %struct.hashable_expr* %expr1, metadata !5782, metadata !DIExpression()), !dbg !5791
  switch i32 %call, label %if.else105 [
    i32 6, label %if.then
    i32 1, label %if.then29
    i32 8, label %if.then46
    i32 5, label %if.then82
    i32 3, label %if.then95
  ], !dbg !5794

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !5795
  call void @llvm.dbg.value(metadata i32 %call2, metadata !5783, metadata !DIExpression()), !dbg !5796
  %type = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr1, i64 0, i32 0, !dbg !5797
  store %union.tree_node* null, %union.tree_node** %type, align 8, !dbg !5798
  %call3 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call2) #8, !dbg !5799
  switch i32 %call3, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb5
    i32 1, label %sw.bb14
  ], !dbg !5800

sw.bb:                                            ; preds = %if.then
  %kind = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 1, !dbg !5801
  store i32 0, i32* %kind, align 8, !dbg !5803
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !5804
  %rhs = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 0, !dbg !5805
  store %union.tree_node* %call4, %union.tree_node** %rhs, align 8, !dbg !5806
  br label %if.end110, !dbg !5807

sw.bb5:                                           ; preds = %if.then
  %kind6 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 1, !dbg !5808
  store i32 1, i32* %kind6, align 8, !dbg !5809
  %call7 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !5810
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5810
  %0 = bitcast %union.tree_node** %type8 to i64*, !dbg !5810
  %1 = load i64, i64* %0, align 8, !dbg !5810
  %2 = bitcast %struct.hashable_expr* %expr1 to i64*, !dbg !5811
  store i64 %1, i64* %2, align 8, !dbg !5811
  %ops10 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, !dbg !5812
  %op = bitcast %union.anon.0* %ops10 to i32*, !dbg !5813
  store i32 %call2, i32* %op, align 8, !dbg !5814
  %call11 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !5815
  %opnd = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 1, !dbg !5816
  %3 = bitcast i8* %opnd to %union.tree_node**, !dbg !5816
  store %union.tree_node* %call11, %union.tree_node** %3, align 8, !dbg !5817
  br label %if.end110, !dbg !5818

sw.bb14:                                          ; preds = %if.then
  %kind15 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 1, !dbg !5819
  store i32 2, i32* %kind15, align 8, !dbg !5820
  %call16 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !5821
  %type18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5821
  %4 = bitcast %union.tree_node** %type18 to i64*, !dbg !5821
  %5 = load i64, i64* %4, align 8, !dbg !5821
  %6 = bitcast %struct.hashable_expr* %expr1 to i64*, !dbg !5822
  store i64 %5, i64* %6, align 8, !dbg !5822
  %ops20 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, !dbg !5823
  %op21 = bitcast %union.anon.0* %ops20 to i32*, !dbg !5824
  store i32 %call2, i32* %op21, align 8, !dbg !5825
  %call22 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !5826
  %opnd0 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 1, !dbg !5827
  %7 = bitcast i8* %opnd0 to %union.tree_node**, !dbg !5827
  store %union.tree_node* %call22, %union.tree_node** %7, align 8, !dbg !5828
  %call25 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #8, !dbg !5829
  %opnd1 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 2, !dbg !5830
  %8 = bitcast i64* %opnd1 to %union.tree_node**, !dbg !5830
  store %union.tree_node* %call25, %union.tree_node** %8, align 8, !dbg !5831
  br label %if.end110, !dbg !5832

sw.default:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 234, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5833
  br label %if.end110, !dbg !5834

if.then29:                                        ; preds = %entry
  %9 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to i64*), align 8, !dbg !5835
  %10 = bitcast %struct.hashable_expr* %expr1 to i64*, !dbg !5837
  store i64 %9, i64* %10, align 8, !dbg !5837
  %kind31 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 1, !dbg !5838
  store i32 2, i32* %kind31, align 8, !dbg !5839
  %call32 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %stmt) #8, !dbg !5840
  %ops33 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, !dbg !5841
  %op35 = bitcast %union.anon.0* %ops33 to i32*, !dbg !5842
  store i32 %call32, i32* %op35, align 8, !dbg !5843
  %call36 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !5844
  %opnd039 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 1, !dbg !5845
  %11 = bitcast i8* %opnd039 to %union.tree_node**, !dbg !5845
  store %union.tree_node* %call36, %union.tree_node** %11, align 8, !dbg !5846
  %call40 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %stmt) #8, !dbg !5847
  %opnd143 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 2, !dbg !5848
  %12 = bitcast i64* %opnd143 to %union.tree_node**, !dbg !5848
  store %union.tree_node* %call40, %union.tree_node** %12, align 8, !dbg !5849
  br label %if.end110, !dbg !5850

if.then46:                                        ; preds = %entry
  %call47 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #8, !dbg !5851
  %conv = zext i32 %call47 to i64, !dbg !5851
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5786, metadata !DIExpression()), !dbg !5852
  %call48 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !5853
  %tobool = icmp eq %union.tree_node* %call48, null, !dbg !5853
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5853

cond.true:                                        ; preds = %if.then46
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 250, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5853
  br label %cond.end, !dbg !5853

cond.end:                                         ; preds = %if.then46, %cond.true
  %call49 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !5854
  %type51 = getelementptr inbounds %union.tree_node, %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5854
  %13 = bitcast %union.tree_node** %type51 to i64*, !dbg !5854
  %14 = load i64, i64* %13, align 8, !dbg !5854
  %15 = bitcast %struct.hashable_expr* %expr1 to i64*, !dbg !5855
  store i64 %14, i64* %15, align 8, !dbg !5855
  %kind53 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 1, !dbg !5856
  store i32 3, i32* %kind53, align 8, !dbg !5857
  %call54 = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %stmt) #8, !dbg !5858
  %fn = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 0, !dbg !5859
  store %union.tree_node* %call54, %union.tree_node** %fn, align 8, !dbg !5860
  %call57 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %stmt) #6, !dbg !5861
  %and = and i32 %call57, 3, !dbg !5863
  %tobool58 = icmp eq i32 %and, 0, !dbg !5863
  %pure = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 1, !dbg !5864
  br i1 %tobool58, label %if.else62, label %if.then59, !dbg !5865

if.then59:                                        ; preds = %cond.end
  br label %if.end, !dbg !5866

if.else62:                                        ; preds = %cond.end
  br label %if.end

if.end:                                           ; preds = %if.else62, %if.then59
  %storemerge = phi i8 [ 0, %if.else62 ], [ 1, %if.then59 ], !dbg !5864
  store i8 %storemerge, i8* %pure, align 8, !dbg !5864
  %nargs68 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 2, !dbg !5867
  store i64 %conv, i64* %nargs68, align 8, !dbg !5868
  %call69 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !5869
  %args = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 3, !dbg !5870
  %16 = bitcast %union.tree_node*** %args to i8**, !dbg !5871
  store i8* %call69, i8** %16, align 8, !dbg !5871
  call void @llvm.dbg.value(metadata i64 0, metadata !5790, metadata !DIExpression()), !dbg !5852
  br label %for.cond, !dbg !5872

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i64 [ 0, %if.end ], [ %inc, %for.body ], !dbg !5874
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5790, metadata !DIExpression()), !dbg !5852
  %exitcond = icmp eq i64 %i.0, %conv, !dbg !5875
  br i1 %exitcond, label %if.end110.loopexit, label %for.body, !dbg !5877

for.body:                                         ; preds = %for.cond
  %conv74 = trunc i64 %i.0 to i32, !dbg !5878
  %call75 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %conv74) #8, !dbg !5879
  %17 = load %union.tree_node**, %union.tree_node*** %args, align 8, !dbg !5880
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %17, i64 %i.0, !dbg !5881
  store %union.tree_node* %call75, %union.tree_node** %arrayidx, align 8, !dbg !5882
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5883
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5790, metadata !DIExpression()), !dbg !5852
  br label %for.cond, !dbg !5884, !llvm.loop !5885

if.then82:                                        ; preds = %entry
  %call83 = tail call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %stmt) #8, !dbg !5887
  %type85 = getelementptr inbounds %union.tree_node, %union.tree_node* %call83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5887
  %18 = bitcast %union.tree_node** %type85 to i64*, !dbg !5887
  %19 = load i64, i64* %18, align 8, !dbg !5887
  %20 = bitcast %struct.hashable_expr* %expr1 to i64*, !dbg !5890
  store i64 %19, i64* %20, align 8, !dbg !5890
  %kind87 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 1, !dbg !5891
  store i32 0, i32* %kind87, align 8, !dbg !5892
  %call88 = tail call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %stmt) #8, !dbg !5893
  %rhs91 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 0, !dbg !5894
  store %union.tree_node* %call88, %union.tree_node** %rhs91, align 8, !dbg !5895
  br label %if.end110, !dbg !5896

if.then95:                                        ; preds = %entry
  %call96 = tail call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %stmt) #8, !dbg !5897
  %type98 = getelementptr inbounds %union.tree_node, %union.tree_node* %call96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5897
  %21 = bitcast %union.tree_node** %type98 to i64*, !dbg !5897
  %22 = load i64, i64* %21, align 8, !dbg !5897
  %23 = bitcast %struct.hashable_expr* %expr1 to i64*, !dbg !5900
  store i64 %22, i64* %23, align 8, !dbg !5900
  %kind100 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 1, !dbg !5901
  store i32 0, i32* %kind100, align 8, !dbg !5902
  %call101 = tail call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %stmt) #8, !dbg !5903
  %rhs104 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 1, i32 2, i32 0, i32 0, !dbg !5904
  store %union.tree_node* %call101, %union.tree_node** %rhs104, align 8, !dbg !5905
  br label %if.end110, !dbg !5906

if.else105:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 279, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5907
  br label %if.end110

if.end110.loopexit:                               ; preds = %for.cond
  br label %if.end110, !dbg !5908

if.end110:                                        ; preds = %if.end110.loopexit, %if.then29, %if.then82, %if.else105, %if.then95, %sw.bb, %sw.bb5, %sw.bb14, %sw.default
  %lhs111 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 0, !dbg !5908
  store %union.tree_node* %lhs, %union.tree_node** %lhs111, align 8, !dbg !5909
  %stmt112 = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 2, !dbg !5910
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %stmt112, align 8, !dbg !5911
  %24 = bitcast %struct.expr_hash_elt* %element to i8*, !dbg !5912
  %call113 = tail call fastcc i32 @avail_expr_hash(i8* %24) #8, !dbg !5913
  %hash = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 3, !dbg !5914
  store i32 %call113, i32* %hash, align 8, !dbg !5915
  %stamp = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %element, i64 0, i32 4, !dbg !5916
  store %struct.expr_hash_elt* %element, %struct.expr_hash_elt** %stamp, align 8, !dbg !5917
  ret void, !dbg !5918
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5919 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5921, metadata !DIExpression()), !dbg !5922
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !5923
  %cmp = icmp ugt i32 %call, 2, !dbg !5925
  br i1 %cmp, label %if.then, label %return, !dbg !5926

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #8, !dbg !5927
  br label %return, !dbg !5928

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !5929
  ret %union.tree_node* %retval.0, !dbg !5930
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5931 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5933, metadata !DIExpression()), !dbg !5935
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !5936
  call void @llvm.dbg.value(metadata i32 %call, metadata !5934, metadata !DIExpression()), !dbg !5935
  %sub = add i32 %call, -3, !dbg !5937
  ret i32 %sub, !dbg !5938
}

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5939 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5941, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.value(metadata i32 %index, metadata !5942, metadata !DIExpression()), !dbg !5943
  %add = add i32 %index, 3, !dbg !5944
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #8, !dbg !5945
  ret %union.tree_node* %call, !dbg !5946
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_references_memory_p(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5947 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5949, metadata !DIExpression()), !dbg !5950
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5951
  %tobool = icmp eq i8 %call, 0, !dbg !5951
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5952

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #8, !dbg !5953
  %tobool2 = icmp ne %union.tree_node* %call1, null, !dbg !5952
  %phitmp = zext i1 %tobool2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5954
}

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_vuse(%union.gimple_statement_d* %g, %union.tree_node* %vuse) unnamed_addr #0 !dbg !5955 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5957, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.value(metadata %union.tree_node* %vuse, metadata !5958, metadata !DIExpression()), !dbg !5959
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !5960
  %tobool = icmp eq i8 %call, 0, !dbg !5960
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5960

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i32 1407, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5960
  br label %cond.end, !dbg !5960

cond.end:                                         ; preds = %entry, %cond.true
  %vuse1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5961
  %0 = bitcast %struct.ssa_use_operand_d** %vuse1 to %union.tree_node**, !dbg !5961
  store %union.tree_node* %vuse, %union.tree_node** %0, align 8, !dbg !5962
  ret void, !dbg !5963
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5964 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5966, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5967, metadata !DIExpression()), !dbg !5970
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !5971
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5968, metadata !DIExpression()), !dbg !5969
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %call) #8, !dbg !5972
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5973
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5974
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5975
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5976
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5977
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5978
  ret void, !dbg !5979
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5980 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5982, metadata !DIExpression()), !dbg !5984
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !5985
  call void @llvm.dbg.value(metadata i32 %call, metadata !5983, metadata !DIExpression()), !dbg !5984
  %cmp = icmp ugt i32 %call, 1, !dbg !5986
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5986

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i32 3162, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5986
  br label %cond.end, !dbg !5986

cond.end:                                         ; preds = %entry, %cond.true
  %sub = add i32 %call, -1, !dbg !5987
  ret i32 %sub, !dbg !5988
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5989 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5991, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i32 %index, metadata !5992, metadata !DIExpression()), !dbg !5993
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !5994
  %add = add i32 %index, 1, !dbg !5994
  %cmp = icmp ugt i32 %call, %add, !dbg !5994
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5994

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i32 3215, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5994
  br label %cond.end, !dbg !5994

cond.end:                                         ; preds = %entry, %cond.true
  %call2 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #8, !dbg !5995
  ret %union.tree_node* %call2, !dbg !5996
}

declare dso_local %struct.basic_block_def* @label_to_block_fn(%struct.function*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_info* @allocate_edge_info(%struct.edge_def* %e) unnamed_addr #5 !dbg !5997 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !6001, metadata !DIExpression()), !dbg !6003
  %call = tail call i8* @xcalloc(i64 1, i64 32) #6, !dbg !6004
  %0 = bitcast i8* %call to %struct.edge_info*, !dbg !6004
  call void @llvm.dbg.value(metadata %struct.edge_info* %0, metadata !6002, metadata !DIExpression()), !dbg !6003
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 3, !dbg !6005
  store i8* %call, i8** %aux, align 8, !dbg !6006
  ret %struct.edge_info* %0, !dbg !6007
}

declare dso_local void @extract_true_false_edges_from_block(%struct.basic_block_def*, %struct.edge_def**, %struct.edge_def**) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @invert_truthvalue_loc(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @record_conditions(%struct.edge_info* %edge_info, %union.tree_node* %cond, %union.tree_node* %inverted) unnamed_addr #5 !dbg !6008 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_info* %edge_info, metadata !6012, metadata !DIExpression()), !dbg !6017
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !6013, metadata !DIExpression()), !dbg !6017
  call void @llvm.dbg.value(metadata %union.tree_node* %inverted, metadata !6014, metadata !DIExpression()), !dbg !6017
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6018
  %bf.load = load i64, i64* %0, align 8, !dbg !6018
  %bf.cast = and i64 %bf.load, 65535, !dbg !6018
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !6018
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6018
  %cmp = icmp eq i32 %1, 5, !dbg !6018
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !6020

if.end:                                           ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6021
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6021
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6015, metadata !DIExpression()), !dbg !6017
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6022
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8, !dbg !6022
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6016, metadata !DIExpression()), !dbg !6017
  %4 = trunc i64 %bf.load to i16, !dbg !6023
  switch i16 %4, label %sw.default [
    i16 97, label %sw.bb
    i16 99, label %sw.bb
    i16 100, label %sw.bb57
    i16 98, label %sw.bb57
    i16 101, label %sw.bb102
    i16 103, label %sw.bb151
    i16 105, label %sw.bb167
    i16 107, label %sw.bb167
    i16 109, label %sw.bb181
    i16 110, label %sw.bb189
  ], !dbg !6024

sw.bb:                                            ; preds = %if.end, %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6025
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !6025
  %6 = load i64*, i64** %5, align 8, !dbg !6025
  %bf.load10 = load i64, i64* %6, align 8, !dbg !6025
  %bf.cast1210 = and i64 %bf.load10, 65535, !dbg !6025
  %cmp13 = icmp eq i64 %bf.cast1210, 9, !dbg !6025
  br i1 %cmp13, label %if.then38, label %lor.lhs.false, !dbg !6025

lor.lhs.false:                                    ; preds = %sw.bb
  %cmp20 = icmp eq i64 %bf.cast1210, 13, !dbg !6025
  br i1 %cmp20, label %land.lhs.true, label %lor.lhs.false21, !dbg !6025

lor.lhs.false21:                                  ; preds = %lor.lhs.false
  %cmp28 = icmp eq i64 %bf.cast1210, 14, !dbg !6025
  br i1 %cmp28, label %land.lhs.true, label %if.else, !dbg !6025

land.lhs.true:                                    ; preds = %lor.lhs.false21, %lor.lhs.false
  %type32 = getelementptr inbounds i64, i64* %6, i64 2, !dbg !6025
  %7 = bitcast i64* %type32 to i64**, !dbg !6025
  %8 = load i64*, i64** %7, align 8, !dbg !6025
  %bf.load34 = load i64, i64* %8, align 8, !dbg !6025
  %bf.cast3614 = and i64 %bf.load34, 65535, !dbg !6025
  %cmp37 = icmp eq i64 %bf.cast3614, 9, !dbg !6025
  br i1 %cmp37, label %if.then38, label %if.else, !dbg !6028

if.then38:                                        ; preds = %land.lhs.true, %sw.bb
  %max_cond_equivalences = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6029
  store i32 6, i32* %max_cond_equivalences, align 8, !dbg !6031
  %call = tail call i8* @xmalloc(i64 336) #6, !dbg !6032
  %cond_equivalences = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6033
  %9 = bitcast %struct.cond_equivalence** %cond_equivalences to i8**, !dbg !6034
  store i8* %call, i8** %9, align 8, !dbg !6034
  %arrayidx40 = getelementptr inbounds i8, i8* %call, i64 224, !dbg !6035
  %10 = bitcast i8* %arrayidx40 to %struct.cond_equivalence*, !dbg !6035
  tail call fastcc void @build_and_record_new_cond(i32 104, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %10) #8, !dbg !6036
  %11 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences, align 8, !dbg !6037
  %arrayidx42 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %11, i64 5, !dbg !6038
  tail call fastcc void @build_and_record_new_cond(i32 110, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx42) #8, !dbg !6039
  %.pre15 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences, align 8, !dbg !6040
  br label %if.end46, !dbg !6041

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false21
  %max_cond_equivalences43 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6042
  store i32 4, i32* %max_cond_equivalences43, align 8, !dbg !6044
  %call44 = tail call i8* @xmalloc(i64 224) #6, !dbg !6045
  %cond_equivalences45 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6046
  %12 = bitcast %struct.cond_equivalence** %cond_equivalences45 to i8**, !dbg !6047
  store i8* %call44, i8** %12, align 8, !dbg !6047
  %13 = bitcast i8* %call44 to %struct.cond_equivalence*
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then38
  %14 = phi %struct.cond_equivalence* [ %13, %if.else ], [ %.pre15, %if.then38 ], !dbg !6040
  %bf.load48 = load i64, i64* %0, align 8, !dbg !6048
  %bf.cast5013 = and i64 %bf.load48, 65535, !dbg !6049
  %cmp51 = icmp eq i64 %bf.cast5013, 97, !dbg !6049
  %cond52 = select i1 %cmp51, i32 98, i32 100, !dbg !6048
  %cond_equivalences53 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6040
  %arrayidx54 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %14, i64 2, !dbg !6050
  tail call fastcc void @build_and_record_new_cond(i32 %cond52, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx54) #8, !dbg !6051
  %15 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences53, align 8, !dbg !6052
  %arrayidx56 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %15, i64 3, !dbg !6053
  tail call fastcc void @build_and_record_new_cond(i32 102, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx56) #8, !dbg !6054
  br label %sw.epilog, !dbg !6055

sw.bb57:                                          ; preds = %if.end, %if.end
  %type59 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6056
  %16 = bitcast %union.tree_node** %type59 to i64**, !dbg !6056
  %17 = load i64*, i64** %16, align 8, !dbg !6056
  %bf.load61 = load i64, i64* %17, align 8, !dbg !6056
  %bf.cast636 = and i64 %bf.load61, 65535, !dbg !6056
  %cmp64 = icmp eq i64 %bf.cast636, 9, !dbg !6056
  br i1 %cmp64, label %if.then91, label %lor.lhs.false65, !dbg !6056

lor.lhs.false65:                                  ; preds = %sw.bb57
  %cmp72 = icmp eq i64 %bf.cast636, 13, !dbg !6056
  br i1 %cmp72, label %land.lhs.true81, label %lor.lhs.false73, !dbg !6056

lor.lhs.false73:                                  ; preds = %lor.lhs.false65
  %cmp80 = icmp eq i64 %bf.cast636, 14, !dbg !6056
  br i1 %cmp80, label %land.lhs.true81, label %if.else97, !dbg !6056

land.lhs.true81:                                  ; preds = %lor.lhs.false73, %lor.lhs.false65
  %type85 = getelementptr inbounds i64, i64* %17, i64 2, !dbg !6056
  %18 = bitcast i64* %type85 to i64**, !dbg !6056
  %19 = load i64*, i64** %18, align 8, !dbg !6056
  %bf.load87 = load i64, i64* %19, align 8, !dbg !6056
  %bf.cast899 = and i64 %bf.load87, 65535, !dbg !6056
  %cmp90 = icmp eq i64 %bf.cast899, 9, !dbg !6056
  br i1 %cmp90, label %if.then91, label %if.else97, !dbg !6058

if.then91:                                        ; preds = %land.lhs.true81, %sw.bb57
  %max_cond_equivalences92 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6059
  store i32 3, i32* %max_cond_equivalences92, align 8, !dbg !6061
  %call93 = tail call i8* @xmalloc(i64 168) #6, !dbg !6062
  %cond_equivalences94 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6063
  %20 = bitcast %struct.cond_equivalence** %cond_equivalences94 to i8**, !dbg !6064
  store i8* %call93, i8** %20, align 8, !dbg !6064
  %arrayidx96 = getelementptr inbounds i8, i8* %call93, i64 112, !dbg !6065
  %21 = bitcast i8* %arrayidx96 to %struct.cond_equivalence*, !dbg !6065
  tail call fastcc void @build_and_record_new_cond(i32 104, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %21) #8, !dbg !6066
  br label %sw.epilog, !dbg !6067

if.else97:                                        ; preds = %land.lhs.true81, %lor.lhs.false73
  %max_cond_equivalences98 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6068
  store i32 2, i32* %max_cond_equivalences98, align 8, !dbg !6070
  %call99 = tail call i8* @xmalloc(i64 112) #6, !dbg !6071
  %cond_equivalences100 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6072
  %22 = bitcast %struct.cond_equivalence** %cond_equivalences100 to i8**, !dbg !6073
  store i8* %call99, i8** %22, align 8, !dbg !6073
  br label %sw.epilog

sw.bb102:                                         ; preds = %if.end
  %type104 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6074
  %23 = bitcast %union.tree_node** %type104 to i64**, !dbg !6074
  %24 = load i64*, i64** %23, align 8, !dbg !6074
  %bf.load106 = load i64, i64* %24, align 8, !dbg !6074
  %bf.cast1082 = and i64 %bf.load106, 65535, !dbg !6074
  %cmp109 = icmp eq i64 %bf.cast1082, 9, !dbg !6074
  br i1 %cmp109, label %if.then136, label %lor.lhs.false110, !dbg !6074

lor.lhs.false110:                                 ; preds = %sw.bb102
  %cmp117 = icmp eq i64 %bf.cast1082, 13, !dbg !6074
  br i1 %cmp117, label %land.lhs.true126, label %lor.lhs.false118, !dbg !6074

lor.lhs.false118:                                 ; preds = %lor.lhs.false110
  %cmp125 = icmp eq i64 %bf.cast1082, 14, !dbg !6074
  br i1 %cmp125, label %land.lhs.true126, label %if.else142, !dbg !6074

land.lhs.true126:                                 ; preds = %lor.lhs.false118, %lor.lhs.false110
  %type130 = getelementptr inbounds i64, i64* %24, i64 2, !dbg !6074
  %25 = bitcast i64* %type130 to i64**, !dbg !6074
  %26 = load i64*, i64** %25, align 8, !dbg !6074
  %bf.load132 = load i64, i64* %26, align 8, !dbg !6074
  %bf.cast1345 = and i64 %bf.load132, 65535, !dbg !6074
  %cmp135 = icmp eq i64 %bf.cast1345, 9, !dbg !6074
  br i1 %cmp135, label %if.then136, label %if.else142, !dbg !6076

if.then136:                                       ; preds = %land.lhs.true126, %sw.bb102
  %max_cond_equivalences137 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6077
  store i32 5, i32* %max_cond_equivalences137, align 8, !dbg !6079
  %call138 = tail call i8* @xmalloc(i64 280) #6, !dbg !6080
  %cond_equivalences139 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6081
  %27 = bitcast %struct.cond_equivalence** %cond_equivalences139 to i8**, !dbg !6082
  store i8* %call138, i8** %27, align 8, !dbg !6082
  %arrayidx141 = getelementptr inbounds i8, i8* %call138, i64 224, !dbg !6083
  %28 = bitcast i8* %arrayidx141 to %struct.cond_equivalence*, !dbg !6083
  tail call fastcc void @build_and_record_new_cond(i32 104, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %28) #8, !dbg !6084
  %.pre = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences139, align 8, !dbg !6085
  br label %if.end146, !dbg !6086

if.else142:                                       ; preds = %land.lhs.true126, %lor.lhs.false118
  %max_cond_equivalences143 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6087
  store i32 4, i32* %max_cond_equivalences143, align 8, !dbg !6089
  %call144 = tail call i8* @xmalloc(i64 224) #6, !dbg !6090
  %cond_equivalences145 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6091
  %29 = bitcast %struct.cond_equivalence** %cond_equivalences145 to i8**, !dbg !6092
  store i8* %call144, i8** %29, align 8, !dbg !6092
  %30 = bitcast i8* %call144 to %struct.cond_equivalence*
  br label %if.end146

if.end146:                                        ; preds = %if.else142, %if.then136
  %31 = phi %struct.cond_equivalence* [ %30, %if.else142 ], [ %.pre, %if.then136 ], !dbg !6085
  %cond_equivalences147 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6085
  %arrayidx148 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %31, i64 2, !dbg !6093
  tail call fastcc void @build_and_record_new_cond(i32 98, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx148) #8, !dbg !6094
  %32 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences147, align 8, !dbg !6095
  %arrayidx150 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %32, i64 3, !dbg !6096
  tail call fastcc void @build_and_record_new_cond(i32 100, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx150) #8, !dbg !6097
  br label %sw.epilog, !dbg !6098

sw.bb151:                                         ; preds = %if.end
  %max_cond_equivalences152 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6099
  store i32 8, i32* %max_cond_equivalences152, align 8, !dbg !6100
  %call153 = tail call i8* @xmalloc(i64 448) #6, !dbg !6101
  %cond_equivalences154 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6102
  %33 = bitcast %struct.cond_equivalence** %cond_equivalences154 to i8**, !dbg !6103
  store i8* %call153, i8** %33, align 8, !dbg !6103
  %arrayidx156 = getelementptr inbounds i8, i8* %call153, i64 112, !dbg !6104
  %34 = bitcast i8* %arrayidx156 to %struct.cond_equivalence*, !dbg !6104
  tail call fastcc void @build_and_record_new_cond(i32 102, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %34) #8, !dbg !6105
  %35 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences154, align 8, !dbg !6106
  %arrayidx158 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %35, i64 3, !dbg !6107
  tail call fastcc void @build_and_record_new_cond(i32 106, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx158) #8, !dbg !6108
  %36 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences154, align 8, !dbg !6109
  %arrayidx160 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %36, i64 4, !dbg !6110
  tail call fastcc void @build_and_record_new_cond(i32 108, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx160) #8, !dbg !6111
  %37 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences154, align 8, !dbg !6112
  %arrayidx162 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %37, i64 5, !dbg !6113
  tail call fastcc void @build_and_record_new_cond(i32 109, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx162) #8, !dbg !6114
  %38 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences154, align 8, !dbg !6115
  %arrayidx164 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %38, i64 6, !dbg !6116
  tail call fastcc void @build_and_record_new_cond(i32 105, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx164) #8, !dbg !6117
  %39 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences154, align 8, !dbg !6118
  %arrayidx166 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %39, i64 7, !dbg !6119
  tail call fastcc void @build_and_record_new_cond(i32 107, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx166) #8, !dbg !6120
  br label %sw.epilog, !dbg !6121

sw.bb167:                                         ; preds = %if.end, %if.end
  %max_cond_equivalences168 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6122
  store i32 4, i32* %max_cond_equivalences168, align 8, !dbg !6123
  %call169 = tail call i8* @xmalloc(i64 224) #6, !dbg !6124
  %cond_equivalences170 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6125
  %40 = bitcast %struct.cond_equivalence** %cond_equivalences170 to i8**, !dbg !6126
  store i8* %call169, i8** %40, align 8, !dbg !6126
  %bf.load172 = load i64, i64* %0, align 8, !dbg !6127
  %bf.cast1741 = and i64 %bf.load172, 65535, !dbg !6128
  %cmp175 = icmp eq i64 %bf.cast1741, 105, !dbg !6128
  %cond176 = select i1 %cmp175, i32 106, i32 108, !dbg !6127
  %arrayidx178 = getelementptr inbounds i8, i8* %call169, i64 112, !dbg !6129
  %41 = bitcast i8* %arrayidx178 to %struct.cond_equivalence*, !dbg !6129
  tail call fastcc void @build_and_record_new_cond(i32 %cond176, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %41) #8, !dbg !6130
  %42 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences170, align 8, !dbg !6131
  %arrayidx180 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %42, i64 3, !dbg !6132
  tail call fastcc void @build_and_record_new_cond(i32 102, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx180) #8, !dbg !6133
  br label %sw.epilog, !dbg !6134

sw.bb181:                                         ; preds = %if.end
  %max_cond_equivalences182 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6135
  store i32 4, i32* %max_cond_equivalences182, align 8, !dbg !6136
  %call183 = tail call i8* @xmalloc(i64 224) #6, !dbg !6137
  %cond_equivalences184 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6138
  %43 = bitcast %struct.cond_equivalence** %cond_equivalences184 to i8**, !dbg !6139
  store i8* %call183, i8** %43, align 8, !dbg !6139
  %arrayidx186 = getelementptr inbounds i8, i8* %call183, i64 112, !dbg !6140
  %44 = bitcast i8* %arrayidx186 to %struct.cond_equivalence*, !dbg !6140
  tail call fastcc void @build_and_record_new_cond(i32 106, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %44) #8, !dbg !6141
  %45 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences184, align 8, !dbg !6142
  %arrayidx188 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %45, i64 3, !dbg !6143
  tail call fastcc void @build_and_record_new_cond(i32 108, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx188) #8, !dbg !6144
  br label %sw.epilog, !dbg !6145

sw.bb189:                                         ; preds = %if.end
  %max_cond_equivalences190 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6146
  store i32 4, i32* %max_cond_equivalences190, align 8, !dbg !6147
  %call191 = tail call i8* @xmalloc(i64 224) #6, !dbg !6148
  %cond_equivalences192 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6149
  %46 = bitcast %struct.cond_equivalence** %cond_equivalences192 to i8**, !dbg !6150
  store i8* %call191, i8** %46, align 8, !dbg !6150
  %arrayidx194 = getelementptr inbounds i8, i8* %call191, i64 112, !dbg !6151
  %47 = bitcast i8* %arrayidx194 to %struct.cond_equivalence*, !dbg !6151
  tail call fastcc void @build_and_record_new_cond(i32 102, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %47) #8, !dbg !6152
  %48 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences192, align 8, !dbg !6153
  %arrayidx196 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %48, i64 3, !dbg !6154
  tail call fastcc void @build_and_record_new_cond(i32 104, %union.tree_node* %2, %union.tree_node* %3, %struct.cond_equivalence* nonnull %arrayidx196) #8, !dbg !6155
  br label %sw.epilog, !dbg !6156

sw.default:                                       ; preds = %if.end
  %max_cond_equivalences197 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 3, !dbg !6157
  store i32 2, i32* %max_cond_equivalences197, align 8, !dbg !6158
  %call198 = tail call i8* @xmalloc(i64 112) #6, !dbg !6159
  %cond_equivalences199 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6160
  %49 = bitcast %struct.cond_equivalence** %cond_equivalences199 to i8**, !dbg !6161
  store i8* %call198, i8** %49, align 8, !dbg !6161
  br label %sw.epilog, !dbg !6162

sw.epilog:                                        ; preds = %if.then91, %if.else97, %sw.default, %sw.bb189, %sw.bb181, %sw.bb167, %sw.bb151, %if.end146, %if.end46
  %cond_equivalences200 = getelementptr inbounds %struct.edge_info, %struct.edge_info* %edge_info, i64 0, i32 2, !dbg !6163
  %50 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences200, align 8, !dbg !6163
  %cond202 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %50, i64 0, i32 0, !dbg !6164
  tail call fastcc void @initialize_expr_from_cond(%union.tree_node* %cond, %struct.hashable_expr* %cond202) #8, !dbg !6165
  %51 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26) to i64*), align 16, !dbg !6166
  %52 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences200, align 8, !dbg !6167
  %value = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %52, i64 0, i32 1, !dbg !6168
  %53 = bitcast %union.tree_node** %value to i64*, !dbg !6169
  store i64 %51, i64* %53, align 8, !dbg !6169
  %54 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences200, align 8, !dbg !6170
  %cond207 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %54, i64 1, i32 0, !dbg !6171
  tail call fastcc void @initialize_expr_from_cond(%union.tree_node* %inverted, %struct.hashable_expr* nonnull %cond207) #8, !dbg !6172
  %55 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25) to i64*), align 8, !dbg !6173
  %56 = load %struct.cond_equivalence*, %struct.cond_equivalence** %cond_equivalences200, align 8, !dbg !6174
  %value210 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %56, i64 1, i32 1, !dbg !6175
  %57 = bitcast %union.tree_node** %value210 to i64*, !dbg !6176
  store i64 %55, i64* %57, align 8, !dbg !6176
  br label %cleanup.cont, !dbg !6177

cleanup.cont:                                     ; preds = %sw.epilog, %entry
  ret void, !dbg !6177
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6178 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6182, metadata !DIExpression()), !dbg !6183
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !6184
  %0 = load i32, i32* %flags, align 8, !dbg !6184
  %and = and i32 %0, 512, !dbg !6185
  %tobool = icmp eq i32 %and, 0, !dbg !6185
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !6186

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !6187
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !6187
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !6188
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !6189

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !6190
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !6190
  br label %cond.end, !dbg !6189

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !6189
  ret %struct.gimple_seq_d* %cond, !dbg !6191
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6192 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6199, metadata !DIExpression()), !dbg !6200
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !6201
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6201

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !6202
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !6202
  br label %cond.end, !dbg !6201

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6201
  ret %struct.gimple_seq_node_d* %cond, !dbg !6203
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_and_record_new_cond(i32 %code, %union.tree_node* %op0, %union.tree_node* %op1, %struct.cond_equivalence* %p) unnamed_addr #5 !dbg !6204 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6208, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !6209, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !6210, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata %struct.cond_equivalence* %p, metadata !6211, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata %struct.cond_equivalence* %p, metadata !6212, metadata !DIExpression()), !dbg !6213
  %idxprom = sext i32 %code to i64, !dbg !6214
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !6214
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6214
  %cmp = icmp eq i32 %0, 5, !dbg !6214
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6214

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 1108, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !6214
  br label %cond.end, !dbg !6214

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to i64*), align 8, !dbg !6215
  %2 = bitcast %struct.cond_equivalence* %p to i64*, !dbg !6216
  store i64 %1, i64* %2, align 8, !dbg !6216
  %kind = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %p, i64 0, i32 0, i32 1, !dbg !6217
  store i32 2, i32* %kind, align 8, !dbg !6218
  %ops = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %p, i64 0, i32 0, i32 2, !dbg !6219
  %op = bitcast %union.anon.0* %ops to i32*, !dbg !6220
  store i32 %code, i32* %op, align 8, !dbg !6221
  %opnd0 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %p, i64 0, i32 0, i32 2, i32 0, i32 1, !dbg !6222
  %3 = bitcast i8* %opnd0 to %union.tree_node**, !dbg !6222
  store %union.tree_node* %op0, %union.tree_node** %3, align 8, !dbg !6223
  %opnd1 = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %p, i64 0, i32 0, i32 2, i32 0, i32 2, !dbg !6224
  %4 = bitcast i64* %opnd1 to %union.tree_node**, !dbg !6224
  store %union.tree_node* %op1, %union.tree_node** %4, align 8, !dbg !6225
  %5 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26) to i64*), align 16, !dbg !6226
  %value = getelementptr inbounds %struct.cond_equivalence, %struct.cond_equivalence* %p, i64 0, i32 1, !dbg !6227
  %6 = bitcast %union.tree_node** %value to i64*, !dbg !6228
  store i64 %5, i64* %6, align 8, !dbg !6228
  ret void, !dbg !6229
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_expr_from_cond(%union.tree_node* %cond, %struct.hashable_expr* %expr) unnamed_addr #5 !dbg !6230 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !6234, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.value(metadata %struct.hashable_expr* %expr, metadata !6235, metadata !DIExpression()), !dbg !6236
  %0 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to i64*), align 8, !dbg !6237
  %1 = bitcast %struct.hashable_expr* %expr to i64*, !dbg !6238
  store i64 %0, i64* %1, align 8, !dbg !6238
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6239
  %bf.load = load i64, i64* %2, align 8, !dbg !6239
  %bf.cast = and i64 %bf.load, 65535, !dbg !6239
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !6239
  %3 = load i32, i32* %arrayidx, align 4, !dbg !6239
  %cmp = icmp eq i32 %3, 5, !dbg !6239
  br i1 %cmp, label %if.then, label %if.else, !dbg !6241

if.then:                                          ; preds = %entry
  %kind = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 1, !dbg !6242
  store i32 2, i32* %kind, align 8, !dbg !6244
  %bf.load2 = load i64, i64* %2, align 8, !dbg !6245
  %4 = trunc i64 %bf.load2 to i32, !dbg !6245
  %bf.cast4 = and i32 %4, 65535, !dbg !6245
  %ops = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, !dbg !6246
  %op = bitcast %union.anon.0* %ops to i32*, !dbg !6247
  store i32 %bf.cast4, i32* %op, align 8, !dbg !6248
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6249
  %5 = bitcast %union.tree_node** %operands to i64*, !dbg !6249
  %6 = load i64, i64* %5, align 8, !dbg !6249
  %opnd0 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 1, !dbg !6250
  %7 = bitcast i8* %opnd0 to i64*, !dbg !6251
  store i64 %6, i64* %7, align 8, !dbg !6251
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6252
  %8 = bitcast %union.tree_node** %arrayidx10 to i64*, !dbg !6252
  %9 = load i64, i64* %8, align 8, !dbg !6252
  %opnd1 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 2, !dbg !6253
  store i64 %9, i64* %opnd1, align 8, !dbg !6254
  br label %if.end28, !dbg !6255

if.else:                                          ; preds = %entry
  %cmp17 = icmp eq i64 %bf.cast, 96, !dbg !6256
  br i1 %cmp17, label %if.then18, label %if.else27, !dbg !6258

if.then18:                                        ; preds = %if.else
  %kind19 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 1, !dbg !6259
  store i32 1, i32* %kind19, align 8, !dbg !6261
  %ops20 = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, !dbg !6262
  %op21 = bitcast %union.anon.0* %ops20 to i32*, !dbg !6263
  store i32 96, i32* %op21, align 8, !dbg !6264
  %operands23 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6265
  %10 = bitcast %union.tree_node** %operands23 to i64*, !dbg !6265
  %11 = load i64, i64* %10, align 8, !dbg !6265
  %opnd = getelementptr inbounds %struct.hashable_expr, %struct.hashable_expr* %expr, i64 0, i32 2, i32 0, i32 1, !dbg !6266
  %12 = bitcast i8* %opnd to i64*, !dbg !6267
  store i64 %11, i64* %12, align 8, !dbg !6267
  br label %if.end28, !dbg !6268

if.else27:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 311, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !6269
  br label %if.end28

if.end28:                                         ; preds = %if.then18, %if.else27, %if.then
  ret void, !dbg !6270
}

declare dso_local zeroext i8 @potentially_threadable_block(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dom_thread_across_edge(%struct.dom_walk_data* %walk_data, %struct.edge_def* %e) unnamed_addr #5 !dbg !6271 {
entry:
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !6275, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !6276, metadata !DIExpression()), !dbg !6280
  %global_data = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 4, !dbg !6281
  %0 = load i8*, i8** %global_data, align 8, !dbg !6281
  %tobool = icmp eq i8* %0, null, !dbg !6282
  br i1 %tobool, label %if.then, label %entry.if.end_crit_edge, !dbg !6283

entry.if.end_crit_edge:                           ; preds = %entry
  %1 = bitcast i8* %0 to %union.gimple_statement_d*, !dbg !6283
  br label %if.end, !dbg !6283

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !6284
  %call = tail call %union.gimple_statement_d* @gimple_build_cond(i32 102, %union.tree_node* %2, %union.tree_node* %2, %union.tree_node* null, %union.tree_node* null) #6, !dbg !6285
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6277, metadata !DIExpression()), !dbg !6286
  %3 = bitcast i8** %global_data to %union.gimple_statement_d**, !dbg !6287
  store %union.gimple_statement_d* %call, %union.gimple_statement_d** %3, align 8, !dbg !6287
  br label %if.end, !dbg !6288

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %4 = phi %union.gimple_statement_d* [ %1, %entry.if.end_crit_edge ], [ %call, %if.then ], !dbg !6289
  tail call void @thread_across_edge(%union.gimple_statement_d* %4, %struct.edge_def* %e, i8 zeroext 0, %struct.VEC_tree_heap** nonnull @const_and_copies_stack, %union.tree_node* (%union.gimple_statement_d*, %union.gimple_statement_d*)* nonnull @simplify_stmt_for_jump_threading) #6, !dbg !6290
  ret void, !dbg !6291
}

declare dso_local %union.gimple_statement_d* @last_stmt(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @record_const_or_copy(%union.tree_node* %x, %union.tree_node* %y) unnamed_addr #5 !dbg !6292 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !6294, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata %union.tree_node* %y, metadata !6295, metadata !DIExpression()), !dbg !6300
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6301
  %0 = bitcast %union.tree_node** %version to i32*, !dbg !6301
  %1 = load i32, i32* %0, align 8, !dbg !6301
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !6301
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !6301
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !6301
  %cmp = icmp ult i32 %1, %call, !dbg !6301
  br i1 %cmp, label %cond.true1, label %cond.end12, !dbg !6301

cond.true1:                                       ; preds = %entry
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !6301
  %base4 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !6301
  %4 = load i32, i32* %0, align 8, !dbg !6301
  %call10 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base4, i32 %4) #8, !dbg !6301
  br label %cond.end12, !dbg !6301

cond.end12:                                       ; preds = %entry, %cond.true1
  %cond13 = phi %union.tree_node* [ %call10, %cond.true1 ], [ null, %entry ], !dbg !6301
  call void @llvm.dbg.value(metadata %union.tree_node* %cond13, metadata !6296, metadata !DIExpression()), !dbg !6300
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6302
  %bf.load = load i64, i64* %5, align 8, !dbg !6302
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6302
  %cmp15 = icmp eq i64 %bf.cast1, 141, !dbg !6302
  br i1 %cmp15, label %cond.end18, label %cond.true16, !dbg !6302

cond.true16:                                      ; preds = %cond.end12
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 1320, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !6302
  br label %cond.end18, !dbg !6302

cond.end18:                                       ; preds = %cond.end12, %cond.true16
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %y, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6303
  %bf.load21 = load i64, i64* %6, align 8, !dbg !6303
  %bf.cast232 = and i64 %bf.load21, 65535, !dbg !6304
  %cmp24 = icmp eq i64 %bf.cast232, 141, !dbg !6304
  br i1 %cmp24, label %if.then, label %if.end50, !dbg !6305

if.then:                                          ; preds = %cond.end18
  %version26 = getelementptr inbounds %union.tree_node, %union.tree_node* %y, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6306
  %7 = bitcast %union.tree_node** %version26 to i32*, !dbg !6306
  %8 = load i32, i32* %7, align 8, !dbg !6306
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !6306
  %base29 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !6306
  %call33 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base29) #8, !dbg !6306
  %cmp34 = icmp ult i32 %8, %call33, !dbg !6306
  br i1 %cmp34, label %cond.true35, label %cond.end46, !dbg !6306

cond.true35:                                      ; preds = %if.then
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !6306
  %base38 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !6306
  %11 = load i32, i32* %7, align 8, !dbg !6306
  %call44 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base38, i32 %11) #8, !dbg !6306
  br label %cond.end46, !dbg !6306

cond.end46:                                       ; preds = %if.then, %cond.true35
  %cond47 = phi %union.tree_node* [ %call44, %cond.true35 ], [ null, %if.then ], !dbg !6306
  call void @llvm.dbg.value(metadata %union.tree_node* %cond47, metadata !6297, metadata !DIExpression()), !dbg !6307
  %tobool48 = icmp eq %union.tree_node* %cond47, null, !dbg !6308
  %spec.select = select i1 %tobool48, %union.tree_node* %y, %union.tree_node* %cond47, !dbg !6310
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !6295, metadata !DIExpression()), !dbg !6300
  br label %if.end50, !dbg !6311

if.end50:                                         ; preds = %cond.end46, %cond.end18
  %y.addr.1 = phi %union.tree_node* [ %spec.select, %cond.end46 ], [ %y, %cond.end18 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %y.addr.1, metadata !6295, metadata !DIExpression()), !dbg !6300
  tail call fastcc void @record_const_or_copy_1(%union.tree_node* %x, %union.tree_node* %y.addr.1, %union.tree_node* %cond13) #8, !dbg !6312
  ret void, !dbg !6313
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_local_expressions_from_table() unnamed_addr #5 !dbg !6314 {
entry:
  br label %while.cond, !dbg !6319

while.cond:                                       ; preds = %cleanup, %entry
  %0 = load %struct.VEC_expr_hash_elt_t_heap*, %struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack, align 8, !dbg !6320
  %base = getelementptr inbounds %struct.VEC_expr_hash_elt_t_heap, %struct.VEC_expr_hash_elt_t_heap* %0, i64 0, i32 0, !dbg !6320
  %call = tail call fastcc i32 @VEC_expr_hash_elt_t_base_length(%struct.VEC_expr_hash_elt_t_base* %base) #8, !dbg !6320
  %cmp = icmp eq i32 %call, 0, !dbg !6321
  br i1 %cmp, label %while.end, label %while.body, !dbg !6319

while.body:                                       ; preds = %while.cond
  %1 = load %struct.VEC_expr_hash_elt_t_heap*, %struct.VEC_expr_hash_elt_t_heap** @avail_exprs_stack, align 8, !dbg !6322
  %base3 = getelementptr inbounds %struct.VEC_expr_hash_elt_t_heap, %struct.VEC_expr_hash_elt_t_heap* %1, i64 0, i32 0, !dbg !6322
  %call7 = tail call fastcc %struct.expr_hash_elt* @VEC_expr_hash_elt_t_base_pop(%struct.VEC_expr_hash_elt_t_base* %base3) #8, !dbg !6322
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %call7, metadata !6316, metadata !DIExpression()), !dbg !6323
  %cmp8 = icmp eq %struct.expr_hash_elt* %call7, null, !dbg !6324
  br i1 %cmp8, label %cleanup, label %if.end, !dbg !6326

if.end:                                           ; preds = %while.body
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6327
  %tobool9 = icmp eq %struct._IO_FILE* %2, null, !dbg !6327
  br i1 %tobool9, label %if.end13, label %land.lhs.true, !dbg !6329

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32, i32* @dump_flags, align 4, !dbg !6330
  %and = and i32 %3, 8, !dbg !6331
  %tobool10 = icmp eq i32 %and, 0, !dbg !6331
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !6332

if.then11:                                        ; preds = %land.lhs.true
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !6333
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6335
  tail call fastcc void @print_expr_hash_elt(%struct._IO_FILE* %4, %struct.expr_hash_elt* nonnull %call7) #8, !dbg !6336
  br label %if.end13, !dbg !6337

if.end13:                                         ; preds = %land.lhs.true, %if.end, %if.then11
  %5 = load %struct.htab*, %struct.htab** @avail_exprs, align 8, !dbg !6338
  %6 = bitcast %struct.expr_hash_elt* %call7 to i8*, !dbg !6339
  %hash = getelementptr inbounds %struct.expr_hash_elt, %struct.expr_hash_elt* %call7, i64 0, i32 3, !dbg !6340
  %7 = load i32, i32* %hash, align 8, !dbg !6340
  %call14 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %5, i8* nonnull %6, i32 %7, i32 0) #6, !dbg !6341
  call void @llvm.dbg.value(metadata i8** %call14, metadata !6318, metadata !DIExpression()), !dbg !6323
  %tobool15 = icmp eq i8** %call14, null, !dbg !6342
  br i1 %tobool15, label %cond.true18, label %land.lhs.true16, !dbg !6342

land.lhs.true16:                                  ; preds = %if.end13
  %8 = load i8*, i8** %call14, align 8, !dbg !6342
  %cmp17 = icmp eq i8* %8, %6, !dbg !6342
  br i1 %cmp17, label %cond.end20, label %cond.true18, !dbg !6342

cond.true18:                                      ; preds = %if.end13, %land.lhs.true16
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 839, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !6342
  br label %cond.end20, !dbg !6342

cond.end20:                                       ; preds = %land.lhs.true16, %cond.true18
  %9 = load %struct.htab*, %struct.htab** @avail_exprs, align 8, !dbg !6343
  tail call void @htab_clear_slot(%struct.htab* %9, i8** %call14) #6, !dbg !6344
  br label %cleanup, !dbg !6345

cleanup:                                          ; preds = %while.body, %cond.end20
  %cleanup.dest.slot.0 = phi i1 [ true, %cond.end20 ], [ false, %while.body ]
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !6346

while.end:                                        ; preds = %while.cond, %cleanup
  ret void, !dbg !6347
}

; Function Attrs: nounwind uwtable
define internal fastcc void @restore_vars_to_original_value() unnamed_addr #5 !dbg !6348 {
entry:
  br label %while.cond, !dbg !6353

while.cond:                                       ; preds = %cleanup, %entry
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @const_and_copies_stack, align 8, !dbg !6354
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6354
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !6354
  %cmp = icmp eq i32 %call, 0, !dbg !6355
  br i1 %cmp, label %while.end, label %while.body, !dbg !6353

while.body:                                       ; preds = %while.cond
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @const_and_copies_stack, align 8, !dbg !6356
  %base3 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !6356
  %call7 = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base3) #8, !dbg !6356
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !6352, metadata !DIExpression()), !dbg !6357
  %cmp8 = icmp eq %union.tree_node* %call7, null, !dbg !6358
  br i1 %cmp8, label %cleanup, label %if.end, !dbg !6360

if.end:                                           ; preds = %while.body
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6361
  %tobool9 = icmp eq %struct._IO_FILE* %2, null, !dbg !6361
  br i1 %tobool9, label %if.end36, label %land.lhs.true, !dbg !6363

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32, i32* @dump_flags, align 4, !dbg !6364
  %and = and i32 %3, 8, !dbg !6365
  %tobool10 = icmp eq i32 %and, 0, !dbg !6365
  br i1 %tobool10, label %if.end36, label %if.then11, !dbg !6366

if.then11:                                        ; preds = %land.lhs.true
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !6367
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6369
  tail call void @print_generic_expr(%struct._IO_FILE* %4, %union.tree_node* nonnull %call7, i32 0) #6, !dbg !6370
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6371
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !6372
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6373
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6374
  %7 = bitcast %union.tree_node** %version to i32*, !dbg !6374
  %8 = load i32, i32* %7, align 8, !dbg !6374
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !6374
  %base16 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !6374
  %call20 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base16) #8, !dbg !6374
  %cmp21 = icmp ult i32 %8, %call20, !dbg !6374
  br i1 %cmp21, label %cond.true22, label %cond.end33, !dbg !6374

cond.true22:                                      ; preds = %if.then11
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @ssa_name_values, align 8, !dbg !6374
  %base25 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !6374
  %11 = load i32, i32* %7, align 8, !dbg !6374
  %call31 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base25, i32 %11) #8, !dbg !6374
  br label %cond.end33, !dbg !6374

cond.end33:                                       ; preds = %if.then11, %cond.true22
  %cond34 = phi %union.tree_node* [ %call31, %cond.true22 ], [ null, %if.then11 ], !dbg !6374
  tail call void @print_generic_expr(%struct._IO_FILE* %6, %union.tree_node* %cond34, i32 0) #6, !dbg !6375
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6376
  %call35 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6377
  br label %if.end36, !dbg !6378

if.end36:                                         ; preds = %land.lhs.true, %if.end, %cond.end33
  %13 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @const_and_copies_stack, align 8, !dbg !6379
  %base39 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %13, i64 0, i32 0, !dbg !6379
  %call43 = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base39) #8, !dbg !6379
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !6350, metadata !DIExpression()), !dbg !6357
  tail call void @set_ssa_name_value(%union.tree_node* nonnull %call7, %union.tree_node* %call43) #6, !dbg !6380
  br label %cleanup, !dbg !6381

cleanup:                                          ; preds = %while.body, %if.end36
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end36 ], [ false, %while.body ]
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !6382

while.end:                                        ; preds = %while.cond, %cleanup
  ret void, !dbg !6383
}

declare dso_local %union.gimple_statement_d* @gimple_build_cond(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @thread_across_edge(%union.gimple_statement_d*, %struct.edge_def*, i8 zeroext, %struct.VEC_tree_heap**, %union.tree_node* (%union.gimple_statement_d*, %union.gimple_statement_d*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @simplify_stmt_for_jump_threading(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %within_stmt) #5 !dbg !6384 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6388, metadata !DIExpression()), !dbg !6390
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %within_stmt, metadata !6389, metadata !DIExpression()), !dbg !6390
  %call = tail call fastcc %union.tree_node* @lookup_avail_expr(%union.gimple_statement_d* %stmt, i8 zeroext 0) #8, !dbg !6391
  ret %union.tree_node* %call, !dbg !6392
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_hash_elt_t_base_length(%struct.VEC_expr_hash_elt_t_base* %vec_) unnamed_addr #0 !dbg !6393 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_hash_elt_t_base* %vec_, metadata !6399, metadata !DIExpression()), !dbg !6400
  %tobool = icmp eq %struct.VEC_expr_hash_elt_t_base* %vec_, null, !dbg !6401
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6401

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_expr_hash_elt_t_base, %struct.VEC_expr_hash_elt_t_base* %vec_, i64 0, i32 0, !dbg !6401
  %0 = load i32, i32* %num, align 8, !dbg !6401
  br label %cond.end, !dbg !6401

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6401
  ret i32 %cond, !dbg !6401
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.expr_hash_elt* @VEC_expr_hash_elt_t_base_pop(%struct.VEC_expr_hash_elt_t_base* %vec_) unnamed_addr #0 !dbg !6402 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_hash_elt_t_base* %vec_, metadata !6406, metadata !DIExpression()), !dbg !6408
  %num1 = getelementptr inbounds %struct.VEC_expr_hash_elt_t_base, %struct.VEC_expr_hash_elt_t_base* %vec_, i64 0, i32 0, !dbg !6409
  %0 = load i32, i32* %num1, align 8, !dbg !6409
  %dec = add i32 %0, -1, !dbg !6409
  store i32 %dec, i32* %num1, align 8, !dbg !6409
  %idxprom = zext i32 %dec to i64, !dbg !6409
  %arrayidx = getelementptr inbounds %struct.VEC_expr_hash_elt_t_base, %struct.VEC_expr_hash_elt_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6409
  %1 = load %struct.expr_hash_elt*, %struct.expr_hash_elt** %arrayidx, align 8, !dbg !6409
  call void @llvm.dbg.value(metadata %struct.expr_hash_elt* %1, metadata !6407, metadata !DIExpression()), !dbg !6408
  ret %struct.expr_hash_elt* %1, !dbg !6409
}

declare dso_local void @htab_clear_slot(%struct.htab*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !6410 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6414, metadata !DIExpression()), !dbg !6416
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6417
  %0 = load i32, i32* %num1, align 8, !dbg !6417
  %dec = add i32 %0, -1, !dbg !6417
  store i32 %dec, i32* %num1, align 8, !dbg !6417
  %idxprom = zext i32 %dec to i64, !dbg !6417
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6417
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6417
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6415, metadata !DIExpression()), !dbg !6416
  ret %union.tree_node* %1, !dbg !6417
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6418 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6420, metadata !DIExpression()), !dbg !6421
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !6422
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6422

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !6423
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !6423
  br label %cond.end, !dbg !6422

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6422
  ret %struct.gimple_seq_node_d* %cond, !dbg !6424
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local i64 @htab_size(%struct.htab*) local_unnamed_addr #2

declare dso_local i64 @htab_elements(%struct.htab*) local_unnamed_addr #2

declare dso_local double @htab_collisions(%struct.htab*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @eliminate_degenerate_phis_1(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %interesting_names) unnamed_addr #5 !dbg !6425 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6429, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %interesting_names, metadata !6430, metadata !DIExpression()), !dbg !6437
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6438
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !6438
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6439
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !6439
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #6, !dbg !6439
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !6439
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !6439
  br label %for.cond, !dbg !6440

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6431, metadata !DIExpression(DW_OP_deref)), !dbg !6437
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !6441
  %tobool = icmp eq i8 %call, 0, !dbg !6442
  br i1 %tobool, label %for.body, label %for.end, !dbg !6443

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6431, metadata !DIExpression(DW_OP_deref)), !dbg !6437
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !6444
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !6433, metadata !DIExpression()), !dbg !6445
  call fastcc void @eliminate_const_or_copy(%union.gimple_statement_d* %call1, %struct.bitmap_head_def* %interesting_names) #8, !dbg !6446
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6431, metadata !DIExpression(DW_OP_deref)), !dbg !6437
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !6447
  br label %for.cond, !dbg !6448, !llvm.loop !6449

for.end:                                          ; preds = %for.cond
  %call2 = call %struct.basic_block_def* @first_dom_son(i32 1, %struct.basic_block_def* %bb) #6, !dbg !6451
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !6432, metadata !DIExpression()), !dbg !6437
  br label %for.cond3, !dbg !6453

for.cond3:                                        ; preds = %for.body5, %for.end
  %son.0 = phi %struct.basic_block_def* [ %call2, %for.end ], [ %call7, %for.body5 ], !dbg !6454
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %son.0, metadata !6432, metadata !DIExpression()), !dbg !6437
  %tobool4 = icmp eq %struct.basic_block_def* %son.0, null, !dbg !6455
  br i1 %tobool4, label %for.end8, label %for.body5, !dbg !6455

for.body5:                                        ; preds = %for.cond3
  call fastcc void @eliminate_degenerate_phis_1(%struct.basic_block_def* nonnull %son.0, %struct.bitmap_head_def* %interesting_names) #8, !dbg !6456
  %call7 = call %struct.basic_block_def* @next_dom_son(i32 1, %struct.basic_block_def* nonnull %son.0) #6, !dbg !6458
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call7, metadata !6432, metadata !DIExpression()), !dbg !6437
  br label %for.cond3, !dbg !6459, !llvm.loop !6460

for.end8:                                         ; preds = %for.cond3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !6462
  ret void, !dbg !6462
}

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @eliminate_const_or_copy(%union.gimple_statement_d* %stmt, %struct.bitmap_head_def* %interesting_names) unnamed_addr #5 !dbg !6463 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6467, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %interesting_names, metadata !6468, metadata !DIExpression()), !dbg !6472
  %call = tail call fastcc %union.tree_node* @get_lhs_or_phi_result(%union.gimple_statement_d* %stmt) #8, !dbg !6473
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6469, metadata !DIExpression()), !dbg !6472
  %version1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6474
  %0 = bitcast %union.tree_node** %version1 to i32*, !dbg !6474
  %1 = load i32, i32* %0, align 8, !dbg !6474
  call void @llvm.dbg.value(metadata i32 %1, metadata !6471, metadata !DIExpression()), !dbg !6472
  %call2 = tail call fastcc zeroext i8 @has_zero_uses(%union.tree_node* %call) #8, !dbg !6475
  %tobool = icmp eq i8 %call2, 0, !dbg !6475
  br i1 %tobool, label %if.end, label %if.then, !dbg !6477

if.then:                                          ; preds = %entry
  %call3 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %interesting_names, i32 %1) #6, !dbg !6478
  tail call fastcc void @remove_stmt_or_phi(%union.gimple_statement_d* %stmt) #8, !dbg !6480
  br label %cleanup.cont, !dbg !6481

if.end:                                           ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @get_rhs_or_phi_arg(%union.gimple_statement_d* %stmt) #8, !dbg !6482
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6470, metadata !DIExpression()), !dbg !6472
  %tobool5 = icmp eq %union.tree_node* %call4, null, !dbg !6483
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !6485

if.then6:                                         ; preds = %if.end
  %call7 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %interesting_names, i32 %1) #6, !dbg !6486
  br label %cleanup.cont, !dbg !6488

if.end8:                                          ; preds = %if.end
  tail call fastcc void @propagate_rhs_into_lhs(%union.gimple_statement_d* %stmt, %union.tree_node* %call, %union.tree_node* nonnull %call4, %struct.bitmap_head_def* %interesting_names) #8, !dbg !6489
  %call9 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %interesting_names, i32 %1) #6, !dbg !6490
  br label %cleanup.cont, !dbg !6491

cleanup.cont:                                     ; preds = %if.then, %if.then6, %if.end8
  ret void, !dbg !6491
}

declare dso_local %struct.basic_block_def* @first_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @next_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_lhs_or_phi_result(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !6492 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6494, metadata !DIExpression()), !dbg !6495
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !6496
  %cmp = icmp eq i32 %call, 16, !dbg !6498
  br i1 %cmp, label %if.then, label %if.else, !dbg !6499

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %stmt) #8, !dbg !6500
  br label %return, !dbg !6501

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #8, !dbg !6502
  %tobool = icmp eq i8 %call2, 0, !dbg !6502
  br i1 %tobool, label %if.else5, label %if.then3, !dbg !6504

if.then3:                                         ; preds = %if.else
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !6505
  br label %return, !dbg !6506

if.else5:                                         ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 2461, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !6507
  br label %return, !dbg !6508

return:                                           ; preds = %if.else5, %if.then3, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ %call4, %if.then3 ], [ null, %if.else5 ], !dbg !6495
  ret %union.tree_node* %retval.0, !dbg !6509
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @has_zero_uses(%union.tree_node* %var) unnamed_addr #0 !dbg !6510 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6517, metadata !DIExpression()), !dbg !6522
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6523
  %0 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !6523
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !6518, metadata !DIExpression()), !dbg !6522
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !6524
  %1 = bitcast i40* %next to %struct.ssa_use_operand_d**, !dbg !6524
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !6524
  %cmp = icmp eq %struct.ssa_use_operand_d* %2, %0, !dbg !6526
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6527

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !6528
  %tobool = icmp eq i32 %3, 0, !dbg !6528
  br i1 %tobool, label %cleanup, label %if.end2, !dbg !6530

if.end2:                                          ; preds = %if.end
  %call = tail call zeroext i8 @has_zero_uses_1(%struct.ssa_use_operand_d* nonnull %0) #6, !dbg !6531
  br label %cleanup, !dbg !6532

cleanup:                                          ; preds = %if.end, %entry, %if.end2
  %retval.0 = phi i8 [ %call, %if.end2 ], [ 1, %entry ], [ 0, %if.end ], !dbg !6522
  ret i8 %retval.0, !dbg !6533
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_stmt_or_phi(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !6534 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6536, metadata !DIExpression()), !dbg !6538
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6539
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !6539
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6537, metadata !DIExpression(DW_OP_deref)), !dbg !6538
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %gsi, %union.gimple_statement_d* %stmt) #6, !dbg !6540
  %call = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !6541
  %cmp = icmp eq i32 %call, 16, !dbg !6543
  br i1 %cmp, label %if.then, label %if.else, !dbg !6544

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6537, metadata !DIExpression(DW_OP_deref)), !dbg !6538
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !6545
  br label %if.end, !dbg !6545

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6537, metadata !DIExpression(DW_OP_deref)), !dbg !6538
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !6546
  call void @release_defs(%union.gimple_statement_d* %stmt) #6, !dbg !6548
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !6549
  ret void, !dbg !6549
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_rhs_or_phi_arg(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !6550 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6552, metadata !DIExpression()), !dbg !6553
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !6554
  %cmp = icmp eq i32 %call, 16, !dbg !6556
  br i1 %cmp, label %if.then, label %if.else, !dbg !6557

if.then:                                          ; preds = %entry
  %call1 = tail call %union.tree_node* @degenerate_phi_result(%union.gimple_statement_d* %stmt) #8, !dbg !6558
  br label %return, !dbg !6559

if.else:                                          ; preds = %entry
  %call2 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt) #6, !dbg !6560
  %tobool = icmp eq i8 %call2, 0, !dbg !6560
  br i1 %tobool, label %if.else5, label %if.then3, !dbg !6562

if.then3:                                         ; preds = %if.else
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !6563
  br label %return, !dbg !6564

if.else5:                                         ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 2443, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !6565
  br label %return, !dbg !6566

return:                                           ; preds = %if.else5, %if.then3, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ %call4, %if.then3 ], [ null, %if.else5 ], !dbg !6553
  ret %union.tree_node* %retval.0, !dbg !6567
}

; Function Attrs: nounwind uwtable
define internal fastcc void @propagate_rhs_into_lhs(%union.gimple_statement_d* %stmt, %union.tree_node* %lhs, %union.tree_node* %rhs, %struct.bitmap_head_def* %interesting_names) unnamed_addr #5 !dbg !6568 {
entry:
  %iter = alloca %struct.immediate_use_iterator_d, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp207 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp228 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6572, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6573, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !6574, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %interesting_names, metadata !6575, metadata !DIExpression()), !dbg !6622
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6623
  %bf.load = load i64, i64* %0, align 8, !dbg !6623
  %bf.cast1 = and i64 %bf.load, 4194304, !dbg !6623
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !6623
  br i1 %tobool, label %land.lhs.true, label %if.end255, !dbg !6624

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6625
  %bf.load2 = load i64, i64* %1, align 8, !dbg !6625
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !6626
  %cmp = icmp eq i64 %bf.cast42, 141, !dbg !6626
  br i1 %cmp, label %lor.lhs.false, label %land.lhs.true11, !dbg !6627

lor.lhs.false:                                    ; preds = %land.lhs.true
  %bf.cast93 = and i64 %bf.load2, 4194304, !dbg !6628
  %tobool10 = icmp eq i64 %bf.cast93, 0, !dbg !6628
  br i1 %tobool10, label %land.lhs.true11, label %if.end255, !dbg !6629

land.lhs.true11:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %call = tail call zeroext i8 @may_propagate_copy(%union.tree_node* %lhs, %union.tree_node* %rhs) #6, !dbg !6630
  %tobool12 = icmp eq i8 %call, 0, !dbg !6630
  br i1 %tobool12, label %if.end255, label %land.lhs.true13, !dbg !6631

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %call14 = tail call i32 @loop_depth_of_name(%union.tree_node* %lhs) #8, !dbg !6632
  %call15 = tail call i32 @loop_depth_of_name(%union.tree_node* %rhs) #8, !dbg !6633
  %cmp16 = icmp slt i32 %call14, %call15, !dbg !6634
  br i1 %cmp16, label %if.end255, label %if.then, !dbg !6635

if.then:                                          ; preds = %land.lhs.true13
  %2 = bitcast %struct.immediate_use_iterator_d* %iter to i8*, !dbg !6636
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2) #7, !dbg !6636
  call void @llvm.dbg.value(metadata i8 1, metadata !6588, metadata !DIExpression()), !dbg !6637
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6638
  %tobool18 = icmp eq %struct._IO_FILE* %3, null, !dbg !6638
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !6640

land.lhs.true19:                                  ; preds = %if.then
  %4 = load i32, i32* @dump_flags, align 4, !dbg !6641
  %and = and i32 %4, 8, !dbg !6642
  %tobool20 = icmp eq i32 %and, 0, !dbg !6642
  br i1 %tobool20, label %if.end, label %if.then21, !dbg !6643

if.then21:                                        ; preds = %land.lhs.true19
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !6644
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6646
  %6 = load i32, i32* @dump_flags, align 4, !dbg !6647
  tail call void @print_generic_expr(%struct._IO_FILE* %5, %union.tree_node* %lhs, i32 %6) #6, !dbg !6648
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6649
  %bf.load24 = load i64, i64* %1, align 8, !dbg !6650
  %bf.cast268 = and i64 %bf.load24, 65535, !dbg !6651
  %cmp27 = icmp eq i64 %bf.cast268, 141, !dbg !6651
  %cond = select i1 %cmp27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), !dbg !6650
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8* %cond) #6, !dbg !6652
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6653
  %9 = load i32, i32* @dump_flags, align 4, !dbg !6654
  tail call void @print_generic_expr(%struct._IO_FILE* %8, %union.tree_node* %rhs, i32 %9) #6, !dbg !6655
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6656
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !6657
  br label %if.end, !dbg !6658

if.end:                                           ; preds = %land.lhs.true19, %if.then, %if.then21
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6579, metadata !DIExpression(DW_OP_deref)), !dbg !6637
  %call31 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %iter, %union.tree_node* %lhs) #8, !dbg !6659
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call31, metadata !6587, metadata !DIExpression()), !dbg !6637
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6660
  %11 = bitcast i32* %var to %union.tree_node**, !dbg !6660
  %var75 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6660
  %12 = bitcast i32* %var75 to %union.tree_node**, !dbg !6660
  %13 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6661
  %14 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6661
  %15 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !6661
  %16 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6662
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6662
  %18 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6662
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6663
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6663
  %21 = bitcast %struct.gimple_stmt_iterator* %tmp207 to i8*, !dbg !6664
  %22 = bitcast %struct.gimple_stmt_iterator* %tmp228 to i8*, !dbg !6661
  br label %for.cond, !dbg !6659

for.cond:                                         ; preds = %for.inc243, %if.end
  %use_stmt.0 = phi %union.gimple_statement_d* [ %call31, %if.end ], [ %call244, %for.inc243 ], !dbg !6665
  %all.0 = phi i8 [ 1, %if.end ], [ %all.1, %for.inc243 ], !dbg !6666
  call void @llvm.dbg.value(metadata i8 %all.0, metadata !6588, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt.0, metadata !6587, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6579, metadata !DIExpression(DW_OP_deref)), !dbg !6637
  %call32 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %iter) #8, !dbg !6667
  %tobool33 = icmp eq i8 %call32, 0, !dbg !6667
  br i1 %tobool33, label %for.body, label %for.end245, !dbg !6659

for.body:                                         ; preds = %for.cond
  %call34 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6668
  %tobool35 = icmp eq i8 %call34, 0, !dbg !6668
  br i1 %tobool35, label %if.end37, label %for.inc243, !dbg !6670

if.end37:                                         ; preds = %for.body
  %call38 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6671
  %cmp39 = icmp eq i32 %call38, 7, !dbg !6673
  br i1 %cmp39, label %land.lhs.true41, label %if.end45, !dbg !6674

land.lhs.true41:                                  ; preds = %if.end37
  %call42 = call zeroext i8 @may_propagate_copy_into_asm(%union.tree_node* %lhs) #6, !dbg !6675
  %tobool43 = icmp eq i8 %call42, 0, !dbg !6675
  br i1 %tobool43, label %for.inc243, label %if.end45, !dbg !6676

if.end45:                                         ; preds = %land.lhs.true41, %if.end37
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6677
  %tobool46 = icmp eq %struct._IO_FILE* %23, null, !dbg !6677
  br i1 %tobool46, label %if.end52, label %land.lhs.true47, !dbg !6679

land.lhs.true47:                                  ; preds = %if.end45
  %24 = load i32, i32* @dump_flags, align 4, !dbg !6680
  %and48 = and i32 %24, 8, !dbg !6681
  %tobool49 = icmp eq i32 %and48, 0, !dbg !6681
  br i1 %tobool49, label %if.end52, label %if.then50, !dbg !6682

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %23, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !6683
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6685
  %26 = load i32, i32* @dump_flags, align 4, !dbg !6686
  call void @print_gimple_stmt(%struct._IO_FILE* %25, %union.gimple_statement_d* %use_stmt.0, i32 0, i32 %26) #6, !dbg !6687
  br label %if.end52, !dbg !6688

if.end52:                                         ; preds = %land.lhs.true47, %if.end45, %if.then50
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6579, metadata !DIExpression(DW_OP_deref)), !dbg !6637
  %call53 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %iter) #8, !dbg !6689
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call53, metadata !6576, metadata !DIExpression()), !dbg !6637
  br label %for.cond54, !dbg !6689

for.cond54:                                       ; preds = %for.body58, %if.end52
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call53, %if.end52 ], [ %call59, %for.body58 ], !dbg !6691
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !6576, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6579, metadata !DIExpression(DW_OP_deref)), !dbg !6637
  %call55 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %iter) #8, !dbg !6692
  %tobool56 = icmp eq i8 %call55, 0, !dbg !6692
  br i1 %tobool56, label %for.body58, label %for.end, !dbg !6689

for.body58:                                       ; preds = %for.cond54
  call void @propagate_value(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %rhs) #6, !dbg !6694
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6579, metadata !DIExpression(DW_OP_deref)), !dbg !6637
  %call59 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %iter) #8, !dbg !6692
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call59, metadata !6576, metadata !DIExpression()), !dbg !6637
  br label %for.cond54, !dbg !6692, !llvm.loop !6695

for.end:                                          ; preds = %for.cond54
  %call60 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6697
  %cmp61 = icmp eq i32 %call60, 16, !dbg !6698
  br i1 %cmp61, label %if.then78, label %lor.lhs.false63, !dbg !6699

lor.lhs.false63:                                  ; preds = %for.end
  %call64 = call zeroext i8 @is_gimple_reg(%union.tree_node* %lhs) #6, !dbg !6700
  %tobool65 = icmp eq i8 %call64, 0, !dbg !6700
  br i1 %tobool65, label %land.lhs.true66, label %if.end94, !dbg !6701

land.lhs.true66:                                  ; preds = %lor.lhs.false63
  %bf.load68 = load i64, i64* %1, align 8, !dbg !6702
  %bf.cast704 = and i64 %bf.load68, 65535, !dbg !6703
  %cmp71 = icmp eq i64 %bf.cast704, 141, !dbg !6703
  br i1 %cmp71, label %land.lhs.true73, label %if.end94, !dbg !6704

land.lhs.true73:                                  ; preds = %land.lhs.true66
  %27 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !6705
  %28 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !6706
  %cmp76 = icmp eq %union.tree_node* %27, %28, !dbg !6707
  br i1 %cmp76, label %if.then78, label %if.end94, !dbg !6708

if.then78:                                        ; preds = %land.lhs.true73, %for.end
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6709
  %tobool79 = icmp eq %struct._IO_FILE* %29, null, !dbg !6709
  br i1 %tobool79, label %if.end85, label %land.lhs.true80, !dbg !6711

land.lhs.true80:                                  ; preds = %if.then78
  %30 = load i32, i32* @dump_flags, align 4, !dbg !6712
  %and81 = and i32 %30, 8, !dbg !6713
  %tobool82 = icmp eq i32 %and81, 0, !dbg !6713
  br i1 %tobool82, label %if.end85, label %if.then83, !dbg !6714

if.then83:                                        ; preds = %land.lhs.true80
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %29, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !6715
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6717
  %32 = load i32, i32* @dump_flags, align 4, !dbg !6718
  call void @print_gimple_stmt(%struct._IO_FILE* %31, %union.gimple_statement_d* %use_stmt.0, i32 0, i32 %32) #6, !dbg !6719
  br label %if.end85, !dbg !6720

if.end85:                                         ; preds = %land.lhs.true80, %if.then78, %if.then83
  %call86 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6721
  %cmp87 = icmp eq i32 %call86, 16, !dbg !6722
  br i1 %cmp87, label %if.then89, label %for.inc243, !dbg !6723

if.then89:                                        ; preds = %if.end85
  %call90 = call fastcc %union.tree_node* @get_lhs_or_phi_result(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6724
  call void @llvm.dbg.value(metadata %union.tree_node* %call90, metadata !6589, metadata !DIExpression()), !dbg !6725
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6726
  %33 = bitcast %union.tree_node** %version to i32*, !dbg !6726
  %34 = load i32, i32* %33, align 8, !dbg !6726
  %call92 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %interesting_names, i32 %34) #6, !dbg !6727
  br label %for.inc243, !dbg !6728

if.end94:                                         ; preds = %lor.lhs.false63, %land.lhs.true73, %land.lhs.true66
  %call95 = call zeroext i8 @fold_stmt_inplace(%union.gimple_statement_d* %use_stmt.0) #6, !dbg !6729
  call fastcc void @update_stmt(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6730
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6731
  %tobool96 = icmp eq %struct._IO_FILE* %35, null, !dbg !6731
  br i1 %tobool96, label %if.end102, label %land.lhs.true97, !dbg !6733

land.lhs.true97:                                  ; preds = %if.end94
  %36 = load i32, i32* @dump_flags, align 4, !dbg !6734
  %and98 = and i32 %36, 8, !dbg !6735
  %tobool99 = icmp eq i32 %and98, 0, !dbg !6735
  br i1 %tobool99, label %if.end102, label %if.then100, !dbg !6736

if.then100:                                       ; preds = %land.lhs.true97
  %call101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %35, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !6737
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6739
  %38 = load i32, i32* @dump_flags, align 4, !dbg !6740
  call void @print_gimple_stmt(%struct._IO_FILE* %37, %union.gimple_statement_d* %use_stmt.0, i32 0, i32 %38) #6, !dbg !6741
  br label %if.end102, !dbg !6742

if.end102:                                        ; preds = %land.lhs.true97, %if.end94, %if.then100
  %call103 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %use_stmt.0) #6, !dbg !6743
  %tobool105 = icmp eq i8 %call103, 0, !dbg !6743
  br i1 %tobool105, label %if.end116, label %land.lhs.true106, !dbg !6745

land.lhs.true106:                                 ; preds = %if.end102
  %call107 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6746
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6746
  %bf.load109 = load i64, i64* %39, align 8, !dbg !6746
  %bf.cast1117 = and i64 %bf.load109, 65535, !dbg !6747
  %cmp112 = icmp eq i64 %bf.cast1117, 121, !dbg !6747
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !6748

if.then114:                                       ; preds = %land.lhs.true106
  %call115 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6749
  call void @recompute_tree_invariant_for_addr_expr(%union.tree_node* %call115) #6, !dbg !6750
  br label %if.end116, !dbg !6750

if.end116:                                        ; preds = %if.end102, %if.then114, %land.lhs.true106
  %call117 = call zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d* %use_stmt.0, %union.gimple_statement_d* %use_stmt.0) #6, !dbg !6751
  %tobool118 = icmp eq i8 %call117, 0, !dbg !6751
  br i1 %tobool118, label %if.end129, label %if.then119, !dbg !6753

if.then119:                                       ; preds = %if.end116
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @need_eh_cleanup, align 8, !dbg !6754
  %call120 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6756
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call120, i64 0, i32 9, !dbg !6757
  %41 = load i32, i32* %index, align 8, !dbg !6757
  %call121 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %40, i32 %41) #6, !dbg !6758
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6759
  %tobool122 = icmp eq %struct._IO_FILE* %42, null, !dbg !6759
  br i1 %tobool122, label %if.end129, label %land.lhs.true123, !dbg !6761

land.lhs.true123:                                 ; preds = %if.then119
  %43 = load i32, i32* @dump_flags, align 4, !dbg !6762
  %and124 = and i32 %43, 8, !dbg !6763
  %tobool125 = icmp eq i32 %and124, 0, !dbg !6763
  br i1 %tobool125, label %if.end129, label %if.then126, !dbg !6764

if.then126:                                       ; preds = %land.lhs.true123
  %call127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %42, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !6765
  br label %if.end129, !dbg !6765

if.end129:                                        ; preds = %land.lhs.true123, %if.then119, %if.end116, %if.then126
  %call130 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %use_stmt.0) #6, !dbg !6766
  %tobool132 = icmp eq i8 %call130, 0, !dbg !6766
  br i1 %tobool132, label %if.else, label %land.lhs.true133, !dbg !6767

land.lhs.true133:                                 ; preds = %if.end129
  %call134 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6768
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %call134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6768
  %bf.load136 = load i64, i64* %44, align 8, !dbg !6768
  %bf.cast1385 = and i64 %bf.load136, 65535, !dbg !6769
  %cmp139 = icmp eq i64 %bf.cast1385, 141, !dbg !6769
  br i1 %cmp139, label %land.lhs.true141, label %if.else, !dbg !6770

land.lhs.true141:                                 ; preds = %land.lhs.true133
  %call142 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6771
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %call142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6771
  %bf.load144 = load i64, i64* %45, align 8, !dbg !6771
  %bf.cast1466 = and i64 %bf.load144, 65535, !dbg !6772
  %cmp147 = icmp eq i64 %bf.cast1466, 141, !dbg !6772
  br i1 %cmp147, label %if.then154, label %lor.lhs.false149, !dbg !6773

lor.lhs.false149:                                 ; preds = %land.lhs.true141
  %call150 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6774
  %call151 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call150) #6, !dbg !6775
  %tobool153 = icmp eq i8 %call151, 0, !dbg !6775
  br i1 %tobool153, label %if.else, label %if.then154, !dbg !6776

if.then154:                                       ; preds = %lor.lhs.false149, %land.lhs.true141
  %call156 = call fastcc %union.tree_node* @get_lhs_or_phi_result(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6777
  call void @llvm.dbg.value(metadata %union.tree_node* %call156, metadata !6597, metadata !DIExpression()), !dbg !6778
  %version158 = getelementptr inbounds %union.tree_node, %union.tree_node* %call156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6779
  %46 = bitcast %union.tree_node** %version158 to i32*, !dbg !6779
  %47 = load i32, i32* %46, align 8, !dbg !6779
  %call159 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %interesting_names, i32 %47) #6, !dbg !6780
  br label %for.inc243, !dbg !6781

if.else:                                          ; preds = %lor.lhs.false149, %if.end129, %land.lhs.true133
  %call160 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6782
  %cmp161 = icmp eq i32 %call160, 1, !dbg !6783
  br i1 %cmp161, label %if.then171, label %lor.lhs.false163, !dbg !6784

lor.lhs.false163:                                 ; preds = %if.else
  %call164 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6785
  %cmp165 = icmp eq i32 %call164, 5, !dbg !6786
  br i1 %cmp165, label %if.then171, label %lor.lhs.false167, !dbg !6787

lor.lhs.false167:                                 ; preds = %lor.lhs.false163
  %call168 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6788
  %cmp169 = icmp eq i32 %call168, 3, !dbg !6789
  br i1 %cmp169, label %if.then171, label %for.inc243, !dbg !6790

if.then171:                                       ; preds = %lor.lhs.false167, %lor.lhs.false163, %if.else
  %call172 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6791
  %cmp173 = icmp eq i32 %call172, 1, !dbg !6793
  br i1 %cmp173, label %if.then175, label %if.else181, !dbg !6794

if.then175:                                       ; preds = %if.then171
  %call176 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6795
  %call177 = call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6796
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !6797
  %call178 = call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6798
  %call179 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6799
  %call180 = call %union.tree_node* @fold_binary_loc(i32 %call176, i32 %call177, %union.tree_node* %48, %union.tree_node* %call178, %union.tree_node* %call179) #6, !dbg !6800
  call void @llvm.dbg.value(metadata %union.tree_node* %call180, metadata !6600, metadata !DIExpression()), !dbg !6801
  br label %if.end190, !dbg !6802

if.else181:                                       ; preds = %if.then171
  %call182 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6803
  %cmp183 = icmp eq i32 %call182, 5, !dbg !6805
  br i1 %cmp183, label %if.then185, label %if.else187, !dbg !6806

if.then185:                                       ; preds = %if.else181
  %call186 = call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6807
  call void @llvm.dbg.value(metadata %union.tree_node* %call186, metadata !6600, metadata !DIExpression()), !dbg !6801
  br label %if.end190, !dbg !6808

if.else187:                                       ; preds = %if.else181
  %call188 = call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6809
  call void @llvm.dbg.value(metadata %union.tree_node* %call188, metadata !6600, metadata !DIExpression()), !dbg !6801
  br label %if.end190

if.end190:                                        ; preds = %if.then185, %if.else187, %if.then175
  %val.1 = phi %union.tree_node* [ %call180, %if.then175 ], [ %call186, %if.then185 ], [ %call188, %if.else187 ], !dbg !6810
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !6600, metadata !DIExpression()), !dbg !6801
  %tobool191 = icmp eq %union.tree_node* %val.1, null, !dbg !6811
  br i1 %tobool191, label %for.inc243, label %land.lhs.true192, !dbg !6812

land.lhs.true192:                                 ; preds = %if.end190
  %call193 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %val.1) #6, !dbg !6813
  %tobool195 = icmp eq i8 %call193, 0, !dbg !6813
  br i1 %tobool195, label %for.inc243, label %if.then196, !dbg !6814

if.then196:                                       ; preds = %land.lhs.true192
  %call197 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6815
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call197, metadata !6603, metadata !DIExpression()), !dbg !6661
  %call198 = call %struct.edge_def* @find_taken_edge(%struct.basic_block_def* %call197, %union.tree_node* nonnull %val.1) #6, !dbg !6816
  call void @llvm.dbg.value(metadata %struct.edge_def* %call198, metadata !6606, metadata !DIExpression()), !dbg !6661
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7, !dbg !6817
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7, !dbg !6818
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7, !dbg !6818
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #7, !dbg !6819
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call197, i64 0, i32 1, !dbg !6819
  %call199 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !6819
  %49 = extractvalue { i32, %struct.VEC_edge_gc** } %call199, 0, !dbg !6819
  store i32 %49, i32* %17, align 8, !dbg !6819
  %50 = extractvalue { i32, %struct.VEC_edge_gc** } %call199, 1, !dbg !6819
  store %struct.VEC_edge_gc** %50, %struct.VEC_edge_gc*** %18, align 8, !dbg !6819
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %16, i64 16, i1 false), !dbg !6819
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #7, !dbg !6819
  %probability222 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call198, i64 0, i32 8, !dbg !6820
  %count223 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call198, i64 0, i32 9, !dbg !6820
  br label %for.cond200, !dbg !6821

for.cond200:                                      ; preds = %if.end226, %if.then196
  %51 = load i32, i32* %19, align 8, !dbg !6822
  %52 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !6822
  %call201 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %51, %struct.VEC_edge_gc** %52) #8, !dbg !6822
  call void @llvm.dbg.value(metadata %struct.edge_def* %call201, metadata !6608, metadata !DIExpression()), !dbg !6661
  %tobool202 = icmp eq %struct.edge_def* %call201, null, !dbg !6823
  br i1 %tobool202, label %for.end227, label %for.body203, !dbg !6823

for.body203:                                      ; preds = %for.cond200
  %cmp204 = icmp eq %struct.edge_def* %call201, %call198, !dbg !6824
  br i1 %cmp204, label %if.else225, label %if.then206, !dbg !6825

if.then206:                                       ; preds = %for.body203
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #7, !dbg !6826
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call201, i64 0, i32 1, !dbg !6827
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6827
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp207, %struct.basic_block_def* %53) #6, !dbg !6826
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %21, i64 24, i1 false), !dbg !6826
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #7, !dbg !6826
  br label %for.cond208, !dbg !6828

for.cond208:                                      ; preds = %for.body212, %if.then206
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !6610, metadata !DIExpression(DW_OP_deref)), !dbg !6661
  %call209 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #8, !dbg !6829
  %tobool210 = icmp eq i8 %call209, 0, !dbg !6830
  br i1 %tobool210, label %for.body212, label %for.end221, !dbg !6831

for.body212:                                      ; preds = %for.cond208
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !6610, metadata !DIExpression(DW_OP_deref)), !dbg !6661
  %call213 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #8, !dbg !6832
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call213, metadata !6611, metadata !DIExpression()), !dbg !6833
  %call215 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call213) #8, !dbg !6834
  call void @llvm.dbg.value(metadata %union.tree_node* %call215, metadata !6620, metadata !DIExpression()), !dbg !6833
  %version218 = getelementptr inbounds %union.tree_node, %union.tree_node* %call215, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6835
  %54 = bitcast %union.tree_node** %version218 to i32*, !dbg !6835
  %55 = load i32, i32* %54, align 8, !dbg !6835
  call void @llvm.dbg.value(metadata i32 %55, metadata !6621, metadata !DIExpression()), !dbg !6833
  %call219 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %interesting_names, i32 %55) #6, !dbg !6836
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !6610, metadata !DIExpression(DW_OP_deref)), !dbg !6661
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #8, !dbg !6837
  br label %for.cond208, !dbg !6838, !llvm.loop !6839

for.end221:                                       ; preds = %for.cond208
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call201, i64 0, i32 8, !dbg !6841
  %56 = load i32, i32* %probability, align 4, !dbg !6841
  %57 = load i32, i32* %probability222, align 4, !dbg !6842
  %add = add nsw i32 %57, %56, !dbg !6842
  store i32 %add, i32* %probability222, align 4, !dbg !6842
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call201, i64 0, i32 9, !dbg !6843
  %58 = load i64, i64* %count, align 8, !dbg !6843
  %59 = load i64, i64* %count223, align 8, !dbg !6844
  %add224 = add nsw i64 %59, %58, !dbg !6844
  store i64 %add224, i64* %count223, align 8, !dbg !6844
  call void @remove_edge(%struct.edge_def* nonnull %call201) #6, !dbg !6845
  store i8 1, i8* @cfg_altered, align 1, !dbg !6846
  br label %if.end226, !dbg !6847

if.else225:                                       ; preds = %for.body203
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6607, metadata !DIExpression(DW_OP_deref)), !dbg !6661
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !6848
  br label %if.end226

if.end226:                                        ; preds = %if.else225, %for.end221
  br label %for.cond200, !dbg !6849, !llvm.loop !6850

for.end227:                                       ; preds = %for.cond200
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #7, !dbg !6852
  %call229 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %use_stmt.0) #8, !dbg !6853
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp228, %struct.basic_block_def* %call229) #8, !dbg !6852
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %22, i64 24, i1 false), !dbg !6852
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #7, !dbg !6852
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6609, metadata !DIExpression(DW_OP_deref)), !dbg !6661
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !6854
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call198, i64 0, i32 7, !dbg !6855
  %60 = load i32, i32* %flags, align 8, !dbg !6856
  %and232 = and i32 %60, -3076, !dbg !6857
  %or = or i32 %and232, 1, !dbg !6858
  store i32 %or, i32* %flags, align 8, !dbg !6858
  %61 = load i32, i32* %probability222, align 4, !dbg !6859
  %cmp235 = icmp sgt i32 %61, 10000, !dbg !6861
  br i1 %cmp235, label %if.then237, label %if.end239, !dbg !6862

if.then237:                                       ; preds = %for.end227
  store i32 10000, i32* %probability222, align 4, !dbg !6863
  br label %if.end239, !dbg !6864

if.end239:                                        ; preds = %if.then237, %for.end227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7, !dbg !6865
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7, !dbg !6865
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7, !dbg !6865
  br label %for.inc243, !dbg !6866

for.inc243:                                       ; preds = %land.lhs.true41, %land.lhs.true192, %if.end190, %for.body, %if.then154, %if.end239, %lor.lhs.false167, %if.end85, %if.then89
  %all.1 = phi i8 [ %all.0, %for.body ], [ 0, %land.lhs.true41 ], [ %all.0, %if.then89 ], [ %all.0, %if.end85 ], [ %all.0, %lor.lhs.false167 ], [ %all.0, %if.end239 ], [ %all.0, %land.lhs.true192 ], [ %all.0, %if.end190 ], [ %all.0, %if.then154 ], !dbg !6637
  call void @llvm.dbg.value(metadata i8 %all.1, metadata !6588, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6579, metadata !DIExpression(DW_OP_deref)), !dbg !6637
  %call244 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %iter) #8, !dbg !6667
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call244, metadata !6587, metadata !DIExpression()), !dbg !6637
  br label %for.cond, !dbg !6667, !llvm.loop !6867

for.end245:                                       ; preds = %for.cond
  %all.0.lcssa = phi i8 [ %all.0, %for.cond ], !dbg !6666
  call void @llvm.dbg.value(metadata i8 %all.0.lcssa, metadata !6588, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i8 %all.0.lcssa, metadata !6588, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i8 %all.0.lcssa, metadata !6588, metadata !DIExpression()), !dbg !6637
  %tobool246 = icmp eq i8 %all.0.lcssa, 0, !dbg !6869
  br i1 %tobool246, label %cond.end, label %lor.lhs.false247, !dbg !6869

lor.lhs.false247:                                 ; preds = %for.end245
  %call248 = call fastcc zeroext i8 @has_zero_uses(%union.tree_node* %lhs) #8, !dbg !6869
  %tobool250 = icmp eq i8 %call248, 0, !dbg !6869
  br i1 %tobool250, label %cond.true, label %cond.end, !dbg !6869

cond.true:                                        ; preds = %lor.lhs.false247
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 2690, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !6869
  br label %cond.end, !dbg !6869

cond.end:                                         ; preds = %lor.lhs.false247, %for.end245, %cond.true
  br i1 %tobool246, label %if.end254, label %if.then253, !dbg !6870

if.then253:                                       ; preds = %cond.end
  call fastcc void @remove_stmt_or_phi(%union.gimple_statement_d* %stmt) #8, !dbg !6871
  br label %if.end254, !dbg !6871

if.end254:                                        ; preds = %cond.end, %if.then253
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2) #7, !dbg !6873
  br label %if.end255, !dbg !6874

if.end255:                                        ; preds = %land.lhs.true13, %land.lhs.true11, %lor.lhs.false, %entry, %if.end254
  ret void, !dbg !6875
}

declare dso_local zeroext i8 @has_zero_uses_1(%struct.ssa_use_operand_d*) local_unnamed_addr #2

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @remove_phi_node(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @release_defs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !6876 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6881, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6882, metadata !DIExpression()), !dbg !6883
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6884
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6885
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !6886
  store i40* %imm_uses, i40** %0, align 8, !dbg !6886
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !6887
  %1 = bitcast i40* %next to i64*, !dbg !6887
  %2 = load i64, i64* %1, align 8, !dbg !6887
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6888
  store i64 %2, i64* %3, align 8, !dbg !6888
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !6889
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next_imm_name, align 8, !dbg !6890
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6891
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6892
  %next3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !6893
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next3, align 8, !dbg !6894
  %stmt = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 2, i32 0, !dbg !6895
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !6896
  %use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 3, !dbg !6897
  store %union.tree_node** null, %union.tree_node*** %use, align 8, !dbg !6898
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !6899
  %tobool = icmp eq i8 %call, 0, !dbg !6899
  br i1 %tobool, label %if.end, label %return, !dbg !6901

if.end:                                           ; preds = %entry
  %imm_use6 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6902
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !6902
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #8, !dbg !6903
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !6904
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !6904
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !6904
  br label %return, !dbg !6905

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end ], [ null, %entry ], !dbg !6883
  ret %union.gimple_statement_d* %retval.0, !dbg !6906
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6907 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6913, metadata !DIExpression()), !dbg !6914
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6915
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6915
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6916
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !6916
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !6917
  %conv1 = zext i1 %cmp to i8, !dbg !6918
  ret i8 %conv1, !dbg !6919
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !6920 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !6922, metadata !DIExpression()), !dbg !6923
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %s) #8, !dbg !6924
  %tobool = icmp eq i8 %call, 0, !dbg !6924
  br i1 %tobool, label %return, label %if.then, !dbg !6926

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !6927
  %bf.load = load i32, i32* %0, align 8, !dbg !6927
  %cmp = icmp ult i32 %bf.load, 65536, !dbg !6928
  %conv1 = zext i1 %cmp to i8, !dbg !6929
  br label %return, !dbg !6930

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv1, %if.then ], [ 0, %entry ], !dbg !6923
  ret i8 %retval.0, !dbg !6931
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6932 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6936, metadata !DIExpression()), !dbg !6937
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6938
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6938
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !6939
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6939
  %2 = load i64, i64* %1, align 8, !dbg !6939
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !6940
  %3 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !6941
  store i64 %2, i64* %3, align 8, !dbg !6941
  ret %struct.ssa_use_operand_d* %0, !dbg !6942
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6943 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6945, metadata !DIExpression()), !dbg !6946
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6947
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6947
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6948
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %iter_node, !dbg !6949
  %conv1 = zext i1 %cmp to i8, !dbg !6950
  ret i8 %conv1, !dbg !6951
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6952 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6954, metadata !DIExpression()), !dbg !6955
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !6956
  %0 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !6956
  %1 = load i64, i64* %0, align 8, !dbg !6956
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6957
  store i64 %1, i64* %2, align 8, !dbg !6957
  %call = tail call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !6958
  %tobool = icmp eq i8 %call, 0, !dbg !6958
  br i1 %tobool, label %if.else, label %return, !dbg !6960

if.else:                                          ; preds = %entry
  %imm_use1 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6961
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use1, align 8, !dbg !6961
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 1, !dbg !6963
  %4 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6963
  %5 = load i64, i64* %4, align 8, !dbg !6963
  store i64 %5, i64* %0, align 8, !dbg !6964
  br label %return, !dbg !6965

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %struct.ssa_use_operand_d* [ %3, %if.else ], [ null, %entry ], !dbg !6966
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6967
}

declare dso_local zeroext i8 @fold_stmt_inplace(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_safe_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6968 {
entry:
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !6971
  %tobool = icmp eq i8 %call, 0, !dbg !6971
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6972

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !6973
  br label %cond.end, !dbg !6972

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call1, %cond.true ], [ null, %entry ], !dbg !6972
  ret %struct.edge_def* %cond, !dbg !6974
}

declare dso_local void @remove_edge(%struct.edge_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6975 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6979, metadata !DIExpression()), !dbg !6980
  %next = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !6981
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6981
  %1 = load i64, i64* %0, align 8, !dbg !6981
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6982
  store i64 %1, i64* %2, align 8, !dbg !6982
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !6983
  %tobool = icmp eq i8 %call, 0, !dbg !6983
  br i1 %tobool, label %if.end4, label %if.then, !dbg !6985

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6986
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6986
  %cmp = icmp eq %struct.ssa_use_operand_d* %3, null, !dbg !6989
  br i1 %cmp, label %return, label %if.then2, !dbg !6990

if.then2:                                         ; preds = %if.then
  %iter_node3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6991
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node3) #8, !dbg !6992
  br label %return, !dbg !6992

if.end4:                                          ; preds = %entry
  %imm_use5 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6993
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !6993
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #8, !dbg !6994
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !6995
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !6995
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6995
  br label %return, !dbg !6996

return:                                           ; preds = %if.then, %if.then2, %if.end4
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end4 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !6980
  ret %union.gimple_statement_d* %retval.0, !dbg !6997
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %head, %struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6998 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7002, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7003, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7005, metadata !DIExpression()), !dbg !7010
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head, i64 0, i32 2, i32 0, !dbg !7011
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7011
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !7006, metadata !DIExpression()), !dbg !7010
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %head) #8, !dbg !7012
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7007, metadata !DIExpression()), !dbg !7010
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !7013
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #7, !dbg !7013
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !7014
  %tobool = icmp eq i8 %call1, 0, !dbg !7014
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !7014
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7009, metadata !DIExpression()), !dbg !7010
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #8, !dbg !7015
  %cmp = icmp eq i32 %call2, 16, !dbg !7017
  br i1 %cmp, label %if.then, label %if.else, !dbg !7018

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7008, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #8, !dbg !7019
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !7004, metadata !DIExpression()), !dbg !7010
  br label %for.cond, !dbg !7019

for.cond:                                         ; preds = %for.inc, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.then ], [ %call12, %for.inc ], !dbg !7022
  %last_p.0 = phi %struct.ssa_use_operand_d* [ %head, %if.then ], [ %last_p.1, %for.inc ], !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0, metadata !7005, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !7004, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7008, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !7023
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7023
  br i1 %tobool6, label %for.body, label %if.end44.loopexit, !dbg !7019

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #8, !dbg !7025
  %cmp8 = icmp eq %union.tree_node* %call7, %call, !dbg !7027
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !7028

if.then10:                                        ; preds = %for.body
  %call11 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.0, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.0) #8, !dbg !7029
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !7005, metadata !DIExpression()), !dbg !7010
  br label %for.inc, !dbg !7030

for.inc:                                          ; preds = %for.body, %if.then10
  %last_p.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.then10 ], [ %last_p.0, %for.body ], !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.1, metadata !7005, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7008, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call12 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !7023
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call12, metadata !7004, metadata !DIExpression()), !dbg !7010
  br label %for.cond, !dbg !7023, !llvm.loop !7031

if.else:                                          ; preds = %entry
  br i1 %tobool, label %if.else31, label %if.then15, !dbg !7033

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7008, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #8, !dbg !7035
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !7004, metadata !DIExpression()), !dbg !7010
  br label %for.cond17, !dbg !7035

for.cond17:                                       ; preds = %for.inc28, %if.then15
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call29, %for.inc28 ], !dbg !7039
  %last_p.2 = phi %struct.ssa_use_operand_d* [ %head, %if.then15 ], [ %last_p.3, %for.inc28 ], !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2, metadata !7005, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !7004, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7008, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call18 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !7040
  %tobool19 = icmp eq i8 %call18, 0, !dbg !7040
  br i1 %tobool19, label %for.body21, label %if.end44.loopexit1, !dbg !7035

for.body21:                                       ; preds = %for.cond17
  %call22 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1) #8, !dbg !7042
  %cmp23 = icmp eq %union.tree_node* %call22, %call, !dbg !7044
  br i1 %cmp23, label %if.then25, label %for.inc28, !dbg !7045

if.then25:                                        ; preds = %for.body21
  %call26 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.1, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.2) #8, !dbg !7046
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !7005, metadata !DIExpression()), !dbg !7010
  br label %for.inc28, !dbg !7047

for.inc28:                                        ; preds = %for.body21, %if.then25
  %last_p.3 = phi %struct.ssa_use_operand_d* [ %call26, %if.then25 ], [ %last_p.2, %for.body21 ], !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.3, metadata !7005, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7008, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !7040
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !7004, metadata !DIExpression()), !dbg !7010
  br label %for.cond17, !dbg !7040, !llvm.loop !7048

if.else31:                                        ; preds = %if.else
  %call32 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %0) #8, !dbg !7050
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call32, metadata !7004, metadata !DIExpression()), !dbg !7010
  %cmp33 = icmp eq %struct.ssa_use_operand_d* %call32, null, !dbg !7052
  br i1 %cmp33, label %if.end44, label %if.then35, !dbg !7053

if.then35:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call32) #8, !dbg !7054
  %cmp37 = icmp eq %union.tree_node* %call36, %call, !dbg !7057
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !7058

if.then39:                                        ; preds = %if.then35
  %call40 = tail call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* nonnull %call32, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %head) #8, !dbg !7059
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !7005, metadata !DIExpression()), !dbg !7010
  br label %if.end44, !dbg !7060

if.end44.loopexit:                                ; preds = %for.cond
  %last_p.0.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.0, %for.cond ], !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7005, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7005, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7005, metadata !DIExpression()), !dbg !7010
  br label %if.end44, !dbg !7061

if.end44.loopexit1:                               ; preds = %for.cond17
  %last_p.2.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.2, %for.cond17 ], !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7005, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7005, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7005, metadata !DIExpression()), !dbg !7010
  br label %if.end44, !dbg !7061

if.end44:                                         ; preds = %if.end44.loopexit1, %if.end44.loopexit, %if.else31, %if.then35, %if.then39
  %last_p.7 = phi %struct.ssa_use_operand_d* [ %head, %if.else31 ], [ %call40, %if.then39 ], [ %head, %if.then35 ], [ %last_p.0.lcssa, %if.end44.loopexit ], [ %last_p.2.lcssa, %if.end44.loopexit1 ], !dbg !7063
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.7, metadata !7005, metadata !DIExpression()), !dbg !7010
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !7061
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7061
  %cmp45 = icmp eq %struct.ssa_use_operand_d* %2, null, !dbg !7064
  br i1 %cmp45, label %if.end49, label %if.then47, !dbg !7065

if.then47:                                        ; preds = %if.end44
  %iter_node48 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7066
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node48) #8, !dbg !7067
  br label %if.end49, !dbg !7067

if.end49:                                         ; preds = %if.end44, %if.then47
  %iter_node50 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7068
  call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* nonnull %iter_node50, %struct.ssa_use_operand_d* %last_p.7) #8, !dbg !7069
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #7, !dbg !7070
  ret void, !dbg !7070
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !7071 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7073, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !7074, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7075, metadata !DIExpression()), !dbg !7078
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #8, !dbg !7079
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7076, metadata !DIExpression()), !dbg !7078
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !7080
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7081
  store i8 0, i8* %done, align 8, !dbg !7082
  %and = and i32 %flags, 5, !dbg !7083
  %cmp = icmp eq i32 %and, 0, !dbg !7083
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7083

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !7083
  br label %cond.end, !dbg !7083

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !7084
  %tobool = icmp eq i8 %call1, 0, !dbg !7084
  %cond2 = select i1 %tobool, i32 4, i32 1, !dbg !7084
  call void @llvm.dbg.value(metadata i32 %cond2, metadata !7077, metadata !DIExpression()), !dbg !7078
  %and3 = and i32 %cond2, %flags, !dbg !7085
  %cmp4 = icmp eq i32 %and3, 0, !dbg !7087
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7088

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %done, align 8, !dbg !7089
  br label %cleanup, !dbg !7091

if.end:                                           ; preds = %cond.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7092
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7093
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #8, !dbg !7094
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7095
  store i32 %call7, i32* %num_phi, align 4, !dbg !7096
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7097
  store i32 2, i32* %iter_type, align 4, !dbg !7098
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !7099
  br label %cleanup, !dbg !7100

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !7078
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7101
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p) unnamed_addr #0 !dbg !7102 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !7106, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7107, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p, metadata !7108, metadata !DIExpression()), !dbg !7109
  %cmp = icmp eq %struct.ssa_use_operand_d* %use_p, %head, !dbg !7110
  br i1 %cmp, label %if.end3, label %if.then, !dbg !7112

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %last_p, i64 0, i32 1, !dbg !7113
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !7113
  %cmp1 = icmp eq %struct.ssa_use_operand_d* %0, %use_p, !dbg !7116
  br i1 %cmp1, label %if.end3, label %if.else, !dbg !7117

if.else:                                          ; preds = %if.then
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p) #8, !dbg !7118
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %last_p) #8, !dbg !7120
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !7108, metadata !DIExpression()), !dbg !7109
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.else, %if.then
  %last_p.addr.1 = phi %struct.ssa_use_operand_d* [ %last_p, %entry ], [ %use_p, %if.then ], [ %use_p, %if.else ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.addr.1, metadata !7108, metadata !DIExpression()), !dbg !7109
  ret %struct.ssa_use_operand_d* %last_p.addr.1, !dbg !7121
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7122 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7126, metadata !DIExpression()), !dbg !7128
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !7129
  %tobool = icmp eq i8 %call, 0, !dbg !7129
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7131

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !7132
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !7132
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !7132
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !7127, metadata !DIExpression()), !dbg !7128
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !7133
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !7135

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !7136
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !7136
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !7137
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !7137
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !7138
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !7139
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !7140
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !7140

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !7141
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !7142 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7146, metadata !DIExpression()), !dbg !7147
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7148
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7148
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !7150
  br i1 %cmp, label %return, label %if.end, !dbg !7151

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !7152
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7152
  %2 = load i64, i64* %1, align 8, !dbg !7152
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !7153
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !7154
  store i64 %2, i64* %3, align 8, !dbg !7154
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !7155
  %5 = load i64, i64* %4, align 8, !dbg !7155
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !7156
  %7 = load i64*, i64** %6, align 8, !dbg !7156
  store i64 %5, i64* %7, align 8, !dbg !7157
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7158
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !7159
  br label %return, !dbg !7160

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !7160
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !7161 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7165, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !7166, metadata !DIExpression()), !dbg !7167
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7168
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7169
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !7170
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7170
  %1 = load i64, i64* %0, align 8, !dbg !7170
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !7171
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !7172
  store i64 %1, i64* %2, align 8, !dbg !7172
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !7173
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !7174
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !7175
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !7176
  ret void, !dbg !7177
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7178 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7182, metadata !DIExpression()), !dbg !7183
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !7184
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !7185
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7186
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !7187
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7188
  store i32 0, i32* %iter_type, align 4, !dbg !7189
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !7190
  store i32 0, i32* %phi_i, align 8, !dbg !7191
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7192
  store i32 0, i32* %num_phi, align 4, !dbg !7193
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7194
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7195
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7196
  store i8 1, i8* %done, align 8, !dbg !7197
  ret void, !dbg !7198
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7199 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7201, metadata !DIExpression()), !dbg !7202
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !7203
  %cmp = icmp eq i32 %call, 2, !dbg !7204
  %conv1 = zext i1 %cmp to i8, !dbg !7203
  ret i8 %conv1, !dbg !7205
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2195, !2196, !2197}
!llvm.ident = !{!2198}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pass_dominator", scope: !2, file: !3, line: 743, type: !2150, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !679, globals: !2147, nameTableKind: None)
!3 = !DIFile(filename: "tree-ssa-dom.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !13, !189, !317, !512, !521, !525, !531, !536, !541, !559, !566, !573, !579, !618, !640, !666, !673}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !6, line: 104, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 74, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!16 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!20 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!21 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!22 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!23 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!24 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!25 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!26 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!27 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!28 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!29 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!30 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!31 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!32 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!33 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!34 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!35 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!36 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!37 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!38 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!39 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!40 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!41 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!42 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!43 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!44 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!45 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!46 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!47 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!48 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!50 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!51 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!52 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!53 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!54 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!55 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!56 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!57 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!58 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!59 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!60 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!61 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!62 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!63 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!64 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!65 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!66 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!67 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!68 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!69 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!70 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!71 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!72 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!73 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!74 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!75 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!76 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!77 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!78 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!79 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!80 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!81 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!82 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!83 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!84 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!85 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!86 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!87 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!88 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!89 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!90 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!91 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!92 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!93 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!94 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!95 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!96 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!97 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!98 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!99 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!100 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!101 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!102 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!103 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!104 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!105 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!106 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!107 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!108 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!109 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!110 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!111 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!112 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!113 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!114 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!115 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!116 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!117 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!118 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!119 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!120 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!121 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!122 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!123 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!124 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!125 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!126 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!127 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!128 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!129 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!130 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!131 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!132 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!133 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!134 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!135 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!136 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!137 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!138 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!139 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!140 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!141 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!142 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!143 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!144 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!145 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!146 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!147 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!148 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!149 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!150 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!151 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!152 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!153 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!154 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!155 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!156 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!157 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!158 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!159 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!160 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!161 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!162 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!163 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!164 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!165 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!166 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!167 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!168 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!169 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!170 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!171 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!172 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!173 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!174 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!175 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!176 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!177 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!178 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!179 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!180 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!181 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!182 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!183 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!184 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!185 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!186 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!187 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!188 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !190, line: 7, baseType: !7, size: 32, elements: !191)
!190 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316}
!192 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!281 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!282 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!283 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!284 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!285 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!286 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!287 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!288 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!289 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!290 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!291 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!292 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!293 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!294 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!295 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!296 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!297 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!298 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!299 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!300 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!301 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!302 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!303 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!304 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!305 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!306 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!307 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!308 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!309 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!310 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!311 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!312 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!313 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!314 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!315 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!316 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!317 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !318, line: 39, baseType: !7, size: 32, elements: !319)
!318 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!319 = !{!320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511}
!320 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!321 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!322 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!323 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!324 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!325 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!326 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!327 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!328 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!329 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!330 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!331 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!332 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!333 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!334 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!335 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!336 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!337 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!338 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!339 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!340 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!341 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!342 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!343 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!344 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!345 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!346 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!347 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!348 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!349 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!350 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!351 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!352 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!353 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!354 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!355 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!356 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!357 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!358 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!359 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!360 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!361 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!362 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!363 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!364 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!365 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!366 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!367 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!368 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!369 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!370 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!371 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!372 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!373 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!374 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!375 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!376 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!378 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!379 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!380 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!381 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!382 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!383 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!384 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!385 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!386 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!387 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!388 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!389 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!390 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!391 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!392 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!393 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!394 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!395 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!396 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!397 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!398 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!399 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!400 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!401 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!402 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!403 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!404 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!405 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!406 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!407 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!408 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!409 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!410 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!411 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!412 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!413 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!414 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!415 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!416 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!417 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!418 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!419 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!420 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!421 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!422 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!423 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!424 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!425 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!426 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!427 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!428 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!429 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!430 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!431 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!432 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!433 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!434 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!435 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!436 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!437 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!438 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!439 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!440 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!441 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!442 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!443 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!444 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!445 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!446 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!447 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!448 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!449 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!450 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!451 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!452 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!453 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!454 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!455 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!456 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!457 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!458 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!459 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!460 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!461 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!462 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!463 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!464 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!465 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!466 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!467 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!468 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!469 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!470 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!471 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!472 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!473 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!474 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!475 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!476 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!477 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!478 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!479 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!480 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!481 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!482 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!483 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!484 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!485 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!486 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!487 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!488 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!489 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!490 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!491 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!492 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!493 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!494 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!495 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!496 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!497 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!498 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!499 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!500 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!501 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!502 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!505 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!506 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!507 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!508 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!509 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!510 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!511 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!512 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !513, line: 31, baseType: !7, size: 32, elements: !514)
!513 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!514 = !{!515, !516, !517, !518, !519, !520}
!515 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!516 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!517 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!518 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!519 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!520 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!521 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !513, line: 91, baseType: !7, size: 32, elements: !522)
!522 = !{!523, !524}
!523 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!524 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!525 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !526, line: 363, baseType: !7, size: 32, elements: !527)
!526 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!527 = !{!528, !529, !530}
!528 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!529 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!530 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!531 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !526, line: 355, baseType: !7, size: 32, elements: !532)
!532 = !{!533, !534, !535}
!533 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!534 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!535 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!536 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !537, line: 474, baseType: !7, size: 32, elements: !538)
!537 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!538 = !{!539, !540}
!539 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!540 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !318, line: 280, baseType: !7, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558}
!543 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!544 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!545 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!546 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!547 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!548 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!549 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!550 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!551 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!552 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!553 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!554 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!555 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!556 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!557 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!558 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!559 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !318, line: 1817, baseType: !7, size: 32, elements: !560)
!560 = !{!561, !562, !563, !564, !565}
!561 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!562 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!563 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!564 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!565 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !318, line: 1805, baseType: !7, size: 32, elements: !567)
!567 = !{!568, !569, !570, !571, !572}
!568 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!569 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!570 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!571 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!572 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!573 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expr_kind", file: !3, line: 52, baseType: !7, size: 32, elements: !574)
!574 = !{!575, !576, !577, !578}
!575 = !DIEnumerator(name: "EXPR_SINGLE", value: 0, isUnsigned: true)
!576 = !DIEnumerator(name: "EXPR_UNARY", value: 1, isUnsigned: true)
!577 = !DIEnumerator(name: "EXPR_BINARY", value: 2, isUnsigned: true)
!578 = !DIEnumerator(name: "EXPR_CALL", value: 3, isUnsigned: true)
!579 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !580, line: 51, baseType: !7, size: 32, elements: !581)
!580 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!581 = !{!582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617}
!582 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!583 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!584 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!585 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!586 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!587 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!588 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!589 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!590 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!591 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!592 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!593 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!594 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!595 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!596 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!597 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!598 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!599 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!603 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!604 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!605 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!606 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!607 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!608 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!609 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!610 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!611 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!612 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!613 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!614 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!615 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!616 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!617 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!618 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !619, line: 36, baseType: !7, size: 32, elements: !620)
!619 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!620 = !{!621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639}
!621 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!622 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!623 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!624 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!625 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!626 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!627 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!628 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!629 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!630 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!631 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!632 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!633 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!634 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!635 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!636 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!637 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!638 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!639 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!640 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !580, line: 727, baseType: !7, size: 32, elements: !641)
!641 = !{!642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665}
!642 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!643 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!644 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!645 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!646 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!647 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!648 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!649 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!650 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!651 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!652 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!653 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!654 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!655 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!656 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!657 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!658 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!659 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!660 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!661 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!662 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!663 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!664 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!665 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!666 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !667, line: 119, baseType: !7, size: 32, elements: !668)
!667 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!668 = !{!669, !670, !671, !672}
!669 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!670 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!671 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!672 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !580, line: 80, baseType: !7, size: 32, elements: !674)
!674 = !{!675, !676, !677, !678}
!675 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!676 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!677 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!678 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!679 = !{!680, !681, !682, !683, !686, !687, !317, !689, !752, !757, !2111, !2112, !2125, !7, !2130, !618, !189, !1053, !684, !1020, !2142, !673, !2144, !881, !2136, !1019, !724}
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!682 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !685)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !690, line: 47, baseType: !691)
!690 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !693, line: 75, size: 256, elements: !694)
!693 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!694 = !{!695, !710, !711, !712}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !692, file: !693, line: 76, baseType: !696, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !693, line: 68, baseType: !698)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !693, line: 63, size: 320, elements: !699)
!699 = !{!700, !702, !703, !704}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !698, file: !693, line: 64, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !698, file: !693, line: 65, baseType: !701, size: 64, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !698, file: !693, line: 66, baseType: !7, size: 32, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !698, file: !693, line: 67, baseType: !705, size: 128, offset: 192)
!705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 128, elements: !708)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !693, line: 29, baseType: !707)
!707 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!708 = !{!709}
!709 = !DISubrange(count: 2)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !692, file: !693, line: 77, baseType: !696, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !692, file: !693, line: 78, baseType: !7, size: 32, offset: 128)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !692, file: !693, line: 79, baseType: !713, size: 64, offset: 192)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !693, line: 49, baseType: !715)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !693, line: 45, size: 832, elements: !716)
!716 = !{!717, !718, !719}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !715, file: !693, line: 46, baseType: !701, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !715, file: !693, line: 47, baseType: !691, size: 64, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !715, file: !693, line: 48, baseType: !720, size: 704, offset: 128)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !721, line: 164, size: 704, elements: !722)
!721 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!722 = !{!723, !725, !735, !736, !737, !738, !739, !740, !744, !748, !749, !750, !751}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !720, file: !721, line: 166, baseType: !724, size: 64)
!724 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !720, file: !721, line: 167, baseType: !726, size: 64, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !721, line: 157, size: 192, elements: !728)
!728 = !{!729, !730, !731}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !727, file: !721, line: 159, baseType: !684, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !727, file: !721, line: 160, baseType: !726, size: 64, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !727, file: !721, line: 161, baseType: !732, size: 32, offset: 128)
!732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !685, size: 32, elements: !733)
!733 = !{!734}
!734 = !DISubrange(count: 4)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !720, file: !721, line: 168, baseType: !684, size: 64, offset: 128)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !720, file: !721, line: 169, baseType: !684, size: 64, offset: 192)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !720, file: !721, line: 170, baseType: !684, size: 64, offset: 256)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !720, file: !721, line: 171, baseType: !724, size: 64, offset: 320)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !720, file: !721, line: 172, baseType: !682, size: 32, offset: 384)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !720, file: !721, line: 176, baseType: !741, size: 64, offset: 448)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DISubroutineType(types: !743)
!743 = !{!726, !686, !724}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !720, file: !721, line: 177, baseType: !745, size: 64, offset: 512)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !686, !726}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !720, file: !721, line: 178, baseType: !686, size: 64, offset: 576)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !720, file: !721, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !720, file: !721, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !720, file: !721, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "expr_hash_elt", file: !3, line: 132, size: 640, elements: !755)
!755 = !{!756, !2078, !2108, !2109, !2110}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !754, file: !3, line: 135, baseType: !757, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !690, line: 56, baseType: !758)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !318, line: 3371, size: 1792, elements: !760)
!760 = !{!761, !794, !800, !811, !830, !841, !846, !855, !861, !874, !886, !924, !1409, !1437, !1454, !1455, !1460, !1469, !1475, !1480, !1484, !1488, !1729, !1776, !1782, !1788, !1795, !1808, !1822, !1839, !1851, !1873, !1888, !2060}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !759, file: !318, line: 3372, baseType: !762, size: 64)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !318, line: 360, size: 64, elements: !763)
!763 = !{!764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !762, file: !318, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !762, file: !318, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !762, file: !318, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !762, file: !318, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !762, file: !318, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !762, file: !318, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !762, file: !318, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !762, file: !318, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !762, file: !318, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !762, file: !318, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !762, file: !318, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !762, file: !318, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !762, file: !318, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !762, file: !318, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !762, file: !318, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !762, file: !318, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !762, file: !318, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !762, file: !318, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !762, file: !318, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !762, file: !318, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !762, file: !318, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !762, file: !318, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !762, file: !318, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !762, file: !318, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !762, file: !318, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !762, file: !318, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !762, file: !318, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !762, file: !318, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !762, file: !318, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !762, file: !318, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !759, file: !318, line: 3373, baseType: !795, size: 192)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !318, line: 402, size: 192, elements: !796)
!796 = !{!797, !798, !799}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !795, file: !318, line: 403, baseType: !762, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !795, file: !318, line: 404, baseType: !757, size: 64, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !795, file: !318, line: 405, baseType: !757, size: 64, offset: 128)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !759, file: !318, line: 3374, baseType: !801, size: 320)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !318, line: 1384, size: 320, elements: !802)
!802 = !{!803, !804}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !801, file: !318, line: 1385, baseType: !795, size: 192)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !801, file: !318, line: 1386, baseType: !805, size: 128, offset: 192)
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !806, line: 58, baseType: !807)
!806 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !806, line: 54, size: 128, elements: !808)
!808 = !{!809, !810}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !807, file: !806, line: 56, baseType: !707, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !807, file: !806, line: 57, baseType: !724, size: 64, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !759, file: !318, line: 3375, baseType: !812, size: 256)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !318, line: 1397, size: 256, elements: !813)
!813 = !{!814, !815}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !812, file: !318, line: 1398, baseType: !795, size: 192)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !812, file: !318, line: 1399, baseType: !816, size: 64, offset: 192)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !818, line: 52, size: 256, elements: !819)
!818 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!819 = !{!820, !821, !822, !823, !824, !825, !826}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !817, file: !818, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !817, file: !818, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !817, file: !818, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !817, file: !818, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !817, file: !818, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !817, file: !818, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !817, file: !818, line: 62, baseType: !827, size: 192, offset: 64)
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 192, elements: !828)
!828 = !{!829}
!829 = !DISubrange(count: 3)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !759, file: !318, line: 3376, baseType: !831, size: 256)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !318, line: 1408, size: 256, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !831, file: !318, line: 1409, baseType: !795, size: 192)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !831, file: !318, line: 1410, baseType: !835, size: 64, offset: 192)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !837, line: 27, size: 192, elements: !838)
!837 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!838 = !{!839, !840}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !836, file: !837, line: 29, baseType: !805, size: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !836, file: !837, line: 30, baseType: !189, size: 32, offset: 128)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !759, file: !318, line: 3377, baseType: !842, size: 256)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !318, line: 1437, size: 256, elements: !843)
!843 = !{!844, !845}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !842, file: !318, line: 1438, baseType: !795, size: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !842, file: !318, line: 1439, baseType: !757, size: 64, offset: 192)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !759, file: !318, line: 3378, baseType: !847, size: 256)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !318, line: 1418, size: 256, elements: !848)
!848 = !{!849, !850, !851}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !847, file: !318, line: 1419, baseType: !795, size: 192)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !847, file: !318, line: 1420, baseType: !682, size: 32, offset: 192)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !847, file: !318, line: 1421, baseType: !852, size: 8, offset: 224)
!852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !685, size: 8, elements: !853)
!853 = !{!854}
!854 = !DISubrange(count: 1)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !759, file: !318, line: 3379, baseType: !856, size: 320)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !318, line: 1428, size: 320, elements: !857)
!857 = !{!858, !859, !860}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !856, file: !318, line: 1429, baseType: !795, size: 192)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !856, file: !318, line: 1430, baseType: !757, size: 64, offset: 192)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !856, file: !318, line: 1431, baseType: !757, size: 64, offset: 256)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !759, file: !318, line: 3380, baseType: !862, size: 320)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !318, line: 1460, size: 320, elements: !863)
!863 = !{!864, !865}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !862, file: !318, line: 1461, baseType: !795, size: 192)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !862, file: !318, line: 1462, baseType: !866, size: 128, offset: 192)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !867, line: 31, size: 128, elements: !868)
!867 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!868 = !{!869, !872, !873}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !866, file: !867, line: 32, baseType: !870, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !681)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !866, file: !867, line: 33, baseType: !7, size: 32, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !866, file: !867, line: 34, baseType: !7, size: 32, offset: 96)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !759, file: !318, line: 3381, baseType: !875, size: 384)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !318, line: 2507, size: 384, elements: !876)
!876 = !{!877, !878, !883, !884, !885}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !875, file: !318, line: 2508, baseType: !795, size: 192)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !875, file: !318, line: 2509, baseType: !879, size: 32, offset: 192)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !880, line: 58, baseType: !881)
!880 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !882, line: 44, baseType: !7)
!882 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!883 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !875, file: !318, line: 2510, baseType: !7, size: 32, offset: 224)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !875, file: !318, line: 2511, baseType: !757, size: 64, offset: 256)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !875, file: !318, line: 2512, baseType: !757, size: 64, offset: 320)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !759, file: !318, line: 3382, baseType: !887, size: 896)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !318, line: 2652, size: 896, elements: !888)
!888 = !{!889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !887, file: !318, line: 2653, baseType: !875, size: 384)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !887, file: !318, line: 2654, baseType: !757, size: 64, offset: 384)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !887, file: !318, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !887, file: !318, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !887, file: !318, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !887, file: !318, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !887, file: !318, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !887, file: !318, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !887, file: !318, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !887, file: !318, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !887, file: !318, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !887, file: !318, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !887, file: !318, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !887, file: !318, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !887, file: !318, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !887, file: !318, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !887, file: !318, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !887, file: !318, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !887, file: !318, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !887, file: !318, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !887, file: !318, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !887, file: !318, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !887, file: !318, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !887, file: !318, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !887, file: !318, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !887, file: !318, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !887, file: !318, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !887, file: !318, line: 2703, baseType: !7, size: 32, offset: 512)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !887, file: !318, line: 2705, baseType: !757, size: 64, offset: 576)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !887, file: !318, line: 2706, baseType: !757, size: 64, offset: 640)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !887, file: !318, line: 2707, baseType: !757, size: 64, offset: 704)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !887, file: !318, line: 2708, baseType: !757, size: 64, offset: 768)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !887, file: !318, line: 2711, baseType: !922, size: 64, offset: 832)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !318, line: 2711, flags: DIFlagFwdDecl)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !759, file: !318, line: 3383, baseType: !925, size: 960)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !318, line: 2756, size: 960, elements: !926)
!926 = !{!927, !928}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !925, file: !318, line: 2757, baseType: !887, size: 896)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !925, file: !318, line: 2758, baseType: !929, size: 64, offset: 896)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !690, line: 50, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !932, line: 240, size: 384, elements: !933)
!932 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!933 = !{!934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !931, file: !932, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !931, file: !932, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !931, file: !932, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !931, file: !932, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !931, file: !932, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !931, file: !932, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !931, file: !932, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !931, file: !932, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !931, file: !932, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !931, file: !932, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !931, file: !932, line: 321, baseType: !945, size: 320, offset: 64)
!945 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !932, line: 315, size: 320, elements: !946)
!946 = !{!947, !1342, !1344, !1407, !1408}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !945, file: !932, line: 316, baseType: !948, size: 64)
!948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 64, elements: !853)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !932, line: 183, baseType: !950)
!950 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !932, line: 166, size: 64, elements: !951)
!951 = !{!952, !953, !954, !955, !956, !964, !965, !977, !980, !981, !982, !1319, !1332, !1339}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !950, file: !932, line: 168, baseType: !682, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !950, file: !932, line: 169, baseType: !7, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !950, file: !932, line: 170, baseType: !687, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !950, file: !932, line: 171, baseType: !929, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !950, file: !932, line: 172, baseType: !957, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !690, line: 53, baseType: !958)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !932, line: 359, size: 128, elements: !960)
!960 = !{!961, !962}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !959, file: !932, line: 360, baseType: !682, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !959, file: !932, line: 361, baseType: !963, size: 64, offset: 64)
!963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 64, elements: !853)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !950, file: !932, line: 173, baseType: !189, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !950, file: !932, line: 174, baseType: !966, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !932, line: 133, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !932, line: 115, size: 32, elements: !968)
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !967, file: !932, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !967, file: !932, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !967, file: !932, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !967, file: !932, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !967, file: !932, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !967, file: !932, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !967, file: !932, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !967, file: !932, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !950, file: !932, line: 175, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !932, line: 175, flags: DIFlagFwdDecl)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !950, file: !932, line: 176, baseType: !691, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !950, file: !932, line: 177, baseType: !757, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !950, file: !932, line: 178, baseType: !983, size: 64)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !526, line: 217, size: 832, elements: !985)
!985 = !{!986, !1231, !1232, !1233, !1289, !1293, !1294, !1295, !1313, !1314, !1315, !1316, !1317, !1318}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !984, file: !526, line: 219, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !526, line: 151, baseType: !989)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !526, line: 151, size: 128, elements: !990)
!990 = !{!991}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !989, file: !526, line: 151, baseType: !992, size: 128)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !526, line: 150, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !526, line: 150, size: 128, elements: !994)
!994 = !{!995, !996, !997}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !993, file: !526, line: 150, baseType: !7, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !993, file: !526, line: 150, baseType: !7, size: 32, offset: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !993, file: !526, line: 150, baseType: !998, size: 64, offset: 64)
!998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !999, size: 64, elements: !853)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !690, line: 108, baseType: !1000)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !526, line: 122, size: 512, elements: !1002)
!1002 = !{!1003, !1004, !1005, !1223, !1224, !1225, !1226, !1227, !1228, !1229}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1001, file: !526, line: 124, baseType: !983, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1001, file: !526, line: 125, baseType: !983, size: 64, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1001, file: !526, line: 131, baseType: !1006, size: 64, offset: 128)
!1006 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !526, line: 128, size: 64, elements: !1007)
!1007 = !{!1008, !1222}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1006, file: !526, line: 129, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !690, line: 66, baseType: !1010)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !580, line: 143, size: 192, elements: !1012)
!1012 = !{!1013, !1220, !1221}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1011, file: !580, line: 145, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !690, line: 69, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !580, line: 136, size: 192, elements: !1017)
!1017 = !{!1018, !1218, !1219}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1016, file: !580, line: 137, baseType: !1019, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !690, line: 58, baseType: !1020)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !580, line: 737, size: 768, elements: !1022)
!1022 = !{!1023, !1040, !1073, !1079, !1084, !1089, !1096, !1102, !1108, !1113, !1127, !1132, !1138, !1143, !1153, !1158, !1176, !1183, !1190, !1196, !1201, !1207, !1213}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1021, file: !580, line: 738, baseType: !1024, size: 256)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !580, line: 271, size: 256, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1024, file: !580, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1024, file: !580, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1024, file: !580, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1024, file: !580, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1024, file: !580, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1024, file: !580, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1024, file: !580, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1024, file: !580, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1024, file: !580, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1024, file: !580, line: 312, baseType: !7, size: 32, offset: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1024, file: !580, line: 316, baseType: !879, size: 32, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1024, file: !580, line: 319, baseType: !7, size: 32, offset: 96)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1024, file: !580, line: 323, baseType: !983, size: 64, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1024, file: !580, line: 327, baseType: !757, size: 64, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1021, file: !580, line: 739, baseType: !1041, size: 448)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !580, line: 350, size: 448, elements: !1042)
!1042 = !{!1043, !1071}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1041, file: !580, line: 353, baseType: !1044, size: 384)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !580, line: 333, size: 384, elements: !1045)
!1045 = !{!1046, !1047, !1054}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1044, file: !580, line: 336, baseType: !1024, size: 256)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1044, file: !580, line: 343, baseType: !1048, size: 64, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !667, line: 37, size: 128, elements: !1050)
!1050 = !{!1051, !1052}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1049, file: !667, line: 39, baseType: !1048, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1049, file: !667, line: 40, baseType: !1053, size: 64, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1044, file: !580, line: 344, baseType: !1055, size: 64, offset: 320)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !667, line: 45, size: 320, elements: !1057)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1056, file: !667, line: 47, baseType: !1055, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1056, file: !667, line: 48, baseType: !1060, size: 256, offset: 64)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !318, line: 1883, size: 256, elements: !1061)
!1061 = !{!1062, !1064, !1065, !1070}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1060, file: !318, line: 1884, baseType: !1063, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1060, file: !318, line: 1885, baseType: !1063, size: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1060, file: !318, line: 1891, baseType: !1066, size: 64, offset: 128)
!1066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1060, file: !318, line: 1891, size: 64, elements: !1067)
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1066, file: !318, line: 1891, baseType: !1019, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1066, file: !318, line: 1891, baseType: !757, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1060, file: !318, line: 1892, baseType: !1053, size: 64, offset: 192)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1041, file: !580, line: 359, baseType: !1072, size: 64, offset: 384)
!1072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 64, elements: !853)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1021, file: !580, line: 740, baseType: !1074, size: 512)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !580, line: 365, size: 512, elements: !1075)
!1075 = !{!1076, !1077, !1078}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1074, file: !580, line: 368, baseType: !1044, size: 384)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1074, file: !580, line: 373, baseType: !757, size: 64, offset: 384)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1074, file: !580, line: 374, baseType: !757, size: 64, offset: 448)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1021, file: !580, line: 741, baseType: !1080, size: 576)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !580, line: 380, size: 576, elements: !1081)
!1081 = !{!1082, !1083}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1080, file: !580, line: 383, baseType: !1074, size: 512)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1080, file: !580, line: 389, baseType: !1072, size: 64, offset: 512)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1021, file: !580, line: 742, baseType: !1085, size: 320)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !580, line: 395, size: 320, elements: !1086)
!1086 = !{!1087, !1088}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1085, file: !580, line: 397, baseType: !1024, size: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1085, file: !580, line: 400, baseType: !1009, size: 64, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1021, file: !580, line: 743, baseType: !1090, size: 448)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !580, line: 406, size: 448, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1090, file: !580, line: 408, baseType: !1024, size: 256)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1090, file: !580, line: 412, baseType: !757, size: 64, offset: 256)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1090, file: !580, line: 420, baseType: !757, size: 64, offset: 320)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1090, file: !580, line: 423, baseType: !1009, size: 64, offset: 384)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1021, file: !580, line: 744, baseType: !1097, size: 384)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !580, line: 429, size: 384, elements: !1098)
!1098 = !{!1099, !1100, !1101}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1097, file: !580, line: 431, baseType: !1024, size: 256)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1097, file: !580, line: 434, baseType: !757, size: 64, offset: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1097, file: !580, line: 437, baseType: !1009, size: 64, offset: 320)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1021, file: !580, line: 745, baseType: !1103, size: 384)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !580, line: 443, size: 384, elements: !1104)
!1104 = !{!1105, !1106, !1107}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1103, file: !580, line: 445, baseType: !1024, size: 256)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1103, file: !580, line: 449, baseType: !757, size: 64, offset: 256)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1103, file: !580, line: 453, baseType: !1009, size: 64, offset: 320)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1021, file: !580, line: 746, baseType: !1109, size: 320)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !580, line: 459, size: 320, elements: !1110)
!1110 = !{!1111, !1112}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1109, file: !580, line: 461, baseType: !1024, size: 256)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1109, file: !580, line: 464, baseType: !757, size: 64, offset: 256)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1021, file: !580, line: 747, baseType: !1114, size: 768)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !580, line: 469, size: 768, elements: !1115)
!1115 = !{!1116, !1117, !1118, !1119, !1120}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1114, file: !580, line: 471, baseType: !1024, size: 256)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1114, file: !580, line: 474, baseType: !7, size: 32, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1114, file: !580, line: 475, baseType: !7, size: 32, offset: 288)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1114, file: !580, line: 478, baseType: !757, size: 64, offset: 320)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1114, file: !580, line: 481, baseType: !1121, size: 384, offset: 384)
!1121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1122, size: 384, elements: !853)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !318, line: 1917, size: 384, elements: !1123)
!1123 = !{!1124, !1125, !1126}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1122, file: !318, line: 1920, baseType: !1060, size: 256)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1122, file: !318, line: 1921, baseType: !757, size: 64, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1122, file: !318, line: 1922, baseType: !879, size: 32, offset: 320)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1021, file: !580, line: 748, baseType: !1128, size: 320)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !580, line: 487, size: 320, elements: !1129)
!1129 = !{!1130, !1131}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1128, file: !580, line: 490, baseType: !1024, size: 256)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1128, file: !580, line: 494, baseType: !682, size: 32, offset: 256)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1021, file: !580, line: 749, baseType: !1133, size: 384)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !580, line: 500, size: 384, elements: !1134)
!1134 = !{!1135, !1136, !1137}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1133, file: !580, line: 502, baseType: !1024, size: 256)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1133, file: !580, line: 506, baseType: !1009, size: 64, offset: 256)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1133, file: !580, line: 510, baseType: !1009, size: 64, offset: 320)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1021, file: !580, line: 750, baseType: !1139, size: 320)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !580, line: 529, size: 320, elements: !1140)
!1140 = !{!1141, !1142}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1139, file: !580, line: 531, baseType: !1024, size: 256)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1139, file: !580, line: 540, baseType: !1009, size: 64, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1021, file: !580, line: 751, baseType: !1144, size: 704)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !580, line: 546, size: 704, elements: !1145)
!1145 = !{!1146, !1147, !1148, !1149, !1150, !1151, !1152}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1144, file: !580, line: 549, baseType: !1074, size: 512)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1144, file: !580, line: 553, baseType: !687, size: 64, offset: 512)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1144, file: !580, line: 557, baseType: !681, size: 8, offset: 576)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1144, file: !580, line: 558, baseType: !681, size: 8, offset: 584)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1144, file: !580, line: 559, baseType: !681, size: 8, offset: 592)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1144, file: !580, line: 560, baseType: !681, size: 8, offset: 600)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1144, file: !580, line: 566, baseType: !1072, size: 64, offset: 640)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1021, file: !580, line: 752, baseType: !1154, size: 384)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !580, line: 571, size: 384, elements: !1155)
!1155 = !{!1156, !1157}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1154, file: !580, line: 573, baseType: !1085, size: 320)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1154, file: !580, line: 577, baseType: !757, size: 64, offset: 320)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1021, file: !580, line: 753, baseType: !1159, size: 576)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !580, line: 600, size: 576, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1166, !1175}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1159, file: !580, line: 602, baseType: !1085, size: 320)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1159, file: !580, line: 605, baseType: !757, size: 64, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1159, file: !580, line: 609, baseType: !1164, size: 64, offset: 384)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1165, line: 46, baseType: !707)
!1165 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1159, file: !580, line: 612, baseType: !1167, size: 64, offset: 448)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !580, line: 581, size: 320, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1168, file: !580, line: 583, baseType: !317, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1168, file: !580, line: 586, baseType: !757, size: 64, offset: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1168, file: !580, line: 589, baseType: !757, size: 64, offset: 128)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1168, file: !580, line: 592, baseType: !757, size: 64, offset: 192)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1168, file: !580, line: 595, baseType: !757, size: 64, offset: 256)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1159, file: !580, line: 616, baseType: !1009, size: 64, offset: 512)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1021, file: !580, line: 754, baseType: !1177, size: 512)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !580, line: 622, size: 512, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1177, file: !580, line: 624, baseType: !1085, size: 320)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1177, file: !580, line: 628, baseType: !757, size: 64, offset: 320)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1177, file: !580, line: 632, baseType: !757, size: 64, offset: 384)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1177, file: !580, line: 636, baseType: !757, size: 64, offset: 448)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1021, file: !580, line: 755, baseType: !1184, size: 704)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !580, line: 642, size: 704, elements: !1185)
!1185 = !{!1186, !1187, !1188, !1189}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1184, file: !580, line: 644, baseType: !1177, size: 512)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1184, file: !580, line: 648, baseType: !757, size: 64, offset: 512)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1184, file: !580, line: 652, baseType: !757, size: 64, offset: 576)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1184, file: !580, line: 653, baseType: !757, size: 64, offset: 640)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1021, file: !580, line: 756, baseType: !1191, size: 448)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !580, line: 663, size: 448, elements: !1192)
!1192 = !{!1193, !1194, !1195}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1191, file: !580, line: 665, baseType: !1085, size: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1191, file: !580, line: 668, baseType: !757, size: 64, offset: 320)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1191, file: !580, line: 673, baseType: !757, size: 64, offset: 384)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1021, file: !580, line: 757, baseType: !1197, size: 384)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !580, line: 694, size: 384, elements: !1198)
!1198 = !{!1199, !1200}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1197, file: !580, line: 696, baseType: !1085, size: 320)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1197, file: !580, line: 699, baseType: !757, size: 64, offset: 320)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1021, file: !580, line: 758, baseType: !1202, size: 384)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !580, line: 681, size: 384, elements: !1203)
!1203 = !{!1204, !1205, !1206}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1202, file: !580, line: 683, baseType: !1024, size: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1202, file: !580, line: 686, baseType: !757, size: 64, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1202, file: !580, line: 689, baseType: !757, size: 64, offset: 320)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1021, file: !580, line: 759, baseType: !1208, size: 384)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !580, line: 707, size: 384, elements: !1209)
!1209 = !{!1210, !1211, !1212}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1208, file: !580, line: 709, baseType: !1024, size: 256)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1208, file: !580, line: 712, baseType: !757, size: 64, offset: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1208, file: !580, line: 712, baseType: !757, size: 64, offset: 320)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1021, file: !580, line: 760, baseType: !1214, size: 320)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !580, line: 718, size: 320, elements: !1215)
!1215 = !{!1216, !1217}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1214, file: !580, line: 720, baseType: !1024, size: 256)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1214, file: !580, line: 723, baseType: !757, size: 64, offset: 256)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1016, file: !580, line: 138, baseType: !1015, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1016, file: !580, line: 139, baseType: !1015, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1011, file: !580, line: 146, baseType: !1014, size: 64, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1011, file: !580, line: 152, baseType: !1009, size: 64, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1006, file: !526, line: 130, baseType: !929, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1001, file: !526, line: 134, baseType: !686, size: 64, offset: 192)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1001, file: !526, line: 137, baseType: !757, size: 64, offset: 256)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1001, file: !526, line: 138, baseType: !879, size: 32, offset: 320)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1001, file: !526, line: 142, baseType: !7, size: 32, offset: 352)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1001, file: !526, line: 144, baseType: !682, size: 32, offset: 384)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1001, file: !526, line: 145, baseType: !682, size: 32, offset: 416)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1001, file: !526, line: 146, baseType: !1230, size: 64, offset: 448)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !526, line: 119, baseType: !724)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !984, file: !526, line: 220, baseType: !987, size: 64, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !984, file: !526, line: 223, baseType: !686, size: 64, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !984, file: !526, line: 226, baseType: !1234, size: 64, offset: 192)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !513, line: 100, size: 1216, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241, !1246, !1247, !1248, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1279, !1287, !1288}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1235, file: !513, line: 102, baseType: !682, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1235, file: !513, line: 105, baseType: !7, size: 32, offset: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1235, file: !513, line: 108, baseType: !983, size: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1235, file: !513, line: 111, baseType: !983, size: 64, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1235, file: !513, line: 114, baseType: !1242, size: 64, offset: 192)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !513, line: 41, size: 64, elements: !1243)
!1243 = !{!1244, !1245}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1242, file: !513, line: 42, baseType: !512, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1242, file: !513, line: 43, baseType: !7, size: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1235, file: !513, line: 117, baseType: !7, size: 32, offset: 256)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1235, file: !513, line: 120, baseType: !7, size: 32, offset: 288)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1235, file: !513, line: 123, baseType: !1249, size: 64, offset: 320)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !513, line: 87, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !513, line: 87, size: 128, elements: !1252)
!1252 = !{!1253}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1251, file: !513, line: 87, baseType: !1254, size: 128)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !513, line: 85, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !513, line: 85, size: 128, elements: !1256)
!1256 = !{!1257, !1258, !1259}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1255, file: !513, line: 85, baseType: !7, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1255, file: !513, line: 85, baseType: !7, size: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1255, file: !513, line: 85, baseType: !1260, size: 64, offset: 64)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1261, size: 64, elements: !853)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !513, line: 84, baseType: !1234)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1235, file: !513, line: 126, baseType: !1234, size: 64, offset: 384)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1235, file: !513, line: 129, baseType: !1234, size: 64, offset: 448)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1235, file: !513, line: 132, baseType: !686, size: 64, offset: 512)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1235, file: !513, line: 139, baseType: !757, size: 64, offset: 576)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1235, file: !513, line: 143, baseType: !805, size: 128, offset: 640)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1235, file: !513, line: 146, baseType: !805, size: 128, offset: 768)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1235, file: !513, line: 148, baseType: !681, size: 8, offset: 896)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1235, file: !513, line: 149, baseType: !681, size: 8, offset: 904)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1235, file: !513, line: 153, baseType: !521, size: 32, offset: 928)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1235, file: !513, line: 156, baseType: !1272, size: 64, offset: 960)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !513, line: 48, size: 320, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1278}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1273, file: !513, line: 50, baseType: !1019, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1273, file: !513, line: 59, baseType: !805, size: 128, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1273, file: !513, line: 64, baseType: !681, size: 8, offset: 192)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1273, file: !513, line: 67, baseType: !1272, size: 64, offset: 256)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1235, file: !513, line: 159, baseType: !1280, size: 64, offset: 1024)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !513, line: 72, size: 256, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1281, file: !513, line: 74, baseType: !1000, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1281, file: !513, line: 77, baseType: !1280, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1281, file: !513, line: 78, baseType: !1280, size: 64, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1281, file: !513, line: 81, baseType: !1280, size: 64, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1235, file: !513, line: 162, baseType: !681, size: 8, offset: 1088)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1235, file: !513, line: 166, baseType: !757, size: 64, offset: 1152)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !984, file: !526, line: 229, baseType: !1290, size: 128, offset: 256)
!1290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1291, size: 128, elements: !708)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !526, line: 229, flags: DIFlagFwdDecl)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !984, file: !526, line: 232, baseType: !983, size: 64, offset: 384)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !984, file: !526, line: 233, baseType: !983, size: 64, offset: 448)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !984, file: !526, line: 238, baseType: !1296, size: 64, offset: 512)
!1296 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !526, line: 235, size: 64, elements: !1297)
!1297 = !{!1298, !1304}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1296, file: !526, line: 236, baseType: !1299, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !526, line: 273, size: 128, elements: !1301)
!1301 = !{!1302, !1303}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1300, file: !526, line: 275, baseType: !1009, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1300, file: !526, line: 278, baseType: !1009, size: 64, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1296, file: !526, line: 237, baseType: !1305, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !526, line: 259, size: 320, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1312}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1306, file: !526, line: 261, baseType: !929, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1306, file: !526, line: 262, baseType: !929, size: 64, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1306, file: !526, line: 266, baseType: !929, size: 64, offset: 128)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1306, file: !526, line: 267, baseType: !929, size: 64, offset: 192)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1306, file: !526, line: 270, baseType: !682, size: 32, offset: 256)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !984, file: !526, line: 241, baseType: !1230, size: 64, offset: 576)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !984, file: !526, line: 244, baseType: !682, size: 32, offset: 640)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !984, file: !526, line: 247, baseType: !682, size: 32, offset: 672)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !984, file: !526, line: 250, baseType: !682, size: 32, offset: 704)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !984, file: !526, line: 253, baseType: !682, size: 32, offset: 736)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !984, file: !526, line: 256, baseType: !682, size: 32, offset: 768)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !950, file: !932, line: 179, baseType: !1320, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !932, line: 150, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !932, line: 142, size: 320, elements: !1323)
!1323 = !{!1324, !1325, !1326, !1327, !1330, !1331}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1322, file: !932, line: 144, baseType: !757, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1322, file: !932, line: 145, baseType: !929, size: 64, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1322, file: !932, line: 146, baseType: !929, size: 64, offset: 128)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1322, file: !932, line: 147, baseType: !1328, size: 32, offset: 192)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1329, line: 31, baseType: !682)
!1329 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1322, file: !932, line: 148, baseType: !7, size: 32, offset: 224)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1322, file: !932, line: 149, baseType: !681, size: 8, offset: 256)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !950, file: !932, line: 180, baseType: !1333, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !932, line: 162, baseType: !1335)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !932, line: 159, size: 128, elements: !1336)
!1336 = !{!1337, !1338}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1335, file: !932, line: 160, baseType: !757, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1335, file: !932, line: 161, baseType: !724, size: 64, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !950, file: !932, line: 181, baseType: !1340, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !932, line: 181, flags: DIFlagFwdDecl)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !945, file: !932, line: 317, baseType: !1343, size: 64)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !724, size: 64, elements: !853)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !945, file: !932, line: 318, baseType: !1345, size: 320)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !932, line: 188, size: 320, elements: !1346)
!1346 = !{!1347, !1349, !1406}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1345, file: !932, line: 190, baseType: !1348, size: 192)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 192, elements: !828)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1345, file: !932, line: 193, baseType: !1350, size: 64, offset: 192)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !932, line: 206, size: 320, elements: !1352)
!1352 = !{!1353, !1391, !1392, !1393, !1405}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1351, file: !932, line: 208, baseType: !1354, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !690, line: 62, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1357, line: 538, size: 256, elements: !1358)
!1357 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1358 = !{!1359, !1363, !1369, !1382}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1356, file: !1357, line: 539, baseType: !1360, size: 32)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1357, line: 482, size: 32, elements: !1361)
!1361 = !{!1362}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1360, file: !1357, line: 484, baseType: !7, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1356, file: !1357, line: 540, baseType: !1364, size: 192)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1357, line: 488, size: 192, elements: !1365)
!1365 = !{!1366, !1367, !1368}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1364, file: !1357, line: 489, baseType: !1360, size: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1364, file: !1357, line: 492, baseType: !687, size: 64, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1364, file: !1357, line: 496, baseType: !757, size: 64, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1356, file: !1357, line: 541, baseType: !1370, size: 256)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1357, line: 504, size: 256, elements: !1371)
!1371 = !{!1372, !1373, !1380, !1381}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1370, file: !1357, line: 505, baseType: !1360, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1370, file: !1357, line: 509, baseType: !1374, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1357, line: 501, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{null, !1378}
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1370, file: !1357, line: 510, baseType: !1378, size: 64, offset: 128)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1370, file: !1357, line: 513, baseType: !1354, size: 64, offset: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1356, file: !1357, line: 542, baseType: !1383, size: 128)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1357, line: 530, size: 128, elements: !1384)
!1384 = !{!1385, !1386}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1383, file: !1357, line: 531, baseType: !1360, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1383, file: !1357, line: 534, baseType: !1387, size: 64, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1357, line: 525, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!681, !757, !687, !707, !707}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1351, file: !932, line: 211, baseType: !7, size: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1351, file: !932, line: 214, baseType: !724, size: 64, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1351, file: !932, line: 224, baseType: !1394, size: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !932, line: 202, baseType: !1396)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !932, line: 202, size: 128, elements: !1397)
!1397 = !{!1398}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1396, file: !932, line: 202, baseType: !1399, size: 128)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !932, line: 200, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !932, line: 200, size: 128, elements: !1401)
!1401 = !{!1402, !1403, !1404}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1400, file: !932, line: 200, baseType: !7, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1400, file: !932, line: 200, baseType: !7, size: 32, offset: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1400, file: !932, line: 200, baseType: !963, size: 64, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1351, file: !932, line: 234, baseType: !1394, size: 64, offset: 256)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1345, file: !932, line: 197, baseType: !724, size: 64, offset: 256)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !945, file: !932, line: 319, baseType: !817, size: 256)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !945, file: !932, line: 320, baseType: !836, size: 192)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !759, file: !318, line: 3384, baseType: !1410, size: 1472)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !318, line: 3114, size: 1472, elements: !1411)
!1411 = !{!1412, !1433, !1434, !1435, !1436}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1410, file: !318, line: 3115, baseType: !1413, size: 1216)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !318, line: 2984, size: 1216, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1413, file: !318, line: 2985, baseType: !925, size: 960)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1413, file: !318, line: 2986, baseType: !757, size: 64, offset: 960)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1413, file: !318, line: 2987, baseType: !757, size: 64, offset: 1024)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1413, file: !318, line: 2988, baseType: !757, size: 64, offset: 1088)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1413, file: !318, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1413, file: !318, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1413, file: !318, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1413, file: !318, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1413, file: !318, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1413, file: !318, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1413, file: !318, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1413, file: !318, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1413, file: !318, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1413, file: !318, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1413, file: !318, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1413, file: !318, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1413, file: !318, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1413, file: !318, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1410, file: !318, line: 3117, baseType: !757, size: 64, offset: 1216)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1410, file: !318, line: 3119, baseType: !757, size: 64, offset: 1280)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1410, file: !318, line: 3121, baseType: !757, size: 64, offset: 1344)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1410, file: !318, line: 3123, baseType: !757, size: 64, offset: 1408)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !759, file: !318, line: 3385, baseType: !1438, size: 1088)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !318, line: 2874, size: 1088, elements: !1439)
!1439 = !{!1440, !1441, !1442}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1438, file: !318, line: 2875, baseType: !925, size: 960)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1438, file: !318, line: 2876, baseType: !929, size: 64, offset: 960)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1438, file: !318, line: 2877, baseType: !1443, size: 64, offset: 1024)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1445, line: 172, size: 128, elements: !1446)
!1445 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1446 = !{!1447, !1448, !1449, !1450, !1451, !1452, !1453}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1444, file: !1445, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1444, file: !1445, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1444, file: !1445, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1444, file: !1445, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1444, file: !1445, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1444, file: !1445, line: 195, baseType: !7, size: 32, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1444, file: !1445, line: 199, baseType: !757, size: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !759, file: !318, line: 3386, baseType: !1413, size: 1216)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !759, file: !318, line: 3387, baseType: !1456, size: 1280)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !318, line: 3093, size: 1280, elements: !1457)
!1457 = !{!1458, !1459}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1456, file: !318, line: 3094, baseType: !1413, size: 1216)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1456, file: !318, line: 3095, baseType: !1443, size: 64, offset: 1216)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !759, file: !318, line: 3388, baseType: !1461, size: 1216)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !318, line: 2824, size: 1216, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1467, !1468}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1461, file: !318, line: 2825, baseType: !887, size: 896)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1461, file: !318, line: 2827, baseType: !757, size: 64, offset: 896)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1461, file: !318, line: 2828, baseType: !757, size: 64, offset: 960)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1461, file: !318, line: 2829, baseType: !757, size: 64, offset: 1024)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1461, file: !318, line: 2830, baseType: !757, size: 64, offset: 1088)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1461, file: !318, line: 2831, baseType: !757, size: 64, offset: 1152)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !759, file: !318, line: 3389, baseType: !1470, size: 1024)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !318, line: 2850, size: 1024, elements: !1471)
!1471 = !{!1472, !1473, !1474}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1470, file: !318, line: 2851, baseType: !925, size: 960)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1470, file: !318, line: 2852, baseType: !682, size: 32, offset: 960)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1470, file: !318, line: 2853, baseType: !682, size: 32, offset: 992)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !759, file: !318, line: 3390, baseType: !1476, size: 1024)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !318, line: 2857, size: 1024, elements: !1477)
!1477 = !{!1478, !1479}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1476, file: !318, line: 2858, baseType: !925, size: 960)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1476, file: !318, line: 2859, baseType: !1443, size: 64, offset: 960)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !759, file: !318, line: 3391, baseType: !1481, size: 960)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !318, line: 2862, size: 960, elements: !1482)
!1482 = !{!1483}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1481, file: !318, line: 2863, baseType: !925, size: 960)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !759, file: !318, line: 3392, baseType: !1485, size: 1472)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !318, line: 3304, size: 1472, elements: !1486)
!1486 = !{!1487}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1485, file: !318, line: 3305, baseType: !1410, size: 1472)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !759, file: !318, line: 3393, baseType: !1489, size: 1792)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !318, line: 3248, size: 1792, elements: !1490)
!1490 = !{!1491, !1492, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1489, file: !318, line: 3249, baseType: !1410, size: 1472)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1489, file: !318, line: 3251, baseType: !1493, size: 64, offset: 1472)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1495, line: 463, size: 1152, elements: !1496)
!1495 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1496 = !{!1497, !1500, !1531, !1532, !1644, !1652, !1653, !1654, !1655, !1656, !1657, !1681, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1494, file: !1495, line: 464, baseType: !1498, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1495, line: 464, flags: DIFlagFwdDecl)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1494, file: !1495, line: 467, baseType: !1501, size: 64, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !526, line: 374, size: 640, elements: !1503)
!1503 = !{!1504, !1506, !1507, !1520, !1521, !1522, !1523, !1524, !1525, !1527, !1529, !1530}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1502, file: !526, line: 377, baseType: !1505, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !690, line: 111, baseType: !983)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1502, file: !526, line: 378, baseType: !1505, size: 64, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1502, file: !526, line: 381, baseType: !1508, size: 64, offset: 128)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !526, line: 282, baseType: !1510)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !526, line: 282, size: 128, elements: !1511)
!1511 = !{!1512}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1510, file: !526, line: 282, baseType: !1513, size: 128)
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !526, line: 281, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !526, line: 281, size: 128, elements: !1515)
!1515 = !{!1516, !1517, !1518}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1514, file: !526, line: 281, baseType: !7, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1514, file: !526, line: 281, baseType: !7, size: 32, offset: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1514, file: !526, line: 281, baseType: !1519, size: 64, offset: 64)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1505, size: 64, elements: !853)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1502, file: !526, line: 384, baseType: !682, size: 32, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1502, file: !526, line: 387, baseType: !682, size: 32, offset: 224)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1502, file: !526, line: 390, baseType: !682, size: 32, offset: 256)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1502, file: !526, line: 394, baseType: !1508, size: 64, offset: 320)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1502, file: !526, line: 396, baseType: !525, size: 32, offset: 384)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1502, file: !526, line: 399, baseType: !1526, size: 64, offset: 416)
!1526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 64, elements: !708)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1502, file: !526, line: 402, baseType: !1528, size: 64, offset: 480)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !708)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1502, file: !526, line: 406, baseType: !682, size: 32, offset: 544)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1502, file: !526, line: 409, baseType: !682, size: 32, offset: 576)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1494, file: !1495, line: 470, baseType: !1010, size: 64, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1494, file: !1495, line: 473, baseType: !1533, size: 64, offset: 192)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1445, line: 39, size: 1152, elements: !1535)
!1535 = !{!1536, !1584, !1597, !1609, !1610, !1621, !1622, !1626, !1627, !1628, !1629, !1630}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1534, file: !1445, line: 41, baseType: !1537, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1538, line: 144, baseType: !1539)
!1538 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1538, line: 100, size: 896, elements: !1541)
!1541 = !{!1542, !1548, !1553, !1558, !1560, !1561, !1562, !1563, !1564, !1565, !1570, !1572, !1573, !1578, !1583}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1540, file: !1538, line: 102, baseType: !1543, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1538, line: 52, baseType: !1544)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!1547, !1378}
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1538, line: 47, baseType: !7)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1540, file: !1538, line: 105, baseType: !1549, size: 64, offset: 64)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1538, line: 59, baseType: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!682, !1378, !1378}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1540, file: !1538, line: 108, baseType: !1554, size: 64, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1538, line: 63, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !686}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1540, file: !1538, line: 111, baseType: !1559, size: 64, offset: 192)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1540, file: !1538, line: 114, baseType: !1164, size: 64, offset: 256)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1540, file: !1538, line: 117, baseType: !1164, size: 64, offset: 320)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1540, file: !1538, line: 120, baseType: !1164, size: 64, offset: 384)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1540, file: !1538, line: 124, baseType: !7, size: 32, offset: 448)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1540, file: !1538, line: 128, baseType: !7, size: 32, offset: 480)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1540, file: !1538, line: 131, baseType: !1566, size: 64, offset: 512)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1538, line: 75, baseType: !1567)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!686, !1164, !1164}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1540, file: !1538, line: 132, baseType: !1571, size: 64, offset: 576)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1538, line: 78, baseType: !1555)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1540, file: !1538, line: 135, baseType: !686, size: 64, offset: 640)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1540, file: !1538, line: 136, baseType: !1574, size: 64, offset: 704)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1538, line: 82, baseType: !1575)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!686, !686, !1164, !1164}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1540, file: !1538, line: 137, baseType: !1579, size: 64, offset: 768)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1538, line: 83, baseType: !1580)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{null, !686, !686}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1540, file: !1538, line: 141, baseType: !7, size: 32, offset: 832)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1534, file: !1445, line: 48, baseType: !1585, size: 64, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !580, line: 35, baseType: !1587)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !580, line: 35, size: 128, elements: !1588)
!1588 = !{!1589}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1587, file: !580, line: 35, baseType: !1590, size: 128)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !580, line: 33, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !580, line: 33, size: 128, elements: !1592)
!1592 = !{!1593, !1594, !1595}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1591, file: !580, line: 33, baseType: !7, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1591, file: !580, line: 33, baseType: !7, size: 32, offset: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1591, file: !580, line: 33, baseType: !1596, size: 64, offset: 64)
!1596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 64, elements: !853)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1534, file: !1445, line: 51, baseType: !1598, size: 64, offset: 128)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !318, line: 183, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !318, line: 183, size: 128, elements: !1601)
!1601 = !{!1602}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1600, file: !318, line: 183, baseType: !1603, size: 128)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !318, line: 182, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !318, line: 182, size: 128, elements: !1605)
!1605 = !{!1606, !1607, !1608}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1604, file: !318, line: 182, baseType: !7, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1604, file: !318, line: 182, baseType: !7, size: 32, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1604, file: !318, line: 182, baseType: !1072, size: 64, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1534, file: !1445, line: 54, baseType: !757, size: 64, offset: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1534, file: !1445, line: 57, baseType: !1611, size: 128, offset: 256)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1612, line: 31, size: 128, elements: !1613)
!1612 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1613 = !{!1614, !1615, !1616, !1617, !1618, !1619, !1620}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1611, file: !1612, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1611, file: !1612, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1611, file: !1612, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1611, file: !1612, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1611, file: !1612, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1611, file: !1612, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1611, file: !1612, line: 56, baseType: !689, size: 64, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1534, file: !1445, line: 60, baseType: !1611, size: 128, offset: 384)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1534, file: !1445, line: 64, baseType: !1623, size: 64, offset: 512)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1625, line: 33, flags: DIFlagFwdDecl)
!1625 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1534, file: !1445, line: 67, baseType: !757, size: 64, offset: 576)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1534, file: !1445, line: 73, baseType: !1537, size: 64, offset: 640)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1534, file: !1445, line: 77, baseType: !689, size: 64, offset: 704)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1534, file: !1445, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1534, file: !1445, line: 82, baseType: !1631, size: 320, offset: 832)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !667, line: 62, size: 320, elements: !1632)
!1632 = !{!1633, !1639, !1640, !1641, !1642, !1643}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1631, file: !667, line: 63, baseType: !1634, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !667, line: 56, size: 128, elements: !1636)
!1636 = !{!1637, !1638}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1635, file: !667, line: 57, baseType: !1634, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1635, file: !667, line: 58, baseType: !852, size: 8, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1631, file: !667, line: 64, baseType: !7, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1631, file: !667, line: 66, baseType: !7, size: 32, offset: 96)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1631, file: !667, line: 68, baseType: !681, size: 8, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1631, file: !667, line: 70, baseType: !1048, size: 64, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1631, file: !667, line: 71, baseType: !1055, size: 64, offset: 256)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1494, file: !1495, line: 476, baseType: !1645, size: 64, offset: 256)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !513, line: 187, size: 256, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1651}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1646, file: !513, line: 189, baseType: !682, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1646, file: !513, line: 192, baseType: !1249, size: 64, offset: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1646, file: !513, line: 197, baseType: !1537, size: 64, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1646, file: !513, line: 200, baseType: !1234, size: 64, offset: 192)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1494, file: !1495, line: 479, baseType: !1537, size: 64, offset: 320)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1494, file: !1495, line: 484, baseType: !757, size: 64, offset: 384)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1494, file: !1495, line: 488, baseType: !757, size: 64, offset: 448)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1494, file: !1495, line: 493, baseType: !757, size: 64, offset: 512)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1494, file: !1495, line: 496, baseType: !757, size: 64, offset: 576)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1494, file: !1495, line: 501, baseType: !1658, size: 64, offset: 640)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !537, line: 2355, size: 576, elements: !1660)
!1660 = !{!1661, !1664, !1665, !1666, !1667, !1669, !1670, !1675, !1676, !1677, !1678, !1679, !1680}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1659, file: !537, line: 2356, baseType: !1662, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !537, line: 2356, flags: DIFlagFwdDecl)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1659, file: !537, line: 2357, baseType: !687, size: 64, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1659, file: !537, line: 2358, baseType: !682, size: 32, offset: 128)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1659, file: !537, line: 2359, baseType: !682, size: 32, offset: 160)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1659, file: !537, line: 2360, baseType: !1668, size: 128, offset: 192)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !682, size: 128, elements: !733)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1659, file: !537, line: 2364, baseType: !682, size: 32, offset: 320)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1659, file: !537, line: 2367, baseType: !1671, size: 128, offset: 384)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !537, line: 2349, size: 128, elements: !1672)
!1672 = !{!1673, !1674}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1671, file: !537, line: 2351, baseType: !929, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1671, file: !537, line: 2352, baseType: !724, size: 64, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1659, file: !537, line: 2371, baseType: !536, size: 32, offset: 512)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1659, file: !537, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1659, file: !537, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1659, file: !537, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1659, file: !537, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1659, file: !537, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1494, file: !1495, line: 504, baseType: !1682, size: 64, offset: 704)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64)
!1683 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1495, line: 504, flags: DIFlagFwdDecl)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1494, file: !1495, line: 507, baseType: !1537, size: 64, offset: 768)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1494, file: !1495, line: 510, baseType: !682, size: 32, offset: 832)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1494, file: !1495, line: 513, baseType: !682, size: 32, offset: 864)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1494, file: !1495, line: 516, baseType: !879, size: 32, offset: 896)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1494, file: !1495, line: 519, baseType: !879, size: 32, offset: 928)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1494, file: !1495, line: 522, baseType: !7, size: 32, offset: 960)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1494, file: !1495, line: 523, baseType: !7, size: 32, offset: 992)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1494, file: !1495, line: 528, baseType: !687, size: 64, offset: 1024)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1494, file: !1495, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1494, file: !1495, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1494, file: !1495, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1494, file: !1495, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1494, file: !1495, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1494, file: !1495, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1494, file: !1495, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1494, file: !1495, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1494, file: !1495, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1494, file: !1495, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1494, file: !1495, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1494, file: !1495, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1494, file: !1495, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1494, file: !1495, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1494, file: !1495, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1494, file: !1495, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1489, file: !318, line: 3254, baseType: !757, size: 64, offset: 1536)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1489, file: !318, line: 3257, baseType: !757, size: 64, offset: 1600)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1489, file: !318, line: 3258, baseType: !757, size: 64, offset: 1664)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1489, file: !318, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1489, file: !318, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1489, file: !318, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1489, file: !318, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1489, file: !318, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1489, file: !318, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1489, file: !318, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1489, file: !318, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1489, file: !318, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1489, file: !318, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1489, file: !318, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1489, file: !318, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1489, file: !318, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1489, file: !318, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1489, file: !318, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1489, file: !318, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1489, file: !318, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1489, file: !318, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !759, file: !318, line: 3394, baseType: !1730, size: 1344)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !318, line: 2279, size: 1344, elements: !1731)
!1731 = !{!1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1730, file: !318, line: 2280, baseType: !795, size: 192)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1730, file: !318, line: 2281, baseType: !757, size: 64, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1730, file: !318, line: 2282, baseType: !757, size: 64, offset: 256)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1730, file: !318, line: 2283, baseType: !757, size: 64, offset: 320)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1730, file: !318, line: 2284, baseType: !757, size: 64, offset: 384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1730, file: !318, line: 2285, baseType: !7, size: 32, offset: 448)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1730, file: !318, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1730, file: !318, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1730, file: !318, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1730, file: !318, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1730, file: !318, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1730, file: !318, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1730, file: !318, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1730, file: !318, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1730, file: !318, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1730, file: !318, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1730, file: !318, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1730, file: !318, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1730, file: !318, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1730, file: !318, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1730, file: !318, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1730, file: !318, line: 2305, baseType: !7, size: 32, offset: 512)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1730, file: !318, line: 2306, baseType: !1328, size: 32, offset: 544)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1730, file: !318, line: 2307, baseType: !757, size: 64, offset: 576)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1730, file: !318, line: 2308, baseType: !757, size: 64, offset: 640)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1730, file: !318, line: 2314, baseType: !1758, size: 64, offset: 704)
!1758 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !318, line: 2309, size: 64, elements: !1759)
!1759 = !{!1760, !1761, !1762}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1758, file: !318, line: 2310, baseType: !682, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1758, file: !318, line: 2311, baseType: !687, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1758, file: !318, line: 2312, baseType: !1763, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!1764 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !318, line: 2277, flags: DIFlagFwdDecl)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1730, file: !318, line: 2315, baseType: !757, size: 64, offset: 768)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1730, file: !318, line: 2316, baseType: !757, size: 64, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1730, file: !318, line: 2317, baseType: !757, size: 64, offset: 896)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1730, file: !318, line: 2318, baseType: !757, size: 64, offset: 960)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1730, file: !318, line: 2319, baseType: !757, size: 64, offset: 1024)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1730, file: !318, line: 2320, baseType: !757, size: 64, offset: 1088)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1730, file: !318, line: 2321, baseType: !757, size: 64, offset: 1152)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1730, file: !318, line: 2322, baseType: !757, size: 64, offset: 1216)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1730, file: !318, line: 2324, baseType: !1774, size: 64, offset: 1280)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !318, line: 2324, flags: DIFlagFwdDecl)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !759, file: !318, line: 3395, baseType: !1777, size: 320)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !318, line: 1469, size: 320, elements: !1778)
!1778 = !{!1779, !1780, !1781}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1777, file: !318, line: 1470, baseType: !795, size: 192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1777, file: !318, line: 1471, baseType: !757, size: 64, offset: 192)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1777, file: !318, line: 1472, baseType: !757, size: 64, offset: 256)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !759, file: !318, line: 3396, baseType: !1783, size: 320)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !318, line: 1482, size: 320, elements: !1784)
!1784 = !{!1785, !1786, !1787}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1783, file: !318, line: 1483, baseType: !795, size: 192)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1783, file: !318, line: 1484, baseType: !682, size: 32, offset: 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1783, file: !318, line: 1485, baseType: !1072, size: 64, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !759, file: !318, line: 3397, baseType: !1789, size: 384)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !318, line: 1829, size: 384, elements: !1790)
!1790 = !{!1791, !1792, !1793, !1794}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1789, file: !318, line: 1830, baseType: !795, size: 192)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1789, file: !318, line: 1831, baseType: !879, size: 32, offset: 192)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1789, file: !318, line: 1832, baseType: !757, size: 64, offset: 256)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1789, file: !318, line: 1835, baseType: !1072, size: 64, offset: 320)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !759, file: !318, line: 3398, baseType: !1796, size: 704)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !318, line: 1898, size: 704, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801, !1802, !1807}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1796, file: !318, line: 1899, baseType: !795, size: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1796, file: !318, line: 1902, baseType: !757, size: 64, offset: 192)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1796, file: !318, line: 1905, baseType: !1019, size: 64, offset: 256)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1796, file: !318, line: 1908, baseType: !7, size: 32, offset: 320)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1796, file: !318, line: 1911, baseType: !1803, size: 64, offset: 384)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1445, line: 117, size: 128, elements: !1805)
!1805 = !{!1806}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1804, file: !1445, line: 120, baseType: !1611, size: 128)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1796, file: !318, line: 1914, baseType: !1060, size: 256, offset: 448)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !759, file: !318, line: 3399, baseType: !1809, size: 704)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !318, line: 2008, size: 704, elements: !1810)
!1810 = !{!1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1809, file: !318, line: 2009, baseType: !795, size: 192)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1809, file: !318, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1809, file: !318, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1809, file: !318, line: 2014, baseType: !879, size: 32, offset: 224)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1809, file: !318, line: 2016, baseType: !757, size: 64, offset: 256)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1809, file: !318, line: 2017, baseType: !1598, size: 64, offset: 320)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1809, file: !318, line: 2019, baseType: !757, size: 64, offset: 384)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1809, file: !318, line: 2020, baseType: !757, size: 64, offset: 448)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1809, file: !318, line: 2021, baseType: !757, size: 64, offset: 512)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1809, file: !318, line: 2022, baseType: !757, size: 64, offset: 576)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1809, file: !318, line: 2023, baseType: !757, size: 64, offset: 640)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !759, file: !318, line: 3400, baseType: !1823, size: 832)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !318, line: 2430, size: 832, elements: !1824)
!1824 = !{!1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1823, file: !318, line: 2431, baseType: !795, size: 192)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1823, file: !318, line: 2433, baseType: !757, size: 64, offset: 192)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1823, file: !318, line: 2434, baseType: !757, size: 64, offset: 256)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1823, file: !318, line: 2435, baseType: !757, size: 64, offset: 320)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1823, file: !318, line: 2436, baseType: !757, size: 64, offset: 384)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1823, file: !318, line: 2437, baseType: !1598, size: 64, offset: 448)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1823, file: !318, line: 2438, baseType: !757, size: 64, offset: 512)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1823, file: !318, line: 2440, baseType: !757, size: 64, offset: 576)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1823, file: !318, line: 2441, baseType: !757, size: 64, offset: 640)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1823, file: !318, line: 2443, baseType: !1835, size: 128, offset: 704)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !318, line: 182, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !318, line: 182, size: 128, elements: !1837)
!1837 = !{!1838}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1836, file: !318, line: 182, baseType: !1603, size: 128)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !759, file: !318, line: 3401, baseType: !1840, size: 320)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !318, line: 3327, size: 320, elements: !1841)
!1841 = !{!1842, !1843, !1850}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1840, file: !318, line: 3329, baseType: !795, size: 192)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1840, file: !318, line: 3330, baseType: !1844, size: 64, offset: 192)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !318, line: 3320, size: 192, elements: !1846)
!1846 = !{!1847, !1848, !1849}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1845, file: !318, line: 3322, baseType: !1844, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1845, file: !318, line: 3323, baseType: !1844, size: 64, offset: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1845, file: !318, line: 3324, baseType: !757, size: 64, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1840, file: !318, line: 3331, baseType: !1844, size: 64, offset: 256)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !759, file: !318, line: 3402, baseType: !1852, size: 256)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !318, line: 1540, size: 256, elements: !1853)
!1853 = !{!1854, !1855}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1852, file: !318, line: 1541, baseType: !795, size: 192)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1852, file: !318, line: 1542, baseType: !1856, size: 64, offset: 192)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !318, line: 1538, baseType: !1858)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !318, line: 1538, size: 192, elements: !1859)
!1859 = !{!1860}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1858, file: !318, line: 1538, baseType: !1861, size: 192)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !318, line: 1537, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !318, line: 1537, size: 192, elements: !1863)
!1863 = !{!1864, !1865, !1866}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1862, file: !318, line: 1537, baseType: !7, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1862, file: !318, line: 1537, baseType: !7, size: 32, offset: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1862, file: !318, line: 1537, baseType: !1867, size: 128, offset: 64)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1868, size: 128, elements: !853)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !318, line: 1535, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !318, line: 1532, size: 128, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1869, file: !318, line: 1533, baseType: !757, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1869, file: !318, line: 1534, baseType: !757, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !759, file: !318, line: 3403, baseType: !1874, size: 512)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !318, line: 1938, size: 512, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879, !1885, !1886, !1887}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1874, file: !318, line: 1939, baseType: !795, size: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1874, file: !318, line: 1940, baseType: !879, size: 32, offset: 192)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1874, file: !318, line: 1941, baseType: !541, size: 32, offset: 224)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1874, file: !318, line: 1946, baseType: !1880, size: 32, offset: 256)
!1880 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !318, line: 1942, size: 32, elements: !1881)
!1881 = !{!1882, !1883, !1884}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1880, file: !318, line: 1943, baseType: !559, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1880, file: !318, line: 1944, baseType: !566, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1880, file: !318, line: 1945, baseType: !317, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1874, file: !318, line: 1950, baseType: !1009, size: 64, offset: 320)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1874, file: !318, line: 1951, baseType: !1009, size: 64, offset: 384)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1874, file: !318, line: 1953, baseType: !1072, size: 64, offset: 448)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !759, file: !318, line: 3404, baseType: !1889, size: 1664)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !318, line: 3337, size: 1664, elements: !1890)
!1890 = !{!1891, !1892}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1889, file: !318, line: 3338, baseType: !795, size: 192)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1889, file: !318, line: 3341, baseType: !1893, size: 1472, offset: 192)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1894, line: 410, size: 1472, elements: !1895)
!1894 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1895 = !{!1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1893, file: !1894, line: 412, baseType: !682, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1893, file: !1894, line: 413, baseType: !682, size: 32, offset: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1893, file: !1894, line: 414, baseType: !682, size: 32, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1893, file: !1894, line: 415, baseType: !682, size: 32, offset: 96)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1893, file: !1894, line: 416, baseType: !682, size: 32, offset: 128)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1893, file: !1894, line: 417, baseType: !682, size: 32, offset: 160)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1893, file: !1894, line: 418, baseType: !681, size: 8, offset: 192)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1893, file: !1894, line: 419, baseType: !681, size: 8, offset: 200)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1893, file: !1894, line: 420, baseType: !1905, size: 8, offset: 208)
!1905 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1893, file: !1894, line: 421, baseType: !1905, size: 8, offset: 216)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1893, file: !1894, line: 422, baseType: !1905, size: 8, offset: 224)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1893, file: !1894, line: 423, baseType: !1905, size: 8, offset: 232)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1893, file: !1894, line: 424, baseType: !1905, size: 8, offset: 240)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1893, file: !1894, line: 425, baseType: !1905, size: 8, offset: 248)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1893, file: !1894, line: 426, baseType: !1905, size: 8, offset: 256)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1893, file: !1894, line: 427, baseType: !1905, size: 8, offset: 264)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1893, file: !1894, line: 428, baseType: !1905, size: 8, offset: 272)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1893, file: !1894, line: 429, baseType: !1905, size: 8, offset: 280)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1893, file: !1894, line: 430, baseType: !1905, size: 8, offset: 288)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1893, file: !1894, line: 431, baseType: !1905, size: 8, offset: 296)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1893, file: !1894, line: 432, baseType: !1905, size: 8, offset: 304)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1893, file: !1894, line: 433, baseType: !1905, size: 8, offset: 312)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1893, file: !1894, line: 434, baseType: !1905, size: 8, offset: 320)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1893, file: !1894, line: 435, baseType: !1905, size: 8, offset: 328)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1893, file: !1894, line: 436, baseType: !1905, size: 8, offset: 336)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1893, file: !1894, line: 437, baseType: !1905, size: 8, offset: 344)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1893, file: !1894, line: 438, baseType: !1905, size: 8, offset: 352)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1893, file: !1894, line: 439, baseType: !1905, size: 8, offset: 360)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1893, file: !1894, line: 440, baseType: !1905, size: 8, offset: 368)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1893, file: !1894, line: 441, baseType: !1905, size: 8, offset: 376)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1893, file: !1894, line: 442, baseType: !1905, size: 8, offset: 384)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1893, file: !1894, line: 443, baseType: !1905, size: 8, offset: 392)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1893, file: !1894, line: 444, baseType: !1905, size: 8, offset: 400)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1893, file: !1894, line: 445, baseType: !1905, size: 8, offset: 408)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1893, file: !1894, line: 446, baseType: !1905, size: 8, offset: 416)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1893, file: !1894, line: 447, baseType: !1905, size: 8, offset: 424)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1893, file: !1894, line: 448, baseType: !1905, size: 8, offset: 432)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1893, file: !1894, line: 449, baseType: !1905, size: 8, offset: 440)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1893, file: !1894, line: 450, baseType: !1905, size: 8, offset: 448)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1893, file: !1894, line: 451, baseType: !1905, size: 8, offset: 456)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1893, file: !1894, line: 452, baseType: !1905, size: 8, offset: 464)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1893, file: !1894, line: 453, baseType: !1905, size: 8, offset: 472)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1893, file: !1894, line: 454, baseType: !1905, size: 8, offset: 480)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1893, file: !1894, line: 455, baseType: !1905, size: 8, offset: 488)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1893, file: !1894, line: 456, baseType: !1905, size: 8, offset: 496)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1893, file: !1894, line: 457, baseType: !1905, size: 8, offset: 504)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1893, file: !1894, line: 458, baseType: !1905, size: 8, offset: 512)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1893, file: !1894, line: 459, baseType: !1905, size: 8, offset: 520)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1893, file: !1894, line: 460, baseType: !1905, size: 8, offset: 528)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1893, file: !1894, line: 461, baseType: !1905, size: 8, offset: 536)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1893, file: !1894, line: 462, baseType: !1905, size: 8, offset: 544)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1893, file: !1894, line: 463, baseType: !1905, size: 8, offset: 552)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1893, file: !1894, line: 464, baseType: !1905, size: 8, offset: 560)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1893, file: !1894, line: 465, baseType: !1905, size: 8, offset: 568)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1893, file: !1894, line: 466, baseType: !1905, size: 8, offset: 576)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1893, file: !1894, line: 467, baseType: !1905, size: 8, offset: 584)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1893, file: !1894, line: 468, baseType: !1905, size: 8, offset: 592)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1893, file: !1894, line: 469, baseType: !1905, size: 8, offset: 600)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1893, file: !1894, line: 470, baseType: !1905, size: 8, offset: 608)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1893, file: !1894, line: 471, baseType: !1905, size: 8, offset: 616)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1893, file: !1894, line: 472, baseType: !1905, size: 8, offset: 624)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1893, file: !1894, line: 473, baseType: !1905, size: 8, offset: 632)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1893, file: !1894, line: 474, baseType: !1905, size: 8, offset: 640)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1893, file: !1894, line: 475, baseType: !1905, size: 8, offset: 648)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1893, file: !1894, line: 476, baseType: !1905, size: 8, offset: 656)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1893, file: !1894, line: 477, baseType: !1905, size: 8, offset: 664)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1893, file: !1894, line: 478, baseType: !1905, size: 8, offset: 672)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1893, file: !1894, line: 479, baseType: !1905, size: 8, offset: 680)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1893, file: !1894, line: 480, baseType: !1905, size: 8, offset: 688)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1893, file: !1894, line: 481, baseType: !1905, size: 8, offset: 696)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1893, file: !1894, line: 482, baseType: !1905, size: 8, offset: 704)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1893, file: !1894, line: 483, baseType: !1905, size: 8, offset: 712)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1893, file: !1894, line: 484, baseType: !1905, size: 8, offset: 720)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1893, file: !1894, line: 485, baseType: !1905, size: 8, offset: 728)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1893, file: !1894, line: 486, baseType: !1905, size: 8, offset: 736)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1893, file: !1894, line: 487, baseType: !1905, size: 8, offset: 744)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1893, file: !1894, line: 488, baseType: !1905, size: 8, offset: 752)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1893, file: !1894, line: 489, baseType: !1905, size: 8, offset: 760)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1893, file: !1894, line: 490, baseType: !1905, size: 8, offset: 768)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1893, file: !1894, line: 491, baseType: !1905, size: 8, offset: 776)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1893, file: !1894, line: 492, baseType: !1905, size: 8, offset: 784)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1893, file: !1894, line: 493, baseType: !1905, size: 8, offset: 792)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1893, file: !1894, line: 494, baseType: !1905, size: 8, offset: 800)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1893, file: !1894, line: 495, baseType: !1905, size: 8, offset: 808)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1893, file: !1894, line: 496, baseType: !1905, size: 8, offset: 816)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1893, file: !1894, line: 497, baseType: !1905, size: 8, offset: 824)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1893, file: !1894, line: 498, baseType: !1905, size: 8, offset: 832)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1893, file: !1894, line: 499, baseType: !1905, size: 8, offset: 840)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1893, file: !1894, line: 500, baseType: !1905, size: 8, offset: 848)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1893, file: !1894, line: 501, baseType: !1905, size: 8, offset: 856)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1893, file: !1894, line: 502, baseType: !1905, size: 8, offset: 864)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1893, file: !1894, line: 503, baseType: !1905, size: 8, offset: 872)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1893, file: !1894, line: 504, baseType: !1905, size: 8, offset: 880)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1893, file: !1894, line: 505, baseType: !1905, size: 8, offset: 888)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1893, file: !1894, line: 506, baseType: !1905, size: 8, offset: 896)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1893, file: !1894, line: 507, baseType: !1905, size: 8, offset: 904)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1893, file: !1894, line: 508, baseType: !1905, size: 8, offset: 912)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1893, file: !1894, line: 509, baseType: !1905, size: 8, offset: 920)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1893, file: !1894, line: 510, baseType: !1905, size: 8, offset: 928)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1893, file: !1894, line: 511, baseType: !1905, size: 8, offset: 936)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1893, file: !1894, line: 512, baseType: !1905, size: 8, offset: 944)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1893, file: !1894, line: 513, baseType: !1905, size: 8, offset: 952)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1893, file: !1894, line: 514, baseType: !1905, size: 8, offset: 960)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1893, file: !1894, line: 515, baseType: !1905, size: 8, offset: 968)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1893, file: !1894, line: 516, baseType: !1905, size: 8, offset: 976)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1893, file: !1894, line: 517, baseType: !1905, size: 8, offset: 984)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1893, file: !1894, line: 518, baseType: !1905, size: 8, offset: 992)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1893, file: !1894, line: 519, baseType: !1905, size: 8, offset: 1000)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1893, file: !1894, line: 520, baseType: !1905, size: 8, offset: 1008)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1893, file: !1894, line: 521, baseType: !1905, size: 8, offset: 1016)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1893, file: !1894, line: 522, baseType: !1905, size: 8, offset: 1024)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1893, file: !1894, line: 523, baseType: !1905, size: 8, offset: 1032)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1893, file: !1894, line: 524, baseType: !1905, size: 8, offset: 1040)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1893, file: !1894, line: 525, baseType: !1905, size: 8, offset: 1048)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1893, file: !1894, line: 526, baseType: !1905, size: 8, offset: 1056)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1893, file: !1894, line: 527, baseType: !1905, size: 8, offset: 1064)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1893, file: !1894, line: 528, baseType: !1905, size: 8, offset: 1072)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1893, file: !1894, line: 529, baseType: !1905, size: 8, offset: 1080)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1893, file: !1894, line: 530, baseType: !1905, size: 8, offset: 1088)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1893, file: !1894, line: 531, baseType: !1905, size: 8, offset: 1096)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1893, file: !1894, line: 532, baseType: !1905, size: 8, offset: 1104)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1893, file: !1894, line: 533, baseType: !1905, size: 8, offset: 1112)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1893, file: !1894, line: 534, baseType: !1905, size: 8, offset: 1120)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1893, file: !1894, line: 535, baseType: !1905, size: 8, offset: 1128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1893, file: !1894, line: 536, baseType: !1905, size: 8, offset: 1136)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1893, file: !1894, line: 537, baseType: !1905, size: 8, offset: 1144)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1893, file: !1894, line: 538, baseType: !1905, size: 8, offset: 1152)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1893, file: !1894, line: 539, baseType: !1905, size: 8, offset: 1160)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1893, file: !1894, line: 540, baseType: !1905, size: 8, offset: 1168)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1893, file: !1894, line: 541, baseType: !1905, size: 8, offset: 1176)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1893, file: !1894, line: 542, baseType: !1905, size: 8, offset: 1184)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1893, file: !1894, line: 543, baseType: !1905, size: 8, offset: 1192)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1893, file: !1894, line: 544, baseType: !1905, size: 8, offset: 1200)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1893, file: !1894, line: 545, baseType: !1905, size: 8, offset: 1208)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1893, file: !1894, line: 546, baseType: !1905, size: 8, offset: 1216)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1893, file: !1894, line: 547, baseType: !1905, size: 8, offset: 1224)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1893, file: !1894, line: 548, baseType: !1905, size: 8, offset: 1232)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1893, file: !1894, line: 549, baseType: !1905, size: 8, offset: 1240)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1893, file: !1894, line: 550, baseType: !1905, size: 8, offset: 1248)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1893, file: !1894, line: 551, baseType: !1905, size: 8, offset: 1256)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1893, file: !1894, line: 552, baseType: !1905, size: 8, offset: 1264)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1893, file: !1894, line: 553, baseType: !1905, size: 8, offset: 1272)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1893, file: !1894, line: 554, baseType: !1905, size: 8, offset: 1280)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1893, file: !1894, line: 555, baseType: !1905, size: 8, offset: 1288)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1893, file: !1894, line: 556, baseType: !1905, size: 8, offset: 1296)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1893, file: !1894, line: 557, baseType: !1905, size: 8, offset: 1304)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1893, file: !1894, line: 558, baseType: !1905, size: 8, offset: 1312)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1893, file: !1894, line: 559, baseType: !1905, size: 8, offset: 1320)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1893, file: !1894, line: 560, baseType: !1905, size: 8, offset: 1328)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1893, file: !1894, line: 561, baseType: !1905, size: 8, offset: 1336)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1893, file: !1894, line: 562, baseType: !1905, size: 8, offset: 1344)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1893, file: !1894, line: 563, baseType: !1905, size: 8, offset: 1352)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1893, file: !1894, line: 564, baseType: !1905, size: 8, offset: 1360)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1893, file: !1894, line: 565, baseType: !1905, size: 8, offset: 1368)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1893, file: !1894, line: 566, baseType: !1905, size: 8, offset: 1376)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1893, file: !1894, line: 567, baseType: !1905, size: 8, offset: 1384)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1893, file: !1894, line: 568, baseType: !1905, size: 8, offset: 1392)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1893, file: !1894, line: 569, baseType: !1905, size: 8, offset: 1400)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1893, file: !1894, line: 570, baseType: !1905, size: 8, offset: 1408)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1893, file: !1894, line: 571, baseType: !1905, size: 8, offset: 1416)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1893, file: !1894, line: 572, baseType: !1905, size: 8, offset: 1424)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1893, file: !1894, line: 573, baseType: !1905, size: 8, offset: 1432)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1893, file: !1894, line: 574, baseType: !1905, size: 8, offset: 1440)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !759, file: !318, line: 3405, baseType: !2061, size: 384)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !318, line: 3352, size: 384, elements: !2062)
!2062 = !{!2063, !2064}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2061, file: !318, line: 3353, baseType: !795, size: 192)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2061, file: !318, line: 3356, baseType: !2065, size: 192, offset: 192)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1894, line: 578, size: 192, elements: !2066)
!2066 = !{!2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2065, file: !1894, line: 580, baseType: !682, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2065, file: !1894, line: 581, baseType: !682, size: 32, offset: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2065, file: !1894, line: 582, baseType: !682, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2065, file: !1894, line: 583, baseType: !682, size: 32, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2065, file: !1894, line: 584, baseType: !681, size: 8, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2065, file: !1894, line: 585, baseType: !681, size: 8, offset: 136)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2065, file: !1894, line: 586, baseType: !681, size: 8, offset: 144)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2065, file: !1894, line: 587, baseType: !681, size: 8, offset: 152)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2065, file: !1894, line: 588, baseType: !681, size: 8, offset: 160)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2065, file: !1894, line: 589, baseType: !681, size: 8, offset: 168)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2065, file: !1894, line: 590, baseType: !681, size: 8, offset: 176)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !754, file: !3, line: 138, baseType: !2079, size: 384, offset: 64)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hashable_expr", file: !3, line: 60, size: 384, elements: !2080)
!2080 = !{!2081, !2082, !2083}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2079, file: !3, line: 62, baseType: !757, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !2079, file: !3, line: 63, baseType: !573, size: 32, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2079, file: !3, line: 69, baseType: !2084, size: 256, offset: 128)
!2084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2079, file: !3, line: 64, size: 256, elements: !2085)
!2085 = !{!2086, !2090, !2095, !2101}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "single", scope: !2084, file: !3, line: 65, baseType: !2087, size: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2084, file: !3, line: 65, size: 64, elements: !2088)
!2088 = !{!2089}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !2087, file: !3, line: 65, baseType: !757, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "unary", scope: !2084, file: !3, line: 66, baseType: !2091, size: 128)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2084, file: !3, line: 66, size: 128, elements: !2092)
!2092 = !{!2093, !2094}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2091, file: !3, line: 66, baseType: !317, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "opnd", scope: !2091, file: !3, line: 66, baseType: !757, size: 64, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "binary", scope: !2084, file: !3, line: 67, baseType: !2096, size: 192)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2084, file: !3, line: 67, size: 192, elements: !2097)
!2097 = !{!2098, !2099, !2100}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2096, file: !3, line: 67, baseType: !317, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "opnd0", scope: !2096, file: !3, line: 67, baseType: !757, size: 64, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "opnd1", scope: !2096, file: !3, line: 67, baseType: !757, size: 64, offset: 128)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !2084, file: !3, line: 68, baseType: !2102, size: 256)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2084, file: !3, line: 68, size: 256, elements: !2103)
!2103 = !{!2104, !2105, !2106, !2107}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2102, file: !3, line: 68, baseType: !757, size: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pure", scope: !2102, file: !3, line: 68, baseType: !681, size: 8, offset: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2102, file: !3, line: 68, baseType: !1164, size: 64, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2102, file: !3, line: 68, baseType: !1053, size: 64, offset: 192)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !754, file: !3, line: 141, baseType: !1019, size: 64, offset: 448)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !754, file: !3, line: 144, baseType: !1547, size: 32, offset: 512)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !754, file: !3, line: 148, baseType: !2111, size: 64, offset: 576)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_hash_elt_t_heap", file: !3, line: 126, baseType: !2114)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_hash_elt_t_heap", file: !3, line: 126, size: 128, elements: !2115)
!2115 = !{!2116}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2114, file: !3, line: 126, baseType: !2117, size: 128)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_hash_elt_t_base", file: !3, line: 125, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_hash_elt_t_base", file: !3, line: 125, size: 128, elements: !2119)
!2119 = !{!2120, !2121, !2122}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2118, file: !3, line: 125, baseType: !7, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2118, file: !3, line: 125, baseType: !7, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2118, file: !3, line: 125, baseType: !2123, size: 64, offset: 64)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2124, size: 64, elements: !853)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_hash_elt_t", file: !3, line: 124, baseType: !2111)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !318, line: 184, baseType: !2127)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !318, line: 184, size: 128, elements: !2128)
!2128 = !{!2129}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2127, file: !318, line: 184, baseType: !1603, size: 128)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_info", file: !3, line: 95, size: 256, elements: !2132)
!2132 = !{!2133, !2134, !2135, !2141}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !2131, file: !3, line: 99, baseType: !757, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !2131, file: !3, line: 100, baseType: !757, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "cond_equivalences", scope: !2131, file: !3, line: 106, baseType: !2136, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cond_equivalence", file: !3, line: 75, size: 448, elements: !2138)
!2138 = !{!2139, !2140}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2137, file: !3, line: 77, baseType: !2079, size: 384)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2137, file: !3, line: 78, baseType: !757, size: 64, offset: 384)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "max_cond_equivalences", scope: !2131, file: !3, line: 107, baseType: !7, size: 32, offset: 192)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1021)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !667, line: 30, baseType: !2145)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !318, line: 1893, baseType: !1060)
!2147 = !{!0, !2148, !2176, !2178, !2187, !2189, !2191, !2193}
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "pass_phi_only_cprop", scope: !2, file: !3, line: 2875, type: !2150, isLocal: false, isDefinition: true)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_opt_pass", file: !6, line: 156, size: 640, elements: !2151)
!2151 = !{!2152}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2150, file: !6, line: 158, baseType: !2153, size: 640)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !6, line: 114, size: 640, elements: !2154)
!2154 = !{!2155, !2156, !2157, !2161, !2165, !2167, !2168, !2169, !2171, !2172, !2173, !2174, !2175}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2153, file: !6, line: 117, baseType: !5, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2153, file: !6, line: 121, baseType: !687, size: 64, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2153, file: !6, line: 125, baseType: !2158, size: 64, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!681}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2153, file: !6, line: 130, baseType: !2162, size: 64, offset: 192)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{!7}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2153, file: !6, line: 133, baseType: !2166, size: 64, offset: 256)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2153, file: !6, line: 136, baseType: !2166, size: 64, offset: 320)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2153, file: !6, line: 139, baseType: !682, size: 32, offset: 384)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2153, file: !6, line: 143, baseType: !2170, size: 32, offset: 416)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !14, line: 80, baseType: !13)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2153, file: !6, line: 146, baseType: !7, size: 32, offset: 448)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2153, file: !6, line: 147, baseType: !7, size: 32, offset: 480)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2153, file: !6, line: 148, baseType: !7, size: 32, offset: 512)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2153, file: !6, line: 151, baseType: !7, size: 32, offset: 544)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2153, file: !6, line: 152, baseType: !7, size: 32, offset: 576)
!2176 = !DIGlobalVariableExpression(var: !2177, expr: !DIExpression())
!2177 = distinct !DIGlobalVariable(name: "avail_exprs", scope: !2, file: !3, line: 117, type: !1537, isLocal: true, isDefinition: true)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "opt_stats", scope: !2, file: !3, line: 174, type: !2180, isLocal: true, isDefinition: true)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_stats_d", file: !3, line: 165, size: 320, elements: !2181)
!2181 = !{!2182, !2183, !2184, !2185, !2186}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "num_stmts", scope: !2180, file: !3, line: 167, baseType: !724, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "num_exprs_considered", scope: !2180, file: !3, line: 168, baseType: !724, size: 64, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "num_re", scope: !2180, file: !3, line: 169, baseType: !724, size: 64, offset: 128)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "num_const_prop", scope: !2180, file: !3, line: 170, baseType: !724, size: 64, offset: 192)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "num_copy_prop", scope: !2180, file: !3, line: 171, baseType: !724, size: 64, offset: 256)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "avail_exprs_stack", scope: !2, file: !3, line: 128, type: !2112, isLocal: true, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "const_and_copies_stack", scope: !2, file: !3, line: 155, type: !2125, isLocal: true, isDefinition: true)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "need_eh_cleanup", scope: !2, file: !3, line: 162, type: !689, isLocal: true, isDefinition: true)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "cfg_altered", scope: !2, file: !3, line: 158, type: !681, isLocal: true, isDefinition: true)
!2195 = !{i32 2, !"Dwarf Version", i32 4}
!2196 = !{i32 2, !"Debug Info Version", i32 3}
!2197 = !{i32 1, !"wchar_size", i32 4}
!2198 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2199 = distinct !DISubprogram(name: "vprintf", scope: !2200, file: !2200, line: 39, type: !2201, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2211)
!2200 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!682, !2203, !2204}
!2203 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !687)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2205, file: !3, baseType: !7, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2205, file: !3, baseType: !7, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2205, file: !3, baseType: !686, size: 64, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2205, file: !3, baseType: !686, size: 64, offset: 128)
!2211 = !{!2212, !2213}
!2212 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2199, file: !2200, line: 39, type: !2203)
!2213 = !DILocalVariable(name: "__arg", arg: 2, scope: !2199, file: !2200, line: 39, type: !2204)
!2214 = !DILocation(line: 0, scope: !2199)
!2215 = !DILocation(line: 41, column: 20, scope: !2199)
!2216 = !DILocation(line: 41, column: 10, scope: !2199)
!2217 = !DILocation(line: 41, column: 3, scope: !2199)
!2218 = distinct !DISubprogram(name: "getchar", scope: !2200, file: !2200, line: 47, type: !2219, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2221)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!682}
!2221 = !{}
!2222 = !DILocation(line: 49, column: 16, scope: !2218)
!2223 = !DILocation(line: 49, column: 10, scope: !2218)
!2224 = !DILocation(line: 49, column: 3, scope: !2218)
!2225 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2200, file: !2200, line: 56, type: !2226, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2279)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{!682, !2228}
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2230, line: 7, baseType: !2231)
!2230 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2232, line: 49, size: 1728, elements: !2233)
!2232 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2233 = !{!2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2249, !2251, !2252, !2253, !2256, !2258, !2259, !2260, !2263, !2265, !2268, !2271, !2272, !2273, !2274, !2275}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2231, file: !2232, line: 51, baseType: !682, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2231, file: !2232, line: 54, baseType: !684, size: 64, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2231, file: !2232, line: 55, baseType: !684, size: 64, offset: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2231, file: !2232, line: 56, baseType: !684, size: 64, offset: 192)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2231, file: !2232, line: 57, baseType: !684, size: 64, offset: 256)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2231, file: !2232, line: 58, baseType: !684, size: 64, offset: 320)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2231, file: !2232, line: 59, baseType: !684, size: 64, offset: 384)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2231, file: !2232, line: 60, baseType: !684, size: 64, offset: 448)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2231, file: !2232, line: 61, baseType: !684, size: 64, offset: 512)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2231, file: !2232, line: 64, baseType: !684, size: 64, offset: 576)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2231, file: !2232, line: 65, baseType: !684, size: 64, offset: 640)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2231, file: !2232, line: 66, baseType: !684, size: 64, offset: 704)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2231, file: !2232, line: 68, baseType: !2247, size: 64, offset: 768)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2232, line: 36, flags: DIFlagFwdDecl)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2231, file: !2232, line: 70, baseType: !2250, size: 64, offset: 832)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2231, file: !2232, line: 72, baseType: !682, size: 32, offset: 896)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2231, file: !2232, line: 73, baseType: !682, size: 32, offset: 928)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2231, file: !2232, line: 74, baseType: !2254, size: 64, offset: 960)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2255, line: 152, baseType: !724)
!2255 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2231, file: !2232, line: 77, baseType: !2257, size: 16, offset: 1024)
!2257 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2231, file: !2232, line: 78, baseType: !1905, size: 8, offset: 1040)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2231, file: !2232, line: 79, baseType: !852, size: 8, offset: 1048)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2231, file: !2232, line: 81, baseType: !2261, size: 64, offset: 1088)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2232, line: 43, baseType: null)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2231, file: !2232, line: 89, baseType: !2264, size: 64, offset: 1152)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2255, line: 153, baseType: !724)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2231, file: !2232, line: 91, baseType: !2266, size: 64, offset: 1216)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2232, line: 37, flags: DIFlagFwdDecl)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2231, file: !2232, line: 92, baseType: !2269, size: 64, offset: 1280)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2232, line: 38, flags: DIFlagFwdDecl)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2231, file: !2232, line: 93, baseType: !2250, size: 64, offset: 1344)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2231, file: !2232, line: 94, baseType: !686, size: 64, offset: 1408)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2231, file: !2232, line: 95, baseType: !1164, size: 64, offset: 1472)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2231, file: !2232, line: 96, baseType: !682, size: 32, offset: 1536)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2231, file: !2232, line: 98, baseType: !2276, size: 160, offset: 1568)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !685, size: 160, elements: !2277)
!2277 = !{!2278}
!2278 = !DISubrange(count: 20)
!2279 = !{!2280}
!2280 = !DILocalVariable(name: "__fp", arg: 1, scope: !2225, file: !2200, line: 56, type: !2228)
!2281 = !DILocation(line: 0, scope: !2225)
!2282 = !DILocation(line: 58, column: 10, scope: !2225)
!2283 = !DILocation(line: 58, column: 3, scope: !2225)
!2284 = distinct !DISubprogram(name: "getc_unlocked", scope: !2200, file: !2200, line: 66, type: !2226, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2285)
!2285 = !{!2286}
!2286 = !DILocalVariable(name: "__fp", arg: 1, scope: !2284, file: !2200, line: 66, type: !2228)
!2287 = !DILocation(line: 0, scope: !2284)
!2288 = !DILocation(line: 68, column: 10, scope: !2284)
!2289 = !DILocation(line: 68, column: 3, scope: !2284)
!2290 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2200, file: !2200, line: 73, type: !2219, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2221)
!2291 = !DILocation(line: 75, column: 10, scope: !2290)
!2292 = !DILocation(line: 75, column: 3, scope: !2290)
!2293 = distinct !DISubprogram(name: "putchar", scope: !2200, file: !2200, line: 82, type: !2294, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2296)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{!682, !682}
!2296 = !{!2297}
!2297 = !DILocalVariable(name: "__c", arg: 1, scope: !2293, file: !2200, line: 82, type: !682)
!2298 = !DILocation(line: 0, scope: !2293)
!2299 = !DILocation(line: 84, column: 21, scope: !2293)
!2300 = !DILocation(line: 84, column: 10, scope: !2293)
!2301 = !DILocation(line: 84, column: 3, scope: !2293)
!2302 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2200, file: !2200, line: 91, type: !2303, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2305)
!2303 = !DISubroutineType(types: !2304)
!2304 = !{!682, !682, !2228}
!2305 = !{!2306, !2307}
!2306 = !DILocalVariable(name: "__c", arg: 1, scope: !2302, file: !2200, line: 91, type: !682)
!2307 = !DILocalVariable(name: "__stream", arg: 2, scope: !2302, file: !2200, line: 91, type: !2228)
!2308 = !DILocation(line: 0, scope: !2302)
!2309 = !DILocation(line: 93, column: 10, scope: !2302)
!2310 = !DILocation(line: 93, column: 3, scope: !2302)
!2311 = distinct !DISubprogram(name: "putc_unlocked", scope: !2200, file: !2200, line: 101, type: !2303, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2312)
!2312 = !{!2313, !2314}
!2313 = !DILocalVariable(name: "__c", arg: 1, scope: !2311, file: !2200, line: 101, type: !682)
!2314 = !DILocalVariable(name: "__stream", arg: 2, scope: !2311, file: !2200, line: 101, type: !2228)
!2315 = !DILocation(line: 0, scope: !2311)
!2316 = !DILocation(line: 103, column: 10, scope: !2311)
!2317 = !DILocation(line: 103, column: 3, scope: !2311)
!2318 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2200, file: !2200, line: 108, type: !2294, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2319)
!2319 = !{!2320}
!2320 = !DILocalVariable(name: "__c", arg: 1, scope: !2318, file: !2200, line: 108, type: !682)
!2321 = !DILocation(line: 0, scope: !2318)
!2322 = !DILocation(line: 110, column: 10, scope: !2318)
!2323 = !DILocation(line: 110, column: 3, scope: !2318)
!2324 = distinct !DISubprogram(name: "getline", scope: !2200, file: !2200, line: 118, type: !2325, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2329)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{!2327, !683, !2328, !2228}
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2255, line: 193, baseType: !724)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!2329 = !{!2330, !2331, !2332}
!2330 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2324, file: !2200, line: 118, type: !683)
!2331 = !DILocalVariable(name: "__n", arg: 2, scope: !2324, file: !2200, line: 118, type: !2328)
!2332 = !DILocalVariable(name: "__stream", arg: 3, scope: !2324, file: !2200, line: 118, type: !2228)
!2333 = !DILocation(line: 0, scope: !2324)
!2334 = !DILocation(line: 120, column: 10, scope: !2324)
!2335 = !DILocation(line: 120, column: 3, scope: !2324)
!2336 = distinct !DISubprogram(name: "feof_unlocked", scope: !2200, file: !2200, line: 128, type: !2226, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2337)
!2337 = !{!2338}
!2338 = !DILocalVariable(name: "__stream", arg: 1, scope: !2336, file: !2200, line: 128, type: !2228)
!2339 = !DILocation(line: 0, scope: !2336)
!2340 = !DILocation(line: 130, column: 10, scope: !2336)
!2341 = !DILocation(line: 130, column: 3, scope: !2336)
!2342 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2200, file: !2200, line: 135, type: !2226, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2343)
!2343 = !{!2344}
!2344 = !DILocalVariable(name: "__stream", arg: 1, scope: !2342, file: !2200, line: 135, type: !2228)
!2345 = !DILocation(line: 0, scope: !2342)
!2346 = !DILocation(line: 137, column: 10, scope: !2342)
!2347 = !DILocation(line: 137, column: 3, scope: !2342)
!2348 = distinct !DISubprogram(name: "tolower", scope: !2349, file: !2349, line: 207, type: !2294, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2350)
!2349 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2350 = !{!2351}
!2351 = !DILocalVariable(name: "__c", arg: 1, scope: !2348, file: !2349, line: 207, type: !682)
!2352 = !DILocation(line: 0, scope: !2348)
!2353 = !DILocation(line: 209, column: 22, scope: !2348)
!2354 = !DILocation(line: 209, column: 39, scope: !2348)
!2355 = !DILocation(line: 209, column: 38, scope: !2348)
!2356 = !DILocation(line: 209, column: 37, scope: !2348)
!2357 = !DILocation(line: 209, column: 10, scope: !2348)
!2358 = !DILocation(line: 209, column: 3, scope: !2348)
!2359 = distinct !DISubprogram(name: "toupper", scope: !2349, file: !2349, line: 213, type: !2294, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2360)
!2360 = !{!2361}
!2361 = !DILocalVariable(name: "__c", arg: 1, scope: !2359, file: !2349, line: 213, type: !682)
!2362 = !DILocation(line: 0, scope: !2359)
!2363 = !DILocation(line: 215, column: 22, scope: !2359)
!2364 = !DILocation(line: 215, column: 39, scope: !2359)
!2365 = !DILocation(line: 215, column: 38, scope: !2359)
!2366 = !DILocation(line: 215, column: 37, scope: !2359)
!2367 = !DILocation(line: 215, column: 10, scope: !2359)
!2368 = !DILocation(line: 215, column: 3, scope: !2359)
!2369 = distinct !DISubprogram(name: "atoi", scope: !2370, file: !2370, line: 361, type: !2371, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2373)
!2370 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!682, !687}
!2373 = !{!2374}
!2374 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2369, file: !2370, line: 361, type: !687)
!2375 = !DILocation(line: 0, scope: !2369)
!2376 = !DILocation(line: 363, column: 16, scope: !2369)
!2377 = !DILocation(line: 363, column: 10, scope: !2369)
!2378 = !DILocation(line: 363, column: 3, scope: !2369)
!2379 = distinct !DISubprogram(name: "atol", scope: !2370, file: !2370, line: 366, type: !2380, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2382)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!724, !687}
!2382 = !{!2383}
!2383 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2379, file: !2370, line: 366, type: !687)
!2384 = !DILocation(line: 0, scope: !2379)
!2385 = !DILocation(line: 368, column: 10, scope: !2379)
!2386 = !DILocation(line: 368, column: 3, scope: !2379)
!2387 = distinct !DISubprogram(name: "atoll", scope: !2370, file: !2370, line: 373, type: !2388, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2391)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{!2390, !687}
!2390 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2391 = !{!2392}
!2392 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2387, file: !2370, line: 373, type: !687)
!2393 = !DILocation(line: 0, scope: !2387)
!2394 = !DILocation(line: 375, column: 10, scope: !2387)
!2395 = !DILocation(line: 375, column: 3, scope: !2387)
!2396 = distinct !DISubprogram(name: "bsearch", scope: !2397, file: !2397, line: 20, type: !2398, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2401)
!2397 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2398 = !DISubroutineType(types: !2399)
!2399 = !{!686, !1378, !1378, !1164, !1164, !2400}
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2370, line: 808, baseType: !1550)
!2401 = !{!2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411}
!2402 = !DILocalVariable(name: "__key", arg: 1, scope: !2396, file: !2397, line: 20, type: !1378)
!2403 = !DILocalVariable(name: "__base", arg: 2, scope: !2396, file: !2397, line: 20, type: !1378)
!2404 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2396, file: !2397, line: 20, type: !1164)
!2405 = !DILocalVariable(name: "__size", arg: 4, scope: !2396, file: !2397, line: 20, type: !1164)
!2406 = !DILocalVariable(name: "__compar", arg: 5, scope: !2396, file: !2397, line: 21, type: !2400)
!2407 = !DILocalVariable(name: "__l", scope: !2396, file: !2397, line: 23, type: !1164)
!2408 = !DILocalVariable(name: "__u", scope: !2396, file: !2397, line: 23, type: !1164)
!2409 = !DILocalVariable(name: "__idx", scope: !2396, file: !2397, line: 23, type: !1164)
!2410 = !DILocalVariable(name: "__p", scope: !2396, file: !2397, line: 24, type: !1378)
!2411 = !DILocalVariable(name: "__comparison", scope: !2396, file: !2397, line: 25, type: !682)
!2412 = !DILocation(line: 0, scope: !2396)
!2413 = !DILocation(line: 29, column: 3, scope: !2396)
!2414 = !DILocation(line: 27, column: 7, scope: !2396)
!2415 = !DILocation(line: 29, column: 14, scope: !2396)
!2416 = !DILocation(line: 31, column: 20, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2396, file: !2397, line: 30, column: 5)
!2418 = !DILocation(line: 31, column: 27, scope: !2417)
!2419 = !DILocation(line: 32, column: 56, scope: !2417)
!2420 = !DILocation(line: 32, column: 47, scope: !2417)
!2421 = !DILocation(line: 33, column: 22, scope: !2417)
!2422 = !DILocation(line: 34, column: 24, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2417, file: !2397, line: 34, column: 11)
!2424 = !DILocation(line: 34, column: 11, scope: !2417)
!2425 = !DILocation(line: 36, column: 29, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2423, file: !2397, line: 36, column: 16)
!2427 = !DILocation(line: 36, column: 16, scope: !2423)
!2428 = !DILocation(line: 37, column: 14, scope: !2426)
!2429 = distinct !{!2429, !2413, !2430}
!2430 = !DILocation(line: 40, column: 5, scope: !2396)
!2431 = !DILocation(line: 43, column: 1, scope: !2396)
!2432 = distinct !DISubprogram(name: "atof", scope: !2433, file: !2433, line: 25, type: !2434, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2437)
!2433 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!2436, !687}
!2436 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2437 = !{!2438}
!2438 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2432, file: !2433, line: 25, type: !687)
!2439 = !DILocation(line: 0, scope: !2432)
!2440 = !DILocation(line: 27, column: 10, scope: !2432)
!2441 = !DILocation(line: 27, column: 3, scope: !2432)
!2442 = distinct !DISubprogram(name: "strtoimax", scope: !2443, file: !2443, line: 324, type: !2444, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2450)
!2443 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2444 = !DISubroutineType(types: !2445)
!2445 = !{!2446, !2203, !2449, !682}
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2447, line: 101, baseType: !2448)
!2447 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2255, line: 72, baseType: !724)
!2449 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !683)
!2450 = !{!2451, !2452, !2453}
!2451 = !DILocalVariable(name: "nptr", arg: 1, scope: !2442, file: !2443, line: 324, type: !2203)
!2452 = !DILocalVariable(name: "endptr", arg: 2, scope: !2442, file: !2443, line: 324, type: !2449)
!2453 = !DILocalVariable(name: "base", arg: 3, scope: !2442, file: !2443, line: 324, type: !682)
!2454 = !DILocation(line: 0, scope: !2442)
!2455 = !DILocation(line: 327, column: 10, scope: !2442)
!2456 = !DILocation(line: 327, column: 3, scope: !2442)
!2457 = distinct !DISubprogram(name: "strtoumax", scope: !2443, file: !2443, line: 336, type: !2458, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2462)
!2458 = !DISubroutineType(types: !2459)
!2459 = !{!2460, !2203, !2449, !682}
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2447, line: 102, baseType: !2461)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2255, line: 73, baseType: !707)
!2462 = !{!2463, !2464, !2465}
!2463 = !DILocalVariable(name: "nptr", arg: 1, scope: !2457, file: !2443, line: 336, type: !2203)
!2464 = !DILocalVariable(name: "endptr", arg: 2, scope: !2457, file: !2443, line: 336, type: !2449)
!2465 = !DILocalVariable(name: "base", arg: 3, scope: !2457, file: !2443, line: 336, type: !682)
!2466 = !DILocation(line: 0, scope: !2457)
!2467 = !DILocation(line: 339, column: 10, scope: !2457)
!2468 = !DILocation(line: 339, column: 3, scope: !2457)
!2469 = distinct !DISubprogram(name: "wcstoimax", scope: !2443, file: !2443, line: 348, type: !2470, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2479)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!2446, !2472, !2476, !682}
!2472 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2473)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2475)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2443, line: 34, baseType: !682)
!2476 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2477)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2479 = !{!2480, !2481, !2482}
!2480 = !DILocalVariable(name: "nptr", arg: 1, scope: !2469, file: !2443, line: 348, type: !2472)
!2481 = !DILocalVariable(name: "endptr", arg: 2, scope: !2469, file: !2443, line: 348, type: !2476)
!2482 = !DILocalVariable(name: "base", arg: 3, scope: !2469, file: !2443, line: 348, type: !682)
!2483 = !DILocation(line: 0, scope: !2469)
!2484 = !DILocation(line: 351, column: 10, scope: !2469)
!2485 = !DILocation(line: 351, column: 3, scope: !2469)
!2486 = distinct !DISubprogram(name: "wcstoumax", scope: !2443, file: !2443, line: 362, type: !2487, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2489)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{!2460, !2472, !2476, !682}
!2489 = !{!2490, !2491, !2492}
!2490 = !DILocalVariable(name: "nptr", arg: 1, scope: !2486, file: !2443, line: 362, type: !2472)
!2491 = !DILocalVariable(name: "endptr", arg: 2, scope: !2486, file: !2443, line: 362, type: !2476)
!2492 = !DILocalVariable(name: "base", arg: 3, scope: !2486, file: !2443, line: 362, type: !682)
!2493 = !DILocation(line: 0, scope: !2486)
!2494 = !DILocation(line: 365, column: 10, scope: !2486)
!2495 = !DILocation(line: 365, column: 3, scope: !2486)
!2496 = distinct !DISubprogram(name: "stat", scope: !2497, file: !2497, line: 453, type: !2498, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2535)
!2497 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2498 = !DISubroutineType(types: !2499)
!2499 = !{!682, !687, !2500}
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2502, line: 46, size: 1152, elements: !2503)
!2502 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2503 = !{!2504, !2506, !2508, !2510, !2512, !2514, !2516, !2517, !2518, !2519, !2521, !2523, !2531, !2532, !2533}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2501, file: !2502, line: 48, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2255, line: 145, baseType: !707)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2501, file: !2502, line: 53, baseType: !2507, size: 64, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2255, line: 148, baseType: !707)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2501, file: !2502, line: 61, baseType: !2509, size: 64, offset: 128)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2255, line: 151, baseType: !707)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2501, file: !2502, line: 62, baseType: !2511, size: 32, offset: 192)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2255, line: 150, baseType: !7)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2501, file: !2502, line: 64, baseType: !2513, size: 32, offset: 224)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2255, line: 146, baseType: !7)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2501, file: !2502, line: 65, baseType: !2515, size: 32, offset: 256)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2255, line: 147, baseType: !7)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2501, file: !2502, line: 67, baseType: !682, size: 32, offset: 288)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2501, file: !2502, line: 69, baseType: !2505, size: 64, offset: 320)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2501, file: !2502, line: 74, baseType: !2254, size: 64, offset: 384)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2501, file: !2502, line: 78, baseType: !2520, size: 64, offset: 448)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2255, line: 174, baseType: !724)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2501, file: !2502, line: 80, baseType: !2522, size: 64, offset: 512)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2255, line: 179, baseType: !724)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2501, file: !2502, line: 91, baseType: !2524, size: 128, offset: 576)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2525, line: 10, size: 128, elements: !2526)
!2525 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2526 = !{!2527, !2529}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2524, file: !2525, line: 12, baseType: !2528, size: 64)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2255, line: 160, baseType: !724)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2524, file: !2525, line: 16, baseType: !2530, size: 64, offset: 64)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2255, line: 196, baseType: !724)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2501, file: !2502, line: 92, baseType: !2524, size: 128, offset: 704)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2501, file: !2502, line: 93, baseType: !2524, size: 128, offset: 832)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2501, file: !2502, line: 106, baseType: !2534, size: 192, offset: 960)
!2534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2530, size: 192, elements: !828)
!2535 = !{!2536, !2537}
!2536 = !DILocalVariable(name: "__path", arg: 1, scope: !2496, file: !2497, line: 453, type: !687)
!2537 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2496, file: !2497, line: 453, type: !2500)
!2538 = !DILocation(line: 0, scope: !2496)
!2539 = !DILocation(line: 455, column: 10, scope: !2496)
!2540 = !DILocation(line: 455, column: 3, scope: !2496)
!2541 = distinct !DISubprogram(name: "lstat", scope: !2497, file: !2497, line: 460, type: !2498, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2542)
!2542 = !{!2543, !2544}
!2543 = !DILocalVariable(name: "__path", arg: 1, scope: !2541, file: !2497, line: 460, type: !687)
!2544 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2541, file: !2497, line: 460, type: !2500)
!2545 = !DILocation(line: 0, scope: !2541)
!2546 = !DILocation(line: 462, column: 10, scope: !2541)
!2547 = !DILocation(line: 462, column: 3, scope: !2541)
!2548 = distinct !DISubprogram(name: "fstat", scope: !2497, file: !2497, line: 467, type: !2549, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2551)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{!682, !682, !2500}
!2551 = !{!2552, !2553}
!2552 = !DILocalVariable(name: "__fd", arg: 1, scope: !2548, file: !2497, line: 467, type: !682)
!2553 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2548, file: !2497, line: 467, type: !2500)
!2554 = !DILocation(line: 0, scope: !2548)
!2555 = !DILocation(line: 469, column: 10, scope: !2548)
!2556 = !DILocation(line: 469, column: 3, scope: !2548)
!2557 = distinct !DISubprogram(name: "fstatat", scope: !2497, file: !2497, line: 474, type: !2558, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2560)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!682, !682, !687, !2500, !682}
!2560 = !{!2561, !2562, !2563, !2564}
!2561 = !DILocalVariable(name: "__fd", arg: 1, scope: !2557, file: !2497, line: 474, type: !682)
!2562 = !DILocalVariable(name: "__filename", arg: 2, scope: !2557, file: !2497, line: 474, type: !687)
!2563 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2557, file: !2497, line: 474, type: !2500)
!2564 = !DILocalVariable(name: "__flag", arg: 4, scope: !2557, file: !2497, line: 474, type: !682)
!2565 = !DILocation(line: 0, scope: !2557)
!2566 = !DILocation(line: 477, column: 10, scope: !2557)
!2567 = !DILocation(line: 477, column: 3, scope: !2557)
!2568 = distinct !DISubprogram(name: "mknod", scope: !2497, file: !2497, line: 483, type: !2569, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2571)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!682, !687, !2511, !2505}
!2571 = !{!2572, !2573, !2574}
!2572 = !DILocalVariable(name: "__path", arg: 1, scope: !2568, file: !2497, line: 483, type: !687)
!2573 = !DILocalVariable(name: "__mode", arg: 2, scope: !2568, file: !2497, line: 483, type: !2511)
!2574 = !DILocalVariable(name: "__dev", arg: 3, scope: !2568, file: !2497, line: 483, type: !2505)
!2575 = !DILocation(line: 0, scope: !2568)
!2576 = !DILocation(line: 485, column: 10, scope: !2568)
!2577 = !DILocation(line: 485, column: 3, scope: !2568)
!2578 = distinct !DISubprogram(name: "mknodat", scope: !2497, file: !2497, line: 491, type: !2579, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2581)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!682, !682, !687, !2511, !2505}
!2581 = !{!2582, !2583, !2584, !2585}
!2582 = !DILocalVariable(name: "__fd", arg: 1, scope: !2578, file: !2497, line: 491, type: !682)
!2583 = !DILocalVariable(name: "__path", arg: 2, scope: !2578, file: !2497, line: 491, type: !687)
!2584 = !DILocalVariable(name: "__mode", arg: 3, scope: !2578, file: !2497, line: 491, type: !2511)
!2585 = !DILocalVariable(name: "__dev", arg: 4, scope: !2578, file: !2497, line: 491, type: !2505)
!2586 = !DILocation(line: 0, scope: !2578)
!2587 = !DILocation(line: 494, column: 10, scope: !2578)
!2588 = !DILocation(line: 494, column: 3, scope: !2578)
!2589 = distinct !DISubprogram(name: "stat64", scope: !2497, file: !2497, line: 502, type: !2590, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2612)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!682, !687, !2592}
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2502, line: 119, size: 1152, elements: !2594)
!2594 = !{!2595, !2596, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2608, !2609, !2610, !2611}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2593, file: !2502, line: 121, baseType: !2505, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2593, file: !2502, line: 123, baseType: !2597, size: 64, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2255, line: 149, baseType: !707)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2593, file: !2502, line: 124, baseType: !2509, size: 64, offset: 128)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2593, file: !2502, line: 125, baseType: !2511, size: 32, offset: 192)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2593, file: !2502, line: 132, baseType: !2513, size: 32, offset: 224)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2593, file: !2502, line: 133, baseType: !2515, size: 32, offset: 256)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2593, file: !2502, line: 135, baseType: !682, size: 32, offset: 288)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2593, file: !2502, line: 136, baseType: !2505, size: 64, offset: 320)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2593, file: !2502, line: 137, baseType: !2254, size: 64, offset: 384)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2593, file: !2502, line: 143, baseType: !2520, size: 64, offset: 448)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2593, file: !2502, line: 144, baseType: !2607, size: 64, offset: 512)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2255, line: 180, baseType: !724)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2593, file: !2502, line: 152, baseType: !2524, size: 128, offset: 576)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2593, file: !2502, line: 153, baseType: !2524, size: 128, offset: 704)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2593, file: !2502, line: 154, baseType: !2524, size: 128, offset: 832)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2593, file: !2502, line: 164, baseType: !2534, size: 192, offset: 960)
!2612 = !{!2613, !2614}
!2613 = !DILocalVariable(name: "__path", arg: 1, scope: !2589, file: !2497, line: 502, type: !687)
!2614 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2589, file: !2497, line: 502, type: !2592)
!2615 = !DILocation(line: 0, scope: !2589)
!2616 = !DILocation(line: 504, column: 10, scope: !2589)
!2617 = !DILocation(line: 504, column: 3, scope: !2589)
!2618 = distinct !DISubprogram(name: "lstat64", scope: !2497, file: !2497, line: 509, type: !2590, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2619)
!2619 = !{!2620, !2621}
!2620 = !DILocalVariable(name: "__path", arg: 1, scope: !2618, file: !2497, line: 509, type: !687)
!2621 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2618, file: !2497, line: 509, type: !2592)
!2622 = !DILocation(line: 0, scope: !2618)
!2623 = !DILocation(line: 511, column: 10, scope: !2618)
!2624 = !DILocation(line: 511, column: 3, scope: !2618)
!2625 = distinct !DISubprogram(name: "fstat64", scope: !2497, file: !2497, line: 516, type: !2626, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2628)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!682, !682, !2592}
!2628 = !{!2629, !2630}
!2629 = !DILocalVariable(name: "__fd", arg: 1, scope: !2625, file: !2497, line: 516, type: !682)
!2630 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2625, file: !2497, line: 516, type: !2592)
!2631 = !DILocation(line: 0, scope: !2625)
!2632 = !DILocation(line: 518, column: 10, scope: !2625)
!2633 = !DILocation(line: 518, column: 3, scope: !2625)
!2634 = distinct !DISubprogram(name: "fstatat64", scope: !2497, file: !2497, line: 523, type: !2635, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2637)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{!682, !682, !687, !2592, !682}
!2637 = !{!2638, !2639, !2640, !2641}
!2638 = !DILocalVariable(name: "__fd", arg: 1, scope: !2634, file: !2497, line: 523, type: !682)
!2639 = !DILocalVariable(name: "__filename", arg: 2, scope: !2634, file: !2497, line: 523, type: !687)
!2640 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2634, file: !2497, line: 523, type: !2592)
!2641 = !DILocalVariable(name: "__flag", arg: 4, scope: !2634, file: !2497, line: 523, type: !682)
!2642 = !DILocation(line: 0, scope: !2634)
!2643 = !DILocation(line: 526, column: 10, scope: !2634)
!2644 = !DILocation(line: 526, column: 3, scope: !2634)
!2645 = distinct !DISubprogram(name: "gate_dominator", scope: !3, file: !3, line: 738, type: !2159, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2221)
!2646 = !DILocation(line: 740, column: 10, scope: !2645)
!2647 = !DILocation(line: 740, column: 24, scope: !2645)
!2648 = !DILocation(line: 740, column: 3, scope: !2645)
!2649 = distinct !DISubprogram(name: "tree_ssa_dominator_optimize", scope: !3, file: !3, line: 610, type: !2163, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2650)
!2650 = !{!2651, !2683, !2691, !2692, !2695, !2703}
!2651 = !DILocalVariable(name: "walk_data", scope: !2649, file: !3, line: 612, type: !2652)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dom_walk_data", file: !2653, line: 29, size: 512, elements: !2654)
!2653 = !DIFile(filename: "./domwalk.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2654 = !{!2655, !2656, !2661, !2665, !2666, !2667, !2681, !2682}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "dom_direction", scope: !2652, file: !2653, line: 35, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_block_local_data", scope: !2652, file: !2653, line: 46, baseType: !2657, size: 64, offset: 64)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{null, !2660, !1505, !681}
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "before_dom_children", scope: !2652, file: !2653, line: 50, baseType: !2662, size: 64, offset: 128)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{null, !2660, !1505}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "after_dom_children", scope: !2652, file: !2653, line: 53, baseType: !2662, size: 64, offset: 192)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "global_data", scope: !2652, file: !2653, line: 56, baseType: !686, size: 64, offset: 256)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "block_data_stack", scope: !2652, file: !2653, line: 61, baseType: !2668, size: 64, offset: 320)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_void_p_heap", file: !2653, line: 23, baseType: !2670)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_void_p_heap", file: !2653, line: 23, size: 128, elements: !2671)
!2671 = !{!2672}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2670, file: !2653, line: 23, baseType: !2673, size: 128)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_void_p_base", file: !2653, line: 22, baseType: !2674)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_void_p_base", file: !2653, line: 22, size: 128, elements: !2675)
!2675 = !{!2676, !2677, !2678}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2674, file: !2653, line: 22, baseType: !7, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2674, file: !2653, line: 22, baseType: !7, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2674, file: !2653, line: 22, baseType: !2679, size: 64, offset: 64)
!2679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2680, size: 64, elements: !853)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "void_p", file: !2653, line: 21, baseType: !686)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "block_local_data_size", scope: !2652, file: !2653, line: 65, baseType: !1164, size: 64, offset: 384)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "free_block_data", scope: !2652, file: !2653, line: 71, baseType: !2668, size: 64, offset: 448)
!2683 = !DILocalVariable(name: "gsi", scope: !2684, file: !3, line: 657, type: !2685)
!2684 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 656, column: 3)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !580, line: 265, baseType: !2686)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 254, size: 192, elements: !2687)
!2687 = !{!2688, !2689, !2690}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2686, file: !580, line: 257, baseType: !1014, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2686, file: !580, line: 263, baseType: !1009, size: 64, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2686, file: !580, line: 264, baseType: !1505, size: 64, offset: 128)
!2691 = !DILocalVariable(name: "bb", scope: !2684, file: !3, line: 658, type: !1505)
!2692 = !DILocalVariable(name: "i", scope: !2693, file: !3, line: 684, type: !7)
!2693 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 683, column: 5)
!2694 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 682, column: 7)
!2695 = !DILocalVariable(name: "bi", scope: !2693, file: !3, line: 685, type: !2696)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !693, line: 218, baseType: !2697)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 203, size: 256, elements: !2698)
!2698 = !{!2699, !2700, !2701, !2702}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !2697, file: !693, line: 206, baseType: !696, size: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !2697, file: !693, line: 209, baseType: !696, size: 64, offset: 64)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !2697, file: !693, line: 212, baseType: !7, size: 32, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2697, file: !693, line: 217, baseType: !706, size: 64, offset: 192)
!2703 = !DILocalVariable(name: "bb", scope: !2704, file: !3, line: 692, type: !1505)
!2704 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 691, column: 2)
!2705 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 690, column: 7)
!2706 = distinct !DILexicalBlock(scope: !2693, file: !3, line: 690, column: 7)
!2707 = !DILocation(line: 612, column: 3, scope: !2649)
!2708 = !DILocation(line: 614, column: 3, scope: !2649)
!2709 = !DILocation(line: 617, column: 17, scope: !2649)
!2710 = !DILocation(line: 617, column: 15, scope: !2649)
!2711 = !DILocation(line: 618, column: 23, scope: !2649)
!2712 = !DILocation(line: 618, column: 21, scope: !2649)
!2713 = !DILocation(line: 619, column: 28, scope: !2649)
!2714 = !DILocation(line: 619, column: 26, scope: !2649)
!2715 = !DILocation(line: 620, column: 21, scope: !2649)
!2716 = !DILocation(line: 620, column: 19, scope: !2649)
!2717 = !DILocation(line: 623, column: 27, scope: !2649)
!2718 = !DILocation(line: 624, column: 13, scope: !2649)
!2719 = !DILocation(line: 624, column: 41, scope: !2649)
!2720 = !DILocation(line: 625, column: 13, scope: !2649)
!2721 = !DILocation(line: 625, column: 33, scope: !2649)
!2722 = !DILocation(line: 626, column: 13, scope: !2649)
!2723 = !DILocation(line: 626, column: 32, scope: !2649)
!2724 = !DILocation(line: 630, column: 13, scope: !2649)
!2725 = !DILocation(line: 630, column: 25, scope: !2649)
!2726 = !DILocation(line: 631, column: 13, scope: !2649)
!2727 = !DILocation(line: 631, column: 35, scope: !2649)
!2728 = !DILocation(line: 0, scope: !2649)
!2729 = !DILocation(line: 634, column: 3, scope: !2649)
!2730 = !DILocation(line: 636, column: 3, scope: !2649)
!2731 = !DILocation(line: 637, column: 15, scope: !2649)
!2732 = !DILocation(line: 643, column: 3, scope: !2649)
!2733 = !DILocation(line: 646, column: 3, scope: !2649)
!2734 = !DILocation(line: 651, column: 3, scope: !2649)
!2735 = !DILocation(line: 654, column: 36, scope: !2649)
!2736 = !DILocation(line: 654, column: 3, scope: !2649)
!2737 = !DILocation(line: 657, column: 5, scope: !2684)
!2738 = !DILocation(line: 659, column: 5, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 659, column: 5)
!2740 = !DILocation(line: 0, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2742, file: !3, line: 660, column: 8)
!2742 = distinct !DILexicalBlock(scope: !2743, file: !3, line: 660, column: 7)
!2743 = distinct !DILexicalBlock(scope: !2739, file: !3, line: 659, column: 5)
!2744 = !DILocation(line: 659, column: 5, scope: !2743)
!2745 = !DILocation(line: 0, scope: !2739)
!2746 = !DILocation(line: 0, scope: !2684)
!2747 = !DILocation(line: 660, column: 19, scope: !2741)
!2748 = !DILocation(line: 660, column: 13, scope: !2741)
!2749 = !DILocation(line: 660, column: 39, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 660, column: 8)
!2751 = !DILocation(line: 660, column: 38, scope: !2750)
!2752 = !DILocation(line: 660, column: 8, scope: !2741)
!2753 = !DILocation(line: 661, column: 29, scope: !2750)
!2754 = !DILocation(line: 661, column: 4, scope: !2750)
!2755 = !DILocation(line: 660, column: 56, scope: !2750)
!2756 = !DILocation(line: 660, column: 8, scope: !2750)
!2757 = distinct !{!2757, !2752, !2758}
!2758 = !DILocation(line: 661, column: 43, scope: !2741)
!2759 = !DILocation(line: 0, scope: !2743)
!2760 = distinct !{!2760, !2738, !2761}
!2761 = !DILocation(line: 662, column: 7, scope: !2739)
!2762 = !DILocation(line: 663, column: 3, scope: !2649)
!2763 = !DILocation(line: 670, column: 3, scope: !2649)
!2764 = !DILocation(line: 672, column: 3, scope: !2649)
!2765 = !DILocation(line: 675, column: 45, scope: !2649)
!2766 = !DILocation(line: 675, column: 18, scope: !2649)
!2767 = !DILocation(line: 675, column: 15, scope: !2649)
!2768 = !DILocation(line: 677, column: 7, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 677, column: 7)
!2770 = !DILocation(line: 677, column: 7, scope: !2649)
!2771 = !DILocation(line: 678, column: 5, scope: !2769)
!2772 = !DILocation(line: 682, column: 8, scope: !2694)
!2773 = !DILocation(line: 682, column: 7, scope: !2649)
!2774 = !DILocation(line: 684, column: 7, scope: !2693)
!2775 = !DILocation(line: 685, column: 7, scope: !2693)
!2776 = !DILocation(line: 0, scope: !2693)
!2777 = !DILocation(line: 690, column: 7, scope: !2706)
!2778 = !DILocation(line: 690, column: 7, scope: !2705)
!2779 = !DILocation(line: 692, column: 21, scope: !2704)
!2780 = !DILocation(line: 0, scope: !2704)
!2781 = !DILocation(line: 693, column: 8, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2704, file: !3, line: 693, column: 8)
!2783 = !DILocation(line: 693, column: 27, scope: !2782)
!2784 = !DILocation(line: 694, column: 8, scope: !2782)
!2785 = !DILocation(line: 694, column: 12, scope: !2782)
!2786 = !DILocation(line: 694, column: 35, scope: !2782)
!2787 = !DILocation(line: 694, column: 41, scope: !2782)
!2788 = !DILocation(line: 694, column: 52, scope: !2782)
!2789 = !DILocation(line: 693, column: 8, scope: !2704)
!2790 = !DILocation(line: 696, column: 26, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2782, file: !3, line: 695, column: 6)
!2792 = !DILocation(line: 696, column: 43, scope: !2791)
!2793 = !DILocation(line: 696, column: 8, scope: !2791)
!2794 = !DILocation(line: 697, column: 24, scope: !2791)
!2795 = !DILocation(line: 697, column: 41, scope: !2791)
!2796 = !DILocation(line: 697, column: 59, scope: !2791)
!2797 = !DILocation(line: 697, column: 8, scope: !2791)
!2798 = !DILocation(line: 698, column: 6, scope: !2791)
!2799 = distinct !{!2799, !2777, !2800}
!2800 = !DILocation(line: 699, column: 2, scope: !2706)
!2801 = !DILocation(line: 701, column: 39, scope: !2693)
!2802 = !DILocation(line: 701, column: 7, scope: !2693)
!2803 = !DILocation(line: 702, column: 7, scope: !2693)
!2804 = !DILocation(line: 703, column: 5, scope: !2694)
!2805 = !DILocation(line: 703, column: 5, scope: !2693)
!2806 = !DILocation(line: 705, column: 29, scope: !2649)
!2807 = !DILocation(line: 706, column: 18, scope: !2649)
!2808 = !DILocation(line: 706, column: 8, scope: !2649)
!2809 = !DILocation(line: 705, column: 3, scope: !2649)
!2810 = !DILocation(line: 707, column: 29, scope: !2649)
!2811 = !DILocation(line: 708, column: 18, scope: !2649)
!2812 = !DILocation(line: 708, column: 8, scope: !2649)
!2813 = !DILocation(line: 707, column: 3, scope: !2649)
!2814 = !DILocation(line: 709, column: 29, scope: !2649)
!2815 = !DILocation(line: 710, column: 18, scope: !2649)
!2816 = !DILocation(line: 710, column: 8, scope: !2649)
!2817 = !DILocation(line: 709, column: 3, scope: !2649)
!2818 = !DILocation(line: 713, column: 7, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 713, column: 7)
!2820 = !DILocation(line: 713, column: 17, scope: !2819)
!2821 = !DILocation(line: 713, column: 21, scope: !2819)
!2822 = !DILocation(line: 713, column: 32, scope: !2819)
!2823 = !DILocation(line: 713, column: 7, scope: !2649)
!2824 = !DILocation(line: 714, column: 5, scope: !2819)
!2825 = !DILocation(line: 716, column: 3, scope: !2649)
!2826 = !DILocation(line: 719, column: 16, scope: !2649)
!2827 = !DILocation(line: 719, column: 3, scope: !2649)
!2828 = !DILocation(line: 722, column: 3, scope: !2649)
!2829 = !DILocation(line: 725, column: 3, scope: !2649)
!2830 = !DILocation(line: 727, column: 3, scope: !2649)
!2831 = !DILocation(line: 728, column: 3, scope: !2649)
!2832 = !DILocation(line: 731, column: 3, scope: !2649)
!2833 = !DILocation(line: 732, column: 19, scope: !2649)
!2834 = !DILocation(line: 735, column: 1, scope: !2649)
!2835 = !DILocation(line: 734, column: 3, scope: !2649)
!2836 = distinct !DISubprogram(name: "dump_dominator_optimization_stats", scope: !3, file: !3, line: 1033, type: !2837, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2839)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{null, !2228}
!2839 = !{!2840}
!2840 = !DILocalVariable(name: "file", arg: 1, scope: !2836, file: !3, line: 1033, type: !2228)
!2841 = !DILocation(line: 0, scope: !2836)
!2842 = !DILocation(line: 1036, column: 15, scope: !2836)
!2843 = !DILocation(line: 1035, column: 3, scope: !2836)
!2844 = !DILocation(line: 1038, column: 22, scope: !2836)
!2845 = !DILocation(line: 1037, column: 3, scope: !2836)
!2846 = !DILocation(line: 1040, column: 3, scope: !2836)
!2847 = !DILocation(line: 1042, column: 3, scope: !2836)
!2848 = !DILocation(line: 1043, column: 26, scope: !2836)
!2849 = !DILocation(line: 1043, column: 3, scope: !2836)
!2850 = !DILocation(line: 1044, column: 1, scope: !2836)
!2851 = distinct !DISubprogram(name: "htab_statistics", scope: !3, file: !3, line: 1059, type: !2852, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2854)
!2852 = !DISubroutineType(types: !2853)
!2853 = !{null, !2228, !1537}
!2854 = !{!2855, !2856}
!2855 = !DILocalVariable(name: "file", arg: 1, scope: !2851, file: !3, line: 1059, type: !2228)
!2856 = !DILocalVariable(name: "htab", arg: 2, scope: !2851, file: !3, line: 1059, type: !1537)
!2857 = !DILocation(line: 0, scope: !2851)
!2858 = !DILocation(line: 1062, column: 12, scope: !2851)
!2859 = !DILocation(line: 1063, column: 12, scope: !2851)
!2860 = !DILocation(line: 1064, column: 5, scope: !2851)
!2861 = !DILocation(line: 1061, column: 3, scope: !2851)
!2862 = !DILocation(line: 1065, column: 1, scope: !2851)
!2863 = distinct !DISubprogram(name: "debug_dominator_optimization_stats", scope: !3, file: !3, line: 1050, type: !2864, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2221)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{null}
!2866 = !DILocation(line: 1052, column: 38, scope: !2863)
!2867 = !DILocation(line: 1052, column: 3, scope: !2863)
!2868 = !DILocation(line: 1053, column: 1, scope: !2863)
!2869 = distinct !DISubprogram(name: "loop_depth_of_name", scope: !3, file: !3, line: 1292, type: !2870, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2872)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!682, !757}
!2872 = !{!2873, !2874, !2875}
!2873 = !DILocalVariable(name: "x", arg: 1, scope: !2869, file: !3, line: 1292, type: !757)
!2874 = !DILocalVariable(name: "defstmt", scope: !2869, file: !3, line: 1294, type: !1019)
!2875 = !DILocalVariable(name: "defbb", scope: !2869, file: !3, line: 1295, type: !1505)
!2876 = !DILocation(line: 0, scope: !2869)
!2877 = !DILocation(line: 1298, column: 7, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 1298, column: 7)
!2879 = !DILocation(line: 1298, column: 21, scope: !2878)
!2880 = !DILocation(line: 1298, column: 7, scope: !2869)
!2881 = !DILocation(line: 1304, column: 13, scope: !2869)
!2882 = !DILocation(line: 1305, column: 11, scope: !2869)
!2883 = !DILocation(line: 1306, column: 8, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 1306, column: 7)
!2885 = !DILocation(line: 1306, column: 7, scope: !2869)
!2886 = !DILocation(line: 1309, column: 17, scope: !2869)
!2887 = !DILocation(line: 1309, column: 3, scope: !2869)
!2888 = !DILocation(line: 1310, column: 1, scope: !2869)
!2889 = distinct !DISubprogram(name: "gimple_bb", scope: !580, file: !580, line: 1112, type: !2890, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2893)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!983, !2892}
!2892 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !690, line: 60, baseType: !2142)
!2893 = !{!2894}
!2894 = !DILocalVariable(name: "g", arg: 1, scope: !2889, file: !580, line: 1112, type: !2892)
!2895 = !DILocation(line: 0, scope: !2889)
!2896 = !DILocation(line: 1114, column: 20, scope: !2889)
!2897 = !DILocation(line: 1114, column: 3, scope: !2889)
!2898 = distinct !DISubprogram(name: "degenerate_phi_result", scope: !3, file: !3, line: 2382, type: !2899, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2901)
!2899 = !DISubroutineType(types: !2900)
!2900 = !{!757, !1019}
!2901 = !{!2902, !2903, !2904, !2905, !2906}
!2902 = !DILocalVariable(name: "phi", arg: 1, scope: !2898, file: !3, line: 2382, type: !1019)
!2903 = !DILocalVariable(name: "lhs", scope: !2898, file: !3, line: 2384, type: !757)
!2904 = !DILocalVariable(name: "val", scope: !2898, file: !3, line: 2385, type: !757)
!2905 = !DILocalVariable(name: "i", scope: !2898, file: !3, line: 2386, type: !1164)
!2906 = !DILocalVariable(name: "arg", scope: !2907, file: !3, line: 2393, type: !757)
!2907 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 2392, column: 5)
!2908 = distinct !DILexicalBlock(scope: !2909, file: !3, line: 2391, column: 3)
!2909 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 2391, column: 3)
!2910 = !DILocation(line: 0, scope: !2898)
!2911 = !DILocation(line: 2384, column: 14, scope: !2898)
!2912 = !DILocation(line: 2391, column: 8, scope: !2909)
!2913 = !DILocation(line: 2385, column: 8, scope: !2898)
!2914 = !DILocation(line: 0, scope: !2909)
!2915 = !DILocation(line: 2391, column: 19, scope: !2908)
!2916 = !DILocation(line: 2391, column: 17, scope: !2908)
!2917 = !DILocation(line: 2391, column: 3, scope: !2909)
!2918 = !DILocation(line: 2393, column: 18, scope: !2907)
!2919 = !DILocation(line: 0, scope: !2907)
!2920 = !DILocation(line: 2395, column: 15, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 2395, column: 11)
!2922 = !DILocation(line: 2395, column: 11, scope: !2907)
!2923 = !DILocation(line: 2397, column: 17, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 2397, column: 16)
!2925 = !DILocation(line: 2397, column: 16, scope: !2921)
!2926 = !DILocation(line: 2399, column: 17, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 2399, column: 16)
!2928 = !DILocation(line: 2399, column: 16, scope: !2924)
!2929 = !DILocation(line: 2401, column: 20, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2927, file: !3, line: 2401, column: 16)
!2931 = !DILocation(line: 2401, column: 16, scope: !2927)
!2932 = !DILocation(line: 2406, column: 16, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2930, file: !3, line: 2406, column: 16)
!2934 = !DILocation(line: 2406, column: 35, scope: !2933)
!2935 = !DILocation(line: 2406, column: 32, scope: !2933)
!2936 = !DILocation(line: 2407, column: 9, scope: !2933)
!2937 = !DILocation(line: 2407, column: 28, scope: !2933)
!2938 = !DILocation(line: 2408, column: 9, scope: !2933)
!2939 = !DILocation(line: 2408, column: 13, scope: !2933)
!2940 = !DILocation(line: 2406, column: 16, scope: !2930)
!2941 = !DILocation(line: 2410, column: 5, scope: !2908)
!2942 = !DILocation(line: 2391, column: 47, scope: !2908)
!2943 = !DILocation(line: 2391, column: 3, scope: !2908)
!2944 = distinct !{!2944, !2917, !2945}
!2945 = !DILocation(line: 2410, column: 5, scope: !2909)
!2946 = !DILocation(line: 2411, column: 16, scope: !2898)
!2947 = !DILocation(line: 2411, column: 13, scope: !2898)
!2948 = !DILocation(line: 2411, column: 11, scope: !2898)
!2949 = !DILocation(line: 2411, column: 3, scope: !2898)
!2950 = distinct !DISubprogram(name: "gimple_phi_result", scope: !580, file: !580, line: 3071, type: !2951, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2953)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!757, !2892}
!2953 = !{!2954}
!2954 = !DILocalVariable(name: "gs", arg: 1, scope: !2950, file: !580, line: 3071, type: !2892)
!2955 = !DILocation(line: 0, scope: !2950)
!2956 = !DILocation(line: 3074, column: 25, scope: !2950)
!2957 = !DILocation(line: 3074, column: 3, scope: !2950)
!2958 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !580, file: !580, line: 3061, type: !2959, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2961)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{!7, !2892}
!2961 = !{!2962}
!2962 = !DILocalVariable(name: "gs", arg: 1, scope: !2958, file: !580, line: 3061, type: !2892)
!2963 = !DILocation(line: 0, scope: !2958)
!2964 = !DILocation(line: 3064, column: 25, scope: !2958)
!2965 = !DILocation(line: 3064, column: 3, scope: !2958)
!2966 = distinct !DISubprogram(name: "gimple_phi_arg_def", scope: !2967, file: !2967, line: 450, type: !2968, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2970)
!2967 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!757, !1019, !1164}
!2970 = !{!2971, !2972, !2973}
!2971 = !DILocalVariable(name: "gs", arg: 1, scope: !2966, file: !2967, line: 450, type: !1019)
!2972 = !DILocalVariable(name: "index", arg: 2, scope: !2966, file: !2967, line: 450, type: !1164)
!2973 = !DILocalVariable(name: "pd", scope: !2966, file: !2967, line: 452, type: !2974)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!2975 = !DILocation(line: 0, scope: !2966)
!2976 = !DILocation(line: 452, column: 46, scope: !2966)
!2977 = !DILocation(line: 452, column: 26, scope: !2966)
!2978 = !DILocation(line: 453, column: 33, scope: !2966)
!2979 = !DILocation(line: 453, column: 10, scope: !2966)
!2980 = !DILocation(line: 453, column: 3, scope: !2966)
!2981 = distinct !DISubprogram(name: "eliminate_degenerate_phis", scope: !3, file: !3, line: 2798, type: !2163, scopeLine: 2799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2982)
!2982 = !{!2983, !2984, !2985, !2987, !2988}
!2983 = !DILocalVariable(name: "interesting_names", scope: !2981, file: !3, line: 2800, type: !689)
!2984 = !DILocalVariable(name: "interesting_names1", scope: !2981, file: !3, line: 2801, type: !689)
!2985 = !DILocalVariable(name: "i", scope: !2986, file: !3, line: 2839, type: !7)
!2986 = distinct !DILexicalBlock(scope: !2981, file: !3, line: 2838, column: 5)
!2987 = !DILocalVariable(name: "bi", scope: !2986, file: !3, line: 2840, type: !2696)
!2988 = !DILocalVariable(name: "name", scope: !2989, file: !3, line: 2849, type: !757)
!2989 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 2848, column: 2)
!2990 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 2847, column: 7)
!2991 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 2847, column: 7)
!2992 = !DILocation(line: 2805, column: 21, scope: !2981)
!2993 = !DILocation(line: 2805, column: 19, scope: !2981)
!2994 = !DILocation(line: 2817, column: 23, scope: !2981)
!2995 = !DILocation(line: 0, scope: !2981)
!2996 = !DILocation(line: 2818, column: 24, scope: !2981)
!2997 = !DILocation(line: 2820, column: 3, scope: !2981)
!2998 = !DILocation(line: 2821, column: 15, scope: !2981)
!2999 = !DILocation(line: 2831, column: 32, scope: !2981)
!3000 = !DILocation(line: 2831, column: 3, scope: !2981)
!3001 = !DILocation(line: 0, scope: !2986)
!3002 = !DILocation(line: 2837, column: 3, scope: !2981)
!3003 = !DILocation(line: 2837, column: 11, scope: !2981)
!3004 = !DILocation(line: 2839, column: 7, scope: !2986)
!3005 = !DILocation(line: 2840, column: 7, scope: !2986)
!3006 = !DILocation(line: 2845, column: 7, scope: !2986)
!3007 = !DILocation(line: 2847, column: 7, scope: !2991)
!3008 = !DILocation(line: 2847, column: 7, scope: !2990)
!3009 = !DILocation(line: 2849, column: 16, scope: !2989)
!3010 = !DILocation(line: 0, scope: !2989)
!3011 = !DILocation(line: 2853, column: 8, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 2853, column: 8)
!3013 = !DILocation(line: 2853, column: 8, scope: !2989)
!3014 = !DILocation(line: 2854, column: 31, scope: !3012)
!3015 = !DILocation(line: 2854, column: 6, scope: !3012)
!3016 = distinct !{!3016, !3007, !3017}
!3017 = !DILocation(line: 2856, column: 2, scope: !2991)
!3018 = !DILocation(line: 2857, column: 5, scope: !2981)
!3019 = distinct !{!3019, !3002, !3018}
!3020 = !DILocation(line: 2859, column: 7, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !2981, file: !3, line: 2859, column: 7)
!3022 = !DILocation(line: 2859, column: 7, scope: !2981)
!3023 = !DILocation(line: 2860, column: 5, scope: !3021)
!3024 = !DILocation(line: 2864, column: 8, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !2981, file: !3, line: 2864, column: 7)
!3026 = !DILocation(line: 2864, column: 7, scope: !2981)
!3027 = !DILocation(line: 2866, column: 7, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 2865, column: 5)
!3029 = !DILocation(line: 2867, column: 7, scope: !3028)
!3030 = !DILocation(line: 2868, column: 5, scope: !3028)
!3031 = !DILocation(line: 2870, column: 3, scope: !2981)
!3032 = !DILocation(line: 2871, column: 3, scope: !2981)
!3033 = !DILocation(line: 2872, column: 3, scope: !2981)
!3034 = distinct !DISubprogram(name: "real_avail_expr_hash", scope: !3, file: !3, line: 2333, type: !1545, scopeLine: 2334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3035)
!3035 = !{!3036}
!3036 = !DILocalVariable(name: "p", arg: 1, scope: !3034, file: !3, line: 2333, type: !1378)
!3037 = !DILocation(line: 0, scope: !3034)
!3038 = !DILocation(line: 2335, column: 45, scope: !3034)
!3039 = !DILocation(line: 2335, column: 3, scope: !3034)
!3040 = distinct !DISubprogram(name: "avail_expr_eq", scope: !3, file: !3, line: 2339, type: !1551, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3041)
!3041 = !{!3042, !3043, !3044, !3045, !3048, !3049, !3050, !3051}
!3042 = !DILocalVariable(name: "p1", arg: 1, scope: !3040, file: !3, line: 2339, type: !1378)
!3043 = !DILocalVariable(name: "p2", arg: 2, scope: !3040, file: !3, line: 2339, type: !1378)
!3044 = !DILocalVariable(name: "stmt1", scope: !3040, file: !3, line: 2341, type: !1019)
!3045 = !DILocalVariable(name: "expr1", scope: !3040, file: !3, line: 2342, type: !3046)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2079)
!3048 = !DILocalVariable(name: "stamp1", scope: !3040, file: !3, line: 2343, type: !752)
!3049 = !DILocalVariable(name: "stmt2", scope: !3040, file: !3, line: 2344, type: !1019)
!3050 = !DILocalVariable(name: "expr2", scope: !3040, file: !3, line: 2345, type: !3046)
!3051 = !DILocalVariable(name: "stamp2", scope: !3040, file: !3, line: 2346, type: !752)
!3052 = !DILocation(line: 0, scope: !3040)
!3053 = !DILocation(line: 2341, column: 54, scope: !3040)
!3054 = !DILocation(line: 2342, column: 76, scope: !3040)
!3055 = !DILocation(line: 2343, column: 76, scope: !3040)
!3056 = !DILocation(line: 2344, column: 54, scope: !3040)
!3057 = !DILocation(line: 2345, column: 76, scope: !3040)
!3058 = !DILocation(line: 2346, column: 76, scope: !3040)
!3059 = !DILocation(line: 2349, column: 14, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 2349, column: 7)
!3061 = !DILocation(line: 2349, column: 7, scope: !3040)
!3062 = !DILocation(line: 2358, column: 43, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 2358, column: 7)
!3064 = !DILocation(line: 2359, column: 46, scope: !3063)
!3065 = !DILocation(line: 2359, column: 7, scope: !3063)
!3066 = !DILocation(line: 2358, column: 7, scope: !3040)
!3067 = !DILocation(line: 2364, column: 7, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 2364, column: 7)
!3069 = !DILocation(line: 2365, column: 7, scope: !3068)
!3070 = !DILocation(line: 2365, column: 37, scope: !3068)
!3071 = !DILocation(line: 2365, column: 50, scope: !3068)
!3072 = !DILocation(line: 2365, column: 10, scope: !3068)
!3073 = !DILocation(line: 2364, column: 7, scope: !3040)
!3074 = !DILocation(line: 2368, column: 16, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 2366, column: 5)
!3076 = !DILocation(line: 2368, column: 24, scope: !3075)
!3077 = !DILocation(line: 2369, column: 12, scope: !3075)
!3078 = !DILocation(line: 2369, column: 20, scope: !3075)
!3079 = !DILocation(line: 2369, column: 8, scope: !3075)
!3080 = !DILocation(line: 2368, column: 7, scope: !3075)
!3081 = !DILocation(line: 2373, column: 1, scope: !3040)
!3082 = distinct !DISubprogram(name: "free_expr_hash_elt", scope: !3, file: !3, line: 549, type: !1556, scopeLine: 550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3083)
!3083 = !{!3084, !3085}
!3084 = !DILocalVariable(name: "elt", arg: 1, scope: !3082, file: !3, line: 549, type: !686)
!3085 = !DILocalVariable(name: "element", scope: !3082, file: !3, line: 551, type: !2111)
!3086 = !DILocation(line: 0, scope: !3082)
!3087 = !DILocation(line: 553, column: 21, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 553, column: 7)
!3089 = !DILocation(line: 553, column: 26, scope: !3088)
!3090 = !DILocation(line: 553, column: 7, scope: !3082)
!3091 = !DILocation(line: 554, column: 34, scope: !3088)
!3092 = !DILocation(line: 554, column: 5, scope: !3088)
!3093 = !DILocation(line: 556, column: 3, scope: !3082)
!3094 = !DILocation(line: 557, column: 1, scope: !3082)
!3095 = distinct !DISubprogram(name: "VEC_expr_hash_elt_t_heap_alloc", scope: !3, file: !3, line: 126, type: !3096, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3098)
!3096 = !DISubroutineType(types: !3097)
!3097 = !{!2112, !682}
!3098 = !{!3099}
!3099 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3095, file: !3, line: 126, type: !682)
!3100 = !DILocation(line: 0, scope: !3095)
!3101 = !DILocation(line: 126, column: 1, scope: !3095)
!3102 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !318, file: !318, line: 184, type: !3103, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3105)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!2125, !682}
!3105 = !{!3106}
!3106 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3102, file: !318, line: 184, type: !682)
!3107 = !DILocation(line: 0, scope: !3102)
!3108 = !DILocation(line: 184, column: 1, scope: !3102)
!3109 = distinct !DISubprogram(name: "dom_opt_enter_block", scope: !3, file: !3, line: 1634, type: !2663, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3110)
!3110 = !{!3111, !3112, !3113}
!3111 = !DILocalVariable(name: "walk_data", arg: 1, scope: !3109, file: !3, line: 1634, type: !2660)
!3112 = !DILocalVariable(name: "bb", arg: 2, scope: !3109, file: !3, line: 1635, type: !1505)
!3113 = !DILocalVariable(name: "gsi", scope: !3109, file: !3, line: 1637, type: !2685)
!3114 = !DILocation(line: 0, scope: !3109)
!3115 = !DILocation(line: 1637, column: 3, scope: !3109)
!3116 = !DILocation(line: 1639, column: 7, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 1639, column: 7)
!3118 = !DILocation(line: 1639, column: 17, scope: !3117)
!3119 = !DILocation(line: 1639, column: 21, scope: !3117)
!3120 = !DILocation(line: 1639, column: 32, scope: !3117)
!3121 = !DILocation(line: 1639, column: 7, scope: !3109)
!3122 = !DILocation(line: 1640, column: 61, scope: !3117)
!3123 = !DILocation(line: 1640, column: 5, scope: !3117)
!3124 = !DILocation(line: 1644, column: 3, scope: !3109)
!3125 = !DILocation(line: 1645, column: 3, scope: !3109)
!3126 = !DILocation(line: 1647, column: 3, scope: !3109)
!3127 = !DILocation(line: 1650, column: 3, scope: !3109)
!3128 = !DILocation(line: 1652, column: 14, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 1652, column: 3)
!3130 = !DILocation(line: 1652, column: 8, scope: !3129)
!3131 = !DILocation(line: 1652, column: 34, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 1652, column: 3)
!3133 = !DILocation(line: 1652, column: 33, scope: !3132)
!3134 = !DILocation(line: 1652, column: 3, scope: !3129)
!3135 = !DILocation(line: 1653, column: 5, scope: !3132)
!3136 = !DILocation(line: 1652, column: 51, scope: !3132)
!3137 = !DILocation(line: 1652, column: 3, scope: !3132)
!3138 = distinct !{!3138, !3134, !3139}
!3139 = !DILocation(line: 1653, column: 27, scope: !3129)
!3140 = !DILocation(line: 1656, column: 3, scope: !3109)
!3141 = !DILocation(line: 1657, column: 3, scope: !3109)
!3142 = !DILocation(line: 1658, column: 1, scope: !3109)
!3143 = distinct !DISubprogram(name: "dom_opt_leave_block", scope: !3, file: !3, line: 1665, type: !2663, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3144)
!3144 = !{!3145, !3146, !3147, !3148, !3152, !3153, !3156, !3157, !3160, !3161, !3162, !3165, !3166, !3169, !3170}
!3145 = !DILocalVariable(name: "walk_data", arg: 1, scope: !3143, file: !3, line: 1665, type: !2660)
!3146 = !DILocalVariable(name: "bb", arg: 2, scope: !3143, file: !3, line: 1665, type: !1505)
!3147 = !DILocalVariable(name: "last", scope: !3143, file: !3, line: 1667, type: !1019)
!3148 = !DILocalVariable(name: "true_edge", scope: !3149, file: !3, line: 1685, type: !999)
!3149 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1684, column: 5)
!3150 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 1679, column: 12)
!3151 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 1673, column: 7)
!3152 = !DILocalVariable(name: "false_edge", scope: !3149, file: !3, line: 1685, type: !999)
!3153 = !DILocalVariable(name: "edge_info", scope: !3154, file: !3, line: 1693, type: !2130)
!3154 = distinct !DILexicalBlock(scope: !3155, file: !3, line: 1692, column: 2)
!3155 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1691, column: 11)
!3156 = !DILocalVariable(name: "i", scope: !3154, file: !3, line: 1694, type: !7)
!3157 = !DILocalVariable(name: "cond_equivalences", scope: !3158, file: !3, line: 1708, type: !2136)
!3158 = distinct !DILexicalBlock(scope: !3159, file: !3, line: 1707, column: 6)
!3159 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 1706, column: 8)
!3160 = !DILocalVariable(name: "lhs", scope: !3158, file: !3, line: 1709, type: !757)
!3161 = !DILocalVariable(name: "rhs", scope: !3158, file: !3, line: 1710, type: !757)
!3162 = !DILocalVariable(name: "edge_info", scope: !3163, file: !3, line: 1733, type: !2130)
!3163 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 1732, column: 2)
!3164 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1731, column: 11)
!3165 = !DILocalVariable(name: "i", scope: !3163, file: !3, line: 1734, type: !7)
!3166 = !DILocalVariable(name: "cond_equivalences", scope: !3167, file: !3, line: 1743, type: !2136)
!3167 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1742, column: 6)
!3168 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 1741, column: 8)
!3169 = !DILocalVariable(name: "lhs", scope: !3167, file: !3, line: 1744, type: !757)
!3170 = !DILocalVariable(name: "rhs", scope: !3167, file: !3, line: 1745, type: !757)
!3171 = !DILocation(line: 0, scope: !3143)
!3172 = !DILocation(line: 1673, column: 7, scope: !3151)
!3173 = !DILocation(line: 1674, column: 7, scope: !3151)
!3174 = !DILocation(line: 1674, column: 11, scope: !3151)
!3175 = !DILocation(line: 1674, column: 34, scope: !3151)
!3176 = !DILocation(line: 1674, column: 40, scope: !3151)
!3177 = !DILocation(line: 1674, column: 57, scope: !3151)
!3178 = !DILocation(line: 1675, column: 7, scope: !3151)
!3179 = !DILocation(line: 1675, column: 40, scope: !3151)
!3180 = !DILocation(line: 1675, column: 10, scope: !3151)
!3181 = !DILocation(line: 1673, column: 7, scope: !3143)
!3182 = !DILocation(line: 1677, column: 42, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 1676, column: 5)
!3184 = !DILocation(line: 1677, column: 7, scope: !3183)
!3185 = !DILocation(line: 1678, column: 5, scope: !3183)
!3186 = !DILocation(line: 1679, column: 20, scope: !3150)
!3187 = !DILocation(line: 1679, column: 18, scope: !3150)
!3188 = !DILocation(line: 1680, column: 5, scope: !3150)
!3189 = !DILocation(line: 1680, column: 8, scope: !3150)
!3190 = !DILocation(line: 1680, column: 27, scope: !3150)
!3191 = !DILocation(line: 1681, column: 5, scope: !3150)
!3192 = !DILocation(line: 1681, column: 8, scope: !3150)
!3193 = !DILocation(line: 1681, column: 31, scope: !3150)
!3194 = !DILocation(line: 1682, column: 5, scope: !3150)
!3195 = !DILocation(line: 1682, column: 9, scope: !3150)
!3196 = !DILocation(line: 1682, column: 28, scope: !3150)
!3197 = !DILocation(line: 1682, column: 34, scope: !3150)
!3198 = !DILocation(line: 1682, column: 51, scope: !3150)
!3199 = !DILocation(line: 1683, column: 5, scope: !3150)
!3200 = !DILocation(line: 1683, column: 9, scope: !3150)
!3201 = !DILocation(line: 1683, column: 28, scope: !3150)
!3202 = !DILocation(line: 1683, column: 34, scope: !3150)
!3203 = !DILocation(line: 1683, column: 51, scope: !3150)
!3204 = !DILocation(line: 1679, column: 12, scope: !3151)
!3205 = !DILocation(line: 1685, column: 7, scope: !3149)
!3206 = !DILocation(line: 0, scope: !3149)
!3207 = !DILocation(line: 1687, column: 7, scope: !3149)
!3208 = !DILocation(line: 1691, column: 41, scope: !3155)
!3209 = !DILocation(line: 1691, column: 52, scope: !3155)
!3210 = !DILocation(line: 1691, column: 11, scope: !3155)
!3211 = !DILocation(line: 1691, column: 11, scope: !3149)
!3212 = !DILocation(line: 1699, column: 11, scope: !3154)
!3213 = !DILocation(line: 1700, column: 4, scope: !3154)
!3214 = !DILocation(line: 1702, column: 37, scope: !3154)
!3215 = !DILocation(line: 1702, column: 48, scope: !3154)
!3216 = !DILocation(line: 0, scope: !3154)
!3217 = !DILocation(line: 1706, column: 8, scope: !3159)
!3218 = !DILocation(line: 1706, column: 8, scope: !3154)
!3219 = !DILocation(line: 1708, column: 64, scope: !3158)
!3220 = !DILocation(line: 0, scope: !3158)
!3221 = !DILocation(line: 1709, column: 30, scope: !3158)
!3222 = !DILocation(line: 1710, column: 30, scope: !3158)
!3223 = !DILocation(line: 1713, column: 12, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 1713, column: 12)
!3225 = !DILocation(line: 1713, column: 16, scope: !3224)
!3226 = !DILocation(line: 1713, column: 19, scope: !3224)
!3227 = !DILocation(line: 1713, column: 35, scope: !3224)
!3228 = !DILocation(line: 1713, column: 12, scope: !3158)
!3229 = !DILocation(line: 1714, column: 3, scope: !3224)
!3230 = !DILocation(line: 1718, column: 12, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 1718, column: 12)
!3232 = !DILocation(line: 1718, column: 12, scope: !3158)
!3233 = !DILocation(line: 0, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 1719, column: 3)
!3235 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 1719, column: 3)
!3236 = !DILocation(line: 1719, column: 3, scope: !3235)
!3237 = !DILocation(line: 0, scope: !3235)
!3238 = !DILocation(line: 1719, column: 30, scope: !3234)
!3239 = !DILocation(line: 1719, column: 17, scope: !3234)
!3240 = !DILocation(line: 1720, column: 33, scope: !3234)
!3241 = !DILocation(line: 1720, column: 19, scope: !3234)
!3242 = !DILocation(line: 1719, column: 54, scope: !3234)
!3243 = !DILocation(line: 1719, column: 3, scope: !3234)
!3244 = distinct !{!3244, !3236, !3245}
!3245 = !DILocation(line: 1720, column: 53, scope: !3235)
!3246 = !DILocation(line: 1723, column: 39, scope: !3154)
!3247 = !DILocation(line: 1723, column: 4, scope: !3154)
!3248 = !DILocation(line: 1727, column: 4, scope: !3154)
!3249 = !DILocation(line: 1728, column: 2, scope: !3154)
!3250 = !DILocation(line: 1731, column: 41, scope: !3164)
!3251 = !DILocation(line: 1731, column: 53, scope: !3164)
!3252 = !DILocation(line: 1731, column: 11, scope: !3164)
!3253 = !DILocation(line: 1731, column: 11, scope: !3149)
!3254 = !DILocation(line: 1736, column: 4, scope: !3163)
!3255 = !DILocation(line: 1737, column: 37, scope: !3163)
!3256 = !DILocation(line: 1737, column: 49, scope: !3163)
!3257 = !DILocation(line: 0, scope: !3163)
!3258 = !DILocation(line: 1741, column: 8, scope: !3168)
!3259 = !DILocation(line: 1741, column: 8, scope: !3163)
!3260 = !DILocation(line: 1743, column: 64, scope: !3167)
!3261 = !DILocation(line: 0, scope: !3167)
!3262 = !DILocation(line: 1744, column: 30, scope: !3167)
!3263 = !DILocation(line: 1745, column: 30, scope: !3167)
!3264 = !DILocation(line: 1748, column: 12, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 1748, column: 12)
!3266 = !DILocation(line: 1748, column: 16, scope: !3265)
!3267 = !DILocation(line: 1748, column: 19, scope: !3265)
!3268 = !DILocation(line: 1748, column: 35, scope: !3265)
!3269 = !DILocation(line: 1748, column: 12, scope: !3167)
!3270 = !DILocation(line: 1749, column: 3, scope: !3265)
!3271 = !DILocation(line: 1753, column: 12, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 1753, column: 12)
!3273 = !DILocation(line: 1753, column: 12, scope: !3167)
!3274 = !DILocation(line: 0, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !3, line: 1754, column: 3)
!3276 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 1754, column: 3)
!3277 = !DILocation(line: 1754, column: 3, scope: !3276)
!3278 = !DILocation(line: 0, scope: !3276)
!3279 = !DILocation(line: 1754, column: 30, scope: !3275)
!3280 = !DILocation(line: 1754, column: 17, scope: !3275)
!3281 = !DILocation(line: 1755, column: 33, scope: !3275)
!3282 = !DILocation(line: 1755, column: 19, scope: !3275)
!3283 = !DILocation(line: 1754, column: 54, scope: !3275)
!3284 = !DILocation(line: 1754, column: 3, scope: !3275)
!3285 = distinct !{!3285, !3277, !3286}
!3286 = !DILocation(line: 1755, column: 53, scope: !3276)
!3287 = !DILocation(line: 1759, column: 39, scope: !3163)
!3288 = !DILocation(line: 1759, column: 4, scope: !3163)
!3289 = !DILocation(line: 1764, column: 2, scope: !3163)
!3290 = !DILocation(line: 1765, column: 5, scope: !3150)
!3291 = !DILocation(line: 1765, column: 5, scope: !3149)
!3292 = !DILocation(line: 1767, column: 3, scope: !3143)
!3293 = !DILocation(line: 1768, column: 3, scope: !3143)
!3294 = !DILocation(line: 1769, column: 1, scope: !3143)
!3295 = distinct !DISubprogram(name: "gsi_start_bb", scope: !580, file: !580, line: 4418, type: !3296, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3298)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!2685, !1505}
!3298 = !{!3299, !3300, !3301}
!3299 = !DILocalVariable(name: "bb", arg: 1, scope: !3295, file: !580, line: 4418, type: !1505)
!3300 = !DILocalVariable(name: "i", scope: !3295, file: !580, line: 4420, type: !2685)
!3301 = !DILocalVariable(name: "seq", scope: !3295, file: !580, line: 4421, type: !1009)
!3302 = !DILocation(line: 0, scope: !3295)
!3303 = !DILocation(line: 4420, column: 24, scope: !3295)
!3304 = !DILocation(line: 4423, column: 9, scope: !3295)
!3305 = !DILocation(line: 4424, column: 11, scope: !3295)
!3306 = !DILocation(line: 4424, column: 5, scope: !3295)
!3307 = !DILocation(line: 4424, column: 9, scope: !3295)
!3308 = !DILocation(line: 4425, column: 5, scope: !3295)
!3309 = !DILocation(line: 4425, column: 9, scope: !3295)
!3310 = !DILocation(line: 4426, column: 5, scope: !3295)
!3311 = !DILocation(line: 4426, column: 8, scope: !3295)
!3312 = !DILocation(line: 4429, column: 1, scope: !3295)
!3313 = distinct !DISubprogram(name: "gsi_end_p", scope: !580, file: !580, line: 4467, type: !3314, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3316)
!3314 = !DISubroutineType(types: !3315)
!3315 = !{!681, !2685}
!3316 = !{!3317}
!3317 = !DILocalVariable(name: "i", arg: 1, scope: !3313, file: !580, line: 4467, type: !2685)
!3318 = !DILocation(line: 4467, column: 33, scope: !3313)
!3319 = !DILocation(line: 4469, column: 12, scope: !3313)
!3320 = !DILocation(line: 4469, column: 16, scope: !3313)
!3321 = !DILocation(line: 4469, column: 10, scope: !3313)
!3322 = !DILocation(line: 4469, column: 3, scope: !3313)
!3323 = distinct !DISubprogram(name: "update_stmt_if_modified", scope: !580, file: !580, line: 1468, type: !3324, scopeLine: 1469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3326)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{null, !1019}
!3326 = !{!3327}
!3327 = !DILocalVariable(name: "s", arg: 1, scope: !3323, file: !580, line: 1468, type: !1019)
!3328 = !DILocation(line: 0, scope: !3323)
!3329 = !DILocation(line: 1470, column: 7, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3323, file: !580, line: 1470, column: 7)
!3331 = !DILocation(line: 1470, column: 7, scope: !3323)
!3332 = !DILocation(line: 1471, column: 5, scope: !3330)
!3333 = !DILocation(line: 1472, column: 1, scope: !3323)
!3334 = distinct !DISubprogram(name: "gsi_stmt", scope: !580, file: !580, line: 4501, type: !3335, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3337)
!3335 = !DISubroutineType(types: !3336)
!3336 = !{!1019, !2685}
!3337 = !{!3338}
!3338 = !DILocalVariable(name: "i", arg: 1, scope: !3334, file: !580, line: 4501, type: !2685)
!3339 = !DILocation(line: 4501, column: 32, scope: !3334)
!3340 = !DILocation(line: 4503, column: 12, scope: !3334)
!3341 = !DILocation(line: 4503, column: 17, scope: !3334)
!3342 = !DILocation(line: 4503, column: 3, scope: !3334)
!3343 = distinct !DISubprogram(name: "gsi_next", scope: !580, file: !580, line: 4485, type: !3344, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3347)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{null, !3346}
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!3347 = !{!3348}
!3348 = !DILocalVariable(name: "i", arg: 1, scope: !3343, file: !580, line: 4485, type: !3346)
!3349 = !DILocation(line: 0, scope: !3343)
!3350 = !DILocation(line: 4487, column: 15, scope: !3343)
!3351 = !DILocation(line: 4487, column: 20, scope: !3343)
!3352 = !DILocation(line: 4487, column: 10, scope: !3343)
!3353 = !DILocation(line: 4488, column: 1, scope: !3343)
!3354 = distinct !DISubprogram(name: "free_all_edge_infos", scope: !3, file: !3, line: 580, type: !2864, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3355)
!3355 = !{!3356, !3357, !3364, !3365}
!3356 = !DILocalVariable(name: "bb", scope: !3354, file: !3, line: 582, type: !1505)
!3357 = !DILocalVariable(name: "ei", scope: !3354, file: !3, line: 583, type: !3358)
!3358 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !526, line: 682, baseType: !3359)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !526, line: 679, size: 128, elements: !3360)
!3360 = !{!3361, !3362}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3359, file: !526, line: 680, baseType: !7, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3359, file: !526, line: 681, baseType: !3363, size: 64, offset: 64)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!3364 = !DILocalVariable(name: "e", scope: !3354, file: !3, line: 584, type: !999)
!3365 = !DILocalVariable(name: "edge_info", scope: !3366, file: !3, line: 590, type: !2130)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 589, column: 9)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 588, column: 7)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 588, column: 7)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 587, column: 5)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 586, column: 3)
!3371 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 586, column: 3)
!3372 = !DILocation(line: 583, column: 3, scope: !3354)
!3373 = !DILocation(line: 584, column: 3, scope: !3354)
!3374 = !DILocation(line: 586, column: 3, scope: !3371)
!3375 = !DILocation(line: 0, scope: !3368)
!3376 = !DILocation(line: 0, scope: !3367)
!3377 = !DILocation(line: 586, column: 3, scope: !3370)
!3378 = !DILocation(line: 0, scope: !3371)
!3379 = !DILocation(line: 0, scope: !3354)
!3380 = !DILocation(line: 588, column: 7, scope: !3368)
!3381 = !DILocation(line: 588, column: 7, scope: !3367)
!3382 = !DILocation(line: 590, column: 54, scope: !3366)
!3383 = !DILocation(line: 590, column: 57, scope: !3366)
!3384 = !DILocation(line: 0, scope: !3366)
!3385 = !DILocation(line: 592, column: 8, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 592, column: 8)
!3387 = !DILocation(line: 592, column: 8, scope: !3366)
!3388 = !DILocation(line: 594, column: 23, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 594, column: 12)
!3390 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 593, column: 6)
!3391 = !DILocation(line: 594, column: 12, scope: !3389)
!3392 = !DILocation(line: 594, column: 12, scope: !3390)
!3393 = !DILocation(line: 595, column: 3, scope: !3389)
!3394 = !DILocation(line: 596, column: 14, scope: !3390)
!3395 = !DILocation(line: 596, column: 8, scope: !3390)
!3396 = !DILocation(line: 597, column: 8, scope: !3390)
!3397 = !DILocation(line: 597, column: 11, scope: !3390)
!3398 = !DILocation(line: 597, column: 15, scope: !3390)
!3399 = !DILocation(line: 598, column: 6, scope: !3390)
!3400 = distinct !{!3400, !3380, !3401}
!3401 = !DILocation(line: 599, column: 2, scope: !3368)
!3402 = !DILocation(line: 0, scope: !3370)
!3403 = distinct !{!3403, !3374, !3404}
!3404 = !DILocation(line: 600, column: 5, scope: !3371)
!3405 = !DILocation(line: 601, column: 1, scope: !3354)
!3406 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !693, file: !693, line: 224, type: !3407, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3414)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{null, !3409, !3410, !7, !3413}
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !690, line: 48, baseType: !3411)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3414 = !{!3415, !3416, !3417, !3418}
!3415 = !DILocalVariable(name: "bi", arg: 1, scope: !3406, file: !693, line: 224, type: !3409)
!3416 = !DILocalVariable(name: "map", arg: 2, scope: !3406, file: !693, line: 224, type: !3410)
!3417 = !DILocalVariable(name: "start_bit", arg: 3, scope: !3406, file: !693, line: 225, type: !7)
!3418 = !DILocalVariable(name: "bit_no", arg: 4, scope: !3406, file: !693, line: 225, type: !3413)
!3419 = !DILocation(line: 0, scope: !3406)
!3420 = !DILocation(line: 227, column: 19, scope: !3406)
!3421 = !DILocation(line: 227, column: 12, scope: !3406)
!3422 = !DILocation(line: 228, column: 7, scope: !3406)
!3423 = !DILocation(line: 228, column: 12, scope: !3406)
!3424 = !DILocation(line: 0, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !693, line: 233, column: 11)
!3426 = distinct !DILexicalBlock(scope: !3406, file: !693, line: 232, column: 5)
!3427 = !DILocation(line: 231, column: 3, scope: !3406)
!3428 = !DILocation(line: 233, column: 12, scope: !3425)
!3429 = !DILocation(line: 233, column: 11, scope: !3426)
!3430 = !DILocation(line: 235, column: 13, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3425, file: !693, line: 234, column: 2)
!3432 = !DILocation(line: 236, column: 4, scope: !3431)
!3433 = !DILocation(line: 239, column: 11, scope: !3426)
!3434 = distinct !{!3434, !3427, !3435}
!3435 = !DILocation(line: 242, column: 5, scope: !3406)
!3436 = !DILocation(line: 245, column: 11, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3406, file: !693, line: 245, column: 7)
!3438 = !DILocation(line: 245, column: 17, scope: !3437)
!3439 = !DILocation(line: 245, column: 22, scope: !3437)
!3440 = !DILocation(line: 245, column: 7, scope: !3406)
!3441 = !DILocation(line: 246, column: 27, scope: !3437)
!3442 = !DILocation(line: 246, column: 32, scope: !3437)
!3443 = !DILocation(line: 246, column: 5, scope: !3437)
!3444 = !DILocation(line: 249, column: 7, scope: !3406)
!3445 = !DILocation(line: 249, column: 15, scope: !3406)
!3446 = !DILocation(line: 250, column: 14, scope: !3406)
!3447 = !DILocation(line: 251, column: 7, scope: !3406)
!3448 = !DILocation(line: 251, column: 12, scope: !3406)
!3449 = !DILocation(line: 257, column: 16, scope: !3406)
!3450 = !DILocation(line: 257, column: 13, scope: !3406)
!3451 = !DILocation(line: 259, column: 11, scope: !3406)
!3452 = !DILocation(line: 260, column: 1, scope: !3406)
!3453 = distinct !DISubprogram(name: "bmp_iter_set", scope: !693, file: !693, line: 393, type: !3454, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3456)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!681, !3409, !3413}
!3456 = !{!3457, !3458, !3459}
!3457 = !DILocalVariable(name: "bi", arg: 1, scope: !3453, file: !693, line: 393, type: !3409)
!3458 = !DILocalVariable(name: "bit_no", arg: 2, scope: !3453, file: !693, line: 393, type: !3413)
!3459 = !DILabel(scope: !3460, name: "next_bit", file: !693, line: 398)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !693, line: 397, column: 5)
!3461 = distinct !DILexicalBlock(scope: !3453, file: !693, line: 396, column: 7)
!3462 = !DILocation(line: 0, scope: !3453)
!3463 = !DILocation(line: 396, column: 11, scope: !3461)
!3464 = !DILocation(line: 396, column: 7, scope: !3461)
!3465 = !DILocation(line: 396, column: 7, scope: !3453)
!3466 = !DILocation(line: 419, column: 15, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !693, line: 418, column: 2)
!3468 = distinct !DILexicalBlock(scope: !3453, file: !693, line: 415, column: 5)
!3469 = !DILocation(line: 399, column: 7, scope: !3460)
!3470 = !DILocation(line: 398, column: 5, scope: !3460)
!3471 = !DILocation(line: 399, column: 20, scope: !3460)
!3472 = !DILocation(line: 399, column: 25, scope: !3460)
!3473 = !DILocation(line: 399, column: 14, scope: !3460)
!3474 = !DILocation(line: 401, column: 13, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3460, file: !693, line: 400, column: 2)
!3476 = !DILocation(line: 402, column: 12, scope: !3475)
!3477 = distinct !{!3477, !3469, !3478}
!3478 = !DILocation(line: 403, column: 2, scope: !3460)
!3479 = !DILocation(line: 410, column: 15, scope: !3453)
!3480 = !DILocation(line: 410, column: 42, scope: !3453)
!3481 = !DILocation(line: 411, column: 26, scope: !3453)
!3482 = !DILocation(line: 410, column: 11, scope: !3453)
!3483 = !DILocation(line: 412, column: 7, scope: !3453)
!3484 = !DILocation(line: 412, column: 14, scope: !3453)
!3485 = !DILocation(line: 0, scope: !3468)
!3486 = !DILocation(line: 414, column: 3, scope: !3453)
!3487 = !DILocation(line: 417, column: 7, scope: !3468)
!3488 = !DILocation(line: 417, column: 18, scope: !3468)
!3489 = !DILocation(line: 417, column: 26, scope: !3468)
!3490 = !DILocation(line: 419, column: 13, scope: !3467)
!3491 = !DILocation(line: 420, column: 8, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3467, file: !693, line: 420, column: 8)
!3493 = !DILocation(line: 420, column: 8, scope: !3467)
!3494 = !DILocation(line: 422, column: 12, scope: !3467)
!3495 = !DILocation(line: 423, column: 15, scope: !3467)
!3496 = distinct !{!3496, !3487, !3497}
!3497 = !DILocation(line: 424, column: 2, scope: !3468)
!3498 = !DILocation(line: 427, column: 28, scope: !3468)
!3499 = !DILocation(line: 427, column: 16, scope: !3468)
!3500 = !DILocation(line: 428, column: 12, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3468, file: !693, line: 428, column: 11)
!3502 = !DILocation(line: 428, column: 11, scope: !3468)
!3503 = !DILocation(line: 430, column: 27, scope: !3468)
!3504 = !DILocation(line: 430, column: 32, scope: !3468)
!3505 = !DILocation(line: 430, column: 15, scope: !3468)
!3506 = !DILocation(line: 431, column: 19, scope: !3468)
!3507 = distinct !{!3507, !3486, !3508}
!3508 = !DILocation(line: 432, column: 5, scope: !3453)
!3509 = !DILocation(line: 433, column: 1, scope: !3453)
!3510 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !526, file: !526, line: 281, type: !3511, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3515)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!1505, !3513, !7}
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!3515 = !{!3516, !3517}
!3516 = !DILocalVariable(name: "vec_", arg: 1, scope: !3510, file: !526, line: 281, type: !3513)
!3517 = !DILocalVariable(name: "ix_", arg: 2, scope: !3510, file: !526, line: 281, type: !7)
!3518 = !DILocation(line: 0, scope: !3510)
!3519 = !DILocation(line: 281, column: 1, scope: !3510)
!3520 = distinct !DISubprogram(name: "single_succ_p", scope: !526, file: !526, line: 626, type: !3521, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3526)
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!681, !3523}
!3523 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !690, line: 112, baseType: !3524)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!3526 = !{!3527}
!3527 = !DILocalVariable(name: "bb", arg: 1, scope: !3520, file: !526, line: 626, type: !3523)
!3528 = !DILocation(line: 0, scope: !3520)
!3529 = !DILocation(line: 628, column: 10, scope: !3520)
!3530 = !DILocation(line: 628, column: 33, scope: !3520)
!3531 = !DILocation(line: 628, column: 3, scope: !3520)
!3532 = distinct !DISubprogram(name: "single_succ_edge", scope: !526, file: !526, line: 643, type: !3533, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3535)
!3533 = !DISubroutineType(types: !3534)
!3534 = !{!999, !3523}
!3535 = !{!3536}
!3536 = !DILocalVariable(name: "bb", arg: 1, scope: !3532, file: !526, line: 643, type: !3523)
!3537 = !DILocation(line: 0, scope: !3532)
!3538 = !DILocation(line: 645, column: 3, scope: !3532)
!3539 = !DILocation(line: 646, column: 10, scope: !3532)
!3540 = !DILocation(line: 646, column: 3, scope: !3532)
!3541 = distinct !DISubprogram(name: "single_succ", scope: !526, file: !526, line: 663, type: !3542, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3544)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{!1505, !3523}
!3544 = !{!3545}
!3545 = !DILocalVariable(name: "bb", arg: 1, scope: !3541, file: !526, line: 663, type: !3523)
!3546 = !DILocation(line: 0, scope: !3541)
!3547 = !DILocation(line: 665, column: 10, scope: !3541)
!3548 = !DILocation(line: 665, column: 33, scope: !3541)
!3549 = !DILocation(line: 665, column: 3, scope: !3541)
!3550 = distinct !DISubprogram(name: "bmp_iter_next", scope: !693, file: !693, line: 382, type: !3551, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3553)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !3409, !3413}
!3553 = !{!3554, !3555}
!3554 = !DILocalVariable(name: "bi", arg: 1, scope: !3550, file: !693, line: 382, type: !3409)
!3555 = !DILocalVariable(name: "bit_no", arg: 2, scope: !3550, file: !693, line: 382, type: !3413)
!3556 = !DILocation(line: 0, scope: !3550)
!3557 = !DILocation(line: 384, column: 7, scope: !3550)
!3558 = !DILocation(line: 384, column: 12, scope: !3550)
!3559 = !DILocation(line: 385, column: 11, scope: !3550)
!3560 = !DILocation(line: 386, column: 1, scope: !3550)
!3561 = distinct !DISubprogram(name: "VEC_expr_hash_elt_t_heap_free", scope: !3, file: !3, line: 126, type: !3562, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3565)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !3564}
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!3565 = !{!3566}
!3566 = !DILocalVariable(name: "vec_", arg: 1, scope: !3561, file: !3, line: 126, type: !3564)
!3567 = !DILocation(line: 0, scope: !3561)
!3568 = !DILocation(line: 126, column: 1, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 126, column: 1)
!3570 = !DILocation(line: 126, column: 1, scope: !3561)
!3571 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !318, file: !318, line: 184, type: !3572, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3575)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{null, !3574}
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!3575 = !{!3576}
!3576 = !DILocalVariable(name: "vec_", arg: 1, scope: !3571, file: !318, line: 184, type: !3574)
!3577 = !DILocation(line: 0, scope: !3571)
!3578 = !DILocation(line: 184, column: 1, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3571, file: !318, line: 184, column: 1)
!3580 = !DILocation(line: 184, column: 1, scope: !3571)
!3581 = distinct !DISubprogram(name: "hashable_expr_equal_p", scope: !3, file: !3, line: 335, type: !3582, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3584)
!3582 = !DISubroutineType(types: !3583)
!3583 = !{!681, !3046, !3046}
!3584 = !{!3585, !3586, !3587, !3588, !3589}
!3585 = !DILocalVariable(name: "expr0", arg: 1, scope: !3581, file: !3, line: 335, type: !3046)
!3586 = !DILocalVariable(name: "expr1", arg: 2, scope: !3581, file: !3, line: 336, type: !3046)
!3587 = !DILocalVariable(name: "type0", scope: !3581, file: !3, line: 338, type: !757)
!3588 = !DILocalVariable(name: "type1", scope: !3581, file: !3, line: 339, type: !757)
!3589 = !DILocalVariable(name: "i", scope: !3590, file: !3, line: 397, type: !1164)
!3590 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 396, column: 7)
!3591 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 359, column: 5)
!3592 = !DILocation(line: 0, scope: !3581)
!3593 = !DILocation(line: 338, column: 23, scope: !3581)
!3594 = !DILocation(line: 339, column: 23, scope: !3581)
!3595 = !DILocation(line: 342, column: 14, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 342, column: 7)
!3597 = !DILocation(line: 342, column: 37, scope: !3596)
!3598 = !DILocation(line: 342, column: 28, scope: !3596)
!3599 = !DILocation(line: 342, column: 7, scope: !3581)
!3600 = !DILocation(line: 347, column: 13, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 347, column: 7)
!3602 = !DILocation(line: 348, column: 7, scope: !3601)
!3603 = !DILocation(line: 348, column: 11, scope: !3601)
!3604 = !DILocation(line: 348, column: 29, scope: !3601)
!3605 = !DILocation(line: 349, column: 4, scope: !3601)
!3606 = !DILocation(line: 349, column: 7, scope: !3601)
!3607 = !DILocation(line: 349, column: 25, scope: !3601)
!3608 = !DILocation(line: 350, column: 4, scope: !3601)
!3609 = !DILocation(line: 350, column: 29, scope: !3601)
!3610 = !DILocation(line: 351, column: 4, scope: !3601)
!3611 = !DILocation(line: 351, column: 7, scope: !3601)
!3612 = !DILocation(line: 351, column: 33, scope: !3601)
!3613 = !DILocation(line: 351, column: 30, scope: !3601)
!3614 = !DILocation(line: 352, column: 4, scope: !3601)
!3615 = !DILocation(line: 352, column: 7, scope: !3601)
!3616 = !DILocation(line: 352, column: 28, scope: !3601)
!3617 = !DILocation(line: 352, column: 25, scope: !3601)
!3618 = !DILocation(line: 347, column: 7, scope: !3581)
!3619 = !DILocation(line: 355, column: 14, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 355, column: 7)
!3621 = !DILocation(line: 355, column: 29, scope: !3620)
!3622 = !DILocation(line: 355, column: 19, scope: !3620)
!3623 = !DILocation(line: 355, column: 7, scope: !3581)
!3624 = !DILocation(line: 358, column: 3, scope: !3581)
!3625 = !DILocation(line: 361, column: 49, scope: !3591)
!3626 = !DILocation(line: 362, column: 49, scope: !3591)
!3627 = !DILocation(line: 361, column: 14, scope: !3591)
!3628 = !DILocation(line: 361, column: 7, scope: !3591)
!3629 = !DILocation(line: 365, column: 18, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 365, column: 11)
!3631 = !DILocation(line: 365, column: 28, scope: !3630)
!3632 = !DILocation(line: 365, column: 41, scope: !3630)
!3633 = !DILocation(line: 365, column: 51, scope: !3630)
!3634 = !DILocation(line: 365, column: 31, scope: !3630)
!3635 = !DILocation(line: 365, column: 11, scope: !3591)
!3636 = !DILocation(line: 368, column: 12, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 368, column: 11)
!3638 = !DILocation(line: 369, column: 12, scope: !3637)
!3639 = !DILocation(line: 369, column: 35, scope: !3637)
!3640 = !DILocation(line: 370, column: 11, scope: !3637)
!3641 = !DILocation(line: 370, column: 14, scope: !3637)
!3642 = !DILocation(line: 370, column: 45, scope: !3637)
!3643 = !DILocation(line: 370, column: 42, scope: !3637)
!3644 = !DILocation(line: 368, column: 11, scope: !3591)
!3645 = !DILocation(line: 373, column: 48, scope: !3591)
!3646 = !DILocation(line: 374, column: 48, scope: !3591)
!3647 = !DILocation(line: 373, column: 14, scope: !3591)
!3648 = !DILocation(line: 373, column: 7, scope: !3591)
!3649 = !DILocation(line: 378, column: 20, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 378, column: 13)
!3651 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 377, column: 7)
!3652 = !DILocation(line: 378, column: 31, scope: !3650)
!3653 = !DILocation(line: 378, column: 44, scope: !3650)
!3654 = !DILocation(line: 378, column: 55, scope: !3650)
!3655 = !DILocation(line: 378, column: 34, scope: !3650)
!3656 = !DILocation(line: 378, column: 13, scope: !3651)
!3657 = !DILocation(line: 381, column: 48, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 381, column: 13)
!3659 = !DILocation(line: 382, column: 48, scope: !3658)
!3660 = !DILocation(line: 381, column: 13, scope: !3658)
!3661 = !DILocation(line: 383, column: 13, scope: !3658)
!3662 = !DILocation(line: 383, column: 51, scope: !3658)
!3663 = !DILocation(line: 384, column: 51, scope: !3658)
!3664 = !DILocation(line: 383, column: 16, scope: !3658)
!3665 = !DILocation(line: 381, column: 13, scope: !3651)
!3666 = !DILocation(line: 388, column: 58, scope: !3651)
!3667 = !DILocation(line: 388, column: 17, scope: !3651)
!3668 = !DILocation(line: 389, column: 17, scope: !3651)
!3669 = !DILocation(line: 389, column: 55, scope: !3651)
!3670 = !DILocation(line: 390, column: 55, scope: !3651)
!3671 = !DILocation(line: 389, column: 20, scope: !3651)
!3672 = !DILocation(line: 391, column: 17, scope: !3651)
!3673 = !DILocation(line: 391, column: 55, scope: !3651)
!3674 = !DILocation(line: 392, column: 55, scope: !3651)
!3675 = !DILocation(line: 391, column: 20, scope: !3651)
!3676 = !DILocation(line: 388, column: 9, scope: !3651)
!3677 = !DILocation(line: 401, column: 48, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3590, file: !3, line: 401, column: 13)
!3679 = !DILocation(line: 402, column: 48, scope: !3678)
!3680 = !DILocation(line: 401, column: 15, scope: !3678)
!3681 = !DILocation(line: 401, column: 13, scope: !3590)
!3682 = !DILocation(line: 405, column: 31, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3590, file: !3, line: 405, column: 13)
!3684 = !DILocation(line: 405, column: 15, scope: !3683)
!3685 = !DILocation(line: 405, column: 13, scope: !3590)
!3686 = !DILocation(line: 408, column: 29, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3590, file: !3, line: 408, column: 13)
!3688 = !DILocation(line: 408, column: 55, scope: !3687)
!3689 = !DILocation(line: 408, column: 35, scope: !3687)
!3690 = !DILocation(line: 408, column: 13, scope: !3590)
!3691 = !DILocation(line: 412, column: 50, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 412, column: 15)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !3, line: 411, column: 9)
!3694 = distinct !DILexicalBlock(scope: !3590, file: !3, line: 411, column: 9)
!3695 = !DILocation(line: 0, scope: !3692)
!3696 = !DILocation(line: 411, column: 9, scope: !3694)
!3697 = !DILocation(line: 411, column: 41, scope: !3693)
!3698 = !DILocation(line: 0, scope: !3694)
!3699 = !DILocation(line: 0, scope: !3590)
!3700 = !DILocation(line: 411, column: 23, scope: !3693)
!3701 = !DILocation(line: 412, column: 34, scope: !3692)
!3702 = !DILocation(line: 413, column: 50, scope: !3692)
!3703 = !DILocation(line: 413, column: 34, scope: !3692)
!3704 = !DILocation(line: 412, column: 17, scope: !3692)
!3705 = !DILocation(line: 412, column: 15, scope: !3693)
!3706 = !DILocation(line: 411, column: 49, scope: !3693)
!3707 = !DILocation(line: 411, column: 9, scope: !3693)
!3708 = distinct !{!3708, !3696, !3709}
!3709 = !DILocation(line: 414, column: 20, scope: !3694)
!3710 = !DILocation(line: 420, column: 7, scope: !3591)
!3711 = !DILocation(line: 423, column: 5, scope: !3581)
!3712 = !DILocation(line: 425, column: 1, scope: !3581)
!3713 = distinct !DISubprogram(name: "gimple_vuse", scope: !580, file: !580, line: 1365, type: !2951, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3714)
!3714 = !{!3715}
!3715 = !DILocalVariable(name: "g", arg: 1, scope: !3713, file: !580, line: 1365, type: !2892)
!3716 = !DILocation(line: 0, scope: !3713)
!3717 = !DILocation(line: 1367, column: 8, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3713, file: !580, line: 1367, column: 7)
!3719 = !DILocation(line: 1367, column: 7, scope: !3713)
!3720 = !DILocation(line: 1369, column: 23, scope: !3713)
!3721 = !DILocation(line: 1369, column: 3, scope: !3713)
!3722 = !DILocation(line: 1370, column: 1, scope: !3713)
!3723 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !580, file: !580, line: 1283, type: !3724, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3726)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{!681, !2892}
!3726 = !{!3727}
!3727 = !DILocalVariable(name: "g", arg: 1, scope: !3723, file: !580, line: 1283, type: !2892)
!3728 = !DILocation(line: 0, scope: !3723)
!3729 = !DILocation(line: 1285, column: 10, scope: !3723)
!3730 = !DILocation(line: 1285, column: 26, scope: !3723)
!3731 = !DILocation(line: 1285, column: 43, scope: !3723)
!3732 = !DILocation(line: 1285, column: 46, scope: !3723)
!3733 = !DILocation(line: 1285, column: 62, scope: !3723)
!3734 = !DILocation(line: 1285, column: 3, scope: !3723)
!3735 = distinct !DISubprogram(name: "gimple_code", scope: !580, file: !580, line: 1052, type: !3736, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3738)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!579, !2892}
!3738 = !{!3739}
!3739 = !DILocalVariable(name: "g", arg: 1, scope: !3735, file: !580, line: 1052, type: !2892)
!3740 = !DILocation(line: 0, scope: !3735)
!3741 = !DILocation(line: 1054, column: 20, scope: !3735)
!3742 = !DILocation(line: 1054, column: 3, scope: !3735)
!3743 = distinct !DISubprogram(name: "VEC_expr_hash_elt_t_heap_safe_push", scope: !3, file: !3, line: 126, type: !3744, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3747)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!3746, !3564, !2124}
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!3747 = !{!3748, !3749}
!3748 = !DILocalVariable(name: "vec_", arg: 1, scope: !3743, file: !3, line: 126, type: !3564)
!3749 = !DILocalVariable(name: "obj_", arg: 2, scope: !3743, file: !3, line: 126, type: !2124)
!3750 = !DILocation(line: 0, scope: !3743)
!3751 = !DILocation(line: 126, column: 1, scope: !3743)
!3752 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !318, file: !318, line: 184, type: !3753, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3755)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!1053, !3574, !757}
!3755 = !{!3756, !3757}
!3756 = !DILocalVariable(name: "vec_", arg: 1, scope: !3752, file: !318, line: 184, type: !3574)
!3757 = !DILocalVariable(name: "obj_", arg: 2, scope: !3752, file: !318, line: 184, type: !757)
!3758 = !DILocation(line: 0, scope: !3752)
!3759 = !DILocation(line: 184, column: 1, scope: !3752)
!3760 = distinct !DISubprogram(name: "record_equivalences_from_incoming_edge", scope: !3, file: !3, line: 993, type: !3761, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3763)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{null, !1505}
!3763 = !{!3764, !3765, !3766, !3767, !3768, !3771, !3774, !3775}
!3764 = !DILocalVariable(name: "bb", arg: 1, scope: !3760, file: !3, line: 993, type: !1505)
!3765 = !DILocalVariable(name: "e", scope: !3760, file: !3, line: 995, type: !999)
!3766 = !DILocalVariable(name: "parent", scope: !3760, file: !3, line: 996, type: !1505)
!3767 = !DILocalVariable(name: "edge_info", scope: !3760, file: !3, line: 997, type: !2130)
!3768 = !DILocalVariable(name: "i", scope: !3769, file: !3, line: 1010, type: !7)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 1009, column: 5)
!3770 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 1008, column: 7)
!3771 = !DILocalVariable(name: "lhs", scope: !3772, file: !3, line: 1016, type: !757)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 1015, column: 2)
!3773 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 1014, column: 11)
!3774 = !DILocalVariable(name: "rhs", scope: !3772, file: !3, line: 1017, type: !757)
!3775 = !DILocalVariable(name: "cond_equivalences", scope: !3772, file: !3, line: 1018, type: !2136)
!3776 = !DILocation(line: 0, scope: !3760)
!3777 = !DILocation(line: 1002, column: 12, scope: !3760)
!3778 = !DILocation(line: 1004, column: 7, scope: !3760)
!3779 = !DILocation(line: 1008, column: 7, scope: !3770)
!3780 = !DILocation(line: 1008, column: 9, scope: !3770)
!3781 = !DILocation(line: 1008, column: 15, scope: !3770)
!3782 = !DILocation(line: 1008, column: 19, scope: !3770)
!3783 = !DILocation(line: 1008, column: 7, scope: !3760)
!3784 = !DILocation(line: 1012, column: 43, scope: !3769)
!3785 = !DILocation(line: 1014, column: 11, scope: !3773)
!3786 = !DILocation(line: 1014, column: 11, scope: !3769)
!3787 = !DILocation(line: 1016, column: 26, scope: !3772)
!3788 = !DILocation(line: 0, scope: !3772)
!3789 = !DILocation(line: 1018, column: 60, scope: !3772)
!3790 = !DILocation(line: 1020, column: 8, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 1020, column: 8)
!3792 = !DILocation(line: 1020, column: 8, scope: !3772)
!3793 = !DILocation(line: 1017, column: 26, scope: !3772)
!3794 = !DILocation(line: 1021, column: 6, scope: !3791)
!3795 = !DILocation(line: 1023, column: 8, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 1023, column: 8)
!3797 = !DILocation(line: 1023, column: 8, scope: !3772)
!3798 = !DILocation(line: 0, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 1024, column: 13)
!3800 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 1024, column: 13)
!3801 = !DILocation(line: 1024, column: 13, scope: !3800)
!3802 = !DILocation(line: 0, scope: !3800)
!3803 = !DILocation(line: 0, scope: !3769)
!3804 = !DILocation(line: 1024, column: 40, scope: !3799)
!3805 = !DILocation(line: 1024, column: 27, scope: !3799)
!3806 = !DILocation(line: 1025, column: 29, scope: !3799)
!3807 = !DILocation(line: 1025, column: 15, scope: !3799)
!3808 = !DILocation(line: 1024, column: 64, scope: !3799)
!3809 = !DILocation(line: 1024, column: 13, scope: !3799)
!3810 = distinct !{!3810, !3801, !3811}
!3811 = !DILocation(line: 1025, column: 49, scope: !3800)
!3812 = !DILocation(line: 1028, column: 1, scope: !3760)
!3813 = distinct !DISubprogram(name: "record_equivalences_from_phis", scope: !3, file: !3, line: 911, type: !3761, scopeLine: 912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3814)
!3814 = !{!3815, !3816, !3817, !3821, !3822, !3823, !3824}
!3815 = !DILocalVariable(name: "bb", arg: 1, scope: !3813, file: !3, line: 911, type: !1505)
!3816 = !DILocalVariable(name: "gsi", scope: !3813, file: !3, line: 913, type: !2685)
!3817 = !DILocalVariable(name: "phi", scope: !3818, file: !3, line: 917, type: !1019)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 916, column: 5)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 915, column: 3)
!3820 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 915, column: 3)
!3821 = !DILocalVariable(name: "lhs", scope: !3818, file: !3, line: 919, type: !757)
!3822 = !DILocalVariable(name: "rhs", scope: !3818, file: !3, line: 920, type: !757)
!3823 = !DILocalVariable(name: "i", scope: !3818, file: !3, line: 921, type: !1164)
!3824 = !DILocalVariable(name: "t", scope: !3825, file: !3, line: 925, type: !757)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 924, column: 2)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 923, column: 7)
!3827 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 923, column: 7)
!3828 = !DILocation(line: 0, scope: !3813)
!3829 = !DILocation(line: 913, column: 3, scope: !3813)
!3830 = !DILocation(line: 915, column: 14, scope: !3820)
!3831 = !DILocation(line: 915, column: 8, scope: !3820)
!3832 = !DILocation(line: 915, column: 36, scope: !3819)
!3833 = !DILocation(line: 915, column: 35, scope: !3819)
!3834 = !DILocation(line: 915, column: 3, scope: !3820)
!3835 = !DILocation(line: 917, column: 20, scope: !3818)
!3836 = !DILocation(line: 0, scope: !3818)
!3837 = !DILocation(line: 919, column: 18, scope: !3818)
!3838 = !DILocation(line: 923, column: 12, scope: !3827)
!3839 = !DILocation(line: 920, column: 12, scope: !3818)
!3840 = !DILocation(line: 0, scope: !3827)
!3841 = !DILocation(line: 923, column: 23, scope: !3826)
!3842 = !DILocation(line: 923, column: 21, scope: !3826)
!3843 = !DILocation(line: 923, column: 7, scope: !3827)
!3844 = !DILocation(line: 925, column: 13, scope: !3825)
!3845 = !DILocation(line: 0, scope: !3825)
!3846 = !DILocation(line: 930, column: 12, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 930, column: 8)
!3848 = !DILocation(line: 930, column: 8, scope: !3825)
!3849 = !DILocation(line: 935, column: 12, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 935, column: 8)
!3851 = !DILocation(line: 935, column: 8, scope: !3825)
!3852 = !DILocation(line: 940, column: 15, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 940, column: 13)
!3854 = !DILocation(line: 940, column: 13, scope: !3850)
!3855 = !DILocation(line: 942, column: 2, scope: !3826)
!3856 = !DILocation(line: 923, column: 51, scope: !3826)
!3857 = !DILocation(line: 923, column: 7, scope: !3826)
!3858 = distinct !{!3858, !3843, !3859}
!3859 = !DILocation(line: 942, column: 2, scope: !3827)
!3860 = !DILocation(line: 946, column: 12, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 946, column: 11)
!3862 = !DILocation(line: 946, column: 11, scope: !3818)
!3863 = !DILocation(line: 955, column: 16, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 955, column: 11)
!3865 = !DILocation(line: 955, column: 13, scope: !3864)
!3866 = !DILocation(line: 955, column: 42, scope: !3864)
!3867 = !DILocation(line: 955, column: 45, scope: !3864)
!3868 = !DILocation(line: 955, column: 11, scope: !3818)
!3869 = !DILocation(line: 956, column: 2, scope: !3864)
!3870 = !DILocation(line: 915, column: 53, scope: !3819)
!3871 = !DILocation(line: 915, column: 3, scope: !3819)
!3872 = distinct !{!3872, !3834, !3873}
!3873 = !DILocation(line: 957, column: 5, scope: !3820)
!3874 = !DILocation(line: 958, column: 1, scope: !3813)
!3875 = distinct !DISubprogram(name: "optimize_stmt", scope: !3, file: !3, line: 2071, type: !3876, scopeLine: 2072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3878)
!3876 = !DISubroutineType(types: !3877)
!3877 = !{null, !1505, !2685}
!3878 = !{!3879, !3880, !3881, !3882, !3883, !3884, !3885, !3888, !3893}
!3879 = !DILocalVariable(name: "bb", arg: 1, scope: !3875, file: !3, line: 2071, type: !1505)
!3880 = !DILocalVariable(name: "si", arg: 2, scope: !3875, file: !3, line: 2071, type: !2685)
!3881 = !DILocalVariable(name: "stmt", scope: !3875, file: !3, line: 2073, type: !1019)
!3882 = !DILocalVariable(name: "old_stmt", scope: !3875, file: !3, line: 2073, type: !1019)
!3883 = !DILocalVariable(name: "may_optimize_p", scope: !3875, file: !3, line: 2074, type: !681)
!3884 = !DILocalVariable(name: "modified_p", scope: !3875, file: !3, line: 2075, type: !681)
!3885 = !DILocalVariable(name: "rhs", scope: !3886, file: !3, line: 2098, type: !757)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 2097, column: 5)
!3887 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 2096, column: 7)
!3888 = !DILocalVariable(name: "callee", scope: !3889, file: !3, line: 2150, type: !757)
!3889 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 2146, column: 2)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 2145, column: 11)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 2144, column: 5)
!3892 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 2143, column: 7)
!3893 = !DILocalVariable(name: "val", scope: !3894, file: !3, line: 2196, type: !757)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 2195, column: 5)
!3895 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 2194, column: 7)
!3896 = !DILocation(line: 0, scope: !3875)
!3897 = !DILocation(line: 2071, column: 53, scope: !3875)
!3898 = !DILocation(line: 2077, column: 21, scope: !3875)
!3899 = !DILocation(line: 2079, column: 7, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 2079, column: 7)
!3901 = !DILocation(line: 2079, column: 26, scope: !3900)
!3902 = !DILocation(line: 2079, column: 7, scope: !3875)
!3903 = !DILocation(line: 2080, column: 5, scope: !3900)
!3904 = !DILocation(line: 2082, column: 3, scope: !3875)
!3905 = !DILocation(line: 2083, column: 22, scope: !3875)
!3906 = !DILocation(line: 2085, column: 7, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 2085, column: 7)
!3908 = !DILocation(line: 2085, column: 17, scope: !3907)
!3909 = !DILocation(line: 2085, column: 21, scope: !3907)
!3910 = !DILocation(line: 2085, column: 32, scope: !3907)
!3911 = !DILocation(line: 2085, column: 7, scope: !3875)
!3912 = !DILocation(line: 2087, column: 7, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 2086, column: 5)
!3914 = !DILocation(line: 2088, column: 26, scope: !3913)
!3915 = !DILocation(line: 2088, column: 7, scope: !3913)
!3916 = !DILocation(line: 2089, column: 5, scope: !3913)
!3917 = !DILocation(line: 2092, column: 3, scope: !3875)
!3918 = !DILocation(line: 2096, column: 7, scope: !3887)
!3919 = !DILocation(line: 2096, column: 7, scope: !3875)
!3920 = !DILocation(line: 0, scope: !3886)
!3921 = !DILocation(line: 2102, column: 11, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 2102, column: 11)
!3923 = !DILocation(line: 2102, column: 11, scope: !3886)
!3924 = !DILocation(line: 2104, column: 11, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 2103, column: 2)
!3926 = !DILocation(line: 2105, column: 4, scope: !3925)
!3927 = !DILocation(line: 2107, column: 8, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 2107, column: 8)
!3929 = !DILocation(line: 2107, column: 18, scope: !3928)
!3930 = !DILocation(line: 2107, column: 22, scope: !3928)
!3931 = !DILocation(line: 2107, column: 33, scope: !3928)
!3932 = !DILocation(line: 2107, column: 8, scope: !3925)
!3933 = !DILocation(line: 2109, column: 8, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 2108, column: 6)
!3935 = !DILocation(line: 2110, column: 27, scope: !3934)
!3936 = !DILocation(line: 2110, column: 8, scope: !3934)
!3937 = !DILocation(line: 2111, column: 6, scope: !3934)
!3938 = !DILocation(line: 2115, column: 11, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 2115, column: 11)
!3940 = !DILocation(line: 2115, column: 11, scope: !3886)
!3941 = !DILocation(line: 2116, column: 15, scope: !3939)
!3942 = !DILocation(line: 2116, column: 9, scope: !3939)
!3943 = !DILocation(line: 2117, column: 16, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 2117, column: 16)
!3945 = !DILocation(line: 2117, column: 35, scope: !3944)
!3946 = !DILocation(line: 2117, column: 16, scope: !3939)
!3947 = !DILocation(line: 2118, column: 15, scope: !3944)
!3948 = !DILocation(line: 2118, column: 9, scope: !3944)
!3949 = !DILocation(line: 2119, column: 16, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 2119, column: 16)
!3951 = !DILocation(line: 2119, column: 35, scope: !3950)
!3952 = !DILocation(line: 2119, column: 16, scope: !3944)
!3953 = !DILocation(line: 2121, column: 15, scope: !3950)
!3954 = !DILocation(line: 2121, column: 9, scope: !3950)
!3955 = !DILocation(line: 0, scope: !3939)
!3956 = !DILocation(line: 2123, column: 11, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 2123, column: 11)
!3958 = !DILocation(line: 2123, column: 15, scope: !3957)
!3959 = !DILocation(line: 2123, column: 18, scope: !3957)
!3960 = !DILocation(line: 2123, column: 34, scope: !3957)
!3961 = !DILocation(line: 2123, column: 11, scope: !3886)
!3962 = !DILocation(line: 2124, column: 9, scope: !3957)
!3963 = !DILocation(line: 2134, column: 22, scope: !3875)
!3964 = !DILocation(line: 2135, column: 21, scope: !3875)
!3965 = !DILocation(line: 2135, column: 26, scope: !3875)
!3966 = !DILocation(line: 2136, column: 26, scope: !3875)
!3967 = !DILocation(line: 2136, column: 30, scope: !3875)
!3968 = !DILocation(line: 2137, column: 25, scope: !3875)
!3969 = !DILocation(line: 2137, column: 29, scope: !3875)
!3970 = !DILocation(line: 2138, column: 29, scope: !3875)
!3971 = !DILocation(line: 2138, column: 32, scope: !3875)
!3972 = !DILocation(line: 2138, column: 55, scope: !3875)
!3973 = !DILocation(line: 2139, column: 29, scope: !3875)
!3974 = !DILocation(line: 2139, column: 33, scope: !3875)
!3975 = !DILocation(line: 2140, column: 25, scope: !3875)
!3976 = !DILocation(line: 2140, column: 28, scope: !3875)
!3977 = !DILocation(line: 2140, column: 47, scope: !3875)
!3978 = !DILocation(line: 2141, column: 25, scope: !3875)
!3979 = !DILocation(line: 2141, column: 28, scope: !3875)
!3980 = !DILocation(line: 2141, column: 47, scope: !3875)
!3981 = !DILocation(line: 2143, column: 7, scope: !3892)
!3982 = !DILocation(line: 2143, column: 7, scope: !3875)
!3983 = !DILocation(line: 2145, column: 11, scope: !3890)
!3984 = !DILocation(line: 2145, column: 30, scope: !3890)
!3985 = !DILocation(line: 2145, column: 11, scope: !3891)
!3986 = !DILocation(line: 2150, column: 18, scope: !3889)
!3987 = !DILocation(line: 0, scope: !3889)
!3988 = !DILocation(line: 2151, column: 8, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 2151, column: 8)
!3990 = !DILocation(line: 2152, column: 8, scope: !3989)
!3991 = !DILocation(line: 2152, column: 11, scope: !3989)
!3992 = !DILocation(line: 2152, column: 40, scope: !3989)
!3993 = !DILocation(line: 2153, column: 8, scope: !3989)
!3994 = !DILocation(line: 2153, column: 11, scope: !3989)
!3995 = !DILocation(line: 2153, column: 39, scope: !3989)
!3996 = !DILocation(line: 2151, column: 8, scope: !3889)
!3997 = !DILocation(line: 2155, column: 45, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 2154, column: 6)
!3999 = !DILocation(line: 2155, column: 8, scope: !3998)
!4000 = !DILocation(line: 2156, column: 15, scope: !3998)
!4001 = !DILocation(line: 2157, column: 6, scope: !3998)
!4002 = !DILocation(line: 2160, column: 7, scope: !3891)
!4003 = !DILocation(line: 2161, column: 7, scope: !3891)
!4004 = !DILocation(line: 2162, column: 14, scope: !3891)
!4005 = !DILocation(line: 2163, column: 5, scope: !3891)
!4006 = !DILocation(line: 2166, column: 7, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 2166, column: 7)
!4008 = !DILocation(line: 2166, column: 7, scope: !3875)
!4009 = !DILocation(line: 2167, column: 42, scope: !4007)
!4010 = !DILocation(line: 2167, column: 5, scope: !4007)
!4011 = !DILocation(line: 2194, column: 7, scope: !3895)
!4012 = !DILocation(line: 2194, column: 35, scope: !3895)
!4013 = !DILocation(line: 2194, column: 32, scope: !3895)
!4014 = !DILocation(line: 0, scope: !3894)
!4015 = !DILocation(line: 2198, column: 7, scope: !3894)
!4016 = !DILocation(line: 2200, column: 11, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 2200, column: 11)
!4018 = !DILocation(line: 2200, column: 30, scope: !4017)
!4019 = !DILocation(line: 2200, column: 11, scope: !3894)
!4020 = !DILocation(line: 2201, column: 32, scope: !4017)
!4021 = !DILocation(line: 2202, column: 7, scope: !4017)
!4022 = !DILocation(line: 2202, column: 32, scope: !4017)
!4023 = !DILocation(line: 2203, column: 28, scope: !4017)
!4024 = !DILocation(line: 2203, column: 53, scope: !4017)
!4025 = !DILocation(line: 2201, column: 15, scope: !4017)
!4026 = !DILocation(line: 2201, column: 9, scope: !4017)
!4027 = !DILocation(line: 2204, column: 16, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 2204, column: 16)
!4029 = !DILocation(line: 2204, column: 35, scope: !4028)
!4030 = !DILocation(line: 2204, column: 16, scope: !4017)
!4031 = !DILocation(line: 2205, column: 8, scope: !4028)
!4032 = !DILocation(line: 2205, column: 2, scope: !4028)
!4033 = !DILocation(line: 0, scope: !4017)
!4034 = !DILocation(line: 2207, column: 11, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 2207, column: 11)
!4036 = !DILocation(line: 2207, column: 15, scope: !4035)
!4037 = !DILocation(line: 2207, column: 18, scope: !4035)
!4038 = !DILocation(line: 2207, column: 34, scope: !4035)
!4039 = !DILocation(line: 2207, column: 49, scope: !4035)
!4040 = !DILocation(line: 2207, column: 52, scope: !4035)
!4041 = !DILocation(line: 2207, column: 11, scope: !3894)
!4042 = !DILocation(line: 2208, column: 14, scope: !4035)
!4043 = !DILocation(line: 2208, column: 2, scope: !4035)
!4044 = !DILocation(line: 2212, column: 11, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 2212, column: 11)
!4046 = !DILocation(line: 2212, column: 11, scope: !3894)
!4047 = !DILocation(line: 2214, column: 20, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4045, file: !3, line: 2213, column: 2)
!4049 = !DILocation(line: 2214, column: 41, scope: !4048)
!4050 = !DILocation(line: 2214, column: 4, scope: !4048)
!4051 = !DILocation(line: 2215, column: 8, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 2215, column: 8)
!4053 = !DILocation(line: 2215, column: 18, scope: !4052)
!4054 = !DILocation(line: 2215, column: 22, scope: !4052)
!4055 = !DILocation(line: 2215, column: 33, scope: !4052)
!4056 = !DILocation(line: 2215, column: 8, scope: !4048)
!4057 = !DILocation(line: 2216, column: 6, scope: !4052)
!4058 = !DILocation(line: 2219, column: 1, scope: !3875)
!4059 = distinct !DISubprogram(name: "record_edge_info", scope: !3, file: !3, line: 1473, type: !3761, scopeLine: 1474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4060)
!4060 = !{!4061, !4062, !4063, !4064, !4067, !4068, !4071, !4074, !4075, !4076, !4077, !4078, !4082, !4083, !4087, !4088, !4091, !4094, !4095, !4096, !4097, !4098, !4102, !4103, !4104, !4107, !4108}
!4061 = !DILocalVariable(name: "bb", arg: 1, scope: !4059, file: !3, line: 1473, type: !1505)
!4062 = !DILocalVariable(name: "gsi", scope: !4059, file: !3, line: 1475, type: !2685)
!4063 = !DILocalVariable(name: "edge_info", scope: !4059, file: !3, line: 1476, type: !2130)
!4064 = !DILocalVariable(name: "stmt", scope: !4065, file: !3, line: 1480, type: !1019)
!4065 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1479, column: 5)
!4066 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 1478, column: 7)
!4067 = !DILocalVariable(name: "loc", scope: !4065, file: !3, line: 1481, type: !879)
!4068 = !DILocalVariable(name: "index", scope: !4069, file: !3, line: 1485, type: !757)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !3, line: 1484, column: 2)
!4070 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1483, column: 11)
!4071 = !DILocalVariable(name: "i", scope: !4072, file: !3, line: 1489, type: !682)
!4072 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 1488, column: 6)
!4073 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1487, column: 8)
!4074 = !DILocalVariable(name: "n_labels", scope: !4072, file: !3, line: 1490, type: !682)
!4075 = !DILocalVariable(name: "info", scope: !4072, file: !3, line: 1491, type: !1053)
!4076 = !DILocalVariable(name: "e", scope: !4072, file: !3, line: 1492, type: !999)
!4077 = !DILocalVariable(name: "ei", scope: !4072, file: !3, line: 1493, type: !3358)
!4078 = !DILocalVariable(name: "label", scope: !4079, file: !3, line: 1497, type: !757)
!4079 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 1496, column: 3)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1495, column: 8)
!4081 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 1495, column: 8)
!4082 = !DILocalVariable(name: "target_bb", scope: !4079, file: !3, line: 1498, type: !1505)
!4083 = !DILocalVariable(name: "target_bb", scope: !4084, file: !3, line: 1509, type: !1505)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 1508, column: 3)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !3, line: 1507, column: 8)
!4086 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 1507, column: 8)
!4087 = !DILocalVariable(name: "label", scope: !4084, file: !3, line: 1510, type: !757)
!4088 = !DILocalVariable(name: "x", scope: !4089, file: !3, line: 1514, type: !757)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 1513, column: 7)
!4090 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1512, column: 9)
!4091 = !DILocalVariable(name: "true_edge", scope: !4092, file: !3, line: 1528, type: !999)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 1527, column: 2)
!4093 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1526, column: 11)
!4094 = !DILocalVariable(name: "false_edge", scope: !4092, file: !3, line: 1529, type: !999)
!4095 = !DILocalVariable(name: "op0", scope: !4092, file: !3, line: 1531, type: !757)
!4096 = !DILocalVariable(name: "op1", scope: !4092, file: !3, line: 1532, type: !757)
!4097 = !DILocalVariable(name: "code", scope: !4092, file: !3, line: 1533, type: !317)
!4098 = !DILocalVariable(name: "cond", scope: !4099, file: !3, line: 1578, type: !757)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 1577, column: 13)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 1574, column: 20)
!4101 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 1540, column: 15)
!4102 = !DILocalVariable(name: "inverted", scope: !4099, file: !3, line: 1579, type: !757)
!4103 = !DILocalVariable(name: "edge_info", scope: !4099, file: !3, line: 1580, type: !2130)
!4104 = !DILocalVariable(name: "cond", scope: !4105, file: !3, line: 1605, type: !757)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1604, column: 13)
!4106 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 1601, column: 20)
!4107 = !DILocalVariable(name: "inverted", scope: !4105, file: !3, line: 1606, type: !757)
!4108 = !DILocalVariable(name: "edge_info", scope: !4105, file: !3, line: 1607, type: !2130)
!4109 = !DILocation(line: 0, scope: !4059)
!4110 = !DILocation(line: 1475, column: 3, scope: !4059)
!4111 = !DILocation(line: 1475, column: 30, scope: !4059)
!4112 = !DILocation(line: 1478, column: 9, scope: !4066)
!4113 = !DILocation(line: 1478, column: 7, scope: !4059)
!4114 = !DILocation(line: 1480, column: 21, scope: !4065)
!4115 = !DILocation(line: 0, scope: !4065)
!4116 = !DILocation(line: 1481, column: 24, scope: !4065)
!4117 = !DILocation(line: 1483, column: 11, scope: !4070)
!4118 = !DILocation(line: 1483, column: 30, scope: !4070)
!4119 = !DILocation(line: 1483, column: 11, scope: !4065)
!4120 = !DILocation(line: 1485, column: 17, scope: !4069)
!4121 = !DILocation(line: 0, scope: !4069)
!4122 = !DILocation(line: 1487, column: 8, scope: !4073)
!4123 = !DILocation(line: 1487, column: 26, scope: !4073)
!4124 = !DILocation(line: 1487, column: 8, scope: !4069)
!4125 = !DILocation(line: 1490, column: 30, scope: !4072)
!4126 = !DILocation(line: 0, scope: !4072)
!4127 = !DILocation(line: 1491, column: 21, scope: !4072)
!4128 = !DILocation(line: 1492, column: 8, scope: !4072)
!4129 = !DILocation(line: 1493, column: 8, scope: !4072)
!4130 = !DILocation(line: 1495, column: 13, scope: !4081)
!4131 = !DILocation(line: 0, scope: !4081)
!4132 = !DILocation(line: 1495, column: 22, scope: !4080)
!4133 = !DILocation(line: 1495, column: 8, scope: !4081)
!4134 = !DILocation(line: 1497, column: 18, scope: !4079)
!4135 = !DILocation(line: 0, scope: !4079)
!4136 = !DILocation(line: 1498, column: 29, scope: !4079)
!4137 = !DILocation(line: 1499, column: 9, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 1499, column: 9)
!4139 = !DILocation(line: 1500, column: 9, scope: !4138)
!4140 = !DILocation(line: 1500, column: 13, scope: !4138)
!4141 = !DILocation(line: 1501, column: 9, scope: !4138)
!4142 = !DILocation(line: 1501, column: 28, scope: !4138)
!4143 = !DILocation(line: 1501, column: 12, scope: !4138)
!4144 = !DILocation(line: 1499, column: 9, scope: !4079)
!4145 = !DILocation(line: 1502, column: 32, scope: !4138)
!4146 = !DILocation(line: 1502, column: 23, scope: !4138)
!4147 = !DILocation(line: 1502, column: 7, scope: !4138)
!4148 = !DILocation(line: 1502, column: 30, scope: !4138)
!4149 = !DILocation(line: 1504, column: 30, scope: !4138)
!4150 = !DILocation(line: 1495, column: 35, scope: !4080)
!4151 = !DILocation(line: 1495, column: 8, scope: !4080)
!4152 = distinct !{!4152, !4133, !4153}
!4153 = !DILocation(line: 1505, column: 3, scope: !4081)
!4154 = !DILocation(line: 1507, column: 8, scope: !4086)
!4155 = !DILocation(line: 0, scope: !4085)
!4156 = !DILocation(line: 0, scope: !4089)
!4157 = !DILocation(line: 1507, column: 8, scope: !4085)
!4158 = !DILocation(line: 1509, column: 29, scope: !4084)
!4159 = !DILocation(line: 1509, column: 32, scope: !4084)
!4160 = !DILocation(line: 0, scope: !4084)
!4161 = !DILocation(line: 1510, column: 34, scope: !4084)
!4162 = !DILocation(line: 1510, column: 18, scope: !4084)
!4163 = !DILocation(line: 1512, column: 15, scope: !4090)
!4164 = !DILocation(line: 1512, column: 35, scope: !4090)
!4165 = !DILocation(line: 1512, column: 32, scope: !4090)
!4166 = !DILocation(line: 1512, column: 23, scope: !4090)
!4167 = !DILocation(line: 1514, column: 41, scope: !4089)
!4168 = !DILocation(line: 1515, column: 8, scope: !4089)
!4169 = !DILocation(line: 1514, column: 18, scope: !4089)
!4170 = !DILocation(line: 1516, column: 41, scope: !4089)
!4171 = !DILocation(line: 1516, column: 21, scope: !4089)
!4172 = !DILocation(line: 1517, column: 20, scope: !4089)
!4173 = !DILocation(line: 1517, column: 24, scope: !4089)
!4174 = !DILocation(line: 1518, column: 20, scope: !4089)
!4175 = !DILocation(line: 1518, column: 24, scope: !4089)
!4176 = !DILocation(line: 1519, column: 7, scope: !4089)
!4177 = distinct !{!4177, !4154, !4178}
!4178 = !DILocation(line: 1520, column: 3, scope: !4086)
!4179 = !DILocation(line: 1521, column: 8, scope: !4072)
!4180 = !DILocation(line: 1522, column: 6, scope: !4073)
!4181 = !DILocation(line: 1522, column: 6, scope: !4072)
!4182 = !DILocation(line: 1526, column: 11, scope: !4093)
!4183 = !DILocation(line: 1526, column: 30, scope: !4093)
!4184 = !DILocation(line: 1526, column: 11, scope: !4065)
!4185 = !DILocation(line: 1528, column: 4, scope: !4092)
!4186 = !DILocation(line: 1529, column: 4, scope: !4092)
!4187 = !DILocation(line: 1531, column: 22, scope: !4092)
!4188 = !DILocation(line: 0, scope: !4092)
!4189 = !DILocation(line: 1532, column: 22, scope: !4092)
!4190 = !DILocation(line: 1533, column: 33, scope: !4092)
!4191 = !DILocation(line: 1535, column: 4, scope: !4092)
!4192 = !DILocation(line: 1540, column: 32, scope: !4101)
!4193 = !DILocation(line: 1541, column: 18, scope: !4101)
!4194 = !DILocation(line: 1541, column: 34, scope: !4101)
!4195 = !DILocation(line: 1542, column: 15, scope: !4101)
!4196 = !DILocation(line: 1542, column: 18, scope: !4101)
!4197 = !DILocation(line: 1542, column: 46, scope: !4101)
!4198 = !DILocation(line: 1543, column: 15, scope: !4101)
!4199 = !DILocation(line: 1543, column: 18, scope: !4101)
!4200 = !DILocation(line: 1540, column: 15, scope: !4092)
!4201 = !DILocation(line: 1545, column: 24, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 1545, column: 19)
!4203 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 1544, column: 13)
!4204 = !DILocation(line: 0, scope: !4202)
!4205 = !DILocation(line: 1545, column: 19, scope: !4203)
!4206 = !DILocation(line: 1549, column: 37, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 1546, column: 17)
!4208 = !DILocation(line: 1549, column: 30, scope: !4207)
!4209 = !DILocation(line: 1549, column: 34, scope: !4207)
!4210 = !DILocation(line: 1553, column: 51, scope: !4207)
!4211 = !DILocation(line: 1553, column: 31, scope: !4207)
!4212 = !DILocation(line: 1554, column: 30, scope: !4207)
!4213 = !DILocation(line: 1554, column: 34, scope: !4207)
!4214 = !DILocation(line: 1555, column: 37, scope: !4207)
!4215 = !DILocation(line: 1555, column: 30, scope: !4207)
!4216 = !DILocation(line: 1555, column: 34, scope: !4207)
!4217 = !DILocation(line: 1558, column: 17, scope: !4207)
!4218 = !DILocation(line: 1563, column: 37, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 1560, column: 17)
!4220 = !DILocation(line: 1563, column: 30, scope: !4219)
!4221 = !DILocation(line: 1563, column: 34, scope: !4219)
!4222 = !DILocation(line: 1567, column: 51, scope: !4219)
!4223 = !DILocation(line: 1567, column: 31, scope: !4219)
!4224 = !DILocation(line: 1568, column: 30, scope: !4219)
!4225 = !DILocation(line: 1568, column: 34, scope: !4219)
!4226 = !DILocation(line: 1569, column: 37, scope: !4219)
!4227 = !DILocation(line: 1569, column: 30, scope: !4219)
!4228 = !DILocation(line: 1569, column: 34, scope: !4219)
!4229 = !DILocation(line: 1574, column: 20, scope: !4100)
!4230 = !DILocation(line: 1575, column: 20, scope: !4100)
!4231 = !DILocation(line: 1575, column: 24, scope: !4100)
!4232 = !DILocation(line: 1575, column: 40, scope: !4100)
!4233 = !DILocation(line: 1576, column: 24, scope: !4100)
!4234 = !DILocation(line: 1576, column: 27, scope: !4100)
!4235 = !DILocation(line: 1574, column: 20, scope: !4101)
!4236 = !DILocation(line: 1578, column: 27, scope: !4099)
!4237 = !DILocation(line: 0, scope: !4099)
!4238 = !DILocation(line: 1579, column: 31, scope: !4099)
!4239 = !DILocation(line: 1582, column: 47, scope: !4099)
!4240 = !DILocation(line: 1582, column: 27, scope: !4099)
!4241 = !DILocation(line: 1583, column: 15, scope: !4099)
!4242 = !DILocation(line: 1585, column: 24, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 1585, column: 19)
!4244 = !DILocation(line: 1585, column: 19, scope: !4099)
!4245 = !DILocation(line: 1587, column: 30, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1586, column: 17)
!4247 = !DILocation(line: 1587, column: 34, scope: !4246)
!4248 = !DILocation(line: 1588, column: 30, scope: !4246)
!4249 = !DILocation(line: 1588, column: 34, scope: !4246)
!4250 = !DILocation(line: 1589, column: 17, scope: !4246)
!4251 = !DILocation(line: 1591, column: 47, scope: !4099)
!4252 = !DILocation(line: 1591, column: 27, scope: !4099)
!4253 = !DILocation(line: 1592, column: 15, scope: !4099)
!4254 = !DILocation(line: 1594, column: 24, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 1594, column: 19)
!4256 = !DILocation(line: 1594, column: 19, scope: !4099)
!4257 = !DILocation(line: 1596, column: 30, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 1595, column: 17)
!4259 = !DILocation(line: 1596, column: 34, scope: !4258)
!4260 = !DILocation(line: 1597, column: 30, scope: !4258)
!4261 = !DILocation(line: 1597, column: 34, scope: !4258)
!4262 = !DILocation(line: 1598, column: 17, scope: !4258)
!4263 = !DILocation(line: 1601, column: 20, scope: !4106)
!4264 = !DILocation(line: 1601, column: 36, scope: !4106)
!4265 = !DILocation(line: 1602, column: 20, scope: !4106)
!4266 = !DILocation(line: 1602, column: 24, scope: !4106)
!4267 = !DILocation(line: 1603, column: 24, scope: !4106)
!4268 = !DILocation(line: 1603, column: 27, scope: !4106)
!4269 = !DILocation(line: 1603, column: 43, scope: !4106)
!4270 = !DILocation(line: 1601, column: 20, scope: !4100)
!4271 = !DILocation(line: 1605, column: 27, scope: !4105)
!4272 = !DILocation(line: 0, scope: !4105)
!4273 = !DILocation(line: 1606, column: 31, scope: !4105)
!4274 = !DILocation(line: 1609, column: 47, scope: !4105)
!4275 = !DILocation(line: 1609, column: 27, scope: !4105)
!4276 = !DILocation(line: 1610, column: 15, scope: !4105)
!4277 = !DILocation(line: 1612, column: 24, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 1612, column: 19)
!4279 = !DILocation(line: 1612, column: 19, scope: !4105)
!4280 = !DILocation(line: 1614, column: 30, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 1613, column: 17)
!4282 = !DILocation(line: 1614, column: 34, scope: !4281)
!4283 = !DILocation(line: 1615, column: 30, scope: !4281)
!4284 = !DILocation(line: 1615, column: 34, scope: !4281)
!4285 = !DILocation(line: 1616, column: 17, scope: !4281)
!4286 = !DILocation(line: 1618, column: 47, scope: !4105)
!4287 = !DILocation(line: 1618, column: 27, scope: !4105)
!4288 = !DILocation(line: 1619, column: 15, scope: !4105)
!4289 = !DILocation(line: 1621, column: 19, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 1621, column: 19)
!4291 = !DILocation(line: 1621, column: 36, scope: !4290)
!4292 = !DILocation(line: 1621, column: 19, scope: !4105)
!4293 = !DILocation(line: 1623, column: 30, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4290, file: !3, line: 1622, column: 17)
!4295 = !DILocation(line: 1623, column: 34, scope: !4294)
!4296 = !DILocation(line: 1624, column: 30, scope: !4294)
!4297 = !DILocation(line: 1624, column: 34, scope: !4294)
!4298 = !DILocation(line: 1625, column: 17, scope: !4294)
!4299 = !DILocation(line: 1627, column: 9, scope: !4093)
!4300 = !DILocation(line: 1627, column: 9, scope: !4092)
!4301 = !DILocation(line: 1631, column: 1, scope: !4059)
!4302 = distinct !DISubprogram(name: "cprop_into_successor_phis", scope: !3, file: !3, line: 1422, type: !3761, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4303)
!4303 = !{!4304, !4305, !4306, !4307, !4311, !4312, !4316, !4317, !4318}
!4304 = !DILocalVariable(name: "bb", arg: 1, scope: !4302, file: !3, line: 1422, type: !1505)
!4305 = !DILocalVariable(name: "e", scope: !4302, file: !3, line: 1424, type: !999)
!4306 = !DILocalVariable(name: "ei", scope: !4302, file: !3, line: 1425, type: !3358)
!4307 = !DILocalVariable(name: "indx", scope: !4308, file: !3, line: 1429, type: !682)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !3, line: 1428, column: 5)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 1427, column: 3)
!4310 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 1427, column: 3)
!4311 = !DILocalVariable(name: "gsi", scope: !4308, file: !3, line: 1430, type: !2685)
!4312 = !DILocalVariable(name: "new_val", scope: !4313, file: !3, line: 1444, type: !757)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 1443, column: 2)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 1442, column: 7)
!4315 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 1442, column: 7)
!4316 = !DILocalVariable(name: "orig_p", scope: !4313, file: !3, line: 1445, type: !2144)
!4317 = !DILocalVariable(name: "orig_val", scope: !4313, file: !3, line: 1446, type: !757)
!4318 = !DILocalVariable(name: "phi", scope: !4313, file: !3, line: 1447, type: !1019)
!4319 = !DILocation(line: 0, scope: !4302)
!4320 = !DILocation(line: 1424, column: 3, scope: !4302)
!4321 = !DILocation(line: 1425, column: 3, scope: !4302)
!4322 = !DILocation(line: 1427, column: 3, scope: !4310)
!4323 = !DILocation(line: 0, scope: !4309)
!4324 = !DILocation(line: 0, scope: !4308)
!4325 = !DILocation(line: 1427, column: 3, scope: !4309)
!4326 = !DILocation(line: 1430, column: 7, scope: !4308)
!4327 = !DILocation(line: 1434, column: 11, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 1434, column: 11)
!4329 = !DILocation(line: 1434, column: 14, scope: !4328)
!4330 = !DILocation(line: 1434, column: 20, scope: !4328)
!4331 = !DILocation(line: 1434, column: 11, scope: !4308)
!4332 = !DILocation(line: 1437, column: 13, scope: !4308)
!4333 = !DILocation(line: 1437, column: 32, scope: !4308)
!4334 = !DILocation(line: 1438, column: 11, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 1438, column: 11)
!4336 = !DILocation(line: 1438, column: 11, scope: !4308)
!4337 = !DILocation(line: 1441, column: 14, scope: !4308)
!4338 = !DILocation(line: 1441, column: 17, scope: !4308)
!4339 = !DILocation(line: 1442, column: 7, scope: !4308)
!4340 = !DILocation(line: 1442, column: 16, scope: !4314)
!4341 = !DILocation(line: 1442, column: 15, scope: !4314)
!4342 = !DILocation(line: 1442, column: 7, scope: !4315)
!4343 = !DILocation(line: 1447, column: 24, scope: !4313)
!4344 = !DILocation(line: 0, scope: !4313)
!4345 = !DILocation(line: 1451, column: 13, scope: !4313)
!4346 = !DILocation(line: 1452, column: 15, scope: !4313)
!4347 = !DILocation(line: 1453, column: 8, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 1453, column: 8)
!4349 = !DILocation(line: 1453, column: 29, scope: !4348)
!4350 = !DILocation(line: 1453, column: 8, scope: !4313)
!4351 = !DILocation(line: 1458, column: 14, scope: !4313)
!4352 = !DILocation(line: 1459, column: 8, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 1459, column: 8)
!4354 = !DILocation(line: 1460, column: 19, scope: !4353)
!4355 = !DILocation(line: 1460, column: 8, scope: !4353)
!4356 = !DILocation(line: 1461, column: 12, scope: !4353)
!4357 = !DILocation(line: 1461, column: 32, scope: !4353)
!4358 = !DILocation(line: 1462, column: 5, scope: !4353)
!4359 = !DILocation(line: 1462, column: 8, scope: !4353)
!4360 = !DILocation(line: 1463, column: 8, scope: !4353)
!4361 = !DILocation(line: 1463, column: 11, scope: !4353)
!4362 = !DILocation(line: 1459, column: 8, scope: !4313)
!4363 = !DILocation(line: 1464, column: 6, scope: !4353)
!4364 = !DILocation(line: 1442, column: 33, scope: !4314)
!4365 = !DILocation(line: 1442, column: 7, scope: !4314)
!4366 = distinct !{!4366, !4342, !4367}
!4367 = !DILocation(line: 1465, column: 2, scope: !4315)
!4368 = !DILocation(line: 1466, column: 5, scope: !4309)
!4369 = distinct !{!4369, !4322, !4370}
!4370 = !DILocation(line: 1466, column: 5, scope: !4310)
!4371 = !DILocation(line: 1467, column: 1, scope: !4302)
!4372 = distinct !DISubprogram(name: "VEC_expr_hash_elt_t_heap_reserve", scope: !3, file: !3, line: 126, type: !4373, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4375)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!682, !3564, !682}
!4375 = !{!4376, !4377, !4378}
!4376 = !DILocalVariable(name: "vec_", arg: 1, scope: !4372, file: !3, line: 126, type: !3564)
!4377 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4372, file: !3, line: 126, type: !682)
!4378 = !DILocalVariable(name: "extend", scope: !4372, file: !3, line: 126, type: !682)
!4379 = !DILocation(line: 0, scope: !4372)
!4380 = !DILocation(line: 126, column: 1, scope: !4372)
!4381 = !DILocation(line: 126, column: 1, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 126, column: 1)
!4383 = distinct !DISubprogram(name: "VEC_expr_hash_elt_t_base_quick_push", scope: !3, file: !3, line: 125, type: !4384, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4387)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{!3746, !4386, !2124}
!4386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!4387 = !{!4388, !4389, !4390}
!4388 = !DILocalVariable(name: "vec_", arg: 1, scope: !4383, file: !3, line: 125, type: !4386)
!4389 = !DILocalVariable(name: "obj_", arg: 2, scope: !4383, file: !3, line: 125, type: !2124)
!4390 = !DILocalVariable(name: "slot_", scope: !4383, file: !3, line: 125, type: !3746)
!4391 = !DILocation(line: 0, scope: !4383)
!4392 = !DILocation(line: 125, column: 1, scope: !4383)
!4393 = distinct !DISubprogram(name: "VEC_expr_hash_elt_t_base_space", scope: !3, file: !3, line: 125, type: !4394, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4396)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{!682, !4386, !682}
!4396 = !{!4397, !4398}
!4397 = !DILocalVariable(name: "vec_", arg: 1, scope: !4393, file: !3, line: 125, type: !4386)
!4398 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4393, file: !3, line: 125, type: !682)
!4399 = !DILocation(line: 0, scope: !4393)
!4400 = !DILocation(line: 125, column: 1, scope: !4393)
!4401 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !318, file: !318, line: 184, type: !4402, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4404)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!682, !3574, !682}
!4404 = !{!4405, !4406, !4407}
!4405 = !DILocalVariable(name: "vec_", arg: 1, scope: !4401, file: !318, line: 184, type: !3574)
!4406 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4401, file: !318, line: 184, type: !682)
!4407 = !DILocalVariable(name: "extend", scope: !4401, file: !318, line: 184, type: !682)
!4408 = !DILocation(line: 0, scope: !4401)
!4409 = !DILocation(line: 184, column: 1, scope: !4401)
!4410 = !DILocation(line: 184, column: 1, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4401, file: !318, line: 184, column: 1)
!4412 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !318, file: !318, line: 182, type: !4413, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4416)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!1053, !4415, !757}
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!4416 = !{!4417, !4418, !4419}
!4417 = !DILocalVariable(name: "vec_", arg: 1, scope: !4412, file: !318, line: 182, type: !4415)
!4418 = !DILocalVariable(name: "obj_", arg: 2, scope: !4412, file: !318, line: 182, type: !757)
!4419 = !DILocalVariable(name: "slot_", scope: !4412, file: !318, line: 182, type: !1053)
!4420 = !DILocation(line: 0, scope: !4412)
!4421 = !DILocation(line: 182, column: 1, scope: !4412)
!4422 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !318, file: !318, line: 182, type: !4423, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4425)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!682, !4415, !682}
!4425 = !{!4426, !4427}
!4426 = !DILocalVariable(name: "vec_", arg: 1, scope: !4422, file: !318, line: 182, type: !4415)
!4427 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4422, file: !318, line: 182, type: !682)
!4428 = !DILocation(line: 0, scope: !4422)
!4429 = !DILocation(line: 182, column: 1, scope: !4422)
!4430 = distinct !DISubprogram(name: "single_incoming_edge_ignoring_loop_edges", scope: !3, file: !3, line: 963, type: !4431, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4433)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!999, !1505}
!4433 = !{!4434, !4435, !4436, !4437}
!4434 = !DILocalVariable(name: "bb", arg: 1, scope: !4430, file: !3, line: 963, type: !1505)
!4435 = !DILocalVariable(name: "retval", scope: !4430, file: !3, line: 965, type: !999)
!4436 = !DILocalVariable(name: "e", scope: !4430, file: !3, line: 966, type: !999)
!4437 = !DILocalVariable(name: "ei", scope: !4430, file: !3, line: 967, type: !3358)
!4438 = !DILocation(line: 0, scope: !4430)
!4439 = !DILocation(line: 966, column: 3, scope: !4430)
!4440 = !DILocation(line: 967, column: 3, scope: !4430)
!4441 = !DILocation(line: 969, column: 3, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 969, column: 3)
!4443 = !DILocation(line: 0, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 969, column: 3)
!4445 = !DILocation(line: 965, column: 8, scope: !4430)
!4446 = !DILocation(line: 969, column: 3, scope: !4444)
!4447 = !DILocation(line: 973, column: 43, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 973, column: 11)
!4449 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 970, column: 5)
!4450 = !DILocation(line: 973, column: 46, scope: !4448)
!4451 = !DILocation(line: 973, column: 54, scope: !4448)
!4452 = !DILocation(line: 973, column: 11, scope: !4448)
!4453 = !DILocation(line: 973, column: 11, scope: !4449)
!4454 = !DILocation(line: 978, column: 11, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 978, column: 11)
!4456 = !DILocation(line: 978, column: 11, scope: !4449)
!4457 = !DILocation(line: 983, column: 16, scope: !4449)
!4458 = !DILocation(line: 984, column: 5, scope: !4449)
!4459 = distinct !{!4459, !4441, !4460}
!4460 = !DILocation(line: 984, column: 5, scope: !4442)
!4461 = !DILocation(line: 987, column: 1, scope: !4430)
!4462 = distinct !DISubprogram(name: "record_equality", scope: !3, file: !3, line: 1336, type: !4463, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4465)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{null, !757, !757}
!4465 = !{!4466, !4467, !4468, !4469}
!4466 = !DILocalVariable(name: "x", arg: 1, scope: !4462, file: !3, line: 1336, type: !757)
!4467 = !DILocalVariable(name: "y", arg: 2, scope: !4462, file: !3, line: 1336, type: !757)
!4468 = !DILocalVariable(name: "prev_x", scope: !4462, file: !3, line: 1338, type: !757)
!4469 = !DILocalVariable(name: "prev_y", scope: !4462, file: !3, line: 1338, type: !757)
!4470 = !DILocation(line: 0, scope: !4462)
!4471 = !DILocation(line: 1340, column: 7, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 1340, column: 7)
!4473 = !DILocation(line: 1340, column: 21, scope: !4472)
!4474 = !DILocation(line: 1340, column: 7, scope: !4462)
!4475 = !DILocation(line: 1341, column: 14, scope: !4472)
!4476 = !DILocation(line: 1342, column: 7, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 1342, column: 7)
!4478 = !DILocation(line: 1342, column: 21, scope: !4477)
!4479 = !DILocation(line: 1342, column: 7, scope: !4462)
!4480 = !DILocation(line: 1343, column: 14, scope: !4477)
!4481 = !DILocation(line: 1349, column: 7, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 1349, column: 7)
!4483 = !DILocation(line: 1349, column: 7, scope: !4462)
!4484 = !DILocation(line: 1351, column: 12, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 1351, column: 12)
!4486 = !DILocation(line: 1352, column: 5, scope: !4485)
!4487 = !DILocation(line: 1352, column: 9, scope: !4485)
!4488 = !DILocation(line: 1352, column: 35, scope: !4485)
!4489 = !DILocation(line: 1352, column: 32, scope: !4485)
!4490 = !DILocation(line: 1351, column: 12, scope: !4482)
!4491 = !DILocation(line: 1354, column: 12, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 1354, column: 12)
!4493 = !DILocation(line: 1354, column: 19, scope: !4492)
!4494 = !DILocation(line: 1354, column: 22, scope: !4492)
!4495 = !DILocation(line: 1354, column: 12, scope: !4485)
!4496 = !DILocation(line: 1356, column: 12, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 1356, column: 12)
!4498 = !DILocation(line: 1356, column: 12, scope: !4492)
!4499 = !DILocation(line: 1360, column: 7, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 1360, column: 7)
!4501 = !DILocation(line: 1360, column: 21, scope: !4500)
!4502 = !DILocation(line: 1360, column: 7, scope: !4462)
!4503 = !DILocation(line: 1367, column: 7, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 1367, column: 7)
!4505 = !DILocation(line: 1368, column: 11, scope: !4504)
!4506 = !DILocation(line: 1368, column: 25, scope: !4504)
!4507 = !DILocation(line: 1369, column: 4, scope: !4504)
!4508 = !DILocation(line: 1369, column: 7, scope: !4504)
!4509 = !DILocation(line: 1367, column: 7, scope: !4462)
!4510 = !DILocation(line: 1372, column: 3, scope: !4462)
!4511 = !DILocation(line: 1373, column: 1, scope: !4462)
!4512 = distinct !DISubprogram(name: "record_cond", scope: !3, file: !3, line: 1073, type: !4513, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4515)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{null, !2136}
!4515 = !{!4516, !4517, !4518}
!4516 = !DILocalVariable(name: "p", arg: 1, scope: !4512, file: !3, line: 1073, type: !2136)
!4517 = !DILocalVariable(name: "element", scope: !4512, file: !3, line: 1075, type: !2111)
!4518 = !DILocalVariable(name: "slot", scope: !4512, file: !3, line: 1076, type: !1559)
!4519 = !DILocation(line: 0, scope: !4512)
!4520 = !DILocation(line: 1075, column: 35, scope: !4512)
!4521 = !DILocation(line: 1078, column: 42, scope: !4512)
!4522 = !DILocation(line: 1078, column: 51, scope: !4512)
!4523 = !DILocation(line: 1078, column: 3, scope: !4512)
!4524 = !DILocation(line: 1080, column: 36, scope: !4512)
!4525 = !DILocation(line: 1081, column: 17, scope: !4512)
!4526 = !DILocation(line: 1080, column: 10, scope: !4512)
!4527 = !DILocation(line: 1082, column: 7, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4512, file: !3, line: 1082, column: 7)
!4529 = !DILocation(line: 1082, column: 13, scope: !4528)
!4530 = !DILocation(line: 1082, column: 7, scope: !4512)
!4531 = !DILocation(line: 1084, column: 13, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 1083, column: 5)
!4533 = !DILocation(line: 1086, column: 11, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 1086, column: 11)
!4535 = !DILocation(line: 1086, column: 21, scope: !4534)
!4536 = !DILocation(line: 1086, column: 25, scope: !4534)
!4537 = !DILocation(line: 1086, column: 36, scope: !4534)
!4538 = !DILocation(line: 1086, column: 11, scope: !4532)
!4539 = !DILocation(line: 1088, column: 11, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 1087, column: 9)
!4541 = !DILocation(line: 1089, column: 32, scope: !4540)
!4542 = !DILocation(line: 1089, column: 11, scope: !4540)
!4543 = !DILocation(line: 1090, column: 9, scope: !4540)
!4544 = !DILocation(line: 1092, column: 7, scope: !4532)
!4545 = !DILocation(line: 1093, column: 5, scope: !4532)
!4546 = !DILocation(line: 1095, column: 5, scope: !4528)
!4547 = !DILocation(line: 1096, column: 1, scope: !4512)
!4548 = distinct !DISubprogram(name: "ei_start_1", scope: !526, file: !526, line: 696, type: !4549, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4551)
!4549 = !DISubroutineType(types: !4550)
!4550 = !{!3358, !3363}
!4551 = !{!4552, !4553}
!4552 = !DILocalVariable(name: "ev", arg: 1, scope: !4548, file: !526, line: 696, type: !3363)
!4553 = !DILocalVariable(name: "i", scope: !4548, file: !526, line: 698, type: !3358)
!4554 = !DILocation(line: 0, scope: !4548)
!4555 = !DILocation(line: 700, column: 5, scope: !4548)
!4556 = !DILocation(line: 700, column: 11, scope: !4548)
!4557 = !DILocation(line: 701, column: 5, scope: !4548)
!4558 = !DILocation(line: 701, column: 15, scope: !4548)
!4559 = !DILocation(line: 703, column: 3, scope: !4548)
!4560 = distinct !DISubprogram(name: "ei_cond", scope: !526, file: !526, line: 771, type: !4561, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4564)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{!681, !3358, !4563}
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!4564 = !{!4565, !4566}
!4565 = !DILocalVariable(name: "ei", arg: 1, scope: !4560, file: !526, line: 771, type: !3358)
!4566 = !DILocalVariable(name: "p", arg: 2, scope: !4560, file: !526, line: 771, type: !4563)
!4567 = !DILocation(line: 0, scope: !4560)
!4568 = !DILocation(line: 773, column: 8, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4560, file: !526, line: 773, column: 7)
!4570 = !DILocation(line: 773, column: 7, scope: !4560)
!4571 = !DILocation(line: 775, column: 12, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4569, file: !526, line: 774, column: 5)
!4573 = !DILocation(line: 776, column: 7, scope: !4572)
!4574 = !DILocation(line: 781, column: 7, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4569, file: !526, line: 779, column: 5)
!4576 = !DILocation(line: 0, scope: !4569)
!4577 = !DILocation(line: 783, column: 1, scope: !4560)
!4578 = distinct !DISubprogram(name: "ei_next", scope: !526, file: !526, line: 736, type: !4579, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4582)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{null, !4581}
!4581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3358, size: 64)
!4582 = !{!4583}
!4583 = !DILocalVariable(name: "i", arg: 1, scope: !4578, file: !526, line: 736, type: !4581)
!4584 = !DILocation(line: 0, scope: !4578)
!4585 = !DILocation(line: 738, column: 3, scope: !4578)
!4586 = !DILocation(line: 739, column: 11, scope: !4578)
!4587 = !DILocation(line: 740, column: 1, scope: !4578)
!4588 = distinct !DISubprogram(name: "ei_end_p", scope: !526, file: !526, line: 721, type: !4589, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4591)
!4589 = !DISubroutineType(types: !4590)
!4590 = !{!681, !3358}
!4591 = !{!4592}
!4592 = !DILocalVariable(name: "i", arg: 1, scope: !4588, file: !526, line: 721, type: !3358)
!4593 = !DILocation(line: 723, column: 22, scope: !4588)
!4594 = !DILocation(line: 723, column: 19, scope: !4588)
!4595 = !DILocation(line: 723, column: 10, scope: !4588)
!4596 = !DILocation(line: 723, column: 3, scope: !4588)
!4597 = distinct !DISubprogram(name: "ei_edge", scope: !526, file: !526, line: 752, type: !4598, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4600)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{!999, !3358}
!4600 = !{!4601}
!4601 = !DILocalVariable(name: "i", arg: 1, scope: !4597, file: !526, line: 752, type: !3358)
!4602 = !DILocation(line: 754, column: 10, scope: !4597)
!4603 = !DILocation(line: 754, column: 3, scope: !4597)
!4604 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !526, file: !526, line: 150, type: !4605, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4609)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{!7, !4607}
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!4609 = !{!4610}
!4610 = !DILocalVariable(name: "vec_", arg: 1, scope: !4604, file: !526, line: 150, type: !4607)
!4611 = !DILocation(line: 0, scope: !4604)
!4612 = !DILocation(line: 150, column: 1, scope: !4604)
!4613 = distinct !DISubprogram(name: "ei_container", scope: !526, file: !526, line: 685, type: !4614, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4616)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{!987, !3358}
!4616 = !{!4617}
!4617 = !DILocalVariable(name: "i", arg: 1, scope: !4613, file: !526, line: 685, type: !3358)
!4618 = !DILocation(line: 687, column: 3, scope: !4613)
!4619 = !DILocation(line: 688, column: 10, scope: !4613)
!4620 = !DILocation(line: 688, column: 3, scope: !4613)
!4621 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !526, file: !526, line: 150, type: !4622, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4624)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!999, !4607, !7}
!4624 = !{!4625, !4626}
!4625 = !DILocalVariable(name: "vec_", arg: 1, scope: !4621, file: !526, line: 150, type: !4607)
!4626 = !DILocalVariable(name: "ix_", arg: 2, scope: !4621, file: !526, line: 150, type: !7)
!4627 = !DILocation(line: 0, scope: !4621)
!4628 = !DILocation(line: 150, column: 1, scope: !4621)
!4629 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !318, file: !318, line: 182, type: !4630, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4634)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!7, !4632}
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4633, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1603)
!4634 = !{!4635}
!4635 = !DILocalVariable(name: "vec_", arg: 1, scope: !4629, file: !318, line: 182, type: !4632)
!4636 = !DILocation(line: 0, scope: !4629)
!4637 = !DILocation(line: 182, column: 1, scope: !4629)
!4638 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !318, file: !318, line: 182, type: !4639, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4641)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!757, !4632, !7}
!4641 = !{!4642, !4643}
!4642 = !DILocalVariable(name: "vec_", arg: 1, scope: !4638, file: !318, line: 182, type: !4632)
!4643 = !DILocalVariable(name: "ix_", arg: 2, scope: !4638, file: !318, line: 182, type: !7)
!4644 = !DILocation(line: 0, scope: !4638)
!4645 = !DILocation(line: 182, column: 1, scope: !4638)
!4646 = distinct !DISubprogram(name: "record_const_or_copy_1", scope: !3, file: !3, line: 1267, type: !4647, scopeLine: 1268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4649)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{null, !757, !757, !757}
!4649 = !{!4650, !4651, !4652}
!4650 = !DILocalVariable(name: "x", arg: 1, scope: !4646, file: !3, line: 1267, type: !757)
!4651 = !DILocalVariable(name: "y", arg: 2, scope: !4646, file: !3, line: 1267, type: !757)
!4652 = !DILocalVariable(name: "prev_x", arg: 3, scope: !4646, file: !3, line: 1267, type: !757)
!4653 = !DILocation(line: 0, scope: !4646)
!4654 = !DILocation(line: 1269, column: 3, scope: !4646)
!4655 = !DILocation(line: 1271, column: 7, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 1271, column: 7)
!4657 = !DILocation(line: 1271, column: 17, scope: !4656)
!4658 = !DILocation(line: 1271, column: 21, scope: !4656)
!4659 = !DILocation(line: 1271, column: 32, scope: !4656)
!4660 = !DILocation(line: 1271, column: 7, scope: !4646)
!4661 = !DILocation(line: 1273, column: 7, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 1272, column: 5)
!4663 = !DILocation(line: 1274, column: 27, scope: !4662)
!4664 = !DILocation(line: 1274, column: 7, scope: !4662)
!4665 = !DILocation(line: 1275, column: 16, scope: !4662)
!4666 = !DILocation(line: 1275, column: 7, scope: !4662)
!4667 = !DILocation(line: 1276, column: 27, scope: !4662)
!4668 = !DILocation(line: 1276, column: 7, scope: !4662)
!4669 = !DILocation(line: 1277, column: 16, scope: !4662)
!4670 = !DILocation(line: 1277, column: 7, scope: !4662)
!4671 = !DILocation(line: 1278, column: 5, scope: !4662)
!4672 = !DILocation(line: 1280, column: 3, scope: !4646)
!4673 = !DILocation(line: 1281, column: 3, scope: !4646)
!4674 = !DILocation(line: 1282, column: 3, scope: !4646)
!4675 = !DILocation(line: 1283, column: 1, scope: !4646)
!4676 = distinct !DISubprogram(name: "initialize_hash_element_from_expr", scope: !3, file: !3, line: 318, type: !4677, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4680)
!4677 = !DISubroutineType(types: !4678)
!4678 = !{null, !4679, !757, !2111}
!4679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!4680 = !{!4681, !4682, !4683}
!4681 = !DILocalVariable(name: "expr", arg: 1, scope: !4676, file: !3, line: 318, type: !4679)
!4682 = !DILocalVariable(name: "lhs", arg: 2, scope: !4676, file: !3, line: 319, type: !757)
!4683 = !DILocalVariable(name: "element", arg: 3, scope: !4676, file: !3, line: 320, type: !2111)
!4684 = !DILocation(line: 0, scope: !4676)
!4685 = !DILocation(line: 322, column: 12, scope: !4676)
!4686 = !DILocation(line: 322, column: 19, scope: !4676)
!4687 = !DILocation(line: 323, column: 12, scope: !4676)
!4688 = !DILocation(line: 323, column: 16, scope: !4676)
!4689 = !DILocation(line: 324, column: 12, scope: !4676)
!4690 = !DILocation(line: 324, column: 17, scope: !4676)
!4691 = !DILocation(line: 325, column: 36, scope: !4676)
!4692 = !DILocation(line: 325, column: 19, scope: !4676)
!4693 = !DILocation(line: 325, column: 12, scope: !4676)
!4694 = !DILocation(line: 325, column: 17, scope: !4676)
!4695 = !DILocation(line: 326, column: 12, scope: !4676)
!4696 = !DILocation(line: 326, column: 18, scope: !4676)
!4697 = !DILocation(line: 327, column: 1, scope: !4676)
!4698 = distinct !DISubprogram(name: "print_expr_hash_elt", scope: !3, file: !3, line: 490, type: !4699, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4701)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{null, !2228, !752}
!4701 = !{!4702, !4703, !4704, !4707}
!4702 = !DILocalVariable(name: "stream", arg: 1, scope: !4698, file: !3, line: 490, type: !2228)
!4703 = !DILocalVariable(name: "element", arg: 2, scope: !4698, file: !3, line: 490, type: !752)
!4704 = !DILocalVariable(name: "i", scope: !4705, file: !3, line: 522, type: !1164)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 521, column: 9)
!4706 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 504, column: 5)
!4707 = !DILocalVariable(name: "nargs", scope: !4705, file: !3, line: 523, type: !1164)
!4708 = !DILocation(line: 0, scope: !4698)
!4709 = !DILocation(line: 492, column: 16, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 492, column: 7)
!4711 = !DILocation(line: 492, column: 7, scope: !4710)
!4712 = !DILocation(line: 492, column: 7, scope: !4698)
!4713 = !DILocation(line: 493, column: 5, scope: !4710)
!4714 = !DILocation(line: 495, column: 5, scope: !4710)
!4715 = !DILocation(line: 497, column: 16, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 497, column: 7)
!4717 = !DILocation(line: 497, column: 7, scope: !4716)
!4718 = !DILocation(line: 497, column: 7, scope: !4698)
!4719 = !DILocation(line: 499, column: 7, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 498, column: 5)
!4721 = !DILocation(line: 500, column: 7, scope: !4720)
!4722 = !DILocation(line: 501, column: 5, scope: !4720)
!4723 = !DILocation(line: 503, column: 25, scope: !4698)
!4724 = !DILocation(line: 503, column: 3, scope: !4698)
!4725 = !DILocation(line: 506, column: 62, scope: !4706)
!4726 = !DILocation(line: 506, column: 9, scope: !4706)
!4727 = !DILocation(line: 507, column: 9, scope: !4706)
!4728 = !DILocation(line: 510, column: 62, scope: !4706)
!4729 = !DILocation(line: 510, column: 72, scope: !4706)
!4730 = !DILocation(line: 510, column: 33, scope: !4706)
!4731 = !DILocation(line: 510, column: 9, scope: !4706)
!4732 = !DILocation(line: 511, column: 61, scope: !4706)
!4733 = !DILocation(line: 511, column: 9, scope: !4706)
!4734 = !DILocation(line: 512, column: 9, scope: !4706)
!4735 = !DILocation(line: 515, column: 62, scope: !4706)
!4736 = !DILocation(line: 515, column: 9, scope: !4706)
!4737 = !DILocation(line: 516, column: 63, scope: !4706)
!4738 = !DILocation(line: 516, column: 74, scope: !4706)
!4739 = !DILocation(line: 516, column: 34, scope: !4706)
!4740 = !DILocation(line: 516, column: 9, scope: !4706)
!4741 = !DILocation(line: 517, column: 62, scope: !4706)
!4742 = !DILocation(line: 517, column: 9, scope: !4706)
!4743 = !DILocation(line: 518, column: 9, scope: !4706)
!4744 = !DILocation(line: 523, column: 49, scope: !4705)
!4745 = !DILocation(line: 0, scope: !4705)
!4746 = !DILocation(line: 525, column: 62, scope: !4705)
!4747 = !DILocation(line: 525, column: 11, scope: !4705)
!4748 = !DILocation(line: 526, column: 11, scope: !4705)
!4749 = !DILocation(line: 0, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 528, column: 13)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 527, column: 11)
!4752 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 527, column: 11)
!4753 = !DILocation(line: 527, column: 16, scope: !4752)
!4754 = !DILocation(line: 0, scope: !4752)
!4755 = !DILocation(line: 527, column: 25, scope: !4751)
!4756 = !DILocation(line: 527, column: 11, scope: !4752)
!4757 = !DILocation(line: 529, column: 66, scope: !4750)
!4758 = !DILocation(line: 529, column: 43, scope: !4750)
!4759 = !DILocation(line: 529, column: 15, scope: !4750)
!4760 = !DILocation(line: 530, column: 21, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 530, column: 19)
!4762 = !DILocation(line: 530, column: 25, scope: !4761)
!4763 = !DILocation(line: 530, column: 19, scope: !4750)
!4764 = !DILocation(line: 531, column: 17, scope: !4761)
!4765 = !DILocation(line: 527, column: 11, scope: !4751)
!4766 = distinct !{!4766, !4756, !4767}
!4767 = !DILocation(line: 532, column: 13, scope: !4752)
!4768 = !DILocation(line: 533, column: 11, scope: !4705)
!4769 = !DILocation(line: 535, column: 9, scope: !4706)
!4770 = !DILocation(line: 537, column: 3, scope: !4698)
!4771 = !DILocation(line: 539, column: 16, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 539, column: 7)
!4773 = !DILocation(line: 539, column: 7, scope: !4772)
!4774 = !DILocation(line: 539, column: 7, scope: !4698)
!4775 = !DILocation(line: 541, column: 7, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 540, column: 5)
!4777 = !DILocation(line: 542, column: 43, scope: !4776)
!4778 = !DILocation(line: 542, column: 7, scope: !4776)
!4779 = !DILocation(line: 543, column: 5, scope: !4776)
!4780 = !DILocation(line: 544, column: 1, scope: !4698)
!4781 = distinct !DISubprogram(name: "avail_expr_hash", scope: !3, file: !3, line: 2307, type: !1545, scopeLine: 2308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4782)
!4782 = !{!4783, !4784, !4785, !4786, !4787}
!4783 = !DILocalVariable(name: "p", arg: 1, scope: !4781, file: !3, line: 2307, type: !1378)
!4784 = !DILocalVariable(name: "stmt", scope: !4781, file: !3, line: 2309, type: !1019)
!4785 = !DILocalVariable(name: "expr", scope: !4781, file: !3, line: 2310, type: !3046)
!4786 = !DILocalVariable(name: "vuse", scope: !4781, file: !3, line: 2311, type: !757)
!4787 = !DILocalVariable(name: "val", scope: !4781, file: !3, line: 2312, type: !1547)
!4788 = !DILocation(line: 0, scope: !4781)
!4789 = !DILocation(line: 2309, column: 52, scope: !4781)
!4790 = !DILocation(line: 2310, column: 74, scope: !4781)
!4791 = !DILocation(line: 2314, column: 9, scope: !4781)
!4792 = !DILocation(line: 2319, column: 8, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 2319, column: 7)
!4794 = !DILocation(line: 2319, column: 7, scope: !4781)
!4795 = !DILocation(line: 2326, column: 15, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 2326, column: 7)
!4797 = !DILocation(line: 2326, column: 13, scope: !4796)
!4798 = !DILocation(line: 2326, column: 7, scope: !4781)
!4799 = !DILocation(line: 2327, column: 11, scope: !4796)
!4800 = !DILocation(line: 2327, column: 5, scope: !4796)
!4801 = !DILocation(line: 2330, column: 1, scope: !4781)
!4802 = distinct !DISubprogram(name: "iterative_hash_hashable_expr", scope: !3, file: !3, line: 434, type: !4803, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4805)
!4803 = !DISubroutineType(types: !4804)
!4804 = !{!1547, !3046, !1547}
!4805 = !{!4806, !4807, !4808, !4811}
!4806 = !DILocalVariable(name: "expr", arg: 1, scope: !4802, file: !3, line: 434, type: !3046)
!4807 = !DILocalVariable(name: "val", arg: 2, scope: !4802, file: !3, line: 434, type: !1547)
!4808 = !DILocalVariable(name: "i", scope: !4809, file: !3, line: 470, type: !1164)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 469, column: 7)
!4810 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 437, column: 5)
!4811 = !DILocalVariable(name: "code", scope: !4809, file: !3, line: 471, type: !317)
!4812 = !DILocation(line: 0, scope: !4802)
!4813 = !DILocation(line: 436, column: 17, scope: !4802)
!4814 = !DILocation(line: 436, column: 3, scope: !4802)
!4815 = !DILocation(line: 439, column: 51, scope: !4810)
!4816 = !DILocation(line: 439, column: 13, scope: !4810)
!4817 = !DILocation(line: 440, column: 7, scope: !4810)
!4818 = !DILocation(line: 443, column: 13, scope: !4810)
!4819 = !DILocation(line: 449, column: 11, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 449, column: 11)
!4821 = !DILocation(line: 450, column: 11, scope: !4820)
!4822 = !DILocation(line: 450, column: 33, scope: !4820)
!4823 = !DILocation(line: 449, column: 11, scope: !4810)
!4824 = !DILocation(line: 451, column: 16, scope: !4820)
!4825 = !DILocation(line: 451, column: 13, scope: !4820)
!4826 = !DILocation(line: 451, column: 9, scope: !4820)
!4827 = !DILocation(line: 0, scope: !4810)
!4828 = !DILocation(line: 453, column: 50, scope: !4810)
!4829 = !DILocation(line: 453, column: 13, scope: !4810)
!4830 = !DILocation(line: 454, column: 7, scope: !4810)
!4831 = !DILocation(line: 457, column: 13, scope: !4810)
!4832 = !DILocation(line: 458, column: 51, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 458, column: 11)
!4834 = !DILocation(line: 458, column: 11, scope: !4833)
!4835 = !DILocation(line: 0, scope: !4833)
!4836 = !DILocation(line: 458, column: 11, scope: !4810)
!4837 = !DILocation(line: 460, column: 68, scope: !4833)
!4838 = !DILocation(line: 459, column: 17, scope: !4833)
!4839 = !DILocation(line: 459, column: 11, scope: !4833)
!4840 = !DILocation(line: 463, column: 17, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 462, column: 9)
!4842 = !DILocation(line: 464, column: 55, scope: !4841)
!4843 = !DILocation(line: 464, column: 17, scope: !4841)
!4844 = !DILocation(line: 471, column: 9, scope: !4809)
!4845 = !DILocation(line: 0, scope: !4809)
!4846 = !DILocation(line: 471, column: 24, scope: !4809)
!4847 = !DILocation(line: 473, column: 15, scope: !4809)
!4848 = !DILocation(line: 474, column: 51, scope: !4809)
!4849 = !DILocation(line: 474, column: 15, scope: !4809)
!4850 = !DILocation(line: 0, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !3, line: 475, column: 9)
!4852 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 475, column: 9)
!4853 = !DILocation(line: 475, column: 14, scope: !4852)
!4854 = !DILocation(line: 0, scope: !4852)
!4855 = !DILocation(line: 475, column: 40, scope: !4851)
!4856 = !DILocation(line: 475, column: 23, scope: !4851)
!4857 = !DILocation(line: 475, column: 9, scope: !4852)
!4858 = !DILocation(line: 476, column: 53, scope: !4851)
!4859 = !DILocation(line: 476, column: 38, scope: !4851)
!4860 = !DILocation(line: 476, column: 17, scope: !4851)
!4861 = !DILocation(line: 475, column: 48, scope: !4851)
!4862 = !DILocation(line: 475, column: 9, scope: !4851)
!4863 = distinct !{!4863, !4857, !4864}
!4864 = !DILocation(line: 476, column: 65, scope: !4852)
!4865 = !DILocation(line: 477, column: 7, scope: !4810)
!4866 = !DILocation(line: 478, column: 7, scope: !4810)
!4867 = !DILocation(line: 481, column: 7, scope: !4810)
!4868 = !DILocation(line: 482, column: 5, scope: !4810)
!4869 = !DILocation(line: 484, column: 3, scope: !4802)
!4870 = distinct !DISubprogram(name: "canonicalize_comparison", scope: !3, file: !3, line: 770, type: !3324, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4871)
!4871 = !{!4872, !4873, !4874, !4875}
!4872 = !DILocalVariable(name: "condstmt", arg: 1, scope: !4870, file: !3, line: 770, type: !1019)
!4873 = !DILocalVariable(name: "op0", scope: !4870, file: !3, line: 772, type: !757)
!4874 = !DILocalVariable(name: "op1", scope: !4870, file: !3, line: 773, type: !757)
!4875 = !DILocalVariable(name: "code", scope: !4870, file: !3, line: 774, type: !317)
!4876 = !DILocation(line: 0, scope: !4870)
!4877 = !DILocation(line: 776, column: 3, scope: !4870)
!4878 = !DILocation(line: 778, column: 9, scope: !4870)
!4879 = !DILocation(line: 779, column: 9, scope: !4870)
!4880 = !DILocation(line: 781, column: 10, scope: !4870)
!4881 = !DILocation(line: 789, column: 7, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 789, column: 7)
!4883 = !DILocation(line: 794, column: 4, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 793, column: 11)
!4885 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 790, column: 5)
!4886 = !DILocation(line: 789, column: 7, scope: !4870)
!4887 = !DILocation(line: 798, column: 18, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 797, column: 2)
!4889 = !DILocation(line: 800, column: 11, scope: !4888)
!4890 = !DILocation(line: 801, column: 11, scope: !4888)
!4891 = !DILocation(line: 802, column: 11, scope: !4888)
!4892 = !DILocation(line: 804, column: 11, scope: !4888)
!4893 = !DILocation(line: 805, column: 2, scope: !4888)
!4894 = !DILocation(line: 807, column: 1, scope: !4870)
!4895 = distinct !DISubprogram(name: "cprop_into_stmt", scope: !3, file: !3, line: 2043, type: !3324, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4896)
!4896 = !{!4897, !4898, !4899}
!4897 = !DILocalVariable(name: "stmt", arg: 1, scope: !4895, file: !3, line: 2043, type: !1019)
!4898 = !DILocalVariable(name: "op_p", scope: !4895, file: !3, line: 2045, type: !2144)
!4899 = !DILocalVariable(name: "iter", scope: !4895, file: !3, line: 2046, type: !4900)
!4900 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !667, line: 140, baseType: !4901)
!4901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !667, line: 131, size: 320, elements: !4902)
!4902 = !{!4903, !4904, !4905, !4907, !4909, !4910, !4911}
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4901, file: !667, line: 133, baseType: !681, size: 8)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !4901, file: !667, line: 134, baseType: !666, size: 32, offset: 32)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !4901, file: !667, line: 135, baseType: !4906, size: 64, offset: 64)
!4906 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !667, line: 42, baseType: !1048)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !4901, file: !667, line: 136, baseType: !4908, size: 64, offset: 128)
!4908 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !667, line: 50, baseType: !1055)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !4901, file: !667, line: 137, baseType: !682, size: 32, offset: 192)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !4901, file: !667, line: 138, baseType: !682, size: 32, offset: 224)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !4901, file: !667, line: 139, baseType: !1019, size: 64, offset: 256)
!4912 = !DILocation(line: 0, scope: !4895)
!4913 = !DILocation(line: 2046, column: 3, scope: !4895)
!4914 = !DILocation(line: 2048, column: 3, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2048, column: 3)
!4916 = !DILocation(line: 0, scope: !4915)
!4917 = !DILocation(line: 2048, column: 3, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 2048, column: 3)
!4919 = !DILocation(line: 2050, column: 11, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 2050, column: 11)
!4921 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 2049, column: 5)
!4922 = !DILocation(line: 2050, column: 43, scope: !4920)
!4923 = !DILocation(line: 2050, column: 11, scope: !4921)
!4924 = !DILocation(line: 2051, column: 2, scope: !4920)
!4925 = distinct !{!4925, !4914, !4926}
!4926 = !DILocation(line: 2052, column: 5, scope: !4915)
!4927 = !DILocation(line: 2053, column: 1, scope: !4895)
!4928 = distinct !DISubprogram(name: "gimple_modified_p", scope: !580, file: !580, line: 1425, type: !3724, scopeLine: 1426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4929)
!4929 = !{!4930}
!4930 = !DILocalVariable(name: "g", arg: 1, scope: !4928, file: !580, line: 1425, type: !2892)
!4931 = !DILocation(line: 0, scope: !4928)
!4932 = !DILocation(line: 1427, column: 11, scope: !4928)
!4933 = !DILocation(line: 1427, column: 10, scope: !4928)
!4934 = !DILocation(line: 1427, column: 50, scope: !4928)
!4935 = !DILocation(line: 1427, column: 33, scope: !4928)
!4936 = !DILocation(line: 1427, column: 3, scope: !4928)
!4937 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !580, file: !580, line: 1727, type: !2951, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4938)
!4938 = !{!4939}
!4939 = !DILocalVariable(name: "gs", arg: 1, scope: !4937, file: !580, line: 1727, type: !2892)
!4940 = !DILocation(line: 0, scope: !4937)
!4941 = !DILocation(line: 1730, column: 10, scope: !4937)
!4942 = !DILocation(line: 1730, column: 3, scope: !4937)
!4943 = distinct !DISubprogram(name: "gimple_goto_dest", scope: !580, file: !580, line: 2465, type: !2951, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4944)
!4944 = !{!4945}
!4945 = !DILocalVariable(name: "gs", arg: 1, scope: !4943, file: !580, line: 2465, type: !2892)
!4946 = !DILocation(line: 0, scope: !4943)
!4947 = !DILocation(line: 2468, column: 10, scope: !4943)
!4948 = !DILocation(line: 2468, column: 3, scope: !4943)
!4949 = distinct !DISubprogram(name: "gimple_switch_index", scope: !580, file: !580, line: 3180, type: !2951, scopeLine: 3181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4950)
!4950 = !{!4951}
!4951 = !DILocalVariable(name: "gs", arg: 1, scope: !4949, file: !580, line: 3180, type: !2892)
!4952 = !DILocation(line: 0, scope: !4949)
!4953 = !DILocation(line: 3183, column: 10, scope: !4949)
!4954 = !DILocation(line: 3183, column: 3, scope: !4949)
!4955 = distinct !DISubprogram(name: "gimple_has_volatile_ops", scope: !580, file: !580, line: 1477, type: !3724, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4956)
!4956 = !{!4957}
!4957 = !DILocalVariable(name: "stmt", arg: 1, scope: !4955, file: !580, line: 1477, type: !2892)
!4958 = !DILocation(line: 0, scope: !4955)
!4959 = !DILocation(line: 1479, column: 7, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4955, file: !580, line: 1479, column: 7)
!4961 = !DILocation(line: 1479, column: 7, scope: !4955)
!4962 = !DILocation(line: 1480, column: 25, scope: !4960)
!4963 = !DILocation(line: 1480, column: 12, scope: !4960)
!4964 = !DILocation(line: 1480, column: 5, scope: !4960)
!4965 = !DILocation(line: 0, scope: !4960)
!4966 = !DILocation(line: 1483, column: 1, scope: !4955)
!4967 = distinct !DISubprogram(name: "is_gimple_assign", scope: !580, file: !580, line: 1677, type: !3724, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4968)
!4968 = !{!4969}
!4969 = !DILocalVariable(name: "gs", arg: 1, scope: !4967, file: !580, line: 1677, type: !2892)
!4970 = !DILocation(line: 0, scope: !4967)
!4971 = !DILocation(line: 1679, column: 10, scope: !4967)
!4972 = !DILocation(line: 1679, column: 27, scope: !4967)
!4973 = !DILocation(line: 1679, column: 3, scope: !4967)
!4974 = distinct !DISubprogram(name: "is_gimple_call", scope: !580, file: !580, line: 1870, type: !3724, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4975)
!4975 = !{!4976}
!4976 = !DILocalVariable(name: "gs", arg: 1, scope: !4974, file: !580, line: 1870, type: !2892)
!4977 = !DILocation(line: 0, scope: !4974)
!4978 = !DILocation(line: 1872, column: 10, scope: !4974)
!4979 = !DILocation(line: 1872, column: 27, scope: !4974)
!4980 = !DILocation(line: 1872, column: 3, scope: !4974)
!4981 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !580, file: !580, line: 1878, type: !2951, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4982)
!4982 = !{!4983}
!4983 = !DILocalVariable(name: "gs", arg: 1, scope: !4981, file: !580, line: 1878, type: !2892)
!4984 = !DILocation(line: 0, scope: !4981)
!4985 = !DILocation(line: 1881, column: 10, scope: !4981)
!4986 = !DILocation(line: 1881, column: 3, scope: !4981)
!4987 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !580, file: !580, line: 1954, type: !2951, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4988)
!4988 = !{!4989, !4990}
!4989 = !DILocalVariable(name: "gs", arg: 1, scope: !4987, file: !580, line: 1954, type: !2892)
!4990 = !DILocalVariable(name: "addr", scope: !4987, file: !580, line: 1956, type: !757)
!4991 = !DILocation(line: 0, scope: !4987)
!4992 = !DILocation(line: 1956, column: 15, scope: !4987)
!4993 = !DILocation(line: 1957, column: 7, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4987, file: !580, line: 1957, column: 7)
!4995 = !DILocation(line: 1957, column: 24, scope: !4994)
!4996 = !DILocation(line: 1957, column: 7, scope: !4987)
!4997 = !DILocation(line: 1958, column: 12, scope: !4994)
!4998 = !DILocation(line: 1958, column: 5, scope: !4994)
!4999 = !DILocation(line: 1960, column: 1, scope: !4987)
!5000 = distinct !DISubprogram(name: "eliminate_redundant_computations", scope: !3, file: !3, line: 1778, type: !3344, scopeLine: 1779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5001)
!5001 = !{!5002, !5003, !5004, !5005, !5006, !5007, !5008}
!5002 = !DILocalVariable(name: "gsi", arg: 1, scope: !5000, file: !3, line: 1778, type: !3346)
!5003 = !DILocalVariable(name: "expr_type", scope: !5000, file: !3, line: 1780, type: !757)
!5004 = !DILocalVariable(name: "cached_lhs", scope: !5000, file: !3, line: 1781, type: !757)
!5005 = !DILocalVariable(name: "insert", scope: !5000, file: !3, line: 1782, type: !681)
!5006 = !DILocalVariable(name: "assigns_var_p", scope: !5000, file: !3, line: 1783, type: !681)
!5007 = !DILocalVariable(name: "stmt", scope: !5000, file: !3, line: 1785, type: !1019)
!5008 = !DILocalVariable(name: "def", scope: !5000, file: !3, line: 1787, type: !757)
!5009 = !DILocation(line: 0, scope: !5000)
!5010 = !DILocation(line: 1785, column: 17, scope: !5000)
!5011 = !DILocation(line: 1787, column: 14, scope: !5000)
!5012 = !DILocation(line: 1791, column: 9, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 1791, column: 7)
!5014 = !DILocation(line: 1792, column: 7, scope: !5013)
!5015 = !DILocation(line: 1792, column: 10, scope: !5013)
!5016 = !DILocation(line: 1792, column: 26, scope: !5013)
!5017 = !DILocation(line: 1793, column: 7, scope: !5013)
!5018 = !DILocation(line: 1793, column: 10, scope: !5013)
!5019 = !DILocation(line: 1794, column: 7, scope: !5013)
!5020 = !DILocation(line: 1794, column: 10, scope: !5013)
!5021 = !DILocation(line: 1797, column: 7, scope: !5013)
!5022 = !DILocation(line: 1797, column: 10, scope: !5013)
!5023 = !DILocation(line: 1791, column: 7, scope: !5000)
!5024 = !DILocation(line: 1798, column: 5, scope: !5013)
!5025 = !DILocation(line: 1801, column: 16, scope: !5000)
!5026 = !DILocation(line: 1803, column: 33, scope: !5000)
!5027 = !DILocation(line: 1806, column: 7, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 1806, column: 7)
!5029 = !DILocation(line: 1806, column: 7, scope: !5000)
!5030 = !DILocation(line: 1808, column: 19, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 1807, column: 5)
!5032 = !DILocation(line: 1810, column: 5, scope: !5031)
!5033 = !DILocation(line: 1811, column: 12, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 1811, column: 12)
!5035 = !DILocation(line: 1811, column: 31, scope: !5034)
!5036 = !DILocation(line: 1811, column: 12, scope: !5028)
!5037 = !DILocation(line: 1812, column: 17, scope: !5034)
!5038 = !DILocation(line: 1812, column: 5, scope: !5034)
!5039 = !DILocation(line: 1813, column: 12, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 1813, column: 12)
!5041 = !DILocation(line: 1813, column: 12, scope: !5034)
!5042 = !DILocation(line: 1815, column: 7, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 1814, column: 5)
!5044 = !DILocation(line: 1816, column: 19, scope: !5043)
!5045 = !DILocation(line: 1818, column: 5, scope: !5043)
!5046 = !DILocation(line: 1819, column: 12, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 1819, column: 12)
!5048 = !DILocation(line: 1819, column: 31, scope: !5047)
!5049 = !DILocation(line: 1819, column: 12, scope: !5040)
!5050 = !DILocation(line: 1820, column: 17, scope: !5047)
!5051 = !DILocation(line: 1820, column: 5, scope: !5047)
!5052 = !DILocation(line: 1822, column: 5, scope: !5047)
!5053 = !DILocation(line: 0, scope: !5028)
!5054 = !DILocation(line: 1824, column: 8, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 1824, column: 7)
!5056 = !DILocation(line: 1824, column: 7, scope: !5000)
!5057 = !DILocation(line: 1832, column: 8, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 1832, column: 7)
!5059 = !DILocation(line: 1832, column: 31, scope: !5058)
!5060 = !DILocation(line: 1833, column: 8, scope: !5058)
!5061 = !DILocation(line: 1833, column: 12, scope: !5058)
!5062 = !DILocation(line: 1834, column: 12, scope: !5058)
!5063 = !DILocation(line: 1834, column: 53, scope: !5058)
!5064 = !DILocation(line: 1834, column: 15, scope: !5058)
!5065 = !DILocation(line: 1835, column: 7, scope: !5058)
!5066 = !DILocation(line: 1835, column: 10, scope: !5058)
!5067 = !DILocation(line: 1832, column: 7, scope: !5000)
!5068 = !DILocation(line: 1842, column: 11, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 1842, column: 11)
!5070 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 1836, column: 3)
!5071 = !DILocation(line: 1842, column: 21, scope: !5069)
!5072 = !DILocation(line: 1842, column: 25, scope: !5069)
!5073 = !DILocation(line: 1842, column: 36, scope: !5069)
!5074 = !DILocation(line: 1842, column: 11, scope: !5070)
!5075 = !DILocation(line: 1844, column: 4, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 1843, column: 2)
!5077 = !DILocation(line: 1845, column: 23, scope: !5076)
!5078 = !DILocation(line: 1845, column: 43, scope: !5076)
!5079 = !DILocation(line: 1845, column: 4, scope: !5076)
!5080 = !DILocation(line: 1846, column: 13, scope: !5076)
!5081 = !DILocation(line: 1846, column: 4, scope: !5076)
!5082 = !DILocation(line: 1847, column: 24, scope: !5076)
!5083 = !DILocation(line: 1847, column: 47, scope: !5076)
!5084 = !DILocation(line: 1847, column: 4, scope: !5076)
!5085 = !DILocation(line: 1848, column: 20, scope: !5076)
!5086 = !DILocation(line: 1848, column: 11, scope: !5076)
!5087 = !DILocation(line: 1849, column: 2, scope: !5076)
!5088 = !DILocation(line: 1851, column: 23, scope: !5070)
!5089 = !DILocation(line: 1853, column: 11, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 1853, column: 11)
!5091 = !DILocation(line: 1854, column: 4, scope: !5090)
!5092 = !DILocation(line: 1854, column: 46, scope: !5090)
!5093 = !DILocation(line: 1854, column: 8, scope: !5090)
!5094 = !DILocation(line: 1853, column: 11, scope: !5070)
!5095 = !DILocation(line: 1855, column: 15, scope: !5090)
!5096 = !DILocation(line: 1855, column: 2, scope: !5090)
!5097 = !DILocation(line: 1857, column: 7, scope: !5070)
!5098 = !DILocation(line: 1862, column: 28, scope: !5070)
!5099 = !DILocation(line: 1862, column: 7, scope: !5070)
!5100 = !DILocation(line: 1863, column: 3, scope: !5070)
!5101 = !DILocation(line: 1864, column: 1, scope: !5000)
!5102 = distinct !DISubprogram(name: "record_equivalences_from_stmt", scope: !3, file: !3, line: 1873, type: !5103, scopeLine: 1874, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5105)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{null, !1019, !682}
!5105 = !{!5106, !5107, !5108, !5109, !5110, !5113, !5116, !5117}
!5106 = !DILocalVariable(name: "stmt", arg: 1, scope: !5102, file: !3, line: 1873, type: !1019)
!5107 = !DILocalVariable(name: "may_optimize_p", arg: 2, scope: !5102, file: !3, line: 1873, type: !682)
!5108 = !DILocalVariable(name: "lhs", scope: !5102, file: !3, line: 1875, type: !757)
!5109 = !DILocalVariable(name: "lhs_code", scope: !5102, file: !3, line: 1876, type: !317)
!5110 = !DILocalVariable(name: "rhs", scope: !5111, file: !3, line: 1886, type: !757)
!5111 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 1885, column: 5)
!5112 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 1883, column: 7)
!5113 = !DILocalVariable(name: "rhs", scope: !5114, file: !3, line: 1922, type: !757)
!5114 = distinct !DILexicalBlock(scope: !5115, file: !3, line: 1921, column: 5)
!5115 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 1915, column: 7)
!5116 = !DILocalVariable(name: "new_stmt", scope: !5114, file: !3, line: 1923, type: !1019)
!5117 = !DILocalVariable(name: "defstmt", scope: !5118, file: !3, line: 1937, type: !1019)
!5118 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 1927, column: 9)
!5119 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 1926, column: 11)
!5120 = !DILocation(line: 0, scope: !5102)
!5121 = !DILocation(line: 1878, column: 3, scope: !5102)
!5122 = !DILocation(line: 1880, column: 9, scope: !5102)
!5123 = !DILocation(line: 1881, column: 14, scope: !5102)
!5124 = !DILocation(line: 1883, column: 16, scope: !5112)
!5125 = !DILocation(line: 1884, column: 7, scope: !5112)
!5126 = !DILocation(line: 1884, column: 10, scope: !5112)
!5127 = !DILocation(line: 1883, column: 7, scope: !5102)
!5128 = !DILocation(line: 1886, column: 18, scope: !5111)
!5129 = !DILocation(line: 0, scope: !5111)
!5130 = !DILocation(line: 1894, column: 11, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 1894, column: 11)
!5132 = !DILocation(line: 1895, column: 4, scope: !5131)
!5133 = !DILocation(line: 1895, column: 8, scope: !5131)
!5134 = !DILocation(line: 1895, column: 24, scope: !5131)
!5135 = !DILocation(line: 1896, column: 8, scope: !5131)
!5136 = !DILocation(line: 1896, column: 11, scope: !5131)
!5137 = !DILocation(line: 1894, column: 11, scope: !5111)
!5138 = !DILocation(line: 1898, column: 6, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 1898, column: 6)
!5140 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1897, column: 7)
!5141 = !DILocation(line: 1898, column: 16, scope: !5139)
!5142 = !DILocation(line: 1898, column: 20, scope: !5139)
!5143 = !DILocation(line: 1898, column: 31, scope: !5139)
!5144 = !DILocation(line: 1898, column: 6, scope: !5140)
!5145 = !DILocation(line: 1900, column: 6, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 1899, column: 4)
!5147 = !DILocation(line: 1901, column: 26, scope: !5146)
!5148 = !DILocation(line: 1901, column: 6, scope: !5146)
!5149 = !DILocation(line: 1902, column: 15, scope: !5146)
!5150 = !DILocation(line: 1902, column: 6, scope: !5146)
!5151 = !DILocation(line: 1903, column: 26, scope: !5146)
!5152 = !DILocation(line: 1903, column: 6, scope: !5146)
!5153 = !DILocation(line: 1904, column: 15, scope: !5146)
!5154 = !DILocation(line: 1904, column: 6, scope: !5146)
!5155 = !DILocation(line: 1905, column: 4, scope: !5146)
!5156 = !DILocation(line: 1907, column: 2, scope: !5140)
!5157 = !DILocation(line: 1908, column: 7, scope: !5140)
!5158 = !DILocation(line: 1915, column: 8, scope: !5115)
!5159 = !DILocation(line: 1916, column: 7, scope: !5115)
!5160 = !DILocation(line: 1916, column: 10, scope: !5115)
!5161 = !DILocation(line: 1917, column: 7, scope: !5115)
!5162 = !DILocation(line: 1917, column: 10, scope: !5115)
!5163 = !DILocation(line: 1918, column: 7, scope: !5115)
!5164 = !DILocation(line: 1918, column: 11, scope: !5115)
!5165 = !DILocation(line: 1918, column: 49, scope: !5115)
!5166 = !DILocation(line: 1919, column: 4, scope: !5115)
!5167 = !DILocation(line: 1919, column: 32, scope: !5115)
!5168 = !DILocation(line: 1919, column: 7, scope: !5115)
!5169 = !DILocation(line: 1920, column: 7, scope: !5115)
!5170 = !DILocation(line: 1920, column: 11, scope: !5115)
!5171 = !DILocation(line: 1915, column: 7, scope: !5102)
!5172 = !DILocation(line: 1922, column: 18, scope: !5114)
!5173 = !DILocation(line: 0, scope: !5114)
!5174 = !DILocation(line: 1926, column: 11, scope: !5119)
!5175 = !DILocation(line: 1926, column: 27, scope: !5119)
!5176 = !DILocation(line: 1926, column: 11, scope: !5114)
!5177 = !DILocation(line: 1937, column: 28, scope: !5118)
!5178 = !DILocation(line: 1938, column: 22, scope: !5118)
!5179 = !DILocation(line: 1939, column: 35, scope: !5118)
!5180 = !DILocation(line: 1940, column: 9, scope: !5118)
!5181 = !DILocation(line: 1942, column: 20, scope: !5119)
!5182 = !DILocation(line: 0, scope: !5119)
!5183 = !DILocation(line: 1944, column: 34, scope: !5114)
!5184 = !DILocation(line: 1944, column: 7, scope: !5114)
!5185 = !DILocation(line: 1948, column: 7, scope: !5114)
!5186 = !DILocation(line: 1949, column: 5, scope: !5114)
!5187 = !DILocation(line: 1950, column: 1, scope: !5102)
!5188 = distinct !DISubprogram(name: "gimple_location", scope: !580, file: !580, line: 1139, type: !5189, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5191)
!5189 = !DISubroutineType(types: !5190)
!5190 = !{!879, !2892}
!5191 = !{!5192}
!5192 = !DILocalVariable(name: "g", arg: 1, scope: !5188, file: !580, line: 1139, type: !2892)
!5193 = !DILocation(line: 0, scope: !5188)
!5194 = !DILocation(line: 1141, column: 20, scope: !5188)
!5195 = !DILocation(line: 1141, column: 3, scope: !5188)
!5196 = distinct !DISubprogram(name: "gimple_cond_code", scope: !580, file: !580, line: 2221, type: !5197, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5199)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{!317, !2892}
!5199 = !{!5200}
!5200 = !DILocalVariable(name: "gs", arg: 1, scope: !5196, file: !580, line: 2221, type: !2892)
!5201 = !DILocation(line: 0, scope: !5196)
!5202 = !DILocation(line: 2224, column: 38, scope: !5196)
!5203 = !DILocation(line: 2224, column: 3, scope: !5196)
!5204 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !580, file: !580, line: 2241, type: !2951, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5205)
!5205 = !{!5206}
!5206 = !DILocalVariable(name: "gs", arg: 1, scope: !5204, file: !580, line: 2241, type: !2892)
!5207 = !DILocation(line: 0, scope: !5204)
!5208 = !DILocation(line: 2244, column: 10, scope: !5204)
!5209 = !DILocation(line: 2244, column: 3, scope: !5204)
!5210 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !580, file: !580, line: 2271, type: !2951, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5211)
!5211 = !{!5212}
!5212 = !DILocalVariable(name: "gs", arg: 1, scope: !5210, file: !580, line: 2271, type: !2892)
!5213 = !DILocation(line: 0, scope: !5210)
!5214 = !DILocation(line: 2274, column: 10, scope: !5210)
!5215 = !DILocation(line: 2274, column: 3, scope: !5210)
!5216 = distinct !DISubprogram(name: "gimple_cond_set_code", scope: !580, file: !580, line: 2231, type: !5217, scopeLine: 2232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5219)
!5217 = !DISubroutineType(types: !5218)
!5218 = !{null, !1019, !317}
!5219 = !{!5220, !5221}
!5220 = !DILocalVariable(name: "gs", arg: 1, scope: !5216, file: !580, line: 2231, type: !1019)
!5221 = !DILocalVariable(name: "code", arg: 2, scope: !5216, file: !580, line: 2231, type: !317)
!5222 = !DILocation(line: 0, scope: !5216)
!5223 = !DILocation(line: 2234, column: 14, scope: !5216)
!5224 = !DILocation(line: 2234, column: 22, scope: !5216)
!5225 = !DILocation(line: 2235, column: 1, scope: !5216)
!5226 = distinct !DISubprogram(name: "gimple_cond_set_lhs", scope: !580, file: !580, line: 2261, type: !5227, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5229)
!5227 = !DISubroutineType(types: !5228)
!5228 = !{null, !1019, !757}
!5229 = !{!5230, !5231}
!5230 = !DILocalVariable(name: "gs", arg: 1, scope: !5226, file: !580, line: 2261, type: !1019)
!5231 = !DILocalVariable(name: "lhs", arg: 2, scope: !5226, file: !580, line: 2261, type: !757)
!5232 = !DILocation(line: 0, scope: !5226)
!5233 = !DILocation(line: 2264, column: 3, scope: !5226)
!5234 = !DILocation(line: 2265, column: 1, scope: !5226)
!5235 = distinct !DISubprogram(name: "gimple_cond_set_rhs", scope: !580, file: !580, line: 2292, type: !5227, scopeLine: 2293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5236)
!5236 = !{!5237, !5238}
!5237 = !DILocalVariable(name: "gs", arg: 1, scope: !5235, file: !580, line: 2292, type: !1019)
!5238 = !DILocalVariable(name: "rhs", arg: 2, scope: !5235, file: !580, line: 2292, type: !757)
!5239 = !DILocation(line: 0, scope: !5235)
!5240 = !DILocation(line: 2295, column: 3, scope: !5235)
!5241 = !DILocation(line: 2296, column: 1, scope: !5235)
!5242 = distinct !DISubprogram(name: "update_stmt", scope: !580, file: !580, line: 1456, type: !3324, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5243)
!5243 = !{!5244}
!5244 = !DILocalVariable(name: "s", arg: 1, scope: !5242, file: !580, line: 1456, type: !1019)
!5245 = !DILocation(line: 0, scope: !5242)
!5246 = !DILocation(line: 1458, column: 7, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5242, file: !580, line: 1458, column: 7)
!5248 = !DILocation(line: 1458, column: 7, scope: !5242)
!5249 = !DILocation(line: 1460, column: 7, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5247, file: !580, line: 1459, column: 5)
!5251 = !DILocation(line: 1461, column: 7, scope: !5250)
!5252 = !DILocation(line: 1462, column: 5, scope: !5250)
!5253 = !DILocation(line: 1463, column: 1, scope: !5242)
!5254 = distinct !DISubprogram(name: "gimple_set_op", scope: !580, file: !580, line: 1663, type: !5255, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5257)
!5255 = !DISubroutineType(types: !5256)
!5256 = !{null, !1019, !7, !757}
!5257 = !{!5258, !5259, !5260}
!5258 = !DILocalVariable(name: "gs", arg: 1, scope: !5254, file: !580, line: 1663, type: !1019)
!5259 = !DILocalVariable(name: "i", arg: 2, scope: !5254, file: !580, line: 1663, type: !7)
!5260 = !DILocalVariable(name: "op", arg: 3, scope: !5254, file: !580, line: 1663, type: !757)
!5261 = !DILocation(line: 0, scope: !5254)
!5262 = !DILocation(line: 1665, column: 3, scope: !5254)
!5263 = !DILocation(line: 1671, column: 3, scope: !5254)
!5264 = !DILocation(line: 1671, column: 22, scope: !5254)
!5265 = !DILocation(line: 1672, column: 1, scope: !5254)
!5266 = distinct !DISubprogram(name: "gimple_has_ops", scope: !580, file: !580, line: 1274, type: !3724, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5267)
!5267 = !{!5268}
!5268 = !DILocalVariable(name: "g", arg: 1, scope: !5266, file: !580, line: 1274, type: !2892)
!5269 = !DILocation(line: 0, scope: !5266)
!5270 = !DILocation(line: 1276, column: 10, scope: !5266)
!5271 = !DILocation(line: 1276, column: 26, scope: !5266)
!5272 = !DILocation(line: 1276, column: 41, scope: !5266)
!5273 = !DILocation(line: 1276, column: 44, scope: !5266)
!5274 = !DILocation(line: 1276, column: 60, scope: !5266)
!5275 = !DILocation(line: 1276, column: 3, scope: !5266)
!5276 = distinct !DISubprogram(name: "gimple_num_ops", scope: !580, file: !580, line: 1596, type: !2959, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5277)
!5277 = !{!5278}
!5278 = !DILocalVariable(name: "gs", arg: 1, scope: !5276, file: !580, line: 1596, type: !2892)
!5279 = !DILocation(line: 0, scope: !5276)
!5280 = !DILocation(line: 1598, column: 21, scope: !5276)
!5281 = !DILocation(line: 1598, column: 3, scope: !5276)
!5282 = distinct !DISubprogram(name: "gimple_ops", scope: !580, file: !580, line: 1614, type: !5283, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5285)
!5283 = !DISubroutineType(types: !5284)
!5284 = !{!1053, !1019}
!5285 = !{!5286, !5287}
!5286 = !DILocalVariable(name: "gs", arg: 1, scope: !5282, file: !580, line: 1614, type: !1019)
!5287 = !DILocalVariable(name: "off", scope: !5282, file: !580, line: 1616, type: !1164)
!5288 = !DILocation(line: 0, scope: !5282)
!5289 = !DILocation(line: 1621, column: 28, scope: !5282)
!5290 = !DILocation(line: 1621, column: 9, scope: !5282)
!5291 = !DILocation(line: 1622, column: 3, scope: !5282)
!5292 = !DILocation(line: 1624, column: 20, scope: !5282)
!5293 = !DILocation(line: 1624, column: 32, scope: !5282)
!5294 = !DILocation(line: 1624, column: 10, scope: !5282)
!5295 = !DILocation(line: 1624, column: 3, scope: !5282)
!5296 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !580, file: !580, line: 1073, type: !5297, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5299)
!5297 = !DISubroutineType(types: !5298)
!5298 = !{!640, !1019}
!5299 = !{!5300}
!5300 = !DILocalVariable(name: "gs", arg: 1, scope: !5296, file: !580, line: 1073, type: !1019)
!5301 = !DILocation(line: 0, scope: !5296)
!5302 = !DILocation(line: 1075, column: 24, scope: !5296)
!5303 = !DILocation(line: 1075, column: 10, scope: !5296)
!5304 = !DILocation(line: 1075, column: 3, scope: !5296)
!5305 = distinct !DISubprogram(name: "gss_for_code", scope: !580, file: !580, line: 1061, type: !5306, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5308)
!5306 = !DISubroutineType(types: !5307)
!5307 = !{!640, !579}
!5308 = !{!5309}
!5309 = !DILocalVariable(name: "code", arg: 1, scope: !5305, file: !580, line: 1061, type: !579)
!5310 = !DILocation(line: 0, scope: !5305)
!5311 = !DILocation(line: 1066, column: 10, scope: !5305)
!5312 = !DILocation(line: 1066, column: 3, scope: !5305)
!5313 = distinct !DISubprogram(name: "op_iter_init_use", scope: !2967, file: !2967, line: 768, type: !5314, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5317)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{!2144, !5316, !1019, !682}
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4900, size: 64)
!5317 = !{!5318, !5319, !5320}
!5318 = !DILocalVariable(name: "ptr", arg: 1, scope: !5313, file: !2967, line: 768, type: !5316)
!5319 = !DILocalVariable(name: "stmt", arg: 2, scope: !5313, file: !2967, line: 768, type: !1019)
!5320 = !DILocalVariable(name: "flags", arg: 3, scope: !5313, file: !2967, line: 768, type: !682)
!5321 = !DILocation(line: 0, scope: !5313)
!5322 = !DILocation(line: 770, column: 3, scope: !5313)
!5323 = !DILocation(line: 772, column: 3, scope: !5313)
!5324 = !DILocation(line: 773, column: 8, scope: !5313)
!5325 = !DILocation(line: 773, column: 18, scope: !5313)
!5326 = !DILocation(line: 774, column: 10, scope: !5313)
!5327 = !DILocation(line: 774, column: 3, scope: !5313)
!5328 = distinct !DISubprogram(name: "op_iter_done", scope: !2967, file: !2967, line: 652, type: !5329, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5333)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{!681, !5331}
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4900)
!5333 = !{!5334}
!5334 = !DILocalVariable(name: "ptr", arg: 1, scope: !5328, file: !2967, line: 652, type: !5331)
!5335 = !DILocation(line: 0, scope: !5328)
!5336 = !DILocation(line: 654, column: 15, scope: !5328)
!5337 = !DILocation(line: 654, column: 3, scope: !5328)
!5338 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !2967, file: !2967, line: 427, type: !5339, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5341)
!5339 = !DISubroutineType(types: !5340)
!5340 = !{!757, !2144}
!5341 = !{!5342}
!5342 = !DILocalVariable(name: "use", arg: 1, scope: !5338, file: !2967, line: 427, type: !2144)
!5343 = !DILocation(line: 0, scope: !5338)
!5344 = !DILocation(line: 429, column: 17, scope: !5338)
!5345 = !DILocation(line: 429, column: 10, scope: !5338)
!5346 = !DILocation(line: 429, column: 3, scope: !5338)
!5347 = distinct !DISubprogram(name: "cprop_operand", scope: !3, file: !3, line: 1956, type: !5348, scopeLine: 1957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5350)
!5348 = !DISubroutineType(types: !5349)
!5349 = !{null, !1019, !2144}
!5350 = !{!5351, !5352, !5353, !5354}
!5351 = !DILocalVariable(name: "stmt", arg: 1, scope: !5347, file: !3, line: 1956, type: !1019)
!5352 = !DILocalVariable(name: "op_p", arg: 2, scope: !5347, file: !3, line: 1956, type: !2144)
!5353 = !DILocalVariable(name: "val", scope: !5347, file: !3, line: 1958, type: !757)
!5354 = !DILocalVariable(name: "op", scope: !5347, file: !3, line: 1959, type: !757)
!5355 = !DILocation(line: 0, scope: !5347)
!5356 = !DILocation(line: 1959, column: 13, scope: !5347)
!5357 = !DILocation(line: 1964, column: 9, scope: !5347)
!5358 = !DILocation(line: 1965, column: 7, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 1965, column: 7)
!5360 = !DILocation(line: 1965, column: 18, scope: !5359)
!5361 = !DILocation(line: 1965, column: 11, scope: !5359)
!5362 = !DILocation(line: 1972, column: 12, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 1972, column: 11)
!5364 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 1966, column: 5)
!5365 = !DILocation(line: 1973, column: 4, scope: !5363)
!5366 = !DILocation(line: 1973, column: 8, scope: !5363)
!5367 = !DILocation(line: 1973, column: 24, scope: !5363)
!5368 = !DILocation(line: 1974, column: 8, scope: !5363)
!5369 = !DILocation(line: 1974, column: 11, scope: !5363)
!5370 = !DILocation(line: 1975, column: 8, scope: !5363)
!5371 = !DILocation(line: 1975, column: 11, scope: !5363)
!5372 = !DILocation(line: 1975, column: 36, scope: !5363)
!5373 = !DILocation(line: 1975, column: 33, scope: !5363)
!5374 = !DILocation(line: 1972, column: 11, scope: !5364)
!5375 = !DILocation(line: 1979, column: 11, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 1979, column: 11)
!5377 = !DILocation(line: 1979, column: 30, scope: !5376)
!5378 = !DILocation(line: 1980, column: 4, scope: !5376)
!5379 = !DILocation(line: 1980, column: 8, scope: !5376)
!5380 = !DILocation(line: 1979, column: 11, scope: !5364)
!5381 = !DILocation(line: 1986, column: 12, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 1986, column: 11)
!5383 = !DILocation(line: 1986, column: 11, scope: !5364)
!5384 = !DILocation(line: 1991, column: 11, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 1991, column: 11)
!5386 = !DILocation(line: 1992, column: 4, scope: !5385)
!5387 = !DILocation(line: 1992, column: 7, scope: !5385)
!5388 = !DILocation(line: 1993, column: 4, scope: !5385)
!5389 = !DILocation(line: 1993, column: 7, scope: !5385)
!5390 = !DILocation(line: 1994, column: 4, scope: !5385)
!5391 = !DILocation(line: 1994, column: 8, scope: !5385)
!5392 = !DILocation(line: 1991, column: 11, scope: !5364)
!5393 = !DILocation(line: 2002, column: 11, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 2002, column: 11)
!5395 = !DILocation(line: 2002, column: 38, scope: !5394)
!5396 = !DILocation(line: 2002, column: 36, scope: !5394)
!5397 = !DILocation(line: 2002, column: 11, scope: !5364)
!5398 = !DILocation(line: 2007, column: 11, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 2007, column: 11)
!5400 = !DILocation(line: 2007, column: 27, scope: !5399)
!5401 = !DILocation(line: 2008, column: 4, scope: !5399)
!5402 = !DILocation(line: 2008, column: 7, scope: !5399)
!5403 = !DILocation(line: 2007, column: 11, scope: !5364)
!5404 = !DILocation(line: 2012, column: 11, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 2012, column: 11)
!5406 = !DILocation(line: 2012, column: 21, scope: !5405)
!5407 = !DILocation(line: 2012, column: 25, scope: !5405)
!5408 = !DILocation(line: 2012, column: 36, scope: !5405)
!5409 = !DILocation(line: 2012, column: 11, scope: !5364)
!5410 = !DILocation(line: 2014, column: 4, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 2013, column: 2)
!5412 = !DILocation(line: 2015, column: 24, scope: !5411)
!5413 = !DILocation(line: 2015, column: 39, scope: !5411)
!5414 = !DILocation(line: 2015, column: 4, scope: !5411)
!5415 = !DILocation(line: 2016, column: 13, scope: !5411)
!5416 = !DILocation(line: 2017, column: 7, scope: !5411)
!5417 = !DILocation(line: 2017, column: 23, scope: !5411)
!5418 = !DILocation(line: 2016, column: 4, scope: !5411)
!5419 = !DILocation(line: 2018, column: 24, scope: !5411)
!5420 = !DILocation(line: 2018, column: 40, scope: !5411)
!5421 = !DILocation(line: 2018, column: 4, scope: !5411)
!5422 = !DILocation(line: 2019, column: 13, scope: !5411)
!5423 = !DILocation(line: 2019, column: 4, scope: !5411)
!5424 = !DILocation(line: 2020, column: 2, scope: !5411)
!5425 = !DILocation(line: 2022, column: 11, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 2022, column: 11)
!5427 = !DILocation(line: 2022, column: 27, scope: !5426)
!5428 = !DILocation(line: 2022, column: 11, scope: !5364)
!5429 = !DILocation(line: 2023, column: 26, scope: !5426)
!5430 = !DILocation(line: 2023, column: 2, scope: !5426)
!5431 = !DILocation(line: 2025, column: 25, scope: !5426)
!5432 = !DILocation(line: 2027, column: 7, scope: !5364)
!5433 = !DILocation(line: 2032, column: 7, scope: !5364)
!5434 = !DILocation(line: 2033, column: 5, scope: !5364)
!5435 = !DILocation(line: 2034, column: 1, scope: !5347)
!5436 = distinct !DISubprogram(name: "op_iter_next_use", scope: !2967, file: !2967, line: 659, type: !5437, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5439)
!5437 = !DISubroutineType(types: !5438)
!5438 = !{!2144, !5316}
!5439 = !{!5440, !5441}
!5440 = !DILocalVariable(name: "ptr", arg: 1, scope: !5436, file: !2967, line: 659, type: !5316)
!5441 = !DILocalVariable(name: "use_p", scope: !5436, file: !2967, line: 661, type: !2144)
!5442 = !DILocation(line: 0, scope: !5436)
!5443 = !DILocation(line: 665, column: 12, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5436, file: !2967, line: 665, column: 7)
!5445 = !DILocation(line: 665, column: 7, scope: !5444)
!5446 = !DILocation(line: 665, column: 7, scope: !5436)
!5447 = !DILocation(line: 667, column: 15, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5444, file: !2967, line: 666, column: 5)
!5449 = !DILocation(line: 668, column: 30, scope: !5448)
!5450 = !DILocation(line: 668, column: 17, scope: !5448)
!5451 = !DILocation(line: 669, column: 7, scope: !5448)
!5452 = !DILocation(line: 671, column: 12, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5436, file: !2967, line: 671, column: 7)
!5454 = !DILocation(line: 671, column: 25, scope: !5453)
!5455 = !DILocation(line: 671, column: 18, scope: !5453)
!5456 = !DILocation(line: 671, column: 7, scope: !5436)
!5457 = !DILocation(line: 673, column: 14, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5453, file: !2967, line: 672, column: 5)
!5459 = !DILocation(line: 673, column: 7, scope: !5458)
!5460 = !DILocation(line: 675, column: 8, scope: !5436)
!5461 = !DILocation(line: 675, column: 13, scope: !5436)
!5462 = !DILocation(line: 676, column: 3, scope: !5436)
!5463 = !DILocation(line: 677, column: 1, scope: !5436)
!5464 = distinct !DISubprogram(name: "op_iter_init", scope: !2967, file: !2967, line: 742, type: !5465, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5467)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{null, !5316, !1019, !682}
!5467 = !{!5468, !5469, !5470}
!5468 = !DILocalVariable(name: "ptr", arg: 1, scope: !5464, file: !2967, line: 742, type: !5316)
!5469 = !DILocalVariable(name: "stmt", arg: 2, scope: !5464, file: !2967, line: 742, type: !1019)
!5470 = !DILocalVariable(name: "flags", arg: 3, scope: !5464, file: !2967, line: 742, type: !682)
!5471 = !DILocation(line: 0, scope: !5464)
!5472 = !DILocation(line: 746, column: 3, scope: !5464)
!5473 = !DILocation(line: 748, column: 22, scope: !5464)
!5474 = !DILocation(line: 748, column: 15, scope: !5464)
!5475 = !DILocation(line: 748, column: 52, scope: !5464)
!5476 = !DILocation(line: 748, column: 8, scope: !5464)
!5477 = !DILocation(line: 748, column: 13, scope: !5464)
!5478 = !DILocation(line: 749, column: 15, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5464, file: !2967, line: 749, column: 7)
!5480 = !DILocation(line: 750, column: 7, scope: !5479)
!5481 = !DILocation(line: 750, column: 10, scope: !5479)
!5482 = !DILocation(line: 751, column: 7, scope: !5479)
!5483 = !DILocation(line: 751, column: 10, scope: !5479)
!5484 = !DILocation(line: 751, column: 29, scope: !5479)
!5485 = !DILocation(line: 749, column: 7, scope: !5464)
!5486 = !DILocation(line: 752, column: 22, scope: !5479)
!5487 = !DILocation(line: 752, column: 28, scope: !5479)
!5488 = !DILocation(line: 752, column: 15, scope: !5479)
!5489 = !DILocation(line: 752, column: 5, scope: !5479)
!5490 = !DILocation(line: 753, column: 22, scope: !5464)
!5491 = !DILocation(line: 753, column: 15, scope: !5464)
!5492 = !DILocation(line: 753, column: 52, scope: !5464)
!5493 = !DILocation(line: 753, column: 8, scope: !5464)
!5494 = !DILocation(line: 753, column: 13, scope: !5464)
!5495 = !DILocation(line: 754, column: 15, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5464, file: !2967, line: 754, column: 7)
!5497 = !DILocation(line: 755, column: 7, scope: !5496)
!5498 = !DILocation(line: 755, column: 10, scope: !5496)
!5499 = !DILocation(line: 756, column: 7, scope: !5496)
!5500 = !DILocation(line: 756, column: 10, scope: !5496)
!5501 = !DILocation(line: 756, column: 29, scope: !5496)
!5502 = !DILocation(line: 754, column: 7, scope: !5464)
!5503 = !DILocation(line: 757, column: 22, scope: !5496)
!5504 = !DILocation(line: 757, column: 28, scope: !5496)
!5505 = !DILocation(line: 757, column: 15, scope: !5496)
!5506 = !DILocation(line: 757, column: 5, scope: !5496)
!5507 = !DILocation(line: 758, column: 8, scope: !5464)
!5508 = !DILocation(line: 758, column: 13, scope: !5464)
!5509 = !DILocation(line: 760, column: 8, scope: !5464)
!5510 = !DILocation(line: 760, column: 14, scope: !5464)
!5511 = !DILocation(line: 761, column: 8, scope: !5464)
!5512 = !DILocation(line: 761, column: 16, scope: !5464)
!5513 = !DILocation(line: 762, column: 8, scope: !5464)
!5514 = !DILocation(line: 762, column: 17, scope: !5464)
!5515 = !DILocation(line: 763, column: 1, scope: !5464)
!5516 = distinct !DISubprogram(name: "gimple_def_ops", scope: !580, file: !580, line: 1292, type: !5517, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5519)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{!1048, !2892}
!5519 = !{!5520}
!5520 = !DILocalVariable(name: "g", arg: 1, scope: !5516, file: !580, line: 1292, type: !2892)
!5521 = !DILocation(line: 0, scope: !5516)
!5522 = !DILocation(line: 1294, column: 8, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5516, file: !580, line: 1294, column: 7)
!5524 = !DILocation(line: 1294, column: 7, scope: !5516)
!5525 = !DILocation(line: 1296, column: 26, scope: !5516)
!5526 = !DILocation(line: 1296, column: 3, scope: !5516)
!5527 = !DILocation(line: 1297, column: 1, scope: !5516)
!5528 = distinct !DISubprogram(name: "gimple_vdef", scope: !580, file: !580, line: 1375, type: !2951, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5529)
!5529 = !{!5530}
!5530 = !DILocalVariable(name: "g", arg: 1, scope: !5528, file: !580, line: 1375, type: !2892)
!5531 = !DILocation(line: 0, scope: !5528)
!5532 = !DILocation(line: 1377, column: 8, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5528, file: !580, line: 1377, column: 7)
!5534 = !DILocation(line: 1377, column: 7, scope: !5528)
!5535 = !DILocation(line: 1379, column: 23, scope: !5528)
!5536 = !DILocation(line: 1379, column: 3, scope: !5528)
!5537 = !DILocation(line: 1380, column: 1, scope: !5528)
!5538 = distinct !DISubprogram(name: "gimple_use_ops", scope: !580, file: !580, line: 1313, type: !5539, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5541)
!5539 = !DISubroutineType(types: !5540)
!5540 = !{!1055, !2892}
!5541 = !{!5542}
!5542 = !DILocalVariable(name: "g", arg: 1, scope: !5538, file: !580, line: 1313, type: !2892)
!5543 = !DILocation(line: 0, scope: !5538)
!5544 = !DILocation(line: 1315, column: 8, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5538, file: !580, line: 1315, column: 7)
!5546 = !DILocation(line: 1315, column: 7, scope: !5538)
!5547 = !DILocation(line: 1317, column: 26, scope: !5538)
!5548 = !DILocation(line: 1317, column: 3, scope: !5538)
!5549 = !DILocation(line: 1318, column: 1, scope: !5538)
!5550 = distinct !DISubprogram(name: "simple_iv_increment_p", scope: !3, file: !3, line: 1382, type: !5551, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5553)
!5551 = !DISubroutineType(types: !5552)
!5552 = !{!681, !1019}
!5553 = !{!5554, !5555, !5556, !5557, !5558}
!5554 = !DILocalVariable(name: "stmt", arg: 1, scope: !5550, file: !3, line: 1382, type: !1019)
!5555 = !DILocalVariable(name: "lhs", scope: !5550, file: !3, line: 1384, type: !757)
!5556 = !DILocalVariable(name: "preinc", scope: !5550, file: !3, line: 1384, type: !757)
!5557 = !DILocalVariable(name: "phi", scope: !5550, file: !3, line: 1385, type: !1019)
!5558 = !DILocalVariable(name: "i", scope: !5550, file: !3, line: 1386, type: !1164)
!5559 = !DILocation(line: 0, scope: !5550)
!5560 = !DILocation(line: 1388, column: 7, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 1388, column: 7)
!5562 = !DILocation(line: 1388, column: 26, scope: !5561)
!5563 = !DILocation(line: 1388, column: 7, scope: !5550)
!5564 = !DILocation(line: 1391, column: 9, scope: !5550)
!5565 = !DILocation(line: 1392, column: 7, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 1392, column: 7)
!5567 = !DILocation(line: 1392, column: 23, scope: !5566)
!5568 = !DILocation(line: 1392, column: 7, scope: !5550)
!5569 = !DILocation(line: 1395, column: 7, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 1395, column: 7)
!5571 = !DILocation(line: 1395, column: 37, scope: !5570)
!5572 = !DILocation(line: 1396, column: 7, scope: !5570)
!5573 = !DILocation(line: 1396, column: 10, scope: !5570)
!5574 = !DILocation(line: 1396, column: 40, scope: !5570)
!5575 = !DILocation(line: 1395, column: 7, scope: !5550)
!5576 = !DILocation(line: 1399, column: 12, scope: !5550)
!5577 = !DILocation(line: 1401, column: 7, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 1401, column: 7)
!5579 = !DILocation(line: 1401, column: 26, scope: !5578)
!5580 = !DILocation(line: 1401, column: 7, scope: !5550)
!5581 = !DILocation(line: 1404, column: 9, scope: !5550)
!5582 = !DILocation(line: 1405, column: 7, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 1405, column: 7)
!5584 = !DILocation(line: 1405, column: 25, scope: !5583)
!5585 = !DILocation(line: 1405, column: 7, scope: !5550)
!5586 = !DILocation(line: 1408, column: 3, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 1408, column: 3)
!5588 = !DILocation(line: 0, scope: !5587)
!5589 = !DILocation(line: 1408, column: 19, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 1408, column: 3)
!5591 = !DILocation(line: 1408, column: 17, scope: !5590)
!5592 = !DILocation(line: 1409, column: 9, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 1409, column: 9)
!5594 = !DILocation(line: 1409, column: 37, scope: !5593)
!5595 = !DILocation(line: 1409, column: 9, scope: !5590)
!5596 = !DILocation(line: 1408, column: 47, scope: !5590)
!5597 = !DILocation(line: 1408, column: 3, scope: !5590)
!5598 = distinct !{!5598, !5586, !5599}
!5599 = !DILocation(line: 1410, column: 14, scope: !5587)
!5600 = !DILocation(line: 1413, column: 1, scope: !5550)
!5601 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !580, file: !580, line: 1694, type: !2951, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5602)
!5602 = !{!5603}
!5603 = !DILocalVariable(name: "gs", arg: 1, scope: !5601, file: !580, line: 1694, type: !2892)
!5604 = !DILocation(line: 0, scope: !5601)
!5605 = !DILocation(line: 1697, column: 10, scope: !5601)
!5606 = !DILocation(line: 1697, column: 3, scope: !5601)
!5607 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !580, file: !580, line: 1815, type: !5197, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5608)
!5608 = !{!5609, !5610}
!5609 = !DILocalVariable(name: "gs", arg: 1, scope: !5607, file: !580, line: 1815, type: !2892)
!5610 = !DILocalVariable(name: "code", scope: !5607, file: !580, line: 1817, type: !317)
!5611 = !DILocation(line: 0, scope: !5607)
!5612 = !DILocation(line: 1820, column: 10, scope: !5607)
!5613 = !DILocation(line: 1821, column: 7, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5607, file: !580, line: 1821, column: 7)
!5615 = !DILocation(line: 1821, column: 35, scope: !5614)
!5616 = !DILocation(line: 1821, column: 7, scope: !5607)
!5617 = !DILocation(line: 1822, column: 12, scope: !5614)
!5618 = !DILocation(line: 1822, column: 5, scope: !5614)
!5619 = !DILocation(line: 1824, column: 3, scope: !5607)
!5620 = distinct !DISubprogram(name: "gimple_op", scope: !580, file: !580, line: 1631, type: !5621, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5623)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{!757, !2892, !7}
!5623 = !{!5624, !5625}
!5624 = !DILocalVariable(name: "gs", arg: 1, scope: !5620, file: !580, line: 1631, type: !2892)
!5625 = !DILocalVariable(name: "i", arg: 2, scope: !5620, file: !580, line: 1631, type: !7)
!5626 = !DILocation(line: 0, scope: !5620)
!5627 = !DILocation(line: 1633, column: 7, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5620, file: !580, line: 1633, column: 7)
!5629 = !DILocation(line: 1633, column: 7, scope: !5620)
!5630 = !DILocation(line: 1638, column: 14, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5628, file: !580, line: 1634, column: 5)
!5632 = !DILocation(line: 1638, column: 7, scope: !5631)
!5633 = !DILocation(line: 0, scope: !5628)
!5634 = !DILocation(line: 1642, column: 1, scope: !5620)
!5635 = distinct !DISubprogram(name: "gimple_expr_code", scope: !580, file: !580, line: 1438, type: !5197, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5636)
!5636 = !{!5637, !5638}
!5637 = !DILocalVariable(name: "stmt", arg: 1, scope: !5635, file: !580, line: 1438, type: !2892)
!5638 = !DILocalVariable(name: "code", scope: !5635, file: !580, line: 1440, type: !579)
!5639 = !DILocation(line: 0, scope: !5635)
!5640 = !DILocation(line: 1440, column: 27, scope: !5635)
!5641 = !DILocation(line: 1441, column: 29, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5635, file: !580, line: 1441, column: 7)
!5643 = !DILocation(line: 1442, column: 42, scope: !5642)
!5644 = !DILocation(line: 1442, column: 5, scope: !5642)
!5645 = !DILocation(line: 1446, column: 5, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5642, file: !580, line: 1443, column: 12)
!5647 = !DILocation(line: 1448, column: 5, scope: !5635)
!5648 = !DILocation(line: 1450, column: 1, scope: !5635)
!5649 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !580, file: !580, line: 1686, type: !5650, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5652)
!5650 = !DISubroutineType(types: !5651)
!5651 = !{!673, !317}
!5652 = !{!5653}
!5653 = !DILocalVariable(name: "code", arg: 1, scope: !5649, file: !580, line: 1686, type: !317)
!5654 = !DILocation(line: 0, scope: !5649)
!5655 = !DILocation(line: 1688, column: 34, scope: !5649)
!5656 = !DILocation(line: 1688, column: 10, scope: !5649)
!5657 = !DILocation(line: 1688, column: 3, scope: !5649)
!5658 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !2967, file: !2967, line: 442, type: !5659, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5661)
!5659 = !DISubroutineType(types: !5660)
!5660 = !{!2144, !1019, !682}
!5661 = !{!5662, !5663}
!5662 = !DILocalVariable(name: "gs", arg: 1, scope: !5658, file: !2967, line: 442, type: !1019)
!5663 = !DILocalVariable(name: "i", arg: 2, scope: !5658, file: !2967, line: 442, type: !682)
!5664 = !DILocation(line: 0, scope: !5658)
!5665 = !DILocation(line: 444, column: 11, scope: !5658)
!5666 = !DILocation(line: 444, column: 35, scope: !5658)
!5667 = !DILocation(line: 444, column: 3, scope: !5658)
!5668 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !580, file: !580, line: 3100, type: !5669, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5671)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{!2974, !1019, !7}
!5671 = !{!5672, !5673}
!5672 = !DILocalVariable(name: "gs", arg: 1, scope: !5668, file: !580, line: 3100, type: !1019)
!5673 = !DILocalVariable(name: "index", arg: 2, scope: !5668, file: !580, line: 3100, type: !7)
!5674 = !DILocation(line: 0, scope: !5668)
!5675 = !DILocation(line: 3103, column: 3, scope: !5668)
!5676 = !DILocation(line: 3104, column: 12, scope: !5668)
!5677 = !DILocation(line: 3104, column: 3, scope: !5668)
!5678 = distinct !DISubprogram(name: "gimple_call_fn", scope: !580, file: !580, line: 1911, type: !2951, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5679)
!5679 = !{!5680}
!5680 = !DILocalVariable(name: "gs", arg: 1, scope: !5678, file: !580, line: 1911, type: !2892)
!5681 = !DILocation(line: 0, scope: !5678)
!5682 = !DILocation(line: 1914, column: 10, scope: !5678)
!5683 = !DILocation(line: 1914, column: 3, scope: !5678)
!5684 = distinct !DISubprogram(name: "lookup_avail_expr", scope: !3, file: !3, line: 2230, type: !5685, scopeLine: 2231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5687)
!5685 = !DISubroutineType(types: !5686)
!5686 = !{!757, !1019, !681}
!5687 = !{!5688, !5689, !5690, !5691, !5692, !5693, !5694}
!5688 = !DILocalVariable(name: "stmt", arg: 1, scope: !5684, file: !3, line: 2230, type: !1019)
!5689 = !DILocalVariable(name: "insert", arg: 2, scope: !5684, file: !3, line: 2230, type: !681)
!5690 = !DILocalVariable(name: "slot", scope: !5684, file: !3, line: 2232, type: !1559)
!5691 = !DILocalVariable(name: "lhs", scope: !5684, file: !3, line: 2233, type: !757)
!5692 = !DILocalVariable(name: "temp", scope: !5684, file: !3, line: 2234, type: !757)
!5693 = !DILocalVariable(name: "element", scope: !5684, file: !3, line: 2235, type: !754)
!5694 = !DILocalVariable(name: "element2", scope: !5695, file: !3, line: 2264, type: !2111)
!5695 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 2263, column: 5)
!5696 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 2262, column: 7)
!5697 = !DILocation(line: 0, scope: !5684)
!5698 = !DILocation(line: 2235, column: 3, scope: !5684)
!5699 = !DILocation(line: 2238, column: 9, scope: !5684)
!5700 = !DILocation(line: 2240, column: 3, scope: !5684)
!5701 = !DILocation(line: 2242, column: 7, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 2242, column: 7)
!5703 = !DILocation(line: 2242, column: 17, scope: !5702)
!5704 = !DILocation(line: 2242, column: 21, scope: !5702)
!5705 = !DILocation(line: 2242, column: 32, scope: !5702)
!5706 = !DILocation(line: 2242, column: 7, scope: !5684)
!5707 = !DILocation(line: 2244, column: 7, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 2243, column: 5)
!5709 = !DILocation(line: 2245, column: 28, scope: !5708)
!5710 = !DILocation(line: 2245, column: 7, scope: !5708)
!5711 = !DILocation(line: 2246, column: 5, scope: !5708)
!5712 = !DILocation(line: 2251, column: 20, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 2251, column: 7)
!5714 = !DILocation(line: 2251, column: 25, scope: !5713)
!5715 = !DILocation(line: 2252, column: 7, scope: !5713)
!5716 = !DILocation(line: 2252, column: 11, scope: !5713)
!5717 = !DILocation(line: 2252, column: 51, scope: !5713)
!5718 = !DILocation(line: 2253, column: 11, scope: !5713)
!5719 = !DILocation(line: 2253, column: 14, scope: !5713)
!5720 = !DILocation(line: 2251, column: 7, scope: !5684)
!5721 = !DILocation(line: 2257, column: 36, scope: !5684)
!5722 = !DILocation(line: 2257, column: 67, scope: !5684)
!5723 = !DILocation(line: 2258, column: 9, scope: !5684)
!5724 = !DILocation(line: 2257, column: 10, scope: !5684)
!5725 = !DILocation(line: 2259, column: 12, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 2259, column: 7)
!5727 = !DILocation(line: 2259, column: 7, scope: !5684)
!5728 = !DILocation(line: 2262, column: 7, scope: !5696)
!5729 = !DILocation(line: 2262, column: 13, scope: !5696)
!5730 = !DILocation(line: 2262, column: 7, scope: !5684)
!5731 = !DILocation(line: 2264, column: 40, scope: !5695)
!5732 = !DILocation(line: 0, scope: !5695)
!5733 = !DILocation(line: 2265, column: 19, scope: !5695)
!5734 = !DILocation(line: 2266, column: 17, scope: !5695)
!5735 = !DILocation(line: 2266, column: 23, scope: !5695)
!5736 = !DILocation(line: 2267, column: 13, scope: !5695)
!5737 = !DILocation(line: 2269, column: 11, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 2269, column: 11)
!5739 = !DILocation(line: 2269, column: 21, scope: !5738)
!5740 = !DILocation(line: 2269, column: 25, scope: !5738)
!5741 = !DILocation(line: 2269, column: 36, scope: !5738)
!5742 = !DILocation(line: 2269, column: 11, scope: !5695)
!5743 = !DILocation(line: 2271, column: 11, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 2270, column: 9)
!5745 = !DILocation(line: 2272, column: 32, scope: !5744)
!5746 = !DILocation(line: 2272, column: 11, scope: !5744)
!5747 = !DILocation(line: 2273, column: 9, scope: !5744)
!5748 = !DILocation(line: 2275, column: 7, scope: !5695)
!5749 = !DILocation(line: 2281, column: 42, scope: !5684)
!5750 = !DILocation(line: 2285, column: 7, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 2285, column: 7)
!5752 = !DILocation(line: 2285, column: 23, scope: !5751)
!5753 = !DILocation(line: 2285, column: 7, scope: !5684)
!5754 = !DILocation(line: 2287, column: 14, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 2286, column: 5)
!5756 = !DILocation(line: 2288, column: 11, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 2288, column: 11)
!5758 = !DILocation(line: 2288, column: 11, scope: !5755)
!5759 = !DILocation(line: 2290, column: 5, scope: !5755)
!5760 = !DILocation(line: 2292, column: 7, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 2292, column: 7)
!5762 = !DILocation(line: 2292, column: 17, scope: !5761)
!5763 = !DILocation(line: 2292, column: 21, scope: !5761)
!5764 = !DILocation(line: 2292, column: 32, scope: !5761)
!5765 = !DILocation(line: 2292, column: 7, scope: !5684)
!5766 = !DILocation(line: 2294, column: 7, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 2293, column: 5)
!5768 = !DILocation(line: 2295, column: 27, scope: !5767)
!5769 = !DILocation(line: 2295, column: 7, scope: !5767)
!5770 = !DILocation(line: 2296, column: 16, scope: !5767)
!5771 = !DILocation(line: 2296, column: 7, scope: !5767)
!5772 = !DILocation(line: 2297, column: 5, scope: !5767)
!5773 = !DILocation(line: 2300, column: 1, scope: !5684)
!5774 = distinct !DISubprogram(name: "initialize_hash_element", scope: !3, file: !3, line: 202, type: !5775, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5777)
!5775 = !DISubroutineType(types: !5776)
!5776 = !{null, !1019, !757, !2111}
!5777 = !{!5778, !5779, !5780, !5781, !5782, !5783, !5786, !5790}
!5778 = !DILocalVariable(name: "stmt", arg: 1, scope: !5774, file: !3, line: 202, type: !1019)
!5779 = !DILocalVariable(name: "lhs", arg: 2, scope: !5774, file: !3, line: 202, type: !757)
!5780 = !DILocalVariable(name: "element", arg: 3, scope: !5774, file: !3, line: 203, type: !2111)
!5781 = !DILocalVariable(name: "code", scope: !5774, file: !3, line: 205, type: !579)
!5782 = !DILocalVariable(name: "expr", scope: !5774, file: !3, line: 206, type: !4679)
!5783 = !DILocalVariable(name: "subcode", scope: !5784, file: !3, line: 210, type: !317)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 209, column: 5)
!5785 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 208, column: 7)
!5786 = !DILocalVariable(name: "nargs", scope: !5787, file: !3, line: 247, type: !1164)
!5787 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 246, column: 5)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 245, column: 12)
!5789 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 237, column: 12)
!5790 = !DILocalVariable(name: "i", scope: !5787, file: !3, line: 248, type: !1164)
!5791 = !DILocation(line: 0, scope: !5774)
!5792 = !DILocation(line: 205, column: 27, scope: !5774)
!5793 = !DILocation(line: 206, column: 42, scope: !5774)
!5794 = !DILocation(line: 208, column: 7, scope: !5774)
!5795 = !DILocation(line: 210, column: 32, scope: !5784)
!5796 = !DILocation(line: 0, scope: !5784)
!5797 = !DILocation(line: 212, column: 13, scope: !5784)
!5798 = !DILocation(line: 212, column: 18, scope: !5784)
!5799 = !DILocation(line: 214, column: 15, scope: !5784)
!5800 = !DILocation(line: 214, column: 7, scope: !5784)
!5801 = !DILocation(line: 217, column: 17, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 215, column: 9)
!5803 = !DILocation(line: 217, column: 22, scope: !5802)
!5804 = !DILocation(line: 218, column: 34, scope: !5802)
!5805 = !DILocation(line: 218, column: 28, scope: !5802)
!5806 = !DILocation(line: 218, column: 32, scope: !5802)
!5807 = !DILocation(line: 219, column: 11, scope: !5802)
!5808 = !DILocation(line: 221, column: 17, scope: !5802)
!5809 = !DILocation(line: 221, column: 22, scope: !5802)
!5810 = !DILocation(line: 222, column: 17, scope: !5802)
!5811 = !DILocation(line: 222, column: 15, scope: !5802)
!5812 = !DILocation(line: 223, column: 17, scope: !5802)
!5813 = !DILocation(line: 223, column: 27, scope: !5802)
!5814 = !DILocation(line: 223, column: 30, scope: !5802)
!5815 = !DILocation(line: 224, column: 34, scope: !5802)
!5816 = !DILocation(line: 224, column: 27, scope: !5802)
!5817 = !DILocation(line: 224, column: 32, scope: !5802)
!5818 = !DILocation(line: 225, column: 11, scope: !5802)
!5819 = !DILocation(line: 227, column: 17, scope: !5802)
!5820 = !DILocation(line: 227, column: 22, scope: !5802)
!5821 = !DILocation(line: 228, column: 17, scope: !5802)
!5822 = !DILocation(line: 228, column: 15, scope: !5802)
!5823 = !DILocation(line: 229, column: 17, scope: !5802)
!5824 = !DILocation(line: 229, column: 28, scope: !5802)
!5825 = !DILocation(line: 229, column: 31, scope: !5802)
!5826 = !DILocation(line: 230, column: 36, scope: !5802)
!5827 = !DILocation(line: 230, column: 28, scope: !5802)
!5828 = !DILocation(line: 230, column: 34, scope: !5802)
!5829 = !DILocation(line: 231, column: 36, scope: !5802)
!5830 = !DILocation(line: 231, column: 28, scope: !5802)
!5831 = !DILocation(line: 231, column: 34, scope: !5802)
!5832 = !DILocation(line: 232, column: 11, scope: !5802)
!5833 = !DILocation(line: 234, column: 11, scope: !5802)
!5834 = !DILocation(line: 235, column: 9, scope: !5802)
!5835 = !DILocation(line: 239, column: 20, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 238, column: 5)
!5837 = !DILocation(line: 239, column: 18, scope: !5836)
!5838 = !DILocation(line: 240, column: 13, scope: !5836)
!5839 = !DILocation(line: 240, column: 18, scope: !5836)
!5840 = !DILocation(line: 241, column: 29, scope: !5836)
!5841 = !DILocation(line: 241, column: 13, scope: !5836)
!5842 = !DILocation(line: 241, column: 24, scope: !5836)
!5843 = !DILocation(line: 241, column: 27, scope: !5836)
!5844 = !DILocation(line: 242, column: 32, scope: !5836)
!5845 = !DILocation(line: 242, column: 24, scope: !5836)
!5846 = !DILocation(line: 242, column: 30, scope: !5836)
!5847 = !DILocation(line: 243, column: 32, scope: !5836)
!5848 = !DILocation(line: 243, column: 24, scope: !5836)
!5849 = !DILocation(line: 243, column: 30, scope: !5836)
!5850 = !DILocation(line: 244, column: 5, scope: !5836)
!5851 = !DILocation(line: 247, column: 22, scope: !5787)
!5852 = !DILocation(line: 0, scope: !5787)
!5853 = !DILocation(line: 250, column: 7, scope: !5787)
!5854 = !DILocation(line: 252, column: 20, scope: !5787)
!5855 = !DILocation(line: 252, column: 18, scope: !5787)
!5856 = !DILocation(line: 253, column: 13, scope: !5787)
!5857 = !DILocation(line: 253, column: 18, scope: !5787)
!5858 = !DILocation(line: 254, column: 27, scope: !5787)
!5859 = !DILocation(line: 254, column: 22, scope: !5787)
!5860 = !DILocation(line: 254, column: 25, scope: !5787)
!5861 = !DILocation(line: 256, column: 11, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 256, column: 11)
!5863 = !DILocation(line: 256, column: 36, scope: !5862)
!5864 = !DILocation(line: 0, scope: !5862)
!5865 = !DILocation(line: 256, column: 11, scope: !5787)
!5866 = !DILocation(line: 257, column: 9, scope: !5862)
!5867 = !DILocation(line: 261, column: 22, scope: !5787)
!5868 = !DILocation(line: 261, column: 28, scope: !5787)
!5869 = !DILocation(line: 262, column: 38, scope: !5787)
!5870 = !DILocation(line: 262, column: 22, scope: !5787)
!5871 = !DILocation(line: 262, column: 27, scope: !5787)
!5872 = !DILocation(line: 263, column: 12, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 263, column: 7)
!5874 = !DILocation(line: 0, scope: !5873)
!5875 = !DILocation(line: 263, column: 21, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 263, column: 7)
!5877 = !DILocation(line: 263, column: 7, scope: !5873)
!5878 = !DILocation(line: 264, column: 57, scope: !5876)
!5879 = !DILocation(line: 264, column: 34, scope: !5876)
!5880 = !DILocation(line: 264, column: 24, scope: !5876)
!5881 = !DILocation(line: 264, column: 9, scope: !5876)
!5882 = !DILocation(line: 264, column: 32, scope: !5876)
!5883 = !DILocation(line: 263, column: 31, scope: !5876)
!5884 = !DILocation(line: 263, column: 7, scope: !5876)
!5885 = distinct !{!5885, !5877, !5886}
!5886 = !DILocation(line: 264, column: 58, scope: !5873)
!5887 = !DILocation(line: 268, column: 20, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 267, column: 5)
!5889 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 266, column: 12)
!5890 = !DILocation(line: 268, column: 18, scope: !5888)
!5891 = !DILocation(line: 269, column: 13, scope: !5888)
!5892 = !DILocation(line: 269, column: 18, scope: !5888)
!5893 = !DILocation(line: 270, column: 30, scope: !5888)
!5894 = !DILocation(line: 270, column: 24, scope: !5888)
!5895 = !DILocation(line: 270, column: 28, scope: !5888)
!5896 = !DILocation(line: 271, column: 5, scope: !5888)
!5897 = !DILocation(line: 274, column: 20, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 273, column: 5)
!5899 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 272, column: 12)
!5900 = !DILocation(line: 274, column: 18, scope: !5898)
!5901 = !DILocation(line: 275, column: 13, scope: !5898)
!5902 = !DILocation(line: 275, column: 18, scope: !5898)
!5903 = !DILocation(line: 276, column: 30, scope: !5898)
!5904 = !DILocation(line: 276, column: 24, scope: !5898)
!5905 = !DILocation(line: 276, column: 28, scope: !5898)
!5906 = !DILocation(line: 277, column: 5, scope: !5898)
!5907 = !DILocation(line: 279, column: 5, scope: !5899)
!5908 = !DILocation(line: 281, column: 12, scope: !5774)
!5909 = !DILocation(line: 281, column: 16, scope: !5774)
!5910 = !DILocation(line: 282, column: 12, scope: !5774)
!5911 = !DILocation(line: 282, column: 17, scope: !5774)
!5912 = !DILocation(line: 283, column: 36, scope: !5774)
!5913 = !DILocation(line: 283, column: 19, scope: !5774)
!5914 = !DILocation(line: 283, column: 12, scope: !5774)
!5915 = !DILocation(line: 283, column: 17, scope: !5774)
!5916 = !DILocation(line: 284, column: 12, scope: !5774)
!5917 = !DILocation(line: 284, column: 18, scope: !5774)
!5918 = !DILocation(line: 285, column: 1, scope: !5774)
!5919 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !580, file: !580, line: 1759, type: !2951, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5920)
!5920 = !{!5921}
!5921 = !DILocalVariable(name: "gs", arg: 1, scope: !5919, file: !580, line: 1759, type: !2892)
!5922 = !DILocation(line: 0, scope: !5919)
!5923 = !DILocation(line: 1763, column: 7, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5919, file: !580, line: 1763, column: 7)
!5925 = !DILocation(line: 1763, column: 27, scope: !5924)
!5926 = !DILocation(line: 1763, column: 7, scope: !5919)
!5927 = !DILocation(line: 1764, column: 12, scope: !5924)
!5928 = !DILocation(line: 1764, column: 5, scope: !5924)
!5929 = !DILocation(line: 0, scope: !5924)
!5930 = !DILocation(line: 1767, column: 1, scope: !5919)
!5931 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !580, file: !580, line: 2013, type: !2959, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5932)
!5932 = !{!5933, !5934}
!5933 = !DILocalVariable(name: "gs", arg: 1, scope: !5931, file: !580, line: 2013, type: !2892)
!5934 = !DILocalVariable(name: "num_ops", scope: !5931, file: !580, line: 2015, type: !7)
!5935 = !DILocation(line: 0, scope: !5931)
!5936 = !DILocation(line: 2017, column: 13, scope: !5931)
!5937 = !DILocation(line: 2018, column: 18, scope: !5931)
!5938 = !DILocation(line: 2018, column: 3, scope: !5931)
!5939 = distinct !DISubprogram(name: "gimple_call_arg", scope: !580, file: !580, line: 2025, type: !5621, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5940)
!5940 = !{!5941, !5942}
!5941 = !DILocalVariable(name: "gs", arg: 1, scope: !5939, file: !580, line: 2025, type: !2892)
!5942 = !DILocalVariable(name: "index", arg: 2, scope: !5939, file: !580, line: 2025, type: !7)
!5943 = !DILocation(line: 0, scope: !5939)
!5944 = !DILocation(line: 2028, column: 31, scope: !5939)
!5945 = !DILocation(line: 2028, column: 10, scope: !5939)
!5946 = !DILocation(line: 2028, column: 3, scope: !5939)
!5947 = distinct !DISubprogram(name: "gimple_references_memory_p", scope: !580, file: !580, line: 1499, type: !5551, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5948)
!5948 = !{!5949}
!5949 = !DILocalVariable(name: "stmt", arg: 1, scope: !5947, file: !580, line: 1499, type: !1019)
!5950 = !DILocation(line: 0, scope: !5947)
!5951 = !DILocation(line: 1501, column: 10, scope: !5947)
!5952 = !DILocation(line: 1501, column: 36, scope: !5947)
!5953 = !DILocation(line: 1501, column: 39, scope: !5947)
!5954 = !DILocation(line: 1501, column: 3, scope: !5947)
!5955 = distinct !DISubprogram(name: "gimple_set_vuse", scope: !580, file: !580, line: 1405, type: !5227, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5956)
!5956 = !{!5957, !5958}
!5957 = !DILocalVariable(name: "g", arg: 1, scope: !5955, file: !580, line: 1405, type: !1019)
!5958 = !DILocalVariable(name: "vuse", arg: 2, scope: !5955, file: !580, line: 1405, type: !757)
!5959 = !DILocation(line: 0, scope: !5955)
!5960 = !DILocation(line: 1407, column: 3, scope: !5955)
!5961 = !DILocation(line: 1408, column: 16, scope: !5955)
!5962 = !DILocation(line: 1408, column: 21, scope: !5955)
!5963 = !DILocation(line: 1409, column: 1, scope: !5955)
!5964 = distinct !DISubprogram(name: "gsi_last_bb", scope: !580, file: !580, line: 4450, type: !3296, scopeLine: 4451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5965)
!5965 = !{!5966, !5967, !5968}
!5966 = !DILocalVariable(name: "bb", arg: 1, scope: !5964, file: !580, line: 4450, type: !1505)
!5967 = !DILocalVariable(name: "i", scope: !5964, file: !580, line: 4452, type: !2685)
!5968 = !DILocalVariable(name: "seq", scope: !5964, file: !580, line: 4453, type: !1009)
!5969 = !DILocation(line: 0, scope: !5964)
!5970 = !DILocation(line: 4452, column: 24, scope: !5964)
!5971 = !DILocation(line: 4455, column: 9, scope: !5964)
!5972 = !DILocation(line: 4456, column: 11, scope: !5964)
!5973 = !DILocation(line: 4456, column: 5, scope: !5964)
!5974 = !DILocation(line: 4456, column: 9, scope: !5964)
!5975 = !DILocation(line: 4457, column: 5, scope: !5964)
!5976 = !DILocation(line: 4457, column: 9, scope: !5964)
!5977 = !DILocation(line: 4458, column: 5, scope: !5964)
!5978 = !DILocation(line: 4458, column: 8, scope: !5964)
!5979 = !DILocation(line: 4461, column: 1, scope: !5964)
!5980 = distinct !DISubprogram(name: "gimple_switch_num_labels", scope: !580, file: !580, line: 3157, type: !2959, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5981)
!5981 = !{!5982, !5983}
!5982 = !DILocalVariable(name: "gs", arg: 1, scope: !5980, file: !580, line: 3157, type: !2892)
!5983 = !DILocalVariable(name: "num_ops", scope: !5980, file: !580, line: 3159, type: !7)
!5984 = !DILocation(line: 0, scope: !5980)
!5985 = !DILocation(line: 3161, column: 13, scope: !5980)
!5986 = !DILocation(line: 3162, column: 3, scope: !5980)
!5987 = !DILocation(line: 3163, column: 18, scope: !5980)
!5988 = !DILocation(line: 3163, column: 3, scope: !5980)
!5989 = distinct !DISubprogram(name: "gimple_switch_label", scope: !580, file: !580, line: 3212, type: !5621, scopeLine: 3213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5990)
!5990 = !{!5991, !5992}
!5991 = !DILocalVariable(name: "gs", arg: 1, scope: !5989, file: !580, line: 3212, type: !2892)
!5992 = !DILocalVariable(name: "index", arg: 2, scope: !5989, file: !580, line: 3212, type: !7)
!5993 = !DILocation(line: 0, scope: !5989)
!5994 = !DILocation(line: 3215, column: 3, scope: !5989)
!5995 = !DILocation(line: 3216, column: 10, scope: !5989)
!5996 = !DILocation(line: 3216, column: 3, scope: !5989)
!5997 = distinct !DISubprogram(name: "allocate_edge_info", scope: !3, file: !3, line: 563, type: !5998, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6000)
!5998 = !DISubroutineType(types: !5999)
!5999 = !{!2130, !999}
!6000 = !{!6001, !6002}
!6001 = !DILocalVariable(name: "e", arg: 1, scope: !5997, file: !3, line: 563, type: !999)
!6002 = !DILocalVariable(name: "edge_info", scope: !5997, file: !3, line: 565, type: !2130)
!6003 = !DILocation(line: 0, scope: !5997)
!6004 = !DILocation(line: 567, column: 15, scope: !5997)
!6005 = !DILocation(line: 569, column: 6, scope: !5997)
!6006 = !DILocation(line: 569, column: 10, scope: !5997)
!6007 = !DILocation(line: 570, column: 3, scope: !5997)
!6008 = distinct !DISubprogram(name: "record_conditions", scope: !3, file: !3, line: 1126, type: !6009, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6011)
!6009 = !DISubroutineType(types: !6010)
!6010 = !{null, !2130, !757, !757}
!6011 = !{!6012, !6013, !6014, !6015, !6016}
!6012 = !DILocalVariable(name: "edge_info", arg: 1, scope: !6008, file: !3, line: 1126, type: !2130)
!6013 = !DILocalVariable(name: "cond", arg: 2, scope: !6008, file: !3, line: 1126, type: !757)
!6014 = !DILocalVariable(name: "inverted", arg: 3, scope: !6008, file: !3, line: 1126, type: !757)
!6015 = !DILocalVariable(name: "op0", scope: !6008, file: !3, line: 1128, type: !757)
!6016 = !DILocalVariable(name: "op1", scope: !6008, file: !3, line: 1128, type: !757)
!6017 = !DILocation(line: 0, scope: !6008)
!6018 = !DILocation(line: 1130, column: 8, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1130, column: 7)
!6020 = !DILocation(line: 1130, column: 7, scope: !6008)
!6021 = !DILocation(line: 1133, column: 9, scope: !6008)
!6022 = !DILocation(line: 1134, column: 9, scope: !6008)
!6023 = !DILocation(line: 1136, column: 11, scope: !6008)
!6024 = !DILocation(line: 1136, column: 3, scope: !6008)
!6025 = !DILocation(line: 1140, column: 11, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1140, column: 11)
!6027 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1137, column: 5)
!6028 = !DILocation(line: 1140, column: 11, scope: !6027)
!6029 = !DILocation(line: 1142, column: 15, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 1141, column: 2)
!6031 = !DILocation(line: 1142, column: 37, scope: !6030)
!6032 = !DILocation(line: 1143, column: 35, scope: !6030)
!6033 = !DILocation(line: 1143, column: 15, scope: !6030)
!6034 = !DILocation(line: 1143, column: 33, scope: !6030)
!6035 = !DILocation(line: 1145, column: 11, scope: !6030)
!6036 = !DILocation(line: 1144, column: 4, scope: !6030)
!6037 = !DILocation(line: 1147, column: 22, scope: !6030)
!6038 = !DILocation(line: 1147, column: 11, scope: !6030)
!6039 = !DILocation(line: 1146, column: 4, scope: !6030)
!6040 = !DILocation(line: 1157, column: 28, scope: !6027)
!6041 = !DILocation(line: 1148, column: 2, scope: !6030)
!6042 = !DILocation(line: 1151, column: 22, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 1150, column: 9)
!6044 = !DILocation(line: 1151, column: 44, scope: !6043)
!6045 = !DILocation(line: 1152, column: 35, scope: !6043)
!6046 = !DILocation(line: 1152, column: 15, scope: !6043)
!6047 = !DILocation(line: 1152, column: 33, scope: !6043)
!6048 = !DILocation(line: 1155, column: 35, scope: !6027)
!6049 = !DILocation(line: 1155, column: 52, scope: !6027)
!6050 = !DILocation(line: 1157, column: 17, scope: !6027)
!6051 = !DILocation(line: 1155, column: 7, scope: !6027)
!6052 = !DILocation(line: 1159, column: 18, scope: !6027)
!6053 = !DILocation(line: 1159, column: 7, scope: !6027)
!6054 = !DILocation(line: 1158, column: 7, scope: !6027)
!6055 = !DILocation(line: 1160, column: 7, scope: !6027)
!6056 = !DILocation(line: 1164, column: 11, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1164, column: 11)
!6058 = !DILocation(line: 1164, column: 11, scope: !6027)
!6059 = !DILocation(line: 1166, column: 15, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1165, column: 2)
!6061 = !DILocation(line: 1166, column: 37, scope: !6060)
!6062 = !DILocation(line: 1167, column: 35, scope: !6060)
!6063 = !DILocation(line: 1167, column: 15, scope: !6060)
!6064 = !DILocation(line: 1167, column: 33, scope: !6060)
!6065 = !DILocation(line: 1169, column: 11, scope: !6060)
!6066 = !DILocation(line: 1168, column: 4, scope: !6060)
!6067 = !DILocation(line: 1170, column: 2, scope: !6060)
!6068 = !DILocation(line: 1173, column: 15, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1172, column: 2)
!6070 = !DILocation(line: 1173, column: 37, scope: !6069)
!6071 = !DILocation(line: 1174, column: 35, scope: !6069)
!6072 = !DILocation(line: 1174, column: 15, scope: !6069)
!6073 = !DILocation(line: 1174, column: 33, scope: !6069)
!6074 = !DILocation(line: 1179, column: 11, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1179, column: 11)
!6076 = !DILocation(line: 1179, column: 11, scope: !6027)
!6077 = !DILocation(line: 1181, column: 15, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 1180, column: 2)
!6079 = !DILocation(line: 1181, column: 37, scope: !6078)
!6080 = !DILocation(line: 1182, column: 35, scope: !6078)
!6081 = !DILocation(line: 1182, column: 15, scope: !6078)
!6082 = !DILocation(line: 1182, column: 33, scope: !6078)
!6083 = !DILocation(line: 1184, column: 11, scope: !6078)
!6084 = !DILocation(line: 1183, column: 4, scope: !6078)
!6085 = !DILocation(line: 1192, column: 18, scope: !6027)
!6086 = !DILocation(line: 1185, column: 2, scope: !6078)
!6087 = !DILocation(line: 1188, column: 15, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 1187, column: 2)
!6089 = !DILocation(line: 1188, column: 37, scope: !6088)
!6090 = !DILocation(line: 1189, column: 35, scope: !6088)
!6091 = !DILocation(line: 1189, column: 15, scope: !6088)
!6092 = !DILocation(line: 1189, column: 33, scope: !6088)
!6093 = !DILocation(line: 1192, column: 7, scope: !6027)
!6094 = !DILocation(line: 1191, column: 7, scope: !6027)
!6095 = !DILocation(line: 1194, column: 18, scope: !6027)
!6096 = !DILocation(line: 1194, column: 7, scope: !6027)
!6097 = !DILocation(line: 1193, column: 7, scope: !6027)
!6098 = !DILocation(line: 1195, column: 7, scope: !6027)
!6099 = !DILocation(line: 1198, column: 18, scope: !6027)
!6100 = !DILocation(line: 1198, column: 40, scope: !6027)
!6101 = !DILocation(line: 1199, column: 38, scope: !6027)
!6102 = !DILocation(line: 1199, column: 18, scope: !6027)
!6103 = !DILocation(line: 1199, column: 36, scope: !6027)
!6104 = !DILocation(line: 1201, column: 7, scope: !6027)
!6105 = !DILocation(line: 1200, column: 7, scope: !6027)
!6106 = !DILocation(line: 1203, column: 18, scope: !6027)
!6107 = !DILocation(line: 1203, column: 7, scope: !6027)
!6108 = !DILocation(line: 1202, column: 7, scope: !6027)
!6109 = !DILocation(line: 1205, column: 18, scope: !6027)
!6110 = !DILocation(line: 1205, column: 7, scope: !6027)
!6111 = !DILocation(line: 1204, column: 7, scope: !6027)
!6112 = !DILocation(line: 1207, column: 18, scope: !6027)
!6113 = !DILocation(line: 1207, column: 7, scope: !6027)
!6114 = !DILocation(line: 1206, column: 7, scope: !6027)
!6115 = !DILocation(line: 1209, column: 18, scope: !6027)
!6116 = !DILocation(line: 1209, column: 7, scope: !6027)
!6117 = !DILocation(line: 1208, column: 7, scope: !6027)
!6118 = !DILocation(line: 1211, column: 18, scope: !6027)
!6119 = !DILocation(line: 1211, column: 7, scope: !6027)
!6120 = !DILocation(line: 1210, column: 7, scope: !6027)
!6121 = !DILocation(line: 1212, column: 7, scope: !6027)
!6122 = !DILocation(line: 1216, column: 18, scope: !6027)
!6123 = !DILocation(line: 1216, column: 40, scope: !6027)
!6124 = !DILocation(line: 1217, column: 38, scope: !6027)
!6125 = !DILocation(line: 1217, column: 18, scope: !6027)
!6126 = !DILocation(line: 1217, column: 36, scope: !6027)
!6127 = !DILocation(line: 1218, column: 35, scope: !6027)
!6128 = !DILocation(line: 1218, column: 52, scope: !6027)
!6129 = !DILocation(line: 1220, column: 17, scope: !6027)
!6130 = !DILocation(line: 1218, column: 7, scope: !6027)
!6131 = !DILocation(line: 1222, column: 18, scope: !6027)
!6132 = !DILocation(line: 1222, column: 7, scope: !6027)
!6133 = !DILocation(line: 1221, column: 7, scope: !6027)
!6134 = !DILocation(line: 1223, column: 7, scope: !6027)
!6135 = !DILocation(line: 1226, column: 18, scope: !6027)
!6136 = !DILocation(line: 1226, column: 40, scope: !6027)
!6137 = !DILocation(line: 1227, column: 38, scope: !6027)
!6138 = !DILocation(line: 1227, column: 18, scope: !6027)
!6139 = !DILocation(line: 1227, column: 36, scope: !6027)
!6140 = !DILocation(line: 1229, column: 7, scope: !6027)
!6141 = !DILocation(line: 1228, column: 7, scope: !6027)
!6142 = !DILocation(line: 1231, column: 18, scope: !6027)
!6143 = !DILocation(line: 1231, column: 7, scope: !6027)
!6144 = !DILocation(line: 1230, column: 7, scope: !6027)
!6145 = !DILocation(line: 1232, column: 7, scope: !6027)
!6146 = !DILocation(line: 1235, column: 18, scope: !6027)
!6147 = !DILocation(line: 1235, column: 40, scope: !6027)
!6148 = !DILocation(line: 1236, column: 38, scope: !6027)
!6149 = !DILocation(line: 1236, column: 18, scope: !6027)
!6150 = !DILocation(line: 1236, column: 36, scope: !6027)
!6151 = !DILocation(line: 1238, column: 7, scope: !6027)
!6152 = !DILocation(line: 1237, column: 7, scope: !6027)
!6153 = !DILocation(line: 1240, column: 18, scope: !6027)
!6154 = !DILocation(line: 1240, column: 7, scope: !6027)
!6155 = !DILocation(line: 1239, column: 7, scope: !6027)
!6156 = !DILocation(line: 1241, column: 7, scope: !6027)
!6157 = !DILocation(line: 1244, column: 18, scope: !6027)
!6158 = !DILocation(line: 1244, column: 40, scope: !6027)
!6159 = !DILocation(line: 1245, column: 38, scope: !6027)
!6160 = !DILocation(line: 1245, column: 18, scope: !6027)
!6161 = !DILocation(line: 1245, column: 36, scope: !6027)
!6162 = !DILocation(line: 1246, column: 7, scope: !6027)
!6163 = !DILocation(line: 1251, column: 48, scope: !6008)
!6164 = !DILocation(line: 1251, column: 69, scope: !6008)
!6165 = !DILocation(line: 1251, column: 3, scope: !6008)
!6166 = !DILocation(line: 1252, column: 43, scope: !6008)
!6167 = !DILocation(line: 1252, column: 14, scope: !6008)
!6168 = !DILocation(line: 1252, column: 35, scope: !6008)
!6169 = !DILocation(line: 1252, column: 41, scope: !6008)
!6170 = !DILocation(line: 1259, column: 52, scope: !6008)
!6171 = !DILocation(line: 1259, column: 73, scope: !6008)
!6172 = !DILocation(line: 1259, column: 3, scope: !6008)
!6173 = !DILocation(line: 1260, column: 43, scope: !6008)
!6174 = !DILocation(line: 1260, column: 14, scope: !6008)
!6175 = !DILocation(line: 1260, column: 35, scope: !6008)
!6176 = !DILocation(line: 1260, column: 41, scope: !6008)
!6177 = !DILocation(line: 1261, column: 1, scope: !6008)
!6178 = distinct !DISubprogram(name: "bb_seq", scope: !580, file: !580, line: 237, type: !6179, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6181)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{!1009, !3523}
!6181 = !{!6182}
!6182 = !DILocalVariable(name: "bb", arg: 1, scope: !6178, file: !580, line: 237, type: !3523)
!6183 = !DILocation(line: 0, scope: !6178)
!6184 = !DILocation(line: 239, column: 17, scope: !6178)
!6185 = !DILocation(line: 239, column: 23, scope: !6178)
!6186 = !DILocation(line: 239, column: 33, scope: !6178)
!6187 = !DILocation(line: 239, column: 43, scope: !6178)
!6188 = !DILocation(line: 239, column: 36, scope: !6178)
!6189 = !DILocation(line: 239, column: 10, scope: !6178)
!6190 = !DILocation(line: 239, column: 68, scope: !6178)
!6191 = !DILocation(line: 239, column: 3, scope: !6178)
!6192 = distinct !DISubprogram(name: "gimple_seq_last", scope: !580, file: !580, line: 178, type: !6193, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6198)
!6193 = !DISubroutineType(types: !6194)
!6194 = !{!1014, !6195}
!6195 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !690, line: 67, baseType: !6196)
!6196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6197, size: 64)
!6197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1011)
!6198 = !{!6199}
!6199 = !DILocalVariable(name: "s", arg: 1, scope: !6192, file: !580, line: 178, type: !6195)
!6200 = !DILocation(line: 0, scope: !6192)
!6201 = !DILocation(line: 180, column: 10, scope: !6192)
!6202 = !DILocation(line: 180, column: 17, scope: !6192)
!6203 = !DILocation(line: 180, column: 3, scope: !6192)
!6204 = distinct !DISubprogram(name: "build_and_record_new_cond", scope: !3, file: !3, line: 1102, type: !6205, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6207)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{null, !317, !757, !757, !2136}
!6207 = !{!6208, !6209, !6210, !6211, !6212}
!6208 = !DILocalVariable(name: "code", arg: 1, scope: !6204, file: !3, line: 1102, type: !317)
!6209 = !DILocalVariable(name: "op0", arg: 2, scope: !6204, file: !3, line: 1103, type: !757)
!6210 = !DILocalVariable(name: "op1", arg: 3, scope: !6204, file: !3, line: 1103, type: !757)
!6211 = !DILocalVariable(name: "p", arg: 4, scope: !6204, file: !3, line: 1104, type: !2136)
!6212 = !DILocalVariable(name: "cond", scope: !6204, file: !3, line: 1106, type: !4679)
!6213 = !DILocation(line: 0, scope: !6204)
!6214 = !DILocation(line: 1108, column: 3, scope: !6204)
!6215 = !DILocation(line: 1110, column: 16, scope: !6204)
!6216 = !DILocation(line: 1110, column: 14, scope: !6204)
!6217 = !DILocation(line: 1111, column: 9, scope: !6204)
!6218 = !DILocation(line: 1111, column: 14, scope: !6204)
!6219 = !DILocation(line: 1112, column: 9, scope: !6204)
!6220 = !DILocation(line: 1112, column: 20, scope: !6204)
!6221 = !DILocation(line: 1112, column: 23, scope: !6204)
!6222 = !DILocation(line: 1113, column: 20, scope: !6204)
!6223 = !DILocation(line: 1113, column: 26, scope: !6204)
!6224 = !DILocation(line: 1114, column: 20, scope: !6204)
!6225 = !DILocation(line: 1114, column: 26, scope: !6204)
!6226 = !DILocation(line: 1116, column: 14, scope: !6204)
!6227 = !DILocation(line: 1116, column: 6, scope: !6204)
!6228 = !DILocation(line: 1116, column: 12, scope: !6204)
!6229 = !DILocation(line: 1117, column: 1, scope: !6204)
!6230 = distinct !DISubprogram(name: "initialize_expr_from_cond", scope: !3, file: !3, line: 293, type: !6231, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6233)
!6231 = !DISubroutineType(types: !6232)
!6232 = !{null, !757, !4679}
!6233 = !{!6234, !6235}
!6234 = !DILocalVariable(name: "cond", arg: 1, scope: !6230, file: !3, line: 293, type: !757)
!6235 = !DILocalVariable(name: "expr", arg: 2, scope: !6230, file: !3, line: 293, type: !4679)
!6236 = !DILocation(line: 0, scope: !6230)
!6237 = !DILocation(line: 295, column: 16, scope: !6230)
!6238 = !DILocation(line: 295, column: 14, scope: !6230)
!6239 = !DILocation(line: 297, column: 7, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 297, column: 7)
!6241 = !DILocation(line: 297, column: 7, scope: !6230)
!6242 = !DILocation(line: 299, column: 13, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 298, column: 5)
!6244 = !DILocation(line: 299, column: 18, scope: !6243)
!6245 = !DILocation(line: 300, column: 29, scope: !6243)
!6246 = !DILocation(line: 300, column: 13, scope: !6243)
!6247 = !DILocation(line: 300, column: 24, scope: !6243)
!6248 = !DILocation(line: 300, column: 27, scope: !6243)
!6249 = !DILocation(line: 301, column: 32, scope: !6243)
!6250 = !DILocation(line: 301, column: 24, scope: !6243)
!6251 = !DILocation(line: 301, column: 30, scope: !6243)
!6252 = !DILocation(line: 302, column: 32, scope: !6243)
!6253 = !DILocation(line: 302, column: 24, scope: !6243)
!6254 = !DILocation(line: 302, column: 30, scope: !6243)
!6255 = !DILocation(line: 303, column: 5, scope: !6243)
!6256 = !DILocation(line: 304, column: 29, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 304, column: 12)
!6258 = !DILocation(line: 304, column: 12, scope: !6240)
!6259 = !DILocation(line: 306, column: 13, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 305, column: 5)
!6261 = !DILocation(line: 306, column: 18, scope: !6260)
!6262 = !DILocation(line: 307, column: 13, scope: !6260)
!6263 = !DILocation(line: 307, column: 23, scope: !6260)
!6264 = !DILocation(line: 307, column: 26, scope: !6260)
!6265 = !DILocation(line: 308, column: 30, scope: !6260)
!6266 = !DILocation(line: 308, column: 23, scope: !6260)
!6267 = !DILocation(line: 308, column: 28, scope: !6260)
!6268 = !DILocation(line: 309, column: 5, scope: !6260)
!6269 = !DILocation(line: 311, column: 5, scope: !6257)
!6270 = !DILocation(line: 312, column: 1, scope: !6230)
!6271 = distinct !DISubprogram(name: "dom_thread_across_edge", scope: !3, file: !3, line: 888, type: !6272, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6274)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{null, !2660, !999}
!6274 = !{!6275, !6276, !6277}
!6275 = !DILocalVariable(name: "walk_data", arg: 1, scope: !6271, file: !3, line: 888, type: !2660)
!6276 = !DILocalVariable(name: "e", arg: 2, scope: !6271, file: !3, line: 888, type: !999)
!6277 = !DILocalVariable(name: "dummy_cond", scope: !6278, file: !3, line: 892, type: !1019)
!6278 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 891, column: 3)
!6279 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 890, column: 7)
!6280 = !DILocation(line: 0, scope: !6271)
!6281 = !DILocation(line: 890, column: 20, scope: !6279)
!6282 = !DILocation(line: 890, column: 9, scope: !6279)
!6283 = !DILocation(line: 890, column: 7, scope: !6271)
!6284 = !DILocation(line: 894, column: 28, scope: !6278)
!6285 = !DILocation(line: 893, column: 9, scope: !6278)
!6286 = !DILocation(line: 0, scope: !6278)
!6287 = !DILocation(line: 896, column: 28, scope: !6278)
!6288 = !DILocation(line: 897, column: 3, scope: !6278)
!6289 = !DILocation(line: 899, column: 43, scope: !6271)
!6290 = !DILocation(line: 899, column: 3, scope: !6271)
!6291 = !DILocation(line: 902, column: 1, scope: !6271)
!6292 = distinct !DISubprogram(name: "record_const_or_copy", scope: !3, file: !3, line: 1316, type: !4463, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6293)
!6293 = !{!6294, !6295, !6296, !6297}
!6294 = !DILocalVariable(name: "x", arg: 1, scope: !6292, file: !3, line: 1316, type: !757)
!6295 = !DILocalVariable(name: "y", arg: 2, scope: !6292, file: !3, line: 1316, type: !757)
!6296 = !DILocalVariable(name: "prev_x", scope: !6292, file: !3, line: 1318, type: !757)
!6297 = !DILocalVariable(name: "tmp", scope: !6298, file: !3, line: 1324, type: !757)
!6298 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 1323, column: 5)
!6299 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1322, column: 7)
!6300 = !DILocation(line: 0, scope: !6292)
!6301 = !DILocation(line: 1318, column: 17, scope: !6292)
!6302 = !DILocation(line: 1320, column: 3, scope: !6292)
!6303 = !DILocation(line: 1322, column: 7, scope: !6299)
!6304 = !DILocation(line: 1322, column: 21, scope: !6299)
!6305 = !DILocation(line: 1322, column: 7, scope: !6292)
!6306 = !DILocation(line: 1324, column: 18, scope: !6298)
!6307 = !DILocation(line: 0, scope: !6298)
!6308 = !DILocation(line: 1325, column: 11, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1325, column: 11)
!6310 = !DILocation(line: 1325, column: 11, scope: !6298)
!6311 = !DILocation(line: 1327, column: 5, scope: !6298)
!6312 = !DILocation(line: 1329, column: 3, scope: !6292)
!6313 = !DILocation(line: 1330, column: 1, scope: !6292)
!6314 = distinct !DISubprogram(name: "remove_local_expressions_from_table", scope: !3, file: !3, line: 817, type: !2864, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6315)
!6315 = !{!6316, !6318}
!6316 = !DILocalVariable(name: "victim", scope: !6317, file: !3, line: 822, type: !2124)
!6317 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 821, column: 5)
!6318 = !DILocalVariable(name: "slot", scope: !6317, file: !3, line: 823, type: !1559)
!6319 = !DILocation(line: 820, column: 3, scope: !6314)
!6320 = !DILocation(line: 820, column: 10, scope: !6314)
!6321 = !DILocation(line: 820, column: 58, scope: !6314)
!6322 = !DILocation(line: 822, column: 32, scope: !6317)
!6323 = !DILocation(line: 0, scope: !6317)
!6324 = !DILocation(line: 825, column: 18, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 825, column: 11)
!6326 = !DILocation(line: 825, column: 11, scope: !6317)
!6327 = !DILocation(line: 831, column: 11, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 831, column: 11)
!6329 = !DILocation(line: 831, column: 21, scope: !6328)
!6330 = !DILocation(line: 831, column: 25, scope: !6328)
!6331 = !DILocation(line: 831, column: 36, scope: !6328)
!6332 = !DILocation(line: 831, column: 11, scope: !6317)
!6333 = !DILocation(line: 833, column: 11, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 832, column: 9)
!6335 = !DILocation(line: 834, column: 32, scope: !6334)
!6336 = !DILocation(line: 834, column: 11, scope: !6334)
!6337 = !DILocation(line: 835, column: 9, scope: !6334)
!6338 = !DILocation(line: 837, column: 40, scope: !6317)
!6339 = !DILocation(line: 838, column: 12, scope: !6317)
!6340 = !DILocation(line: 838, column: 28, scope: !6317)
!6341 = !DILocation(line: 837, column: 14, scope: !6317)
!6342 = !DILocation(line: 839, column: 7, scope: !6317)
!6343 = !DILocation(line: 840, column: 24, scope: !6317)
!6344 = !DILocation(line: 840, column: 7, scope: !6317)
!6345 = !DILocation(line: 841, column: 5, scope: !6314)
!6346 = distinct !{!6346, !6319, !6345}
!6347 = !DILocation(line: 842, column: 1, scope: !6314)
!6348 = distinct !DISubprogram(name: "restore_vars_to_original_value", scope: !3, file: !3, line: 849, type: !2864, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6349)
!6349 = !{!6350, !6352}
!6350 = !DILocalVariable(name: "prev_value", scope: !6351, file: !3, line: 853, type: !757)
!6351 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 852, column: 5)
!6352 = !DILocalVariable(name: "dest", scope: !6351, file: !3, line: 853, type: !757)
!6353 = !DILocation(line: 851, column: 3, scope: !6348)
!6354 = !DILocation(line: 851, column: 10, scope: !6348)
!6355 = !DILocation(line: 851, column: 52, scope: !6348)
!6356 = !DILocation(line: 855, column: 14, scope: !6351)
!6357 = !DILocation(line: 0, scope: !6351)
!6358 = !DILocation(line: 857, column: 16, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 857, column: 11)
!6360 = !DILocation(line: 857, column: 11, scope: !6351)
!6361 = !DILocation(line: 860, column: 11, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 860, column: 11)
!6363 = !DILocation(line: 860, column: 21, scope: !6362)
!6364 = !DILocation(line: 860, column: 25, scope: !6362)
!6365 = !DILocation(line: 860, column: 36, scope: !6362)
!6366 = !DILocation(line: 860, column: 11, scope: !6351)
!6367 = !DILocation(line: 862, column: 4, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 861, column: 2)
!6369 = !DILocation(line: 863, column: 24, scope: !6368)
!6370 = !DILocation(line: 863, column: 4, scope: !6368)
!6371 = !DILocation(line: 864, column: 13, scope: !6368)
!6372 = !DILocation(line: 864, column: 4, scope: !6368)
!6373 = !DILocation(line: 865, column: 24, scope: !6368)
!6374 = !DILocation(line: 865, column: 35, scope: !6368)
!6375 = !DILocation(line: 865, column: 4, scope: !6368)
!6376 = !DILocation(line: 866, column: 13, scope: !6368)
!6377 = !DILocation(line: 866, column: 4, scope: !6368)
!6378 = !DILocation(line: 867, column: 2, scope: !6368)
!6379 = !DILocation(line: 869, column: 20, scope: !6351)
!6380 = !DILocation(line: 870, column: 7, scope: !6351)
!6381 = !DILocation(line: 871, column: 5, scope: !6348)
!6382 = distinct !{!6382, !6353, !6381}
!6383 = !DILocation(line: 872, column: 1, scope: !6348)
!6384 = distinct !DISubprogram(name: "simplify_stmt_for_jump_threading", scope: !3, file: !3, line: 877, type: !6385, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6387)
!6385 = !DISubroutineType(types: !6386)
!6386 = !{!757, !1019, !1019}
!6387 = !{!6388, !6389}
!6388 = !DILocalVariable(name: "stmt", arg: 1, scope: !6384, file: !3, line: 877, type: !1019)
!6389 = !DILocalVariable(name: "within_stmt", arg: 2, scope: !6384, file: !3, line: 878, type: !1019)
!6390 = !DILocation(line: 0, scope: !6384)
!6391 = !DILocation(line: 880, column: 10, scope: !6384)
!6392 = !DILocation(line: 880, column: 3, scope: !6384)
!6393 = distinct !DISubprogram(name: "VEC_expr_hash_elt_t_base_length", scope: !3, file: !3, line: 125, type: !6394, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6398)
!6394 = !DISubroutineType(types: !6395)
!6395 = !{!7, !6396}
!6396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6397, size: 64)
!6397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2117)
!6398 = !{!6399}
!6399 = !DILocalVariable(name: "vec_", arg: 1, scope: !6393, file: !3, line: 125, type: !6396)
!6400 = !DILocation(line: 0, scope: !6393)
!6401 = !DILocation(line: 125, column: 1, scope: !6393)
!6402 = distinct !DISubprogram(name: "VEC_expr_hash_elt_t_base_pop", scope: !3, file: !3, line: 125, type: !6403, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6405)
!6403 = !DISubroutineType(types: !6404)
!6404 = !{!2124, !4386}
!6405 = !{!6406, !6407}
!6406 = !DILocalVariable(name: "vec_", arg: 1, scope: !6402, file: !3, line: 125, type: !4386)
!6407 = !DILocalVariable(name: "obj_", scope: !6402, file: !3, line: 125, type: !2124)
!6408 = !DILocation(line: 0, scope: !6402)
!6409 = !DILocation(line: 125, column: 1, scope: !6402)
!6410 = distinct !DISubprogram(name: "VEC_tree_base_pop", scope: !318, file: !318, line: 182, type: !6411, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6413)
!6411 = !DISubroutineType(types: !6412)
!6412 = !{!757, !4415}
!6413 = !{!6414, !6415}
!6414 = !DILocalVariable(name: "vec_", arg: 1, scope: !6410, file: !318, line: 182, type: !4415)
!6415 = !DILocalVariable(name: "obj_", scope: !6410, file: !318, line: 182, type: !757)
!6416 = !DILocation(line: 0, scope: !6410)
!6417 = !DILocation(line: 182, column: 1, scope: !6410)
!6418 = distinct !DISubprogram(name: "gimple_seq_first", scope: !580, file: !580, line: 159, type: !6193, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6419)
!6419 = !{!6420}
!6420 = !DILocalVariable(name: "s", arg: 1, scope: !6418, file: !580, line: 159, type: !6195)
!6421 = !DILocation(line: 0, scope: !6418)
!6422 = !DILocation(line: 161, column: 10, scope: !6418)
!6423 = !DILocation(line: 161, column: 17, scope: !6418)
!6424 = !DILocation(line: 161, column: 3, scope: !6418)
!6425 = distinct !DISubprogram(name: "eliminate_degenerate_phis_1", scope: !3, file: !3, line: 2751, type: !6426, scopeLine: 2752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6428)
!6426 = !DISubroutineType(types: !6427)
!6427 = !{null, !1505, !689}
!6428 = !{!6429, !6430, !6431, !6432, !6433}
!6429 = !DILocalVariable(name: "bb", arg: 1, scope: !6425, file: !3, line: 2751, type: !1505)
!6430 = !DILocalVariable(name: "interesting_names", arg: 2, scope: !6425, file: !3, line: 2751, type: !689)
!6431 = !DILocalVariable(name: "gsi", scope: !6425, file: !3, line: 2753, type: !2685)
!6432 = !DILocalVariable(name: "son", scope: !6425, file: !3, line: 2754, type: !1505)
!6433 = !DILocalVariable(name: "phi", scope: !6434, file: !3, line: 2758, type: !1019)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 2757, column: 5)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2756, column: 3)
!6436 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 2756, column: 3)
!6437 = !DILocation(line: 0, scope: !6425)
!6438 = !DILocation(line: 2753, column: 3, scope: !6425)
!6439 = !DILocation(line: 2756, column: 14, scope: !6436)
!6440 = !DILocation(line: 2756, column: 8, scope: !6436)
!6441 = !DILocation(line: 2756, column: 36, scope: !6435)
!6442 = !DILocation(line: 2756, column: 35, scope: !6435)
!6443 = !DILocation(line: 2756, column: 3, scope: !6436)
!6444 = !DILocation(line: 2758, column: 20, scope: !6434)
!6445 = !DILocation(line: 0, scope: !6434)
!6446 = !DILocation(line: 2760, column: 7, scope: !6434)
!6447 = !DILocation(line: 2756, column: 53, scope: !6435)
!6448 = !DILocation(line: 2756, column: 3, scope: !6435)
!6449 = distinct !{!6449, !6443, !6450}
!6450 = !DILocation(line: 2761, column: 5, scope: !6436)
!6451 = !DILocation(line: 2764, column: 14, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 2764, column: 3)
!6453 = !DILocation(line: 2764, column: 8, scope: !6452)
!6454 = !DILocation(line: 0, scope: !6452)
!6455 = !DILocation(line: 2764, column: 3, scope: !6452)
!6456 = !DILocation(line: 2767, column: 5, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6452, file: !3, line: 2764, column: 3)
!6458 = !DILocation(line: 2766, column: 14, scope: !6457)
!6459 = !DILocation(line: 2764, column: 3, scope: !6457)
!6460 = distinct !{!6460, !6455, !6461}
!6461 = !DILocation(line: 2767, column: 56, scope: !6452)
!6462 = !DILocation(line: 2768, column: 1, scope: !6425)
!6463 = distinct !DISubprogram(name: "eliminate_const_or_copy", scope: !3, file: !3, line: 2710, type: !6464, scopeLine: 2711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6466)
!6464 = !DISubroutineType(types: !6465)
!6465 = !{null, !1019, !689}
!6466 = !{!6467, !6468, !6469, !6470, !6471}
!6467 = !DILocalVariable(name: "stmt", arg: 1, scope: !6463, file: !3, line: 2710, type: !1019)
!6468 = !DILocalVariable(name: "interesting_names", arg: 2, scope: !6463, file: !3, line: 2710, type: !689)
!6469 = !DILocalVariable(name: "lhs", scope: !6463, file: !3, line: 2712, type: !757)
!6470 = !DILocalVariable(name: "rhs", scope: !6463, file: !3, line: 2713, type: !757)
!6471 = !DILocalVariable(name: "version", scope: !6463, file: !3, line: 2714, type: !682)
!6472 = !DILocation(line: 0, scope: !6463)
!6473 = !DILocation(line: 2712, column: 14, scope: !6463)
!6474 = !DILocation(line: 2714, column: 17, scope: !6463)
!6475 = !DILocation(line: 2721, column: 7, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 2721, column: 7)
!6477 = !DILocation(line: 2721, column: 7, scope: !6463)
!6478 = !DILocation(line: 2723, column: 7, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 2722, column: 5)
!6480 = !DILocation(line: 2724, column: 7, scope: !6479)
!6481 = !DILocation(line: 2725, column: 7, scope: !6479)
!6482 = !DILocation(line: 2730, column: 9, scope: !6463)
!6483 = !DILocation(line: 2731, column: 8, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 2731, column: 7)
!6485 = !DILocation(line: 2731, column: 7, scope: !6463)
!6486 = !DILocation(line: 2733, column: 7, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 2732, column: 5)
!6488 = !DILocation(line: 2734, column: 7, scope: !6487)
!6489 = !DILocation(line: 2737, column: 3, scope: !6463)
!6490 = !DILocation(line: 2742, column: 3, scope: !6463)
!6491 = !DILocation(line: 2743, column: 1, scope: !6463)
!6492 = distinct !DISubprogram(name: "get_lhs_or_phi_result", scope: !3, file: !3, line: 2454, type: !2899, scopeLine: 2455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6493)
!6493 = !{!6494}
!6494 = !DILocalVariable(name: "stmt", arg: 1, scope: !6492, file: !3, line: 2454, type: !1019)
!6495 = !DILocation(line: 0, scope: !6492)
!6496 = !DILocation(line: 2456, column: 7, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 2456, column: 7)
!6498 = !DILocation(line: 2456, column: 26, scope: !6497)
!6499 = !DILocation(line: 2456, column: 7, scope: !6492)
!6500 = !DILocation(line: 2457, column: 12, scope: !6497)
!6501 = !DILocation(line: 2457, column: 5, scope: !6497)
!6502 = !DILocation(line: 2458, column: 12, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 2458, column: 12)
!6504 = !DILocation(line: 2458, column: 12, scope: !6497)
!6505 = !DILocation(line: 2459, column: 12, scope: !6503)
!6506 = !DILocation(line: 2459, column: 5, scope: !6503)
!6507 = !DILocation(line: 2461, column: 5, scope: !6503)
!6508 = !DILocation(line: 2463, column: 5, scope: !6492)
!6509 = !DILocation(line: 2465, column: 1, scope: !6492)
!6510 = distinct !DISubprogram(name: "has_zero_uses", scope: !2967, file: !2967, line: 332, type: !6511, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6516)
!6511 = !DISubroutineType(types: !6512)
!6512 = !{!681, !6513}
!6513 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !690, line: 59, baseType: !6514)
!6514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6515, size: 64)
!6515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!6516 = !{!6517, !6518}
!6517 = !DILocalVariable(name: "var", arg: 1, scope: !6510, file: !2967, line: 332, type: !6513)
!6518 = !DILocalVariable(name: "ptr", scope: !6510, file: !2967, line: 334, type: !6519)
!6519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6520)
!6520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6521, size: 64)
!6521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2146)
!6522 = !DILocation(line: 0, scope: !6510)
!6523 = !DILocation(line: 334, column: 42, scope: !6510)
!6524 = !DILocation(line: 337, column: 19, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6510, file: !2967, line: 337, column: 7)
!6526 = !DILocation(line: 337, column: 11, scope: !6525)
!6527 = !DILocation(line: 337, column: 7, scope: !6510)
!6528 = !DILocation(line: 342, column: 8, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6510, file: !2967, line: 342, column: 7)
!6530 = !DILocation(line: 342, column: 7, scope: !6510)
!6531 = !DILocation(line: 345, column: 10, scope: !6510)
!6532 = !DILocation(line: 345, column: 3, scope: !6510)
!6533 = !DILocation(line: 346, column: 1, scope: !6510)
!6534 = distinct !DISubprogram(name: "remove_stmt_or_phi", scope: !3, file: !3, line: 2418, type: !3324, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6535)
!6535 = !{!6536, !6537}
!6536 = !DILocalVariable(name: "stmt", arg: 1, scope: !6534, file: !3, line: 2418, type: !1019)
!6537 = !DILocalVariable(name: "gsi", scope: !6534, file: !3, line: 2420, type: !2685)
!6538 = !DILocation(line: 0, scope: !6534)
!6539 = !DILocation(line: 2420, column: 3, scope: !6534)
!6540 = !DILocation(line: 2420, column: 30, scope: !6534)
!6541 = !DILocation(line: 2422, column: 7, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2422, column: 7)
!6543 = !DILocation(line: 2422, column: 26, scope: !6542)
!6544 = !DILocation(line: 2422, column: 7, scope: !6534)
!6545 = !DILocation(line: 2423, column: 5, scope: !6542)
!6546 = !DILocation(line: 2426, column: 7, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 2425, column: 5)
!6548 = !DILocation(line: 2427, column: 7, scope: !6547)
!6549 = !DILocation(line: 2429, column: 1, scope: !6534)
!6550 = distinct !DISubprogram(name: "get_rhs_or_phi_arg", scope: !3, file: !3, line: 2436, type: !2899, scopeLine: 2437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6551)
!6551 = !{!6552}
!6552 = !DILocalVariable(name: "stmt", arg: 1, scope: !6550, file: !3, line: 2436, type: !1019)
!6553 = !DILocation(line: 0, scope: !6550)
!6554 = !DILocation(line: 2438, column: 7, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 2438, column: 7)
!6556 = !DILocation(line: 2438, column: 26, scope: !6555)
!6557 = !DILocation(line: 2438, column: 7, scope: !6550)
!6558 = !DILocation(line: 2439, column: 12, scope: !6555)
!6559 = !DILocation(line: 2439, column: 5, scope: !6555)
!6560 = !DILocation(line: 2440, column: 12, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6555, file: !3, line: 2440, column: 12)
!6562 = !DILocation(line: 2440, column: 12, scope: !6555)
!6563 = !DILocation(line: 2441, column: 12, scope: !6561)
!6564 = !DILocation(line: 2441, column: 5, scope: !6561)
!6565 = !DILocation(line: 2443, column: 5, scope: !6561)
!6566 = !DILocation(line: 2445, column: 5, scope: !6550)
!6567 = !DILocation(line: 2447, column: 1, scope: !6550)
!6568 = distinct !DISubprogram(name: "propagate_rhs_into_lhs", scope: !3, file: !3, line: 2479, type: !6569, scopeLine: 2480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6571)
!6569 = !DISubroutineType(types: !6570)
!6570 = !{null, !1019, !757, !757, !689}
!6571 = !{!6572, !6573, !6574, !6575, !6576, !6579, !6587, !6588, !6589, !6597, !6600, !6603, !6606, !6607, !6608, !6609, !6610, !6611, !6620, !6621}
!6572 = !DILocalVariable(name: "stmt", arg: 1, scope: !6568, file: !3, line: 2479, type: !1019)
!6573 = !DILocalVariable(name: "lhs", arg: 2, scope: !6568, file: !3, line: 2479, type: !757)
!6574 = !DILocalVariable(name: "rhs", arg: 3, scope: !6568, file: !3, line: 2479, type: !757)
!6575 = !DILocalVariable(name: "interesting_names", arg: 4, scope: !6568, file: !3, line: 2479, type: !689)
!6576 = !DILocalVariable(name: "use_p", scope: !6577, file: !3, line: 2489, type: !2144)
!6577 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2488, column: 5)
!6578 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 2483, column: 7)
!6579 = !DILocalVariable(name: "iter", scope: !6577, file: !3, line: 2490, type: !6580)
!6580 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1445, line: 249, baseType: !6581)
!6581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1445, line: 238, size: 448, elements: !6582)
!6582 = !{!6583, !6584, !6585, !6586}
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !6581, file: !1445, line: 241, baseType: !2145, size: 64)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !6581, file: !1445, line: 243, baseType: !2145, size: 64, offset: 64)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !6581, file: !1445, line: 245, baseType: !2146, size: 256, offset: 128)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !6581, file: !1445, line: 248, baseType: !2145, size: 64, offset: 384)
!6587 = !DILocalVariable(name: "use_stmt", scope: !6577, file: !3, line: 2491, type: !1019)
!6588 = !DILocalVariable(name: "all", scope: !6577, file: !3, line: 2492, type: !681)
!6589 = !DILocalVariable(name: "result", scope: !6590, file: !3, line: 2561, type: !757)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2560, column: 3)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 2559, column: 12)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2549, column: 6)
!6593 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2545, column: 8)
!6594 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 2509, column: 2)
!6595 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 2508, column: 7)
!6596 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 2508, column: 7)
!6597 = !DILocalVariable(name: "result", scope: !6598, file: !3, line: 2614, type: !757)
!6598 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 2613, column: 13)
!6599 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2609, column: 15)
!6600 = !DILocalVariable(name: "val", scope: !6601, file: !3, line: 2626, type: !757)
!6601 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 2625, column: 13)
!6602 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 2622, column: 13)
!6603 = !DILocalVariable(name: "bb", scope: !6604, file: !3, line: 2641, type: !1505)
!6604 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 2640, column: 3)
!6605 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 2639, column: 12)
!6606 = !DILocalVariable(name: "te", scope: !6604, file: !3, line: 2642, type: !999)
!6607 = !DILocalVariable(name: "ei", scope: !6604, file: !3, line: 2643, type: !3358)
!6608 = !DILocalVariable(name: "e", scope: !6604, file: !3, line: 2644, type: !999)
!6609 = !DILocalVariable(name: "gsi", scope: !6604, file: !3, line: 2645, type: !2685)
!6610 = !DILocalVariable(name: "psi", scope: !6604, file: !3, line: 2645, type: !2685)
!6611 = !DILocalVariable(name: "phi", scope: !6612, file: !3, line: 2658, type: !1019)
!6612 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2657, column: 29)
!6613 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2654, column: 27)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 2654, column: 27)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 2651, column: 4)
!6616 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 2650, column: 13)
!6617 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 2649, column: 7)
!6618 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 2648, column: 5)
!6619 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2648, column: 5)
!6620 = !DILocalVariable(name: "result", scope: !6612, file: !3, line: 2660, type: !757)
!6621 = !DILocalVariable(name: "version", scope: !6612, file: !3, line: 2661, type: !682)
!6622 = !DILocation(line: 0, scope: !6568)
!6623 = !DILocation(line: 2483, column: 9, scope: !6578)
!6624 = !DILocation(line: 2484, column: 7, scope: !6578)
!6625 = !DILocation(line: 2484, column: 11, scope: !6578)
!6626 = !DILocation(line: 2484, column: 27, scope: !6578)
!6627 = !DILocation(line: 2485, column: 4, scope: !6578)
!6628 = !DILocation(line: 2485, column: 9, scope: !6578)
!6629 = !DILocation(line: 2486, column: 7, scope: !6578)
!6630 = !DILocation(line: 2486, column: 10, scope: !6578)
!6631 = !DILocation(line: 2487, column: 7, scope: !6578)
!6632 = !DILocation(line: 2487, column: 10, scope: !6578)
!6633 = !DILocation(line: 2487, column: 38, scope: !6578)
!6634 = !DILocation(line: 2487, column: 35, scope: !6578)
!6635 = !DILocation(line: 2483, column: 7, scope: !6568)
!6636 = !DILocation(line: 2490, column: 7, scope: !6577)
!6637 = !DILocation(line: 0, scope: !6577)
!6638 = !DILocation(line: 2495, column: 11, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 2495, column: 11)
!6640 = !DILocation(line: 2495, column: 21, scope: !6639)
!6641 = !DILocation(line: 2495, column: 25, scope: !6639)
!6642 = !DILocation(line: 2495, column: 36, scope: !6639)
!6643 = !DILocation(line: 2495, column: 11, scope: !6577)
!6644 = !DILocation(line: 2497, column: 4, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 2496, column: 2)
!6646 = !DILocation(line: 2498, column: 24, scope: !6645)
!6647 = !DILocation(line: 2498, column: 40, scope: !6645)
!6648 = !DILocation(line: 2498, column: 4, scope: !6645)
!6649 = !DILocation(line: 2499, column: 13, scope: !6645)
!6650 = !DILocation(line: 2500, column: 14, scope: !6645)
!6651 = !DILocation(line: 2500, column: 30, scope: !6645)
!6652 = !DILocation(line: 2499, column: 4, scope: !6645)
!6653 = !DILocation(line: 2501, column: 26, scope: !6645)
!6654 = !DILocation(line: 2501, column: 42, scope: !6645)
!6655 = !DILocation(line: 2501, column: 6, scope: !6645)
!6656 = !DILocation(line: 2502, column: 13, scope: !6645)
!6657 = !DILocation(line: 2502, column: 4, scope: !6645)
!6658 = !DILocation(line: 2503, column: 2, scope: !6645)
!6659 = !DILocation(line: 2508, column: 7, scope: !6596)
!6660 = !DILocation(line: 0, scope: !6593)
!6661 = !DILocation(line: 0, scope: !6604)
!6662 = !DILocation(line: 0, scope: !6619)
!6663 = !DILocation(line: 0, scope: !6618)
!6664 = !DILocation(line: 0, scope: !6614)
!6665 = !DILocation(line: 0, scope: !6596)
!6666 = !DILocation(line: 2492, column: 12, scope: !6577)
!6667 = !DILocation(line: 2508, column: 7, scope: !6595)
!6668 = !DILocation(line: 2513, column: 8, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2513, column: 8)
!6670 = !DILocation(line: 2513, column: 8, scope: !6594)
!6671 = !DILocation(line: 2517, column: 8, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2517, column: 8)
!6673 = !DILocation(line: 2517, column: 31, scope: !6672)
!6674 = !DILocation(line: 2518, column: 15, scope: !6672)
!6675 = !DILocation(line: 2518, column: 20, scope: !6672)
!6676 = !DILocation(line: 2517, column: 8, scope: !6594)
!6677 = !DILocation(line: 2525, column: 8, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2525, column: 8)
!6679 = !DILocation(line: 2525, column: 18, scope: !6678)
!6680 = !DILocation(line: 2525, column: 22, scope: !6678)
!6681 = !DILocation(line: 2525, column: 33, scope: !6678)
!6682 = !DILocation(line: 2525, column: 8, scope: !6594)
!6683 = !DILocation(line: 2527, column: 8, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 2526, column: 6)
!6685 = !DILocation(line: 2528, column: 27, scope: !6684)
!6686 = !DILocation(line: 2528, column: 51, scope: !6684)
!6687 = !DILocation(line: 2528, column: 8, scope: !6684)
!6688 = !DILocation(line: 2529, column: 6, scope: !6684)
!6689 = !DILocation(line: 2532, column: 4, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2532, column: 4)
!6691 = !DILocation(line: 0, scope: !6690)
!6692 = !DILocation(line: 2532, column: 4, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 2532, column: 4)
!6694 = !DILocation(line: 2533, column: 6, scope: !6693)
!6695 = distinct !{!6695, !6689, !6696}
!6696 = !DILocation(line: 2533, column: 33, scope: !6690)
!6697 = !DILocation(line: 2545, column: 8, scope: !6593)
!6698 = !DILocation(line: 2545, column: 31, scope: !6593)
!6699 = !DILocation(line: 2546, column: 8, scope: !6593)
!6700 = !DILocation(line: 2546, column: 14, scope: !6593)
!6701 = !DILocation(line: 2547, column: 5, scope: !6593)
!6702 = !DILocation(line: 2547, column: 8, scope: !6593)
!6703 = !DILocation(line: 2547, column: 24, scope: !6593)
!6704 = !DILocation(line: 2548, column: 5, scope: !6593)
!6705 = !DILocation(line: 2548, column: 8, scope: !6593)
!6706 = !DILocation(line: 2548, column: 30, scope: !6593)
!6707 = !DILocation(line: 2548, column: 27, scope: !6593)
!6708 = !DILocation(line: 2545, column: 8, scope: !6594)
!6709 = !DILocation(line: 2551, column: 12, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 2551, column: 12)
!6711 = !DILocation(line: 2551, column: 22, scope: !6710)
!6712 = !DILocation(line: 2551, column: 26, scope: !6710)
!6713 = !DILocation(line: 2551, column: 37, scope: !6710)
!6714 = !DILocation(line: 2551, column: 12, scope: !6592)
!6715 = !DILocation(line: 2553, column: 5, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2552, column: 3)
!6717 = !DILocation(line: 2554, column: 24, scope: !6716)
!6718 = !DILocation(line: 2554, column: 48, scope: !6716)
!6719 = !DILocation(line: 2554, column: 5, scope: !6716)
!6720 = !DILocation(line: 2555, column: 3, scope: !6716)
!6721 = !DILocation(line: 2559, column: 12, scope: !6591)
!6722 = !DILocation(line: 2559, column: 35, scope: !6591)
!6723 = !DILocation(line: 2559, column: 12, scope: !6592)
!6724 = !DILocation(line: 2561, column: 19, scope: !6590)
!6725 = !DILocation(line: 0, scope: !6590)
!6726 = !DILocation(line: 2562, column: 40, scope: !6590)
!6727 = !DILocation(line: 2562, column: 5, scope: !6590)
!6728 = !DILocation(line: 2563, column: 3, scope: !6590)
!6729 = !DILocation(line: 2578, column: 4, scope: !6594)
!6730 = !DILocation(line: 2582, column: 4, scope: !6594)
!6731 = !DILocation(line: 2585, column: 8, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2585, column: 8)
!6733 = !DILocation(line: 2585, column: 18, scope: !6732)
!6734 = !DILocation(line: 2585, column: 22, scope: !6732)
!6735 = !DILocation(line: 2585, column: 33, scope: !6732)
!6736 = !DILocation(line: 2585, column: 8, scope: !6594)
!6737 = !DILocation(line: 2587, column: 8, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6732, file: !3, line: 2586, column: 6)
!6739 = !DILocation(line: 2588, column: 27, scope: !6738)
!6740 = !DILocation(line: 2588, column: 51, scope: !6738)
!6741 = !DILocation(line: 2588, column: 8, scope: !6738)
!6742 = !DILocation(line: 2589, column: 6, scope: !6738)
!6743 = !DILocation(line: 2593, column: 15, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2593, column: 15)
!6745 = !DILocation(line: 2594, column: 15, scope: !6744)
!6746 = !DILocation(line: 2594, column: 18, scope: !6744)
!6747 = !DILocation(line: 2594, column: 60, scope: !6744)
!6748 = !DILocation(line: 2593, column: 15, scope: !6594)
!6749 = !DILocation(line: 2596, column: 18, scope: !6744)
!6750 = !DILocation(line: 2595, column: 6, scope: !6744)
!6751 = !DILocation(line: 2600, column: 8, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2600, column: 8)
!6753 = !DILocation(line: 2600, column: 8, scope: !6594)
!6754 = !DILocation(line: 2602, column: 24, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 2601, column: 6)
!6756 = !DILocation(line: 2602, column: 41, scope: !6755)
!6757 = !DILocation(line: 2602, column: 63, scope: !6755)
!6758 = !DILocation(line: 2602, column: 8, scope: !6755)
!6759 = !DILocation(line: 2603, column: 12, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 2603, column: 12)
!6761 = !DILocation(line: 2603, column: 22, scope: !6760)
!6762 = !DILocation(line: 2603, column: 26, scope: !6760)
!6763 = !DILocation(line: 2603, column: 37, scope: !6760)
!6764 = !DILocation(line: 2603, column: 12, scope: !6755)
!6765 = !DILocation(line: 2604, column: 3, scope: !6760)
!6766 = !DILocation(line: 2609, column: 15, scope: !6599)
!6767 = !DILocation(line: 2610, column: 15, scope: !6599)
!6768 = !DILocation(line: 2610, column: 18, scope: !6599)
!6769 = !DILocation(line: 2610, column: 59, scope: !6599)
!6770 = !DILocation(line: 2611, column: 15, scope: !6599)
!6771 = !DILocation(line: 2611, column: 19, scope: !6599)
!6772 = !DILocation(line: 2611, column: 61, scope: !6599)
!6773 = !DILocation(line: 2612, column: 19, scope: !6599)
!6774 = !DILocation(line: 2612, column: 47, scope: !6599)
!6775 = !DILocation(line: 2612, column: 22, scope: !6599)
!6776 = !DILocation(line: 2609, column: 15, scope: !6594)
!6777 = !DILocation(line: 2614, column: 22, scope: !6598)
!6778 = !DILocation(line: 0, scope: !6598)
!6779 = !DILocation(line: 2615, column: 43, scope: !6598)
!6780 = !DILocation(line: 2615, column: 8, scope: !6598)
!6781 = !DILocation(line: 2616, column: 6, scope: !6598)
!6782 = !DILocation(line: 2622, column: 13, scope: !6602)
!6783 = !DILocation(line: 2622, column: 36, scope: !6602)
!6784 = !DILocation(line: 2623, column: 6, scope: !6602)
!6785 = !DILocation(line: 2623, column: 9, scope: !6602)
!6786 = !DILocation(line: 2623, column: 32, scope: !6602)
!6787 = !DILocation(line: 2624, column: 6, scope: !6602)
!6788 = !DILocation(line: 2624, column: 9, scope: !6602)
!6789 = !DILocation(line: 2624, column: 32, scope: !6602)
!6790 = !DILocation(line: 2622, column: 13, scope: !6599)
!6791 = !DILocation(line: 2628, column: 12, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 2628, column: 12)
!6793 = !DILocation(line: 2628, column: 35, scope: !6792)
!6794 = !DILocation(line: 2628, column: 12, scope: !6601)
!6795 = !DILocation(line: 2629, column: 40, scope: !6792)
!6796 = !DILocation(line: 2630, column: 8, scope: !6792)
!6797 = !DILocation(line: 2631, column: 36, scope: !6792)
!6798 = !DILocation(line: 2632, column: 36, scope: !6792)
!6799 = !DILocation(line: 2633, column: 36, scope: !6792)
!6800 = !DILocation(line: 2629, column: 23, scope: !6792)
!6801 = !DILocation(line: 0, scope: !6601)
!6802 = !DILocation(line: 2629, column: 17, scope: !6792)
!6803 = !DILocation(line: 2634, column: 24, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 2634, column: 24)
!6805 = !DILocation(line: 2634, column: 47, scope: !6804)
!6806 = !DILocation(line: 2634, column: 24, scope: !6792)
!6807 = !DILocation(line: 2635, column: 9, scope: !6804)
!6808 = !DILocation(line: 2635, column: 3, scope: !6804)
!6809 = !DILocation(line: 2637, column: 9, scope: !6804)
!6810 = !DILocation(line: 0, scope: !6792)
!6811 = !DILocation(line: 2639, column: 12, scope: !6605)
!6812 = !DILocation(line: 2639, column: 16, scope: !6605)
!6813 = !DILocation(line: 2639, column: 19, scope: !6605)
!6814 = !DILocation(line: 2639, column: 12, scope: !6601)
!6815 = !DILocation(line: 2641, column: 22, scope: !6604)
!6816 = !DILocation(line: 2642, column: 15, scope: !6604)
!6817 = !DILocation(line: 2643, column: 5, scope: !6604)
!6818 = !DILocation(line: 2645, column: 5, scope: !6604)
!6819 = !DILocation(line: 2648, column: 15, scope: !6619)
!6820 = !DILocation(line: 0, scope: !6615)
!6821 = !DILocation(line: 2648, column: 10, scope: !6619)
!6822 = !DILocation(line: 2648, column: 42, scope: !6618)
!6823 = !DILocation(line: 2648, column: 5, scope: !6619)
!6824 = !DILocation(line: 2650, column: 15, scope: !6616)
!6825 = !DILocation(line: 2650, column: 13, scope: !6617)
!6826 = !DILocation(line: 2654, column: 38, scope: !6614)
!6827 = !DILocation(line: 2654, column: 57, scope: !6614)
!6828 = !DILocation(line: 2654, column: 32, scope: !6614)
!6829 = !DILocation(line: 2655, column: 33, scope: !6613)
!6830 = !DILocation(line: 2655, column: 32, scope: !6613)
!6831 = !DILocation(line: 2654, column: 27, scope: !6614)
!6832 = !DILocation(line: 2658, column: 44, scope: !6612)
!6833 = !DILocation(line: 0, scope: !6612)
!6834 = !DILocation(line: 2660, column: 24, scope: !6612)
!6835 = !DILocation(line: 2661, column: 24, scope: !6612)
!6836 = !DILocation(line: 2663, column: 10, scope: !6612)
!6837 = !DILocation(line: 2656, column: 32, scope: !6613)
!6838 = !DILocation(line: 2654, column: 27, scope: !6613)
!6839 = distinct !{!6839, !6831, !6840}
!6840 = !DILocation(line: 2664, column: 8, scope: !6614)
!6841 = !DILocation(line: 2666, column: 28, scope: !6615)
!6842 = !DILocation(line: 2666, column: 22, scope: !6615)
!6843 = !DILocation(line: 2668, column: 22, scope: !6615)
!6844 = !DILocation(line: 2668, column: 16, scope: !6615)
!6845 = !DILocation(line: 2669, column: 6, scope: !6615)
!6846 = !DILocation(line: 2670, column: 18, scope: !6615)
!6847 = !DILocation(line: 2671, column: 4, scope: !6615)
!6848 = !DILocation(line: 2673, column: 4, scope: !6616)
!6849 = !DILocation(line: 2648, column: 5, scope: !6618)
!6850 = distinct !{!6850, !6823, !6851}
!6851 = !DILocation(line: 2674, column: 7, scope: !6619)
!6852 = !DILocation(line: 2676, column: 11, scope: !6604)
!6853 = !DILocation(line: 2676, column: 24, scope: !6604)
!6854 = !DILocation(line: 2677, column: 5, scope: !6604)
!6855 = !DILocation(line: 2680, column: 9, scope: !6604)
!6856 = !DILocation(line: 2680, column: 15, scope: !6604)
!6857 = !DILocation(line: 2681, column: 15, scope: !6604)
!6858 = !DILocation(line: 2682, column: 15, scope: !6604)
!6859 = !DILocation(line: 2683, column: 13, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2683, column: 9)
!6861 = !DILocation(line: 2683, column: 25, scope: !6860)
!6862 = !DILocation(line: 2683, column: 9, scope: !6604)
!6863 = !DILocation(line: 2684, column: 23, scope: !6860)
!6864 = !DILocation(line: 2684, column: 7, scope: !6860)
!6865 = !DILocation(line: 2685, column: 10, scope: !6605)
!6866 = !DILocation(line: 2685, column: 10, scope: !6604)
!6867 = distinct !{!6867, !6659, !6868}
!6868 = !DILocation(line: 2687, column: 2, scope: !6596)
!6869 = !DILocation(line: 2690, column: 7, scope: !6577)
!6870 = !DILocation(line: 2694, column: 11, scope: !6577)
!6871 = !DILocation(line: 2695, column: 2, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 2694, column: 11)
!6873 = !DILocation(line: 2696, column: 5, scope: !6578)
!6874 = !DILocation(line: 2696, column: 5, scope: !6577)
!6875 = !DILocation(line: 2697, column: 1, scope: !6568)
!6876 = distinct !DISubprogram(name: "first_imm_use_stmt", scope: !2967, file: !2967, line: 1058, type: !6877, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6880)
!6877 = !DISubroutineType(types: !6878)
!6878 = !{!1019, !6879, !757}
!6879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6580, size: 64)
!6880 = !{!6881, !6882}
!6881 = !DILocalVariable(name: "imm", arg: 1, scope: !6876, file: !2967, line: 1058, type: !6879)
!6882 = !DILocalVariable(name: "var", arg: 2, scope: !6876, file: !2967, line: 1058, type: !757)
!6883 = !DILocation(line: 0, scope: !6876)
!6884 = !DILocation(line: 1060, column: 18, scope: !6876)
!6885 = !DILocation(line: 1060, column: 8, scope: !6876)
!6886 = !DILocation(line: 1060, column: 14, scope: !6876)
!6887 = !DILocation(line: 1061, column: 30, scope: !6876)
!6888 = !DILocation(line: 1061, column: 16, scope: !6876)
!6889 = !DILocation(line: 1062, column: 8, scope: !6876)
!6890 = !DILocation(line: 1062, column: 22, scope: !6876)
!6891 = !DILocation(line: 1067, column: 18, scope: !6876)
!6892 = !DILocation(line: 1067, column: 23, scope: !6876)
!6893 = !DILocation(line: 1068, column: 18, scope: !6876)
!6894 = !DILocation(line: 1068, column: 23, scope: !6876)
!6895 = !DILocation(line: 1069, column: 22, scope: !6876)
!6896 = !DILocation(line: 1069, column: 27, scope: !6876)
!6897 = !DILocation(line: 1070, column: 18, scope: !6876)
!6898 = !DILocation(line: 1070, column: 22, scope: !6876)
!6899 = !DILocation(line: 1072, column: 7, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6876, file: !2967, line: 1072, column: 7)
!6901 = !DILocation(line: 1072, column: 7, scope: !6876)
!6902 = !DILocation(line: 1075, column: 30, scope: !6876)
!6903 = !DILocation(line: 1075, column: 3, scope: !6876)
!6904 = !DILocation(line: 1077, column: 10, scope: !6876)
!6905 = !DILocation(line: 1077, column: 3, scope: !6876)
!6906 = !DILocation(line: 1078, column: 1, scope: !6876)
!6907 = distinct !DISubprogram(name: "end_imm_use_stmt_p", scope: !2967, file: !2967, line: 969, type: !6908, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6912)
!6908 = !DISubroutineType(types: !6909)
!6909 = !{!681, !6910}
!6910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6911, size: 64)
!6911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6580)
!6912 = !{!6913}
!6913 = !DILocalVariable(name: "imm", arg: 1, scope: !6907, file: !2967, line: 969, type: !6910)
!6914 = !DILocation(line: 0, scope: !6907)
!6915 = !DILocation(line: 971, column: 16, scope: !6907)
!6916 = !DILocation(line: 971, column: 32, scope: !6907)
!6917 = !DILocation(line: 971, column: 24, scope: !6907)
!6918 = !DILocation(line: 971, column: 10, scope: !6907)
!6919 = !DILocation(line: 971, column: 3, scope: !6907)
!6920 = distinct !DISubprogram(name: "gimple_debug_bind_p", scope: !580, file: !580, line: 3257, type: !3724, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6921)
!6921 = !{!6922}
!6922 = !DILocalVariable(name: "s", arg: 1, scope: !6920, file: !580, line: 3257, type: !2892)
!6923 = !DILocation(line: 0, scope: !6920)
!6924 = !DILocation(line: 3259, column: 7, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6920, file: !580, line: 3259, column: 7)
!6926 = !DILocation(line: 3259, column: 7, scope: !6920)
!6927 = !DILocation(line: 3260, column: 22, scope: !6925)
!6928 = !DILocation(line: 3260, column: 30, scope: !6925)
!6929 = !DILocation(line: 3260, column: 12, scope: !6925)
!6930 = !DILocation(line: 3260, column: 5, scope: !6925)
!6931 = !DILocation(line: 3263, column: 1, scope: !6920)
!6932 = distinct !DISubprogram(name: "first_imm_use_on_stmt", scope: !2967, file: !2967, line: 1101, type: !6933, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6935)
!6933 = !DISubroutineType(types: !6934)
!6934 = !{!2144, !6879}
!6935 = !{!6936}
!6936 = !DILocalVariable(name: "imm", arg: 1, scope: !6932, file: !2967, line: 1101, type: !6879)
!6937 = !DILocation(line: 0, scope: !6932)
!6938 = !DILocation(line: 1103, column: 29, scope: !6932)
!6939 = !DILocation(line: 1103, column: 38, scope: !6932)
!6940 = !DILocation(line: 1103, column: 8, scope: !6932)
!6941 = !DILocation(line: 1103, column: 22, scope: !6932)
!6942 = !DILocation(line: 1104, column: 3, scope: !6932)
!6943 = distinct !DISubprogram(name: "end_imm_use_on_stmt_p", scope: !2967, file: !2967, line: 1110, type: !6908, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6944)
!6944 = !{!6945}
!6945 = !DILocalVariable(name: "imm", arg: 1, scope: !6943, file: !2967, line: 1110, type: !6910)
!6946 = !DILocation(line: 0, scope: !6943)
!6947 = !DILocation(line: 1112, column: 16, scope: !6943)
!6948 = !DILocation(line: 1112, column: 34, scope: !6943)
!6949 = !DILocation(line: 1112, column: 24, scope: !6943)
!6950 = !DILocation(line: 1112, column: 10, scope: !6943)
!6951 = !DILocation(line: 1112, column: 3, scope: !6943)
!6952 = distinct !DISubprogram(name: "next_imm_use_on_stmt", scope: !2967, file: !2967, line: 1118, type: !6933, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6953)
!6953 = !{!6954}
!6954 = !DILocalVariable(name: "imm", arg: 1, scope: !6952, file: !2967, line: 1118, type: !6879)
!6955 = !DILocation(line: 0, scope: !6952)
!6956 = !DILocation(line: 1120, column: 23, scope: !6952)
!6957 = !DILocation(line: 1120, column: 16, scope: !6952)
!6958 = !DILocation(line: 1121, column: 7, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6952, file: !2967, line: 1121, column: 7)
!6960 = !DILocation(line: 1121, column: 7, scope: !6952)
!6961 = !DILocation(line: 1125, column: 33, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6959, file: !2967, line: 1124, column: 5)
!6963 = !DILocation(line: 1125, column: 42, scope: !6962)
!6964 = !DILocation(line: 1125, column: 26, scope: !6962)
!6965 = !DILocation(line: 1126, column: 7, scope: !6962)
!6966 = !DILocation(line: 0, scope: !6959)
!6967 = !DILocation(line: 1128, column: 1, scope: !6952)
!6968 = distinct !DISubprogram(name: "ei_safe_edge", scope: !526, file: !526, line: 761, type: !4598, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6969)
!6969 = !{!6970}
!6970 = !DILocalVariable(name: "i", arg: 1, scope: !6968, file: !526, line: 761, type: !3358)
!6971 = !DILocation(line: 763, column: 11, scope: !6968)
!6972 = !DILocation(line: 763, column: 10, scope: !6968)
!6973 = !DILocation(line: 763, column: 26, scope: !6968)
!6974 = !DILocation(line: 763, column: 3, scope: !6968)
!6975 = distinct !DISubprogram(name: "next_imm_use_stmt", scope: !2967, file: !2967, line: 1083, type: !6976, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6978)
!6976 = !DISubroutineType(types: !6977)
!6977 = !{!1019, !6879}
!6978 = !{!6979}
!6979 = !DILocalVariable(name: "imm", arg: 1, scope: !6975, file: !2967, line: 1083, type: !6879)
!6980 = !DILocation(line: 0, scope: !6975)
!6981 = !DILocation(line: 1085, column: 33, scope: !6975)
!6982 = !DILocation(line: 1085, column: 16, scope: !6975)
!6983 = !DILocation(line: 1086, column: 7, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6975, file: !2967, line: 1086, column: 7)
!6985 = !DILocation(line: 1086, column: 7, scope: !6975)
!6986 = !DILocation(line: 1088, column: 26, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !2967, line: 1088, column: 11)
!6988 = distinct !DILexicalBlock(scope: !6984, file: !2967, line: 1087, column: 5)
!6989 = !DILocation(line: 1088, column: 31, scope: !6987)
!6990 = !DILocation(line: 1088, column: 11, scope: !6988)
!6991 = !DILocation(line: 1089, column: 24, scope: !6987)
!6992 = !DILocation(line: 1089, column: 2, scope: !6987)
!6993 = !DILocation(line: 1093, column: 30, scope: !6975)
!6994 = !DILocation(line: 1093, column: 3, scope: !6975)
!6995 = !DILocation(line: 1094, column: 10, scope: !6975)
!6996 = !DILocation(line: 1094, column: 3, scope: !6975)
!6997 = !DILocation(line: 1095, column: 1, scope: !6975)
!6998 = distinct !DISubprogram(name: "link_use_stmts_after", scope: !2967, file: !2967, line: 1018, type: !6999, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7001)
!6999 = !DISubroutineType(types: !7000)
!7000 = !{null, !2144, !6879}
!7001 = !{!7002, !7003, !7004, !7005, !7006, !7007, !7008, !7009}
!7002 = !DILocalVariable(name: "head", arg: 1, scope: !6998, file: !2967, line: 1018, type: !2144)
!7003 = !DILocalVariable(name: "imm", arg: 2, scope: !6998, file: !2967, line: 1018, type: !6879)
!7004 = !DILocalVariable(name: "use_p", scope: !6998, file: !2967, line: 1020, type: !2144)
!7005 = !DILocalVariable(name: "last_p", scope: !6998, file: !2967, line: 1021, type: !2144)
!7006 = !DILocalVariable(name: "head_stmt", scope: !6998, file: !2967, line: 1022, type: !1019)
!7007 = !DILocalVariable(name: "use", scope: !6998, file: !2967, line: 1023, type: !757)
!7008 = !DILocalVariable(name: "op_iter", scope: !6998, file: !2967, line: 1024, type: !4900)
!7009 = !DILocalVariable(name: "flag", scope: !6998, file: !2967, line: 1025, type: !682)
!7010 = !DILocation(line: 0, scope: !6998)
!7011 = !DILocation(line: 1022, column: 22, scope: !6998)
!7012 = !DILocation(line: 1023, column: 14, scope: !6998)
!7013 = !DILocation(line: 1024, column: 3, scope: !6998)
!7014 = !DILocation(line: 1028, column: 11, scope: !6998)
!7015 = !DILocation(line: 1030, column: 7, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6998, file: !2967, line: 1030, column: 7)
!7017 = !DILocation(line: 1030, column: 31, scope: !7016)
!7018 = !DILocation(line: 1030, column: 7, scope: !6998)
!7019 = !DILocation(line: 1032, column: 7, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !2967, line: 1032, column: 7)
!7021 = distinct !DILexicalBlock(scope: !7016, file: !2967, line: 1031, column: 5)
!7022 = !DILocation(line: 0, scope: !7020)
!7023 = !DILocation(line: 1032, column: 7, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7020, file: !2967, line: 1032, column: 7)
!7025 = !DILocation(line: 1033, column: 6, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7024, file: !2967, line: 1033, column: 6)
!7027 = !DILocation(line: 1033, column: 27, scope: !7026)
!7028 = !DILocation(line: 1033, column: 6, scope: !7024)
!7029 = !DILocation(line: 1034, column: 13, scope: !7026)
!7030 = !DILocation(line: 1034, column: 4, scope: !7026)
!7031 = distinct !{!7031, !7019, !7032}
!7032 = !DILocation(line: 1034, column: 53, scope: !7020)
!7033 = !DILocation(line: 1038, column: 11, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7016, file: !2967, line: 1037, column: 5)
!7035 = !DILocation(line: 1040, column: 4, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !2967, line: 1040, column: 4)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !2967, line: 1039, column: 2)
!7038 = distinct !DILexicalBlock(scope: !7034, file: !2967, line: 1038, column: 11)
!7039 = !DILocation(line: 0, scope: !7036)
!7040 = !DILocation(line: 1040, column: 4, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7036, file: !2967, line: 1040, column: 4)
!7042 = !DILocation(line: 1041, column: 10, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7041, file: !2967, line: 1041, column: 10)
!7044 = !DILocation(line: 1041, column: 31, scope: !7043)
!7045 = !DILocation(line: 1041, column: 10, scope: !7041)
!7046 = !DILocation(line: 1042, column: 17, scope: !7043)
!7047 = !DILocation(line: 1042, column: 8, scope: !7043)
!7048 = distinct !{!7048, !7035, !7049}
!7049 = !DILocation(line: 1042, column: 57, scope: !7036)
!7050 = !DILocation(line: 1044, column: 25, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7038, file: !2967, line: 1044, column: 16)
!7052 = !DILocation(line: 1044, column: 53, scope: !7051)
!7053 = !DILocation(line: 1044, column: 16, scope: !7038)
!7054 = !DILocation(line: 1046, column: 8, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !2967, line: 1046, column: 8)
!7056 = distinct !DILexicalBlock(scope: !7051, file: !2967, line: 1045, column: 2)
!7057 = !DILocation(line: 1046, column: 29, scope: !7055)
!7058 = !DILocation(line: 1046, column: 8, scope: !7056)
!7059 = !DILocation(line: 1047, column: 15, scope: !7055)
!7060 = !DILocation(line: 1047, column: 6, scope: !7055)
!7061 = !DILocation(line: 1051, column: 22, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !6998, file: !2967, line: 1051, column: 7)
!7063 = !DILocation(line: 1021, column: 17, scope: !6998)
!7064 = !DILocation(line: 1051, column: 27, scope: !7062)
!7065 = !DILocation(line: 1051, column: 7, scope: !6998)
!7066 = !DILocation(line: 1052, column: 27, scope: !7062)
!7067 = !DILocation(line: 1052, column: 5, scope: !7062)
!7068 = !DILocation(line: 1053, column: 32, scope: !6998)
!7069 = !DILocation(line: 1053, column: 3, scope: !6998)
!7070 = !DILocation(line: 1054, column: 1, scope: !6998)
!7071 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !2967, file: !2967, line: 910, type: !5314, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7072)
!7072 = !{!7073, !7074, !7075, !7076, !7077}
!7073 = !DILocalVariable(name: "ptr", arg: 1, scope: !7071, file: !2967, line: 910, type: !5316)
!7074 = !DILocalVariable(name: "phi", arg: 2, scope: !7071, file: !2967, line: 910, type: !1019)
!7075 = !DILocalVariable(name: "flags", arg: 3, scope: !7071, file: !2967, line: 910, type: !682)
!7076 = !DILocalVariable(name: "phi_def", scope: !7071, file: !2967, line: 912, type: !757)
!7077 = !DILocalVariable(name: "comp", scope: !7071, file: !2967, line: 913, type: !682)
!7078 = !DILocation(line: 0, scope: !7071)
!7079 = !DILocation(line: 912, column: 18, scope: !7071)
!7080 = !DILocation(line: 915, column: 3, scope: !7071)
!7081 = !DILocation(line: 916, column: 8, scope: !7071)
!7082 = !DILocation(line: 916, column: 13, scope: !7071)
!7083 = !DILocation(line: 918, column: 3, scope: !7071)
!7084 = !DILocation(line: 920, column: 11, scope: !7071)
!7085 = !DILocation(line: 923, column: 14, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7071, file: !2967, line: 923, column: 7)
!7087 = !DILocation(line: 923, column: 22, scope: !7086)
!7088 = !DILocation(line: 923, column: 7, scope: !7071)
!7089 = !DILocation(line: 925, column: 17, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7086, file: !2967, line: 924, column: 5)
!7091 = !DILocation(line: 926, column: 7, scope: !7090)
!7092 = !DILocation(line: 929, column: 8, scope: !7071)
!7093 = !DILocation(line: 929, column: 17, scope: !7071)
!7094 = !DILocation(line: 930, column: 18, scope: !7071)
!7095 = !DILocation(line: 930, column: 8, scope: !7071)
!7096 = !DILocation(line: 930, column: 16, scope: !7071)
!7097 = !DILocation(line: 931, column: 8, scope: !7071)
!7098 = !DILocation(line: 931, column: 18, scope: !7071)
!7099 = !DILocation(line: 932, column: 10, scope: !7071)
!7100 = !DILocation(line: 932, column: 3, scope: !7071)
!7101 = !DILocation(line: 933, column: 1, scope: !7071)
!7102 = distinct !DISubprogram(name: "move_use_after_head", scope: !2967, file: !2967, line: 990, type: !7103, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7105)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{!2144, !2144, !2144, !2144}
!7105 = !{!7106, !7107, !7108}
!7106 = !DILocalVariable(name: "use_p", arg: 1, scope: !7102, file: !2967, line: 990, type: !2144)
!7107 = !DILocalVariable(name: "head", arg: 2, scope: !7102, file: !2967, line: 990, type: !2144)
!7108 = !DILocalVariable(name: "last_p", arg: 3, scope: !7102, file: !2967, line: 991, type: !2144)
!7109 = !DILocation(line: 0, scope: !7102)
!7110 = !DILocation(line: 997, column: 13, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7102, file: !2967, line: 997, column: 7)
!7112 = !DILocation(line: 997, column: 7, scope: !7102)
!7113 = !DILocation(line: 1000, column: 19, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !2967, line: 1000, column: 11)
!7115 = distinct !DILexicalBlock(scope: !7111, file: !2967, line: 998, column: 5)
!7116 = !DILocation(line: 1000, column: 24, scope: !7114)
!7117 = !DILocation(line: 1000, column: 11, scope: !7115)
!7118 = !DILocation(line: 1005, column: 4, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7114, file: !2967, line: 1003, column: 2)
!7120 = !DILocation(line: 1006, column: 4, scope: !7119)
!7121 = !DILocation(line: 1010, column: 3, scope: !7102)
!7122 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !580, file: !580, line: 1334, type: !7123, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7125)
!7123 = !DISubroutineType(types: !7124)
!7124 = !{!2144, !2892}
!7125 = !{!7126, !7127}
!7126 = !DILocalVariable(name: "g", arg: 1, scope: !7122, file: !580, line: 1334, type: !2892)
!7127 = !DILocalVariable(name: "ops", scope: !7122, file: !580, line: 1336, type: !1055)
!7128 = !DILocation(line: 0, scope: !7122)
!7129 = !DILocation(line: 1337, column: 8, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7122, file: !580, line: 1337, column: 7)
!7131 = !DILocation(line: 1337, column: 7, scope: !7122)
!7132 = !DILocation(line: 1339, column: 25, scope: !7122)
!7133 = !DILocation(line: 1340, column: 7, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7122, file: !580, line: 1340, column: 7)
!7135 = !DILocation(line: 1341, column: 7, scope: !7134)
!7136 = !DILocation(line: 1341, column: 28, scope: !7134)
!7137 = !DILocation(line: 1341, column: 49, scope: !7134)
!7138 = !DILocation(line: 1341, column: 32, scope: !7134)
!7139 = !DILocation(line: 1342, column: 12, scope: !7134)
!7140 = !DILocation(line: 1340, column: 7, scope: !7122)
!7141 = !DILocation(line: 1344, column: 1, scope: !7122)
!7142 = distinct !DISubprogram(name: "delink_imm_use", scope: !2967, file: !2967, line: 188, type: !7143, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7145)
!7143 = !DISubroutineType(types: !7144)
!7144 = !{null, !2145}
!7145 = !{!7146}
!7146 = !DILocalVariable(name: "linknode", arg: 1, scope: !7142, file: !2967, line: 188, type: !2145)
!7147 = !DILocation(line: 0, scope: !7142)
!7148 = !DILocation(line: 191, column: 17, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7142, file: !2967, line: 191, column: 7)
!7150 = !DILocation(line: 191, column: 22, scope: !7149)
!7151 = !DILocation(line: 191, column: 7, scope: !7142)
!7152 = !DILocation(line: 194, column: 36, scope: !7142)
!7153 = !DILocation(line: 194, column: 19, scope: !7142)
!7154 = !DILocation(line: 194, column: 24, scope: !7142)
!7155 = !DILocation(line: 195, column: 36, scope: !7142)
!7156 = !DILocation(line: 195, column: 13, scope: !7142)
!7157 = !DILocation(line: 195, column: 24, scope: !7142)
!7158 = !DILocation(line: 196, column: 18, scope: !7142)
!7159 = !DILocation(line: 197, column: 18, scope: !7142)
!7160 = !DILocation(line: 198, column: 1, scope: !7142)
!7161 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !2967, file: !2967, line: 202, type: !7162, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7164)
!7162 = !DISubroutineType(types: !7163)
!7163 = !{null, !2145, !2145}
!7164 = !{!7165, !7166}
!7165 = !DILocalVariable(name: "linknode", arg: 1, scope: !7161, file: !2967, line: 202, type: !2145)
!7166 = !DILocalVariable(name: "list", arg: 2, scope: !7161, file: !2967, line: 202, type: !2145)
!7167 = !DILocation(line: 0, scope: !7161)
!7168 = !DILocation(line: 206, column: 13, scope: !7161)
!7169 = !DILocation(line: 206, column: 18, scope: !7161)
!7170 = !DILocation(line: 207, column: 26, scope: !7161)
!7171 = !DILocation(line: 207, column: 13, scope: !7161)
!7172 = !DILocation(line: 207, column: 18, scope: !7161)
!7173 = !DILocation(line: 208, column: 9, scope: !7161)
!7174 = !DILocation(line: 208, column: 15, scope: !7161)
!7175 = !DILocation(line: 208, column: 20, scope: !7161)
!7176 = !DILocation(line: 209, column: 14, scope: !7161)
!7177 = !DILocation(line: 210, column: 1, scope: !7161)
!7178 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !2967, file: !2967, line: 729, type: !7179, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7181)
!7179 = !DISubroutineType(types: !7180)
!7180 = !{null, !5316}
!7181 = !{!7182}
!7182 = !DILocalVariable(name: "ptr", arg: 1, scope: !7178, file: !2967, line: 729, type: !5316)
!7183 = !DILocation(line: 0, scope: !7178)
!7184 = !DILocation(line: 731, column: 8, scope: !7178)
!7185 = !DILocation(line: 731, column: 13, scope: !7178)
!7186 = !DILocation(line: 732, column: 8, scope: !7178)
!7187 = !DILocation(line: 732, column: 13, scope: !7178)
!7188 = !DILocation(line: 733, column: 8, scope: !7178)
!7189 = !DILocation(line: 733, column: 18, scope: !7178)
!7190 = !DILocation(line: 734, column: 8, scope: !7178)
!7191 = !DILocation(line: 734, column: 14, scope: !7178)
!7192 = !DILocation(line: 735, column: 8, scope: !7178)
!7193 = !DILocation(line: 735, column: 16, scope: !7178)
!7194 = !DILocation(line: 736, column: 8, scope: !7178)
!7195 = !DILocation(line: 736, column: 17, scope: !7178)
!7196 = !DILocation(line: 737, column: 8, scope: !7178)
!7197 = !DILocation(line: 737, column: 13, scope: !7178)
!7198 = !DILocation(line: 738, column: 1, scope: !7178)
!7199 = distinct !DISubprogram(name: "is_gimple_debug", scope: !580, file: !580, line: 3249, type: !3724, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7200)
!7200 = !{!7201}
!7201 = !DILocalVariable(name: "gs", arg: 1, scope: !7199, file: !580, line: 3249, type: !2892)
!7202 = !DILocation(line: 0, scope: !7199)
!7203 = !DILocation(line: 3251, column: 10, scope: !7199)
!7204 = !DILocation(line: 3251, column: 27, scope: !7199)
!7205 = !DILocation(line: 3251, column: 3, scope: !7199)
