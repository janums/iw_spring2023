; ModuleID = 'c-format.bc'
source_filename = "c-format.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type opaque
%struct.function = type opaque
%struct.format_kind_info = type { i8*, %struct.format_length_info*, %struct.format_char_info*, i8*, i8*, %struct.format_flag_spec*, %struct.format_flag_pair*, i32, i32, i32, i32, i32, i32, i32, %union.tree_node**, %union.tree_node** }
%struct.format_length_info = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.format_char_info = type { i8*, i32, i32, [12 x %struct.format_type_detail], i8*, i8*, %struct.format_char_info* }
%struct.format_type_detail = type { i32, i8*, %union.tree_node** }
%struct.format_flag_spec = type { i32, i32, i32, i8*, i8*, i32 }
%struct.format_flag_pair = type { i32, i32, i32, i32 }
%struct.target_ovr_attr = type { i8*, i8* }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.gimple_seq_d = type opaque
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.function_format_info = type { i32, i64, i64 }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }
%struct.format_check_context = type { %struct.format_check_results*, %struct.function_format_info*, %union.tree_node* }
%struct.format_check_results = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.format_wanted_type = type { %union.tree_node*, i8*, i32, i32, i32, i32, i32, i8*, %union.tree_node*, i32, %struct.format_wanted_type* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@warn_format = external dso_local local_unnamed_addr global i32, align 4
@warn_format_extra_args = external dso_local local_unnamed_addr global i32, align 4
@warn_format_zero_length = external dso_local local_unnamed_addr global i32, align 4
@warn_format_contains_nul = external dso_local local_unnamed_addr global i32, align 4
@warn_format_nonliteral = external dso_local local_unnamed_addr global i32, align 4
@warn_format_security = external dso_local local_unnamed_addr global i32, align 4
@warn_format_y2k = external dso_local local_unnamed_addr global i32, align 4
@warn_nonnull = external dso_local local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [41 x i8] c"format string has invalid operand number\00", align 1
@integer_types = external dso_local global [11 x %union.tree_node*], align 16
@.str.1 = private unnamed_addr constant [37 x i8] c"function does not return string type\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@warn_missing_format_attribute = external dso_local local_unnamed_addr global i32, align 4
@format_types = internal unnamed_addr global %struct.format_kind_info* getelementptr inbounds ([10 x %struct.format_kind_info], [10 x %struct.format_kind_info]* @format_types_orig, i64 0, i64 0), align 8, !dbg !0
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.3 = private unnamed_addr constant [62 x i8] c"function might be possible candidate for %qs format attribute\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"args to be formatted is not %<...%>\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"strftime formats cannot format arguments\00", align 1
@dynamic_format_types = internal unnamed_addr global %struct.format_kind_info* null, align 8, !dbg !1028
@format_types_orig = internal constant [10 x %struct.format_kind_info] [%struct.format_kind_info { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([11 x %struct.format_length_info], [11 x %struct.format_length_info]* @printf_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([15 x %struct.format_char_info], [15 x %struct.format_char_info]* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @print_char_table to [15 x %struct.format_char_info]*), i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([11 x %struct.format_flag_spec], [11 x %struct.format_flag_spec]* @printf_flag_specs, i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([4 x %struct.format_flag_pair], [4 x %struct.format_flag_pair]* @printf_flag_pairs, i32 0, i32 0), i32 89, i32 119, i32 0, i32 112, i32 0, i32 76, i32 0, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_kind_info { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([3 x %struct.format_length_info], [3 x %struct.format_length_info]* @asm_fprintf_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([13 x %struct.format_char_info], [13 x %struct.format_char_info]* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @asm_fprintf_char_table to [13 x %struct.format_char_info]*), i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([9 x %struct.format_flag_spec], [9 x %struct.format_flag_spec]* @asm_fprintf_flag_specs, i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([4 x %struct.format_flag_pair], [4 x %struct.format_flag_pair]* @asm_fprintf_flag_pairs, i32 0, i32 0), i32 65, i32 119, i32 0, i32 112, i32 0, i32 76, i32 0, %union.tree_node** null, %union.tree_node** null }, %struct.format_kind_info { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([3 x %struct.format_length_info], [3 x %struct.format_length_info]* @gcc_diag_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([10 x %struct.format_char_info], [10 x %struct.format_char_info]* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @gcc_diag_char_table to [10 x %struct.format_char_info]*), i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([5 x %struct.format_flag_spec], [5 x %struct.format_flag_spec]* @gcc_diag_flag_specs, i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([1 x %struct.format_flag_pair], [1 x %struct.format_flag_pair]* @gcc_diag_flag_pairs, i32 0, i32 0), i32 1, i32 0, i32 0, i32 112, i32 0, i32 76, i32 0, %union.tree_node** null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_kind_info { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([3 x %struct.format_length_info], [3 x %struct.format_length_info]* @gcc_diag_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([10 x %struct.format_char_info], [10 x %struct.format_char_info]* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @gcc_tdiag_char_table to [10 x %struct.format_char_info]*), i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([5 x %struct.format_flag_spec], [5 x %struct.format_flag_spec]* @gcc_diag_flag_specs, i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([1 x %struct.format_flag_pair], [1 x %struct.format_flag_pair]* @gcc_diag_flag_pairs, i32 0, i32 0), i32 1, i32 0, i32 0, i32 112, i32 0, i32 76, i32 0, %union.tree_node** null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_kind_info { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.83, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([3 x %struct.format_length_info], [3 x %struct.format_length_info]* @gcc_diag_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([10 x %struct.format_char_info], [10 x %struct.format_char_info]* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @gcc_cdiag_char_table to [10 x %struct.format_char_info]*), i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([5 x %struct.format_flag_spec], [5 x %struct.format_flag_spec]* @gcc_diag_flag_specs, i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([1 x %struct.format_flag_pair], [1 x %struct.format_flag_pair]* @gcc_diag_flag_pairs, i32 0, i32 0), i32 1, i32 0, i32 0, i32 112, i32 0, i32 76, i32 0, %union.tree_node** null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_kind_info { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([3 x %struct.format_length_info], [3 x %struct.format_length_info]* @gcc_diag_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([11 x %struct.format_char_info], [11 x %struct.format_char_info]* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @gcc_cxxdiag_char_table to [11 x %struct.format_char_info]*), i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([6 x %struct.format_flag_spec], [6 x %struct.format_flag_spec]* @gcc_cxxdiag_flag_specs, i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([1 x %struct.format_flag_pair], [1 x %struct.format_flag_pair]* @gcc_diag_flag_pairs, i32 0, i32 0), i32 1, i32 0, i32 0, i32 112, i32 0, i32 76, i32 0, %union.tree_node** null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_kind_info { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([2 x %struct.format_length_info], [2 x %struct.format_length_info]* @gcc_gfc_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([7 x %struct.format_char_info], [7 x %struct.format_char_info]* bitcast (<{ { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @gcc_gfc_char_table to [7 x %struct.format_char_info]*), i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* null, %struct.format_flag_spec* null, %struct.format_flag_pair* getelementptr inbounds ([1 x %struct.format_flag_pair], [1 x %struct.format_flag_pair]* @gcc_gfc_flag_pairs, i32 0, i32 0), i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, %union.tree_node** null, %union.tree_node** null }, %struct.format_kind_info { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([10 x %struct.format_length_info], [10 x %struct.format_length_info]* @scanf_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([14 x %struct.format_char_info], [14 x %struct.format_char_info]* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @scan_char_table to [14 x %struct.format_char_info]*), i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([8 x %struct.format_flag_spec], [8 x %struct.format_flag_spec]* @scanf_flag_specs, i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([3 x %struct.format_flag_pair], [3 x %struct.format_flag_pair]* @scanf_flag_pairs, i32 0, i32 0), i32 179, i32 119, i32 0, i32 0, i32 42, i32 76, i32 109, %union.tree_node** null, %union.tree_node** null }, %struct.format_kind_info { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i32 0, i32 0), %struct.format_length_info* null, %struct.format_char_info* getelementptr inbounds ([20 x %struct.format_char_info], [20 x %struct.format_char_info]* @time_char_table, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.90, i32 0, i32 0), %struct.format_flag_spec* getelementptr inbounds ([10 x %struct.format_flag_spec], [10 x %struct.format_flag_spec]* @strftime_flag_specs, i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([6 x %struct.format_flag_pair], [6 x %struct.format_flag_pair]* @strftime_flag_pairs, i32 0, i32 0), i32 4, i32 119, i32 0, i32 0, i32 0, i32 0, i32 0, %union.tree_node** null, %union.tree_node** null }, %struct.format_kind_info { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([2 x %struct.format_length_info], [2 x %struct.format_length_info]* @strfmon_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([2 x %struct.format_char_info], [2 x %struct.format_char_info]* @monetary_char_table, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([11 x %struct.format_flag_spec], [11 x %struct.format_flag_spec]* @strfmon_flag_specs, i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([2 x %struct.format_flag_pair], [2 x %struct.format_flag_pair]* @strfmon_flag_pairs, i32 0, i32 0), i32 1, i32 119, i32 35, i32 112, i32 0, i32 76, i32 0, %union.tree_node** null, %union.tree_node** null }], align 16, !dbg !1057
@.str.6 = private unnamed_addr constant [11 x i8] c"c-format.c\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"format string argument not a string type\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"unrecognized format specifier\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"%qE is an unrecognized format function type\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"%<...%> has invalid operand number\00", align 1
@.str.12 = private unnamed_addr constant [56 x i8] c"format string argument follows the args to be formatted\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"gcc_\00", align 1
@gnu_target_overrides_format_attributes = internal unnamed_addr constant [5 x %struct.target_ovr_attr] [%struct.target_ovr_attr { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0) }, %struct.target_ovr_attr { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, %struct.target_ovr_attr { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0) }, %struct.target_ovr_attr { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0) }, %struct.target_ovr_attr zeroinitializer], align 16, !dbg !1030
@.str.14 = private unnamed_addr constant [11 x i8] c"gnu_printf\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"gnu_scanf\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"scanf\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"gnu_strftime\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"gnu_strfmon\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"strfmon\00", align 1
@.str.22 = private unnamed_addr constant [55 x i8] c"format not a string literal, format string not checked\00", align 1
@.str.23 = private unnamed_addr constant [52 x i8] c"format not a string literal and no format arguments\00", align 1
@.str.24 = private unnamed_addr constant [56 x i8] c"format not a string literal, argument types not checked\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"too many arguments for format\00", align 1
@.str.26 = private unnamed_addr constant [35 x i8] c"unused arguments in $-style format\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"zero-length %s format string\00", align 1
@.str.28 = private unnamed_addr constant [34 x i8] c"format is a wide character string\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"unterminated format string\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"format_wanted_type pool\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"embedded %<\5C0%> in format\00", align 1
@.str.32 = private unnamed_addr constant [35 x i8] c"spurious trailing %<%%%> in format\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"repeated %s in format\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"missing fill character at end of strfmon format\00", align 1
@.str.35 = private unnamed_addr constant [29 x i8] c"too few arguments for format\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"field width\00", align 1
@_sch_istable = external dso_local local_unnamed_addr constant [256 x i16], align 16
@.str.37 = private unnamed_addr constant [24 x i8] c"zero width in %s format\00", align 1
@.str.38 = private unnamed_addr constant [34 x i8] c"empty left precision in %s format\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"field precision\00", align 1
@.str.40 = private unnamed_addr constant [29 x i8] c"empty precision in %s format\00", align 1
@flag_isoc99 = external dso_local local_unnamed_addr global i32, align 4
@pedantic = external dso_local local_unnamed_addr global i32, align 4
@warn_long_long = external dso_local local_unnamed_addr global i32, align 4
@c_language = external dso_local local_unnamed_addr global i32, align 4
@flag_isoc94 = external dso_local local_unnamed_addr global i32, align 4
@.str.41 = private unnamed_addr constant [47 x i8] c"%s does not support the %qs %s length modifier\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"ISO C++\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"ISO C\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"ISO C90\00", align 1
@.str.45 = private unnamed_addr constant [39 x i8] c"conversion lacks type at end of format\00", align 1
@.str.46 = private unnamed_addr constant [48 x i8] c"unknown conversion type character %qc in format\00", align 1
@.str.47 = private unnamed_addr constant [49 x i8] c"unknown conversion type character 0x%x in format\00", align 1
@.str.48 = private unnamed_addr constant [43 x i8] c"%s does not support the %<%%%c%> %s format\00", align 1
@.str.49 = private unnamed_addr constant [32 x i8] c"%s used with %<%%%c%> %s format\00", align 1
@.str.50 = private unnamed_addr constant [23 x i8] c"%s does not support %s\00", align 1
@.str.51 = private unnamed_addr constant [51 x i8] c"%s does not support %s with the %<%%%c%> %s format\00", align 1
@.str.52 = private unnamed_addr constant [42 x i8] c"%s ignored with %s and %<%%%c%> %s format\00", align 1
@.str.53 = private unnamed_addr constant [32 x i8] c"%s ignored with %s in %s format\00", align 1
@.str.54 = private unnamed_addr constant [50 x i8] c"use of %s and %s together with %<%%%c%> %s format\00", align 1
@.str.55 = private unnamed_addr constant [39 x i8] c"use of %s and %s together in %s format\00", align 1
@.str.56 = private unnamed_addr constant [59 x i8] c"%<%%%c%> yields only last 2 digits of year in some locales\00", align 1
@.str.57 = private unnamed_addr constant [43 x i8] c"%<%%%c%> yields only last 2 digits of year\00", align 1
@.str.58 = private unnamed_addr constant [36 x i8] c"no closing %<]%> for %<%%[%> format\00", align 1
@.str.59 = private unnamed_addr constant [51 x i8] c"use of %qs length modifier with %qc type character\00", align 1
@.str.60 = private unnamed_addr constant [45 x i8] c"%s does not support the %<%%%s%c%> %s format\00", align 1
@global_trees = external dso_local global [131 x %union.tree_node*], align 16
@.str.61 = private unnamed_addr constant [52 x i8] c"operand number specified with suppressed assignment\00", align 1
@.str.62 = private unnamed_addr constant [55 x i8] c"operand number specified for format taking no argument\00", align 1
@.str.63 = private unnamed_addr constant [35 x i8] c"missing $ operand number in format\00", align 1
@dollar_first_arg_num = internal unnamed_addr global i32 0, align 4, !dbg !1043
@dollar_arguments_count = internal unnamed_addr global i32 0, align 4, !dbg !1045
@dollar_max_arg_used = internal unnamed_addr global i32 0, align 4, !dbg !1047
@dollar_format_warned = internal unnamed_addr global i1 false, align 4, !dbg !1214
@dollar_arguments_alloc = internal unnamed_addr global i32 0, align 4, !dbg !1051
@dollar_arguments_used = internal unnamed_addr global i8* null, align 8, !dbg !1053
@dollar_arguments_pointer_p = internal unnamed_addr global i8* null, align 8, !dbg !1055
@.str.64 = private unnamed_addr constant [68 x i8] c"format argument %d unused before used argument %d in $-style format\00", align 1
@.str.65 = private unnamed_addr constant [48 x i8] c"%s does not support %%n$ operand number formats\00", align 1
@.str.66 = private unnamed_addr constant [38 x i8] c"operand number out of range in format\00", align 1
@.str.67 = private unnamed_addr constant [52 x i8] c"format argument %d used more than once in %s format\00", align 1
@.str.68 = private unnamed_addr constant [58 x i8] c"$ operand number used after format without operand number\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.69 = private unnamed_addr constant [43 x i8] c"writing through null pointer (argument %d)\00", align 1
@.str.70 = private unnamed_addr constant [43 x i8] c"reading through null pointer (argument %d)\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.71 = private unnamed_addr constant [43 x i8] c"writing into constant object (argument %d)\00", align 1
@.str.72 = private unnamed_addr constant [55 x i8] c"extra type qualifiers in format argument (argument %d)\00", align 1
@.str.73 = private unnamed_addr constant [59 x i8] c"%s should have type %<%s%s%>, but argument %d has type %qT\00", align 1
@.str.74 = private unnamed_addr constant [65 x i8] c"format %q.*s expects type %<%s%s%>, but argument %d has type %qT\00", align 1
@.str.75 = private unnamed_addr constant [59 x i8] c"%s should have type %<%T%s%>, but argument %d has type %qT\00", align 1
@.str.76 = private unnamed_addr constant [65 x i8] c"format %q.*s expects type %<%T%s%>, but argument %d has type %qT\00", align 1
@printf_length_specs = internal constant [11 x %struct.format_length_info] [%struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.92, i32 0, i32 0), i32 2, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i32 0, i32 0), i32 1, i32 3, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i32 0, i32 0), i32 3, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i32 0, i32 0), i32 4, i32 2, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i32 4, i32 4, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i32 0, i32 0), i32 5, i32 0, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.98, i32 0, i32 0), i32 6, i32 3, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.99, i32 0, i32 0), i32 6, i32 4, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.100, i32 0, i32 0), i32 7, i32 3, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i32 0, i32 0), i32 8, i32 3, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.102, i32 0, i32 0), i32 9, i32 4, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103, i32 0, i32 0), i32 10, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i32 0, i32 0), i32 11, i32 4, i32 0 }, %struct.format_length_info zeroinitializer], align 16, !dbg !1063
@.str.77 = private unnamed_addr constant [8 x i8] c" +#0-'I\00", align 1
@printf_flag_specs = internal constant [11 x %struct.format_flag_spec] [%struct.format_flag_spec { i32 32, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.144, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 43, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.146, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 35, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.148, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 48, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.150, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 45, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 39, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.154, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 73, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.156, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 119, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.157, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 112, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.159, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 76, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.161, i32 0, i32 0), i32 0 }, %struct.format_flag_spec zeroinitializer], align 16, !dbg !1073
@printf_flag_pairs = internal constant [4 x %struct.format_flag_pair] [%struct.format_flag_pair { i32 32, i32 43, i32 1, i32 0 }, %struct.format_flag_pair { i32 48, i32 45, i32 1, i32 0 }, %struct.format_flag_pair { i32 48, i32 112, i32 1, i32 105 }, %struct.format_flag_pair zeroinitializer], align 16, !dbg !1076
@.str.78 = private unnamed_addr constant [12 x i8] c"asm_fprintf\00", align 1
@asm_fprintf_length_specs = internal constant [3 x %struct.format_length_info] [%struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i32 0, i32 0), i32 3, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i32 0, i32 0), i32 4, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.162, i32 0, i32 0), i32 0, i32 0, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info zeroinitializer], align 16, !dbg !1081
@.str.79 = private unnamed_addr constant [6 x i8] c" +#0-\00", align 1
@asm_fprintf_flag_specs = internal constant [9 x %struct.format_flag_spec] [%struct.format_flag_spec { i32 32, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.144, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 43, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.146, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 35, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.148, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 48, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.150, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 45, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 119, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.157, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 112, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.159, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 76, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.161, i32 0, i32 0), i32 0 }, %struct.format_flag_spec zeroinitializer], align 16, !dbg !1091
@asm_fprintf_flag_pairs = internal constant [4 x %struct.format_flag_pair] [%struct.format_flag_pair { i32 32, i32 43, i32 1, i32 0 }, %struct.format_flag_pair { i32 48, i32 45, i32 1, i32 0 }, %struct.format_flag_pair { i32 48, i32 112, i32 1, i32 105 }, %struct.format_flag_pair zeroinitializer], align 16, !dbg !1096
@.str.80 = private unnamed_addr constant [9 x i8] c"gcc_diag\00", align 1
@gcc_diag_length_specs = internal constant [3 x %struct.format_length_info] [%struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i32 0, i32 0), i32 3, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i32 0, i32 0), i32 4, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.162, i32 0, i32 0), i32 0, i32 0, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info zeroinitializer], align 16, !dbg !1098
@.str.81 = private unnamed_addr constant [3 x i8] c"q+\00", align 1
@gcc_diag_flag_specs = internal constant [5 x %struct.format_flag_spec] [%struct.format_flag_spec { i32 43, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.146, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 113, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.177, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 112, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.159, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 76, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.161, i32 0, i32 0), i32 0 }, %struct.format_flag_spec zeroinitializer], align 16, !dbg !1103
@gcc_diag_flag_pairs = internal constant [1 x %struct.format_flag_pair] zeroinitializer, align 16, !dbg !1106
@.str.82 = private unnamed_addr constant [10 x i8] c"gcc_tdiag\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c"gcc_cdiag\00", align 1
@.str.84 = private unnamed_addr constant [12 x i8] c"gcc_cxxdiag\00", align 1
@.str.85 = private unnamed_addr constant [4 x i8] c"q+#\00", align 1
@gcc_cxxdiag_flag_specs = internal constant [6 x %struct.format_flag_spec] [%struct.format_flag_spec { i32 43, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.146, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 35, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.148, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 113, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.177, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 112, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.159, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 76, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.161, i32 0, i32 0), i32 0 }, %struct.format_flag_spec zeroinitializer], align 16, !dbg !1116
@.str.86 = private unnamed_addr constant [8 x i8] c"gcc_gfc\00", align 1
@gcc_gfc_length_specs = internal constant [2 x %struct.format_length_info] [%struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i32 0, i32 0), i32 3, i32 0, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info zeroinitializer], align 16, !dbg !1121
@.str.87 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@gcc_gfc_flag_pairs = internal constant [1 x %struct.format_flag_pair] zeroinitializer, align 16, !dbg !1131
@scanf_length_specs = internal constant [10 x %struct.format_length_info] [%struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.92, i32 0, i32 0), i32 2, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i32 0, i32 0), i32 1, i32 3, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i32 0, i32 0), i32 3, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i32 0, i32 0), i32 4, i32 2, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i32 4, i32 4, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i32 0, i32 0), i32 5, i32 0, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.98, i32 0, i32 0), i32 6, i32 3, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.100, i32 0, i32 0), i32 7, i32 3, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i32 0, i32 0), i32 8, i32 3, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.102, i32 0, i32 0), i32 9, i32 4, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103, i32 0, i32 0), i32 10, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i32 0, i32 0), i32 11, i32 4, i32 0 }, %struct.format_length_info zeroinitializer], align 16, !dbg !1133
@.str.88 = private unnamed_addr constant [4 x i8] c"*'I\00", align 1
@scanf_flag_specs = internal constant [8 x %struct.format_flag_spec] [%struct.format_flag_spec { i32 42, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.197, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 97, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.199, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 109, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.201, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 119, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.202, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 76, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.203, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 39, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.204, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 73, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.205, i32 0, i32 0), i32 4 }, %struct.format_flag_spec zeroinitializer], align 16, !dbg !1141
@scanf_flag_pairs = internal constant [3 x %struct.format_flag_pair] [%struct.format_flag_pair { i32 42, i32 76, i32 0, i32 0 }, %struct.format_flag_pair { i32 97, i32 109, i32 0, i32 0 }, %struct.format_flag_pair zeroinitializer], align 16, !dbg !1146
@time_char_table = internal constant [20 x %struct.format_char_info] [%struct.format_char_info { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.206, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.208, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.210, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.211, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.215, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.216, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.221, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.138, i32 0, i32 0), i32 0, i32 3, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103, i32 0, i32 0), i32 0, i32 3, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.222, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.223, i32 0, i32 0), i32 0, i32 3, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.224, i32 0, i32 0), i32 0, i32 3, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i32 0, i32 0), i32 0, i32 3, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.227, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.228, i32 0, i32 0), i32 0, i32 3, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.92, i32 0, i32 0), i32 0, i32 3, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.98, i32 0, i32 0), i32 0, i32 3, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.229, i32 0, i32 0), i32 0, i32 4, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.230, i32 0, i32 0), i32 0, i32 4, [12 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info zeroinitializer], align 16, !dbg !1149
@.str.89 = private unnamed_addr constant [6 x i8] c"_-0^#\00", align 1
@.str.90 = private unnamed_addr constant [3 x i8] c"EO\00", align 1
@strftime_flag_specs = internal constant [10 x %struct.format_flag_spec] [%struct.format_flag_spec { i32 95, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.232, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 45, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.233, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 48, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.234, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 94, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.236, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 35, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.237, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 119, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.238, i32 0, i32 0), i32 4 }, %struct.format_flag_spec { i32 69, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.240, i32 0, i32 0), i32 3 }, %struct.format_flag_spec { i32 79, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.241, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.242, i32 0, i32 0), i32 3 }, %struct.format_flag_spec { i32 79, i32 111, i32 0, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.243, i32 0, i32 0), i32 4 }, %struct.format_flag_spec zeroinitializer], align 16, !dbg !1154
@strftime_flag_pairs = internal constant [6 x %struct.format_flag_pair] [%struct.format_flag_pair { i32 69, i32 79, i32 0, i32 0 }, %struct.format_flag_pair { i32 95, i32 45, i32 0, i32 0 }, %struct.format_flag_pair { i32 95, i32 48, i32 0, i32 0 }, %struct.format_flag_pair { i32 45, i32 48, i32 0, i32 0 }, %struct.format_flag_pair { i32 94, i32 35, i32 0, i32 0 }, %struct.format_flag_pair zeroinitializer], align 16, !dbg !1157
@strfmon_length_specs = internal constant [2 x %struct.format_length_info] [%struct.format_length_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i32 0, i32 0), i32 5, i32 0, i8* null, i32 0, i32 0, i32 0 }, %struct.format_length_info zeroinitializer], align 16, !dbg !1160
@monetary_char_table = internal constant [2 x %struct.format_char_info] [%struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.244, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 264) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info zeroinitializer], align 16, !dbg !1162
@.str.91 = private unnamed_addr constant [7 x i8] c"=^+(!-\00", align 1
@strfmon_flag_specs = internal constant [11 x %struct.format_flag_spec] [%struct.format_flag_spec { i32 61, i32 0, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.247, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 94, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.248, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 43, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.249, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 40, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.251, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 33, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.252, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.253, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 45, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.254, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 119, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.255, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 35, i32 0, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.256, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.257, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 112, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.259, i32 0, i32 0), i32 0 }, %struct.format_flag_spec { i32 76, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.260, i32 0, i32 0), i32 0 }, %struct.format_flag_spec zeroinitializer], align 16, !dbg !1165
@strfmon_flag_pairs = internal constant [2 x %struct.format_flag_pair] [%struct.format_flag_pair { i32 43, i32 40, i32 0, i32 0 }, %struct.format_flag_pair zeroinitializer], align 16, !dbg !1167
@.str.92 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.93 = private unnamed_addr constant [3 x i8] c"hh\00", align 1
@.str.94 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.95 = private unnamed_addr constant [3 x i8] c"ll\00", align 1
@.str.96 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.97 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.98 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@.str.99 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@.str.100 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.101 = private unnamed_addr constant [2 x i8] c"j\00", align 1
@.str.102 = private unnamed_addr constant [2 x i8] c"H\00", align 1
@.str.103 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.104 = private unnamed_addr constant [3 x i8] c"DD\00", align 1
@.str.105 = private unnamed_addr constant [3 x i8] c"di\00", align 1
@.str.106 = private unnamed_addr constant [14 x i8] c"signed size_t\00", align 1
@c_global_trees = external dso_local global [55 x %union.tree_node*], align 16
@.str.107 = private unnamed_addr constant [10 x i8] c"ptrdiff_t\00", align 1
@.str.108 = private unnamed_addr constant [9 x i8] c"intmax_t\00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"-wp0 +'I\00", align 1
@.str.110 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"oxX\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"size_t\00", align 1
@.str.113 = private unnamed_addr constant [19 x i8] c"unsigned ptrdiff_t\00", align 1
@.str.114 = private unnamed_addr constant [10 x i8] c"uintmax_t\00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"-wp0#\00", align 1
@.str.116 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"-wp0'I\00", align 1
@.str.118 = private unnamed_addr constant [4 x i8] c"fgG\00", align 1
@.str.119 = private unnamed_addr constant [11 x i8] c"_Decimal32\00", align 1
@.str.120 = private unnamed_addr constant [11 x i8] c"_Decimal64\00", align 1
@.str.121 = private unnamed_addr constant [12 x i8] c"_Decimal128\00", align 1
@.str.122 = private unnamed_addr constant [10 x i8] c"-wp0 +#'I\00", align 1
@.str.123 = private unnamed_addr constant [3 x i8] c"eE\00", align 1
@.str.124 = private unnamed_addr constant [9 x i8] c"-wp0 +#I\00", align 1
@.str.125 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.126 = private unnamed_addr constant [7 x i8] c"wint_t\00", align 1
@.str.127 = private unnamed_addr constant [3 x i8] c"-w\00", align 1
@.str.128 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.129 = private unnamed_addr constant [8 x i8] c"wchar_t\00", align 1
@.str.130 = private unnamed_addr constant [4 x i8] c"-wp\00", align 1
@.str.131 = private unnamed_addr constant [3 x i8] c"cR\00", align 1
@.str.132 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.133 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.134 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str.135 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.136 = private unnamed_addr constant [3 x i8] c"aA\00", align 1
@.str.137 = private unnamed_addr constant [8 x i8] c"-wp0 +#\00", align 1
@.str.138 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.139 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.140 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.141 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@print_char_table = internal constant <{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }> <{ %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 8) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 24) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 344) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.108, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.110, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 16) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 328) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.113, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.114, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.110, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 16) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 328) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.113, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.114, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.110, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 264) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.119, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 392) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 400) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.121, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 408) to %union.tree_node**) }], i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.123, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 264) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.119, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 392) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 400) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.121, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 408) to %union.tree_node**) }], i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 32) to %union.tree_node**) }, [8 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 16) to %union.tree_node**) }, [8 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.133, i32 0, i32 0), i32 1, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 8) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 24) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 344) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.108, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.135, i32 0, i32 0), i32 0, i32 3, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 264) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.119, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 392) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 400) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.121, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 408) to %union.tree_node**) }], i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.136, i32 0, i32 0), i32 0, i32 3, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 264) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.138, i32 0, i32 0), i32 0, i32 4, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 32) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.139, i32 0, i32 0), i32 1, i32 4, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 16) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.140, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.141, i32 0, i32 0), i32 0, i32 4, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info zeroinitializer }>, align 16, !dbg !1068
@.str.143 = private unnamed_addr constant [9 x i8] c"' ' flag\00", align 1
@.str.144 = private unnamed_addr constant [20 x i8] c"the ' ' printf flag\00", align 1
@.str.145 = private unnamed_addr constant [9 x i8] c"'+' flag\00", align 1
@.str.146 = private unnamed_addr constant [20 x i8] c"the '+' printf flag\00", align 1
@.str.147 = private unnamed_addr constant [9 x i8] c"'#' flag\00", align 1
@.str.148 = private unnamed_addr constant [20 x i8] c"the '#' printf flag\00", align 1
@.str.149 = private unnamed_addr constant [9 x i8] c"'0' flag\00", align 1
@.str.150 = private unnamed_addr constant [20 x i8] c"the '0' printf flag\00", align 1
@.str.151 = private unnamed_addr constant [9 x i8] c"'-' flag\00", align 1
@.str.152 = private unnamed_addr constant [20 x i8] c"the '-' printf flag\00", align 1
@.str.153 = private unnamed_addr constant [9 x i8] c"''' flag\00", align 1
@.str.154 = private unnamed_addr constant [20 x i8] c"the ''' printf flag\00", align 1
@.str.155 = private unnamed_addr constant [9 x i8] c"'I' flag\00", align 1
@.str.156 = private unnamed_addr constant [20 x i8] c"the 'I' printf flag\00", align 1
@.str.157 = private unnamed_addr constant [29 x i8] c"field width in printf format\00", align 1
@.str.158 = private unnamed_addr constant [10 x i8] c"precision\00", align 1
@.str.159 = private unnamed_addr constant [27 x i8] c"precision in printf format\00", align 1
@.str.160 = private unnamed_addr constant [16 x i8] c"length modifier\00", align 1
@.str.161 = private unnamed_addr constant [33 x i8] c"length modifier in printf format\00", align 1
@.str.162 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.163 = private unnamed_addr constant [7 x i8] c"-wp0 +\00", align 1
@.str.164 = private unnamed_addr constant [5 x i8] c"-wp0\00", align 1
@.str.165 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.166 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@.str.167 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.168 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.169 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@asm_fprintf_char_table = internal constant <{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }> <{ %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.110, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.110, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.110, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.165, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.140, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.167, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.168, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info zeroinitializer }>, align 16, !dbg !1086
@.str.171 = private unnamed_addr constant [3 x i8] c"ox\00", align 1
@.str.172 = private unnamed_addr constant [3 x i8] c"pq\00", align 1
@.str.173 = private unnamed_addr constant [2 x i8] c"K\00", align 1
@.str.174 = private unnamed_addr constant [4 x i8] c"<>'\00", align 1
@gcc_diag_char_table = internal constant <{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }> <{ %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.171, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.173, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.174, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.141, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info zeroinitializer }>, align 16, !dbg !1100
@.str.176 = private unnamed_addr constant [9 x i8] c"'q' flag\00", align 1
@.str.177 = private unnamed_addr constant [24 x i8] c"the 'q' diagnostic flag\00", align 1
@.str.178 = private unnamed_addr constant [6 x i8] c"DFKTE\00", align 1
@gcc_tdiag_char_table = internal constant <{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }> <{ %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.171, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.178, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.174, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.141, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info zeroinitializer }>, align 16, !dbg !1109
@.str.180 = private unnamed_addr constant [6 x i8] c"DEFKT\00", align 1
@gcc_cdiag_char_table = internal constant <{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }> <{ %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.171, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.180, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.174, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.141, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info zeroinitializer }>, align 16, !dbg !1111
@.str.182 = private unnamed_addr constant [8 x i8] c"ADEFKTV\00", align 1
@.str.183 = private unnamed_addr constant [6 x i8] c"CLOPQ\00", align 1
@gcc_cxxdiag_char_table = internal constant <{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }> <{ %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.171, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i32 0, i32 0), i32 0, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.182, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.183, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.174, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.141, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info zeroinitializer }>, align 16, !dbg !1113
@gcc_gfc_char_table = internal constant <{ { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }> <{ { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, [8 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, [8 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.138, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i32 0, i32 0), i32 0, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.140, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info zeroinitializer }>, align 16, !dbg !1126
@.str.186 = private unnamed_addr constant [5 x i8] c"*w'I\00", align 1
@.str.187 = private unnamed_addr constant [3 x i8] c"*w\00", align 1
@.str.188 = private unnamed_addr constant [6 x i8] c"efgEG\00", align 1
@.str.189 = private unnamed_addr constant [4 x i8] c"*w'\00", align 1
@.str.190 = private unnamed_addr constant [4 x i8] c"*mw\00", align 1
@.str.191 = private unnamed_addr constant [3 x i8] c"cW\00", align 1
@.str.192 = private unnamed_addr constant [5 x i8] c"*amw\00", align 1
@.str.193 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.194 = private unnamed_addr constant [4 x i8] c"cW[\00", align 1
@scan_char_table = internal constant <{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }> <{ %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i32 1, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 8) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 24) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 344) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.108, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i32 0, i32 0), i32 1, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 16) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 328) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.113, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.114, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i32 1, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 16) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 328) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.113, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.114, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.188, i32 0, i32 0), i32 1, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 248) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 264) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.119, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 392) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 400) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.121, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 408) to %union.tree_node**) }], i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 16) to %union.tree_node**) }, [8 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 16) to %union.tree_node**) }, [8 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.193, i32 0, i32 0), i32 1, i32 0, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 16) to %union.tree_node**) }, [8 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.194, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0), i32 2, i32 0, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 304) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.133, i32 0, i32 0), i32 1, i32 0, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 8) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 24) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 344) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.108, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.135, i32 0, i32 0), i32 1, i32 3, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 248) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 264) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.119, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 392) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 400) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.121, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 408) to %union.tree_node**) }], i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.136, i32 0, i32 0), i32 1, i32 3, [12 x %struct.format_type_detail] [%struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 248) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 256) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([131 x %union.tree_node*]* @global_trees to i8*), i64 264) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.138, i32 0, i32 0), i32 1, i32 4, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 16) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.139, i32 0, i32 0), i32 1, i32 4, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }> <{ %struct.format_type_detail { i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 16) to %union.tree_node**) }, [11 x %struct.format_type_detail] zeroinitializer }>, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i32 0, i32 0), %struct.format_char_info* null }, %struct.format_char_info zeroinitializer }>, align 16, !dbg !1136
@.str.196 = private unnamed_addr constant [23 x i8] c"assignment suppression\00", align 1
@.str.197 = private unnamed_addr constant [41 x i8] c"the assignment suppression scanf feature\00", align 1
@.str.198 = private unnamed_addr constant [9 x i8] c"'a' flag\00", align 1
@.str.199 = private unnamed_addr constant [19 x i8] c"the 'a' scanf flag\00", align 1
@.str.200 = private unnamed_addr constant [9 x i8] c"'m' flag\00", align 1
@.str.201 = private unnamed_addr constant [19 x i8] c"the 'm' scanf flag\00", align 1
@.str.202 = private unnamed_addr constant [28 x i8] c"field width in scanf format\00", align 1
@.str.203 = private unnamed_addr constant [32 x i8] c"length modifier in scanf format\00", align 1
@.str.204 = private unnamed_addr constant [19 x i8] c"the ''' scanf flag\00", align 1
@.str.205 = private unnamed_addr constant [19 x i8] c"the 'I' scanf flag\00", align 1
@.str.206 = private unnamed_addr constant [6 x i8] c"ABZab\00", align 1
@.str.207 = private unnamed_addr constant [3 x i8] c"^#\00", align 1
@.str.208 = private unnamed_addr constant [3 x i8] c"cx\00", align 1
@.str.209 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str.210 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"HIMSUWdmw\00", align 1
@.str.212 = private unnamed_addr constant [6 x i8] c"-_0Ow\00", align 1
@.str.213 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.214 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.215 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.216 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.217 = private unnamed_addr constant [7 x i8] c"EO-_0w\00", align 1
@.str.218 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.219 = private unnamed_addr constant [2 x i8] c"Y\00", align 1
@.str.220 = private unnamed_addr constant [7 x i8] c"-_0EOw\00", align 1
@.str.221 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.222 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.223 = private unnamed_addr constant [4 x i8] c"eVu\00", align 1
@.str.224 = private unnamed_addr constant [7 x i8] c"FRTnrt\00", align 1
@.str.225 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str.226 = private unnamed_addr constant [6 x i8] c"O-_0w\00", align 1
@.str.227 = private unnamed_addr constant [3 x i8] c"2o\00", align 1
@.str.228 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@.str.229 = private unnamed_addr constant [4 x i8] c"kls\00", align 1
@.str.230 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.231 = private unnamed_addr constant [9 x i8] c"'_' flag\00", align 1
@.str.232 = private unnamed_addr constant [22 x i8] c"the '_' strftime flag\00", align 1
@.str.233 = private unnamed_addr constant [22 x i8] c"the '-' strftime flag\00", align 1
@.str.234 = private unnamed_addr constant [22 x i8] c"the '0' strftime flag\00", align 1
@.str.235 = private unnamed_addr constant [9 x i8] c"'^' flag\00", align 1
@.str.236 = private unnamed_addr constant [22 x i8] c"the '^' strftime flag\00", align 1
@.str.237 = private unnamed_addr constant [22 x i8] c"the '#' strftime flag\00", align 1
@.str.238 = private unnamed_addr constant [31 x i8] c"field width in strftime format\00", align 1
@.str.239 = private unnamed_addr constant [13 x i8] c"'E' modifier\00", align 1
@.str.240 = private unnamed_addr constant [26 x i8] c"the 'E' strftime modifier\00", align 1
@.str.241 = private unnamed_addr constant [13 x i8] c"'O' modifier\00", align 1
@.str.242 = private unnamed_addr constant [26 x i8] c"the 'O' strftime modifier\00", align 1
@.str.243 = private unnamed_addr constant [17 x i8] c"the 'O' modifier\00", align 1
@.str.244 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.245 = private unnamed_addr constant [10 x i8] c"=^+(!-w#p\00", align 1
@.str.246 = private unnamed_addr constant [15 x i8] c"fill character\00", align 1
@.str.247 = private unnamed_addr constant [33 x i8] c"fill character in strfmon format\00", align 1
@.str.248 = private unnamed_addr constant [21 x i8] c"the '^' strfmon flag\00", align 1
@.str.249 = private unnamed_addr constant [21 x i8] c"the '+' strfmon flag\00", align 1
@.str.250 = private unnamed_addr constant [9 x i8] c"'(' flag\00", align 1
@.str.251 = private unnamed_addr constant [21 x i8] c"the '(' strfmon flag\00", align 1
@.str.252 = private unnamed_addr constant [9 x i8] c"'!' flag\00", align 1
@.str.253 = private unnamed_addr constant [21 x i8] c"the '!' strfmon flag\00", align 1
@.str.254 = private unnamed_addr constant [21 x i8] c"the '-' strfmon flag\00", align 1
@.str.255 = private unnamed_addr constant [30 x i8] c"field width in strfmon format\00", align 1
@.str.256 = private unnamed_addr constant [15 x i8] c"left precision\00", align 1
@.str.257 = private unnamed_addr constant [33 x i8] c"left precision in strfmon format\00", align 1
@.str.258 = private unnamed_addr constant [16 x i8] c"right precision\00", align 1
@.str.259 = private unnamed_addr constant [34 x i8] c"right precision in strfmon format\00", align 1
@.str.260 = private unnamed_addr constant [34 x i8] c"length modifier in strfmon format\00", align 1
@init_dynamic_asm_fprintf_info.hwi = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !1170
@.str.261 = private unnamed_addr constant [22 x i8] c"__gcc_host_wide_int__\00", align 1
@.str.262 = private unnamed_addr constant [51 x i8] c"%<__gcc_host_wide_int__%> is not defined as a type\00", align 1
@.str.263 = private unnamed_addr constant [70 x i8] c"%<__gcc_host_wide_int__%> is not defined as %<long%> or %<long long%>\00", align 1
@init_dynamic_gfc_info.locus = internal global %union.tree_node* null, align 8, !dbg !1180
@init_dynamic_gfc_info.gfc_fci = internal unnamed_addr global %struct.format_char_info* null, align 8, !dbg !1190
@.str.264 = private unnamed_addr constant [6 x i8] c"locus\00", align 1
@.str.265 = private unnamed_addr constant [35 x i8] c"%<locus%> is not defined as a type\00", align 1
@init_dynamic_diag_info.t = internal global %union.tree_node* null, align 8, !dbg !1192
@init_dynamic_diag_info.loc = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !1199
@init_dynamic_diag_info.hwi = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !1201
@init_dynamic_diag_info.diag_fci = internal unnamed_addr global %struct.format_char_info* null, align 8, !dbg !1203
@init_dynamic_diag_info.tdiag_fci = internal unnamed_addr global %struct.format_char_info* null, align 8, !dbg !1205
@init_dynamic_diag_info.cdiag_fci = internal unnamed_addr global %struct.format_char_info* null, align 8, !dbg !1207
@init_dynamic_diag_info.cxxdiag_fci = internal unnamed_addr global %struct.format_char_info* null, align 8, !dbg !1209
@init_dynamic_diag_info.diag_ls = internal unnamed_addr global %struct.format_length_info* null, align 8, !dbg !1211
@.str.266 = private unnamed_addr constant [11 x i8] c"location_t\00", align 1
@.str.267 = private unnamed_addr constant [40 x i8] c"%<location_t%> is not defined as a type\00", align 1
@.str.268 = private unnamed_addr constant [5 x i8] c"tree\00", align 1
@.str.269 = private unnamed_addr constant [34 x i8] c"%<tree%> is not defined as a type\00", align 1
@.str.270 = private unnamed_addr constant [42 x i8] c"%<tree%> is not defined as a pointer type\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !1219 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !1232, metadata !DIExpression()), !dbg !1234
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !1233, metadata !DIExpression()), !dbg !1234
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1235
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !1236
  ret i32 %call, !dbg !1237
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !1238 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1242
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !1243
  ret i32 %call, !dbg !1244
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1245 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !1299, metadata !DIExpression()), !dbg !1300
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !1301
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1301
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !1301
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !1301
  %cmp = icmp uge i8* %0, %1, !dbg !1301
  %conv1 = zext i1 %cmp to i64, !dbg !1301
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1301
  %tobool = icmp eq i64 %expval, 0, !dbg !1301
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1301

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !1301
  br label %cond.end, !dbg !1301

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1301
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1301
  %2 = load i8, i8* %0, align 1, !dbg !1301
  %conv3 = zext i8 %2 to i32, !dbg !1301
  br label %cond.end, !dbg !1301

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1301
  ret i32 %cond, !dbg !1302
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1303 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !1305, metadata !DIExpression()), !dbg !1306
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !1307
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1307
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !1307
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !1307
  %cmp = icmp uge i8* %0, %1, !dbg !1307
  %conv1 = zext i1 %cmp to i64, !dbg !1307
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1307
  %tobool = icmp eq i64 %expval, 0, !dbg !1307
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1307

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !1307
  br label %cond.end, !dbg !1307

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1307
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1307
  %2 = load i8, i8* %0, align 1, !dbg !1307
  %conv3 = zext i8 %2 to i32, !dbg !1307
  br label %cond.end, !dbg !1307

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1307
  ret i32 %cond, !dbg !1308
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !1309 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1310
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !1310
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1310
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !1310
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !1310
  %cmp = icmp uge i8* %1, %2, !dbg !1310
  %conv1 = zext i1 %cmp to i64, !dbg !1310
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1310
  %tobool = icmp eq i64 %expval, 0, !dbg !1310
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1310

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !1310
  br label %cond.end, !dbg !1310

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1310
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1310
  %3 = load i8, i8* %1, align 1, !dbg !1310
  %conv3 = zext i8 %3 to i32, !dbg !1310
  br label %cond.end, !dbg !1310

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1310
  ret i32 %cond, !dbg !1311
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !1312 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1316, metadata !DIExpression()), !dbg !1317
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1318
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !1319
  ret i32 %call, !dbg !1320
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1321 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1325, metadata !DIExpression()), !dbg !1327
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1326, metadata !DIExpression()), !dbg !1327
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !1328
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1328
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !1328
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !1328
  %cmp = icmp uge i8* %0, %1, !dbg !1328
  %conv1 = zext i1 %cmp to i64, !dbg !1328
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1328
  %tobool = icmp eq i64 %expval, 0, !dbg !1328
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1328

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1328
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !1328
  br label %cond.end, !dbg !1328

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !1328
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1328
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1328
  store i8 %conv2, i8* %0, align 1, !dbg !1328
  %conv6 = and i32 %__c, 255, !dbg !1328
  br label %cond.end, !dbg !1328

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1328
  ret i32 %cond, !dbg !1329
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1330 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1332, metadata !DIExpression()), !dbg !1334
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1333, metadata !DIExpression()), !dbg !1334
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !1335
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1335
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !1335
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !1335
  %cmp = icmp uge i8* %0, %1, !dbg !1335
  %conv1 = zext i1 %cmp to i64, !dbg !1335
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1335
  %tobool = icmp eq i64 %expval, 0, !dbg !1335
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1335

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1335
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !1335
  br label %cond.end, !dbg !1335

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !1335
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1335
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1335
  store i8 %conv2, i8* %0, align 1, !dbg !1335
  %conv6 = and i32 %__c, 255, !dbg !1335
  br label %cond.end, !dbg !1335

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1335
  ret i32 %cond, !dbg !1336
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !1337 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1339, metadata !DIExpression()), !dbg !1340
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1341
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !1341
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1341
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !1341
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !1341
  %cmp = icmp uge i8* %1, %2, !dbg !1341
  %conv1 = zext i1 %cmp to i64, !dbg !1341
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1341
  %tobool = icmp eq i64 %expval, 0, !dbg !1341
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1341

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1341
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !1341
  br label %cond.end, !dbg !1341

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !1341
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1341
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1341
  store i8 %conv4, i8* %1, align 1, !dbg !1341
  %conv6 = and i32 %__c, 255, !dbg !1341
  br label %cond.end, !dbg !1341

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1341
  ret i32 %cond, !dbg !1342
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1343 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !1349, metadata !DIExpression()), !dbg !1352
  call void @llvm.dbg.value(metadata i64* %__n, metadata !1350, metadata !DIExpression()), !dbg !1352
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1351, metadata !DIExpression()), !dbg !1352
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !1353
  ret i64 %call, !dbg !1354
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1355 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1357, metadata !DIExpression()), !dbg !1358
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !1359
  %0 = load i32, i32* %_flags, align 8, !dbg !1359
  %and = lshr i32 %0, 4, !dbg !1359
  %and.lobit = and i32 %and, 1, !dbg !1359
  ret i32 %and.lobit, !dbg !1360
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1361 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1363, metadata !DIExpression()), !dbg !1364
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !1365
  %0 = load i32, i32* %_flags, align 8, !dbg !1365
  %and = lshr i32 %0, 5, !dbg !1365
  %and.lobit = and i32 %and, 1, !dbg !1365
  ret i32 %and.lobit, !dbg !1366
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !1367 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1370, metadata !DIExpression()), !dbg !1371
  %__c.off = add i32 %__c, 128, !dbg !1372
  %0 = icmp ult i32 %__c.off, 384, !dbg !1372
  br i1 %0, label %cond.true, label %cond.end, !dbg !1372

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !1373
  %1 = load i32*, i32** %call, align 8, !dbg !1374
  %idxprom = sext i32 %__c to i64, !dbg !1375
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !1375
  %2 = load i32, i32* %arrayidx, align 4, !dbg !1375
  br label %cond.end, !dbg !1376

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !1376
  ret i32 %cond, !dbg !1377
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !1378 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1380, metadata !DIExpression()), !dbg !1381
  %__c.off = add i32 %__c, 128, !dbg !1382
  %0 = icmp ult i32 %__c.off, 384, !dbg !1382
  br i1 %0, label %cond.true, label %cond.end, !dbg !1382

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !1383
  %1 = load i32*, i32** %call, align 8, !dbg !1384
  %idxprom = sext i32 %__c to i64, !dbg !1385
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !1385
  %2 = load i32, i32* %arrayidx, align 4, !dbg !1385
  br label %cond.end, !dbg !1386

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !1386
  ret i32 %cond, !dbg !1387
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !1388 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1393, metadata !DIExpression()), !dbg !1394
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !1395
  %conv = trunc i64 %call to i32, !dbg !1396
  ret i32 %conv, !dbg !1397
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !1398 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1402, metadata !DIExpression()), !dbg !1403
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !1404
  ret i64 %call, !dbg !1405
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !1406 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1411, metadata !DIExpression()), !dbg !1412
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !1413
  ret i64 %call, !dbg !1414
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !1415 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !1426, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata i8* %__base, metadata !1427, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !1428, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata i64 %__size, metadata !1429, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !1430, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata i64 0, metadata !1431, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !1432, metadata !DIExpression()), !dbg !1436
  br label %while.cond, !dbg !1437

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !1438
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !1436
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !1432, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !1431, metadata !DIExpression()), !dbg !1436
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !1439
  br i1 %cmp, label %while.body, label %cleanup, !dbg !1437

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !1440
  %div = lshr i64 %add, 1, !dbg !1442
  call void @llvm.dbg.value(metadata i64 %div, metadata !1433, metadata !DIExpression()), !dbg !1436
  %mul = mul i64 %div, %__size, !dbg !1443
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !1444
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !1434, metadata !DIExpression()), !dbg !1436
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !1445
  call void @llvm.dbg.value(metadata i32 %call, metadata !1435, metadata !DIExpression()), !dbg !1436
  %cmp1 = icmp slt i32 %call, 0, !dbg !1446
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !1448

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !1449
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !1451

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !1452
  call void @llvm.dbg.value(metadata i64 %add4, metadata !1431, metadata !DIExpression()), !dbg !1436
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !1436
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !1436
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !1432, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !1431, metadata !DIExpression()), !dbg !1436
  br label %while.cond, !dbg !1437, !llvm.loop !1453

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !1436
  ret i8* %retval.0, !dbg !1455
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !1456 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1462, metadata !DIExpression()), !dbg !1463
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !1464
  ret double %call, !dbg !1465
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !1466 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !1475, metadata !DIExpression()), !dbg !1478
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !1476, metadata !DIExpression()), !dbg !1478
  call void @llvm.dbg.value(metadata i32 %base, metadata !1477, metadata !DIExpression()), !dbg !1478
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !1479
  ret i64 %call, !dbg !1480
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !1481 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !1487, metadata !DIExpression()), !dbg !1490
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !1488, metadata !DIExpression()), !dbg !1490
  call void @llvm.dbg.value(metadata i32 %base, metadata !1489, metadata !DIExpression()), !dbg !1490
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !1491
  ret i64 %call, !dbg !1492
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !1493 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !1504, metadata !DIExpression()), !dbg !1507
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !1505, metadata !DIExpression()), !dbg !1507
  call void @llvm.dbg.value(metadata i32 %base, metadata !1506, metadata !DIExpression()), !dbg !1507
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !1508
  ret i64 %call, !dbg !1509
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !1510 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !1514, metadata !DIExpression()), !dbg !1517
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !1515, metadata !DIExpression()), !dbg !1517
  call void @llvm.dbg.value(metadata i32 %base, metadata !1516, metadata !DIExpression()), !dbg !1517
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !1518
  ret i64 %call, !dbg !1519
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !1520 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !1560, metadata !DIExpression()), !dbg !1562
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !1561, metadata !DIExpression()), !dbg !1562
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !1563
  ret i32 %call, !dbg !1564
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !1565 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !1567, metadata !DIExpression()), !dbg !1569
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !1568, metadata !DIExpression()), !dbg !1569
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !1570
  ret i32 %call, !dbg !1571
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !1572 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !1576, metadata !DIExpression()), !dbg !1578
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !1577, metadata !DIExpression()), !dbg !1578
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !1579
  ret i32 %call, !dbg !1580
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !1581 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !1585, metadata !DIExpression()), !dbg !1589
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !1586, metadata !DIExpression()), !dbg !1589
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !1587, metadata !DIExpression()), !dbg !1589
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !1588, metadata !DIExpression()), !dbg !1589
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !1590
  ret i32 %call, !dbg !1591
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !1592 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !1596, metadata !DIExpression()), !dbg !1599
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !1597, metadata !DIExpression()), !dbg !1599
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !1598, metadata !DIExpression()), !dbg !1599
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !1598, metadata !DIExpression(DW_OP_deref)), !dbg !1599
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !1600
  ret i32 %call, !dbg !1601
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !1602 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !1606, metadata !DIExpression()), !dbg !1610
  call void @llvm.dbg.value(metadata i8* %__path, metadata !1607, metadata !DIExpression()), !dbg !1610
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !1608, metadata !DIExpression()), !dbg !1610
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !1609, metadata !DIExpression()), !dbg !1610
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !1609, metadata !DIExpression(DW_OP_deref)), !dbg !1610
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !1611
  ret i32 %call, !dbg !1612
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !1613 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !1637, metadata !DIExpression()), !dbg !1639
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !1638, metadata !DIExpression()), !dbg !1639
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !1640
  ret i32 %call, !dbg !1641
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !1642 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !1644, metadata !DIExpression()), !dbg !1646
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !1645, metadata !DIExpression()), !dbg !1646
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !1647
  ret i32 %call, !dbg !1648
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !1649 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !1653, metadata !DIExpression()), !dbg !1655
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !1654, metadata !DIExpression()), !dbg !1655
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !1656
  ret i32 %call, !dbg !1657
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !1658 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !1662, metadata !DIExpression()), !dbg !1666
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !1663, metadata !DIExpression()), !dbg !1666
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !1664, metadata !DIExpression()), !dbg !1666
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !1665, metadata !DIExpression()), !dbg !1666
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !1667
  ret i32 %call, !dbg !1668
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @set_Wformat(i32 %setting) local_unnamed_addr #5 !dbg !1669 {
entry:
  call void @llvm.dbg.value(metadata i32 %setting, metadata !1673, metadata !DIExpression()), !dbg !1674
  store i32 %setting, i32* @warn_format, align 4, !dbg !1675
  store i32 %setting, i32* @warn_format_extra_args, align 4, !dbg !1676
  store i32 %setting, i32* @warn_format_zero_length, align 4, !dbg !1677
  store i32 %setting, i32* @warn_format_contains_nul, align 4, !dbg !1678
  %cond = icmp eq i32 %setting, 1, !dbg !1679
  br i1 %cond, label %if.then1, label %if.then, !dbg !1679

if.then:                                          ; preds = %entry
  store i32 %setting, i32* @warn_format_nonliteral, align 4, !dbg !1680
  store i32 %setting, i32* @warn_format_security, align 4, !dbg !1683
  store i32 %setting, i32* @warn_format_y2k, align 4, !dbg !1684
  %tobool = icmp eq i32 %setting, 0, !dbg !1685
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !1687

if.then1:                                         ; preds = %if.then, %entry
  store i32 %setting, i32* @warn_nonnull, align 4, !dbg !1688
  br label %if.end2, !dbg !1689

if.end2:                                          ; preds = %if.then, %if.then1
  ret void, !dbg !1690
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @handle_format_arg_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) local_unnamed_addr #5 !dbg !1691 {
entry:
  %format_num = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !1695, metadata !DIExpression()), !dbg !1704
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !1696, metadata !DIExpression()), !dbg !1704
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !1697, metadata !DIExpression()), !dbg !1704
  call void @llvm.dbg.value(metadata i32 %flags, metadata !1698, metadata !DIExpression()), !dbg !1704
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !1699, metadata !DIExpression()), !dbg !1704
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !1705
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !1700, metadata !DIExpression()), !dbg !1704
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !1706
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !1706
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !1701, metadata !DIExpression()), !dbg !1704
  %3 = bitcast i64* %format_num to i8*, !dbg !1707
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !1707
  call void @llvm.dbg.value(metadata i64 0, metadata !1702, metadata !DIExpression()), !dbg !1704
  store i64 0, i64* %format_num, align 8, !dbg !1708
  call void @llvm.dbg.value(metadata i64* %format_num, metadata !1702, metadata !DIExpression(DW_OP_deref)), !dbg !1704
  %call = call fastcc zeroext i8 @get_constant(%union.tree_node* %2, i64* nonnull %format_num, i32 0) #8, !dbg !1709
  %tobool = icmp eq i8 %call, 0, !dbg !1709
  br i1 %tobool, label %if.then, label %if.end, !dbg !1711

if.then:                                          ; preds = %entry
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0)) #6, !dbg !1712
  store i8 1, i8* %no_add_attrs, align 1, !dbg !1714
  br label %cleanup, !dbg !1715

if.end:                                           ; preds = %entry
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !1716
  %4 = bitcast i32* %values to %union.tree_node**, !dbg !1716
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !1716
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !1703, metadata !DIExpression()), !dbg !1704
  %tobool2 = icmp eq %union.tree_node* %5, null, !dbg !1717
  br i1 %tobool2, label %if.end8, label %if.then3, !dbg !1719

if.then3:                                         ; preds = %if.end
  %6 = load i64, i64* %format_num, align 8, !dbg !1720
  call void @llvm.dbg.value(metadata i64 %6, metadata !1702, metadata !DIExpression()), !dbg !1704
  %call4 = call fastcc zeroext i8 @check_format_string(%union.tree_node* nonnull %5, i64 %6, i32 %flags, i8* %no_add_attrs) #8, !dbg !1723
  %tobool5 = icmp eq i8 %call4, 0, !dbg !1723
  br i1 %tobool5, label %cleanup, label %if.end8, !dbg !1724

if.end8:                                          ; preds = %if.then3, %if.end
  %type9 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !1725
  %7 = bitcast %union.tree_node** %type9 to i64**, !dbg !1725
  %8 = load i64*, i64** %7, align 8, !dbg !1725
  %bf.load = load i64, i64* %8, align 8, !dbg !1725
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !1727
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !1727
  br i1 %cmp, label %lor.lhs.false, label %if.then16, !dbg !1728

lor.lhs.false:                                    ; preds = %if.end8
  %type13 = getelementptr inbounds i64, i64* %8, i64 2, !dbg !1729
  %9 = bitcast i64* %type13 to %struct.tree_type**, !dbg !1729
  %10 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !1729
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %10, i64 0, i32 16, !dbg !1729
  %11 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !1729
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !1730
  %cmp15 = icmp eq %union.tree_node* %11, %12, !dbg !1731
  br i1 %cmp15, label %cleanup, label %if.then16, !dbg !1732

if.then16:                                        ; preds = %lor.lhs.false, %if.end8
  %and = and i32 %flags, 16, !dbg !1733
  %tobool17 = icmp eq i32 %and, 0, !dbg !1733
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !1736

if.then18:                                        ; preds = %if.then16
  call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !1737
  br label %if.end19, !dbg !1737

if.end19:                                         ; preds = %if.then16, %if.then18
  store i8 1, i8* %no_add_attrs, align 1, !dbg !1738
  br label %cleanup, !dbg !1739

cleanup:                                          ; preds = %if.then3, %lor.lhs.false, %if.end19, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !1740
  ret %union.tree_node* null, !dbg !1740
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @get_constant(%union.tree_node* %expr, i64* %value, i32 %validated_p) unnamed_addr #5 !dbg !1741 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !1746, metadata !DIExpression()), !dbg !1749
  call void @llvm.dbg.value(metadata i64* %value, metadata !1747, metadata !DIExpression()), !dbg !1749
  call void @llvm.dbg.value(metadata i32 %validated_p, metadata !1748, metadata !DIExpression()), !dbg !1749
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !1750
  %bf.load = load i64, i64* %0, align 8, !dbg !1750
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !1752
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !1752
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !1753

lor.lhs.false:                                    ; preds = %entry
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !1754
  %high = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !1754
  %1 = bitcast i32* %high to i64*, !dbg !1754
  %2 = load i64, i64* %1, align 8, !dbg !1754
  %cmp2 = icmp eq i64 %2, 0, !dbg !1755
  br i1 %cmp2, label %if.end, label %if.then, !dbg !1756

if.then:                                          ; preds = %lor.lhs.false, %entry
  %tobool = icmp eq i32 %validated_p, 0, !dbg !1757
  br i1 %tobool, label %return, label %cond.true, !dbg !1757

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 160, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !1757
  br label %return, !dbg !1757

if.end:                                           ; preds = %lor.lhs.false
  %low = bitcast i32* %int_cst1 to i64*, !dbg !1759
  %3 = load i64, i64* %low, align 8, !dbg !1759
  store i64 %3, i64* %value, align 8, !dbg !1760
  br label %return, !dbg !1761

return:                                           ; preds = %if.then, %cond.true, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %if.then ], [ 0, %cond.true ], !dbg !1749
  ret i8 %retval.0, !dbg !1762
}

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @check_format_string(%union.tree_node* %argument, i64 %format_num, i32 %flags, i8* %no_add_attrs) unnamed_addr #5 !dbg !1763 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %argument, metadata !1767, metadata !DIExpression()), !dbg !1772
  call void @llvm.dbg.value(metadata i64 %format_num, metadata !1768, metadata !DIExpression()), !dbg !1772
  call void @llvm.dbg.value(metadata i32 %flags, metadata !1769, metadata !DIExpression()), !dbg !1772
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !1770, metadata !DIExpression()), !dbg !1772
  call void @llvm.dbg.value(metadata i64 1, metadata !1771, metadata !DIExpression()), !dbg !1772
  br label %for.cond, !dbg !1773

for.cond:                                         ; preds = %if.end, %entry
  %i.0 = phi i64 [ 1, %entry ], [ %inc, %if.end ], !dbg !1775
  %argument.addr.0 = phi %union.tree_node* [ %argument, %entry ], [ %0, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %argument.addr.0, metadata !1767, metadata !DIExpression()), !dbg !1772
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !1771, metadata !DIExpression()), !dbg !1772
  %cmp = icmp eq i64 %i.0, %format_num, !dbg !1776
  br i1 %cmp, label %for.end, label %for.body, !dbg !1778

for.body:                                         ; preds = %for.cond
  %cond = icmp eq %union.tree_node* %argument.addr.0, null, !dbg !1779
  br i1 %cond, label %if.then9.loopexit, label %if.end, !dbg !1779

if.end:                                           ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %argument.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !1781
  %0 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !1781
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !1767, metadata !DIExpression()), !dbg !1772
  %inc = add i64 %i.0, 1, !dbg !1782
  call void @llvm.dbg.value(metadata i64 %inc, metadata !1771, metadata !DIExpression()), !dbg !1772
  br label %for.cond, !dbg !1783, !llvm.loop !1784

for.end:                                          ; preds = %for.cond
  %argument.addr.0.lcssa = phi %union.tree_node* [ %argument.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %argument.addr.0.lcssa, metadata !1767, metadata !DIExpression()), !dbg !1772
  call void @llvm.dbg.value(metadata %union.tree_node* %argument.addr.0.lcssa, metadata !1767, metadata !DIExpression()), !dbg !1772
  call void @llvm.dbg.value(metadata %union.tree_node* %argument.addr.0.lcssa, metadata !1767, metadata !DIExpression()), !dbg !1772
  %tobool = icmp eq %union.tree_node* %argument.addr.0.lcssa, null, !dbg !1786
  br i1 %tobool, label %if.then9, label %lor.lhs.false, !dbg !1788

lor.lhs.false:                                    ; preds = %for.end
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %argument.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !1789
  %2 = bitcast %union.tree_node** %1 to i64**, !dbg !1789
  %3 = load i64*, i64** %2, align 8, !dbg !1789
  %bf.load = load i64, i64* %3, align 8, !dbg !1789
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !1790
  %cmp2 = icmp eq i64 %bf.cast1, 10, !dbg !1790
  br i1 %cmp2, label %lor.lhs.false3, label %if.then9, !dbg !1791

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %type = getelementptr inbounds i64, i64* %3, i64 2, !dbg !1792
  %4 = bitcast i64* %type to %struct.tree_type**, !dbg !1792
  %5 = load %struct.tree_type*, %struct.tree_type** %4, align 8, !dbg !1792
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 16, !dbg !1792
  %6 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !1792
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !1793
  %cmp8 = icmp eq %union.tree_node* %6, %7, !dbg !1794
  br i1 %cmp8, label %cleanup, label %if.then9, !dbg !1795

if.then9.loopexit:                                ; preds = %for.body
  br label %if.then9, !dbg !1796

if.then9:                                         ; preds = %if.then9.loopexit, %lor.lhs.false3, %lor.lhs.false, %for.end
  %and = and i32 %flags, 16, !dbg !1796
  %tobool10 = icmp eq i32 %and, 0, !dbg !1796
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !1799

if.then11:                                        ; preds = %if.then9
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !1800
  br label %if.end12, !dbg !1800

if.end12:                                         ; preds = %if.then9, %if.then11
  store i8 1, i8* %no_add_attrs, align 1, !dbg !1801
  br label %cleanup, !dbg !1802

cleanup:                                          ; preds = %lor.lhs.false3, %if.end12
  %retval.0 = phi i8 [ 0, %if.end12 ], [ 1, %lor.lhs.false3 ], !dbg !1772
  ret i8 %retval.0, !dbg !1803
}

; Function Attrs: nounwind uwtable
define dso_local void @check_function_format(%union.tree_node* %attrs, i32 %nargs, %union.tree_node** %argarray) local_unnamed_addr #5 !dbg !1804 {
entry:
  %info = alloca %struct.function_format_info, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !1808, metadata !DIExpression()), !dbg !1828
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !1809, metadata !DIExpression()), !dbg !1828
  call void @llvm.dbg.value(metadata %union.tree_node** %argarray, metadata !1810, metadata !DIExpression()), !dbg !1828
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !1811, metadata !DIExpression()), !dbg !1828
  %0 = bitcast %struct.function_format_info* %info to i8*, !dbg !1829
  %first_arg_num = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 2, !dbg !1830
  %format_type = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 0, !dbg !1830
  %1 = sext i32 %nargs to i64, !dbg !1831
  br label %for.cond, !dbg !1831

for.cond:                                         ; preds = %for.inc68, %entry
  %a.0 = phi %union.tree_node* [ %attrs, %entry ], [ %35, %for.inc68 ], !dbg !1832
  call void @llvm.dbg.value(metadata %union.tree_node* %a.0, metadata !1811, metadata !DIExpression()), !dbg !1828
  %tobool = icmp eq %union.tree_node* %a.0, null, !dbg !1833
  br i1 %tobool, label %for.end71, label %for.body, !dbg !1833

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %a.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !1834
  %2 = bitcast i32* %purpose to %union.tree_node**, !dbg !1834
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !1834
  %call = call i32 @is_attribute_p(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), %union.tree_node* %3) #6, !dbg !1835
  %tobool1 = icmp eq i32 %call, 0, !dbg !1835
  br i1 %tobool1, label %for.inc68, label %if.then, !dbg !1836

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !1837
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %a.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !1838
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !1838
  call void @llvm.dbg.value(metadata %struct.function_format_info* %info, metadata !1812, metadata !DIExpression(DW_OP_deref)), !dbg !1829
  %call3 = call fastcc zeroext i8 @decode_format_attr(%union.tree_node* %5, %struct.function_format_info* nonnull %info, i32 1) #8, !dbg !1839
  %6 = load i32, i32* @warn_format, align 4, !dbg !1840
  %tobool4 = icmp eq i32 %6, 0, !dbg !1840
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !1841

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !1818, metadata !DIExpression()), !dbg !1842
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !1821, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !1842
  br label %for.cond6, !dbg !1843

for.cond6:                                        ; preds = %for.body7, %if.then5
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body7 ], [ %1, %if.then5 ], !dbg !1842
  %params.0 = phi %union.tree_node* [ %call8, %for.body7 ], [ null, %if.then5 ], !dbg !1842
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !1845
  call void @llvm.dbg.value(metadata i32 undef, metadata !1821, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !1842
  call void @llvm.dbg.value(metadata %union.tree_node* %params.0, metadata !1818, metadata !DIExpression()), !dbg !1842
  %cmp = icmp sgt i64 %indvars.iv, 0, !dbg !1846
  br i1 %cmp, label %for.body7, label %for.end, !dbg !1848

for.body7:                                        ; preds = %for.cond6
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %argarray, i64 %indvars.iv.next, !dbg !1849
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !1849
  %call8 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %7, %union.tree_node* %params.0) #6, !dbg !1849
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !1818, metadata !DIExpression()), !dbg !1842
  call void @llvm.dbg.value(metadata i32 undef, metadata !1821, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !1842
  br label %for.cond6, !dbg !1850, !llvm.loop !1851

for.end:                                          ; preds = %for.cond6
  %params.0.lcssa = phi %union.tree_node* [ %params.0, %for.cond6 ], !dbg !1842
  call void @llvm.dbg.value(metadata %union.tree_node* %params.0.lcssa, metadata !1818, metadata !DIExpression()), !dbg !1842
  call void @llvm.dbg.value(metadata %union.tree_node* %params.0.lcssa, metadata !1818, metadata !DIExpression()), !dbg !1842
  call void @llvm.dbg.value(metadata %union.tree_node* %params.0.lcssa, metadata !1818, metadata !DIExpression()), !dbg !1842
  call void @llvm.dbg.value(metadata %struct.function_format_info* %info, metadata !1812, metadata !DIExpression(DW_OP_deref)), !dbg !1829
  call fastcc void @check_format_info(%struct.function_format_info* nonnull %info, %union.tree_node* %params.0.lcssa) #8, !dbg !1853
  br label %if.end, !dbg !1854

if.end:                                           ; preds = %if.then, %for.end
  %8 = load i32, i32* @warn_missing_format_attribute, align 4, !dbg !1855
  %tobool9 = icmp eq i32 %8, 0, !dbg !1855
  br i1 %tobool9, label %if.end66, label %land.lhs.true, !dbg !1856

land.lhs.true:                                    ; preds = %if.end
  %9 = load i64, i64* %first_arg_num, align 8, !dbg !1857
  %cmp10 = icmp eq i64 %9, 0, !dbg !1858
  br i1 %cmp10, label %land.lhs.true11, label %if.end66, !dbg !1859

land.lhs.true11:                                  ; preds = %land.lhs.true
  %10 = load %struct.format_kind_info*, %struct.format_kind_info** @format_types, align 8, !dbg !1860
  %11 = load i32, i32* %format_type, align 8, !dbg !1861
  %idxprom12 = sext i32 %11 to i64, !dbg !1860
  %flags = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %10, i64 %idxprom12, i32 7, !dbg !1862
  %12 = load i32, i32* %flags, align 8, !dbg !1862
  %and = and i32 %12, 1, !dbg !1863
  %tobool14 = icmp eq i32 %and, 0, !dbg !1863
  br i1 %tobool14, label %if.end66, label %if.then15, !dbg !1864

if.then15:                                        ; preds = %land.lhs.true11
  %13 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !1865
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !1865
  %14 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !1865
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !1865
  %attributes = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 4, !dbg !1865
  br label %for.cond17, !dbg !1867

for.cond17:                                       ; preds = %for.inc34, %if.then15
  %c.0.in = phi %union.tree_node** [ %attributes, %if.then15 ], [ %chain, %for.inc34 ]
  %c.0 = load %union.tree_node*, %union.tree_node** %c.0.in, align 8, !dbg !1868
  call void @llvm.dbg.value(metadata %union.tree_node* %c.0, metadata !1822, metadata !DIExpression()), !dbg !1869
  %cond = icmp eq %union.tree_node* %c.0, null, !dbg !1870
  br i1 %cond, label %if.then38.loopexit, label %for.body19, !dbg !1870

for.body19:                                       ; preds = %for.cond17
  %purpose21 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !1871
  %16 = bitcast i32* %purpose21 to %union.tree_node**, !dbg !1871
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !1871
  %call22 = call i32 @is_attribute_p(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), %union.tree_node* %17) #6, !dbg !1874
  %tobool23 = icmp eq i32 %call22, 0, !dbg !1874
  br i1 %tobool23, label %for.inc34, label %land.lhs.true24, !dbg !1875

land.lhs.true24:                                  ; preds = %for.body19
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !1876
  %19 = bitcast %union.tree_node** %18 to %struct.tree_list**, !dbg !1876
  %20 = load %struct.tree_list*, %struct.tree_list** %19, align 8, !dbg !1876
  %value28 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %20, i64 0, i32 2, !dbg !1876
  %21 = bitcast %union.tree_node** %value28 to %struct.tree_identifier**, !dbg !1876
  %22 = load %struct.tree_identifier*, %struct.tree_identifier** %21, align 8, !dbg !1876
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %22, i64 0, i32 1, i32 0, !dbg !1876
  %23 = load i8*, i8** %str, align 8, !dbg !1876
  %call29 = call fastcc i32 @decode_format_type(i8* %23) #8, !dbg !1877
  %24 = load i32, i32* %format_type, align 8, !dbg !1878
  %cmp31 = icmp eq i32 %call29, %24, !dbg !1879
  br i1 %cmp31, label %for.end36, label %for.inc34, !dbg !1880

for.inc34:                                        ; preds = %for.body19, %land.lhs.true24
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !1881
  br label %for.cond17, !dbg !1882, !llvm.loop !1883

for.end36:                                        ; preds = %land.lhs.true24
  br label %if.end66, !dbg !1885

if.then38.loopexit:                               ; preds = %for.cond17
  %25 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !1886
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %25, i64 0, i32 2, !dbg !1886
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !1888
  br label %for.cond39, !dbg !1892

for.cond39:                                       ; preds = %for.inc54, %if.then38.loopexit
  %args.0.in = phi %union.tree_node** [ %arguments, %if.then38.loopexit ], [ %chain56, %for.inc54 ]
  %args.0 = load %union.tree_node*, %union.tree_node** %args.0.in, align 8, !dbg !1893
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0, metadata !1825, metadata !DIExpression()), !dbg !1894
  %cond2 = icmp eq %union.tree_node* %args.0, null, !dbg !1895
  br i1 %cond2, label %if.end66.loopexit, label %for.body41, !dbg !1895

for.body41:                                       ; preds = %for.cond39
  %type43 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !1896
  %27 = bitcast %union.tree_node** %type43 to i64**, !dbg !1896
  %28 = load i64*, i64** %27, align 8, !dbg !1896
  %bf.load = load i64, i64* %28, align 8, !dbg !1896
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !1897
  %cmp44 = icmp eq i64 %bf.cast3, 10, !dbg !1897
  br i1 %cmp44, label %land.lhs.true45, label %for.inc54, !dbg !1898

land.lhs.true45:                                  ; preds = %for.body41
  %type49 = getelementptr inbounds i64, i64* %28, i64 2, !dbg !1899
  %29 = bitcast i64* %type49 to %struct.tree_type**, !dbg !1899
  %30 = load %struct.tree_type*, %struct.tree_type** %29, align 8, !dbg !1899
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %30, i64 0, i32 16, !dbg !1899
  %31 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !1899
  %cmp51 = icmp eq %union.tree_node* %31, %26, !dbg !1900
  br i1 %cmp51, label %for.end57, label %for.inc54, !dbg !1901

for.inc54:                                        ; preds = %for.body41, %land.lhs.true45
  %chain56 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !1902
  br label %for.cond39, !dbg !1903, !llvm.loop !1904

for.end57:                                        ; preds = %land.lhs.true45
  %32 = load %struct.format_kind_info*, %struct.format_kind_info** @format_types, align 8, !dbg !1906
  %33 = load i32, i32* %format_type, align 8, !dbg !1908
  %idxprom61 = sext i32 %33 to i64, !dbg !1906
  %name = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %32, i64 %idxprom61, i32 0, !dbg !1909
  %34 = load i8*, i8** %name, align 8, !dbg !1909
  %call63 = call zeroext i8 (i32, i8*, ...) @warning(i32 131, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i8* %34) #6, !dbg !1910
  br label %if.end66, !dbg !1910

if.end66.loopexit:                                ; preds = %for.cond39
  br label %if.end66, !dbg !1911

if.end66:                                         ; preds = %for.end36, %if.end66.loopexit, %land.lhs.true11, %if.end, %for.end57, %land.lhs.true
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !1911
  br label %for.inc68, !dbg !1912

for.inc68:                                        ; preds = %for.body, %if.end66
  %chain70 = getelementptr inbounds %union.tree_node, %union.tree_node* %a.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !1913
  %35 = load %union.tree_node*, %union.tree_node** %chain70, align 8, !dbg !1913
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !1811, metadata !DIExpression()), !dbg !1828
  br label %for.cond, !dbg !1914, !llvm.loop !1915

for.end71:                                        ; preds = %for.cond
  ret void, !dbg !1917
}

declare dso_local i32 @is_attribute_p(i8*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @decode_format_attr(%union.tree_node* %args, %struct.function_format_info* %info, i32 %validated_p) unnamed_addr #5 !dbg !1918 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !1922, metadata !DIExpression()), !dbg !1931
  call void @llvm.dbg.value(metadata %struct.function_format_info* %info, metadata !1923, metadata !DIExpression()), !dbg !1931
  call void @llvm.dbg.value(metadata i32 %validated_p, metadata !1924, metadata !DIExpression()), !dbg !1931
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !1932
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !1932
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !1925, metadata !DIExpression()), !dbg !1931
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !1933
  %2 = bitcast %union.tree_node** %chain to %struct.tree_list**, !dbg !1933
  %3 = load %struct.tree_list*, %struct.tree_list** %2, align 8, !dbg !1933
  %value2 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %3, i64 0, i32 2, !dbg !1933
  %4 = load %union.tree_node*, %union.tree_node** %value2, align 8, !dbg !1933
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !1926, metadata !DIExpression()), !dbg !1931
  %chain6 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %3, i64 0, i32 0, i32 1, !dbg !1934
  %5 = bitcast %union.tree_node** %chain6 to %struct.tree_list**, !dbg !1934
  %6 = load %struct.tree_list*, %struct.tree_list** %5, align 8, !dbg !1934
  %value8 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %6, i64 0, i32 2, !dbg !1934
  %7 = load %union.tree_node*, %union.tree_node** %value8, align 8, !dbg !1934
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !1927, metadata !DIExpression()), !dbg !1931
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !1935
  %bf.load = load i64, i64* %8, align 8, !dbg !1935
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !1936
  %cmp = icmp eq i64 %bf.cast2, 1, !dbg !1936
  br i1 %cmp, label %if.else, label %if.then, !dbg !1937

if.then:                                          ; preds = %entry
  %tobool = icmp eq i32 %validated_p, 0, !dbg !1938
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !1938

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 186, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !1938
  br label %cond.end, !dbg !1938

cond.end:                                         ; preds = %if.then, %cond.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !1940
  br label %cleanup40, !dbg !1941

if.else:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !1942
  %str = bitcast i32* %id to i8**, !dbg !1942
  %9 = load i8*, i8** %str, align 8, !dbg !1942
  call void @llvm.dbg.value(metadata i8* %9, metadata !1928, metadata !DIExpression()), !dbg !1943
  %call = tail call fastcc i8* @convert_format_name_to_system_name(i8* %9) #8, !dbg !1944
  call void @llvm.dbg.value(metadata i8* %call, metadata !1928, metadata !DIExpression()), !dbg !1943
  %call9 = tail call fastcc i32 @decode_format_type(i8* %call) #8, !dbg !1945
  %format_type = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 0, !dbg !1946
  store i32 %call9, i32* %format_type, align 8, !dbg !1947
  %cmp11 = icmp eq i32 %call9, -1, !dbg !1948
  br i1 %cmp11, label %if.then12, label %cleanup, !dbg !1950

if.then12:                                        ; preds = %if.else
  %tobool13 = icmp eq i32 %validated_p, 0, !dbg !1951
  br i1 %tobool13, label %cond.end16, label %cond.true14, !dbg !1951

cond.true14:                                      ; preds = %if.then12
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 200, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !1951
  br label %cond.end16, !dbg !1951

cond.end16:                                       ; preds = %if.then12, %cond.true14
  %call18 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), %union.tree_node* %1) #6, !dbg !1953
  br label %cleanup, !dbg !1954

cleanup:                                          ; preds = %if.else, %cond.end16
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end16 ], [ true, %if.else ]
  br i1 %cleanup.dest.slot.0, label %if.end19, label %cleanup40

if.end19:                                         ; preds = %cleanup
  %format_num = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 1, !dbg !1955
  %call20 = tail call fastcc zeroext i8 @get_constant(%union.tree_node* %4, i64* nonnull %format_num, i32 %validated_p) #8, !dbg !1957
  %tobool21 = icmp eq i8 %call20, 0, !dbg !1957
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !1958

if.then22:                                        ; preds = %if.end19
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0)) #6, !dbg !1959
  br label %cleanup40, !dbg !1961

if.end23:                                         ; preds = %if.end19
  %first_arg_num = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 2, !dbg !1962
  %call24 = tail call fastcc zeroext i8 @get_constant(%union.tree_node* %7, i64* nonnull %first_arg_num, i32 %validated_p) #8, !dbg !1964
  %tobool25 = icmp eq i8 %call24, 0, !dbg !1964
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !1965

if.then26:                                        ; preds = %if.end23
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !1966
  br label %cleanup40, !dbg !1968

if.end27:                                         ; preds = %if.end23
  %10 = load i64, i64* %first_arg_num, align 8, !dbg !1969
  %cmp29 = icmp eq i64 %10, 0, !dbg !1971
  br i1 %cmp29, label %cleanup40, label %land.lhs.true, !dbg !1972

land.lhs.true:                                    ; preds = %if.end27
  %11 = load i64, i64* %format_num, align 8, !dbg !1973
  %cmp32 = icmp ugt i64 %10, %11, !dbg !1974
  br i1 %cmp32, label %cleanup40, label %if.then33, !dbg !1975

if.then33:                                        ; preds = %land.lhs.true
  %tobool34 = icmp eq i32 %validated_p, 0, !dbg !1976
  br i1 %tobool34, label %cond.end37, label %cond.true35, !dbg !1976

cond.true35:                                      ; preds = %if.then33
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 221, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !1976
  br label %cond.end37, !dbg !1976

cond.end37:                                       ; preds = %if.then33, %cond.true35
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !1978
  br label %cleanup40, !dbg !1979

cleanup40:                                        ; preds = %land.lhs.true, %if.end27, %cleanup, %cond.end37, %if.then26, %if.then22, %cond.end
  %retval.1 = phi i8 [ 0, %cond.end ], [ 0, %cleanup ], [ 0, %cond.end37 ], [ 0, %if.then26 ], [ 0, %if.then22 ], [ 1, %land.lhs.true ], [ 1, %if.end27 ], !dbg !1931
  ret i8 %retval.1, !dbg !1980
}

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @check_format_info(%struct.function_format_info* %info, %union.tree_node* %params) unnamed_addr #5 !dbg !1981 {
entry:
  %format_ctx = alloca %struct.format_check_context, align 8
  %res = alloca %struct.format_check_results, align 4
  call void @llvm.dbg.value(metadata %struct.function_format_info* %info, metadata !1985, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.value(metadata %union.tree_node* %params, metadata !1986, metadata !DIExpression()), !dbg !1991
  %0 = bitcast %struct.format_check_context* %format_ctx to i8*, !dbg !1992
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !1992
  %1 = bitcast %struct.format_check_results* %res to i8*, !dbg !1993
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %1) #7, !dbg !1993
  call void @llvm.dbg.value(metadata i64 1, metadata !1988, metadata !DIExpression()), !dbg !1991
  %format_num = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 1, !dbg !1994
  br label %for.cond, !dbg !1999

for.cond:                                         ; preds = %if.end3, %entry
  %arg_num.0 = phi i64 [ 1, %entry ], [ %inc, %if.end3 ], !dbg !2000
  %params.addr.0 = phi %union.tree_node* [ %params, %entry ], [ %3, %if.end3 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %params.addr.0, metadata !1986, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.value(metadata i64 %arg_num.0, metadata !1988, metadata !DIExpression()), !dbg !1991
  %cmp = icmp eq %union.tree_node* %params.addr.0, null, !dbg !2001
  br i1 %cmp, label %cleanup.loopexit, label %if.end, !dbg !2003

if.end:                                           ; preds = %for.cond
  %2 = load i64, i64* %format_num, align 8, !dbg !2004
  %cmp1 = icmp eq i64 %arg_num.0, %2, !dbg !2005
  br i1 %cmp1, label %for.end, label %if.end3, !dbg !2006

if.end3:                                          ; preds = %if.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %params.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2007
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !2007
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !1986, metadata !DIExpression()), !dbg !1991
  %inc = add i64 %arg_num.0, 1, !dbg !2008
  call void @llvm.dbg.value(metadata i64 %inc, metadata !1988, metadata !DIExpression()), !dbg !1991
  br label %for.cond, !dbg !2009, !llvm.loop !2010

for.end:                                          ; preds = %if.end
  %arg_num.0.lcssa15 = phi i64 [ %arg_num.0, %if.end ], !dbg !2000
  %params.addr.0.lcssa14 = phi %union.tree_node* [ %params.addr.0, %if.end ]
  call void @llvm.dbg.value(metadata i64 %arg_num.0.lcssa15, metadata !1988, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.value(metadata %union.tree_node* %params.addr.0.lcssa14, metadata !1986, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.value(metadata i64 %arg_num.0.lcssa15, metadata !1988, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.value(metadata %union.tree_node* %params.addr.0.lcssa14, metadata !1986, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.value(metadata i64 %arg_num.0.lcssa15, metadata !1988, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.value(metadata %union.tree_node* %params.addr.0.lcssa14, metadata !1986, metadata !DIExpression()), !dbg !1991
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %params.addr.0.lcssa14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2013
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !2013
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !1989, metadata !DIExpression()), !dbg !1991
  %chain5 = getelementptr inbounds %union.tree_node, %union.tree_node* %params.addr.0.lcssa14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2014
  %6 = load %union.tree_node*, %union.tree_node** %chain5, align 8, !dbg !2014
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !1986, metadata !DIExpression()), !dbg !1991
  %cmp6 = icmp eq %union.tree_node* %5, null, !dbg !2015
  br i1 %cmp6, label %cleanup, label %if.end8, !dbg !2017

if.end8:                                          ; preds = %for.end
  %number_non_literal = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 0, !dbg !2018
  store i32 0, i32* %number_non_literal, align 4, !dbg !2019
  %number_extra_args = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 1, !dbg !2020
  store i32 0, i32* %number_extra_args, align 4, !dbg !2021
  %number_dollar_extra_args = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 2, !dbg !2022
  store i32 0, i32* %number_dollar_extra_args, align 4, !dbg !2023
  %number_wide = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 3, !dbg !2024
  store i32 0, i32* %number_wide, align 4, !dbg !2025
  %number_empty = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 4, !dbg !2026
  store i32 0, i32* %number_empty, align 4, !dbg !2027
  %number_unterminated = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 5, !dbg !2028
  store i32 0, i32* %number_unterminated, align 4, !dbg !2029
  %number_other = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 6, !dbg !2030
  store i32 0, i32* %number_other, align 4, !dbg !2031
  %res9 = getelementptr inbounds %struct.format_check_context, %struct.format_check_context* %format_ctx, i64 0, i32 0, !dbg !2032
  store %struct.format_check_results* %res, %struct.format_check_results** %res9, align 8, !dbg !2033
  %info10 = getelementptr inbounds %struct.format_check_context, %struct.format_check_context* %format_ctx, i64 0, i32 1, !dbg !2034
  store %struct.function_format_info* %info, %struct.function_format_info** %info10, align 8, !dbg !2035
  %params11 = getelementptr inbounds %struct.format_check_context, %struct.format_check_context* %format_ctx, i64 0, i32 2, !dbg !2036
  store %union.tree_node* %6, %union.tree_node** %params11, align 8, !dbg !2037
  call void @check_function_arguments_recurse(void (i8*, %union.tree_node*, i64)* nonnull @check_format_arg, i8* nonnull %0, %union.tree_node* nonnull %5, i64 %arg_num.0.lcssa15) #6, !dbg !2038
  %7 = load i32, i32* %number_non_literal, align 4, !dbg !2039
  %cmp13 = icmp sgt i32 %7, 0, !dbg !2041
  br i1 %cmp13, label %if.then14, label %if.end42, !dbg !2042

if.then14:                                        ; preds = %if.end8
  %8 = load %struct.format_kind_info*, %struct.format_kind_info** @format_types, align 8, !dbg !2043
  %format_type = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 0, !dbg !2046
  %9 = load i32, i32* %format_type, align 8, !dbg !2046
  %idxprom = sext i32 %9 to i64, !dbg !2043
  %flags = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %8, i64 %idxprom, i32 7, !dbg !2047
  %10 = load i32, i32* %flags, align 8, !dbg !2047
  %and = and i32 %10, 1, !dbg !2048
  %tobool = icmp eq i32 %and, 0, !dbg !2048
  br i1 %tobool, label %if.then15, label %if.else, !dbg !2049

if.then15:                                        ; preds = %if.then14
  %call = call zeroext i8 (i32, i8*, ...) @warning(i32 94, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !2050
  br label %if.end42, !dbg !2052

if.else:                                          ; preds = %if.then14
  %first_arg_num = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 2, !dbg !2053
  %11 = load i64, i64* %first_arg_num, align 8, !dbg !2053
  %cmp16 = icmp eq i64 %11, 0, !dbg !2055
  br i1 %cmp16, label %if.end42, label %while.cond.preheader, !dbg !2056

while.cond.preheader:                             ; preds = %if.else
  br label %while.cond, !dbg !2057

while.cond:                                       ; preds = %while.cond.preheader, %if.end22
  %arg_num.1 = phi i64 [ %add, %if.end22 ], [ %arg_num.0.lcssa15, %while.cond.preheader ], !dbg !1991
  %params.addr.1 = phi %union.tree_node* [ %12, %if.end22 ], [ %6, %while.cond.preheader ], !dbg !1991
  call void @llvm.dbg.value(metadata %union.tree_node* %params.addr.1, metadata !1986, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.value(metadata i64 %arg_num.1, metadata !1988, metadata !DIExpression()), !dbg !1991
  %add = add i64 %arg_num.1, 1, !dbg !2059
  %cmp19 = icmp ult i64 %add, %11, !dbg !2060
  %cond = icmp eq %union.tree_node* %params.addr.1, null, !dbg !2061
  br i1 %cmp19, label %while.body, label %while.end, !dbg !2057

while.body:                                       ; preds = %while.cond
  br i1 %cond, label %land.lhs.true.loopexit, label %if.end22, !dbg !2062

if.end22:                                         ; preds = %while.body
  %chain24 = getelementptr inbounds %union.tree_node, %union.tree_node* %params.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2064
  %12 = load %union.tree_node*, %union.tree_node** %chain24, align 8, !dbg !2064
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !1986, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.value(metadata i64 %add, metadata !1988, metadata !DIExpression()), !dbg !1991
  br label %while.cond, !dbg !2057, !llvm.loop !2065

while.end:                                        ; preds = %while.cond
  %cond.lcssa = phi i1 [ %cond, %while.cond ], !dbg !2061
  call void @llvm.dbg.value(metadata %union.tree_node* %params.addr.1, metadata !1986, metadata !DIExpression()), !dbg !1991
  br i1 %cond.lcssa, label %land.lhs.true, label %if.else36, !dbg !2067

land.lhs.true.loopexit:                           ; preds = %while.body
  %cond.lcssa12 = phi i1 [ %cond, %while.body ], !dbg !2061
  call void @llvm.dbg.value(metadata %union.tree_node* %params.addr.1, metadata !1986, metadata !DIExpression()), !dbg !1991
  br label %land.lhs.true, !dbg !2069

land.lhs.true:                                    ; preds = %land.lhs.true.loopexit, %while.end
  %cond13 = phi i1 [ %cond.lcssa12, %land.lhs.true.loopexit ], [ %cond.lcssa, %while.end ]
  %13 = load i32, i32* @warn_format_security, align 4, !dbg !2069
  %tobool27 = icmp eq i32 %13, 0, !dbg !2069
  br i1 %tobool27, label %if.else30, label %if.then28, !dbg !2070

if.then28:                                        ; preds = %land.lhs.true
  %call29 = call zeroext i8 (i32, i8*, ...) @warning(i32 95, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !2071
  br label %if.end42, !dbg !2071

if.else30:                                        ; preds = %land.lhs.true
  %14 = load i32, i32* @warn_format_nonliteral, align 4, !dbg !2072
  %tobool33 = icmp ne i32 %14, 0, !dbg !2072
  %or.cond = and i1 %cond13, %tobool33, !dbg !2074
  br i1 %or.cond, label %if.then34, label %if.else36, !dbg !2074

if.then34:                                        ; preds = %if.else30
  %call35 = call zeroext i8 (i32, i8*, ...) @warning(i32 94, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !2075
  br label %if.end42, !dbg !2075

if.else36:                                        ; preds = %while.end, %if.else30
  %call37 = call zeroext i8 (i32, i8*, ...) @warning(i32 94, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !2076
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then15, %if.then28, %if.else36, %if.then34, %if.end8
  %15 = load i32, i32* %number_extra_args, align 4, !dbg !2077
  %cmp44 = icmp sgt i32 %15, 0, !dbg !2079
  br i1 %cmp44, label %land.lhs.true45, label %if.end53, !dbg !2080

land.lhs.true45:                                  ; preds = %if.end42
  %16 = load i32, i32* %number_non_literal, align 4, !dbg !2081
  %cmp47 = icmp eq i32 %16, 0, !dbg !2082
  br i1 %cmp47, label %land.lhs.true48, label %if.end53, !dbg !2083

land.lhs.true48:                                  ; preds = %land.lhs.true45
  %17 = load i32, i32* %number_other, align 4, !dbg !2084
  %cmp50 = icmp eq i32 %17, 0, !dbg !2085
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !2086

if.then51:                                        ; preds = %land.lhs.true48
  %call52 = call zeroext i8 (i32, i8*, ...) @warning(i32 93, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !2087
  br label %if.end53, !dbg !2087

if.end53:                                         ; preds = %if.then51, %land.lhs.true48, %land.lhs.true45, %if.end42
  %18 = load i32, i32* %number_dollar_extra_args, align 4, !dbg !2088
  %cmp55 = icmp sgt i32 %18, 0, !dbg !2090
  br i1 %cmp55, label %land.lhs.true56, label %if.end64, !dbg !2091

land.lhs.true56:                                  ; preds = %if.end53
  %19 = load i32, i32* %number_non_literal, align 4, !dbg !2092
  %cmp58 = icmp eq i32 %19, 0, !dbg !2093
  br i1 %cmp58, label %land.lhs.true59, label %if.end64, !dbg !2094

land.lhs.true59:                                  ; preds = %land.lhs.true56
  %20 = load i32, i32* %number_other, align 4, !dbg !2095
  %cmp61 = icmp eq i32 %20, 0, !dbg !2096
  br i1 %cmp61, label %if.then62, label %if.end64, !dbg !2097

if.then62:                                        ; preds = %land.lhs.true59
  %call63 = call zeroext i8 (i32, i8*, ...) @warning(i32 93, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !2098
  br label %if.end64, !dbg !2098

if.end64:                                         ; preds = %if.then62, %land.lhs.true59, %land.lhs.true56, %if.end53
  %21 = load i32, i32* %number_empty, align 4, !dbg !2099
  %cmp66 = icmp sgt i32 %21, 0, !dbg !2101
  br i1 %cmp66, label %land.lhs.true67, label %if.end78, !dbg !2102

land.lhs.true67:                                  ; preds = %if.end64
  %22 = load i32, i32* %number_non_literal, align 4, !dbg !2103
  %cmp69 = icmp eq i32 %22, 0, !dbg !2104
  br i1 %cmp69, label %land.lhs.true70, label %if.end78, !dbg !2105

land.lhs.true70:                                  ; preds = %land.lhs.true67
  %23 = load i32, i32* %number_other, align 4, !dbg !2106
  %cmp72 = icmp eq i32 %23, 0, !dbg !2107
  br i1 %cmp72, label %if.then73, label %if.end78, !dbg !2108

if.then73:                                        ; preds = %land.lhs.true70
  %24 = load %struct.format_kind_info*, %struct.format_kind_info** @format_types, align 8, !dbg !2109
  %format_type74 = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 0, !dbg !2110
  %25 = load i32, i32* %format_type74, align 8, !dbg !2110
  %idxprom75 = sext i32 %25 to i64, !dbg !2109
  %name = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %24, i64 %idxprom75, i32 0, !dbg !2111
  %26 = load i8*, i8** %name, align 8, !dbg !2111
  %call77 = call zeroext i8 (i32, i8*, ...) @warning(i32 97, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i64 0, i64 0), i8* %26) #6, !dbg !2112
  br label %if.end78, !dbg !2112

if.end78:                                         ; preds = %if.then73, %land.lhs.true70, %land.lhs.true67, %if.end64
  %27 = load i32, i32* %number_wide, align 4, !dbg !2113
  %cmp80 = icmp sgt i32 %27, 0, !dbg !2115
  br i1 %cmp80, label %if.then81, label %if.end83, !dbg !2116

if.then81:                                        ; preds = %if.end78
  %call82 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !2117
  br label %if.end83, !dbg !2117

if.end83:                                         ; preds = %if.then81, %if.end78
  %28 = load i32, i32* %number_unterminated, align 4, !dbg !2118
  %cmp85 = icmp sgt i32 %28, 0, !dbg !2120
  br i1 %cmp85, label %if.then86, label %cleanup, !dbg !2121

if.then86:                                        ; preds = %if.end83
  %call87 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !2122
  br label %cleanup, !dbg !2122

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !2123

cleanup:                                          ; preds = %cleanup.loopexit, %if.end83, %if.then86, %for.end
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %1) #7, !dbg !2123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2123
  ret void, !dbg !2123
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @decode_format_type(i8* %s) unnamed_addr #5 !dbg !2124 {
entry:
  call void @llvm.dbg.value(metadata i8* %s, metadata !2126, metadata !DIExpression()), !dbg !2133
  %call = tail call fastcc i8* @convert_format_name_to_system_name(i8* %s) #8, !dbg !2134
  call void @llvm.dbg.value(metadata i8* %call, metadata !2126, metadata !DIExpression()), !dbg !2133
  %call1 = tail call i64 @strlen(i8* %call) #6, !dbg !2135
  %conv = trunc i64 %call1 to i32, !dbg !2135
  call void @llvm.dbg.value(metadata i32 %conv, metadata !2128, metadata !DIExpression()), !dbg !2133
  call void @llvm.dbg.value(metadata i32 0, metadata !2127, metadata !DIExpression()), !dbg !2133
  %arrayidx16 = getelementptr inbounds i8, i8* %call, i64 1, !dbg !2136
  %sub = shl i64 %call1, 32, !dbg !2136
  %sext = add i64 %sub, -4294967296, !dbg !2136
  %idxprom21 = ashr exact i64 %sext, 32, !dbg !2136
  %arrayidx22 = getelementptr inbounds i8, i8* %call, i64 %idxprom21, !dbg !2136
  %sext1 = add i64 %sub, -8589934592, !dbg !2136
  %idxprom28 = ashr exact i64 %sext1, 32, !dbg !2136
  %arrayidx29 = getelementptr inbounds i8, i8* %call, i64 %idxprom28, !dbg !2136
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 2, !dbg !2136
  br label %for.cond, !dbg !2138

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !2139
  %retval.0 = phi i32 [ %retval.1, %for.inc ], [ undef, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2127, metadata !DIExpression()), !dbg !2133
  %exitcond = icmp eq i64 %indvars.iv, 10, !dbg !2140
  br i1 %exitcond, label %cleanup42, label %for.body, !dbg !2141

for.body:                                         ; preds = %for.cond
  %0 = load %struct.format_kind_info*, %struct.format_kind_info** @format_types, align 8, !dbg !2142
  %name = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %indvars.iv, i32 0, !dbg !2144
  %1 = load i8*, i8** %name, align 8, !dbg !2144
  %call3 = tail call i32 @strcmp(i8* %call, i8* %1) #6, !dbg !2145
  %tobool = icmp eq i32 %call3, 0, !dbg !2145
  %2 = trunc i64 %indvars.iv to i32, !dbg !2146
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2146

if.end:                                           ; preds = %for.body
  %3 = load %struct.format_kind_info*, %struct.format_kind_info** @format_types, align 8, !dbg !2147
  %name6 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %3, i64 %indvars.iv, i32 0, !dbg !2148
  %4 = load i8*, i8** %name6, align 8, !dbg !2148
  %call7 = tail call i64 @strlen(i8* %4) #6, !dbg !2149
  %conv8 = trunc i64 %call7 to i32, !dbg !2149
  call void @llvm.dbg.value(metadata i32 %conv8, metadata !2129, metadata !DIExpression()), !dbg !2150
  %add = add nsw i32 %conv8, 4, !dbg !2151
  %cmp9 = icmp eq i32 %add, %conv, !dbg !2152
  br i1 %cmp9, label %land.lhs.true, label %if.end41, !dbg !2153

land.lhs.true:                                    ; preds = %if.end
  %5 = load i8, i8* %call, align 1, !dbg !2154
  %cmp13 = icmp eq i8 %5, 95, !dbg !2155
  br i1 %cmp13, label %land.lhs.true15, label %if.end41, !dbg !2156

land.lhs.true15:                                  ; preds = %land.lhs.true
  %6 = load i8, i8* %arrayidx16, align 1, !dbg !2157
  %cmp18 = icmp eq i8 %6, 95, !dbg !2158
  br i1 %cmp18, label %land.lhs.true20, label %if.end41, !dbg !2159

land.lhs.true20:                                  ; preds = %land.lhs.true15
  %7 = load i8, i8* %arrayidx22, align 1, !dbg !2160
  %cmp24 = icmp eq i8 %7, 95, !dbg !2161
  br i1 %cmp24, label %land.lhs.true26, label %if.end41, !dbg !2162

land.lhs.true26:                                  ; preds = %land.lhs.true20
  %8 = load i8, i8* %arrayidx29, align 1, !dbg !2163
  %cmp31 = icmp eq i8 %8, 95, !dbg !2164
  br i1 %cmp31, label %land.lhs.true33, label %if.end41, !dbg !2165

land.lhs.true33:                                  ; preds = %land.lhs.true26
  %9 = load %struct.format_kind_info*, %struct.format_kind_info** @format_types, align 8, !dbg !2166
  %name36 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %9, i64 %indvars.iv, i32 0, !dbg !2167
  %10 = load i8*, i8** %name36, align 8, !dbg !2167
  %sext2 = shl i64 %call7, 32, !dbg !2168
  %conv37 = ashr exact i64 %sext2, 32, !dbg !2168
  %call38 = tail call i32 @strncmp(i8* nonnull %add.ptr, i8* %10, i64 %conv37) #6, !dbg !2169
  %tobool39 = icmp eq i32 %call38, 0, !dbg !2169
  br i1 %tobool39, label %cleanup, label %if.end41, !dbg !2170

if.end41:                                         ; preds = %land.lhs.true33, %land.lhs.true26, %land.lhs.true20, %land.lhs.true15, %land.lhs.true, %if.end
  br label %cleanup, !dbg !2171

cleanup:                                          ; preds = %land.lhs.true33, %for.body, %if.end41
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end41 ], [ false, %for.body ], [ false, %land.lhs.true33 ]
  %retval.1 = phi i32 [ %retval.0, %if.end41 ], [ %2, %for.body ], [ %2, %land.lhs.true33 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup42

for.inc:                                          ; preds = %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2172
  call void @llvm.dbg.value(metadata i32 undef, metadata !2127, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2133
  br label %for.cond, !dbg !2173, !llvm.loop !2174

cleanup42:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi i32 [ %retval.1, %cleanup ], [ -1, %for.cond ]
  ret i32 %retval.2, !dbg !2176
}

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @handle_format_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) local_unnamed_addr #5 !dbg !2177 {
entry:
  %info = alloca %struct.function_format_info, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !2179, metadata !DIExpression()), !dbg !2192
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !2180, metadata !DIExpression()), !dbg !2192
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !2181, metadata !DIExpression()), !dbg !2192
  call void @llvm.dbg.value(metadata i32 %flags, metadata !2182, metadata !DIExpression()), !dbg !2192
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !2183, metadata !DIExpression()), !dbg !2192
  %0 = bitcast %union.tree_node** %node to %struct.tree_type**, !dbg !2193
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !2193
  %2 = bitcast %struct.function_format_info* %info to i8*, !dbg !2194
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !2194
  call void @llvm.dbg.value(metadata %struct.function_format_info* %info, metadata !2185, metadata !DIExpression(DW_OP_deref)), !dbg !2192
  %call = call fastcc zeroext i8 @decode_format_attr(%union.tree_node* %args, %struct.function_format_info* nonnull %info, i32 0) #8, !dbg !2195
  %tobool = icmp eq i8 %call, 0, !dbg !2195
  br i1 %tobool, label %if.then, label %if.end, !dbg !2197

if.then:                                          ; preds = %entry
  store i8 1, i8* %no_add_attrs, align 1, !dbg !2198
  br label %cleanup71, !dbg !2200

if.end:                                           ; preds = %entry
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 1, !dbg !2201
  %3 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !2201
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !2186, metadata !DIExpression()), !dbg !2192
  %tobool2 = icmp eq %union.tree_node* %3, null, !dbg !2202
  br i1 %tobool2, label %if.end18, label %if.then3, !dbg !2203

if.then3:                                         ; preds = %if.end
  %format_num = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 1, !dbg !2204
  %4 = load i64, i64* %format_num, align 8, !dbg !2204
  %call4 = call fastcc zeroext i8 @check_format_string(%union.tree_node* nonnull %3, i64 %4, i32 %flags, i8* %no_add_attrs) #8, !dbg !2206
  %tobool5 = icmp eq i8 %call4, 0, !dbg !2206
  br i1 %tobool5, label %cleanup71, label %if.end7, !dbg !2207

if.end7:                                          ; preds = %if.then3
  %first_arg_num = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 2, !dbg !2208
  %5 = load i64, i64* %first_arg_num, align 8, !dbg !2208
  %cmp = icmp eq i64 %5, 0, !dbg !2209
  br i1 %cmp, label %if.end18, label %while.cond.preheader, !dbg !2210

while.cond.preheader:                             ; preds = %if.end7
  br label %while.cond, !dbg !2211

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %argument.0 = phi %union.tree_node* [ %6, %while.body ], [ %3, %while.cond.preheader ], !dbg !2192
  %arg_num.0 = phi i64 [ %inc, %while.body ], [ 1, %while.cond.preheader ], !dbg !2212
  call void @llvm.dbg.value(metadata i64 %arg_num.0, metadata !2187, metadata !DIExpression()), !dbg !2212
  call void @llvm.dbg.value(metadata %union.tree_node* %argument.0, metadata !2186, metadata !DIExpression()), !dbg !2192
  %tobool9 = icmp eq %union.tree_node* %argument.0, null, !dbg !2211
  br i1 %tobool9, label %while.end, label %while.body, !dbg !2211

while.body:                                       ; preds = %while.cond
  %inc = add i64 %arg_num.0, 1, !dbg !2213
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2187, metadata !DIExpression()), !dbg !2212
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %argument.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2214
  %6 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !2214
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !2186, metadata !DIExpression()), !dbg !2192
  br label %while.cond, !dbg !2211, !llvm.loop !2215

while.end:                                        ; preds = %while.cond
  %arg_num.0.lcssa = phi i64 [ %arg_num.0, %while.cond ], !dbg !2212
  call void @llvm.dbg.value(metadata i64 %arg_num.0.lcssa, metadata !2187, metadata !DIExpression()), !dbg !2212
  call void @llvm.dbg.value(metadata i64 %arg_num.0.lcssa, metadata !2187, metadata !DIExpression()), !dbg !2212
  call void @llvm.dbg.value(metadata i64 %arg_num.0.lcssa, metadata !2187, metadata !DIExpression()), !dbg !2212
  %cmp11 = icmp eq i64 %arg_num.0.lcssa, %5, !dbg !2216
  br i1 %cmp11, label %cleanup, label %if.then12, !dbg !2218

if.then12:                                        ; preds = %while.end
  %and = and i32 %flags, 16, !dbg !2219
  %tobool13 = icmp eq i32 %and, 0, !dbg !2219
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !2222

if.then14:                                        ; preds = %if.then12
  call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2223
  br label %if.end15, !dbg !2223

if.end15:                                         ; preds = %if.then12, %if.then14
  store i8 1, i8* %no_add_attrs, align 1, !dbg !2224
  br label %cleanup, !dbg !2225

cleanup:                                          ; preds = %while.end, %if.end15
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end15 ], [ true, %while.end ]
  br i1 %cleanup.dest.slot.0, label %if.end18, label %cleanup71

if.end18:                                         ; preds = %if.end7, %if.end, %cleanup
  %7 = load %struct.format_kind_info*, %struct.format_kind_info** @format_types, align 8, !dbg !2226
  %format_type = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 0, !dbg !2228
  %8 = load i32, i32* %format_type, align 8, !dbg !2228
  %idxprom = sext i32 %8 to i64, !dbg !2226
  %flags19 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %7, i64 %idxprom, i32 7, !dbg !2229
  %9 = load i32, i32* %flags19, align 8, !dbg !2229
  %and20 = and i32 %9, 1, !dbg !2230
  %cmp21 = icmp eq i32 %and20, 0, !dbg !2231
  br i1 %cmp21, label %land.lhs.true, label %if.end25, !dbg !2232

land.lhs.true:                                    ; preds = %if.end18
  %first_arg_num22 = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 2, !dbg !2233
  %10 = load i64, i64* %first_arg_num22, align 8, !dbg !2233
  %cmp23 = icmp eq i64 %10, 0, !dbg !2234
  br i1 %cmp23, label %if.end25, label %if.then24, !dbg !2235

if.then24:                                        ; preds = %land.lhs.true
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2236
  store i8 1, i8* %no_add_attrs, align 1, !dbg !2238
  br label %cleanup71, !dbg !2239

if.end25:                                         ; preds = %land.lhs.true, %if.end18
  %cmp27 = icmp eq i32 %8, 1, !dbg !2240
  br i1 %cmp27, label %if.then42, label %lor.lhs.false, !dbg !2242

lor.lhs.false:                                    ; preds = %if.end25
  %cmp29 = icmp eq i32 %8, 6, !dbg !2243
  br i1 %cmp29, label %if.then42, label %lor.lhs.false30, !dbg !2244

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %cmp32 = icmp eq i32 %8, 2, !dbg !2245
  br i1 %cmp32, label %if.then42, label %lor.lhs.false33, !dbg !2246

lor.lhs.false33:                                  ; preds = %lor.lhs.false30
  %cmp35 = icmp eq i32 %8, 3, !dbg !2247
  br i1 %cmp35, label %if.then42, label %lor.lhs.false36, !dbg !2248

lor.lhs.false36:                                  ; preds = %lor.lhs.false33
  %cmp38 = icmp eq i32 %8, 4, !dbg !2249
  br i1 %cmp38, label %if.then42, label %lor.lhs.false39, !dbg !2250

lor.lhs.false39:                                  ; preds = %lor.lhs.false36
  %cmp41 = icmp eq i32 %8, 5, !dbg !2251
  br i1 %cmp41, label %if.then42, label %cleanup71, !dbg !2252

if.then42:                                        ; preds = %lor.lhs.false39, %lor.lhs.false36, %lor.lhs.false33, %lor.lhs.false30, %lor.lhs.false, %if.end25
  %11 = load %struct.format_kind_info*, %struct.format_kind_info** @dynamic_format_types, align 8, !dbg !2253
  %tobool43 = icmp eq %struct.format_kind_info* %11, null, !dbg !2253
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !2256

if.then44:                                        ; preds = %if.then42
  %call45 = call i8* @xmemdup(i8* bitcast ([10 x %struct.format_kind_info]* @format_types_orig to i8*), i64 1040, i64 1040) #6, !dbg !2257
  store i8* %call45, i8** bitcast (%struct.format_kind_info** @dynamic_format_types to i8**), align 8, !dbg !2258
  store i8* %call45, i8** bitcast (%struct.format_kind_info** @format_types to i8**), align 8, !dbg !2259
  %.pre = load i32, i32* %format_type, align 8, !dbg !2260
  br label %if.end46, !dbg !2262

if.end46:                                         ; preds = %if.then42, %if.then44
  %12 = phi i32 [ %8, %if.then42 ], [ %.pre, %if.then44 ], !dbg !2260
  %cmp48 = icmp eq i32 %12, 1, !dbg !2263
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !2264

if.then49:                                        ; preds = %if.end46
  call fastcc void @init_dynamic_asm_fprintf_info() #8, !dbg !2265
  br label %cleanup71, !dbg !2265

if.else:                                          ; preds = %if.end46
  %cmp51 = icmp eq i32 %12, 6, !dbg !2266
  br i1 %cmp51, label %if.then52, label %if.else53, !dbg !2268

if.then52:                                        ; preds = %if.else
  call fastcc void @init_dynamic_gfc_info() #8, !dbg !2269
  br label %cleanup71, !dbg !2269

if.else53:                                        ; preds = %if.else
  %cmp55 = icmp eq i32 %12, 2, !dbg !2270
  br i1 %cmp55, label %if.then65, label %lor.lhs.false56, !dbg !2272

lor.lhs.false56:                                  ; preds = %if.else53
  %cmp58 = icmp eq i32 %12, 3, !dbg !2273
  br i1 %cmp58, label %if.then65, label %lor.lhs.false59, !dbg !2274

lor.lhs.false59:                                  ; preds = %lor.lhs.false56
  %cmp61 = icmp eq i32 %12, 4, !dbg !2275
  br i1 %cmp61, label %if.then65, label %lor.lhs.false62, !dbg !2276

lor.lhs.false62:                                  ; preds = %lor.lhs.false59
  %cmp64 = icmp eq i32 %12, 5, !dbg !2277
  br i1 %cmp64, label %if.then65, label %if.else66, !dbg !2278

if.then65:                                        ; preds = %lor.lhs.false62, %lor.lhs.false59, %lor.lhs.false56, %if.else53
  call fastcc void @init_dynamic_diag_info() #8, !dbg !2279
  br label %cleanup71, !dbg !2279

if.else66:                                        ; preds = %lor.lhs.false62
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 2873, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2280
  br label %cleanup71

cleanup71:                                        ; preds = %if.then3, %lor.lhs.false39, %if.then52, %if.else66, %if.then65, %if.then49, %cleanup, %if.then24, %if.then
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !2281
  ret %union.tree_node* null, !dbg !2281
}

declare dso_local i8* @xmemdup(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_dynamic_asm_fprintf_info() unnamed_addr #5 !dbg !1172 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @init_dynamic_asm_fprintf_info.hwi, align 8, !dbg !2282
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !2282
  br i1 %tobool, label %if.then, label %if.end26, !dbg !2283

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @maybe_get_identifier(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.261, i64 0, i64 0)) #6, !dbg !2284
  store %union.tree_node* %call, %union.tree_node** @init_dynamic_asm_fprintf_info.hwi, align 8, !dbg !2285
  %tobool1 = icmp eq %union.tree_node* %call, null, !dbg !2286
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2288

if.then2:                                         ; preds = %if.then
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.262, i64 0, i64 0)) #6, !dbg !2289
  br label %cleanup, !dbg !2291

if.end:                                           ; preds = %if.then
  %call3 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* nonnull %call) #6, !dbg !2292
  store %union.tree_node* %call3, %union.tree_node** @init_dynamic_asm_fprintf_info.hwi, align 8, !dbg !2293
  %tobool4 = icmp eq %union.tree_node* %call3, null, !dbg !2294
  br i1 %tobool4, label %if.then5, label %lor.lhs.false, !dbg !2296

lor.lhs.false:                                    ; preds = %if.end
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2296
  %bf.load = load i64, i64* %1, align 8, !dbg !2297
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2298
  %cmp = icmp eq i64 %bf.cast1, 35, !dbg !2298
  br i1 %cmp, label %if.end6, label %if.then5, !dbg !2299

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.262, i64 0, i64 0)) #6, !dbg !2300
  br label %cleanup, !dbg !2302

if.end6:                                          ; preds = %lor.lhs.false
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 3, !dbg !2303
  %2 = bitcast %union.tree_node** %result to i64*, !dbg !2303
  %3 = load i64, i64* %2, align 8, !dbg !2303
  store i64 %3, i64* bitcast (%union.tree_node** @init_dynamic_asm_fprintf_info.hwi to i64*), align 8, !dbg !2304
  %tobool7 = icmp eq i64 %3, 0, !dbg !2305
  %4 = inttoptr i64 %3 to %union.tree_node*, !dbg !2305
  br i1 %tobool7, label %cond.true, label %cond.end, !dbg !2305

cond.true:                                        ; preds = %if.end6
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 2425, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2305
  %.pre = load %union.tree_node*, %union.tree_node** @init_dynamic_asm_fprintf_info.hwi, align 8, !dbg !2306
  br label %cond.end, !dbg !2305

cond.end:                                         ; preds = %if.end6, %cond.true
  %5 = phi %union.tree_node* [ %4, %if.end6 ], [ %.pre, %cond.true ]
  %6 = phi %union.tree_node* [ %4, %if.end6 ], [ %.pre, %cond.true ], !dbg !2306
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !2308
  %cmp8 = icmp eq %union.tree_node* %6, %7, !dbg !2309
  br i1 %cmp8, label %if.end11, label %land.lhs.true, !dbg !2310

land.lhs.true:                                    ; preds = %cond.end
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !2311
  %cmp9 = icmp eq %union.tree_node* %5, %8, !dbg !2312
  br i1 %cmp9, label %if.end11, label %if.then10, !dbg !2313

if.then10:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.263, i64 0, i64 0)) #6, !dbg !2314
  br label %cleanup, !dbg !2316

if.end11:                                         ; preds = %land.lhs.true, %cond.end
  %call12 = tail call i8* @xmemdup(i8* bitcast ([3 x %struct.format_length_info]* @asm_fprintf_length_specs to i8*), i64 120, i64 120) #6, !dbg !2317
  %9 = bitcast i8* %call12 to %struct.format_length_info*, !dbg !2318
  call void @llvm.dbg.value(metadata %struct.format_length_info* %9, metadata !1176, metadata !DIExpression()), !dbg !2319
  %call13 = tail call fastcc i32 @find_length_info_modifier_index(%struct.format_length_info* %9, i32 119) #8, !dbg !2320
  call void @llvm.dbg.value(metadata i32 %call13, metadata !1179, metadata !DIExpression()), !dbg !2319
  %10 = load %union.tree_node*, %union.tree_node** @init_dynamic_asm_fprintf_info.hwi, align 8, !dbg !2321
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !2323
  %cmp14 = icmp eq %union.tree_node* %10, %11, !dbg !2324
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !2325

if.then15:                                        ; preds = %if.end11
  %idxprom = zext i32 %call13 to i64, !dbg !2326
  %index = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %9, i64 %idxprom, i32 1, !dbg !2327
  store i32 3, i32* %index, align 8, !dbg !2328
  br label %if.end23, !dbg !2326

if.else:                                          ; preds = %if.end11
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !2329
  %cmp16 = icmp eq %union.tree_node* %10, %12, !dbg !2331
  br i1 %cmp16, label %if.then17, label %if.else21, !dbg !2332

if.then17:                                        ; preds = %if.else
  %idxprom18 = zext i32 %call13 to i64, !dbg !2333
  %index20 = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %9, i64 %idxprom18, i32 1, !dbg !2334
  store i32 4, i32* %index20, align 8, !dbg !2335
  br label %if.end23, !dbg !2333

if.else21:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 2446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2336
  br label %if.end23

if.end23:                                         ; preds = %if.then17, %if.else21, %if.then15
  %13 = load %struct.format_kind_info*, %struct.format_kind_info** @dynamic_format_types, align 8, !dbg !2337
  %length_char_specs = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %13, i64 1, i32 1, !dbg !2338
  %14 = bitcast %struct.format_length_info** %length_char_specs to i8**, !dbg !2339
  store i8* %call12, i8** %14, align 8, !dbg !2339
  br label %cleanup, !dbg !2340

cleanup:                                          ; preds = %if.end23, %if.then10, %if.then5, %if.then2
  ret void

if.end26:                                         ; preds = %entry
  ret void, !dbg !2341
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_dynamic_gfc_info() unnamed_addr #5 !dbg !1182 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @init_dynamic_gfc_info.locus, align 8, !dbg !2342
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !2342
  br i1 %tobool, label %if.then, label %if.end25, !dbg !2343

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @maybe_get_identifier(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.264, i64 0, i64 0)) #6, !dbg !2344
  store %union.tree_node* %call, %union.tree_node** @init_dynamic_gfc_info.locus, align 8, !dbg !2346
  %tobool1 = icmp eq %union.tree_node* %call, null, !dbg !2346
  br i1 %tobool1, label %if.end11, label %if.then2, !dbg !2347

if.then2:                                         ; preds = %if.then
  %call3 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* nonnull %call) #6, !dbg !2348
  store %union.tree_node* %call3, %union.tree_node** @init_dynamic_gfc_info.locus, align 8, !dbg !2350
  %tobool4 = icmp eq %union.tree_node* %call3, null, !dbg !2351
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !2353

if.then5:                                         ; preds = %if.then2
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2353
  %bf.load = load i64, i64* %1, align 8, !dbg !2354
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2357
  %cmp = icmp eq i64 %bf.cast1, 35, !dbg !2357
  br i1 %cmp, label %lor.lhs.false, label %if.then7, !dbg !2358

lor.lhs.false:                                    ; preds = %if.then5
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2359
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2359
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2360
  %cmp6 = icmp eq %union.tree_node* %2, %3, !dbg !2361
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !2362

if.then7:                                         ; preds = %if.then5, %lor.lhs.false
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.265, i64 0, i64 0)) #6, !dbg !2363
  store %union.tree_node* null, %union.tree_node** @init_dynamic_gfc_info.locus, align 8, !dbg !2365
  br label %if.end11, !dbg !2366

if.else:                                          ; preds = %lor.lhs.false
  %4 = ptrtoint %union.tree_node* %2 to i64, !dbg !2362
  store i64 %4, i64* bitcast (%union.tree_node** @init_dynamic_gfc_info.locus to i64*), align 8, !dbg !2367
  br label %if.end11

if.end11:                                         ; preds = %if.then2, %if.then, %if.else, %if.then7
  %5 = phi %union.tree_node* [ null, %if.then2 ], [ null, %if.then ], [ %2, %if.else ], [ null, %if.then7 ]
  %6 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_gfc_info.gfc_fci, align 8, !dbg !2368
  %tobool12 = icmp eq %struct.format_char_info* %6, null, !dbg !2368
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !2370

if.then13:                                        ; preds = %if.end11
  %call14 = tail call i8* @xmemdup(i8* bitcast (<{ { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, %struct.format_type_detail, [8 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @gcc_gfc_char_table to i8*), i64 2296, i64 2296) #6, !dbg !2371
  store i8* %call14, i8** bitcast (%struct.format_char_info** @init_dynamic_gfc_info.gfc_fci to i8**), align 8, !dbg !2372
  %7 = load %struct.format_kind_info*, %struct.format_kind_info** @dynamic_format_types, align 8, !dbg !2373
  %conversion_specs = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %7, i64 6, i32 2, !dbg !2374
  %8 = bitcast %struct.format_char_info** %conversion_specs to i8**, !dbg !2375
  store i8* %call14, i8** %8, align 8, !dbg !2375
  %.pre = load %union.tree_node*, %union.tree_node** @init_dynamic_gfc_info.locus, align 8, !dbg !2376
  %9 = bitcast i8* %call14 to %struct.format_char_info*, !dbg !2373
  br label %if.end15, !dbg !2373

if.end15:                                         ; preds = %if.end11, %if.then13
  %10 = phi %struct.format_char_info* [ %6, %if.end11 ], [ %9, %if.then13 ]
  %11 = phi %union.tree_node* [ %5, %if.end11 ], [ %.pre, %if.then13 ], !dbg !2376
  %tobool16 = icmp eq %union.tree_node* %11, null, !dbg !2376
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !2377

if.then17:                                        ; preds = %if.end15
  %call18 = tail call fastcc i32 @find_char_info_specifier_index(%struct.format_char_info* %10, i32 76) #8, !dbg !2378
  call void @llvm.dbg.value(metadata i32 %call18, metadata !1184, metadata !DIExpression()), !dbg !2379
  %12 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_gfc_info.gfc_fci, align 8, !dbg !2380
  %idxprom = zext i32 %call18 to i64, !dbg !2380
  %type21 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %12, i64 %idxprom, i32 3, i64 0, i32 2, !dbg !2381
  store %union.tree_node** @init_dynamic_gfc_info.locus, %union.tree_node*** %type21, align 8, !dbg !2382
  %13 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_gfc_info.gfc_fci, align 8, !dbg !2383
  %pointer_count = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %13, i64 %idxprom, i32 1, !dbg !2384
  store i32 1, i32* %pointer_count, align 8, !dbg !2385
  br label %if.end25, !dbg !2386

if.end25:                                         ; preds = %if.end15, %entry, %if.then17
  ret void, !dbg !2387
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_dynamic_diag_info() unnamed_addr #5 !dbg !1194 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @init_dynamic_diag_info.loc, align 8, !dbg !2388
  %tobool = icmp ne %union.tree_node* %0, null, !dbg !2388
  %1 = load %union.tree_node*, %union.tree_node** @init_dynamic_diag_info.t, align 8, !dbg !2389
  %tobool1 = icmp ne %union.tree_node* %1, null, !dbg !2389
  %or.cond = and i1 %tobool, %tobool1, !dbg !2390
  %2 = load %union.tree_node*, %union.tree_node** @init_dynamic_diag_info.hwi, align 8, !dbg !2391
  %tobool3 = icmp ne %union.tree_node* %2, null, !dbg !2391
  %or.cond1 = and i1 %or.cond, %tobool3, !dbg !2390
  br i1 %or.cond1, label %if.end185, label %if.then, !dbg !2390

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @maybe_get_identifier(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.266, i64 0, i64 0)) #6, !dbg !2392
  store %union.tree_node* %call, %union.tree_node** @init_dynamic_diag_info.loc, align 8, !dbg !2394
  %tobool4 = icmp eq %union.tree_node* %call, null, !dbg !2394
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !2395

if.then5:                                         ; preds = %if.then
  %call6 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* nonnull %call) #6, !dbg !2396
  store %union.tree_node* %call6, %union.tree_node** @init_dynamic_diag_info.loc, align 8, !dbg !2398
  %tobool7 = icmp eq %union.tree_node* %call6, null, !dbg !2399
  br i1 %tobool7, label %if.end11, label %if.then8, !dbg !2401

if.then8:                                         ; preds = %if.then5
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2401
  %bf.load = load i64, i64* %3, align 8, !dbg !2402
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !2405
  %cmp = icmp eq i64 %bf.cast5, 35, !dbg !2405
  br i1 %cmp, label %if.else, label %if.then9, !dbg !2406

if.then9:                                         ; preds = %if.then8
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.267, i64 0, i64 0)) #6, !dbg !2407
  store %union.tree_node* null, %union.tree_node** @init_dynamic_diag_info.loc, align 8, !dbg !2409
  br label %if.end11, !dbg !2410

if.else:                                          ; preds = %if.then8
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2411
  %4 = bitcast %union.tree_node** %type to i64*, !dbg !2411
  %5 = load i64, i64* %4, align 8, !dbg !2411
  store i64 %5, i64* bitcast (%union.tree_node** @init_dynamic_diag_info.loc to i64*), align 8, !dbg !2412
  br label %if.end11

if.end11:                                         ; preds = %if.then5, %if.then, %if.else, %if.then9
  %call12 = tail call %union.tree_node* @maybe_get_identifier(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.268, i64 0, i64 0)) #6, !dbg !2413
  store %union.tree_node* %call12, %union.tree_node** @init_dynamic_diag_info.t, align 8, !dbg !2415
  %tobool13 = icmp eq %union.tree_node* %call12, null, !dbg !2415
  br i1 %tobool13, label %if.end41, label %if.then14, !dbg !2416

if.then14:                                        ; preds = %if.end11
  %call15 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* nonnull %call12) #6, !dbg !2417
  store %union.tree_node* %call15, %union.tree_node** @init_dynamic_diag_info.t, align 8, !dbg !2419
  %tobool16 = icmp eq %union.tree_node* %call15, null, !dbg !2420
  br i1 %tobool16, label %if.end41, label %if.then17, !dbg !2422

if.then17:                                        ; preds = %if.then14
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2422
  %bf.load19 = load i64, i64* %6, align 8, !dbg !2423
  %bf.cast213 = and i64 %bf.load19, 65535, !dbg !2426
  %cmp22 = icmp eq i64 %bf.cast213, 35, !dbg !2426
  br i1 %cmp22, label %if.else24, label %if.then23, !dbg !2427

if.then23:                                        ; preds = %if.then17
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.269, i64 0, i64 0)) #6, !dbg !2428
  store %union.tree_node* null, %union.tree_node** @init_dynamic_diag_info.t, align 8, !dbg !2430
  br label %if.end41, !dbg !2431

if.else24:                                        ; preds = %if.then17
  %type26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2432
  %7 = bitcast %union.tree_node** %type26 to i64**, !dbg !2432
  %8 = load i64*, i64** %7, align 8, !dbg !2432
  %bf.load28 = load i64, i64* %8, align 8, !dbg !2432
  %bf.cast304 = and i64 %bf.load28, 65535, !dbg !2434
  %cmp31 = icmp eq i64 %bf.cast304, 10, !dbg !2434
  br i1 %cmp31, label %if.else33, label %if.then32, !dbg !2435

if.then32:                                        ; preds = %if.else24
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.270, i64 0, i64 0)) #6, !dbg !2436
  store %union.tree_node* null, %union.tree_node** @init_dynamic_diag_info.t, align 8, !dbg !2438
  br label %if.end41, !dbg !2439

if.else33:                                        ; preds = %if.else24
  %type37 = getelementptr inbounds i64, i64* %8, i64 2, !dbg !2440
  %9 = load i64, i64* %type37, align 8, !dbg !2440
  store i64 %9, i64* bitcast (%union.tree_node** @init_dynamic_diag_info.t to i64*), align 8, !dbg !2441
  br label %if.end41

if.end41:                                         ; preds = %if.then14, %if.end11, %if.then32, %if.else33, %if.then23
  %call42 = tail call %union.tree_node* @maybe_get_identifier(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.261, i64 0, i64 0)) #6, !dbg !2442
  store %union.tree_node* %call42, %union.tree_node** @init_dynamic_diag_info.hwi, align 8, !dbg !2444
  %tobool43 = icmp eq %union.tree_node* %call42, null, !dbg !2444
  br i1 %tobool43, label %if.end62, label %if.then44, !dbg !2445

if.then44:                                        ; preds = %if.end41
  %call45 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* nonnull %call42) #6, !dbg !2446
  store %union.tree_node* %call45, %union.tree_node** @init_dynamic_diag_info.hwi, align 8, !dbg !2448
  %tobool46 = icmp eq %union.tree_node* %call45, null, !dbg !2449
  br i1 %tobool46, label %if.end62, label %if.then47, !dbg !2451

if.then47:                                        ; preds = %if.then44
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2451
  %bf.load49 = load i64, i64* %10, align 8, !dbg !2452
  %bf.cast512 = and i64 %bf.load49, 65535, !dbg !2455
  %cmp52 = icmp eq i64 %bf.cast512, 35, !dbg !2455
  br i1 %cmp52, label %if.else54, label %if.then53, !dbg !2456

if.then53:                                        ; preds = %if.then47
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.262, i64 0, i64 0)) #6, !dbg !2457
  store %union.tree_node* null, %union.tree_node** @init_dynamic_diag_info.hwi, align 8, !dbg !2459
  br label %if.end62, !dbg !2460

if.else54:                                        ; preds = %if.then47
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 3, !dbg !2461
  %11 = bitcast %union.tree_node** %result to i64*, !dbg !2461
  %12 = load i64, i64* %11, align 8, !dbg !2461
  store i64 %12, i64* bitcast (%union.tree_node** @init_dynamic_diag_info.hwi to i64*), align 8, !dbg !2463
  %tobool55 = icmp eq i64 %12, 0, !dbg !2464
  %13 = inttoptr i64 %12 to %union.tree_node*, !dbg !2464
  br i1 %tobool55, label %cond.true, label %cond.end, !dbg !2464

cond.true:                                        ; preds = %if.else54
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 2578, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2464
  %.pre = load %union.tree_node*, %union.tree_node** @init_dynamic_diag_info.hwi, align 8, !dbg !2465
  br label %cond.end, !dbg !2464

cond.end:                                         ; preds = %if.else54, %cond.true
  %14 = phi %union.tree_node* [ %13, %if.else54 ], [ %.pre, %cond.true ]
  %15 = phi %union.tree_node* [ %13, %if.else54 ], [ %.pre, %cond.true ]
  %16 = phi %union.tree_node* [ %13, %if.else54 ], [ %.pre, %cond.true ], !dbg !2465
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !2467
  %cmp56 = icmp eq %union.tree_node* %16, %17, !dbg !2468
  br i1 %cmp56, label %if.end62, label %land.lhs.true, !dbg !2469

land.lhs.true:                                    ; preds = %cond.end
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !2470
  %cmp57 = icmp eq %union.tree_node* %15, %18, !dbg !2471
  br i1 %cmp57, label %if.end62, label %if.then58, !dbg !2472

if.then58:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.263, i64 0, i64 0)) #6, !dbg !2473
  store %union.tree_node* null, %union.tree_node** @init_dynamic_diag_info.hwi, align 8, !dbg !2475
  br label %if.end62, !dbg !2476

if.end62:                                         ; preds = %land.lhs.true, %cond.end, %if.then44, %if.end41, %if.then58, %if.then53
  %19 = phi %union.tree_node* [ %14, %land.lhs.true ], [ %14, %cond.end ], [ null, %if.then44 ], [ null, %if.end41 ], [ null, %if.then58 ], [ null, %if.then53 ]
  %20 = load %struct.format_length_info*, %struct.format_length_info** @init_dynamic_diag_info.diag_ls, align 8, !dbg !2477
  %tobool63 = icmp eq %struct.format_length_info* %20, null, !dbg !2477
  br i1 %tobool63, label %if.then64, label %if.end72, !dbg !2479

if.then64:                                        ; preds = %if.end62
  %call65 = tail call i8* @xmemdup(i8* bitcast ([3 x %struct.format_length_info]* @gcc_diag_length_specs to i8*), i64 120, i64 120) #6, !dbg !2480
  store i8* %call65, i8** bitcast (%struct.format_length_info** @init_dynamic_diag_info.diag_ls to i8**), align 8, !dbg !2481
  %21 = load %struct.format_kind_info*, %struct.format_kind_info** @dynamic_format_types, align 8, !dbg !2482
  %length_char_specs = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %21, i64 5, i32 1, !dbg !2483
  %22 = bitcast %struct.format_length_info** %length_char_specs to i8**, !dbg !2484
  store i8* %call65, i8** %22, align 8, !dbg !2484
  %length_char_specs67 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %21, i64 4, i32 1, !dbg !2485
  %23 = bitcast %struct.format_length_info** %length_char_specs67 to i8**, !dbg !2486
  store i8* %call65, i8** %23, align 8, !dbg !2486
  %length_char_specs69 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %21, i64 3, i32 1, !dbg !2487
  %24 = bitcast %struct.format_length_info** %length_char_specs69 to i8**, !dbg !2488
  store i8* %call65, i8** %24, align 8, !dbg !2488
  %length_char_specs71 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %21, i64 2, i32 1, !dbg !2489
  %25 = bitcast %struct.format_length_info** %length_char_specs71 to i8**, !dbg !2490
  store i8* %call65, i8** %25, align 8, !dbg !2490
  %.pre6 = load %union.tree_node*, %union.tree_node** @init_dynamic_diag_info.hwi, align 8, !dbg !2491
  %26 = bitcast i8* %call65 to %struct.format_length_info*, !dbg !2493
  br label %if.end72, !dbg !2493

if.end72:                                         ; preds = %if.end62, %if.then64
  %27 = phi %struct.format_length_info* [ %20, %if.end62 ], [ %26, %if.then64 ]
  %28 = phi %union.tree_node* [ %19, %if.end62 ], [ %.pre6, %if.then64 ], !dbg !2491
  %tobool73 = icmp eq %union.tree_node* %28, null, !dbg !2491
  br i1 %tobool73, label %if.end88, label %if.then74, !dbg !2494

if.then74:                                        ; preds = %if.end72
  %call75 = tail call fastcc i32 @find_length_info_modifier_index(%struct.format_length_info* %27, i32 119) #8, !dbg !2495
  call void @llvm.dbg.value(metadata i32 %call75, metadata !1196, metadata !DIExpression()), !dbg !2497
  %29 = load %union.tree_node*, %union.tree_node** @init_dynamic_diag_info.hwi, align 8, !dbg !2498
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !2500
  %cmp76 = icmp eq %union.tree_node* %29, %30, !dbg !2501
  br i1 %cmp76, label %if.then77, label %if.else79, !dbg !2502

if.then77:                                        ; preds = %if.then74
  %31 = load %struct.format_length_info*, %struct.format_length_info** @init_dynamic_diag_info.diag_ls, align 8, !dbg !2503
  %idxprom = zext i32 %call75 to i64, !dbg !2503
  %index = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %31, i64 %idxprom, i32 1, !dbg !2504
  store i32 3, i32* %index, align 8, !dbg !2505
  br label %if.end88, !dbg !2503

if.else79:                                        ; preds = %if.then74
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !2506
  %cmp80 = icmp eq %union.tree_node* %29, %32, !dbg !2508
  br i1 %cmp80, label %if.then81, label %if.else85, !dbg !2509

if.then81:                                        ; preds = %if.else79
  %33 = load %struct.format_length_info*, %struct.format_length_info** @init_dynamic_diag_info.diag_ls, align 8, !dbg !2510
  %idxprom82 = zext i32 %call75 to i64, !dbg !2510
  %index84 = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %33, i64 %idxprom82, i32 1, !dbg !2511
  store i32 4, i32* %index84, align 8, !dbg !2512
  br label %if.end88, !dbg !2510

if.else85:                                        ; preds = %if.else79
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 2611, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2513
  br label %if.end88

if.end88:                                         ; preds = %if.end72, %if.then77, %if.else85, %if.then81
  %34 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.diag_fci, align 8, !dbg !2514
  %tobool89 = icmp eq %struct.format_char_info* %34, null, !dbg !2514
  br i1 %tobool89, label %if.then90, label %if.end93, !dbg !2516

if.then90:                                        ; preds = %if.end88
  %call91 = tail call i8* @xmemdup(i8* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @gcc_diag_char_table to i8*), i64 3280, i64 3280) #6, !dbg !2517
  store i8* %call91, i8** bitcast (%struct.format_char_info** @init_dynamic_diag_info.diag_fci to i8**), align 8, !dbg !2518
  %35 = load %struct.format_kind_info*, %struct.format_kind_info** @dynamic_format_types, align 8, !dbg !2519
  %conversion_specs = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %35, i64 2, i32 2, !dbg !2520
  %36 = bitcast %struct.format_char_info** %conversion_specs to i8**, !dbg !2521
  store i8* %call91, i8** %36, align 8, !dbg !2521
  %37 = bitcast i8* %call91 to %struct.format_char_info*, !dbg !2519
  br label %if.end93, !dbg !2519

if.end93:                                         ; preds = %if.end88, %if.then90
  %38 = phi %struct.format_char_info* [ %34, %if.end88 ], [ %37, %if.then90 ]
  %39 = load %union.tree_node*, %union.tree_node** @init_dynamic_diag_info.t, align 8, !dbg !2522
  %tobool94 = icmp eq %union.tree_node* %39, null, !dbg !2522
  br i1 %tobool94, label %if.end103, label %if.then95, !dbg !2524

if.then95:                                        ; preds = %if.end93
  %call96 = tail call fastcc i32 @find_char_info_specifier_index(%struct.format_char_info* %38, i32 75) #8, !dbg !2525
  call void @llvm.dbg.value(metadata i32 %call96, metadata !1196, metadata !DIExpression()), !dbg !2497
  %40 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.diag_fci, align 8, !dbg !2527
  %idxprom97 = zext i32 %call96 to i64, !dbg !2527
  %type100 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %40, i64 %idxprom97, i32 3, i64 0, i32 2, !dbg !2528
  store %union.tree_node** @init_dynamic_diag_info.t, %union.tree_node*** %type100, align 8, !dbg !2529
  %41 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.diag_fci, align 8, !dbg !2530
  %pointer_count = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %41, i64 %idxprom97, i32 1, !dbg !2531
  store i32 1, i32* %pointer_count, align 8, !dbg !2532
  br label %if.end103, !dbg !2533

if.end103:                                        ; preds = %if.end93, %if.then95
  %42 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.tdiag_fci, align 8, !dbg !2534
  %tobool104 = icmp eq %struct.format_char_info* %42, null, !dbg !2534
  br i1 %tobool104, label %if.then105, label %if.end109, !dbg !2536

if.then105:                                       ; preds = %if.end103
  %call106 = tail call i8* @xmemdup(i8* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @gcc_tdiag_char_table to i8*), i64 3280, i64 3280) #6, !dbg !2537
  store i8* %call106, i8** bitcast (%struct.format_char_info** @init_dynamic_diag_info.tdiag_fci to i8**), align 8, !dbg !2538
  %43 = load %struct.format_kind_info*, %struct.format_kind_info** @dynamic_format_types, align 8, !dbg !2539
  %conversion_specs108 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %43, i64 3, i32 2, !dbg !2540
  %44 = bitcast %struct.format_char_info** %conversion_specs108 to i8**, !dbg !2541
  store i8* %call106, i8** %44, align 8, !dbg !2541
  %45 = bitcast i8* %call106 to %struct.format_char_info*, !dbg !2539
  br label %if.end109, !dbg !2539

if.end109:                                        ; preds = %if.end103, %if.then105
  %46 = phi %struct.format_char_info* [ %42, %if.end103 ], [ %45, %if.then105 ]
  %47 = load %union.tree_node*, %union.tree_node** @init_dynamic_diag_info.t, align 8, !dbg !2542
  %tobool110 = icmp eq %union.tree_node* %47, null, !dbg !2542
  br i1 %tobool110, label %if.end130, label %if.then111, !dbg !2544

if.then111:                                       ; preds = %if.end109
  %call112 = tail call fastcc i32 @find_char_info_specifier_index(%struct.format_char_info* %46, i32 68) #8, !dbg !2545
  call void @llvm.dbg.value(metadata i32 %call112, metadata !1196, metadata !DIExpression()), !dbg !2497
  %48 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.tdiag_fci, align 8, !dbg !2547
  %idxprom113 = zext i32 %call112 to i64, !dbg !2547
  %type117 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %48, i64 %idxprom113, i32 3, i64 0, i32 2, !dbg !2548
  store %union.tree_node** @init_dynamic_diag_info.t, %union.tree_node*** %type117, align 8, !dbg !2549
  %49 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.tdiag_fci, align 8, !dbg !2550
  %pointer_count120 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %49, i64 %idxprom113, i32 1, !dbg !2551
  store i32 1, i32* %pointer_count120, align 8, !dbg !2552
  %50 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.tdiag_fci, align 8, !dbg !2553
  %call121 = tail call fastcc i32 @find_char_info_specifier_index(%struct.format_char_info* %50, i32 75) #8, !dbg !2554
  call void @llvm.dbg.value(metadata i32 %call121, metadata !1196, metadata !DIExpression()), !dbg !2497
  %51 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.tdiag_fci, align 8, !dbg !2555
  %idxprom122 = zext i32 %call121 to i64, !dbg !2555
  %type126 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %51, i64 %idxprom122, i32 3, i64 0, i32 2, !dbg !2556
  store %union.tree_node** @init_dynamic_diag_info.t, %union.tree_node*** %type126, align 8, !dbg !2557
  %52 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.tdiag_fci, align 8, !dbg !2558
  %pointer_count129 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %52, i64 %idxprom122, i32 1, !dbg !2559
  store i32 1, i32* %pointer_count129, align 8, !dbg !2560
  br label %if.end130, !dbg !2561

if.end130:                                        ; preds = %if.end109, %if.then111
  %53 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cdiag_fci, align 8, !dbg !2562
  %tobool131 = icmp eq %struct.format_char_info* %53, null, !dbg !2562
  br i1 %tobool131, label %if.then132, label %if.end136, !dbg !2564

if.then132:                                       ; preds = %if.end130
  %call133 = tail call i8* @xmemdup(i8* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @gcc_cdiag_char_table to i8*), i64 3280, i64 3280) #6, !dbg !2565
  store i8* %call133, i8** bitcast (%struct.format_char_info** @init_dynamic_diag_info.cdiag_fci to i8**), align 8, !dbg !2566
  %54 = load %struct.format_kind_info*, %struct.format_kind_info** @dynamic_format_types, align 8, !dbg !2567
  %conversion_specs135 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %54, i64 4, i32 2, !dbg !2568
  %55 = bitcast %struct.format_char_info** %conversion_specs135 to i8**, !dbg !2569
  store i8* %call133, i8** %55, align 8, !dbg !2569
  %56 = bitcast i8* %call133 to %struct.format_char_info*, !dbg !2567
  br label %if.end136, !dbg !2567

if.end136:                                        ; preds = %if.end130, %if.then132
  %57 = phi %struct.format_char_info* [ %53, %if.end130 ], [ %56, %if.then132 ]
  %58 = load %union.tree_node*, %union.tree_node** @init_dynamic_diag_info.t, align 8, !dbg !2570
  %tobool137 = icmp eq %union.tree_node* %58, null, !dbg !2570
  br i1 %tobool137, label %if.end157, label %if.then138, !dbg !2572

if.then138:                                       ; preds = %if.end136
  %call139 = tail call fastcc i32 @find_char_info_specifier_index(%struct.format_char_info* %57, i32 68) #8, !dbg !2573
  call void @llvm.dbg.value(metadata i32 %call139, metadata !1196, metadata !DIExpression()), !dbg !2497
  %59 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cdiag_fci, align 8, !dbg !2575
  %idxprom140 = zext i32 %call139 to i64, !dbg !2575
  %type144 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %59, i64 %idxprom140, i32 3, i64 0, i32 2, !dbg !2576
  store %union.tree_node** @init_dynamic_diag_info.t, %union.tree_node*** %type144, align 8, !dbg !2577
  %60 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cdiag_fci, align 8, !dbg !2578
  %pointer_count147 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %60, i64 %idxprom140, i32 1, !dbg !2579
  store i32 1, i32* %pointer_count147, align 8, !dbg !2580
  %61 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cdiag_fci, align 8, !dbg !2581
  %call148 = tail call fastcc i32 @find_char_info_specifier_index(%struct.format_char_info* %61, i32 75) #8, !dbg !2582
  call void @llvm.dbg.value(metadata i32 %call148, metadata !1196, metadata !DIExpression()), !dbg !2497
  %62 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cdiag_fci, align 8, !dbg !2583
  %idxprom149 = zext i32 %call148 to i64, !dbg !2583
  %type153 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %62, i64 %idxprom149, i32 3, i64 0, i32 2, !dbg !2584
  store %union.tree_node** @init_dynamic_diag_info.t, %union.tree_node*** %type153, align 8, !dbg !2585
  %63 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cdiag_fci, align 8, !dbg !2586
  %pointer_count156 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %63, i64 %idxprom149, i32 1, !dbg !2587
  store i32 1, i32* %pointer_count156, align 8, !dbg !2588
  br label %if.end157, !dbg !2589

if.end157:                                        ; preds = %if.end136, %if.then138
  %64 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cxxdiag_fci, align 8, !dbg !2590
  %tobool158 = icmp eq %struct.format_char_info* %64, null, !dbg !2590
  br i1 %tobool158, label %if.then159, label %if.end163, !dbg !2592

if.then159:                                       ; preds = %if.end157
  %call160 = tail call i8* @xmemdup(i8* bitcast (<{ %struct.format_char_info, %struct.format_char_info, %struct.format_char_info, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, { i8*, i32, i32, <{ %struct.format_type_detail, [11 x %struct.format_type_detail] }>, i8*, i8*, %struct.format_char_info* }, %struct.format_char_info }>* @gcc_cxxdiag_char_table to i8*), i64 3608, i64 3608) #6, !dbg !2593
  store i8* %call160, i8** bitcast (%struct.format_char_info** @init_dynamic_diag_info.cxxdiag_fci to i8**), align 8, !dbg !2594
  %65 = load %struct.format_kind_info*, %struct.format_kind_info** @dynamic_format_types, align 8, !dbg !2595
  %conversion_specs162 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %65, i64 5, i32 2, !dbg !2596
  %66 = bitcast %struct.format_char_info** %conversion_specs162 to i8**, !dbg !2597
  store i8* %call160, i8** %66, align 8, !dbg !2597
  %67 = bitcast i8* %call160 to %struct.format_char_info*, !dbg !2595
  br label %if.end163, !dbg !2595

if.end163:                                        ; preds = %if.end157, %if.then159
  %68 = phi %struct.format_char_info* [ %64, %if.end157 ], [ %67, %if.then159 ]
  %69 = load %union.tree_node*, %union.tree_node** @init_dynamic_diag_info.t, align 8, !dbg !2598
  %tobool164 = icmp eq %union.tree_node* %69, null, !dbg !2598
  br i1 %tobool164, label %if.end185, label %if.then165, !dbg !2600

if.then165:                                       ; preds = %if.end163
  %call166 = tail call fastcc i32 @find_char_info_specifier_index(%struct.format_char_info* %68, i32 68) #8, !dbg !2601
  call void @llvm.dbg.value(metadata i32 %call166, metadata !1196, metadata !DIExpression()), !dbg !2497
  %70 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cxxdiag_fci, align 8, !dbg !2603
  %idxprom167 = zext i32 %call166 to i64, !dbg !2603
  %type171 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %70, i64 %idxprom167, i32 3, i64 0, i32 2, !dbg !2604
  store %union.tree_node** @init_dynamic_diag_info.t, %union.tree_node*** %type171, align 8, !dbg !2605
  %71 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cxxdiag_fci, align 8, !dbg !2606
  %pointer_count174 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %71, i64 %idxprom167, i32 1, !dbg !2607
  store i32 1, i32* %pointer_count174, align 8, !dbg !2608
  %72 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cxxdiag_fci, align 8, !dbg !2609
  %call175 = tail call fastcc i32 @find_char_info_specifier_index(%struct.format_char_info* %72, i32 75) #8, !dbg !2610
  call void @llvm.dbg.value(metadata i32 %call175, metadata !1196, metadata !DIExpression()), !dbg !2497
  %73 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cxxdiag_fci, align 8, !dbg !2611
  %idxprom176 = zext i32 %call175 to i64, !dbg !2611
  %type180 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %73, i64 %idxprom176, i32 3, i64 0, i32 2, !dbg !2612
  store %union.tree_node** @init_dynamic_diag_info.t, %union.tree_node*** %type180, align 8, !dbg !2613
  %74 = load %struct.format_char_info*, %struct.format_char_info** @init_dynamic_diag_info.cxxdiag_fci, align 8, !dbg !2614
  %pointer_count183 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %74, i64 %idxprom176, i32 1, !dbg !2615
  store i32 1, i32* %pointer_count183, align 8, !dbg !2616
  br label %if.end185, !dbg !2617

if.end185:                                        ; preds = %if.end163, %if.then165, %entry
  ret void, !dbg !2618
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i8* @convert_format_name_to_system_name(i8* %attr_name) unnamed_addr #5 !dbg !2619 {
entry:
  call void @llvm.dbg.value(metadata i8* %attr_name, metadata !2623, metadata !DIExpression()), !dbg !2625
  %cmp = icmp eq i8* %attr_name, null, !dbg !2626
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !2628

lor.lhs.false:                                    ; preds = %entry
  %0 = load i8, i8* %attr_name, align 1, !dbg !2629
  %cmp1 = icmp eq i8 %0, 0, !dbg !2630
  br i1 %cmp1, label %cleanup, label %lor.lhs.false3, !dbg !2631

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call = tail call i32 @strncmp(i8* nonnull %attr_name, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i64 4) #6, !dbg !2632
  %cmp4 = icmp eq i32 %call, 0, !dbg !2633
  br i1 %cmp4, label %cleanup, label %for.cond.preheader, !dbg !2634

for.cond.preheader:                               ; preds = %lor.lhs.false3
  br label %for.cond, !dbg !2635

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !2637
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2624, metadata !DIExpression()), !dbg !2625
  %cmp6 = icmp eq i64 %indvars.iv, 4, !dbg !2638
  br i1 %cmp6, label %cleanup.loopexit, label %for.body, !dbg !2635

for.body:                                         ; preds = %for.cond
  %named_attr_src10 = getelementptr inbounds [5 x %struct.target_ovr_attr], [5 x %struct.target_ovr_attr]* @gnu_target_overrides_format_attributes, i64 0, i64 %indvars.iv, i32 0, !dbg !2640
  %1 = load i8*, i8** %named_attr_src10, align 16, !dbg !2640
  %call11 = tail call fastcc zeroext i8 @cmp_attribs(i8* %1, i8* nonnull %attr_name) #8, !dbg !2643
  %tobool = icmp eq i8 %call11, 0, !dbg !2643
  br i1 %tobool, label %if.end13, label %cleanup.loopexit, !dbg !2644

if.end13:                                         ; preds = %for.body
  %named_attr_dst = getelementptr inbounds [5 x %struct.target_ovr_attr], [5 x %struct.target_ovr_attr]* @gnu_target_overrides_format_attributes, i64 0, i64 %indvars.iv, i32 1, !dbg !2645
  %2 = load i8*, i8** %named_attr_dst, align 8, !dbg !2645
  %call16 = tail call fastcc zeroext i8 @cmp_attribs(i8* %2, i8* nonnull %attr_name) #8, !dbg !2647
  %tobool17 = icmp eq i8 %call16, 0, !dbg !2647
  br i1 %tobool17, label %for.inc, label %if.then18, !dbg !2648

if.then18:                                        ; preds = %if.end13
  %.lcssa = phi i8* [ %1, %if.end13 ], !dbg !2640
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2624, metadata !DIExpression()), !dbg !2625
  br label %cleanup, !dbg !2649

for.inc:                                          ; preds = %if.end13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2650
  call void @llvm.dbg.value(metadata i32 undef, metadata !2624, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2625
  br label %for.cond, !dbg !2651, !llvm.loop !2652

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  br label %cleanup, !dbg !2654

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %lor.lhs.false, %lor.lhs.false3, %if.then18
  %retval.0 = phi i8* [ %.lcssa, %if.then18 ], [ %attr_name, %lor.lhs.false3 ], [ %attr_name, %lor.lhs.false ], [ null, %entry ], [ %attr_name, %cleanup.loopexit ], !dbg !2625
  ret i8* %retval.0, !dbg !2654
}

declare dso_local i32 @strncmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cmp_attribs(i8* %tattr_name, i8* %attr_name) unnamed_addr #5 !dbg !2655 {
entry:
  call void @llvm.dbg.value(metadata i8* %tattr_name, metadata !2659, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.value(metadata i8* %attr_name, metadata !2660, metadata !DIExpression()), !dbg !2663
  %call = tail call i64 @strlen(i8* %attr_name) #6, !dbg !2664
  %conv = trunc i64 %call to i32, !dbg !2664
  call void @llvm.dbg.value(metadata i32 %conv, metadata !2661, metadata !DIExpression()), !dbg !2663
  %tobool = icmp eq i8* %tattr_name, null, !dbg !2665
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2665

cond.true:                                        ; preds = %entry
  %call1 = tail call i64 @strlen(i8* nonnull %tattr_name) #6, !dbg !2666
  %phitmp = trunc i64 %call1 to i32, !dbg !2665
  br label %cond.end, !dbg !2665

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %phitmp, %cond.true ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i32 %cond, metadata !2662, metadata !DIExpression()), !dbg !2663
  %cmp = icmp sgt i32 %conv, 4, !dbg !2667
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2669

land.lhs.true:                                    ; preds = %cond.end
  %0 = load i8, i8* %attr_name, align 1, !dbg !2670
  %cmp5 = icmp eq i8 %0, 95, !dbg !2671
  br i1 %cmp5, label %land.lhs.true7, label %if.end, !dbg !2672

land.lhs.true7:                                   ; preds = %land.lhs.true
  %arrayidx8 = getelementptr inbounds i8, i8* %attr_name, i64 1, !dbg !2673
  %1 = load i8, i8* %arrayidx8, align 1, !dbg !2673
  %cmp10 = icmp eq i8 %1, 95, !dbg !2674
  br i1 %cmp10, label %land.lhs.true12, label %if.end, !dbg !2675

land.lhs.true12:                                  ; preds = %land.lhs.true7
  %sub = shl i64 %call, 32, !dbg !2676
  %sext = add i64 %sub, -4294967296, !dbg !2676
  %idxprom = ashr exact i64 %sext, 32, !dbg !2676
  %arrayidx13 = getelementptr inbounds i8, i8* %attr_name, i64 %idxprom, !dbg !2676
  %2 = load i8, i8* %arrayidx13, align 1, !dbg !2676
  %cmp15 = icmp eq i8 %2, 95, !dbg !2677
  br i1 %cmp15, label %land.lhs.true17, label %if.end, !dbg !2678

land.lhs.true17:                                  ; preds = %land.lhs.true12
  %sext1 = add i64 %sub, -8589934592, !dbg !2679
  %idxprom19 = ashr exact i64 %sext1, 32, !dbg !2679
  %arrayidx20 = getelementptr inbounds i8, i8* %attr_name, i64 %idxprom19, !dbg !2679
  %3 = load i8, i8* %arrayidx20, align 1, !dbg !2679
  %cmp22 = icmp eq i8 %3, 95, !dbg !2680
  br i1 %cmp22, label %if.then, label %if.end, !dbg !2681

if.then:                                          ; preds = %land.lhs.true17
  %add.ptr = getelementptr inbounds i8, i8* %attr_name, i64 2, !dbg !2682
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2660, metadata !DIExpression()), !dbg !2663
  %sub24 = add nsw i32 %conv, -4, !dbg !2684
  call void @llvm.dbg.value(metadata i32 %sub24, metadata !2661, metadata !DIExpression()), !dbg !2663
  br label %if.end, !dbg !2685

if.end:                                           ; preds = %if.then, %land.lhs.true17, %land.lhs.true12, %land.lhs.true7, %land.lhs.true, %cond.end
  %alen.0 = phi i32 [ %sub24, %if.then ], [ %conv, %land.lhs.true17 ], [ %conv, %land.lhs.true12 ], [ %conv, %land.lhs.true7 ], [ %conv, %land.lhs.true ], [ %conv, %cond.end ], !dbg !2663
  %attr_name.addr.0 = phi i8* [ %add.ptr, %if.then ], [ %attr_name, %land.lhs.true17 ], [ %attr_name, %land.lhs.true12 ], [ %attr_name, %land.lhs.true7 ], [ %attr_name, %land.lhs.true ], [ %attr_name, %cond.end ]
  call void @llvm.dbg.value(metadata i8* %attr_name.addr.0, metadata !2660, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.value(metadata i32 %alen.0, metadata !2661, metadata !DIExpression()), !dbg !2663
  %cmp25 = icmp eq i32 %alen.0, %cond, !dbg !2686
  br i1 %cmp25, label %lor.lhs.false, label %cleanup, !dbg !2688

lor.lhs.false:                                    ; preds = %if.end
  %conv27 = sext i32 %cond to i64, !dbg !2689
  %call28 = tail call i32 @strncmp(i8* %tattr_name, i8* %attr_name.addr.0, i64 %conv27) #6, !dbg !2690
  %cmp29 = icmp eq i32 %call28, 0, !dbg !2691
  %spec.select = zext i1 %cmp29 to i8, !dbg !2692
  ret i8 %spec.select, !dbg !2692

cleanup:                                          ; preds = %if.end
  ret i8 0, !dbg !2693
}

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

declare dso_local void @check_function_arguments_recurse(void (i8*, %union.tree_node*, i64)*, i8*, %union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @check_format_arg(i8* %ctx, %union.tree_node* %format_tree, i64 %arg_num) #5 !dbg !2694 {
entry:
  call void @llvm.dbg.value(metadata i8* %ctx, metadata !2698, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* %format_tree, metadata !2699, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i64 %arg_num, metadata !2700, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i8* %ctx, metadata !2701, metadata !DIExpression()), !dbg !2741
  %res1 = bitcast i8* %ctx to %struct.format_check_results**, !dbg !2742
  %0 = load %struct.format_check_results*, %struct.format_check_results** %res1, align 8, !dbg !2742
  call void @llvm.dbg.value(metadata %struct.format_check_results* %0, metadata !2702, metadata !DIExpression()), !dbg !2741
  %info2 = getelementptr inbounds i8, i8* %ctx, i64 8, !dbg !2743
  %1 = bitcast i8* %info2 to %struct.function_format_info**, !dbg !2743
  %2 = load %struct.function_format_info*, %struct.function_format_info** %1, align 8, !dbg !2743
  call void @llvm.dbg.value(metadata %struct.function_format_info* %2, metadata !2703, metadata !DIExpression()), !dbg !2741
  %params3 = getelementptr inbounds i8, i8* %ctx, i64 16, !dbg !2744
  %3 = bitcast i8* %params3 to %union.tree_node**, !dbg !2744
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !2744
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !2704, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2708, metadata !DIExpression()), !dbg !2741
  %call = tail call i32 @integer_zerop(%union.tree_node* %format_tree) #6, !dbg !2745
  %tobool = icmp eq i32 %call, 0, !dbg !2745
  br i1 %tobool, label %if.end11, label %while.cond.preheader, !dbg !2747

while.cond.preheader:                             ; preds = %entry
  %first_arg_num = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %2, i64 0, i32 2, !dbg !2748
  %5 = load i64, i64* %first_arg_num, align 8, !dbg !2748
  br label %while.cond, !dbg !2750

while.cond:                                       ; preds = %while.cond.preheader, %if.end
  %params.0 = phi %union.tree_node* [ %6, %if.end ], [ %4, %while.cond.preheader ], !dbg !2741
  %arg_num.addr.0 = phi i64 [ %add, %if.end ], [ %arg_num, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.0, metadata !2700, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* %params.0, metadata !2704, metadata !DIExpression()), !dbg !2741
  %add = add i64 %arg_num.addr.0, 1, !dbg !2751
  %cmp = icmp ult i64 %add, %5, !dbg !2752
  %cmp4 = icmp eq %union.tree_node* %params.0, null, !dbg !2748
  br i1 %cmp, label %while.body, label %while.end, !dbg !2750

while.body:                                       ; preds = %while.cond
  br i1 %cmp4, label %cleanup.cont194.loopexit12, label %if.end, !dbg !2753

if.end:                                           ; preds = %while.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %params.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2755
  %6 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !2755
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !2704, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i64 %add, metadata !2700, metadata !DIExpression()), !dbg !2741
  br label %while.cond, !dbg !2750, !llvm.loop !2756

while.end:                                        ; preds = %while.cond
  %cmp4.lcssa = phi i1 [ %cmp4, %while.cond ], !dbg !2748
  br i1 %cmp4.lcssa, label %if.then7, label %if.else, !dbg !2758

if.then7:                                         ; preds = %while.end
  %number_other = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 6, !dbg !2759
  %7 = load i32, i32* %number_other, align 4, !dbg !2761
  %inc8 = add nsw i32 %7, 1, !dbg !2761
  store i32 %inc8, i32* %number_other, align 4, !dbg !2761
  br label %cleanup.cont194, !dbg !2762

if.else:                                          ; preds = %while.end
  %number_extra_args = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 1, !dbg !2763
  %8 = load i32, i32* %number_extra_args, align 4, !dbg !2764
  %inc9 = add nsw i32 %8, 1, !dbg !2764
  store i32 %inc9, i32* %number_extra_args, align 4, !dbg !2764
  br label %cleanup.cont194

if.end11:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !2706, metadata !DIExpression()), !dbg !2741
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2765
  %bf.load = load i64, i64* %9, align 8, !dbg !2765
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !2766
  %cmp12 = icmp eq i64 %bf.cast2, 66, !dbg !2766
  br i1 %cmp12, label %if.then13, label %if.end37, !dbg !2767

if.then13:                                        ; preds = %if.end11
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2768
  %10 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !2768
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !2732, metadata !DIExpression()), !dbg !2769
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !2770
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx16, align 8, !dbg !2770
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !2735, metadata !DIExpression()), !dbg !2769
  %call17 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %10) #6, !dbg !2771
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !2732, metadata !DIExpression()), !dbg !2769
  %call18 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %11) #6, !dbg !2772
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !2735, metadata !DIExpression()), !dbg !2769
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2773
  %bf.load20 = load i64, i64* %12, align 8, !dbg !2773
  %bf.cast2211 = and i64 %bf.load20, 65535, !dbg !2775
  %cmp23 = icmp eq i64 %bf.cast2211, 23, !dbg !2775
  br i1 %cmp23, label %if.end27, label %if.else25, !dbg !2776

if.else25:                                        ; preds = %if.then13
  %number_non_literal = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 0, !dbg !2777
  %13 = load i32, i32* %number_non_literal, align 4, !dbg !2779
  %inc26 = add nsw i32 %13, 1, !dbg !2779
  store i32 %inc26, i32* %number_non_literal, align 4, !dbg !2779
  br label %cleanup, !dbg !2780

if.end27:                                         ; preds = %if.then13
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !2699, metadata !DIExpression()), !dbg !2741
  %call28 = tail call i32 @host_integerp(%union.tree_node* %call18, i32 0) #6, !dbg !2781
  %tobool29 = icmp eq i32 %call28, 0, !dbg !2781
  br i1 %tobool29, label %if.then32, label %lor.lhs.false, !dbg !2783

lor.lhs.false:                                    ; preds = %if.end27
  %call30 = tail call i64 @tree_low_cst(%union.tree_node* %call18, i32 0) #6, !dbg !2784
  call void @llvm.dbg.value(metadata i64 %call30, metadata !2706, metadata !DIExpression()), !dbg !2741
  %cmp31 = icmp slt i64 %call30, 0, !dbg !2785
  br i1 %cmp31, label %if.then32, label %cleanup, !dbg !2786

if.then32:                                        ; preds = %if.end27, %lor.lhs.false
  %offset.0 = phi i64 [ %call30, %lor.lhs.false ], [ 0, %if.end27 ], !dbg !2741
  call void @llvm.dbg.value(metadata i64 %offset.0, metadata !2706, metadata !DIExpression()), !dbg !2741
  %number_non_literal33 = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 0, !dbg !2787
  %14 = load i32, i32* %number_non_literal33, align 4, !dbg !2789
  %inc34 = add nsw i32 %14, 1, !dbg !2789
  store i32 %inc34, i32* %number_non_literal33, align 4, !dbg !2789
  br label %cleanup, !dbg !2790

cleanup:                                          ; preds = %lor.lhs.false, %if.then32, %if.else25
  %offset.1 = phi i64 [ %offset.0, %if.then32 ], [ 0, %if.else25 ], [ %call30, %lor.lhs.false ], !dbg !2741
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then32 ], [ false, %if.else25 ], [ true, %lor.lhs.false ]
  %format_tree.addr.0 = phi %union.tree_node* [ %call17, %if.then32 ], [ %format_tree, %if.else25 ], [ %call17, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %union.tree_node* %format_tree.addr.0, metadata !2699, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i64 %offset.1, metadata !2706, metadata !DIExpression()), !dbg !2741
  br i1 %cleanup.dest.slot.0, label %cleanup.if.end37_crit_edge, label %cleanup.cont194

cleanup.if.end37_crit_edge:                       ; preds = %cleanup
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2791
  %bf.load39.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !2793
  br label %if.end37

if.end37:                                         ; preds = %cleanup.if.end37_crit_edge, %if.end11
  %bf.load39 = phi i64 [ %bf.load, %if.end11 ], [ %bf.load39.pre, %cleanup.if.end37_crit_edge ], !dbg !2793
  %offset.2 = phi i64 [ 0, %if.end11 ], [ %offset.1, %cleanup.if.end37_crit_edge ], !dbg !2741
  %format_tree.addr.1 = phi %union.tree_node* [ %format_tree, %if.end11 ], [ %format_tree.addr.0, %cleanup.if.end37_crit_edge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %format_tree.addr.1, metadata !2699, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i64 %offset.2, metadata !2706, metadata !DIExpression()), !dbg !2741
  %bf.cast413 = and i64 %bf.load39, 65535, !dbg !2794
  %cmp42 = icmp eq i64 %bf.cast413, 121, !dbg !2794
  br i1 %cmp42, label %if.end46, label %if.then43, !dbg !2795

if.then43:                                        ; preds = %if.end37
  %number_non_literal44 = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 0, !dbg !2796
  %15 = load i32, i32* %number_non_literal44, align 4, !dbg !2798
  %inc45 = add nsw i32 %15, 1, !dbg !2798
  store i32 %inc45, i32* %number_non_literal44, align 4, !dbg !2798
  br label %cleanup.cont194, !dbg !2799

if.end46:                                         ; preds = %if.end37
  %operands48 = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2800
  %16 = load %union.tree_node*, %union.tree_node** %operands48, align 8, !dbg !2800
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !2699, metadata !DIExpression()), !dbg !2741
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2801
  %bf.load51 = load i64, i64* %17, align 8, !dbg !2801
  %bf.cast534 = and i64 %bf.load51, 65535, !dbg !2803
  %cmp54 = icmp eq i64 %bf.cast534, 45, !dbg !2803
  br i1 %cmp54, label %land.lhs.true, label %if.end71, !dbg !2804

land.lhs.true:                                    ; preds = %if.end46
  %operands56 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2805
  %arrayidx57 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands56, i64 1, !dbg !2805
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx57, align 8, !dbg !2805
  %call58 = tail call i32 @host_integerp(%union.tree_node* %18, i32 0) #6, !dbg !2806
  %tobool59 = icmp eq i32 %call58, 0, !dbg !2806
  br i1 %tobool59, label %if.end71, label %land.lhs.true60, !dbg !2807

land.lhs.true60:                                  ; preds = %land.lhs.true
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx57, align 8, !dbg !2808
  %call64 = tail call i64 @tree_low_cst(%union.tree_node* %19, i32 0) #6, !dbg !2809
  %add65 = add nsw i64 %offset.2, %call64, !dbg !2810
  call void @llvm.dbg.value(metadata i64 %add65, metadata !2706, metadata !DIExpression()), !dbg !2741
  %cmp66 = icmp sgt i64 %add65, -1, !dbg !2811
  br i1 %cmp66, label %if.then67, label %if.end71, !dbg !2812

if.then67:                                        ; preds = %land.lhs.true60
  %20 = load %union.tree_node*, %union.tree_node** %operands56, align 8, !dbg !2813
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !2699, metadata !DIExpression()), !dbg !2741
  br label %if.end71, !dbg !2814

if.end71:                                         ; preds = %land.lhs.true, %if.then67, %land.lhs.true60, %if.end46
  %offset.3 = phi i64 [ %add65, %if.then67 ], [ %add65, %land.lhs.true60 ], [ %offset.2, %land.lhs.true ], [ %offset.2, %if.end46 ], !dbg !2741
  %format_tree.addr.2 = phi %union.tree_node* [ %20, %if.then67 ], [ %16, %land.lhs.true60 ], [ %16, %land.lhs.true ], [ %16, %if.end46 ], !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* %format_tree.addr.2, metadata !2699, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i64 %offset.3, metadata !2706, metadata !DIExpression()), !dbg !2741
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2815
  %bf.load73 = load i64, i64* %21, align 8, !dbg !2815
  %bf.cast755 = and i64 %bf.load73, 65535, !dbg !2817
  %cmp76 = icmp eq i64 %bf.cast755, 32, !dbg !2817
  br i1 %cmp76, label %land.lhs.true77, label %if.end94, !dbg !2818

land.lhs.true77:                                  ; preds = %if.end71
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2819
  %22 = bitcast %union.tree_node** %type to i64**, !dbg !2819
  %23 = load i64*, i64** %22, align 8, !dbg !2819
  %bf.load80 = load i64, i64* %23, align 8, !dbg !2819
  %bf.cast829 = and i64 %bf.load80, 65535, !dbg !2820
  %cmp83 = icmp eq i64 %bf.cast829, 15, !dbg !2820
  br i1 %cmp83, label %land.lhs.true84, label %if.end94, !dbg !2821

land.lhs.true84:                                  ; preds = %land.lhs.true77
  %call85 = tail call %union.tree_node* @decl_constant_value(%union.tree_node* %format_tree.addr.2) #6, !dbg !2822
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !2709, metadata !DIExpression()), !dbg !2741
  %cmp86 = icmp eq %union.tree_node* %call85, %format_tree.addr.2, !dbg !2823
  br i1 %cmp86, label %if.end94, label %land.lhs.true87, !dbg !2824

land.lhs.true87:                                  ; preds = %land.lhs.true84
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2825
  %bf.load89 = load i64, i64* %24, align 8, !dbg !2825
  %bf.cast9110 = and i64 %bf.load89, 65535, !dbg !2826
  %cmp92 = icmp eq i64 %bf.cast9110, 28, !dbg !2826
  br i1 %cmp92, label %if.then93, label %if.end94, !dbg !2827

if.then93:                                        ; preds = %land.lhs.true87
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2828
  %25 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !2828
  %26 = bitcast %union.tree_node* %25 to %struct.tree_int_cst*, !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !2708, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !2699, metadata !DIExpression()), !dbg !2741
  br label %if.end94, !dbg !2830

if.end94:                                         ; preds = %land.lhs.true84, %if.then93, %land.lhs.true87, %land.lhs.true77, %if.end71
  %27 = phi %struct.tree_int_cst* [ %26, %if.then93 ], [ null, %land.lhs.true87 ], [ null, %land.lhs.true84 ], [ null, %land.lhs.true77 ], [ null, %if.end71 ], !dbg !2741
  %array_size.0 = phi %union.tree_node* [ %25, %if.then93 ], [ null, %land.lhs.true87 ], [ null, %land.lhs.true84 ], [ null, %land.lhs.true77 ], [ null, %if.end71 ], !dbg !2741
  %format_tree.addr.3 = phi %union.tree_node* [ %call85, %if.then93 ], [ %format_tree.addr.2, %land.lhs.true87 ], [ %format_tree.addr.2, %land.lhs.true84 ], [ %format_tree.addr.2, %land.lhs.true77 ], [ %format_tree.addr.2, %if.end71 ], !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* %format_tree.addr.3, metadata !2699, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* %array_size.0, metadata !2708, metadata !DIExpression()), !dbg !2741
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree.addr.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2831
  %bf.load96 = load i64, i64* %28, align 8, !dbg !2831
  %bf.cast986 = and i64 %bf.load96, 65535, !dbg !2833
  %cmp99 = icmp eq i64 %bf.cast986, 28, !dbg !2833
  br i1 %cmp99, label %if.end103, label %if.then100, !dbg !2834

if.then100:                                       ; preds = %if.end94
  %number_non_literal101 = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 0, !dbg !2835
  %29 = load i32, i32* %number_non_literal101, align 4, !dbg !2837
  %inc102 = add nsw i32 %29, 1, !dbg !2837
  store i32 %inc102, i32* %number_non_literal101, align 4, !dbg !2837
  br label %cleanup.cont194, !dbg !2838

if.end103:                                        ; preds = %if.end94
  %type105 = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree.addr.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2839
  %30 = bitcast %union.tree_node** %type105 to %struct.tree_common**, !dbg !2839
  %31 = load %struct.tree_common*, %struct.tree_common** %30, align 8, !dbg !2839
  %type107 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %31, i64 0, i32 2, !dbg !2839
  %32 = bitcast %union.tree_node** %type107 to %struct.tree_type**, !dbg !2839
  %33 = load %struct.tree_type*, %struct.tree_type** %32, align 8, !dbg !2839
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %33, i64 0, i32 16, !dbg !2839
  %34 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !2839
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !2841
  %cmp109 = icmp eq %union.tree_node* %34, %35, !dbg !2842
  br i1 %cmp109, label %if.end112, label %if.then110, !dbg !2843

if.then110:                                       ; preds = %if.end103
  %number_wide = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 3, !dbg !2844
  %36 = load i32, i32* %number_wide, align 4, !dbg !2846
  %inc111 = add nsw i32 %36, 1, !dbg !2846
  store i32 %inc111, i32* %number_wide, align 4, !dbg !2846
  br label %cleanup.cont194, !dbg !2847

if.end112:                                        ; preds = %if.end103
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree.addr.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2848
  %arraydecay = bitcast i32* %str to i8*, !dbg !2848
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !2707, metadata !DIExpression()), !dbg !2741
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %format_tree.addr.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2849
  %38 = load i32, i32* %37, align 8, !dbg !2849
  call void @llvm.dbg.value(metadata i32 %38, metadata !2705, metadata !DIExpression()), !dbg !2741
  %cmp114 = icmp eq %union.tree_node* %array_size.0, null, !dbg !2850
  br i1 %cmp114, label %if.end138, label %if.then115, !dbg !2851

if.then115:                                       ; preds = %if.end112
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %array_size.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2852
  %bf.load117 = load i64, i64* %39, align 8, !dbg !2852
  %bf.cast1198 = and i64 %bf.load117, 65535, !dbg !2852
  %cmp120 = icmp eq i64 %bf.cast1198, 23, !dbg !2852
  br i1 %cmp120, label %cond.end, label %cond.true, !dbg !2852

cond.true:                                        ; preds = %if.then115
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 1383, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2852
  br label %cond.end, !dbg !2852

cond.end:                                         ; preds = %if.then115, %cond.true
  %call121 = tail call i32 @host_integerp(%union.tree_node* nonnull %array_size.0, i32 0) #6, !dbg !2853
  %tobool122 = icmp eq i32 %call121, 0, !dbg !2853
  br i1 %tobool122, label %if.end138, label %if.then123, !dbg !2854

if.then123:                                       ; preds = %cond.end
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %27, i64 0, i32 1, i32 0, !dbg !2855
  %40 = load i64, i64* %low, align 8, !dbg !2855
  call void @llvm.dbg.value(metadata i64 %40, metadata !2736, metadata !DIExpression()), !dbg !2856
  %cmp125 = icmp sgt i64 %40, 0, !dbg !2857
  br i1 %cmp125, label %land.lhs.true126, label %if.end138, !dbg !2859

land.lhs.true126:                                 ; preds = %if.then123
  %41 = add i64 %40, 2147483648, !dbg !2860
  %42 = icmp ult i64 %41, 4294967296, !dbg !2860
  %conv131 = sext i32 %38 to i64, !dbg !2861
  %cmp132 = icmp slt i64 %40, %conv131, !dbg !2862
  %or.cond = and i1 %42, %cmp132, !dbg !2863
  %conv135 = trunc i64 %40 to i32, !dbg !2864
  %spec.select = select i1 %or.cond, i32 %conv135, i32 %38, !dbg !2863
  br label %if.end138, !dbg !2863

if.end138:                                        ; preds = %cond.end, %if.end112, %land.lhs.true126, %if.then123
  %format_length.2 = phi i32 [ %38, %if.end112 ], [ %38, %cond.end ], [ %38, %if.then123 ], [ %spec.select, %land.lhs.true126 ], !dbg !2741
  call void @llvm.dbg.value(metadata i32 %format_length.2, metadata !2705, metadata !DIExpression()), !dbg !2741
  %tobool139 = icmp eq i64 %offset.3, 0, !dbg !2865
  br i1 %tobool139, label %if.end150, label %if.then140, !dbg !2867

if.then140:                                       ; preds = %if.end138
  %conv141 = sext i32 %format_length.2 to i64, !dbg !2868
  %cmp142 = icmp slt i64 %offset.3, %conv141, !dbg !2871
  br i1 %cmp142, label %if.end147, label %if.then144, !dbg !2872

if.then144:                                       ; preds = %if.then140
  %number_non_literal145 = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 0, !dbg !2873
  %43 = load i32, i32* %number_non_literal145, align 4, !dbg !2875
  %inc146 = add nsw i32 %43, 1, !dbg !2875
  store i32 %inc146, i32* %number_non_literal145, align 4, !dbg !2875
  br label %cleanup.cont194, !dbg !2876

if.end147:                                        ; preds = %if.then140
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 %offset.3, !dbg !2877
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2707, metadata !DIExpression()), !dbg !2741
  %44 = trunc i64 %offset.3 to i32, !dbg !2878
  %conv149 = sub i32 %format_length.2, %44, !dbg !2878
  call void @llvm.dbg.value(metadata i32 %conv149, metadata !2705, metadata !DIExpression()), !dbg !2741
  br label %if.end150, !dbg !2879

if.end150:                                        ; preds = %if.end138, %if.end147
  %format_chars.0 = phi i8* [ %add.ptr, %if.end147 ], [ %arraydecay, %if.end138 ], !dbg !2741
  %format_length.3 = phi i32 [ %conv149, %if.end147 ], [ %format_length.2, %if.end138 ], !dbg !2741
  call void @llvm.dbg.value(metadata i32 %format_length.3, metadata !2705, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i8* %format_chars.0, metadata !2707, metadata !DIExpression()), !dbg !2741
  %cmp151 = icmp slt i32 %format_length.3, 1, !dbg !2880
  br i1 %cmp151, label %if.then158, label %lor.lhs.false153, !dbg !2882

lor.lhs.false153:                                 ; preds = %if.end150
  %dec = add nsw i32 %format_length.3, -1, !dbg !2883
  call void @llvm.dbg.value(metadata i32 %dec, metadata !2705, metadata !DIExpression()), !dbg !2741
  %idxprom = sext i32 %dec to i64, !dbg !2884
  %arrayidx154 = getelementptr inbounds i8, i8* %format_chars.0, i64 %idxprom, !dbg !2884
  %45 = load i8, i8* %arrayidx154, align 1, !dbg !2884
  %cmp156 = icmp eq i8 %45, 0, !dbg !2885
  br i1 %cmp156, label %if.end160, label %if.then158, !dbg !2886

if.then158:                                       ; preds = %lor.lhs.false153, %if.end150
  %number_unterminated = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 5, !dbg !2887
  %46 = load i32, i32* %number_unterminated, align 4, !dbg !2889
  %inc159 = add nsw i32 %46, 1, !dbg !2889
  store i32 %inc159, i32* %number_unterminated, align 4, !dbg !2889
  br label %cleanup.cont194, !dbg !2890

if.end160:                                        ; preds = %lor.lhs.false153
  %cmp161 = icmp eq i32 %dec, 0, !dbg !2891
  br i1 %cmp161, label %if.then163, label %while.cond166.preheader, !dbg !2893

while.cond166.preheader:                          ; preds = %if.end160
  %first_arg_num168 = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %2, i64 0, i32 2, !dbg !2741
  %47 = load i64, i64* %first_arg_num168, align 8, !dbg !2741
  br label %while.cond166, !dbg !2894

if.then163:                                       ; preds = %if.end160
  %number_empty = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 4, !dbg !2895
  %48 = load i32, i32* %number_empty, align 4, !dbg !2897
  %inc164 = add nsw i32 %48, 1, !dbg !2897
  store i32 %inc164, i32* %number_empty, align 4, !dbg !2897
  br label %cleanup.cont194, !dbg !2898

while.cond166:                                    ; preds = %while.cond166.preheader, %if.end175
  %params.1 = phi %union.tree_node* [ %49, %if.end175 ], [ %4, %while.cond166.preheader ], !dbg !2741
  %arg_num.addr.1 = phi i64 [ %add167, %if.end175 ], [ %arg_num, %while.cond166.preheader ]
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.1, metadata !2700, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* %params.1, metadata !2704, metadata !DIExpression()), !dbg !2741
  %add167 = add i64 %arg_num.addr.1, 1, !dbg !2899
  %cmp169 = icmp ult i64 %add167, %47, !dbg !2900
  br i1 %cmp169, label %while.body171, label %while.end179, !dbg !2894

while.body171:                                    ; preds = %while.cond166
  %cmp172 = icmp eq %union.tree_node* %params.1, null, !dbg !2901
  br i1 %cmp172, label %cleanup.cont194.loopexit, label %if.end175, !dbg !2904

if.end175:                                        ; preds = %while.body171
  %chain177 = getelementptr inbounds %union.tree_node, %union.tree_node* %params.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2905
  %49 = load %union.tree_node*, %union.tree_node** %chain177, align 8, !dbg !2905
  call void @llvm.dbg.value(metadata %union.tree_node* %49, metadata !2704, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i64 %add167, metadata !2700, metadata !DIExpression()), !dbg !2741
  br label %while.cond166, !dbg !2894, !llvm.loop !2906

while.end179:                                     ; preds = %while.cond166
  %params.1.lcssa = phi %union.tree_node* [ %params.1, %while.cond166 ], !dbg !2741
  %arg_num.addr.1.lcssa = phi i64 [ %arg_num.addr.1, %while.cond166 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %params.1.lcssa, metadata !2704, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.1.lcssa, metadata !2700, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* %params.1.lcssa, metadata !2704, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.1.lcssa, metadata !2700, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata %union.tree_node* %params.1.lcssa, metadata !2704, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.1.lcssa, metadata !2700, metadata !DIExpression()), !dbg !2741
  %number_other180 = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %0, i64 0, i32 6, !dbg !2908
  %50 = load i32, i32* %number_other180, align 4, !dbg !2909
  %inc181 = add nsw i32 %50, 1, !dbg !2909
  store i32 %inc181, i32* %number_other180, align 4, !dbg !2909
  %call182 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0), i64 72, i64 10) #6, !dbg !2910
  call void @llvm.dbg.value(metadata %struct.alloc_pool_def* %call182, metadata !2710, metadata !DIExpression()), !dbg !2741
  tail call fastcc void @check_format_info_main(%struct.format_check_results* %0, %struct.function_format_info* %2, i8* %format_chars.0, i32 %dec, %union.tree_node* %params.1.lcssa, i64 %arg_num.addr.1.lcssa, %struct.alloc_pool_def* %call182) #8, !dbg !2911
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %call182) #6, !dbg !2912
  br label %cleanup.cont194, !dbg !2913

cleanup.cont194.loopexit:                         ; preds = %while.body171
  br label %cleanup.cont194, !dbg !2913

cleanup.cont194.loopexit12:                       ; preds = %while.body
  br label %cleanup.cont194, !dbg !2913

cleanup.cont194:                                  ; preds = %cleanup.cont194.loopexit12, %cleanup.cont194.loopexit, %if.then43, %if.then100, %if.then110, %if.then144, %if.then158, %if.then163, %while.end179, %cleanup, %if.else, %if.then7
  ret void, !dbg !2913
}

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_constant_value(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @check_format_info_main(%struct.format_check_results* %res, %struct.function_format_info* %info, i8* %format_chars, i32 %format_length, %union.tree_node* %params, i64 %arg_num, %struct.alloc_pool_def* %fwt_pool) unnamed_addr #5 !dbg !2914 {
entry:
  %format_chars.addr = alloca i8*, align 8
  %params.addr = alloca %union.tree_node*, align 8
  %main_arg_params = alloca %union.tree_node*, align 8
  %width_wanted_type = alloca %struct.format_wanted_type, align 8
  %precision_wanted_type = alloca %struct.format_wanted_type, align 8
  %main_wanted_type = alloca %struct.format_wanted_type, align 8
  %flag_chars = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.format_check_results* %res, metadata !2918, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.function_format_info* %info, metadata !2919, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i8* %format_chars, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %format_chars, i8** %format_chars.addr, align 8
  call void @llvm.dbg.value(metadata i32 %format_length, metadata !2921, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %union.tree_node* %params, metadata !2922, metadata !DIExpression()), !dbg !3009
  store %union.tree_node* %params, %union.tree_node** %params.addr, align 8
  call void @llvm.dbg.value(metadata i64 %arg_num, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.alloc_pool_def* %fwt_pool, metadata !2924, metadata !DIExpression()), !dbg !3009
  %.cast = ptrtoint i8* %format_chars to i64, !dbg !3010
  call void @llvm.dbg.value(metadata %union.tree_node* %params, metadata !2922, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %union.tree_node* %params, metadata !2926, metadata !DIExpression()), !dbg !3009
  %0 = load %struct.format_kind_info*, %struct.format_kind_info** @format_types, align 8, !dbg !3011
  %format_type = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 0, !dbg !3012
  %1 = load i32, i32* %format_type, align 8, !dbg !3012
  %idxprom = sext i32 %1 to i64, !dbg !3011
  %arrayidx = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, !dbg !3011
  call void @llvm.dbg.value(metadata %struct.format_kind_info* %arrayidx, metadata !2927, metadata !DIExpression()), !dbg !3009
  %flag_specs1 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 5, !dbg !3013
  %2 = load %struct.format_flag_spec*, %struct.format_flag_spec** %flag_specs1, align 8, !dbg !3013
  call void @llvm.dbg.value(metadata %struct.format_flag_spec* %2, metadata !2928, metadata !DIExpression()), !dbg !3009
  %bad_flag_pairs2 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 6, !dbg !3014
  %3 = load %struct.format_flag_pair*, %struct.format_flag_pair** %bad_flag_pairs2, align 8, !dbg !3014
  call void @llvm.dbg.value(metadata %struct.format_flag_pair* %3, metadata !2929, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 -1, metadata !2930, metadata !DIExpression()), !dbg !3009
  %first_arg_num = getelementptr inbounds %struct.function_format_info, %struct.function_format_info* %info, i64 0, i32 2, !dbg !3015
  %4 = load i64, i64* %first_arg_num, align 8, !dbg !3015
  %conv = trunc i64 %4 to i32, !dbg !3016
  tail call fastcc void @init_dollar_format_checking(i32 %conv, %union.tree_node* %params) #8, !dbg !3017
  %5 = bitcast %union.tree_node** %main_arg_params to i8*, !dbg !3018
  %6 = bitcast %struct.format_wanted_type* %width_wanted_type to i8*, !dbg !3018
  %7 = bitcast %struct.format_wanted_type* %precision_wanted_type to i8*, !dbg !3018
  %8 = bitcast %struct.format_wanted_type* %main_wanted_type to i8*, !dbg !3018
  %9 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 0, !dbg !3018
  %flags42 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 7, !dbg !3019
  %flag_chars75 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 3, !dbg !3018
  %width_char = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 8, !dbg !3020
  %width_type = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 14, !dbg !3021
  %10 = bitcast %union.tree_node** %params.addr to i64*, !dbg !3022
  %11 = bitcast %union.tree_node*** %width_type to i64**, !dbg !3027
  %12 = bitcast %struct.format_wanted_type* %width_wanted_type to i64*, !dbg !3027
  %wanted_type_name180 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %width_wanted_type, i64 0, i32 1, !dbg !3027
  %pointer_count = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %width_wanted_type, i64 0, i32 3, !dbg !3027
  %char_lenient_flag = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %width_wanted_type, i64 0, i32 4, !dbg !3027
  %scalar_identity_flag181 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %width_wanted_type, i64 0, i32 2, !dbg !3027
  %writing_in_flag = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %width_wanted_type, i64 0, i32 5, !dbg !3027
  %reading_from_flag = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %width_wanted_type, i64 0, i32 6, !dbg !3027
  %name182 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %width_wanted_type, i64 0, i32 7, !dbg !3027
  %param = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %width_wanted_type, i64 0, i32 8, !dbg !3027
  %13 = bitcast %union.tree_node** %param to i64*, !dbg !3027
  %arg_num184 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %width_wanted_type, i64 0, i32 9, !dbg !3027
  %next = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %width_wanted_type, i64 0, i32 10, !dbg !3027
  %name220 = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %arrayidx, i64 0, i32 0, !dbg !3028
  %left_precision_char = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 9, !dbg !3030
  %precision_char = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 10, !dbg !3032
  %precision_type = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 15, !dbg !3033
  %14 = bitcast %union.tree_node*** %precision_type to i64**, !dbg !3034
  %15 = bitcast %struct.format_wanted_type* %precision_wanted_type to i64*, !dbg !3034
  %wanted_type_name355 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %precision_wanted_type, i64 0, i32 1, !dbg !3034
  %pointer_count356 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %precision_wanted_type, i64 0, i32 3, !dbg !3034
  %char_lenient_flag357 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %precision_wanted_type, i64 0, i32 4, !dbg !3034
  %scalar_identity_flag358 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %precision_wanted_type, i64 0, i32 2, !dbg !3034
  %writing_in_flag359 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %precision_wanted_type, i64 0, i32 5, !dbg !3034
  %reading_from_flag360 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %precision_wanted_type, i64 0, i32 6, !dbg !3034
  %name361 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %precision_wanted_type, i64 0, i32 7, !dbg !3034
  %param362 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %precision_wanted_type, i64 0, i32 8, !dbg !3034
  %16 = bitcast %union.tree_node** %param362 to i64*, !dbg !3034
  %arg_num364 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %precision_wanted_type, i64 0, i32 9, !dbg !3034
  %next365 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %precision_wanted_type, i64 0, i32 10, !dbg !3034
  %alloc_char = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 13, !dbg !3037
  %length_char_specs = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 1, !dbg !3018
  %length_code_char = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 12, !dbg !3039
  %modifier_chars = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 4, !dbg !3044
  %conversion_specs = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 2, !dbg !3018
  %suppression_char = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %0, i64 %idxprom, i32 11, !dbg !3045
  %next1156 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %main_wanted_type, i64 0, i32 10, !dbg !3018
  %17 = bitcast %union.tree_node** %main_arg_params to i64*, !dbg !3047
  %18 = bitcast i8** %format_chars.addr to i64*, !dbg !3050
  %conv5 = sext i32 %format_length to i64, !dbg !3052
  %number_other = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 6, !dbg !3056
  %number_extra_args = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 1, !dbg !3056
  br label %while.cond, !dbg !3059

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %19 = phi i8* [ %format_chars, %entry ], [ %.pre, %while.cond.backedge ], !dbg !3060
  %has_operand_number.0 = phi i32 [ -1, %entry ], [ %has_operand_number.17, %while.cond.backedge ], !dbg !3061
  %arg_num.addr.0 = phi i64 [ %arg_num, %entry ], [ %arg_num.addr.20, %while.cond.backedge ]
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.0, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.0, metadata !2930, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 0, metadata !2933, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* null, metadata !2934, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 0, metadata !2935, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 0, metadata !2936, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 0, metadata !2940, metadata !DIExpression()), !dbg !3018
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !3062
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2941, metadata !DIExpression()), !dbg !3018
  store %union.tree_node* null, %union.tree_node** %main_arg_params, align 8, !dbg !3063
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #7, !dbg !3064
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #7, !dbg !3065
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #7, !dbg !3066
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* null, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* null, metadata !2948, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_length_info* null, metadata !2949, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_char_info* null, metadata !2950, metadata !DIExpression()), !dbg !3018
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %9) #7, !dbg !3067
  call void @llvm.dbg.declare(metadata [256 x i8]* %flag_chars, metadata !2951, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata i32 0, metadata !2955, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 0, metadata !2956, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* %19, metadata !2920, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i8* %19, metadata !2957, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* %19, metadata !2920, metadata !DIExpression()), !dbg !3009
  %20 = load i8, i8* %19, align 1, !dbg !3069
  %cmp = icmp eq i8 %20, 0, !dbg !3070
  call void @llvm.dbg.value(metadata i8* %19, metadata !2920, metadata !DIExpression()), !dbg !3009
  br i1 %cmp, label %if.then, label %if.end23, !dbg !3071

if.then:                                          ; preds = %while.cond
  %sub.ptr.lhs.cast = ptrtoint i8* %19 to i64, !dbg !3072
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %.cast, !dbg !3072
  %cmp6 = icmp eq i64 %sub.ptr.sub, %conv5, !dbg !3073
  br i1 %cmp6, label %if.end, label %if.then8, !dbg !3074

if.then8:                                         ; preds = %if.then
  %call = call zeroext i8 (i32, i8*, ...) @warning(i32 92, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3075
  br label %if.end, !dbg !3075

if.end:                                           ; preds = %if.then, %if.then8
  %21 = load i64, i64* %first_arg_num, align 8, !dbg !3076
  %cmp10 = icmp ne i64 %21, 0, !dbg !3077
  %22 = load %union.tree_node*, %union.tree_node** %params.addr, align 8, !dbg !3078
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !2922, metadata !DIExpression()), !dbg !3009
  %cmp12 = icmp ne %union.tree_node* %22, null, !dbg !3079
  %or.cond = and i1 %cmp10, %cmp12, !dbg !3080
  %cmp15 = icmp slt i32 %has_operand_number.0, 1, !dbg !3081
  %or.cond6 = and i1 %or.cond, %cmp15, !dbg !3080
  br i1 %or.cond6, label %if.then17, label %if.end18, !dbg !3080

if.then17:                                        ; preds = %if.end
  %23 = load i32, i32* %number_other, align 4, !dbg !3082
  %dec = add nsw i32 %23, -1, !dbg !3082
  store i32 %dec, i32* %number_other, align 4, !dbg !3082
  %24 = load i32, i32* %number_extra_args, align 4, !dbg !3083
  %inc = add nsw i32 %24, 1, !dbg !3083
  store i32 %inc, i32* %number_extra_args, align 4, !dbg !3083
  br label %if.end18, !dbg !3084

if.end18:                                         ; preds = %if.then17, %if.end
  %cmp19 = icmp sgt i32 %has_operand_number.0, 0, !dbg !3085
  br i1 %cmp19, label %if.then21, label %cleanup1287, !dbg !3087

if.then21:                                        ; preds = %if.end18
  %25 = load i32, i32* %flags42, align 8, !dbg !3088
  %and = and i32 %25, 128, !dbg !3089
  call fastcc void @finish_dollar_format_checking(%struct.format_check_results* %res, i32 %and) #8, !dbg !3090
  br label %cleanup1287, !dbg !3090

if.end23:                                         ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i64 1, !dbg !3091
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr, i8** %format_chars.addr, align 8, !dbg !3091
  %26 = load i8, i8* %19, align 1, !dbg !3093
  %cmp25 = icmp eq i8 %26, 37, !dbg !3094
  br i1 %cmp25, label %if.end28, label %cleanup1287, !dbg !3095, !llvm.loop !3096

if.end28:                                         ; preds = %if.end23
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !2920, metadata !DIExpression()), !dbg !3009
  %27 = load i8, i8* %incdec.ptr, align 1, !dbg !3098
  %cmp30 = icmp eq i8 %27, 0, !dbg !3100
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !3101

if.then32:                                        ; preds = %if.end28
  %call33 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3102
  br label %cleanup1287, !dbg !3104, !llvm.loop !3096

if.end34:                                         ; preds = %if.end28
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !2920, metadata !DIExpression()), !dbg !3009
  %cmp36 = icmp eq i8 %27, 37, !dbg !3105
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !3107

if.then38:                                        ; preds = %if.end34
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr39 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !3108
  call void @llvm.dbg.value(metadata i8* %incdec.ptr39, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr39, i8** %format_chars.addr, align 8, !dbg !3108
  br label %cleanup1287, !dbg !3110, !llvm.loop !3096

if.end40:                                         ; preds = %if.end34
  store i8 0, i8* %9, align 16, !dbg !3111
  %28 = load i32, i32* %flags42, align 8, !dbg !3112
  %and43 = and i32 %28, 16, !dbg !3113
  %tobool = icmp ne i32 %and43, 0, !dbg !3113
  %cmp45 = icmp ne i32 %has_operand_number.0, 0, !dbg !3114
  %or.cond7 = and i1 %tobool, %cmp45, !dbg !3115
  br i1 %or.cond7, label %if.then47, label %if.else60, !dbg !3115

if.then47:                                        ; preds = %if.end40
  call void @llvm.dbg.value(metadata i8** %format_chars.addr, metadata !2920, metadata !DIExpression(DW_OP_deref)), !dbg !3009
  call void @llvm.dbg.value(metadata %union.tree_node** %main_arg_params, metadata !2941, metadata !DIExpression(DW_OP_deref)), !dbg !3018
  %call48 = call fastcc i32 @maybe_read_dollar_number(i8** nonnull %format_chars.addr, i32 0, %union.tree_node* %params, %union.tree_node** nonnull %main_arg_params, %struct.format_kind_info* %arrayidx) #8, !dbg !3116
  call void @llvm.dbg.value(metadata i32 %call48, metadata !2958, metadata !DIExpression()), !dbg !3117
  %cmp49 = icmp eq i32 %call48, -1, !dbg !3118
  br i1 %cmp49, label %cleanup, label %if.else, !dbg !3120

if.else:                                          ; preds = %if.then47
  %cmp52 = icmp sgt i32 %call48, 0, !dbg !3121
  br i1 %cmp52, label %if.then54, label %cleanup, !dbg !3123

if.then54:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i32 1, metadata !2930, metadata !DIExpression()), !dbg !3009
  %29 = load i64, i64* %first_arg_num, align 8, !dbg !3124
  %30 = trunc i64 %29 to i32, !dbg !3126
  %31 = add i32 %call48, %30, !dbg !3126
  %conv57 = add i32 %31, -1, !dbg !3126
  call void @llvm.dbg.value(metadata i32 %conv57, metadata !2940, metadata !DIExpression()), !dbg !3018
  br label %cleanup, !dbg !3127

cleanup:                                          ; preds = %if.then54, %if.else, %if.then47
  %main_arg_num.1 = phi i32 [ 0, %if.then47 ], [ %conv57, %if.then54 ], [ 0, %if.else ], !dbg !3018
  %has_operand_number.2 = phi i32 [ %has_operand_number.0, %if.then47 ], [ 1, %if.then54 ], [ %has_operand_number.0, %if.else ], !dbg !3009
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then47 ], [ 0, %if.then54 ], [ 0, %if.else ]
  call void @llvm.dbg.value(metadata i32 %has_operand_number.2, metadata !2930, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %main_arg_num.1, metadata !2940, metadata !DIExpression()), !dbg !3018
  %cond5 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond5, label %if.end70, label %cleanup1287

if.else60:                                        ; preds = %if.end40
  %tobool63 = icmp eq i32 %and43, 0, !dbg !3128
  br i1 %tobool63, label %if.end70, label %if.then64, !dbg !3130

if.then64:                                        ; preds = %if.else60
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !2920, metadata !DIExpression()), !dbg !3009
  %call65 = call fastcc zeroext i8 @avoid_dollar_number(i8* nonnull %incdec.ptr) #8, !dbg !3131
  %tobool66 = icmp eq i8 %call65, 0, !dbg !3131
  br i1 %tobool66, label %if.end70, label %cleanup1287, !dbg !3134

if.end70:                                         ; preds = %if.then64, %if.else60, %cleanup
  %main_arg_num.2 = phi i32 [ %main_arg_num.1, %cleanup ], [ 0, %if.then64 ], [ 0, %if.else60 ], !dbg !3135
  %has_operand_number.3 = phi i32 [ %has_operand_number.2, %cleanup ], [ %has_operand_number.0, %if.then64 ], [ %has_operand_number.0, %if.else60 ], !dbg !3061
  call void @llvm.dbg.value(metadata i32 %has_operand_number.3, metadata !2930, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %main_arg_num.2, metadata !2940, metadata !DIExpression()), !dbg !3018
  br label %while.cond71, !dbg !3136

while.cond71:                                     ; preds = %cleanup110, %if.end70
  %32 = load i8*, i8** %format_chars.addr, align 8, !dbg !3137
  call void @llvm.dbg.value(metadata i8* %32, metadata !2920, metadata !DIExpression()), !dbg !3009
  %33 = load i8, i8* %32, align 1, !dbg !3138
  %cmp73 = icmp eq i8 %33, 0, !dbg !3139
  br i1 %cmp73, label %while.end, label %land.rhs, !dbg !3140

land.rhs:                                         ; preds = %while.cond71
  %34 = load i8*, i8** %flag_chars75, align 8, !dbg !3141
  call void @llvm.dbg.value(metadata i8* %32, metadata !2920, metadata !DIExpression()), !dbg !3009
  %conv76 = sext i8 %33 to i32, !dbg !3142
  %call77 = call i8* @strchr(i8* %34, i32 %conv76) #6, !dbg !3143
  %cmp78 = icmp eq i8* %call77, null, !dbg !3144
  br i1 %cmp78, label %while.end, label %while.body80, !dbg !3136

while.body80:                                     ; preds = %land.rhs
  %35 = load i8*, i8** %format_chars.addr, align 8, !dbg !3145
  call void @llvm.dbg.value(metadata i8* %35, metadata !2920, metadata !DIExpression()), !dbg !3009
  %36 = load i8, i8* %35, align 1, !dbg !3146
  %conv81 = sext i8 %36 to i32, !dbg !3146
  %call82 = call fastcc %struct.format_flag_spec* @get_flag_spec(%struct.format_flag_spec* %2, i32 %conv81, i8* null) #8, !dbg !3147
  call void @llvm.dbg.value(metadata %struct.format_flag_spec* %call82, metadata !2961, metadata !DIExpression()), !dbg !3148
  %37 = load i8*, i8** %format_chars.addr, align 8, !dbg !3149
  call void @llvm.dbg.value(metadata i8* %37, metadata !2920, metadata !DIExpression()), !dbg !3009
  %38 = load i8, i8* %37, align 1, !dbg !3151
  %conv83 = sext i8 %38 to i32, !dbg !3151
  %call84 = call i8* @strchr(i8* nonnull %9, i32 %conv83) #6, !dbg !3152
  %cmp85 = icmp eq i8* %call84, null, !dbg !3153
  br i1 %cmp85, label %if.else89, label %if.then87, !dbg !3154

if.then87:                                        ; preds = %while.body80
  %name = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call82, i64 0, i32 3, !dbg !3155
  %39 = load i8*, i8** %name, align 8, !dbg !3155
  %call88 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i64 0, i64 0), i8* %39) #6, !dbg !3157
  br label %if.end98, !dbg !3158

if.else89:                                        ; preds = %while.body80
  %call91 = call i64 @strlen(i8* nonnull %9) #6, !dbg !3159
  %40 = load i8*, i8** %format_chars.addr, align 8, !dbg !3161
  call void @llvm.dbg.value(metadata i8* %40, metadata !2920, metadata !DIExpression()), !dbg !3009
  %41 = load i8, i8* %40, align 1, !dbg !3162
  %sext41 = shl i64 %call91, 32, !dbg !3163
  %idxprom94 = ashr exact i64 %sext41, 32, !dbg !3163
  %arrayidx95 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom94, !dbg !3163
  store i8 %41, i8* %arrayidx95, align 1, !dbg !3164
  %sext42 = add i64 %sext41, 4294967296, !dbg !3165
  %idxprom96 = ashr exact i64 %sext42, 32, !dbg !3165
  %arrayidx97 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom96, !dbg !3165
  store i8 0, i8* %arrayidx97, align 1, !dbg !3166
  br label %if.end98

if.end98:                                         ; preds = %if.else89, %if.then87
  %skip_next_char = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call82, i64 0, i32 2, !dbg !3167
  %42 = load i32, i32* %skip_next_char, align 8, !dbg !3167
  %tobool99 = icmp eq i32 %42, 0, !dbg !3169
  br i1 %tobool99, label %if.end98.if.end108_crit_edge, label %if.then100, !dbg !3170

if.end98.if.end108_crit_edge:                     ; preds = %if.end98
  %.pre50 = load i8*, i8** %format_chars.addr, align 8, !dbg !3171
  br label %if.end108, !dbg !3170

if.then100:                                       ; preds = %if.end98
  %43 = load i8*, i8** %format_chars.addr, align 8, !dbg !3172
  call void @llvm.dbg.value(metadata i8* %43, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr101 = getelementptr inbounds i8, i8* %43, i64 1, !dbg !3172
  call void @llvm.dbg.value(metadata i8* %incdec.ptr101, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr101, i8** %format_chars.addr, align 8, !dbg !3172
  call void @llvm.dbg.value(metadata i8* %incdec.ptr101, metadata !2920, metadata !DIExpression()), !dbg !3009
  %44 = load i8, i8* %incdec.ptr101, align 1, !dbg !3174
  %cmp103 = icmp eq i8 %44, 0, !dbg !3176
  br i1 %cmp103, label %if.then105, label %if.end108, !dbg !3177

if.then105:                                       ; preds = %if.then100
  %call106 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !3178
  br label %cleanup110, !dbg !3180

if.end108:                                        ; preds = %if.end98.if.end108_crit_edge, %if.then100
  %45 = phi i8* [ %.pre50, %if.end98.if.end108_crit_edge ], [ %incdec.ptr101, %if.then100 ], !dbg !3171
  call void @llvm.dbg.value(metadata i8* %45, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr109 = getelementptr inbounds i8, i8* %45, i64 1, !dbg !3171
  call void @llvm.dbg.value(metadata i8* %incdec.ptr109, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr109, i8** %format_chars.addr, align 8, !dbg !3171
  br label %cleanup110, !dbg !3181

cleanup110:                                       ; preds = %if.end108, %if.then105
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then105 ], [ 0, %if.end108 ]
  %cond4 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond4, label %while.cond71, label %cleanup1287.loopexit, !llvm.loop !3182

while.end:                                        ; preds = %land.rhs, %while.cond71
  %46 = load i32, i32* %width_char, align 4, !dbg !3183
  %cmp113 = icmp eq i32 %46, 0, !dbg !3184
  br i1 %cmp113, label %if.end237, label %if.then115, !dbg !3185

if.then115:                                       ; preds = %while.end
  %47 = load %union.tree_node**, %union.tree_node*** %width_type, align 8, !dbg !3186
  %cmp116 = icmp eq %union.tree_node** %47, null, !dbg !3187
  br i1 %cmp116, label %if.then115.if.else195_crit_edge, label %land.lhs.true118, !dbg !3188

if.then115.if.else195_crit_edge:                  ; preds = %if.then115
  %.pre51.pre = load i8*, i8** %format_chars.addr, align 8, !dbg !3189
  br label %if.else195, !dbg !3188

land.lhs.true118:                                 ; preds = %if.then115
  %48 = load i8*, i8** %format_chars.addr, align 8, !dbg !3190
  call void @llvm.dbg.value(metadata i8* %48, metadata !2920, metadata !DIExpression()), !dbg !3009
  %49 = load i8, i8* %48, align 1, !dbg !3191
  %cmp120 = icmp eq i8 %49, 42, !dbg !3192
  br i1 %cmp120, label %if.then122, label %if.else195, !dbg !3193

if.then122:                                       ; preds = %land.lhs.true118
  %call124 = call i64 @strlen(i8* nonnull %9) #6, !dbg !3194
  %50 = load i32, i32* %width_char, align 4, !dbg !3195
  %conv127 = trunc i32 %50 to i8, !dbg !3196
  %sext39 = shl i64 %call124, 32, !dbg !3197
  %idxprom129 = ashr exact i64 %sext39, 32, !dbg !3197
  %arrayidx130 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom129, !dbg !3197
  store i8 %conv127, i8* %arrayidx130, align 1, !dbg !3198
  %sext40 = add i64 %sext39, 4294967296, !dbg !3199
  %idxprom131 = ashr exact i64 %sext40, 32, !dbg !3199
  %arrayidx132 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom131, !dbg !3199
  store i8 0, i8* %arrayidx132, align 1, !dbg !3200
  %51 = load i8*, i8** %format_chars.addr, align 8, !dbg !3201
  call void @llvm.dbg.value(metadata i8* %51, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr133 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !3201
  call void @llvm.dbg.value(metadata i8* %incdec.ptr133, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr133, i8** %format_chars.addr, align 8, !dbg !3201
  %cmp134 = icmp eq i32 %has_operand_number.3, 0, !dbg !3202
  br i1 %cmp134, label %if.else158, label %if.then136, !dbg !3203

if.then136:                                       ; preds = %if.then122
  %cmp138 = icmp eq i32 %has_operand_number.3, 1, !dbg !3204
  %conv139 = zext i1 %cmp138 to i32, !dbg !3204
  call void @llvm.dbg.value(metadata i8** %format_chars.addr, metadata !2920, metadata !DIExpression(DW_OP_deref)), !dbg !3009
  call void @llvm.dbg.value(metadata %union.tree_node** %params.addr, metadata !2922, metadata !DIExpression(DW_OP_deref)), !dbg !3009
  %call140 = call fastcc i32 @maybe_read_dollar_number(i8** nonnull %format_chars.addr, i32 %conv139, %union.tree_node* %params, %union.tree_node** nonnull %params.addr, %struct.format_kind_info* %arrayidx) #8, !dbg !3205
  call void @llvm.dbg.value(metadata i32 %call140, metadata !2963, metadata !DIExpression()), !dbg !3206
  %cmp141 = icmp eq i32 %call140, -1, !dbg !3207
  br i1 %cmp141, label %cleanup155, label %if.else144, !dbg !3209

if.else144:                                       ; preds = %if.then136
  %cmp145 = icmp sgt i32 %call140, 0, !dbg !3210
  br i1 %cmp145, label %if.then147, label %cleanup155, !dbg !3212

if.then147:                                       ; preds = %if.else144
  call void @llvm.dbg.value(metadata i32 1, metadata !2930, metadata !DIExpression()), !dbg !3009
  %conv148 = sext i32 %call140 to i64, !dbg !3213
  %52 = load i64, i64* %first_arg_num, align 8, !dbg !3215
  %add150 = add i64 %52, %conv148, !dbg !3216
  %sub151 = add i64 %add150, -1, !dbg !3217
  call void @llvm.dbg.value(metadata i64 %sub151, metadata !2923, metadata !DIExpression()), !dbg !3009
  br label %cleanup155, !dbg !3218

cleanup155:                                       ; preds = %if.else144, %if.then147, %if.then136
  %has_operand_number.5 = phi i32 [ %has_operand_number.3, %if.then136 ], [ 1, %if.then147 ], [ 0, %if.else144 ], !dbg !3009
  %cleanup.dest.slot.2 = phi i32 [ 1, %if.then136 ], [ 0, %if.then147 ], [ 0, %if.else144 ]
  %arg_num.addr.2 = phi i64 [ %arg_num.addr.0, %if.then136 ], [ %sub151, %if.then147 ], [ %arg_num.addr.0, %if.else144 ]
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.2, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.5, metadata !2930, metadata !DIExpression()), !dbg !3009
  %cond3 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond3, label %if.end163, label %cleanup1287

if.else158:                                       ; preds = %if.then122
  call void @llvm.dbg.value(metadata i8* %incdec.ptr133, metadata !2920, metadata !DIExpression()), !dbg !3009
  %call159 = call fastcc zeroext i8 @avoid_dollar_number(i8* nonnull %incdec.ptr133) #8, !dbg !3219
  %tobool160 = icmp eq i8 %call159, 0, !dbg !3219
  br i1 %tobool160, label %if.end163, label %cleanup1287, !dbg !3222

if.end163:                                        ; preds = %if.else158, %cleanup155
  %has_operand_number.6 = phi i32 [ %has_operand_number.5, %cleanup155 ], [ 0, %if.else158 ], !dbg !3061
  %arg_num.addr.3 = phi i64 [ %arg_num.addr.2, %cleanup155 ], [ %arg_num.addr.0, %if.else158 ]
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.3, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.6, metadata !2930, metadata !DIExpression()), !dbg !3009
  %53 = load i64, i64* %first_arg_num, align 8, !dbg !3223
  %cmp165 = icmp eq i64 %53, 0, !dbg !3224
  br i1 %cmp165, label %if.end237, label %if.then167, !dbg !3225

if.then167:                                       ; preds = %if.end163
  %54 = load %union.tree_node*, %union.tree_node** %params.addr, align 8, !dbg !3226
  call void @llvm.dbg.value(metadata %union.tree_node* %54, metadata !2922, metadata !DIExpression()), !dbg !3009
  %cmp168 = icmp eq %union.tree_node* %54, null, !dbg !3228
  br i1 %cmp168, label %if.then170, label %if.end172, !dbg !3229

if.then170:                                       ; preds = %if.then167
  %call171 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !3230
  br label %cleanup1287, !dbg !3232

if.end172:                                        ; preds = %if.then167
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3233
  %56 = bitcast %union.tree_node** %55 to i64*, !dbg !3233
  %57 = load i64, i64* %56, align 8, !dbg !3233
  %cmp173 = icmp slt i32 %has_operand_number.6, 1, !dbg !3234
  br i1 %cmp173, label %if.then175, label %if.end177, !dbg !3235

if.then175:                                       ; preds = %if.end172
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3236
  %58 = bitcast %union.tree_node** %chain to i64*, !dbg !3236
  %59 = load i64, i64* %58, align 8, !dbg !3236
  store i64 %59, i64* %10, align 8, !dbg !3237
  %inc176 = add i64 %arg_num.addr.3, 1, !dbg !3238
  call void @llvm.dbg.value(metadata i64 %inc176, metadata !2923, metadata !DIExpression()), !dbg !3009
  br label %if.end177, !dbg !3239

if.end177:                                        ; preds = %if.then175, %if.end172
  %arg_num.addr.4 = phi i64 [ %inc176, %if.then175 ], [ %arg_num.addr.3, %if.end172 ]
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.4, metadata !2923, metadata !DIExpression()), !dbg !3009
  %60 = load i64*, i64** %11, align 8, !dbg !3240
  %61 = load i64, i64* %60, align 8, !dbg !3241
  store i64 %61, i64* %12, align 8, !dbg !3242
  store i8* null, i8** %wanted_type_name180, align 8, !dbg !3243
  store i32 0, i32* %pointer_count, align 4, !dbg !3244
  store i32 0, i32* %char_lenient_flag, align 8, !dbg !3245
  store i32 0, i32* %scalar_identity_flag181, align 8, !dbg !3246
  store i32 0, i32* %writing_in_flag, align 4, !dbg !3247
  store i32 0, i32* %reading_from_flag, align 8, !dbg !3248
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0), i8** %name182, align 8, !dbg !3249
  store i64 %57, i64* %13, align 8, !dbg !3250
  %conv183 = trunc i64 %arg_num.addr.4 to i32, !dbg !3251
  store i32 %conv183, i32* %arg_num184, align 8, !dbg !3252
  store %struct.format_wanted_type* null, %struct.format_wanted_type** %next, align 8, !dbg !3253
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %width_wanted_type, metadata !2947, metadata !DIExpression()), !dbg !3018
  br label %if.end237, !dbg !3254

if.else195:                                       ; preds = %if.then115.if.else195_crit_edge, %land.lhs.true118
  %.pre51 = phi i8* [ %.pre51.pre, %if.then115.if.else195_crit_edge ], [ %48, %land.lhs.true118 ], !dbg !3189
  call void @llvm.dbg.value(metadata i32 0, metadata !2970, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i32 0, metadata !2972, metadata !DIExpression()), !dbg !3256
  br label %while.cond196, !dbg !3257

while.cond196:                                    ; preds = %while.body204, %if.else195
  %62 = phi i8* [ %.pre51, %if.else195 ], [ %incdec.ptr210, %while.body204 ], !dbg !3189
  %non_zero_width_char.0 = phi i32 [ 0, %if.else195 ], [ %spec.select, %while.body204 ], !dbg !3256
  %found_width.0 = phi i32 [ 0, %if.else195 ], [ 1, %while.body204 ], !dbg !3256
  call void @llvm.dbg.value(metadata i32 %found_width.0, metadata !2972, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i32 %non_zero_width_char.0, metadata !2970, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i8* %62, metadata !2920, metadata !DIExpression()), !dbg !3009
  %63 = load i8, i8* %62, align 1, !dbg !3189
  %idxprom199 = zext i8 %63 to i64, !dbg !3189
  %arrayidx200 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom199, !dbg !3189
  %64 = load i16, i16* %arrayidx200, align 2, !dbg !3189
  %65 = and i16 %64, 4, !dbg !3189
  %tobool203 = icmp eq i16 %65, 0, !dbg !3257
  br i1 %tobool203, label %while.end211, label %while.body204, !dbg !3257

while.body204:                                    ; preds = %while.cond196
  call void @llvm.dbg.value(metadata i32 1, metadata !2972, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i8* %62, metadata !2920, metadata !DIExpression()), !dbg !3009
  %cmp206 = icmp eq i8 %63, 48, !dbg !3258
  %spec.select = select i1 %cmp206, i32 %non_zero_width_char.0, i32 1, !dbg !3261
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2970, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i8* %62, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr210 = getelementptr inbounds i8, i8* %62, i64 1, !dbg !3262
  call void @llvm.dbg.value(metadata i8* %incdec.ptr210, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr210, i8** %format_chars.addr, align 8, !dbg !3262
  br label %while.cond196, !dbg !3257, !llvm.loop !3263

while.end211:                                     ; preds = %while.cond196
  %non_zero_width_char.0.lcssa = phi i32 [ %non_zero_width_char.0, %while.cond196 ], !dbg !3256
  %found_width.0.lcssa = phi i32 [ %found_width.0, %while.cond196 ], !dbg !3256
  call void @llvm.dbg.value(metadata i32 %non_zero_width_char.0.lcssa, metadata !2970, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i32 %found_width.0.lcssa, metadata !2972, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i32 %non_zero_width_char.0.lcssa, metadata !2970, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i32 %found_width.0.lcssa, metadata !2972, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i32 %non_zero_width_char.0.lcssa, metadata !2970, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i32 %found_width.0.lcssa, metadata !2972, metadata !DIExpression()), !dbg !3256
  %tobool212 = icmp eq i32 %found_width.0.lcssa, 0, !dbg !3265
  %tobool214 = icmp ne i32 %non_zero_width_char.0.lcssa, 0, !dbg !3266
  %or.cond8 = or i1 %tobool212, %tobool214, !dbg !3267
  br i1 %or.cond8, label %if.end222, label %land.lhs.true215, !dbg !3267

land.lhs.true215:                                 ; preds = %while.end211
  %66 = load i32, i32* %flags42, align 8, !dbg !3268
  %and217 = and i32 %66, 32, !dbg !3269
  %tobool218 = icmp eq i32 %and217, 0, !dbg !3269
  br i1 %tobool218, label %if.end222, label %if.then219, !dbg !3270

if.then219:                                       ; preds = %land.lhs.true215
  %67 = load i8*, i8** %name220, align 8, !dbg !3271
  %call221 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37, i64 0, i64 0), i8* %67) #6, !dbg !3272
  br label %if.end222, !dbg !3272

if.end222:                                        ; preds = %land.lhs.true215, %while.end211, %if.then219
  br i1 %tobool212, label %if.end237, label %if.then224, !dbg !3273

if.then224:                                       ; preds = %if.end222
  %call226 = call i64 @strlen(i8* nonnull %9) #6, !dbg !3274
  %68 = load i32, i32* %width_char, align 4, !dbg !3277
  %conv229 = trunc i32 %68 to i8, !dbg !3278
  %sext37 = shl i64 %call226, 32, !dbg !3279
  %idxprom231 = ashr exact i64 %sext37, 32, !dbg !3279
  %arrayidx232 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom231, !dbg !3279
  store i8 %conv229, i8* %arrayidx232, align 1, !dbg !3280
  %sext38 = add i64 %sext37, 4294967296, !dbg !3281
  %idxprom233 = ashr exact i64 %sext38, 32, !dbg !3281
  %arrayidx234 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom233, !dbg !3281
  store i8 0, i8* %arrayidx234, align 1, !dbg !3282
  br label %if.end237, !dbg !3283

if.end237:                                        ; preds = %if.end163, %if.end222, %while.end, %if.end177, %if.then224
  %first_wanted_type.3 = phi %struct.format_wanted_type* [ null, %while.end ], [ null, %if.end163 ], [ %width_wanted_type, %if.end177 ], [ null, %if.then224 ], [ null, %if.end222 ], !dbg !3018
  %has_operand_number.8 = phi i32 [ %has_operand_number.3, %while.end ], [ %has_operand_number.6, %if.end163 ], [ %has_operand_number.6, %if.end177 ], [ %has_operand_number.3, %if.then224 ], [ %has_operand_number.3, %if.end222 ], !dbg !3061
  %arg_num.addr.7 = phi i64 [ %arg_num.addr.0, %while.end ], [ %arg_num.addr.3, %if.end163 ], [ %arg_num.addr.4, %if.end177 ], [ %arg_num.addr.0, %if.then224 ], [ %arg_num.addr.0, %if.end222 ]
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.7, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.8, metadata !2930, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.3, metadata !2948, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.3, metadata !2947, metadata !DIExpression()), !dbg !3018
  %69 = load i32, i32* %left_precision_char, align 8, !dbg !3284
  %cmp238 = icmp eq i32 %69, 0, !dbg !3285
  br i1 %cmp238, label %if.end278, label %land.lhs.true240, !dbg !3286

land.lhs.true240:                                 ; preds = %if.end237
  %70 = load i8*, i8** %format_chars.addr, align 8, !dbg !3287
  call void @llvm.dbg.value(metadata i8* %70, metadata !2920, metadata !DIExpression()), !dbg !3009
  %71 = load i8, i8* %70, align 1, !dbg !3288
  %cmp242 = icmp eq i8 %71, 35, !dbg !3289
  br i1 %cmp242, label %if.then244, label %if.end278, !dbg !3290

if.then244:                                       ; preds = %land.lhs.true240
  call void @llvm.dbg.value(metadata i8* %70, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr245 = getelementptr inbounds i8, i8* %70, i64 1, !dbg !3291
  call void @llvm.dbg.value(metadata i8* %incdec.ptr245, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr245, i8** %format_chars.addr, align 8, !dbg !3291
  %call247 = call i64 @strlen(i8* nonnull %9) #6, !dbg !3293
  %72 = load i32, i32* %left_precision_char, align 8, !dbg !3294
  %conv250 = trunc i32 %72 to i8, !dbg !3295
  %sext32 = shl i64 %call247, 32, !dbg !3296
  %idxprom252 = ashr exact i64 %sext32, 32, !dbg !3296
  %arrayidx253 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom252, !dbg !3296
  store i8 %conv250, i8* %arrayidx253, align 1, !dbg !3297
  %sext33 = add i64 %sext32, 4294967296, !dbg !3298
  %idxprom254 = ashr exact i64 %sext33, 32, !dbg !3298
  %arrayidx255 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom254, !dbg !3298
  store i8 0, i8* %arrayidx255, align 1, !dbg !3299
  %73 = load i8*, i8** %format_chars.addr, align 8, !dbg !3300
  call void @llvm.dbg.value(metadata i8* %73, metadata !2920, metadata !DIExpression()), !dbg !3009
  %74 = load i8, i8* %73, align 1, !dbg !3300
  %idxprom258 = zext i8 %74 to i64, !dbg !3300
  %arrayidx259 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom258, !dbg !3300
  %75 = load i16, i16* %arrayidx259, align 2, !dbg !3300
  %76 = and i16 %75, 4, !dbg !3300
  %tobool262 = icmp eq i16 %76, 0, !dbg !3300
  br i1 %tobool262, label %if.then263, label %if.end266, !dbg !3302

if.then263:                                       ; preds = %if.then244
  %77 = load i8*, i8** %name220, align 8, !dbg !3303
  %call265 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.38, i64 0, i64 0), i8* %77) #6, !dbg !3304
  %.pre52.pre = load i8*, i8** %format_chars.addr, align 8, !dbg !3305
  br label %if.end266, !dbg !3304

if.end266:                                        ; preds = %if.then244, %if.then263
  %.pre52 = phi i8* [ %73, %if.then244 ], [ %.pre52.pre, %if.then263 ], !dbg !3305
  br label %while.cond267, !dbg !3306

while.cond267:                                    ; preds = %while.body275, %if.end266
  %78 = phi i8* [ %incdec.ptr276, %while.body275 ], [ %.pre52, %if.end266 ], !dbg !3305
  call void @llvm.dbg.value(metadata i8* %78, metadata !2920, metadata !DIExpression()), !dbg !3009
  %79 = load i8, i8* %78, align 1, !dbg !3305
  %idxprom270 = zext i8 %79 to i64, !dbg !3305
  %arrayidx271 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom270, !dbg !3305
  %80 = load i16, i16* %arrayidx271, align 2, !dbg !3305
  %81 = and i16 %80, 4, !dbg !3305
  %tobool274 = icmp eq i16 %81, 0, !dbg !3306
  br i1 %tobool274, label %if.end278.loopexit, label %while.body275, !dbg !3306

while.body275:                                    ; preds = %while.cond267
  call void @llvm.dbg.value(metadata i8* %78, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr276 = getelementptr inbounds i8, i8* %78, i64 1, !dbg !3307
  call void @llvm.dbg.value(metadata i8* %incdec.ptr276, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr276, i8** %format_chars.addr, align 8, !dbg !3307
  br label %while.cond267, !dbg !3306, !llvm.loop !3308

if.end278.loopexit:                               ; preds = %while.cond267
  br label %if.end278, !dbg !3310

if.end278:                                        ; preds = %if.end278.loopexit, %if.end237, %land.lhs.true240
  %82 = load i32, i32* %precision_char, align 4, !dbg !3310
  %cmp279 = icmp eq i32 %82, 0, !dbg !3311
  br i1 %cmp279, label %if.end404, label %land.lhs.true281, !dbg !3312

land.lhs.true281:                                 ; preds = %if.end278
  %83 = load i8*, i8** %format_chars.addr, align 8, !dbg !3313
  call void @llvm.dbg.value(metadata i8* %83, metadata !2920, metadata !DIExpression()), !dbg !3009
  %84 = load i8, i8* %83, align 1, !dbg !3314
  %cmp283 = icmp eq i8 %84, 46, !dbg !3315
  br i1 %cmp283, label %if.then285, label %if.end404, !dbg !3316

if.then285:                                       ; preds = %land.lhs.true281
  call void @llvm.dbg.value(metadata i8* %83, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr286 = getelementptr inbounds i8, i8* %83, i64 1, !dbg !3317
  call void @llvm.dbg.value(metadata i8* %incdec.ptr286, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr286, i8** %format_chars.addr, align 8, !dbg !3317
  %call288 = call i64 @strlen(i8* nonnull %9) #6, !dbg !3318
  %85 = load i32, i32* %precision_char, align 4, !dbg !3319
  %conv291 = trunc i32 %85 to i8, !dbg !3320
  %sext28 = shl i64 %call288, 32, !dbg !3321
  %idxprom293 = ashr exact i64 %sext28, 32, !dbg !3321
  %arrayidx294 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom293, !dbg !3321
  store i8 %conv291, i8* %arrayidx294, align 1, !dbg !3322
  %sext29 = add i64 %sext28, 4294967296, !dbg !3323
  %idxprom295 = ashr exact i64 %sext29, 32, !dbg !3323
  %arrayidx296 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom295, !dbg !3323
  store i8 0, i8* %arrayidx296, align 1, !dbg !3324
  %86 = load %union.tree_node**, %union.tree_node*** %precision_type, align 8, !dbg !3325
  %cmp297 = icmp eq %union.tree_node** %86, null, !dbg !3326
  br i1 %cmp297, label %if.else376, label %land.lhs.true299, !dbg !3327

land.lhs.true299:                                 ; preds = %if.then285
  %87 = load i8*, i8** %format_chars.addr, align 8, !dbg !3328
  call void @llvm.dbg.value(metadata i8* %87, metadata !2920, metadata !DIExpression()), !dbg !3009
  %88 = load i8, i8* %87, align 1, !dbg !3329
  %cmp301 = icmp eq i8 %88, 42, !dbg !3330
  br i1 %cmp301, label %if.then303, label %if.else376, !dbg !3331

if.then303:                                       ; preds = %land.lhs.true299
  call void @llvm.dbg.value(metadata i8* %87, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr304 = getelementptr inbounds i8, i8* %87, i64 1, !dbg !3332
  call void @llvm.dbg.value(metadata i8* %incdec.ptr304, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr304, i8** %format_chars.addr, align 8, !dbg !3332
  %cmp305 = icmp eq i32 %has_operand_number.8, 0, !dbg !3333
  br i1 %cmp305, label %if.else329, label %if.then307, !dbg !3334

if.then307:                                       ; preds = %if.then303
  %cmp309 = icmp eq i32 %has_operand_number.8, 1, !dbg !3335
  %conv310 = zext i1 %cmp309 to i32, !dbg !3335
  call void @llvm.dbg.value(metadata i8** %format_chars.addr, metadata !2920, metadata !DIExpression(DW_OP_deref)), !dbg !3009
  call void @llvm.dbg.value(metadata %union.tree_node** %params.addr, metadata !2922, metadata !DIExpression(DW_OP_deref)), !dbg !3009
  %call311 = call fastcc i32 @maybe_read_dollar_number(i8** nonnull %format_chars.addr, i32 %conv310, %union.tree_node* %params, %union.tree_node** nonnull %params.addr, %struct.format_kind_info* %arrayidx) #8, !dbg !3336
  call void @llvm.dbg.value(metadata i32 %call311, metadata !2973, metadata !DIExpression()), !dbg !3337
  %cmp312 = icmp eq i32 %call311, -1, !dbg !3338
  br i1 %cmp312, label %cleanup326, label %if.else315, !dbg !3340

if.else315:                                       ; preds = %if.then307
  %cmp316 = icmp sgt i32 %call311, 0, !dbg !3341
  br i1 %cmp316, label %if.then318, label %cleanup326, !dbg !3343

if.then318:                                       ; preds = %if.else315
  call void @llvm.dbg.value(metadata i32 1, metadata !2930, metadata !DIExpression()), !dbg !3009
  %conv319 = sext i32 %call311 to i64, !dbg !3344
  %89 = load i64, i64* %first_arg_num, align 8, !dbg !3346
  %add321 = add i64 %89, %conv319, !dbg !3347
  %sub322 = add i64 %add321, -1, !dbg !3348
  call void @llvm.dbg.value(metadata i64 %sub322, metadata !2923, metadata !DIExpression()), !dbg !3009
  br label %cleanup326, !dbg !3349

cleanup326:                                       ; preds = %if.else315, %if.then318, %if.then307
  %has_operand_number.10 = phi i32 [ %has_operand_number.8, %if.then307 ], [ 1, %if.then318 ], [ 0, %if.else315 ], !dbg !3009
  %cleanup.dest.slot.3 = phi i32 [ 1, %if.then307 ], [ 0, %if.then318 ], [ 0, %if.else315 ]
  %arg_num.addr.9 = phi i64 [ %arg_num.addr.7, %if.then307 ], [ %sub322, %if.then318 ], [ %arg_num.addr.7, %if.else315 ], !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.9, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.10, metadata !2930, metadata !DIExpression()), !dbg !3009
  %cond2 = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond2, label %if.end334, label %cleanup1287

if.else329:                                       ; preds = %if.then303
  call void @llvm.dbg.value(metadata i8* %incdec.ptr304, metadata !2920, metadata !DIExpression()), !dbg !3009
  %call330 = call fastcc zeroext i8 @avoid_dollar_number(i8* nonnull %incdec.ptr304) #8, !dbg !3350
  %tobool331 = icmp eq i8 %call330, 0, !dbg !3350
  br i1 %tobool331, label %if.end334, label %cleanup1287, !dbg !3353

if.end334:                                        ; preds = %if.else329, %cleanup326
  %has_operand_number.11 = phi i32 [ %has_operand_number.10, %cleanup326 ], [ 0, %if.else329 ], !dbg !3061
  %arg_num.addr.10 = phi i64 [ %arg_num.addr.9, %cleanup326 ], [ %arg_num.addr.7, %if.else329 ], !dbg !3238
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.10, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.11, metadata !2930, metadata !DIExpression()), !dbg !3009
  %90 = load i64, i64* %first_arg_num, align 8, !dbg !3354
  %cmp336 = icmp eq i64 %90, 0, !dbg !3355
  br i1 %cmp336, label %if.end404, label %if.then338, !dbg !3356

if.then338:                                       ; preds = %if.end334
  %91 = load %union.tree_node*, %union.tree_node** %params.addr, align 8, !dbg !3357
  call void @llvm.dbg.value(metadata %union.tree_node* %91, metadata !2922, metadata !DIExpression()), !dbg !3009
  %cmp339 = icmp eq %union.tree_node* %91, null, !dbg !3359
  br i1 %cmp339, label %if.then341, label %if.end343, !dbg !3360

if.then341:                                       ; preds = %if.then338
  %call342 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !3361
  br label %cleanup1287, !dbg !3363

if.end343:                                        ; preds = %if.then338
  %92 = getelementptr inbounds %union.tree_node, %union.tree_node* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3364
  %93 = bitcast %union.tree_node** %92 to i64*, !dbg !3364
  %94 = load i64, i64* %93, align 8, !dbg !3364
  %cmp346 = icmp slt i32 %has_operand_number.11, 1, !dbg !3365
  br i1 %cmp346, label %if.then348, label %if.end352, !dbg !3367

if.then348:                                       ; preds = %if.end343
  %chain350 = getelementptr inbounds %union.tree_node, %union.tree_node* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3368
  %95 = bitcast %union.tree_node** %chain350 to i64*, !dbg !3368
  %96 = load i64, i64* %95, align 8, !dbg !3368
  store i64 %96, i64* %10, align 8, !dbg !3370
  %inc351 = add i64 %arg_num.addr.10, 1, !dbg !3371
  call void @llvm.dbg.value(metadata i64 %inc351, metadata !2923, metadata !DIExpression()), !dbg !3009
  br label %if.end352, !dbg !3372

if.end352:                                        ; preds = %if.then348, %if.end343
  %arg_num.addr.11 = phi i64 [ %inc351, %if.then348 ], [ %arg_num.addr.10, %if.end343 ], !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.11, metadata !2923, metadata !DIExpression()), !dbg !3009
  %97 = load i64*, i64** %14, align 8, !dbg !3373
  %98 = load i64, i64* %97, align 8, !dbg !3374
  store i64 %98, i64* %15, align 8, !dbg !3375
  store i8* null, i8** %wanted_type_name355, align 8, !dbg !3376
  store i32 0, i32* %pointer_count356, align 4, !dbg !3377
  store i32 0, i32* %char_lenient_flag357, align 8, !dbg !3378
  store i32 0, i32* %scalar_identity_flag358, align 8, !dbg !3379
  store i32 0, i32* %writing_in_flag359, align 4, !dbg !3380
  store i32 0, i32* %reading_from_flag360, align 8, !dbg !3381
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i64 0, i64 0), i8** %name361, align 8, !dbg !3382
  store i64 %94, i64* %16, align 8, !dbg !3383
  %conv363 = trunc i64 %arg_num.addr.11 to i32, !dbg !3384
  store i32 %conv363, i32* %arg_num364, align 8, !dbg !3385
  store %struct.format_wanted_type* null, %struct.format_wanted_type** %next365, align 8, !dbg !3386
  %cmp366 = icmp eq %struct.format_wanted_type* %first_wanted_type.3, null, !dbg !3387
  br i1 %cmp366, label %if.end370, label %if.then368, !dbg !3389

if.then368:                                       ; preds = %if.end352
  %next369 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %first_wanted_type.3, i64 0, i32 10, !dbg !3390
  store %struct.format_wanted_type* %precision_wanted_type, %struct.format_wanted_type** %next369, align 8, !dbg !3391
  br label %if.end370, !dbg !3392

if.end370:                                        ; preds = %if.end352, %if.then368
  %spec.select9 = select i1 %cmp366, %struct.format_wanted_type* %precision_wanted_type, %struct.format_wanted_type* %first_wanted_type.3, !dbg !3393
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %spec.select9, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %precision_wanted_type, metadata !2948, metadata !DIExpression()), !dbg !3018
  br label %if.end404, !dbg !3394

if.else376:                                       ; preds = %if.then285, %land.lhs.true299
  %99 = load i32, i32* %flags42, align 8, !dbg !3395
  %and378 = and i32 %99, 64, !dbg !3398
  %tobool379 = icmp eq i32 %and378, 0, !dbg !3398
  br i1 %tobool379, label %land.lhs.true380, label %if.end391, !dbg !3399

land.lhs.true380:                                 ; preds = %if.else376
  %100 = load i8*, i8** %format_chars.addr, align 8, !dbg !3400
  call void @llvm.dbg.value(metadata i8* %100, metadata !2920, metadata !DIExpression()), !dbg !3009
  %101 = load i8, i8* %100, align 1, !dbg !3400
  %idxprom383 = zext i8 %101 to i64, !dbg !3400
  %arrayidx384 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom383, !dbg !3400
  %102 = load i16, i16* %arrayidx384, align 2, !dbg !3400
  %103 = and i16 %102, 4, !dbg !3400
  %tobool387 = icmp eq i16 %103, 0, !dbg !3400
  br i1 %tobool387, label %if.then388, label %if.end391, !dbg !3401

if.then388:                                       ; preds = %land.lhs.true380
  %104 = load i8*, i8** %name220, align 8, !dbg !3402
  %call390 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40, i64 0, i64 0), i8* %104) #6, !dbg !3403
  br label %if.end391, !dbg !3403

if.end391:                                        ; preds = %land.lhs.true380, %if.else376, %if.then388
  %.pre53 = load i8*, i8** %format_chars.addr, align 8, !dbg !3404
  br label %while.cond392, !dbg !3405

while.cond392:                                    ; preds = %while.body400, %if.end391
  %105 = phi i8* [ %incdec.ptr401, %while.body400 ], [ %.pre53, %if.end391 ], !dbg !3404
  call void @llvm.dbg.value(metadata i8* %105, metadata !2920, metadata !DIExpression()), !dbg !3009
  %106 = load i8, i8* %105, align 1, !dbg !3404
  %idxprom395 = zext i8 %106 to i64, !dbg !3404
  %arrayidx396 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom395, !dbg !3404
  %107 = load i16, i16* %arrayidx396, align 2, !dbg !3404
  %108 = and i16 %107, 4, !dbg !3404
  %tobool399 = icmp eq i16 %108, 0, !dbg !3405
  br i1 %tobool399, label %if.end404.loopexit, label %while.body400, !dbg !3405

while.body400:                                    ; preds = %while.cond392
  call void @llvm.dbg.value(metadata i8* %105, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr401 = getelementptr inbounds i8, i8* %105, i64 1, !dbg !3406
  call void @llvm.dbg.value(metadata i8* %incdec.ptr401, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr401, i8** %format_chars.addr, align 8, !dbg !3406
  br label %while.cond392, !dbg !3405, !llvm.loop !3407

if.end404.loopexit:                               ; preds = %while.cond392
  br label %if.end404, !dbg !3409

if.end404:                                        ; preds = %if.end404.loopexit, %if.end334, %if.end278, %if.end370, %land.lhs.true281
  %first_wanted_type.7 = phi %struct.format_wanted_type* [ %first_wanted_type.3, %land.lhs.true281 ], [ %first_wanted_type.3, %if.end278 ], [ %spec.select9, %if.end370 ], [ %first_wanted_type.3, %if.end334 ], [ %first_wanted_type.3, %if.end404.loopexit ], !dbg !3018
  %last_wanted_type.5 = phi %struct.format_wanted_type* [ %first_wanted_type.3, %land.lhs.true281 ], [ %first_wanted_type.3, %if.end278 ], [ %precision_wanted_type, %if.end370 ], [ %first_wanted_type.3, %if.end334 ], [ %first_wanted_type.3, %if.end404.loopexit ], !dbg !3018
  %has_operand_number.13 = phi i32 [ %has_operand_number.8, %land.lhs.true281 ], [ %has_operand_number.8, %if.end278 ], [ %has_operand_number.11, %if.end370 ], [ %has_operand_number.11, %if.end334 ], [ %has_operand_number.8, %if.end404.loopexit ], !dbg !3061
  %arg_num.addr.14 = phi i64 [ %arg_num.addr.7, %land.lhs.true281 ], [ %arg_num.addr.7, %if.end278 ], [ %arg_num.addr.11, %if.end370 ], [ %arg_num.addr.10, %if.end334 ], [ %arg_num.addr.7, %if.end404.loopexit ], !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.14, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.13, metadata !2930, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %last_wanted_type.5, metadata !2948, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.7, metadata !2947, metadata !DIExpression()), !dbg !3018
  %109 = load i32, i32* %alloc_char, align 8, !dbg !3409
  %tobool405 = icmp eq i32 %109, 0, !dbg !3410
  br i1 %tobool405, label %if.end423, label %land.lhs.true406, !dbg !3411

land.lhs.true406:                                 ; preds = %if.end404
  %110 = load i8*, i8** %format_chars.addr, align 8, !dbg !3412
  call void @llvm.dbg.value(metadata i8* %110, metadata !2920, metadata !DIExpression()), !dbg !3009
  %111 = load i8, i8* %110, align 1, !dbg !3413
  %conv408 = sext i8 %111 to i32, !dbg !3413
  %cmp409 = icmp eq i32 %109, %conv408, !dbg !3414
  br i1 %cmp409, label %if.then411, label %if.end423, !dbg !3415

if.then411:                                       ; preds = %land.lhs.true406
  %call413 = call i64 @strlen(i8* nonnull %9) #6, !dbg !3416
  %112 = load i32, i32* %alloc_char, align 8, !dbg !3418
  %conv416 = trunc i32 %112 to i8, !dbg !3419
  %sext26 = shl i64 %call413, 32, !dbg !3420
  %idxprom418 = ashr exact i64 %sext26, 32, !dbg !3420
  %arrayidx419 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom418, !dbg !3420
  store i8 %conv416, i8* %arrayidx419, align 1, !dbg !3421
  %sext27 = add i64 %sext26, 4294967296, !dbg !3422
  %idxprom420 = ashr exact i64 %sext27, 32, !dbg !3422
  %arrayidx421 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom420, !dbg !3422
  store i8 0, i8* %arrayidx421, align 1, !dbg !3423
  %113 = load i8*, i8** %format_chars.addr, align 8, !dbg !3424
  call void @llvm.dbg.value(metadata i8* %113, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr422 = getelementptr inbounds i8, i8* %113, i64 1, !dbg !3424
  call void @llvm.dbg.value(metadata i8* %incdec.ptr422, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr422, i8** %format_chars.addr, align 8, !dbg !3424
  br label %if.end423, !dbg !3425

if.end423:                                        ; preds = %if.end404, %if.then411, %land.lhs.true406
  %114 = load i32, i32* %flags42, align 8, !dbg !3426
  %and425 = and i32 %114, 2, !dbg !3428
  %tobool426 = icmp eq i32 %and425, 0, !dbg !3428
  br i1 %tobool426, label %if.end459, label %if.then427, !dbg !3429

if.then427:                                       ; preds = %if.end423
  %115 = load i8*, i8** %format_chars.addr, align 8, !dbg !3430
  call void @llvm.dbg.value(metadata i8* %115, metadata !2920, metadata !DIExpression()), !dbg !3009
  %116 = load i8, i8* %115, align 1, !dbg !3433
  %cmp429 = icmp ne i8 %116, 97, !dbg !3434
  %117 = load i32, i32* @flag_isoc99, align 4, !dbg !3435
  %tobool432 = icmp ne i32 %117, 0, !dbg !3435
  %or.cond10 = or i1 %cmp429, %tobool432, !dbg !3436
  br i1 %or.cond10, label %if.end459, label %if.then433, !dbg !3436

if.then433:                                       ; preds = %if.then427
  call void @llvm.dbg.value(metadata i8* %115, metadata !2920, metadata !DIExpression()), !dbg !3009
  %arrayidx434 = getelementptr inbounds i8, i8* %115, i64 1, !dbg !3437
  %118 = load i8, i8* %arrayidx434, align 1, !dbg !3437
  %cmp436 = icmp eq i8 %118, 115, !dbg !3440
  br i1 %cmp436, label %if.then447, label %lor.lhs.false, !dbg !3441

lor.lhs.false:                                    ; preds = %if.then433
  call void @llvm.dbg.value(metadata i8* %115, metadata !2920, metadata !DIExpression()), !dbg !3009
  %cmp440 = icmp eq i8 %118, 83, !dbg !3442
  br i1 %cmp440, label %if.then447, label %lor.lhs.false442, !dbg !3443

lor.lhs.false442:                                 ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata i8* %115, metadata !2920, metadata !DIExpression()), !dbg !3009
  %cmp445 = icmp eq i8 %118, 91, !dbg !3444
  br i1 %cmp445, label %if.then447, label %if.end459, !dbg !3445

if.then447:                                       ; preds = %lor.lhs.false442, %lor.lhs.false, %if.then433
  %call449 = call i64 @strlen(i8* nonnull %9) #6, !dbg !3446
  %sext24 = shl i64 %call449, 32, !dbg !3448
  %idxprom452 = ashr exact i64 %sext24, 32, !dbg !3448
  %arrayidx453 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom452, !dbg !3448
  store i8 97, i8* %arrayidx453, align 1, !dbg !3449
  %sext25 = add i64 %sext24, 4294967296, !dbg !3450
  %idxprom454 = ashr exact i64 %sext25, 32, !dbg !3450
  %arrayidx455 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom454, !dbg !3450
  store i8 0, i8* %arrayidx455, align 1, !dbg !3451
  %119 = load i8*, i8** %format_chars.addr, align 8, !dbg !3452
  call void @llvm.dbg.value(metadata i8* %119, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr456 = getelementptr inbounds i8, i8* %119, i64 1, !dbg !3452
  call void @llvm.dbg.value(metadata i8* %incdec.ptr456, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr456, i8** %format_chars.addr, align 8, !dbg !3452
  br label %if.end459, !dbg !3453

if.end459:                                        ; preds = %if.end423, %if.then427, %if.then447, %lor.lhs.false442
  %120 = load %struct.format_length_info*, %struct.format_length_info** %length_char_specs, align 8, !dbg !3454
  call void @llvm.dbg.value(metadata %struct.format_length_info* %120, metadata !2949, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* null, metadata !2934, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 0, metadata !2935, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 0, metadata !2936, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 0, metadata !2956, metadata !DIExpression()), !dbg !3018
  %tobool460 = icmp eq %struct.format_length_info* %120, null, !dbg !3455
  br i1 %tobool460, label %if.end545, label %while.cond462.preheader, !dbg !3456

while.cond462.preheader:                          ; preds = %if.end459
  br label %while.cond462, !dbg !3457

while.cond462:                                    ; preds = %while.cond462.preheader, %while.body473
  %fli.0 = phi %struct.format_length_info* [ %incdec.ptr474, %while.body473 ], [ %120, %while.cond462.preheader ], !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_length_info* %fli.0, metadata !2949, metadata !DIExpression()), !dbg !3018
  %name463 = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %fli.0, i64 0, i32 0, !dbg !3458
  %121 = load i8*, i8** %name463, align 8, !dbg !3458
  %cmp464 = icmp eq i8* %121, null, !dbg !3459
  br i1 %cmp464, label %while.end475.loopexit, label %land.rhs466, !dbg !3460

land.rhs466:                                      ; preds = %while.cond462
  %122 = load i8*, i8** %format_chars.addr, align 8, !dbg !3461
  call void @llvm.dbg.value(metadata i8* %122, metadata !2920, metadata !DIExpression()), !dbg !3009
  %call469 = call i64 @strlen(i8* nonnull %121) #6, !dbg !3462
  %call470 = call i32 @strncmp(i8* nonnull %121, i8* %122, i64 %call469) #6, !dbg !3463
  %tobool471 = icmp eq i32 %call470, 0, !dbg !3460
  br i1 %tobool471, label %land.rhs466.while.end475_crit_edge, label %while.body473, !dbg !3457

land.rhs466.while.end475_crit_edge:               ; preds = %land.rhs466
  %fli.0.lcssa79 = phi %struct.format_length_info* [ %fli.0, %land.rhs466 ], !dbg !3018
  %name463.lcssa77 = phi i8** [ %name463, %land.rhs466 ], !dbg !3458
  call void @llvm.dbg.value(metadata %struct.format_length_info* %fli.0.lcssa79, metadata !2949, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_length_info* %fli.0.lcssa79, metadata !2949, metadata !DIExpression()), !dbg !3018
  %.pre54 = load i8*, i8** %name463.lcssa77, align 8, !dbg !3464
  br label %while.end475, !dbg !3457

while.body473:                                    ; preds = %land.rhs466
  %incdec.ptr474 = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %fli.0, i64 1, !dbg !3465
  call void @llvm.dbg.value(metadata %struct.format_length_info* %incdec.ptr474, metadata !2949, metadata !DIExpression()), !dbg !3018
  br label %while.cond462, !dbg !3457, !llvm.loop !3466

while.end475.loopexit:                            ; preds = %while.cond462
  %fli.0.lcssa = phi %struct.format_length_info* [ %fli.0, %while.cond462 ], !dbg !3018
  %name463.lcssa = phi i8** [ %name463, %while.cond462 ], !dbg !3458
  call void @llvm.dbg.value(metadata %struct.format_length_info* %fli.0.lcssa, metadata !2949, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_length_info* %fli.0.lcssa, metadata !2949, metadata !DIExpression()), !dbg !3018
  br label %while.end475, !dbg !3467

while.end475:                                     ; preds = %while.end475.loopexit, %land.rhs466.while.end475_crit_edge
  %fli.080 = phi %struct.format_length_info* [ %fli.0.lcssa79, %land.rhs466.while.end475_crit_edge ], [ %fli.0.lcssa, %while.end475.loopexit ]
  %name46378 = phi i8** [ %name463.lcssa77, %land.rhs466.while.end475_crit_edge ], [ %name463.lcssa, %while.end475.loopexit ]
  %123 = phi i8* [ %.pre54, %land.rhs466.while.end475_crit_edge ], [ null, %while.end475.loopexit ], !dbg !3464
  call void @llvm.dbg.value(metadata %struct.format_length_info* %fli.080, metadata !2949, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_length_info* %fli.080, metadata !2949, metadata !DIExpression()), !dbg !3018
  %cmp477 = icmp eq i8* %123, null, !dbg !3467
  br i1 %cmp477, label %if.end507, label %if.then479, !dbg !3468

if.then479:                                       ; preds = %while.end475
  %call481 = call i64 @strlen(i8* nonnull %123) #6, !dbg !3469
  %124 = load i8*, i8** %format_chars.addr, align 8, !dbg !3470
  call void @llvm.dbg.value(metadata i8* %124, metadata !2920, metadata !DIExpression()), !dbg !3009
  %add.ptr = getelementptr inbounds i8, i8* %124, i64 %call481, !dbg !3470
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %add.ptr, i8** %format_chars.addr, align 8, !dbg !3470
  %double_name = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %fli.080, i64 0, i32 3, !dbg !3471
  %125 = load i8*, i8** %double_name, align 8, !dbg !3471
  %cmp482 = icmp eq i8* %125, null, !dbg !3473
  br i1 %cmp482, label %if.else494, label %land.lhs.true484, !dbg !3474

land.lhs.true484:                                 ; preds = %if.then479
  %126 = load i8*, i8** %name46378, align 8, !dbg !3475
  %127 = load i8, i8* %126, align 1, !dbg !3476
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2920, metadata !DIExpression()), !dbg !3009
  %128 = load i8, i8* %add.ptr, align 1, !dbg !3477
  %cmp489 = icmp eq i8 %127, %128, !dbg !3478
  br i1 %cmp489, label %if.then491, label %if.else494, !dbg !3479

if.then491:                                       ; preds = %land.lhs.true484
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr492 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !3480
  call void @llvm.dbg.value(metadata i8* %incdec.ptr492, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr492, i8** %format_chars.addr, align 8, !dbg !3480
  %double_index = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %fli.080, i64 0, i32 4, !dbg !3482
  %double_std = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %fli.080, i64 0, i32 5, !dbg !3483
  br label %if.end497, !dbg !3484

if.else494:                                       ; preds = %if.then479, %land.lhs.true484
  %index = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %fli.080, i64 0, i32 1, !dbg !3485
  %std = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %fli.080, i64 0, i32 2, !dbg !3487
  %scalar_identity_flag496 = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %fli.080, i64 0, i32 6, !dbg !3488
  %129 = load i32, i32* %scalar_identity_flag496, align 8, !dbg !3488
  call void @llvm.dbg.value(metadata i32 %129, metadata !2956, metadata !DIExpression()), !dbg !3018
  br label %if.end497

if.end497:                                        ; preds = %if.else494, %if.then491
  %length_chars_std.0.in = phi i32* [ %double_std, %if.then491 ], [ %std, %if.else494 ]
  %length_chars_val.0.in = phi i32* [ %double_index, %if.then491 ], [ %index, %if.else494 ]
  %length_chars.0.in = phi i8** [ %double_name, %if.then491 ], [ %name46378, %if.else494 ]
  %scalar_identity_flag.0 = phi i32 [ 0, %if.then491 ], [ %129, %if.else494 ], !dbg !3018
  %length_chars.0 = load i8*, i8** %length_chars.0.in, align 8, !dbg !3489
  %length_chars_val.0 = load i32, i32* %length_chars_val.0.in, align 8, !dbg !3489
  %length_chars_std.0 = load i32, i32* %length_chars_std.0.in, align 4, !dbg !3489
  call void @llvm.dbg.value(metadata i32 %scalar_identity_flag.0, metadata !2956, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* %length_chars.0, metadata !2934, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 %length_chars_val.0, metadata !2935, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 %length_chars_std.0, metadata !2936, metadata !DIExpression()), !dbg !3018
  %call499 = call i64 @strlen(i8* nonnull %9) #6, !dbg !3490
  %130 = load i32, i32* %length_code_char, align 4, !dbg !3491
  %conv501 = trunc i32 %130 to i8, !dbg !3492
  %sext22 = shl i64 %call499, 32, !dbg !3493
  %idxprom503 = ashr exact i64 %sext22, 32, !dbg !3493
  %arrayidx504 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom503, !dbg !3493
  store i8 %conv501, i8* %arrayidx504, align 1, !dbg !3494
  %sext23 = add i64 %sext22, 4294967296, !dbg !3495
  %idxprom505 = ashr exact i64 %sext23, 32, !dbg !3495
  %arrayidx506 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom505, !dbg !3495
  store i8 0, i8* %arrayidx506, align 1, !dbg !3496
  br label %if.end507, !dbg !3497

if.end507:                                        ; preds = %while.end475, %if.end497
  %length_chars_std.1 = phi i32 [ %length_chars_std.0, %if.end497 ], [ 0, %while.end475 ], !dbg !3018
  %length_chars_val.1 = phi i32 [ %length_chars_val.0, %if.end497 ], [ 0, %while.end475 ], !dbg !3018
  %length_chars.1 = phi i8* [ %length_chars.0, %if.end497 ], [ null, %while.end475 ], !dbg !3018
  %scalar_identity_flag.1 = phi i32 [ %scalar_identity_flag.0, %if.end497 ], [ 0, %while.end475 ], !dbg !3498
  call void @llvm.dbg.value(metadata i32 %scalar_identity_flag.1, metadata !2956, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* %length_chars.1, metadata !2934, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 %length_chars_val.1, metadata !2935, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 %length_chars_std.1, metadata !2936, metadata !DIExpression()), !dbg !3018
  %131 = load i32, i32* @pedantic, align 4, !dbg !3499
  %tobool508 = icmp eq i32 %131, 0, !dbg !3499
  br i1 %tobool508, label %if.end545, label %if.then509, !dbg !3501

if.then509:                                       ; preds = %if.end507
  %cmp510 = icmp eq i32 %length_chars_std.1, 2, !dbg !3502
  br i1 %cmp510, label %cond.true, label %cond.end, !dbg !3502

cond.true:                                        ; preds = %if.then509
  %132 = load i32, i32* @warn_long_long, align 4, !dbg !3502
  %tobool512 = icmp eq i32 %132, 0, !dbg !3502
  %cond = select i1 %tobool512, i32 0, i32 3, !dbg !3502
  br label %cond.end, !dbg !3502

cond.end:                                         ; preds = %if.then509, %cond.true
  %cond513 = phi i32 [ %cond, %cond.true ], [ %length_chars_std.1, %if.then509 ], !dbg !3502
  %133 = load i32, i32* @c_language, align 4, !dbg !3505
  %and514 = and i32 %133, 2, !dbg !3505
  %cmp515 = icmp eq i32 %and514, 0, !dbg !3505
  br i1 %cmp515, label %cond.false518, label %cond.end526, !dbg !3505

cond.false518:                                    ; preds = %cond.end
  %134 = load i32, i32* @flag_isoc99, align 4, !dbg !3505
  %tobool519 = icmp eq i32 %134, 0, !dbg !3505
  br i1 %tobool519, label %cond.false521, label %cond.end526, !dbg !3505

cond.false521:                                    ; preds = %cond.false518
  %135 = load i32, i32* @flag_isoc94, align 4, !dbg !3505
  %tobool522 = icmp ne i32 %135, 0, !dbg !3505
  %cond523 = zext i1 %tobool522 to i32, !dbg !3505
  br label %cond.end526, !dbg !3505

cond.end526:                                      ; preds = %cond.false518, %cond.end, %cond.false521
  %cond527 = phi i32 [ 1, %cond.end ], [ %cond523, %cond.false521 ], [ 3, %cond.false518 ], !dbg !3505
  %cmp528 = icmp sgt i32 %cond513, %cond527, !dbg !3506
  br i1 %cmp528, label %if.then530, label %if.end545, !dbg !3507

if.then530:                                       ; preds = %cond.end526
  br i1 %cmp515, label %cond.false535, label %cond.end539, !dbg !3508

cond.false535:                                    ; preds = %if.then530
  %cmp536 = icmp eq i32 %length_chars_std.1, 4, !dbg !3508
  %cond538 = select i1 %cmp536, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), !dbg !3508
  br label %cond.end539, !dbg !3508

cond.end539:                                      ; preds = %if.then530, %cond.false535
  %cond540 = phi i8* [ %cond538, %cond.false535 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), %if.then530 ], !dbg !3508
  %136 = load i8*, i8** %name220, align 8, !dbg !3509
  %call542 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.41, i64 0, i64 0), i8* %cond540, i8* %length_chars.1, i8* %136) #6, !dbg !3510
  br label %if.end545, !dbg !3510

if.end545:                                        ; preds = %if.end507, %if.end459, %cond.end539, %cond.end526
  %length_chars_std.2 = phi i32 [ 0, %if.end459 ], [ %length_chars_std.1, %cond.end526 ], [ %length_chars_std.1, %cond.end539 ], [ %length_chars_std.1, %if.end507 ], !dbg !3018
  %length_chars_val.2 = phi i32 [ 0, %if.end459 ], [ %length_chars_val.1, %cond.end526 ], [ %length_chars_val.1, %cond.end539 ], [ %length_chars_val.1, %if.end507 ], !dbg !3018
  %length_chars.2 = phi i8* [ null, %if.end459 ], [ %length_chars.1, %cond.end526 ], [ %length_chars.1, %cond.end539 ], [ %length_chars.1, %if.end507 ], !dbg !3018
  %scalar_identity_flag.2 = phi i32 [ 0, %if.end459 ], [ %scalar_identity_flag.1, %cond.end526 ], [ %scalar_identity_flag.1, %cond.end539 ], [ %scalar_identity_flag.1, %if.end507 ], !dbg !3498
  call void @llvm.dbg.value(metadata i32 %scalar_identity_flag.2, metadata !2956, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* %length_chars.2, metadata !2934, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 %length_chars_val.2, metadata !2935, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 %length_chars_std.2, metadata !2936, metadata !DIExpression()), !dbg !3018
  %137 = load i8*, i8** %modifier_chars, align 8, !dbg !3511
  %cmp546 = icmp eq i8* %137, null, !dbg !3512
  br i1 %cmp546, label %if.end584, label %while.cond549.preheader, !dbg !3513

while.cond549.preheader:                          ; preds = %if.end545
  %.pre55 = load i8*, i8** %format_chars.addr, align 8, !dbg !3514
  br label %while.cond549, !dbg !3515

while.cond549:                                    ; preds = %while.cond549.preheader, %if.end581
  %138 = phi i8* [ %.pre55, %while.cond549.preheader ], [ %incdec.ptr582, %if.end581 ], !dbg !3514
  call void @llvm.dbg.value(metadata i8* %138, metadata !2920, metadata !DIExpression()), !dbg !3009
  %139 = load i8, i8* %138, align 1, !dbg !3516
  %cmp551 = icmp eq i8 %139, 0, !dbg !3517
  br i1 %cmp551, label %if.end584.loopexit, label %land.rhs553, !dbg !3518

land.rhs553:                                      ; preds = %while.cond549
  %140 = load i8*, i8** %modifier_chars, align 8, !dbg !3519
  call void @llvm.dbg.value(metadata i8* %138, metadata !2920, metadata !DIExpression()), !dbg !3009
  %conv555 = sext i8 %139 to i32, !dbg !3520
  %call556 = call i8* @strchr(i8* %140, i32 %conv555) #6, !dbg !3521
  %cmp557 = icmp eq i8* %call556, null, !dbg !3522
  br i1 %cmp557, label %if.end584.loopexit, label %while.body560, !dbg !3515

while.body560:                                    ; preds = %land.rhs553
  %141 = load i8*, i8** %format_chars.addr, align 8, !dbg !3523
  call void @llvm.dbg.value(metadata i8* %141, metadata !2920, metadata !DIExpression()), !dbg !3009
  %142 = load i8, i8* %141, align 1, !dbg !3524
  %conv562 = sext i8 %142 to i32, !dbg !3524
  %call563 = call i8* @strchr(i8* nonnull %9, i32 %conv562) #6, !dbg !3525
  %cmp564 = icmp eq i8* %call563, null, !dbg !3526
  br i1 %cmp564, label %if.else572, label %if.then566, !dbg !3527

if.then566:                                       ; preds = %while.body560
  %143 = load i8*, i8** %format_chars.addr, align 8, !dbg !3528
  call void @llvm.dbg.value(metadata i8* %143, metadata !2920, metadata !DIExpression()), !dbg !3009
  %144 = load i8, i8* %143, align 1, !dbg !3529
  %conv568 = sext i8 %144 to i32, !dbg !3529
  %call569 = call fastcc %struct.format_flag_spec* @get_flag_spec(%struct.format_flag_spec* %2, i32 %conv568, i8* null) #8, !dbg !3530
  call void @llvm.dbg.value(metadata %struct.format_flag_spec* %call569, metadata !2980, metadata !DIExpression()), !dbg !3531
  %name570 = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call569, i64 0, i32 3, !dbg !3532
  %145 = load i8*, i8** %name570, align 8, !dbg !3532
  %call571 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i64 0, i64 0), i8* %145) #6, !dbg !3533
  %.pre56 = load i8*, i8** %format_chars.addr, align 8, !dbg !3534
  br label %if.end581, !dbg !3535

if.else572:                                       ; preds = %while.body560
  %call574 = call i64 @strlen(i8* nonnull %9) #6, !dbg !3536
  %146 = load i8*, i8** %format_chars.addr, align 8, !dbg !3538
  call void @llvm.dbg.value(metadata i8* %146, metadata !2920, metadata !DIExpression()), !dbg !3009
  %147 = load i8, i8* %146, align 1, !dbg !3539
  %sext = shl i64 %call574, 32, !dbg !3540
  %idxprom577 = ashr exact i64 %sext, 32, !dbg !3540
  %arrayidx578 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom577, !dbg !3540
  store i8 %147, i8* %arrayidx578, align 1, !dbg !3541
  %sext21 = add i64 %sext, 4294967296, !dbg !3542
  %idxprom579 = ashr exact i64 %sext21, 32, !dbg !3542
  %arrayidx580 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom579, !dbg !3542
  store i8 0, i8* %arrayidx580, align 1, !dbg !3543
  br label %if.end581

if.end581:                                        ; preds = %if.else572, %if.then566
  %148 = phi i8* [ %146, %if.else572 ], [ %.pre56, %if.then566 ], !dbg !3534
  call void @llvm.dbg.value(metadata i8* %148, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr582 = getelementptr inbounds i8, i8* %148, i64 1, !dbg !3534
  call void @llvm.dbg.value(metadata i8* %incdec.ptr582, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr582, i8** %format_chars.addr, align 8, !dbg !3534
  br label %while.cond549, !dbg !3515, !llvm.loop !3544

if.end584.loopexit:                               ; preds = %while.cond549, %land.rhs553
  br label %if.end584, !dbg !3546

if.end584:                                        ; preds = %if.end584.loopexit, %if.end545
  %149 = load i8*, i8** %format_chars.addr, align 8, !dbg !3546
  call void @llvm.dbg.value(metadata i8* %149, metadata !2920, metadata !DIExpression()), !dbg !3009
  %150 = load i8, i8* %149, align 1, !dbg !3547
  %conv585 = sext i8 %150 to i32, !dbg !3547
  call void @llvm.dbg.value(metadata i32 %conv585, metadata !2937, metadata !DIExpression()), !dbg !3018
  %cmp586 = icmp eq i8 %150, 0, !dbg !3548
  br i1 %cmp586, label %if.then595, label %lor.lhs.false588, !dbg !3550

lor.lhs.false588:                                 ; preds = %if.end584
  %151 = load i32, i32* %flags42, align 8, !dbg !3551
  %and590 = and i32 %151, 4, !dbg !3552
  %tobool591 = icmp eq i32 %and590, 0, !dbg !3552
  %cmp593 = icmp eq i8 %150, 37, !dbg !3553
  %or.cond11 = and i1 %tobool591, %cmp593, !dbg !3554
  br i1 %or.cond11, label %if.then595, label %if.end597, !dbg !3554

if.then595:                                       ; preds = %lor.lhs.false588, %if.end584
  %call596 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !3555
  br label %cleanup1287, !dbg !3557, !llvm.loop !3096

if.end597:                                        ; preds = %lor.lhs.false588
  call void @llvm.dbg.value(metadata i8* %149, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr598 = getelementptr inbounds i8, i8* %149, i64 1, !dbg !3558
  call void @llvm.dbg.value(metadata i8* %incdec.ptr598, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr598, i8** %format_chars.addr, align 8, !dbg !3558
  %152 = load %struct.format_char_info*, %struct.format_char_info** %conversion_specs, align 8, !dbg !3559
  call void @llvm.dbg.value(metadata %struct.format_char_info* %152, metadata !2950, metadata !DIExpression()), !dbg !3018
  br label %while.cond599, !dbg !3560

while.cond599:                                    ; preds = %while.body609, %if.end597
  %fci.0 = phi %struct.format_char_info* [ %152, %if.end597 ], [ %incdec.ptr610, %while.body609 ], !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci.0, metadata !2950, metadata !DIExpression()), !dbg !3018
  %format_chars600 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.0, i64 0, i32 0, !dbg !3561
  %153 = load i8*, i8** %format_chars600, align 8, !dbg !3561
  %cmp601 = icmp eq i8* %153, null, !dbg !3562
  br i1 %cmp601, label %while.end611.loopexit, label %land.rhs603, !dbg !3563

land.rhs603:                                      ; preds = %while.cond599
  %call605 = call i8* @strchr(i8* nonnull %153, i32 %conv585) #6, !dbg !3564
  %cmp606 = icmp eq i8* %call605, null, !dbg !3565
  br i1 %cmp606, label %while.body609, label %land.rhs603.while.end611_crit_edge, !dbg !3560

land.rhs603.while.end611_crit_edge:               ; preds = %land.rhs603
  %fci.0.lcssa82 = phi %struct.format_char_info* [ %fci.0, %land.rhs603 ], !dbg !3018
  %format_chars600.lcssa81 = phi i8** [ %format_chars600, %land.rhs603 ], !dbg !3561
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci.0.lcssa82, metadata !2950, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci.0.lcssa82, metadata !2950, metadata !DIExpression()), !dbg !3018
  %.pre57 = load i8*, i8** %format_chars600.lcssa81, align 8, !dbg !3566
  br label %while.end611, !dbg !3560

while.body609:                                    ; preds = %land.rhs603
  %incdec.ptr610 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.0, i64 1, !dbg !3568
  call void @llvm.dbg.value(metadata %struct.format_char_info* %incdec.ptr610, metadata !2950, metadata !DIExpression()), !dbg !3018
  br label %while.cond599, !dbg !3560, !llvm.loop !3569

while.end611.loopexit:                            ; preds = %while.cond599
  %fci.0.lcssa = phi %struct.format_char_info* [ %fci.0, %while.cond599 ], !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci.0.lcssa, metadata !2950, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci.0.lcssa, metadata !2950, metadata !DIExpression()), !dbg !3018
  br label %while.end611, !dbg !3571

while.end611:                                     ; preds = %while.end611.loopexit, %land.rhs603.while.end611_crit_edge
  %fci.083 = phi %struct.format_char_info* [ %fci.0.lcssa82, %land.rhs603.while.end611_crit_edge ], [ %fci.0.lcssa, %while.end611.loopexit ]
  %154 = phi i8* [ %.pre57, %land.rhs603.while.end611_crit_edge ], [ null, %while.end611.loopexit ], !dbg !3566
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci.083, metadata !2950, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci.083, metadata !2950, metadata !DIExpression()), !dbg !3018
  %cmp613 = icmp eq i8* %154, null, !dbg !3571
  br i1 %cmp613, label %if.then615, label %if.end627, !dbg !3572

if.then615:                                       ; preds = %while.end611
  %and616 = and i32 %conv585, 255, !dbg !3573
  %idxprom617 = zext i32 %and616 to i64, !dbg !3573
  %arrayidx618 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom617, !dbg !3573
  %155 = load i16, i16* %arrayidx618, align 2, !dbg !3573
  %156 = and i16 %155, 172, !dbg !3573
  %tobool621 = icmp eq i16 %156, 0, !dbg !3573
  br i1 %tobool621, label %if.else624, label %if.then622, !dbg !3576

if.then622:                                       ; preds = %if.then615
  %call623 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.46, i64 0, i64 0), i32 %conv585) #6, !dbg !3577
  br label %cleanup1287, !dbg !3577, !llvm.loop !3096

if.else624:                                       ; preds = %if.then615
  %call625 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.47, i64 0, i64 0), i32 %conv585) #6, !dbg !3578
  br label %cleanup1287, !llvm.loop !3096

if.end627:                                        ; preds = %while.end611
  %157 = load i32, i32* @pedantic, align 4, !dbg !3579
  %tobool628 = icmp eq i32 %157, 0, !dbg !3579
  br i1 %tobool628, label %if.end671, label %if.then629, !dbg !3581

if.then629:                                       ; preds = %if.end627
  %std630 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.083, i64 0, i32 2, !dbg !3582
  %158 = load i32, i32* %std630, align 4, !dbg !3582
  %cmp631 = icmp eq i32 %158, 2, !dbg !3582
  br i1 %cmp631, label %cond.true633, label %cond.false636, !dbg !3582

cond.true633:                                     ; preds = %if.then629
  %159 = load i32, i32* @warn_long_long, align 4, !dbg !3582
  %tobool634 = icmp eq i32 %159, 0, !dbg !3582
  %cond635 = select i1 %tobool634, i32 0, i32 3, !dbg !3582
  br label %cond.end638, !dbg !3582

cond.false636:                                    ; preds = %if.then629
  br label %cond.end638, !dbg !3582

cond.end638:                                      ; preds = %cond.false636, %cond.true633
  %cond639 = phi i32 [ %cond635, %cond.true633 ], [ %158, %cond.false636 ], !dbg !3582
  %160 = load i32, i32* @c_language, align 4, !dbg !3585
  %and640 = and i32 %160, 2, !dbg !3585
  %cmp641 = icmp eq i32 %and640, 0, !dbg !3585
  br i1 %cmp641, label %cond.false644, label %cond.end652, !dbg !3585

cond.false644:                                    ; preds = %cond.end638
  %161 = load i32, i32* @flag_isoc99, align 4, !dbg !3585
  %tobool645 = icmp eq i32 %161, 0, !dbg !3585
  br i1 %tobool645, label %cond.false647, label %cond.end652, !dbg !3585

cond.false647:                                    ; preds = %cond.false644
  %162 = load i32, i32* @flag_isoc94, align 4, !dbg !3585
  %tobool648 = icmp ne i32 %162, 0, !dbg !3585
  %cond649 = zext i1 %tobool648 to i32, !dbg !3585
  br label %cond.end652, !dbg !3585

cond.end652:                                      ; preds = %cond.false644, %cond.end638, %cond.false647
  %cond653 = phi i32 [ 1, %cond.end638 ], [ %cond649, %cond.false647 ], [ 3, %cond.false644 ], !dbg !3585
  %cmp654 = icmp sgt i32 %cond639, %cond653, !dbg !3586
  br i1 %cmp654, label %if.then656, label %if.end671, !dbg !3587

if.then656:                                       ; preds = %cond.end652
  br i1 %cmp641, label %cond.false661, label %cond.end666, !dbg !3588

cond.false661:                                    ; preds = %if.then656
  %cmp663 = icmp eq i32 %158, 4, !dbg !3588
  %cond665 = select i1 %cmp663, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), !dbg !3588
  br label %cond.end666, !dbg !3588

cond.end666:                                      ; preds = %if.then656, %cond.false661
  %cond667 = phi i8* [ %cond665, %cond.false661 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), %if.then656 ], !dbg !3588
  %163 = load i8*, i8** %name220, align 8, !dbg !3589
  %call669 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.48, i64 0, i64 0), i8* %cond667, i32 %conv585, i8* %163) #6, !dbg !3590
  br label %if.end671, !dbg !3590

if.end671:                                        ; preds = %if.end627, %cond.end652, %cond.end666
  call void @llvm.dbg.value(metadata i32 0, metadata !2986, metadata !DIExpression()), !dbg !3591
  call void @llvm.dbg.value(metadata i32 0, metadata !2931, metadata !DIExpression()), !dbg !3018
  %flag_chars695 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.083, i64 0, i32 4, !dbg !3592
  %flags2 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.083, i64 0, i32 5, !dbg !3594
  br label %for.cond, !dbg !3595

for.cond:                                         ; preds = %cleanup833, %if.end671
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup833 ], [ 0, %if.end671 ], !dbg !3596
  %d.0 = phi i32 [ %d.1, %cleanup833 ], [ 0, %if.end671 ], !dbg !3597
  call void @llvm.dbg.value(metadata i32 %d.0, metadata !2986, metadata !DIExpression()), !dbg !3591
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2931, metadata !DIExpression()), !dbg !3018
  %arrayidx673 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %indvars.iv, !dbg !3598
  %164 = load i8, i8* %arrayidx673, align 1, !dbg !3598
  %cmp675 = icmp eq i8 %164, 0, !dbg !3599
  br i1 %cmp675, label %for.end, label %for.body, !dbg !3600

for.body:                                         ; preds = %for.cond
  %conv680 = sext i8 %164 to i32, !dbg !3601
  %call681 = call fastcc %struct.format_flag_spec* @get_flag_spec(%struct.format_flag_spec* %2, i32 %conv680, i8* null) #8, !dbg !3602
  call void @llvm.dbg.value(metadata %struct.format_flag_spec* %call681, metadata !2988, metadata !DIExpression()), !dbg !3603
  %165 = load i8, i8* %arrayidx673, align 1, !dbg !3604
  %166 = trunc i64 %indvars.iv to i32, !dbg !3605
  %sub684 = sub nsw i32 %166, %d.0, !dbg !3605
  %idxprom685 = sext i32 %sub684 to i64, !dbg !3606
  %arrayidx686 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom685, !dbg !3606
  store i8 %165, i8* %arrayidx686, align 1, !dbg !3607
  %167 = load i8, i8* %arrayidx673, align 1, !dbg !3608
  %conv689 = sext i8 %167 to i32, !dbg !3608
  %168 = load i32, i32* %length_code_char, align 4, !dbg !3610
  %cmp691 = icmp eq i32 %168, %conv689, !dbg !3611
  br i1 %cmp691, label %cleanup833, label %if.end694, !dbg !3612

if.end694:                                        ; preds = %for.body
  %169 = load i8*, i8** %flag_chars695, align 8, !dbg !3613
  %call699 = call i8* @strchr(i8* %169, i32 %conv689) #6, !dbg !3614
  %cmp700 = icmp eq i8* %call699, null, !dbg !3615
  br i1 %cmp700, label %if.then702, label %if.end707, !dbg !3616

if.then702:                                       ; preds = %if.end694
  %name703 = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call681, i64 0, i32 3, !dbg !3617
  %170 = load i8*, i8** %name703, align 8, !dbg !3617
  %171 = load i8*, i8** %name220, align 8, !dbg !3619
  %call705 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.49, i64 0, i64 0), i8* %170, i32 %conv585, i8* %171) #6, !dbg !3620
  %inc706 = add nsw i32 %d.0, 1, !dbg !3621
  call void @llvm.dbg.value(metadata i32 %inc706, metadata !2986, metadata !DIExpression()), !dbg !3591
  br label %cleanup833, !dbg !3622

if.end707:                                        ; preds = %if.end694
  %172 = load i32, i32* @pedantic, align 4, !dbg !3623
  %tobool708 = icmp eq i32 %172, 0, !dbg !3623
  br i1 %tobool708, label %cleanup833, label %if.then709, !dbg !3624

if.then709:                                       ; preds = %if.end707
  %std710 = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call681, i64 0, i32 5, !dbg !3625
  %173 = load i32, i32* %std710, align 8, !dbg !3625
  %cmp711 = icmp eq i32 %173, 2, !dbg !3625
  br i1 %cmp711, label %cond.true713, label %cond.false716, !dbg !3625

cond.true713:                                     ; preds = %if.then709
  %174 = load i32, i32* @warn_long_long, align 4, !dbg !3625
  %tobool714 = icmp eq i32 %174, 0, !dbg !3625
  %cond715 = select i1 %tobool714, i32 0, i32 3, !dbg !3625
  br label %cond.end718, !dbg !3625

cond.false716:                                    ; preds = %if.then709
  br label %cond.end718, !dbg !3625

cond.end718:                                      ; preds = %cond.false716, %cond.true713
  %cond719 = phi i32 [ %cond715, %cond.true713 ], [ %173, %cond.false716 ], !dbg !3625
  %175 = load i32, i32* @c_language, align 4, !dbg !3627
  %and720 = and i32 %175, 2, !dbg !3627
  %cmp721 = icmp eq i32 %and720, 0, !dbg !3627
  br i1 %cmp721, label %cond.false724, label %cond.end732, !dbg !3627

cond.false724:                                    ; preds = %cond.end718
  %176 = load i32, i32* @flag_isoc99, align 4, !dbg !3627
  %tobool725 = icmp eq i32 %176, 0, !dbg !3627
  br i1 %tobool725, label %cond.false727, label %cond.end732, !dbg !3627

cond.false727:                                    ; preds = %cond.false724
  %177 = load i32, i32* @flag_isoc94, align 4, !dbg !3627
  %tobool728 = icmp ne i32 %177, 0, !dbg !3627
  %cond729 = zext i1 %tobool728 to i32, !dbg !3627
  br label %cond.end732, !dbg !3627

cond.end732:                                      ; preds = %cond.false724, %cond.end718, %cond.false727
  %cond733 = phi i32 [ 1, %cond.end718 ], [ %cond729, %cond.false727 ], [ 3, %cond.false724 ], !dbg !3627
  %cmp734 = icmp sgt i32 %cond719, %cond733, !dbg !3628
  br i1 %cmp734, label %if.then736, label %if.end749, !dbg !3629

if.then736:                                       ; preds = %cond.end732
  br i1 %cmp721, label %cond.false741, label %cond.end746, !dbg !3630

cond.false741:                                    ; preds = %if.then736
  %cmp743 = icmp eq i32 %173, 4, !dbg !3630
  %cond745 = select i1 %cmp743, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), !dbg !3630
  br label %cond.end746, !dbg !3630

cond.end746:                                      ; preds = %if.then736, %cond.false741
  %cond747 = phi i8* [ %cond745, %cond.false741 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), %if.then736 ], !dbg !3630
  %long_name = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call681, i64 0, i32 4, !dbg !3631
  %178 = load i8*, i8** %long_name, align 8, !dbg !3631
  %call748 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.50, i64 0, i64 0), i8* %cond747, i8* %178) #6, !dbg !3632
  br label %if.end749, !dbg !3632

if.end749:                                        ; preds = %cond.end746, %cond.end732
  %179 = load i8, i8* %arrayidx673, align 1, !dbg !3633
  %conv752 = sext i8 %179 to i32, !dbg !3633
  %180 = load i8*, i8** %flags2, align 8, !dbg !3634
  %call753 = call fastcc %struct.format_flag_spec* @get_flag_spec(%struct.format_flag_spec* %2, i32 %conv752, i8* %180) #8, !dbg !3635
  call void @llvm.dbg.value(metadata %struct.format_flag_spec* %call753, metadata !2992, metadata !DIExpression()), !dbg !3594
  %cmp754 = icmp eq %struct.format_flag_spec* %call753, null, !dbg !3636
  br i1 %cmp754, label %cleanup833, label %land.lhs.true756, !dbg !3637

land.lhs.true756:                                 ; preds = %if.end749
  %std757 = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call753, i64 0, i32 5, !dbg !3638
  %181 = load i32, i32* %std757, align 8, !dbg !3638
  %cmp758 = icmp eq i32 %181, 2, !dbg !3638
  br i1 %cmp758, label %cond.true760, label %cond.false763, !dbg !3638

cond.true760:                                     ; preds = %land.lhs.true756
  %182 = load i32, i32* @warn_long_long, align 4, !dbg !3638
  %tobool761 = icmp eq i32 %182, 0, !dbg !3638
  %cond762 = select i1 %tobool761, i32 0, i32 3, !dbg !3638
  br label %cond.end765, !dbg !3638

cond.false763:                                    ; preds = %land.lhs.true756
  br label %cond.end765, !dbg !3638

cond.end765:                                      ; preds = %cond.false763, %cond.true760
  %cond766 = phi i32 [ %cond762, %cond.true760 ], [ %181, %cond.false763 ], !dbg !3638
  %183 = load i32, i32* %std710, align 8, !dbg !3639
  %cmp768 = icmp eq i32 %183, 2, !dbg !3639
  br i1 %cmp768, label %cond.true770, label %cond.false773, !dbg !3639

cond.true770:                                     ; preds = %cond.end765
  %184 = load i32, i32* @warn_long_long, align 4, !dbg !3639
  %tobool771 = icmp eq i32 %184, 0, !dbg !3639
  %cond772 = select i1 %tobool771, i32 0, i32 3, !dbg !3639
  br label %cond.end775, !dbg !3639

cond.false773:                                    ; preds = %cond.end765
  br label %cond.end775, !dbg !3639

cond.end775:                                      ; preds = %cond.false773, %cond.true770
  %cond776 = phi i32 [ %cond772, %cond.true770 ], [ %183, %cond.false773 ], !dbg !3639
  %cmp777 = icmp sgt i32 %cond766, %cond776, !dbg !3640
  br i1 %cmp777, label %if.then779, label %cleanup833, !dbg !3641

if.then779:                                       ; preds = %cond.end775
  %long_name781 = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call753, i64 0, i32 4, !dbg !3642
  %185 = load i8*, i8** %long_name781, align 8, !dbg !3642
  %cmp782 = icmp eq i8* %185, null, !dbg !3643
  br i1 %cmp782, label %cond.false786, label %cond.true784, !dbg !3644

cond.true784:                                     ; preds = %if.then779
  br label %cond.end788, !dbg !3644

cond.false786:                                    ; preds = %if.then779
  br label %cond.end788, !dbg !3644

cond.end788:                                      ; preds = %cond.false786, %cond.true784
  %call753.pn = phi %struct.format_flag_spec* [ %call753, %cond.true784 ], [ %call681, %cond.false786 ]
  %cond789.in = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call753.pn, i64 0, i32 4, !dbg !3645
  %cond789 = load i8*, i8** %cond789.in, align 8, !dbg !3644
  call void @llvm.dbg.value(metadata i8* %cond789, metadata !2995, metadata !DIExpression()), !dbg !3645
  br i1 %cmp758, label %cond.true793, label %cond.false796, !dbg !3646

cond.true793:                                     ; preds = %cond.end788
  %186 = load i32, i32* @warn_long_long, align 4, !dbg !3646
  %tobool794 = icmp eq i32 %186, 0, !dbg !3646
  %cond795 = select i1 %tobool794, i32 0, i32 3, !dbg !3646
  br label %cond.end798, !dbg !3646

cond.false796:                                    ; preds = %cond.end788
  br label %cond.end798, !dbg !3646

cond.end798:                                      ; preds = %cond.false796, %cond.true793
  %cond799 = phi i32 [ %cond795, %cond.true793 ], [ %181, %cond.false796 ], !dbg !3646
  %187 = load i32, i32* @c_language, align 4, !dbg !3648
  %and800 = and i32 %187, 2, !dbg !3648
  %cmp801 = icmp eq i32 %and800, 0, !dbg !3648
  br i1 %cmp801, label %cond.false804, label %cond.end812, !dbg !3648

cond.false804:                                    ; preds = %cond.end798
  %188 = load i32, i32* @flag_isoc99, align 4, !dbg !3648
  %tobool805 = icmp eq i32 %188, 0, !dbg !3648
  br i1 %tobool805, label %cond.false807, label %cond.end812, !dbg !3648

cond.false807:                                    ; preds = %cond.false804
  %189 = load i32, i32* @flag_isoc94, align 4, !dbg !3648
  %tobool808 = icmp ne i32 %189, 0, !dbg !3648
  %cond809 = zext i1 %tobool808 to i32, !dbg !3648
  br label %cond.end812, !dbg !3648

cond.end812:                                      ; preds = %cond.false804, %cond.end798, %cond.false807
  %cond813 = phi i32 [ 1, %cond.end798 ], [ %cond809, %cond.false807 ], [ 3, %cond.false804 ], !dbg !3648
  %cmp814 = icmp sgt i32 %cond799, %cond813, !dbg !3649
  br i1 %cmp814, label %if.then816, label %cleanup833, !dbg !3650

if.then816:                                       ; preds = %cond.end812
  br i1 %cmp801, label %cond.false821, label %cond.end826, !dbg !3651

cond.false821:                                    ; preds = %if.then816
  %cmp823 = icmp eq i32 %181, 4, !dbg !3651
  %cond825 = select i1 %cmp823, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), !dbg !3651
  br label %cond.end826, !dbg !3651

cond.end826:                                      ; preds = %if.then816, %cond.false821
  %cond827 = phi i8* [ %cond825, %cond.false821 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), %if.then816 ], !dbg !3651
  %190 = load i8*, i8** %name220, align 8, !dbg !3652
  %call829 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.51, i64 0, i64 0), i8* %cond827, i8* %cond789, i32 %conv585, i8* %190) #6, !dbg !3653
  br label %cleanup833, !dbg !3653

cleanup833:                                       ; preds = %if.end749, %if.end707, %cond.end812, %cond.end826, %cond.end775, %for.body, %if.then702
  %d.1 = phi i32 [ %inc706, %if.then702 ], [ %d.0, %for.body ], [ %d.0, %if.end749 ], [ %d.0, %cond.end775 ], [ %d.0, %cond.end826 ], [ %d.0, %cond.end812 ], [ %d.0, %if.end707 ], !dbg !3591
  call void @llvm.dbg.value(metadata i32 %d.1, metadata !2986, metadata !DIExpression()), !dbg !3591
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !3654
  call void @llvm.dbg.value(metadata i32 undef, metadata !2931, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3018
  br label %for.cond, !dbg !3655, !llvm.loop !3656

for.end:                                          ; preds = %for.cond
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %for.cond ], !dbg !3596
  %d.0.lcssa = phi i32 [ %d.0, %for.cond ], !dbg !3597
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !2931, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 %d.0.lcssa, metadata !2986, metadata !DIExpression()), !dbg !3591
  %191 = trunc i64 %indvars.iv.lcssa to i32, !dbg !3018
  call void @llvm.dbg.value(metadata i32 %191, metadata !2931, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 %d.0.lcssa, metadata !2986, metadata !DIExpression()), !dbg !3591
  call void @llvm.dbg.value(metadata i32 %191, metadata !2931, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 %d.0.lcssa, metadata !2986, metadata !DIExpression()), !dbg !3591
  %sub837 = sub nsw i32 %191, %d.0.lcssa, !dbg !3658
  %idxprom838 = sext i32 %sub837 to i64, !dbg !3659
  %arrayidx839 = getelementptr inbounds [256 x i8], [256 x i8]* %flag_chars, i64 0, i64 %idxprom838, !dbg !3659
  store i8 0, i8* %arrayidx839, align 1, !dbg !3660
  %192 = load i32, i32* %flags42, align 8, !dbg !3661
  %and841 = and i32 %192, 2, !dbg !3663
  %tobool842 = icmp eq i32 %and841, 0, !dbg !3663
  br i1 %tobool842, label %if.end849, label %land.lhs.true843, !dbg !3664

land.lhs.true843:                                 ; preds = %for.end
  %call845 = call i8* @strchr(i8* nonnull %9, i32 97) #6, !dbg !3665
  %cmp846 = icmp ne i8* %call845, null, !dbg !3666
  %spec.select12 = zext i1 %cmp846 to i32, !dbg !3667
  br label %if.end849, !dbg !3667

if.end849:                                        ; preds = %for.end, %land.lhs.true843
  %alloc_flag.0 = phi i32 [ 0, %for.end ], [ %spec.select12, %land.lhs.true843 ], !dbg !3018
  call void @llvm.dbg.value(metadata i32 %alloc_flag.0, metadata !2955, metadata !DIExpression()), !dbg !3018
  %193 = load i32, i32* %alloc_char, align 8, !dbg !3668
  %tobool851 = icmp eq i32 %193, 0, !dbg !3670
  br i1 %tobool851, label %if.end859, label %land.lhs.true852, !dbg !3671

land.lhs.true852:                                 ; preds = %if.end849
  %call855 = call i8* @strchr(i8* nonnull %9, i32 %193) #6, !dbg !3672
  %cmp856 = icmp eq i8* %call855, null, !dbg !3673
  %spec.select13 = select i1 %cmp856, i32 %alloc_flag.0, i32 1, !dbg !3674
  br label %if.end859, !dbg !3674

if.end859:                                        ; preds = %if.end849, %land.lhs.true852
  %alloc_flag.1 = phi i32 [ %alloc_flag.0, %if.end849 ], [ %spec.select13, %land.lhs.true852 ], !dbg !3018
  call void @llvm.dbg.value(metadata i32 %alloc_flag.1, metadata !2955, metadata !DIExpression()), !dbg !3018
  %194 = load i32, i32* %suppression_char, align 8, !dbg !3675
  %tobool860 = icmp eq i32 %194, 0, !dbg !3676
  br i1 %tobool860, label %if.end868, label %land.lhs.true861, !dbg !3677

land.lhs.true861:                                 ; preds = %if.end859
  %call864 = call i8* @strchr(i8* nonnull %9, i32 %194) #6, !dbg !3678
  %cmp865 = icmp ne i8* %call864, null, !dbg !3679
  %spec.select14 = zext i1 %cmp865 to i32, !dbg !3680
  br label %if.end868, !dbg !3680

if.end868:                                        ; preds = %if.end859, %land.lhs.true861
  %suppressed.0 = phi i32 [ 0, %if.end859 ], [ %spec.select14, %land.lhs.true861 ], !dbg !3018
  call void @llvm.dbg.value(metadata i32 %suppressed.0, metadata !2933, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i32 0, metadata !2931, metadata !DIExpression()), !dbg !3018
  br label %for.cond869, !dbg !3681

for.cond869:                                      ; preds = %cleanup954, %if.end868
  %indvars.iv75 = phi i64 [ %indvars.iv.next76, %cleanup954 ], [ 0, %if.end868 ], !dbg !3682
  call void @llvm.dbg.value(metadata i64 %indvars.iv75, metadata !2931, metadata !DIExpression()), !dbg !3018
  %flag_char1 = getelementptr inbounds %struct.format_flag_pair, %struct.format_flag_pair* %3, i64 %indvars.iv75, i32 0, !dbg !3683
  %195 = load i32, i32* %flag_char1, align 4, !dbg !3683
  %cmp872 = icmp eq i32 %195, 0, !dbg !3684
  br i1 %cmp872, label %for.end960, label %for.body874, !dbg !3685

for.body874:                                      ; preds = %for.cond869
  %call881 = call i8* @strchr(i8* nonnull %9, i32 %195) #6, !dbg !3686
  %cmp882 = icmp eq i8* %call881, null, !dbg !3688
  br i1 %cmp882, label %cleanup954, label %if.end885, !dbg !3689

if.end885:                                        ; preds = %for.body874
  %flag_char2 = getelementptr inbounds %struct.format_flag_pair, %struct.format_flag_pair* %3, i64 %indvars.iv75, i32 1, !dbg !3690
  %196 = load i32, i32* %flag_char2, align 4, !dbg !3690
  %call889 = call i8* @strchr(i8* nonnull %9, i32 %196) #6, !dbg !3692
  %cmp890 = icmp eq i8* %call889, null, !dbg !3693
  br i1 %cmp890, label %cleanup954, label %if.end893, !dbg !3694

if.end893:                                        ; preds = %if.end885
  %predicate = getelementptr inbounds %struct.format_flag_pair, %struct.format_flag_pair* %3, i64 %indvars.iv75, i32 3, !dbg !3695
  %197 = load i32, i32* %predicate, align 4, !dbg !3695
  %cmp896 = icmp eq i32 %197, 0, !dbg !3697
  br i1 %cmp896, label %if.end907, label %land.lhs.true898, !dbg !3698

land.lhs.true898:                                 ; preds = %if.end893
  %198 = load i8*, i8** %flags2, align 8, !dbg !3699
  %call903 = call i8* @strchr(i8* %198, i32 %197) #6, !dbg !3700
  %cmp904 = icmp eq i8* %call903, null, !dbg !3701
  br i1 %cmp904, label %cleanup954, label %if.end907, !dbg !3702

if.end907:                                        ; preds = %if.end893, %land.lhs.true898
  %199 = load i32, i32* %flag_char1, align 4, !dbg !3703
  %call911 = call fastcc %struct.format_flag_spec* @get_flag_spec(%struct.format_flag_spec* %2, i32 %199, i8* null) #8, !dbg !3704
  call void @llvm.dbg.value(metadata %struct.format_flag_spec* %call911, metadata !2998, metadata !DIExpression()), !dbg !3705
  %200 = load i32, i32* %flag_char2, align 4, !dbg !3706
  %call915 = call fastcc %struct.format_flag_spec* @get_flag_spec(%struct.format_flag_spec* %2, i32 %200, i8* null) #8, !dbg !3707
  call void @llvm.dbg.value(metadata %struct.format_flag_spec* %call915, metadata !3002, metadata !DIExpression()), !dbg !3705
  %ignored = getelementptr inbounds %struct.format_flag_pair, %struct.format_flag_pair* %3, i64 %indvars.iv75, i32 2, !dbg !3708
  %201 = load i32, i32* %ignored, align 4, !dbg !3708
  %tobool918 = icmp eq i32 %201, 0, !dbg !3710
  %202 = load i32, i32* %predicate, align 4, !dbg !3711
  %cmp923 = icmp ne i32 %202, 0, !dbg !3711
  %name926 = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call911, i64 0, i32 3, !dbg !3711
  %203 = load i8*, i8** %name926, align 8, !dbg !3711
  %name927 = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %call915, i64 0, i32 3, !dbg !3711
  %204 = load i8*, i8** %name927, align 8, !dbg !3711
  %205 = load i8*, i8** %name220, align 8, !dbg !3711
  br i1 %tobool918, label %if.else936, label %if.then919, !dbg !3712

if.then919:                                       ; preds = %if.end907
  br i1 %cmp923, label %if.then925, label %if.else930, !dbg !3713

if.then925:                                       ; preds = %if.then919
  %call929 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.52, i64 0, i64 0), i8* %203, i8* %204, i32 %conv585, i8* %205) #6, !dbg !3715
  br label %cleanup954, !dbg !3715

if.else930:                                       ; preds = %if.then919
  %call934 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.53, i64 0, i64 0), i8* %203, i8* %204, i8* %205) #6, !dbg !3717
  br label %cleanup954

if.else936:                                       ; preds = %if.end907
  br i1 %cmp923, label %if.then942, label %if.else947, !dbg !3718

if.then942:                                       ; preds = %if.else936
  %call946 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.54, i64 0, i64 0), i8* %203, i8* %204, i32 %conv585, i8* %205) #6, !dbg !3720
  br label %cleanup954, !dbg !3720

if.else947:                                       ; preds = %if.else936
  %call951 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55, i64 0, i64 0), i8* %203, i8* %204, i8* %205) #6, !dbg !3722
  br label %cleanup954

cleanup954:                                       ; preds = %if.else930, %if.then925, %if.else947, %if.then942, %land.lhs.true898, %if.end885, %for.body874
  %indvars.iv.next76 = add nuw i64 %indvars.iv75, 1, !dbg !3723
  call void @llvm.dbg.value(metadata i32 undef, metadata !2931, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3018
  br label %for.cond869, !dbg !3724, !llvm.loop !3725

for.end960:                                       ; preds = %for.cond869
  %206 = load i32, i32* @warn_format_y2k, align 4, !dbg !3727
  %tobool961 = icmp eq i32 %206, 0, !dbg !3727
  br i1 %tobool961, label %if.end1001, label %if.then962, !dbg !3728

if.then962:                                       ; preds = %for.end960
  call void @llvm.dbg.value(metadata i32 0, metadata !3003, metadata !DIExpression()), !dbg !3729
  %207 = load i8*, i8** %flags2, align 8, !dbg !3730
  %call964 = call i8* @strchr(i8* %207, i32 52) #6, !dbg !3732
  %cmp965 = icmp eq i8* %call964, null, !dbg !3733
  br i1 %cmp965, label %if.else975, label %if.then967, !dbg !3734

if.then967:                                       ; preds = %if.then962
  %call969 = call i8* @strchr(i8* nonnull %9, i32 69) #6, !dbg !3735
  %cmp970 = icmp eq i8* %call969, null, !dbg !3737
  %. = select i1 %cmp970, i32 2, i32 3
  call void @llvm.dbg.value(metadata i32 %., metadata !3003, metadata !DIExpression()), !dbg !3729
  br label %if.end989, !dbg !3738

if.else975:                                       ; preds = %if.then962
  %208 = load i8*, i8** %flags2, align 8, !dbg !3739
  %call977 = call i8* @strchr(i8* %208, i32 51) #6, !dbg !3741
  %cmp978 = icmp eq i8* %call977, null, !dbg !3742
  br i1 %cmp978, label %if.else981, label %if.end989, !dbg !3743

if.else981:                                       ; preds = %if.else975
  %209 = load i8*, i8** %flags2, align 8, !dbg !3744
  %call983 = call i8* @strchr(i8* %209, i32 50) #6, !dbg !3746
  %cmp984 = icmp eq i8* %call983, null, !dbg !3747
  %spec.select16 = select i1 %cmp984, i32 0, i32 2, !dbg !3748
  call void @llvm.dbg.value(metadata i32 %spec.select16, metadata !3003, metadata !DIExpression()), !dbg !3729
  br label %if.end989

if.end989:                                        ; preds = %if.else975, %if.else981, %if.then967
  %y2k_level.3 = phi i32 [ %., %if.then967 ], [ %spec.select16, %if.else981 ], [ 3, %if.else975 ], !dbg !3749
  call void @llvm.dbg.value(metadata i32 %y2k_level.3, metadata !3003, metadata !DIExpression()), !dbg !3729
  switch i32 %y2k_level.3, label %if.end1001 [
    i32 3, label %if.then992
    i32 2, label %if.then997
  ], !dbg !3750

if.then992:                                       ; preds = %if.end989
  %call993 = call zeroext i8 (i32, i8*, ...) @warning(i32 96, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.56, i64 0, i64 0), i32 %conv585) #6, !dbg !3751
  br label %if.end1001, !dbg !3751

if.then997:                                       ; preds = %if.end989
  %call998 = call zeroext i8 (i32, i8*, ...) @warning(i32 96, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.57, i64 0, i64 0), i32 %conv585) #6, !dbg !3753
  br label %if.end1001, !dbg !3753

if.end1001:                                       ; preds = %for.end960, %if.then992, %if.end989, %if.then997
  %210 = load i8*, i8** %flags2, align 8, !dbg !3755
  %call1003 = call i8* @strchr(i8* %210, i32 91) #6, !dbg !3757
  %cmp1004 = icmp eq i8* %call1003, null, !dbg !3758
  br i1 %cmp1004, label %if.end1036, label %if.then1006, !dbg !3759

if.then1006:                                      ; preds = %if.end1001
  %211 = load i8*, i8** %format_chars.addr, align 8, !dbg !3760
  call void @llvm.dbg.value(metadata i8* %211, metadata !2920, metadata !DIExpression()), !dbg !3009
  %212 = load i8, i8* %211, align 1, !dbg !3763
  %cmp1008 = icmp eq i8 %212, 94, !dbg !3764
  br i1 %cmp1008, label %if.then1010, label %if.end1012, !dbg !3765

if.then1010:                                      ; preds = %if.then1006
  call void @llvm.dbg.value(metadata i8* %211, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr1011 = getelementptr inbounds i8, i8* %211, i64 1, !dbg !3766
  call void @llvm.dbg.value(metadata i8* %incdec.ptr1011, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr1011, i8** %format_chars.addr, align 8, !dbg !3766
  %.pre58 = load i8, i8* %incdec.ptr1011, align 1, !dbg !3767
  br label %if.end1012, !dbg !3766

if.end1012:                                       ; preds = %if.then1010, %if.then1006
  %213 = phi i8 [ %.pre58, %if.then1010 ], [ %212, %if.then1006 ], !dbg !3767
  %214 = phi i8* [ %incdec.ptr1011, %if.then1010 ], [ %211, %if.then1006 ], !dbg !3769
  call void @llvm.dbg.value(metadata i8* %214, metadata !2920, metadata !DIExpression()), !dbg !3009
  %cmp1014 = icmp eq i8 %213, 93, !dbg !3770
  br i1 %cmp1014, label %if.then1016, label %if.end1018, !dbg !3771

if.then1016:                                      ; preds = %if.end1012
  call void @llvm.dbg.value(metadata i8* %214, metadata !2920, metadata !DIExpression()), !dbg !3009
  %incdec.ptr1017 = getelementptr inbounds i8, i8* %214, i64 1, !dbg !3772
  call void @llvm.dbg.value(metadata i8* %incdec.ptr1017, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr1017, i8** %format_chars.addr, align 8, !dbg !3772
  br label %if.end1018, !dbg !3772

if.end1018:                                       ; preds = %if.then1016, %if.end1012
  %215 = phi i8* [ %incdec.ptr1017, %if.then1016 ], [ %214, %if.end1012 ]
  br label %while.cond1019, !dbg !3773

while.cond1019:                                   ; preds = %while.body1027, %if.end1018
  %216 = phi i8* [ %incdec.ptr1028, %while.body1027 ], [ %215, %if.end1018 ], !dbg !3774
  call void @llvm.dbg.value(metadata i8* %216, metadata !2920, metadata !DIExpression()), !dbg !3009
  %217 = load i8, i8* %216, align 1, !dbg !3775
  %tobool1021 = icmp eq i8 %217, 0, !dbg !3775
  br i1 %tobool1021, label %land.end1026, label %land.rhs1022, !dbg !3776

land.rhs1022:                                     ; preds = %while.cond1019
  call void @llvm.dbg.value(metadata i8* %216, metadata !2920, metadata !DIExpression()), !dbg !3009
  %cmp1024 = icmp ne i8 %217, 93, !dbg !3777
  br label %land.end1026

land.end1026:                                     ; preds = %while.cond1019, %land.rhs1022
  %218 = phi i1 [ false, %while.cond1019 ], [ %cmp1024, %land.rhs1022 ], !dbg !3778
  call void @llvm.dbg.value(metadata i8* %216, metadata !2920, metadata !DIExpression()), !dbg !3009
  br i1 %218, label %while.body1027, label %while.end1029, !dbg !3773

while.body1027:                                   ; preds = %land.end1026
  %incdec.ptr1028 = getelementptr inbounds i8, i8* %216, i64 1, !dbg !3779
  call void @llvm.dbg.value(metadata i8* %incdec.ptr1028, metadata !2920, metadata !DIExpression()), !dbg !3009
  store i8* %incdec.ptr1028, i8** %format_chars.addr, align 8, !dbg !3779
  br label %while.cond1019, !dbg !3773, !llvm.loop !3780

while.end1029:                                    ; preds = %land.end1026
  %.lcssa = phi i8 [ %217, %land.end1026 ], !dbg !3775
  %cmp1031 = icmp eq i8 %.lcssa, 93, !dbg !3782
  br i1 %cmp1031, label %if.end1036, label %if.then1033, !dbg !3784

if.then1033:                                      ; preds = %while.end1029
  %call1034 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !3785
  br label %if.end1036, !dbg !3785

if.end1036:                                       ; preds = %while.end1029, %if.end1001, %if.then1033
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2939, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* null, metadata !2943, metadata !DIExpression()), !dbg !3018
  %219 = load i32, i32* %flags42, align 8, !dbg !3786
  %and1038 = and i32 %219, 1, !dbg !3788
  %tobool1039 = icmp eq i32 %and1038, 0, !dbg !3788
  br i1 %tobool1039, label %if.end1155, label %if.then1040, !dbg !3789

if.then1040:                                      ; preds = %if.end1036
  %idxprom1041 = zext i32 %length_chars_val.2 to i64, !dbg !3790
  %type = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.083, i64 0, i32 3, i64 %idxprom1041, i32 2, !dbg !3792
  %220 = load %union.tree_node**, %union.tree_node*** %type, align 8, !dbg !3792
  %tobool1043 = icmp eq %union.tree_node** %220, null, !dbg !3790
  br i1 %tobool1043, label %cond.end1050, label %cond.true1044, !dbg !3790

cond.true1044:                                    ; preds = %if.then1040
  %221 = load %union.tree_node*, %union.tree_node** %220, align 8, !dbg !3793
  br label %cond.end1050, !dbg !3790

cond.end1050:                                     ; preds = %if.then1040, %cond.true1044
  %cond1051 = phi %union.tree_node* [ %221, %cond.true1044 ], [ null, %if.then1040 ], !dbg !3790
  call void @llvm.dbg.value(metadata %union.tree_node* %cond1051, metadata !2939, metadata !DIExpression()), !dbg !3018
  %name1055 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.083, i64 0, i32 3, i64 %idxprom1041, i32 1, !dbg !3794
  %222 = load i8*, i8** %name1055, align 8, !dbg !3794
  call void @llvm.dbg.value(metadata i8* %222, metadata !2943, metadata !DIExpression()), !dbg !3018
  %std1059 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.083, i64 0, i32 3, i64 %idxprom1041, i32 0, !dbg !3795
  %223 = load i32, i32* %std1059, align 8, !dbg !3795
  call void @llvm.dbg.value(metadata i32 %223, metadata !2942, metadata !DIExpression()), !dbg !3018
  %cmp1060 = icmp eq %union.tree_node* %cond1051, null, !dbg !3796
  br i1 %cmp1060, label %if.then1062, label %if.else1072, !dbg !3798

if.then1062:                                      ; preds = %cond.end1050
  %call1063 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.59, i64 0, i64 0), i8* %length_chars.2, i32 %conv585) #6, !dbg !3799
  %inc1064 = add i64 %arg_num.addr.14, 1, !dbg !3801
  call void @llvm.dbg.value(metadata i64 %inc1064, metadata !2923, metadata !DIExpression()), !dbg !3009
  %224 = load %union.tree_node*, %union.tree_node** %params.addr, align 8, !dbg !3802
  call void @llvm.dbg.value(metadata %union.tree_node* %224, metadata !2922, metadata !DIExpression()), !dbg !3009
  %cmp1065 = icmp eq %union.tree_node* %224, null, !dbg !3804
  br i1 %cmp1065, label %if.then1067, label %if.end1069, !dbg !3805

if.then1067:                                      ; preds = %if.then1062
  %call1068 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !3806
  br label %cleanup1287, !dbg !3808

if.end1069:                                       ; preds = %if.then1062
  %chain1071 = getelementptr inbounds %union.tree_node, %union.tree_node* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3809
  %225 = bitcast %union.tree_node** %chain1071 to i64*, !dbg !3809
  %226 = load i64, i64* %225, align 8, !dbg !3809
  store i64 %226, i64* %10, align 8, !dbg !3810
  br label %cleanup1287, !dbg !3811, !llvm.loop !3096

if.else1072:                                      ; preds = %cond.end1050
  %227 = load i32, i32* @pedantic, align 4, !dbg !3812
  %tobool1073 = icmp eq i32 %227, 0, !dbg !3812
  br i1 %tobool1073, label %if.end1155, label %land.lhs.true1074, !dbg !3814

land.lhs.true1074:                                ; preds = %if.else1072
  %cmp1075 = icmp eq i32 %223, 2, !dbg !3815
  br i1 %cmp1075, label %cond.true1077, label %cond.end1081, !dbg !3815

cond.true1077:                                    ; preds = %land.lhs.true1074
  %228 = load i32, i32* @warn_long_long, align 4, !dbg !3815
  %tobool1078 = icmp eq i32 %228, 0, !dbg !3815
  %cond1079 = select i1 %tobool1078, i32 0, i32 3, !dbg !3815
  br label %cond.end1081, !dbg !3815

cond.end1081:                                     ; preds = %land.lhs.true1074, %cond.true1077
  %cond1082 = phi i32 [ %cond1079, %cond.true1077 ], [ %223, %land.lhs.true1074 ], !dbg !3815
  %cmp1083 = icmp eq i32 %length_chars_std.2, 2, !dbg !3816
  br i1 %cmp1083, label %cond.true1085, label %cond.end1089, !dbg !3816

cond.true1085:                                    ; preds = %cond.end1081
  %229 = load i32, i32* @warn_long_long, align 4, !dbg !3816
  %tobool1086 = icmp eq i32 %229, 0, !dbg !3816
  %cond1087 = select i1 %tobool1086, i32 0, i32 3, !dbg !3816
  br label %cond.end1089, !dbg !3816

cond.end1089:                                     ; preds = %cond.end1081, %cond.true1085
  %cond1090 = phi i32 [ %cond1087, %cond.true1085 ], [ %length_chars_std.2, %cond.end1081 ], !dbg !3816
  %cmp1091 = icmp sgt i32 %cond1082, %cond1090, !dbg !3817
  br i1 %cmp1091, label %land.lhs.true1093, label %if.end1155, !dbg !3818

land.lhs.true1093:                                ; preds = %cond.end1089
  br i1 %cmp1075, label %cond.true1096, label %cond.end1100, !dbg !3819

cond.true1096:                                    ; preds = %land.lhs.true1093
  %230 = load i32, i32* @warn_long_long, align 4, !dbg !3819
  %tobool1097 = icmp eq i32 %230, 0, !dbg !3819
  %cond1098 = select i1 %tobool1097, i32 0, i32 3, !dbg !3819
  br label %cond.end1100, !dbg !3819

cond.end1100:                                     ; preds = %land.lhs.true1093, %cond.true1096
  %cond1101 = phi i32 [ %cond1098, %cond.true1096 ], [ %223, %land.lhs.true1093 ], !dbg !3819
  %std1102 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.083, i64 0, i32 2, !dbg !3820
  %231 = load i32, i32* %std1102, align 4, !dbg !3820
  %cmp1103 = icmp eq i32 %231, 2, !dbg !3820
  br i1 %cmp1103, label %cond.true1105, label %cond.false1108, !dbg !3820

cond.true1105:                                    ; preds = %cond.end1100
  %232 = load i32, i32* @warn_long_long, align 4, !dbg !3820
  %tobool1106 = icmp eq i32 %232, 0, !dbg !3820
  %cond1107 = select i1 %tobool1106, i32 0, i32 3, !dbg !3820
  br label %cond.end1110, !dbg !3820

cond.false1108:                                   ; preds = %cond.end1100
  br label %cond.end1110, !dbg !3820

cond.end1110:                                     ; preds = %cond.false1108, %cond.true1105
  %cond1111 = phi i32 [ %cond1107, %cond.true1105 ], [ %231, %cond.false1108 ], !dbg !3820
  %cmp1112 = icmp sgt i32 %cond1101, %cond1111, !dbg !3821
  br i1 %cmp1112, label %if.then1114, label %if.end1155, !dbg !3822

if.then1114:                                      ; preds = %cond.end1110
  br i1 %cmp1075, label %cond.true1117, label %cond.end1121, !dbg !3823

cond.true1117:                                    ; preds = %if.then1114
  %233 = load i32, i32* @warn_long_long, align 4, !dbg !3823
  %tobool1118 = icmp eq i32 %233, 0, !dbg !3823
  %cond1119 = select i1 %tobool1118, i32 0, i32 3, !dbg !3823
  br label %cond.end1121, !dbg !3823

cond.end1121:                                     ; preds = %if.then1114, %cond.true1117
  %cond1122 = phi i32 [ %cond1119, %cond.true1117 ], [ %223, %if.then1114 ], !dbg !3823
  %234 = load i32, i32* @c_language, align 4, !dbg !3826
  %and1123 = and i32 %234, 2, !dbg !3826
  %cmp1124 = icmp eq i32 %and1123, 0, !dbg !3826
  br i1 %cmp1124, label %cond.false1127, label %cond.end1135, !dbg !3826

cond.false1127:                                   ; preds = %cond.end1121
  %235 = load i32, i32* @flag_isoc99, align 4, !dbg !3826
  %tobool1128 = icmp eq i32 %235, 0, !dbg !3826
  br i1 %tobool1128, label %cond.false1130, label %cond.end1135, !dbg !3826

cond.false1130:                                   ; preds = %cond.false1127
  %236 = load i32, i32* @flag_isoc94, align 4, !dbg !3826
  %tobool1131 = icmp ne i32 %236, 0, !dbg !3826
  %cond1132 = zext i1 %tobool1131 to i32, !dbg !3826
  br label %cond.end1135, !dbg !3826

cond.end1135:                                     ; preds = %cond.false1127, %cond.end1121, %cond.false1130
  %cond1136 = phi i32 [ 1, %cond.end1121 ], [ %cond1132, %cond.false1130 ], [ 3, %cond.false1127 ], !dbg !3826
  %cmp1137 = icmp sgt i32 %cond1122, %cond1136, !dbg !3827
  br i1 %cmp1137, label %if.then1139, label %if.end1155, !dbg !3828

if.then1139:                                      ; preds = %cond.end1135
  br i1 %cmp1124, label %cond.false1144, label %cond.end1148, !dbg !3829

cond.false1144:                                   ; preds = %if.then1139
  %cmp1145 = icmp eq i32 %223, 4, !dbg !3829
  %cond1147 = select i1 %cmp1145, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), !dbg !3829
  br label %cond.end1148, !dbg !3829

cond.end1148:                                     ; preds = %if.then1139, %cond.false1144
  %cond1149 = phi i8* [ %cond1147, %cond.false1144 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), %if.then1139 ], !dbg !3829
  %237 = load i8*, i8** %name220, align 8, !dbg !3830
  %call1151 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.60, i64 0, i64 0), i8* %cond1149, i8* %length_chars.2, i32 %conv585, i8* %237) #6, !dbg !3831
  br label %if.end1155, !dbg !3831

if.end1155:                                       ; preds = %if.else1072, %if.end1036, %cond.end1135, %cond.end1148, %cond.end1110, %cond.end1089
  %fci.084 = phi %struct.format_char_info* [ %fci.083, %if.end1036 ], [ %fci.083, %if.else1072 ], [ %fci.083, %cond.end1089 ], [ %fci.083, %cond.end1110 ], [ %fci.083, %cond.end1148 ], [ %fci.083, %cond.end1135 ]
  %wanted_type_name.0 = phi i8* [ null, %if.end1036 ], [ %222, %if.else1072 ], [ %222, %cond.end1089 ], [ %222, %cond.end1110 ], [ %222, %cond.end1148 ], [ %222, %cond.end1135 ], !dbg !3018
  %wanted_type.0 = phi %union.tree_node* [ null, %if.end1036 ], [ %cond1051, %if.else1072 ], [ %cond1051, %cond.end1089 ], [ %cond1051, %cond.end1110 ], [ %cond1051, %cond.end1148 ], [ %cond1051, %cond.end1135 ], !dbg !3018
  call void @llvm.dbg.value(metadata %union.tree_node* %wanted_type.0, metadata !2939, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* %wanted_type_name.0, metadata !2943, metadata !DIExpression()), !dbg !3018
  store %struct.format_wanted_type* null, %struct.format_wanted_type** %next1156, align 8, !dbg !3832
  %238 = load i64, i64* %first_arg_num, align 8, !dbg !3833
  %cmp1158 = icmp eq i64 %238, 0, !dbg !3835
  br i1 %cmp1158, label %cleanup1287, label %if.end1161, !dbg !3836, !llvm.loop !3096

if.end1161:                                       ; preds = %if.end1155
  %pointer_count1162 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.084, i64 0, i32 1, !dbg !3837
  %239 = load i32, i32* %pointer_count1162, align 8, !dbg !3837
  %cmp1163 = icmp eq i32 %239, 0, !dbg !3838
  %240 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !3839
  %cmp1166 = icmp eq %union.tree_node* %wanted_type.0, %240, !dbg !3840
  %or.cond17 = and i1 %cmp1163, %cmp1166, !dbg !3841
  %tobool1169 = icmp ne i32 %suppressed.0, 0, !dbg !3842
  %or.cond18 = or i1 %or.cond17, %tobool1169, !dbg !3841
  %cmp1171 = icmp ne i32 %main_arg_num.2, 0, !dbg !3843
  br i1 %or.cond18, label %if.then1170, label %if.else1181, !dbg !3841

if.then1170:                                      ; preds = %if.end1161
  br i1 %cmp1171, label %if.then1173, label %if.end1278, !dbg !3844

if.then1173:                                      ; preds = %if.then1170
  %tobool1174 = icmp eq i32 %suppressed.0, 0, !dbg !3846
  br i1 %tobool1174, label %if.else1177, label %if.then1175, !dbg !3850

if.then1175:                                      ; preds = %if.then1173
  %call1176 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !3851
  br label %if.end1278, !dbg !3851

if.else1177:                                      ; preds = %if.then1173
  %call1178 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !3852
  br label %if.end1278

if.else1181:                                      ; preds = %if.end1161
  br i1 %cmp1171, label %if.then1184, label %if.else1186, !dbg !3853

if.then1184:                                      ; preds = %if.else1181
  %conv1185 = sext i32 %main_arg_num.2 to i64, !dbg !3854
  call void @llvm.dbg.value(metadata i64 %conv1185, metadata !2923, metadata !DIExpression()), !dbg !3009
  %241 = load i64, i64* %17, align 8, !dbg !3855
  store i64 %241, i64* %10, align 8, !dbg !3856
  br label %if.end1194, !dbg !3857

if.else1186:                                      ; preds = %if.else1181
  %inc1187 = add i64 %arg_num.addr.14, 1, !dbg !3858
  call void @llvm.dbg.value(metadata i64 %inc1187, metadata !2923, metadata !DIExpression()), !dbg !3009
  %cmp1188 = icmp sgt i32 %has_operand_number.13, 0, !dbg !3860
  br i1 %cmp1188, label %if.then1190, label %if.end1194, !dbg !3862

if.then1190:                                      ; preds = %if.else1186
  %call1191 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !3863
  br label %cleanup1275, !dbg !3865

if.end1194:                                       ; preds = %if.else1186, %if.then1184
  %has_operand_number.14 = phi i32 [ %has_operand_number.13, %if.then1184 ], [ 0, %if.else1186 ], !dbg !3009
  %arg_num.addr.15 = phi i64 [ %conv1185, %if.then1184 ], [ %inc1187, %if.else1186 ], !dbg !3866
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.15, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.14, metadata !2930, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %main_wanted_type, metadata !3006, metadata !DIExpression()), !dbg !3867
  %tobool1221 = icmp eq i32 %scalar_identity_flag.2, 0, !dbg !3868
  %tobool1227 = icmp eq i32 %alloc_flag.1, 0, !dbg !3871
  %idxprom1266 = zext i32 %length_chars_val.2 to i64, !dbg !3873
  br i1 %tobool1221, label %if.end1194.split.us, label %if.end1194.if.end1194.split_crit_edge, !dbg !3876

if.end1194.if.end1194.split_crit_edge:            ; preds = %if.end1194
  br label %while.cond1195, !dbg !3876

if.end1194.split.us:                              ; preds = %if.end1194
  br label %while.cond1195.us, !dbg !3876

while.cond1195.us:                                ; preds = %if.end1273.us, %if.end1194.split.us
  %first_wanted_type.8.us = phi %struct.format_wanted_type* [ %first_wanted_type.7, %if.end1194.split.us ], [ %spec.select19.us, %if.end1273.us ], !dbg !3018
  %wanted_type_name.1.us = phi i8* [ %wanted_type_name.0, %if.end1194.split.us ], [ %wanted_type_name.2.us, %if.end1273.us ], !dbg !3018
  %last_wanted_type.6.us = phi %struct.format_wanted_type* [ %last_wanted_type.5, %if.end1194.split.us ], [ %wanted_type_ptr.0.us, %if.end1273.us ], !dbg !3018
  %wanted_type.1.us = phi %union.tree_node* [ %wanted_type.0, %if.end1194.split.us ], [ %wanted_type.2.us, %if.end1273.us ], !dbg !3018
  %fci.1.us = phi %struct.format_char_info* [ %fci.084, %if.end1194.split.us ], [ %254, %if.end1273.us ], !dbg !3018
  %arg_num.addr.16.us = phi i64 [ %arg_num.addr.15, %if.end1194.split.us ], [ %arg_num.addr.17.us, %if.end1273.us ], !dbg !3867
  %wanted_type_ptr.0.us = phi %struct.format_wanted_type* [ %main_wanted_type, %if.end1194.split.us ], [ %wanted_type_ptr.1.us, %if.end1273.us ], !dbg !3867
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %wanted_type_ptr.0.us, metadata !3006, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.us, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci.1.us, metadata !2950, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %union.tree_node* %wanted_type.1.us, metadata !2939, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %last_wanted_type.6.us, metadata !2948, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* %wanted_type_name.1.us, metadata !2943, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.us, metadata !2947, metadata !DIExpression()), !dbg !3018
  %tobool1196.us = icmp eq %struct.format_char_info* %fci.1.us, null, !dbg !3876
  br i1 %tobool1196.us, label %cleanup1275.loopexit.us-lcssa.us, label %while.body1197.us, !dbg !3876

while.body1197.us:                                ; preds = %while.cond1195.us
  %242 = load %union.tree_node*, %union.tree_node** %params.addr, align 8, !dbg !3877
  call void @llvm.dbg.value(metadata %union.tree_node* %242, metadata !2922, metadata !DIExpression()), !dbg !3009
  %cmp1198.us = icmp eq %union.tree_node* %242, null, !dbg !3879
  br i1 %cmp1198.us, label %if.then1200.us-lcssa.us, label %if.end1202.us, !dbg !3880

if.end1202.us:                                    ; preds = %while.body1197.us
  %243 = getelementptr inbounds %union.tree_node, %union.tree_node* %242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3881
  %244 = bitcast %union.tree_node** %243 to i64*, !dbg !3881
  %245 = load i64, i64* %244, align 8, !dbg !3881
  %246 = getelementptr inbounds %union.tree_node, %union.tree_node* %242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3882
  %247 = bitcast %union.tree_node** %246 to i64*, !dbg !3882
  %248 = load i64, i64* %247, align 8, !dbg !3882
  store i64 %248, i64* %10, align 8, !dbg !3883
  %wanted_type1207.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 0, !dbg !3884
  store %union.tree_node* %wanted_type.1.us, %union.tree_node** %wanted_type1207.us, align 8, !dbg !3885
  %wanted_type_name1208.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 1, !dbg !3886
  store i8* %wanted_type_name.1.us, i8** %wanted_type_name1208.us, align 8, !dbg !3887
  %pointer_count1209.us = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.1.us, i64 0, i32 1, !dbg !3888
  %249 = load i32, i32* %pointer_count1209.us, align 8, !dbg !3888
  %add1210.us = add nsw i32 %249, %alloc_flag.1, !dbg !3889
  %pointer_count1211.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 3, !dbg !3890
  store i32 %add1210.us, i32* %pointer_count1211.us, align 4, !dbg !3891
  %char_lenient_flag1212.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 4, !dbg !3892
  store i32 0, i32* %char_lenient_flag1212.us, align 8, !dbg !3893
  %flags21213.us = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.1.us, i64 0, i32 5, !dbg !3894
  %250 = load i8*, i8** %flags21213.us, align 8, !dbg !3894
  %call1214.us = call i8* @strchr(i8* %250, i32 99) #6, !dbg !3896
  %cmp1215.us = icmp eq i8* %call1214.us, null, !dbg !3897
  br i1 %cmp1215.us, label %if.end1219.us, label %if.then1217.us, !dbg !3898

if.then1217.us:                                   ; preds = %if.end1202.us
  store i32 1, i32* %char_lenient_flag1212.us, align 8, !dbg !3899
  br label %if.end1219.us, !dbg !3900

if.end1219.us:                                    ; preds = %if.then1217.us, %if.end1202.us
  %scalar_identity_flag1220.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 2, !dbg !3901
  store i32 0, i32* %scalar_identity_flag1220.us, align 8, !dbg !3902
  %writing_in_flag1225.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 5, !dbg !3903
  store i32 0, i32* %writing_in_flag1225.us, align 4, !dbg !3904
  %reading_from_flag1226.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 6, !dbg !3905
  store i32 0, i32* %reading_from_flag1226.us, align 8, !dbg !3906
  br i1 %tobool1227, label %if.else1230.us, label %if.then1228.us, !dbg !3907

if.then1228.us:                                   ; preds = %if.end1219.us
  store i32 1, i32* %writing_in_flag1225.us, align 4, !dbg !3908
  br label %if.end1245.us, !dbg !3909

if.else1230.us:                                   ; preds = %if.end1219.us
  %251 = load i8*, i8** %flags21213.us, align 8, !dbg !3910
  %call1232.us = call i8* @strchr(i8* %251, i32 87) #6, !dbg !3913
  %cmp1233.us = icmp eq i8* %call1232.us, null, !dbg !3914
  br i1 %cmp1233.us, label %if.end1237.us, label %if.then1235.us, !dbg !3915

if.then1235.us:                                   ; preds = %if.else1230.us
  store i32 1, i32* %writing_in_flag1225.us, align 4, !dbg !3916
  br label %if.end1237.us, !dbg !3917

if.end1237.us:                                    ; preds = %if.then1235.us, %if.else1230.us
  %252 = load i8*, i8** %flags21213.us, align 8, !dbg !3918
  %call1239.us = call i8* @strchr(i8* %252, i32 82) #6, !dbg !3920
  %cmp1240.us = icmp eq i8* %call1239.us, null, !dbg !3921
  br i1 %cmp1240.us, label %if.end1245.us, label %if.then1242.us, !dbg !3922

if.then1242.us:                                   ; preds = %if.end1237.us
  store i32 1, i32* %reading_from_flag1226.us, align 8, !dbg !3923
  br label %if.end1245.us, !dbg !3924

if.end1245.us:                                    ; preds = %if.then1242.us, %if.end1237.us, %if.then1228.us
  %name1246.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 7, !dbg !3925
  store i8* null, i8** %name1246.us, align 8, !dbg !3926
  %param1247.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 8, !dbg !3927
  %253 = bitcast %union.tree_node** %param1247.us to i64*, !dbg !3928
  store i64 %245, i64* %253, align 8, !dbg !3928
  %conv1248.us = trunc i64 %arg_num.addr.16.us to i32, !dbg !3929
  %arg_num1249.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 9, !dbg !3930
  store i32 %conv1248.us, i32* %arg_num1249.us, align 8, !dbg !3931
  %next1250.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0.us, i64 0, i32 10, !dbg !3932
  store %struct.format_wanted_type* null, %struct.format_wanted_type** %next1250.us, align 8, !dbg !3933
  %cmp1251.us = icmp eq %struct.format_wanted_type* %last_wanted_type.6.us, null, !dbg !3934
  br i1 %cmp1251.us, label %if.end1255.us, label %if.then1253.us, !dbg !3936

if.then1253.us:                                   ; preds = %if.end1245.us
  %next1254.us = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %last_wanted_type.6.us, i64 0, i32 10, !dbg !3937
  store %struct.format_wanted_type* %wanted_type_ptr.0.us, %struct.format_wanted_type** %next1254.us, align 8, !dbg !3938
  br label %if.end1255.us, !dbg !3939

if.end1255.us:                                    ; preds = %if.then1253.us, %if.end1245.us
  %cmp1256.us = icmp eq %struct.format_wanted_type* %first_wanted_type.8.us, null, !dbg !3940
  %spec.select19.us = select i1 %cmp1256.us, %struct.format_wanted_type* %wanted_type_ptr.0.us, %struct.format_wanted_type* %first_wanted_type.8.us, !dbg !3942
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %spec.select19.us, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %wanted_type_ptr.0.us, metadata !2948, metadata !DIExpression()), !dbg !3018
  %chain1260.us = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.1.us, i64 0, i32 6, !dbg !3943
  %254 = load %struct.format_char_info*, %struct.format_char_info** %chain1260.us, align 8, !dbg !3943
  call void @llvm.dbg.value(metadata %struct.format_char_info* %254, metadata !2950, metadata !DIExpression()), !dbg !3018
  %tobool1261.us = icmp eq %struct.format_char_info* %254, null, !dbg !3944
  br i1 %tobool1261.us, label %if.end1273.us, label %if.then1262.us, !dbg !3945

if.then1262.us:                                   ; preds = %if.end1255.us
  %call1263.us = call i8* @pool_alloc(%struct.alloc_pool_def* %fwt_pool) #6, !dbg !3946
  %255 = bitcast i8* %call1263.us to %struct.format_wanted_type*, !dbg !3947
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %255, metadata !3006, metadata !DIExpression()), !dbg !3867
  %inc1264.us = add i64 %arg_num.addr.16.us, 1, !dbg !3948
  call void @llvm.dbg.value(metadata i64 %inc1264.us, metadata !2923, metadata !DIExpression()), !dbg !3009
  %type1268.us = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %254, i64 0, i32 3, i64 %idxprom1266, i32 2, !dbg !3949
  %256 = load %union.tree_node**, %union.tree_node*** %type1268.us, align 8, !dbg !3949
  %257 = load %union.tree_node*, %union.tree_node** %256, align 8, !dbg !3950
  call void @llvm.dbg.value(metadata %union.tree_node* %257, metadata !2939, metadata !DIExpression()), !dbg !3018
  %name1272.us = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %254, i64 0, i32 3, i64 %idxprom1266, i32 1, !dbg !3951
  %258 = load i8*, i8** %name1272.us, align 8, !dbg !3951
  call void @llvm.dbg.value(metadata i8* %258, metadata !2943, metadata !DIExpression()), !dbg !3018
  br label %if.end1273.us, !dbg !3952

if.end1273.us:                                    ; preds = %if.then1262.us, %if.end1255.us
  %wanted_type_name.2.us = phi i8* [ %258, %if.then1262.us ], [ %wanted_type_name.1.us, %if.end1255.us ], !dbg !3018
  %wanted_type.2.us = phi %union.tree_node* [ %257, %if.then1262.us ], [ %wanted_type.1.us, %if.end1255.us ], !dbg !3018
  %arg_num.addr.17.us = phi i64 [ %inc1264.us, %if.then1262.us ], [ %arg_num.addr.16.us, %if.end1255.us ], !dbg !3867
  %wanted_type_ptr.1.us = phi %struct.format_wanted_type* [ %255, %if.then1262.us ], [ %wanted_type_ptr.0.us, %if.end1255.us ], !dbg !3867
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %wanted_type_ptr.1.us, metadata !3006, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.17.us, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %union.tree_node* %wanted_type.2.us, metadata !2939, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* %wanted_type_name.2.us, metadata !2943, metadata !DIExpression()), !dbg !3018
  br label %while.cond1195.us, !dbg !3876, !llvm.loop !3953

cleanup1275.loopexit.us-lcssa.us:                 ; preds = %while.cond1195.us
  %first_wanted_type.8.us.lcssa = phi %struct.format_wanted_type* [ %first_wanted_type.8.us, %while.cond1195.us ], !dbg !3018
  %arg_num.addr.16.us.lcssa = phi i64 [ %arg_num.addr.16.us, %while.cond1195.us ], !dbg !3867
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.us.lcssa, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.us.lcssa, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.us.lcssa, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.us.lcssa, metadata !2923, metadata !DIExpression()), !dbg !3009
  br label %cleanup1275.loopexit

if.then1200.us-lcssa.us:                          ; preds = %while.body1197.us
  %first_wanted_type.8.us.lcssa90 = phi %struct.format_wanted_type* [ %first_wanted_type.8.us, %while.body1197.us ], !dbg !3018
  %arg_num.addr.16.us.lcssa89 = phi i64 [ %arg_num.addr.16.us, %while.body1197.us ], !dbg !3867
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.us.lcssa90, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.us.lcssa89, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.us.lcssa90, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.us.lcssa89, metadata !2923, metadata !DIExpression()), !dbg !3009
  br label %if.then1200, !dbg !3955

while.cond1195:                                   ; preds = %if.end1273, %if.end1194.if.end1194.split_crit_edge
  %first_wanted_type.8 = phi %struct.format_wanted_type* [ %first_wanted_type.7, %if.end1194.if.end1194.split_crit_edge ], [ %spec.select19, %if.end1273 ], !dbg !3018
  %wanted_type_name.1 = phi i8* [ %wanted_type_name.0, %if.end1194.if.end1194.split_crit_edge ], [ %wanted_type_name.2, %if.end1273 ], !dbg !3018
  %last_wanted_type.6 = phi %struct.format_wanted_type* [ %last_wanted_type.5, %if.end1194.if.end1194.split_crit_edge ], [ %wanted_type_ptr.0, %if.end1273 ], !dbg !3018
  %wanted_type.1 = phi %union.tree_node* [ %wanted_type.0, %if.end1194.if.end1194.split_crit_edge ], [ %wanted_type.2, %if.end1273 ], !dbg !3018
  %fci.1 = phi %struct.format_char_info* [ %fci.084, %if.end1194.if.end1194.split_crit_edge ], [ %271, %if.end1273 ], !dbg !3018
  %arg_num.addr.16 = phi i64 [ %arg_num.addr.15, %if.end1194.if.end1194.split_crit_edge ], [ %arg_num.addr.17, %if.end1273 ], !dbg !3867
  %wanted_type_ptr.0 = phi %struct.format_wanted_type* [ %main_wanted_type, %if.end1194.if.end1194.split_crit_edge ], [ %wanted_type_ptr.1, %if.end1273 ], !dbg !3867
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %wanted_type_ptr.0, metadata !3006, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci.1, metadata !2950, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %union.tree_node* %wanted_type.1, metadata !2939, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %last_wanted_type.6, metadata !2948, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* %wanted_type_name.1, metadata !2943, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8, metadata !2947, metadata !DIExpression()), !dbg !3018
  %tobool1196 = icmp eq %struct.format_char_info* %fci.1, null, !dbg !3876
  br i1 %tobool1196, label %cleanup1275.loopexit.us-lcssa, label %while.body1197, !dbg !3876

while.body1197:                                   ; preds = %while.cond1195
  %259 = load %union.tree_node*, %union.tree_node** %params.addr, align 8, !dbg !3877
  call void @llvm.dbg.value(metadata %union.tree_node* %259, metadata !2922, metadata !DIExpression()), !dbg !3009
  %cmp1198 = icmp eq %union.tree_node* %259, null, !dbg !3879
  br i1 %cmp1198, label %if.then1200.us-lcssa, label %if.end1202, !dbg !3880

if.then1200.us-lcssa:                             ; preds = %while.body1197
  %first_wanted_type.8.lcssa88 = phi %struct.format_wanted_type* [ %first_wanted_type.8, %while.body1197 ], !dbg !3018
  %arg_num.addr.16.lcssa86 = phi i64 [ %arg_num.addr.16, %while.body1197 ], !dbg !3867
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.lcssa88, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.lcssa86, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.lcssa88, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.lcssa86, metadata !2923, metadata !DIExpression()), !dbg !3009
  br label %if.then1200, !dbg !3955

if.then1200:                                      ; preds = %if.then1200.us-lcssa.us, %if.then1200.us-lcssa
  %first_wanted_type.8.lcssa45 = phi %struct.format_wanted_type* [ %first_wanted_type.8.lcssa88, %if.then1200.us-lcssa ], [ %first_wanted_type.8.us.lcssa90, %if.then1200.us-lcssa.us ], !dbg !3018
  %arg_num.addr.16.lcssa44 = phi i64 [ %arg_num.addr.16.lcssa86, %if.then1200.us-lcssa ], [ %arg_num.addr.16.us.lcssa89, %if.then1200.us-lcssa.us ], !dbg !3867
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.lcssa45, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.lcssa44, metadata !2923, metadata !DIExpression()), !dbg !3009
  %call1201 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !3955
  br label %cleanup1275, !dbg !3957

if.end1202:                                       ; preds = %while.body1197
  %260 = getelementptr inbounds %union.tree_node, %union.tree_node* %259, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3881
  %261 = bitcast %union.tree_node** %260 to i64*, !dbg !3881
  %262 = load i64, i64* %261, align 8, !dbg !3881
  %263 = getelementptr inbounds %union.tree_node, %union.tree_node* %259, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3882
  %264 = bitcast %union.tree_node** %263 to i64*, !dbg !3882
  %265 = load i64, i64* %264, align 8, !dbg !3882
  store i64 %265, i64* %10, align 8, !dbg !3883
  %wanted_type1207 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 0, !dbg !3884
  store %union.tree_node* %wanted_type.1, %union.tree_node** %wanted_type1207, align 8, !dbg !3885
  %wanted_type_name1208 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 1, !dbg !3886
  store i8* %wanted_type_name.1, i8** %wanted_type_name1208, align 8, !dbg !3887
  %pointer_count1209 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.1, i64 0, i32 1, !dbg !3888
  %266 = load i32, i32* %pointer_count1209, align 8, !dbg !3888
  %add1210 = add nsw i32 %266, %alloc_flag.1, !dbg !3889
  %pointer_count1211 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 3, !dbg !3890
  store i32 %add1210, i32* %pointer_count1211, align 4, !dbg !3891
  %char_lenient_flag1212 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 4, !dbg !3892
  store i32 0, i32* %char_lenient_flag1212, align 8, !dbg !3893
  %flags21213 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.1, i64 0, i32 5, !dbg !3894
  %267 = load i8*, i8** %flags21213, align 8, !dbg !3894
  %call1214 = call i8* @strchr(i8* %267, i32 99) #6, !dbg !3896
  %cmp1215 = icmp eq i8* %call1214, null, !dbg !3897
  br i1 %cmp1215, label %if.end1219, label %if.then1217, !dbg !3898

if.then1217:                                      ; preds = %if.end1202
  store i32 1, i32* %char_lenient_flag1212, align 8, !dbg !3899
  br label %if.end1219, !dbg !3900

if.end1219:                                       ; preds = %if.end1202, %if.then1217
  %scalar_identity_flag1220 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 2, !dbg !3901
  store i32 1, i32* %scalar_identity_flag1220, align 8, !dbg !3958
  %writing_in_flag1225 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 5, !dbg !3903
  store i32 0, i32* %writing_in_flag1225, align 4, !dbg !3904
  %reading_from_flag1226 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 6, !dbg !3905
  store i32 0, i32* %reading_from_flag1226, align 8, !dbg !3906
  br i1 %tobool1227, label %if.else1230, label %if.then1228, !dbg !3907

if.then1228:                                      ; preds = %if.end1219
  store i32 1, i32* %writing_in_flag1225, align 4, !dbg !3908
  br label %if.end1245, !dbg !3909

if.else1230:                                      ; preds = %if.end1219
  %268 = load i8*, i8** %flags21213, align 8, !dbg !3910
  %call1232 = call i8* @strchr(i8* %268, i32 87) #6, !dbg !3913
  %cmp1233 = icmp eq i8* %call1232, null, !dbg !3914
  br i1 %cmp1233, label %if.end1237, label %if.then1235, !dbg !3915

if.then1235:                                      ; preds = %if.else1230
  store i32 1, i32* %writing_in_flag1225, align 4, !dbg !3916
  br label %if.end1237, !dbg !3917

if.end1237:                                       ; preds = %if.else1230, %if.then1235
  %269 = load i8*, i8** %flags21213, align 8, !dbg !3918
  %call1239 = call i8* @strchr(i8* %269, i32 82) #6, !dbg !3920
  %cmp1240 = icmp eq i8* %call1239, null, !dbg !3921
  br i1 %cmp1240, label %if.end1245, label %if.then1242, !dbg !3922

if.then1242:                                      ; preds = %if.end1237
  store i32 1, i32* %reading_from_flag1226, align 8, !dbg !3923
  br label %if.end1245, !dbg !3924

if.end1245:                                       ; preds = %if.end1237, %if.then1242, %if.then1228
  %name1246 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 7, !dbg !3925
  store i8* null, i8** %name1246, align 8, !dbg !3926
  %param1247 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 8, !dbg !3927
  %270 = bitcast %union.tree_node** %param1247 to i64*, !dbg !3928
  store i64 %262, i64* %270, align 8, !dbg !3928
  %conv1248 = trunc i64 %arg_num.addr.16 to i32, !dbg !3929
  %arg_num1249 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 9, !dbg !3930
  store i32 %conv1248, i32* %arg_num1249, align 8, !dbg !3931
  %next1250 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %wanted_type_ptr.0, i64 0, i32 10, !dbg !3932
  store %struct.format_wanted_type* null, %struct.format_wanted_type** %next1250, align 8, !dbg !3933
  %cmp1251 = icmp eq %struct.format_wanted_type* %last_wanted_type.6, null, !dbg !3934
  br i1 %cmp1251, label %if.end1255, label %if.then1253, !dbg !3936

if.then1253:                                      ; preds = %if.end1245
  %next1254 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %last_wanted_type.6, i64 0, i32 10, !dbg !3937
  store %struct.format_wanted_type* %wanted_type_ptr.0, %struct.format_wanted_type** %next1254, align 8, !dbg !3938
  br label %if.end1255, !dbg !3939

if.end1255:                                       ; preds = %if.end1245, %if.then1253
  %cmp1256 = icmp eq %struct.format_wanted_type* %first_wanted_type.8, null, !dbg !3940
  %spec.select19 = select i1 %cmp1256, %struct.format_wanted_type* %wanted_type_ptr.0, %struct.format_wanted_type* %first_wanted_type.8, !dbg !3942
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %spec.select19, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %wanted_type_ptr.0, metadata !2948, metadata !DIExpression()), !dbg !3018
  %chain1260 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.1, i64 0, i32 6, !dbg !3943
  %271 = load %struct.format_char_info*, %struct.format_char_info** %chain1260, align 8, !dbg !3943
  call void @llvm.dbg.value(metadata %struct.format_char_info* %271, metadata !2950, metadata !DIExpression()), !dbg !3018
  %tobool1261 = icmp eq %struct.format_char_info* %271, null, !dbg !3944
  br i1 %tobool1261, label %if.end1273, label %if.then1262, !dbg !3945

if.then1262:                                      ; preds = %if.end1255
  %call1263 = call i8* @pool_alloc(%struct.alloc_pool_def* %fwt_pool) #6, !dbg !3946
  %272 = bitcast i8* %call1263 to %struct.format_wanted_type*, !dbg !3947
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %272, metadata !3006, metadata !DIExpression()), !dbg !3867
  %inc1264 = add i64 %arg_num.addr.16, 1, !dbg !3948
  call void @llvm.dbg.value(metadata i64 %inc1264, metadata !2923, metadata !DIExpression()), !dbg !3009
  %type1268 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %271, i64 0, i32 3, i64 %idxprom1266, i32 2, !dbg !3949
  %273 = load %union.tree_node**, %union.tree_node*** %type1268, align 8, !dbg !3949
  %274 = load %union.tree_node*, %union.tree_node** %273, align 8, !dbg !3950
  call void @llvm.dbg.value(metadata %union.tree_node* %274, metadata !2939, metadata !DIExpression()), !dbg !3018
  %name1272 = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %271, i64 0, i32 3, i64 %idxprom1266, i32 1, !dbg !3951
  %275 = load i8*, i8** %name1272, align 8, !dbg !3951
  call void @llvm.dbg.value(metadata i8* %275, metadata !2943, metadata !DIExpression()), !dbg !3018
  br label %if.end1273, !dbg !3952

if.end1273:                                       ; preds = %if.end1255, %if.then1262
  %wanted_type_name.2 = phi i8* [ %275, %if.then1262 ], [ %wanted_type_name.1, %if.end1255 ], !dbg !3018
  %wanted_type.2 = phi %union.tree_node* [ %274, %if.then1262 ], [ %wanted_type.1, %if.end1255 ], !dbg !3018
  %arg_num.addr.17 = phi i64 [ %inc1264, %if.then1262 ], [ %arg_num.addr.16, %if.end1255 ], !dbg !3867
  %wanted_type_ptr.1 = phi %struct.format_wanted_type* [ %272, %if.then1262 ], [ %wanted_type_ptr.0, %if.end1255 ], !dbg !3867
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %wanted_type_ptr.1, metadata !3006, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.17, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %union.tree_node* %wanted_type.2, metadata !2939, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i8* %wanted_type_name.2, metadata !2943, metadata !DIExpression()), !dbg !3018
  br label %while.cond1195, !dbg !3876, !llvm.loop !3953

cleanup1275.loopexit.us-lcssa:                    ; preds = %while.cond1195
  %first_wanted_type.8.lcssa87 = phi %struct.format_wanted_type* [ %first_wanted_type.8, %while.cond1195 ], !dbg !3018
  %arg_num.addr.16.lcssa85 = phi i64 [ %arg_num.addr.16, %while.cond1195 ], !dbg !3867
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.lcssa87, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.lcssa85, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.lcssa87, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.lcssa85, metadata !2923, metadata !DIExpression()), !dbg !3009
  br label %cleanup1275.loopexit

cleanup1275.loopexit:                             ; preds = %cleanup1275.loopexit.us-lcssa.us, %cleanup1275.loopexit.us-lcssa
  %first_wanted_type.8.lcssa = phi %struct.format_wanted_type* [ %first_wanted_type.8.lcssa87, %cleanup1275.loopexit.us-lcssa ], [ %first_wanted_type.8.us.lcssa, %cleanup1275.loopexit.us-lcssa.us ], !dbg !3018
  %arg_num.addr.16.lcssa = phi i64 [ %arg_num.addr.16.lcssa85, %cleanup1275.loopexit.us-lcssa ], [ %arg_num.addr.16.us.lcssa, %cleanup1275.loopexit.us-lcssa.us ], !dbg !3867
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.8.lcssa, metadata !2947, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.16.lcssa, metadata !2923, metadata !DIExpression()), !dbg !3009
  br label %cleanup1275

cleanup1275:                                      ; preds = %cleanup1275.loopexit, %if.then1200, %if.then1190
  %first_wanted_type.10 = phi %struct.format_wanted_type* [ %first_wanted_type.8.lcssa45, %if.then1200 ], [ %first_wanted_type.7, %if.then1190 ], [ %first_wanted_type.8.lcssa, %cleanup1275.loopexit ], !dbg !3959
  %has_operand_number.15 = phi i32 [ %has_operand_number.14, %if.then1200 ], [ %has_operand_number.13, %if.then1190 ], [ %has_operand_number.14, %cleanup1275.loopexit ], !dbg !3061
  %cleanup.dest.slot.6 = phi i32 [ 1, %if.then1200 ], [ 1, %if.then1190 ], [ 0, %cleanup1275.loopexit ]
  %arg_num.addr.18 = phi i64 [ %arg_num.addr.16.lcssa44, %if.then1200 ], [ %inc1187, %if.then1190 ], [ %arg_num.addr.16.lcssa, %cleanup1275.loopexit ], !dbg !3866
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.18, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.15, metadata !2930, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.10, metadata !2947, metadata !DIExpression()), !dbg !3018
  %cond1 = icmp eq i32 %cleanup.dest.slot.6, 0
  br i1 %cond1, label %if.end1278, label %cleanup1287

if.end1278:                                       ; preds = %cleanup1275, %if.then1170, %if.else1177, %if.then1175
  %first_wanted_type.11 = phi %struct.format_wanted_type* [ %first_wanted_type.7, %if.then1175 ], [ %first_wanted_type.7, %if.else1177 ], [ %first_wanted_type.7, %if.then1170 ], [ %first_wanted_type.10, %cleanup1275 ], !dbg !3959
  %has_operand_number.16 = phi i32 [ %has_operand_number.13, %if.then1175 ], [ %has_operand_number.13, %if.else1177 ], [ %has_operand_number.13, %if.then1170 ], [ %has_operand_number.15, %cleanup1275 ], !dbg !3061
  %arg_num.addr.19 = phi i64 [ %arg_num.addr.14, %if.then1175 ], [ %arg_num.addr.14, %if.else1177 ], [ %arg_num.addr.14, %if.then1170 ], [ %arg_num.addr.18, %cleanup1275 ], !dbg !3018
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.19, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.16, metadata !2930, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %first_wanted_type.11, metadata !2947, metadata !DIExpression()), !dbg !3018
  %cmp1279 = icmp eq %struct.format_wanted_type* %first_wanted_type.11, null, !dbg !3961
  br i1 %cmp1279, label %cleanup1287, label %if.then1281, !dbg !3962

if.then1281:                                      ; preds = %if.end1278
  %276 = load i64, i64* %18, align 8, !dbg !3963
  %sub.ptr.rhs.cast1283 = ptrtoint i8* %19 to i64, !dbg !3964
  %sub.ptr.sub1284 = sub i64 %276, %sub.ptr.rhs.cast1283, !dbg !3964
  %conv1285 = trunc i64 %sub.ptr.sub1284 to i32, !dbg !3963
  call fastcc void @check_format_types(%struct.format_wanted_type* nonnull %first_wanted_type.11, i8* %19, i32 %conv1285) #8, !dbg !3965
  br label %cleanup1287, !dbg !3965

cleanup1287.loopexit:                             ; preds = %cleanup110
  %cleanup.dest.slot.1.lcssa = phi i32 [ %cleanup.dest.slot.1, %cleanup110 ]
  br label %cleanup1287, !dbg !3097

cleanup1287:                                      ; preds = %cleanup1287.loopexit, %if.then64, %if.else158, %if.else329, %if.end1278, %if.end23, %if.then1281, %if.end1155, %if.then622, %if.else624, %if.end18, %if.then21, %cleanup, %cleanup155, %cleanup326, %cleanup1275, %if.end1069, %if.then1067, %if.then595, %if.then341, %if.then170, %if.then38, %if.then32
  %has_operand_number.17 = phi i32 [ %has_operand_number.0, %if.then32 ], [ %has_operand_number.0, %if.then38 ], [ %has_operand_number.2, %cleanup ], [ %has_operand_number.5, %cleanup155 ], [ %has_operand_number.6, %if.then170 ], [ %has_operand_number.10, %cleanup326 ], [ %has_operand_number.11, %if.then341 ], [ %has_operand_number.13, %if.then595 ], [ %has_operand_number.13, %if.then1067 ], [ %has_operand_number.13, %if.end1069 ], [ %has_operand_number.15, %cleanup1275 ], [ %has_operand_number.0, %if.then21 ], [ %has_operand_number.0, %if.end18 ], [ %has_operand_number.0, %if.end23 ], [ %has_operand_number.0, %if.then64 ], [ 0, %if.else158 ], [ 0, %if.else329 ], [ %has_operand_number.13, %if.else624 ], [ %has_operand_number.13, %if.then622 ], [ %has_operand_number.13, %if.end1155 ], [ %has_operand_number.16, %if.then1281 ], [ %has_operand_number.16, %if.end1278 ], [ %has_operand_number.3, %cleanup1287.loopexit ], !dbg !3061
  %cleanup.dest.slot.7 = phi i32 [ 2, %if.then32 ], [ 2, %if.then38 ], [ %cleanup.dest.slot.0, %cleanup ], [ %cleanup.dest.slot.2, %cleanup155 ], [ 1, %if.then170 ], [ %cleanup.dest.slot.3, %cleanup326 ], [ 1, %if.then341 ], [ 2, %if.then595 ], [ 1, %if.then1067 ], [ 2, %if.end1069 ], [ %cleanup.dest.slot.6, %cleanup1275 ], [ 1, %if.then21 ], [ 1, %if.end18 ], [ 2, %if.end23 ], [ 1, %if.then64 ], [ 1, %if.else158 ], [ 1, %if.else329 ], [ 2, %if.else624 ], [ 2, %if.then622 ], [ 2, %if.end1155 ], [ 0, %if.then1281 ], [ 0, %if.end1278 ], [ %cleanup.dest.slot.1.lcssa, %cleanup1287.loopexit ]
  %arg_num.addr.20 = phi i64 [ %arg_num.addr.0, %if.then32 ], [ %arg_num.addr.0, %if.then38 ], [ %arg_num.addr.0, %cleanup ], [ %arg_num.addr.2, %cleanup155 ], [ %arg_num.addr.3, %if.then170 ], [ %arg_num.addr.9, %cleanup326 ], [ %arg_num.addr.10, %if.then341 ], [ %arg_num.addr.14, %if.then595 ], [ %inc1064, %if.then1067 ], [ %inc1064, %if.end1069 ], [ %arg_num.addr.18, %cleanup1275 ], [ %arg_num.addr.0, %if.then21 ], [ %arg_num.addr.0, %if.end18 ], [ %arg_num.addr.0, %if.end23 ], [ %arg_num.addr.0, %if.then64 ], [ %arg_num.addr.0, %if.else158 ], [ %arg_num.addr.7, %if.else329 ], [ %arg_num.addr.14, %if.else624 ], [ %arg_num.addr.14, %if.then622 ], [ %arg_num.addr.14, %if.end1155 ], [ %arg_num.addr.19, %if.then1281 ], [ %arg_num.addr.19, %if.end1278 ], [ %arg_num.addr.0, %cleanup1287.loopexit ]
  call void @llvm.dbg.value(metadata i64 %arg_num.addr.20, metadata !2923, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %has_operand_number.17, metadata !2930, metadata !DIExpression()), !dbg !3009
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %9) #7, !dbg !3097
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #7, !dbg !3097
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #7, !dbg !3097
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #7, !dbg !3097
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !3097
  switch i32 %cleanup.dest.slot.7, label %cleanup1312 [
    i32 0, label %while.cond.backedge
    i32 2, label %while.cond.backedge
  ]

while.cond.backedge:                              ; preds = %cleanup1287, %cleanup1287
  %.pre = load i8*, i8** %format_chars.addr, align 8, !dbg !3060
  br label %while.cond, !dbg !3009, !llvm.loop !3096

cleanup1312:                                      ; preds = %cleanup1287
  ret void, !dbg !3966
}

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_dollar_format_checking(i32 %first_arg_num, %union.tree_node* %params) unnamed_addr #5 !dbg !3967 {
entry:
  call void @llvm.dbg.value(metadata i32 %first_arg_num, metadata !3971, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata %union.tree_node* %params, metadata !3972, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata %union.tree_node* %params, metadata !3973, metadata !DIExpression()), !dbg !3979
  store i32 %first_arg_num, i32* @dollar_first_arg_num, align 4, !dbg !3980
  store i32 0, i32* @dollar_arguments_count, align 4, !dbg !3981
  store i32 0, i32* @dollar_max_arg_used, align 4, !dbg !3982
  store i1 false, i1* @dollar_format_warned, align 4, !dbg !3983
  %cmp = icmp sgt i32 %first_arg_num, 0, !dbg !3984
  br i1 %cmp, label %while.cond.preheader, label %if.end, !dbg !3986

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !3987

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %0 = phi i32 [ %inc, %while.body ], [ 0, %while.cond.preheader ]
  %params.addr.0 = phi %union.tree_node* [ %1, %while.body ], [ %params, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %params.addr.0, metadata !3972, metadata !DIExpression()), !dbg !3979
  %tobool = icmp eq %union.tree_node* %params.addr.0, null, !dbg !3987
  br i1 %tobool, label %if.end.loopexit, label %while.body, !dbg !3987

while.body:                                       ; preds = %while.cond
  %inc = add nuw nsw i32 %0, 1, !dbg !3989
  store i32 %inc, i32* @dollar_arguments_count, align 4, !dbg !3989
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %params.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3991
  %1 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !3991
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3972, metadata !DIExpression()), !dbg !3979
  br label %while.cond, !dbg !3987, !llvm.loop !3992

if.end.loopexit:                                  ; preds = %while.cond
  %.lcssa = phi i32 [ %0, %while.cond ]
  br label %if.end, !dbg !3994

if.end:                                           ; preds = %if.end.loopexit, %entry
  %2 = phi i32 [ %.lcssa, %if.end.loopexit ], [ 0, %entry ], !dbg !3996
  %3 = load i32, i32* @dollar_arguments_alloc, align 4, !dbg !3994
  %cmp1 = icmp slt i32 %3, %2, !dbg !3997
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !3998

if.then2:                                         ; preds = %if.end
  %4 = load i8*, i8** @dollar_arguments_used, align 8, !dbg !3999
  %tobool3 = icmp eq i8* %4, null, !dbg !3999
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !4002

if.then4:                                         ; preds = %if.then2
  tail call void @free(i8* nonnull %4) #6, !dbg !4003
  br label %if.end5, !dbg !4003

if.end5:                                          ; preds = %if.then2, %if.then4
  %5 = load i8*, i8** @dollar_arguments_pointer_p, align 8, !dbg !4004
  %tobool6 = icmp eq i8* %5, null, !dbg !4004
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !4006

if.then7:                                         ; preds = %if.end5
  tail call void @free(i8* nonnull %5) #6, !dbg !4007
  br label %if.end8, !dbg !4007

if.end8:                                          ; preds = %if.end5, %if.then7
  %6 = load i32, i32* @dollar_arguments_count, align 4, !dbg !4008
  store i32 %6, i32* @dollar_arguments_alloc, align 4, !dbg !4009
  %conv = sext i32 %6 to i64, !dbg !4010
  %call = tail call i8* @xmalloc(i64 %conv) #6, !dbg !4010
  store i8* %call, i8** @dollar_arguments_used, align 8, !dbg !4011
  %7 = load i32, i32* @dollar_arguments_alloc, align 4, !dbg !4012
  %conv9 = sext i32 %7 to i64, !dbg !4012
  %call11 = tail call i8* @xmalloc(i64 %conv9) #6, !dbg !4012
  store i8* %call11, i8** @dollar_arguments_pointer_p, align 8, !dbg !4013
  %.pre = load i32, i32* @dollar_arguments_alloc, align 4, !dbg !4014
  br label %if.end12, !dbg !4015

if.end12:                                         ; preds = %if.end8, %if.end
  %8 = phi i32 [ %.pre, %if.end8 ], [ %3, %if.end ], !dbg !4014
  %tobool13 = icmp eq i32 %8, 0, !dbg !4014
  br i1 %tobool13, label %if.end32, label %if.then14, !dbg !4016

if.then14:                                        ; preds = %if.end12
  %9 = load i8*, i8** @dollar_arguments_used, align 8, !dbg !4017
  %conv15 = sext i32 %8 to i64, !dbg !4018
  %call16 = tail call i8* @memset(i8* %9, i32 0, i64 %conv15) #6, !dbg !4019
  br i1 %cmp, label %while.cond20.preheader, label %if.end32, !dbg !4020

while.cond20.preheader:                           ; preds = %if.then14
  br label %while.cond20, !dbg !4021

while.cond20:                                     ; preds = %while.cond20.preheader, %while.body22
  %indvars.iv = phi i64 [ 0, %while.cond20.preheader ], [ %indvars.iv.next, %while.body22 ], !dbg !4022
  %params.addr.1 = phi %union.tree_node* [ %params, %while.cond20.preheader ], [ %16, %while.body22 ], !dbg !4022
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3974, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata %union.tree_node* %params.addr.1, metadata !3972, metadata !DIExpression()), !dbg !3979
  %tobool21 = icmp eq %union.tree_node* %params.addr.1, null, !dbg !4021
  br i1 %tobool21, label %if.end32.loopexit, label %while.body22, !dbg !4021

while.body22:                                     ; preds = %while.cond20
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %params.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4023
  %11 = bitcast %union.tree_node** %10 to %struct.tree_common**, !dbg !4023
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !4023
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !4023
  %13 = bitcast %union.tree_node** %type to i64**, !dbg !4023
  %14 = load i64*, i64** %13, align 8, !dbg !4023
  %bf.load = load i64, i64* %14, align 8, !dbg !4023
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4025
  %cmp24 = icmp eq i64 %bf.cast1, 10, !dbg !4025
  %conv26 = zext i1 %cmp24 to i8, !dbg !4026
  %15 = load i8*, i8** @dollar_arguments_pointer_p, align 8, !dbg !4027
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 %indvars.iv, !dbg !4027
  store i8 %conv26, i8* %arrayidx, align 1, !dbg !4028
  %chain28 = getelementptr inbounds %union.tree_node, %union.tree_node* %params.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4029
  %16 = load %union.tree_node*, %union.tree_node** %chain28, align 8, !dbg !4029
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !3972, metadata !DIExpression()), !dbg !3979
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !4030
  call void @llvm.dbg.value(metadata i32 undef, metadata !3974, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4022
  br label %while.cond20, !dbg !4021, !llvm.loop !4031

if.end32.loopexit:                                ; preds = %while.cond20
  br label %if.end32, !dbg !4033

if.end32:                                         ; preds = %if.end32.loopexit, %if.end12, %if.then14
  ret void, !dbg !4033
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_dollar_format_checking(%struct.format_check_results* %res, i32 %pointer_gap_ok) unnamed_addr #5 !dbg !4034 {
entry:
  call void @llvm.dbg.value(metadata %struct.format_check_results* %res, metadata !4038, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %pointer_gap_ok, metadata !4039, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 0, metadata !4041, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 0, metadata !4040, metadata !DIExpression()), !dbg !4042
  %tobool1 = icmp eq i32 %pointer_gap_ok, 0, !dbg !4043
  br i1 %tobool1, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !4050

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !4050

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !4050

for.cond.us:                                      ; preds = %for.inc.us, %entry.split.us
  %i.0.us = phi i32 [ 0, %entry.split.us ], [ %inc.us.pre-phi, %for.inc.us ], !dbg !4051
  call void @llvm.dbg.value(metadata i8 0, metadata !4041, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !4040, metadata !DIExpression()), !dbg !4042
  %0 = load i32, i32* @dollar_max_arg_used, align 4, !dbg !4052
  %cmp.us = icmp slt i32 %i.0.us, %0, !dbg !4053
  br i1 %cmp.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !4054

for.body.us:                                      ; preds = %for.cond.us
  %1 = load i8*, i8** @dollar_arguments_used, align 8, !dbg !4055
  %idxprom.us = zext i32 %i.0.us to i64, !dbg !4055
  %arrayidx.us = getelementptr inbounds i8, i8* %1, i64 %idxprom.us, !dbg !4055
  %2 = load i8, i8* %arrayidx.us, align 1, !dbg !4055
  %tobool.us = icmp eq i8 %2, 0, !dbg !4055
  br i1 %tobool.us, label %if.then.us, label %for.body.us.for.inc.us_crit_edge, !dbg !4056

for.body.us.for.inc.us_crit_edge:                 ; preds = %for.body.us
  %.pre = add nuw nsw i32 %i.0.us, 1, !dbg !4057
  br label %for.inc.us, !dbg !4056

if.then.us:                                       ; preds = %for.body.us
  %add.us = add nuw nsw i32 %i.0.us, 1, !dbg !4058
  %call.us = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.64, i64 0, i64 0), i32 %add.us, i32 %0) #6, !dbg !4059
  br label %for.inc.us

for.inc.us:                                       ; preds = %for.body.us.for.inc.us_crit_edge, %if.then.us
  %inc.us.pre-phi = phi i32 [ %.pre, %for.body.us.for.inc.us_crit_edge ], [ %add.us, %if.then.us ], !dbg !4057
  call void @llvm.dbg.value(metadata i8 0, metadata !4041, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %inc.us.pre-phi, metadata !4040, metadata !DIExpression()), !dbg !4042
  br label %for.cond.us, !dbg !4060, !llvm.loop !4061

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  %.lcssa = phi i32 [ %0, %for.cond.us ], !dbg !4052
  br label %for.end, !dbg !4063

for.cond:                                         ; preds = %for.inc, %entry.entry.split_crit_edge
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry.entry.split_crit_edge ], !dbg !4051
  %found_pointer_gap.0 = phi i8 [ %found_pointer_gap.2, %for.inc ], [ 0, %entry.entry.split_crit_edge ], !dbg !4065
  call void @llvm.dbg.value(metadata i8 %found_pointer_gap.0, metadata !4041, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4040, metadata !DIExpression()), !dbg !4042
  %3 = load i32, i32* @dollar_max_arg_used, align 4, !dbg !4052
  %4 = sext i32 %3 to i64, !dbg !4053
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !4053
  br i1 %cmp, label %for.body, label %for.end.us-lcssa, !dbg !4054

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** @dollar_arguments_used, align 8, !dbg !4055
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %indvars.iv, !dbg !4055
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4055
  %tobool = icmp eq i8 %6, 0, !dbg !4055
  br i1 %tobool, label %if.then, label %for.inc, !dbg !4056

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* @dollar_first_arg_num, align 4, !dbg !4066
  %cmp2 = icmp eq i32 %7, 0, !dbg !4067
  br i1 %cmp2, label %for.inc, label %lor.lhs.false, !dbg !4068

lor.lhs.false:                                    ; preds = %if.then
  %8 = load i8*, i8** @dollar_arguments_pointer_p, align 8, !dbg !4069
  %arrayidx4 = getelementptr inbounds i8, i8* %8, i64 %indvars.iv, !dbg !4069
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !4069
  %tobool5 = icmp eq i8 %9, 0, !dbg !4069
  br i1 %tobool5, label %if.else, label %for.inc, !dbg !4070

if.else:                                          ; preds = %lor.lhs.false
  %10 = trunc i64 %indvars.iv to i32, !dbg !4059
  %11 = add i32 %10, 1, !dbg !4059
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.64, i64 0, i64 0), i32 %11, i32 %3) #6, !dbg !4059
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false, %for.body, %if.then, %if.else
  %found_pointer_gap.2 = phi i8 [ %found_pointer_gap.0, %for.body ], [ %found_pointer_gap.0, %if.else ], [ 1, %lor.lhs.false ], [ 1, %if.then ], !dbg !4042
  call void @llvm.dbg.value(metadata i8 %found_pointer_gap.2, metadata !4041, metadata !DIExpression()), !dbg !4042
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4057
  call void @llvm.dbg.value(metadata i32 undef, metadata !4040, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4042
  br label %for.cond, !dbg !4060, !llvm.loop !4061

for.end.us-lcssa:                                 ; preds = %for.cond
  %found_pointer_gap.0.lcssa5 = phi i8 [ %found_pointer_gap.0, %for.cond ], !dbg !4065
  %.lcssa4 = phi i32 [ %3, %for.cond ], !dbg !4052
  call void @llvm.dbg.value(metadata i8 %found_pointer_gap.0.lcssa5, metadata !4041, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 %found_pointer_gap.0.lcssa5, metadata !4041, metadata !DIExpression()), !dbg !4042
  br label %for.end, !dbg !4063

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %12 = phi i32 [ %.lcssa4, %for.end.us-lcssa ], [ %.lcssa, %for.end.us-lcssa.us ]
  %found_pointer_gap.0.lcssa = phi i8 [ %found_pointer_gap.0.lcssa5, %for.end.us-lcssa ], [ 0, %for.end.us-lcssa.us ], !dbg !4065
  call void @llvm.dbg.value(metadata i8 %found_pointer_gap.0.lcssa, metadata !4041, metadata !DIExpression()), !dbg !4042
  %tobool9 = icmp eq i8 %found_pointer_gap.0.lcssa, 0, !dbg !4063
  br i1 %tobool9, label %lor.lhs.false10, label %if.then15, !dbg !4071

lor.lhs.false10:                                  ; preds = %for.end
  %13 = load i32, i32* @dollar_first_arg_num, align 4, !dbg !4072
  %tobool11 = icmp eq i32 %13, 0, !dbg !4072
  br i1 %tobool11, label %if.end17, label %land.lhs.true12, !dbg !4073

land.lhs.true12:                                  ; preds = %lor.lhs.false10
  %14 = load i32, i32* @dollar_arguments_count, align 4, !dbg !4074
  %cmp13 = icmp slt i32 %12, %14, !dbg !4075
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !4076

if.then15:                                        ; preds = %for.end, %land.lhs.true12
  %number_other = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 6, !dbg !4077
  %15 = load i32, i32* %number_other, align 4, !dbg !4079
  %dec = add nsw i32 %15, -1, !dbg !4079
  store i32 %dec, i32* %number_other, align 4, !dbg !4079
  %number_dollar_extra_args = getelementptr inbounds %struct.format_check_results, %struct.format_check_results* %res, i64 0, i32 2, !dbg !4080
  %16 = load i32, i32* %number_dollar_extra_args, align 4, !dbg !4081
  %inc16 = add nsw i32 %16, 1, !dbg !4081
  store i32 %inc16, i32* %number_dollar_extra_args, align 4, !dbg !4081
  br label %if.end17, !dbg !4082

if.end17:                                         ; preds = %lor.lhs.false10, %if.then15, %land.lhs.true12
  ret void, !dbg !4083
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @maybe_read_dollar_number(i8** %format, i32 %dollar_needed, %union.tree_node* %params, %union.tree_node** %param_ptr, %struct.format_kind_info* %fki) unnamed_addr #5 !dbg !4084 {
entry:
  call void @llvm.dbg.value(metadata i8** %format, metadata !4089, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %dollar_needed, metadata !4090, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata %union.tree_node* %params, metadata !4091, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata %union.tree_node** %param_ptr, metadata !4092, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata %struct.format_kind_info* %fki, metadata !4093, metadata !DIExpression()), !dbg !4104
  %0 = load i8*, i8** %format, align 8, !dbg !4105
  call void @llvm.dbg.value(metadata i8* %0, metadata !4096, metadata !DIExpression()), !dbg !4104
  %1 = load i8, i8* %0, align 1, !dbg !4106
  %idxprom = zext i8 %1 to i64, !dbg !4106
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !4106
  %2 = load i16, i16* %arrayidx, align 2, !dbg !4106
  %3 = and i16 %2, 4, !dbg !4106
  %tobool = icmp eq i16 %3, 0, !dbg !4106
  br i1 %tobool, label %if.then, label %while.cond.preheader, !dbg !4108

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !4109

if.then:                                          ; preds = %entry
  %tobool3 = icmp eq i32 %dollar_needed, 0, !dbg !4110
  br i1 %tobool3, label %cleanup, label %if.then4, !dbg !4113

if.then4:                                         ; preds = %if.then
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !4114
  br label %cleanup, !dbg !4116

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %4 = phi i16 [ %.pre6, %while.body ], [ %2, %while.cond.preheader ], !dbg !4117
  %5 = phi i8 [ %.pre, %while.body ], [ %1, %while.cond.preheader ], !dbg !4117
  %argnum.0 = phi i32 [ %add, %while.body ], [ 0, %while.cond.preheader ], !dbg !4104
  %overflow_flag.0 = phi i32 [ %overflow_flag.1, %while.body ], [ 0, %while.cond.preheader ], !dbg !4104
  %fcp.0 = phi i8* [ %incdec.ptr, %while.body ], [ %0, %while.cond.preheader ], !dbg !4104
  call void @llvm.dbg.value(metadata i8* %fcp.0, metadata !4096, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %overflow_flag.0, metadata !4095, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %argnum.0, metadata !4094, metadata !DIExpression()), !dbg !4104
  %6 = and i16 %4, 4, !dbg !4117
  %tobool11 = icmp eq i16 %6, 0, !dbg !4109
  br i1 %tobool11, label %while.end, label %while.body, !dbg !4109

while.body:                                       ; preds = %while.cond
  %mul = mul nsw i32 %argnum.0, 10, !dbg !4118
  %conv12 = sext i8 %5 to i32, !dbg !4119
  %sub = add nsw i32 %conv12, -48, !dbg !4120
  %add = add nsw i32 %mul, %sub, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %add, metadata !4097, metadata !DIExpression()), !dbg !4122
  %cmp = icmp slt i32 %add, 0, !dbg !4123
  %div = sdiv i32 %add, 10, !dbg !4125
  %cmp14 = icmp ne i32 %div, %argnum.0, !dbg !4126
  %or.cond = or i1 %cmp, %cmp14, !dbg !4127
  %overflow_flag.1 = select i1 %or.cond, i32 1, i32 %overflow_flag.0, !dbg !4127
  call void @llvm.dbg.value(metadata i32 %overflow_flag.1, metadata !4095, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %add, metadata !4094, metadata !DIExpression()), !dbg !4104
  %incdec.ptr = getelementptr inbounds i8, i8* %fcp.0, i64 1, !dbg !4128
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !4096, metadata !DIExpression()), !dbg !4104
  %.pre = load i8, i8* %incdec.ptr, align 1, !dbg !4117
  %idxprom7.phi.trans.insert = zext i8 %.pre to i64, !dbg !4104
  %arrayidx8.phi.trans.insert = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom7.phi.trans.insert, !dbg !4104
  %.pre6 = load i16, i16* %arrayidx8.phi.trans.insert, align 2, !dbg !4117
  br label %while.cond, !dbg !4109, !llvm.loop !4129

while.end:                                        ; preds = %while.cond
  %.lcssa13 = phi i8 [ %5, %while.cond ], !dbg !4117
  %argnum.0.lcssa = phi i32 [ %argnum.0, %while.cond ], !dbg !4104
  %overflow_flag.0.lcssa = phi i32 [ %overflow_flag.0, %while.cond ], !dbg !4104
  %fcp.0.lcssa = phi i8* [ %fcp.0, %while.cond ], !dbg !4104
  call void @llvm.dbg.value(metadata i32 %argnum.0.lcssa, metadata !4094, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %overflow_flag.0.lcssa, metadata !4095, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8* %fcp.0.lcssa, metadata !4096, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %argnum.0.lcssa, metadata !4094, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %overflow_flag.0.lcssa, metadata !4095, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8* %fcp.0.lcssa, metadata !4096, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %argnum.0.lcssa, metadata !4094, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %overflow_flag.0.lcssa, metadata !4095, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8* %fcp.0.lcssa, metadata !4096, metadata !DIExpression()), !dbg !4104
  %cmp19 = icmp eq i8 %.lcssa13, 36, !dbg !4131
  br i1 %cmp19, label %if.end26, label %if.then21, !dbg !4133

if.then21:                                        ; preds = %while.end
  %tobool22 = icmp eq i32 %dollar_needed, 0, !dbg !4134
  br i1 %tobool22, label %cleanup, label %if.then23, !dbg !4137

if.then23:                                        ; preds = %if.then21
  %call24 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !4138
  br label %cleanup, !dbg !4140

if.end26:                                         ; preds = %while.end
  %add.ptr = getelementptr inbounds i8, i8* %fcp.0.lcssa, i64 1, !dbg !4141
  store i8* %add.ptr, i8** %format, align 8, !dbg !4142
  %7 = load i32, i32* @pedantic, align 4, !dbg !4143
  %tobool27 = icmp eq i32 %7, 0, !dbg !4143
  %.b = load i1, i1* @dollar_format_warned, align 4, !dbg !4145
  %or.cond1 = or i1 %tobool27, %.b, !dbg !4146
  br i1 %or.cond1, label %if.end34, label %if.then29, !dbg !4146

if.then29:                                        ; preds = %if.end26
  %8 = load i32, i32* @c_language, align 4, !dbg !4147
  %and30 = and i32 %8, 2, !dbg !4147
  %cmp31 = icmp eq i32 %and30, 0, !dbg !4147
  %cond = select i1 %cmp31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), !dbg !4147
  %call33 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.65, i64 0, i64 0), i8* %cond) #6, !dbg !4149
  store i1 true, i1* @dollar_format_warned, align 4, !dbg !4150
  br label %if.end34, !dbg !4151

if.end34:                                         ; preds = %if.end26, %if.then29
  %tobool35 = icmp ne i32 %overflow_flag.0.lcssa, 0, !dbg !4152
  %cmp37 = icmp eq i32 %argnum.0.lcssa, 0, !dbg !4154
  %or.cond2 = or i1 %tobool35, %cmp37, !dbg !4155
  br i1 %or.cond2, label %if.then44, label %lor.lhs.false39, !dbg !4155

lor.lhs.false39:                                  ; preds = %if.end34
  %9 = load i32, i32* @dollar_first_arg_num, align 4, !dbg !4156
  %tobool40 = icmp ne i32 %9, 0, !dbg !4156
  %10 = load i32, i32* @dollar_arguments_count, align 4, !dbg !4157
  %cmp42 = icmp sgt i32 %argnum.0.lcssa, %10, !dbg !4158
  %or.cond3 = and i1 %tobool40, %cmp42, !dbg !4159
  br i1 %or.cond3, label %if.then44, label %if.end46, !dbg !4159

if.then44:                                        ; preds = %lor.lhs.false39, %if.end34
  %call45 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.66, i64 0, i64 0)) #6, !dbg !4160
  br label %cleanup, !dbg !4162

if.end46:                                         ; preds = %lor.lhs.false39
  %11 = load i32, i32* @dollar_max_arg_used, align 4, !dbg !4163
  %cmp47 = icmp sgt i32 %argnum.0.lcssa, %11, !dbg !4165
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !4166

if.then49:                                        ; preds = %if.end46
  store i32 %argnum.0.lcssa, i32* @dollar_max_arg_used, align 4, !dbg !4167
  br label %if.end50, !dbg !4168

if.end50:                                         ; preds = %if.then49, %if.end46
  %12 = phi i32 [ %argnum.0.lcssa, %if.then49 ], [ %11, %if.end46 ]
  %.pre7 = load i32, i32* @dollar_arguments_alloc, align 4, !dbg !4169
  br label %while.cond51, !dbg !4170

while.cond51:                                     ; preds = %while.body54, %if.end50
  %13 = phi i32 [ %.pre8, %while.body54 ], [ %12, %if.end50 ], !dbg !4171
  %14 = phi i32 [ %add56, %while.body54 ], [ %.pre7, %if.end50 ], !dbg !4169
  %cmp52 = icmp slt i32 %14, %13, !dbg !4172
  br i1 %cmp52, label %while.body54, label %while.end67, !dbg !4170

while.body54:                                     ; preds = %while.cond51
  %mul55 = shl nsw i32 %14, 1, !dbg !4173
  %add56 = add nsw i32 %mul55, 16, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %add56, metadata !4099, metadata !DIExpression()), !dbg !4175
  %15 = load i8*, i8** @dollar_arguments_used, align 8, !dbg !4176
  %conv57 = sext i32 %add56 to i64, !dbg !4176
  %call59 = tail call i8* @xrealloc(i8* %15, i64 %conv57) #6, !dbg !4176
  store i8* %call59, i8** @dollar_arguments_used, align 8, !dbg !4177
  %16 = load i8*, i8** @dollar_arguments_pointer_p, align 8, !dbg !4178
  %call62 = tail call i8* @xrealloc(i8* %16, i64 %conv57) #6, !dbg !4178
  store i8* %call62, i8** @dollar_arguments_pointer_p, align 8, !dbg !4179
  %17 = load i8*, i8** @dollar_arguments_used, align 8, !dbg !4180
  %18 = load i32, i32* @dollar_arguments_alloc, align 4, !dbg !4181
  %idx.ext = sext i32 %18 to i64, !dbg !4182
  %add.ptr63 = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !4182
  %sub64 = sub nsw i32 %add56, %18, !dbg !4183
  %conv65 = sext i32 %sub64 to i64, !dbg !4184
  %call66 = tail call i8* @memset(i8* %add.ptr63, i32 0, i64 %conv65) #6, !dbg !4185
  store i32 %add56, i32* @dollar_arguments_alloc, align 4, !dbg !4186
  %.pre8 = load i32, i32* @dollar_max_arg_used, align 4, !dbg !4171
  br label %while.cond51, !dbg !4170, !llvm.loop !4187

while.end67:                                      ; preds = %while.cond51
  %flags = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %fki, i64 0, i32 7, !dbg !4189
  %19 = load i32, i32* %flags, align 8, !dbg !4189
  %and68 = and i32 %19, 8, !dbg !4191
  %tobool69 = icmp eq i32 %and68, 0, !dbg !4191
  br i1 %tobool69, label %land.lhs.true70, label %while.end67.if.else82_crit_edge, !dbg !4192

while.end67.if.else82_crit_edge:                  ; preds = %while.end67
  %.pre9 = load i8*, i8** @dollar_arguments_used, align 8, !dbg !4193
  %.pre10 = add nsw i32 %argnum.0.lcssa, -1, !dbg !4194
  %.pre11 = sext i32 %.pre10 to i64, !dbg !4193
  br label %if.else82, !dbg !4192

land.lhs.true70:                                  ; preds = %while.end67
  %20 = load i8*, i8** @dollar_arguments_used, align 8, !dbg !4195
  %sub71 = add nsw i32 %argnum.0.lcssa, -1, !dbg !4196
  %idxprom72 = sext i32 %sub71 to i64, !dbg !4195
  %arrayidx73 = getelementptr inbounds i8, i8* %20, i64 %idxprom72, !dbg !4195
  %21 = load i8, i8* %arrayidx73, align 1, !dbg !4195
  %cmp75 = icmp eq i8 %21, 1, !dbg !4197
  br i1 %cmp75, label %if.then77, label %if.else82, !dbg !4198

if.then77:                                        ; preds = %land.lhs.true70
  store i8 2, i8* %arrayidx73, align 1, !dbg !4199
  %name = getelementptr inbounds %struct.format_kind_info, %struct.format_kind_info* %fki, i64 0, i32 0, !dbg !4201
  %22 = load i8*, i8** %name, align 8, !dbg !4201
  %call81 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.67, i64 0, i64 0), i32 %argnum.0.lcssa, i8* %22) #6, !dbg !4202
  br label %if.end86, !dbg !4203

if.else82:                                        ; preds = %while.end67.if.else82_crit_edge, %land.lhs.true70
  %idxprom84.pre-phi = phi i64 [ %.pre11, %while.end67.if.else82_crit_edge ], [ %idxprom72, %land.lhs.true70 ], !dbg !4193
  %23 = phi i8* [ %.pre9, %while.end67.if.else82_crit_edge ], [ %20, %land.lhs.true70 ], !dbg !4193
  %arrayidx85 = getelementptr inbounds i8, i8* %23, i64 %idxprom84.pre-phi, !dbg !4193
  store i8 1, i8* %arrayidx85, align 1, !dbg !4204
  br label %if.end86

if.end86:                                         ; preds = %if.else82, %if.then77
  %24 = load i32, i32* @dollar_first_arg_num, align 4, !dbg !4205
  %tobool87 = icmp eq i32 %24, 0, !dbg !4205
  br i1 %tobool87, label %if.else95, label %if.then88, !dbg !4206

if.then88:                                        ; preds = %if.end86
  store %union.tree_node* %params, %union.tree_node** %param_ptr, align 8, !dbg !4207
  call void @llvm.dbg.value(metadata i32 1, metadata !4101, metadata !DIExpression()), !dbg !4208
  %25 = bitcast %union.tree_node** %param_ptr to i64*, !dbg !4209
  br label %for.cond, !dbg !4212

for.cond:                                         ; preds = %for.body, %if.then88
  %26 = phi %union.tree_node* [ %params, %if.then88 ], [ %31, %for.body ]
  %27 = phi %union.tree_node* [ %params, %if.then88 ], [ %31, %for.body ]
  %i.0 = phi i32 [ 1, %if.then88 ], [ %inc, %for.body ], !dbg !4213
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4101, metadata !DIExpression()), !dbg !4208
  %cmp89 = icmp slt i32 %i.0, %argnum.0.lcssa, !dbg !4214
  br i1 %cmp89, label %land.rhs, label %land.end, !dbg !4215

land.rhs:                                         ; preds = %for.cond
  %cmp91 = icmp ne %union.tree_node* %27, null, !dbg !4216
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %28 = phi i1 [ false, %for.cond ], [ %cmp91, %land.rhs ], !dbg !4209
  br i1 %28, label %for.body, label %for.end, !dbg !4217

for.body:                                         ; preds = %land.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4218
  %29 = bitcast %union.tree_node** %chain to i64*, !dbg !4218
  %30 = load i64, i64* %29, align 8, !dbg !4218
  store i64 %30, i64* %25, align 8, !dbg !4219
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4220
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4101, metadata !DIExpression()), !dbg !4208
  %31 = inttoptr i64 %30 to %union.tree_node*, !dbg !4221
  br label %for.cond, !dbg !4221, !llvm.loop !4222

for.end:                                          ; preds = %land.end
  %.lcssa = phi %union.tree_node* [ %26, %land.end ]
  %tobool93 = icmp eq %union.tree_node* %.lcssa, null, !dbg !4224
  br i1 %tobool93, label %cond.true, label %cleanup, !dbg !4224

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 1088, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !4224
  br label %cleanup, !dbg !4224

if.else95:                                        ; preds = %if.end86
  store %union.tree_node* null, %union.tree_node** %param_ptr, align 8, !dbg !4225
  br label %cleanup

cleanup:                                          ; preds = %if.then21, %for.end, %if.then, %if.else95, %cond.true, %if.then44, %if.then23, %if.then4
  %retval.0 = phi i32 [ -1, %if.then23 ], [ -1, %if.then44 ], [ -1, %if.then4 ], [ 0, %if.then ], [ 0, %if.then21 ], [ %argnum.0.lcssa, %cond.true ], [ %argnum.0.lcssa, %for.end ], [ %argnum.0.lcssa, %if.else95 ], !dbg !4104
  ret i32 %retval.0, !dbg !4226
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @avoid_dollar_number(i8* %format) unnamed_addr #5 !dbg !4227 {
entry:
  call void @llvm.dbg.value(metadata i8* %format, metadata !4231, metadata !DIExpression()), !dbg !4232
  %0 = load i8, i8* %format, align 1, !dbg !4233
  %idxprom = zext i8 %0 to i64, !dbg !4233
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !4233
  %1 = load i16, i16* %arrayidx, align 2, !dbg !4233
  %2 = and i16 %1, 4, !dbg !4233
  %tobool = icmp eq i16 %2, 0, !dbg !4233
  br i1 %tobool, label %return, label %while.cond.preheader, !dbg !4235

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !4236

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %3 = phi i16 [ %.pre4, %while.body ], [ %1, %while.cond.preheader ], !dbg !4237
  %4 = phi i8 [ %.pre, %while.body ], [ %0, %while.cond.preheader ], !dbg !4237
  %format.addr.0 = phi i8* [ %incdec.ptr, %while.body ], [ %format, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata i8* %format.addr.0, metadata !4231, metadata !DIExpression()), !dbg !4232
  %5 = and i16 %3, 4, !dbg !4237
  %tobool9 = icmp eq i16 %5, 0, !dbg !4236
  br i1 %tobool9, label %while.end, label %while.body, !dbg !4236

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %format.addr.0, i64 1, !dbg !4238
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !4231, metadata !DIExpression()), !dbg !4232
  %.pre = load i8, i8* %incdec.ptr, align 1, !dbg !4237
  %idxprom5.phi.trans.insert = zext i8 %.pre to i64, !dbg !4232
  %arrayidx6.phi.trans.insert = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom5.phi.trans.insert, !dbg !4232
  %.pre4 = load i16, i16* %arrayidx6.phi.trans.insert, align 2, !dbg !4237
  br label %while.cond, !dbg !4236, !llvm.loop !4239

while.end:                                        ; preds = %while.cond
  %.lcssa = phi i8 [ %4, %while.cond ], !dbg !4237
  call void @llvm.dbg.value(metadata i8* %format.addr.0, metadata !4231, metadata !DIExpression()), !dbg !4232
  %cmp = icmp eq i8 %.lcssa, 36, !dbg !4240
  br i1 %cmp, label %if.then12, label %return, !dbg !4242

if.then12:                                        ; preds = %while.end
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.68, i64 0, i64 0)) #6, !dbg !4243
  br label %return, !dbg !4245

return:                                           ; preds = %entry, %while.end, %if.then12
  %retval.0 = phi i8 [ 1, %if.then12 ], [ 0, %entry ], [ 0, %while.end ], !dbg !4232
  ret i8 %retval.0, !dbg !4246
}

declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.format_flag_spec* @get_flag_spec(%struct.format_flag_spec* %spec, i32 %flag, i8* %predicates) unnamed_addr #5 !dbg !4247 {
entry:
  call void @llvm.dbg.value(metadata %struct.format_flag_spec* %spec, metadata !4251, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata i32 %flag, metadata !4252, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata i8* %predicates, metadata !4253, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata i32 0, metadata !4254, metadata !DIExpression()), !dbg !4255
  %cmp5 = icmp eq i8* %predicates, null, !dbg !4256
  br i1 %cmp5, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !4261

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !4261

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !4261

for.cond.us:                                      ; preds = %for.inc.us, %entry.split.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.us ], [ 0, %entry.split.us ], !dbg !4262
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4254, metadata !DIExpression()), !dbg !4255
  %flag_char.us = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %spec, i64 %indvars.iv, i32 0, !dbg !4263
  %0 = load i32, i32* %flag_char.us, align 8, !dbg !4263
  %cmp.us = icmp eq i32 %0, 0, !dbg !4264
  br i1 %cmp.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !4265

for.body.us:                                      ; preds = %for.cond.us
  %cmp4.us = icmp eq i32 %0, %flag, !dbg !4266
  br i1 %cmp4.us, label %if.end.us, label %for.inc.us, !dbg !4268

if.end.us:                                        ; preds = %for.body.us
  %predicate.us = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %spec, i64 %indvars.iv, i32 1, !dbg !4256
  %1 = load i32, i32* %predicate.us, align 4, !dbg !4256
  %cmp21.us = icmp eq i32 %1, 0, !dbg !4269
  br i1 %cmp21.us, label %if.then22.us-lcssa.us, label %for.inc.us, !dbg !4271

for.inc.us:                                       ; preds = %if.end.us, %for.body.us
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !4272
  call void @llvm.dbg.value(metadata i32 undef, metadata !4254, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4255
  br label %for.cond.us, !dbg !4273, !llvm.loop !4274

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !4276

if.then22.us-lcssa.us:                            ; preds = %if.end.us
  %indvars.iv.lcssa7 = phi i64 [ %indvars.iv, %if.end.us ], !dbg !4262
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa7, metadata !4254, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa7, metadata !4254, metadata !DIExpression()), !dbg !4255
  %arrayidx24 = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %spec, i64 %indvars.iv.lcssa7, !dbg !4277
  br label %cleanup, !dbg !4278

for.cond:                                         ; preds = %for.inc, %entry.entry.split_crit_edge
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc ], [ 0, %entry.entry.split_crit_edge ], !dbg !4262
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !4254, metadata !DIExpression()), !dbg !4255
  %flag_char = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %spec, i64 %indvars.iv5, i32 0, !dbg !4263
  %2 = load i32, i32* %flag_char, align 8, !dbg !4263
  %cmp = icmp eq i32 %2, 0, !dbg !4264
  br i1 %cmp, label %for.end.us-lcssa, label %for.body, !dbg !4265

for.body:                                         ; preds = %for.cond
  %cmp4 = icmp eq i32 %2, %flag, !dbg !4266
  br i1 %cmp4, label %if.end, label %for.inc, !dbg !4268

if.end:                                           ; preds = %for.body
  %predicate = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %spec, i64 %indvars.iv5, i32 1, !dbg !4256
  %3 = load i32, i32* %predicate, align 4, !dbg !4256
  %cmp9 = icmp eq i32 %3, 0, !dbg !4279
  br i1 %cmp9, label %for.inc, label %land.lhs.true, !dbg !4282

land.lhs.true:                                    ; preds = %if.end
  %call = tail call i8* @strchr(i8* nonnull %predicates, i32 %3) #6, !dbg !4283
  %cmp13 = icmp eq i8* %call, null, !dbg !4284
  br i1 %cmp13, label %for.inc, label %if.then14.us-lcssa, !dbg !4285

if.then14.us-lcssa:                               ; preds = %land.lhs.true
  %indvars.iv5.lcssa8 = phi i64 [ %indvars.iv5, %land.lhs.true ], !dbg !4262
  call void @llvm.dbg.value(metadata i64 %indvars.iv5.lcssa8, metadata !4254, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata i64 %indvars.iv5.lcssa8, metadata !4254, metadata !DIExpression()), !dbg !4255
  %arrayidx16 = getelementptr inbounds %struct.format_flag_spec, %struct.format_flag_spec* %spec, i64 %indvars.iv5.lcssa8, !dbg !4286
  br label %cleanup, !dbg !4287

for.inc:                                          ; preds = %land.lhs.true, %if.end, %for.body
  %indvars.iv.next6 = add nuw i64 %indvars.iv5, 1, !dbg !4272
  call void @llvm.dbg.value(metadata i32 undef, metadata !4254, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4255
  br label %for.cond, !dbg !4273, !llvm.loop !4274

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !4276

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  br i1 %cmp5, label %cond.true, label %cleanup, !dbg !4276

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 1177, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !4276
  br label %cleanup, !dbg !4276

cleanup:                                          ; preds = %for.end, %cond.true, %if.then22.us-lcssa.us, %if.then14.us-lcssa
  %retval.0 = phi %struct.format_flag_spec* [ %arrayidx16, %if.then14.us-lcssa ], [ %arrayidx24, %if.then22.us-lcssa.us ], [ null, %for.end ], [ null, %cond.true ], !dbg !4255
  ret %struct.format_flag_spec* %retval.0, !dbg !4288
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @check_format_types(%struct.format_wanted_type* %types, i8* %format_start, i32 %format_length) unnamed_addr #5 !dbg !4289 {
entry:
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %types, metadata !4293, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i8* %format_start, metadata !4294, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i32 %format_length, metadata !4295, metadata !DIExpression()), !dbg !4306
  br label %for.cond, !dbg !4307

for.cond:                                         ; preds = %cleanup, %entry
  %types.addr.0 = phi %struct.format_wanted_type* [ %types, %entry ], [ %52, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %types.addr.0, metadata !4293, metadata !DIExpression()), !dbg !4306
  %cmp = icmp eq %struct.format_wanted_type* %types.addr.0, null, !dbg !4308
  br i1 %cmp, label %for.end260, label %for.body, !dbg !4309

for.body:                                         ; preds = %for.cond
  %param = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 8, !dbg !4310
  %0 = load %union.tree_node*, %union.tree_node** %param, align 8, !dbg !4310
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4296, metadata !DIExpression()), !dbg !4311
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4312
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4312
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4300, metadata !DIExpression()), !dbg !4311
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4313
  %cmp1 = icmp eq %union.tree_node* %1, %2, !dbg !4315
  br i1 %cmp1, label %cleanup, label %if.end, !dbg !4316

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4301, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 0, metadata !4305, metadata !DIExpression()), !dbg !4311
  %wanted_type2 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 0, !dbg !4317
  %3 = load %union.tree_node*, %union.tree_node** %wanted_type2, align 8, !dbg !4317
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4302, metadata !DIExpression()), !dbg !4311
  %arg_num3 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 9, !dbg !4318
  %4 = load i32, i32* %arg_num3, align 8, !dbg !4318
  call void @llvm.dbg.value(metadata i32 %4, metadata !4303, metadata !DIExpression()), !dbg !4311
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !4319
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4319

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 2153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !4319
  br label %cond.end, !dbg !4319

cond.end:                                         ; preds = %if.end, %cond.true
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !4320
  %cmp4 = icmp eq %union.tree_node* %3, %5, !dbg !4320
  br i1 %cmp4, label %lor.lhs.false, label %cond.end8, !dbg !4320

lor.lhs.false:                                    ; preds = %cond.end
  %pointer_count = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 3, !dbg !4320
  %6 = load i32, i32* %pointer_count, align 4, !dbg !4320
  %tobool5 = icmp eq i32 %6, 0, !dbg !4320
  br i1 %tobool5, label %cond.true6, label %cond.end8, !dbg !4320

cond.true6:                                       ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 2154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !4320
  br label %cond.end8, !dbg !4320

cond.end8:                                        ; preds = %lor.lhs.false, %cond.end, %cond.true6
  %pointer_count10 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 3, !dbg !4321
  %7 = load i32, i32* %pointer_count10, align 4, !dbg !4321
  %cmp11 = icmp eq i32 %7, 0, !dbg !4323
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !4324

if.then12:                                        ; preds = %cond.end8
  %8 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 6), align 8, !dbg !4325
  %call = tail call %union.tree_node* %8(%union.tree_node* %3) #6, !dbg !4326
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4302, metadata !DIExpression()), !dbg !4311
  br label %if.end13, !dbg !4327

if.end13:                                         ; preds = %if.then12, %cond.end8
  %wanted_type.0 = phi %union.tree_node* [ %call, %if.then12 ], [ %3, %cond.end8 ], !dbg !4311
  call void @llvm.dbg.value(metadata %union.tree_node* %wanted_type.0, metadata !4302, metadata !DIExpression()), !dbg !4311
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %wanted_type.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4328
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !4328
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4302, metadata !DIExpression()), !dbg !4311
  %call15 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %0) #6, !dbg !4329
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !4296, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 0, metadata !4304, metadata !DIExpression()), !dbg !4311
  %writing_in_flag = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 5, !dbg !4330
  %reading_from_flag = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 6, !dbg !4337
  br label %for.cond16, !dbg !4339

for.cond16:                                       ; preds = %for.inc, %if.end13
  %i.0 = phi i32 [ 0, %if.end13 ], [ %inc, %for.inc ], !dbg !4340
  %cur_type.0 = phi %union.tree_node* [ %1, %if.end13 ], [ %13, %for.inc ], !dbg !4311
  %cur_param.0 = phi %union.tree_node* [ %call15, %if.end13 ], [ %cur_param.1, %for.inc ], !dbg !4311
  call void @llvm.dbg.value(metadata %union.tree_node* %cur_param.0, metadata !4296, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata %union.tree_node* %cur_type.0, metadata !4300, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4304, metadata !DIExpression()), !dbg !4311
  %11 = load i32, i32* %pointer_count10, align 4, !dbg !4341
  %cmp18 = icmp slt i32 %i.0, %11, !dbg !4342
  br i1 %cmp18, label %for.body19, label %for.end.loopexit, !dbg !4343

for.body19:                                       ; preds = %for.cond16
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %cur_type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4344
  %bf.load = load i64, i64* %12, align 8, !dbg !4344
  %bf.cast21 = and i64 %bf.load, 65535, !dbg !4345
  %cmp20 = icmp eq i64 %bf.cast21, 10, !dbg !4345
  br i1 %cmp20, label %if.then21, label %if.else120, !dbg !4346

if.then21:                                        ; preds = %for.body19
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %cur_type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4347
  %13 = load %union.tree_node*, %union.tree_node** %type23, align 8, !dbg !4347
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !4300, metadata !DIExpression()), !dbg !4311
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4348
  %cmp24 = icmp eq %union.tree_node* %13, %14, !dbg !4350
  br i1 %cmp24, label %for.end.loopexit, label %if.end26, !dbg !4351

if.end26:                                         ; preds = %if.then21
  %15 = load i32, i32* %writing_in_flag, align 4, !dbg !4352
  %tobool27 = icmp ne i32 %15, 0, !dbg !4353
  %cmp28 = icmp eq i32 %i.0, 0, !dbg !4354
  %or.cond = and i1 %tobool27, %cmp28, !dbg !4355
  %cmp30 = icmp ne %union.tree_node* %cur_param.0, null, !dbg !4356
  %or.cond1 = and i1 %or.cond, %cmp30, !dbg !4355
  br i1 %or.cond1, label %land.lhs.true31, label %if.end36, !dbg !4355

land.lhs.true31:                                  ; preds = %if.end26
  %call32 = tail call i32 @integer_zerop(%union.tree_node* nonnull %cur_param.0) #6, !dbg !4357
  %tobool33 = icmp eq i32 %call32, 0, !dbg !4357
  br i1 %tobool33, label %if.end36, label %if.then34, !dbg !4358

if.then34:                                        ; preds = %land.lhs.true31
  %call35 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.69, i64 0, i64 0), i32 %4) #6, !dbg !4359
  br label %if.end36, !dbg !4359

if.end36:                                         ; preds = %land.lhs.true31, %if.then34, %if.end26
  %16 = load i32, i32* %reading_from_flag, align 8, !dbg !4360
  %tobool37 = icmp ne i32 %16, 0, !dbg !4361
  %or.cond2 = and i1 %tobool37, %cmp28, !dbg !4362
  %or.cond3 = and i1 %or.cond2, %cmp30, !dbg !4362
  br i1 %or.cond3, label %land.lhs.true42, label %if.end47, !dbg !4362

land.lhs.true42:                                  ; preds = %if.end36
  %call43 = tail call i32 @integer_zerop(%union.tree_node* nonnull %cur_param.0) #6, !dbg !4363
  %tobool44 = icmp eq i32 %call43, 0, !dbg !4363
  br i1 %tobool44, label %if.end47, label %if.then45, !dbg !4364

if.then45:                                        ; preds = %land.lhs.true42
  %call46 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.70, i64 0, i64 0), i32 %4) #6, !dbg !4365
  br label %if.end47, !dbg !4365

if.end47:                                         ; preds = %land.lhs.true42, %if.then45, %if.end36
  %cmp48 = icmp eq %union.tree_node* %cur_param.0, null, !dbg !4366
  br i1 %cmp48, label %if.end56, label %land.lhs.true49, !dbg !4368

land.lhs.true49:                                  ; preds = %if.end47
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %cur_param.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4369
  %bf.load51 = load i64, i64* %17, align 8, !dbg !4369
  %bf.cast5326 = and i64 %bf.load51, 65535, !dbg !4370
  %cmp54 = icmp eq i64 %bf.cast5326, 121, !dbg !4370
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !4371

if.then55:                                        ; preds = %land.lhs.true49
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %cur_param.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4372
  %18 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4372
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !4296, metadata !DIExpression()), !dbg !4311
  br label %if.end56, !dbg !4373

if.end56:                                         ; preds = %if.end47, %land.lhs.true49, %if.then55
  %cur_param.1 = phi %union.tree_node* [ %18, %if.then55 ], [ null, %land.lhs.true49 ], [ null, %if.end47 ], !dbg !4374
  call void @llvm.dbg.value(metadata %union.tree_node* %cur_param.1, metadata !4296, metadata !DIExpression()), !dbg !4311
  %19 = load i32, i32* %writing_in_flag, align 4, !dbg !4375
  %tobool58 = icmp ne i32 %19, 0, !dbg !4377
  %or.cond4 = and i1 %tobool58, %cmp28, !dbg !4378
  br i1 %or.cond4, label %land.lhs.true61, label %if.end93, !dbg !4378

land.lhs.true61:                                  ; preds = %if.end56
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4379
  %bf.load63 = load i64, i64* %20, align 8, !dbg !4379
  %bf.cast6524 = and i64 %bf.load63, 1048576, !dbg !4379
  %tobool66 = icmp eq i64 %bf.cast6524, 0, !dbg !4379
  br i1 %tobool66, label %lor.lhs.false67, label %if.then91, !dbg !4380

lor.lhs.false67:                                  ; preds = %land.lhs.true61
  %cmp68 = icmp eq %union.tree_node* %cur_param.1, null, !dbg !4381
  br i1 %cmp68, label %if.end93, label %land.lhs.true69, !dbg !4382

land.lhs.true69:                                  ; preds = %lor.lhs.false67
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %cur_param.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4383
  %bf.load71 = load i64, i64* %21, align 8, !dbg !4383
  %bf.cast73 = and i64 %bf.load71, 65535, !dbg !4383
  %arrayidx74 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast73, !dbg !4383
  %22 = load i32, i32* %arrayidx74, align 4, !dbg !4383
  %cmp75 = icmp eq i32 %22, 1, !dbg !4383
  br i1 %cmp75, label %if.then91, label %lor.lhs.false76, !dbg !4384

lor.lhs.false76:                                  ; preds = %land.lhs.true69
  %cmp83 = icmp eq i32 %22, 3, !dbg !4385
  br i1 %cmp83, label %land.lhs.true84, label %if.end93, !dbg !4386

land.lhs.true84:                                  ; preds = %lor.lhs.false76
  %bf.cast8925 = and i64 %bf.load71, 1048576, !dbg !4387
  %tobool90 = icmp eq i64 %bf.cast8925, 0, !dbg !4387
  br i1 %tobool90, label %if.end93, label %if.then91, !dbg !4388

if.then91:                                        ; preds = %land.lhs.true84, %land.lhs.true61, %land.lhs.true69
  %call92 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.71, i64 0, i64 0), i32 %4) #6, !dbg !4389
  br label %if.end93, !dbg !4389

if.end93:                                         ; preds = %land.lhs.true84, %lor.lhs.false67, %if.then91, %lor.lhs.false76, %if.end56
  %cmp94 = icmp ne i32 %i.0, 0, !dbg !4390
  %23 = load i32, i32* @pedantic, align 4, !dbg !4392
  %tobool96 = icmp ne i32 %23, 0, !dbg !4392
  %or.cond5 = and i1 %cmp94, %tobool96, !dbg !4393
  br i1 %or.cond5, label %land.lhs.true97, label %for.inc, !dbg !4393

land.lhs.true97:                                  ; preds = %if.end93
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4394
  %bf.load99 = load i64, i64* %24, align 8, !dbg !4394
  %bf.cast10222 = and i64 %bf.load99, 1048576, !dbg !4394
  %tobool103 = icmp eq i64 %bf.cast10222, 0, !dbg !4394
  br i1 %tobool103, label %lor.lhs.false104, label %if.then117, !dbg !4395

lor.lhs.false104:                                 ; preds = %land.lhs.true97
  %bf.cast10923 = and i64 %bf.load99, 524288, !dbg !4396
  %tobool110 = icmp eq i64 %bf.cast10923, 0, !dbg !4396
  br i1 %tobool110, label %lor.lhs.false111, label %if.then117, !dbg !4397

lor.lhs.false111:                                 ; preds = %lor.lhs.false104
  %type112 = bitcast %union.tree_node* %13 to %struct.tree_type*, !dbg !4398
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type112, i64 0, i32 6, !dbg !4398
  %bf.load113 = load i32, i32* %restrict_flag, align 4, !dbg !4398
  %bf.clear115 = and i32 %bf.load113, 8192, !dbg !4398
  %tobool116 = icmp eq i32 %bf.clear115, 0, !dbg !4398
  br i1 %tobool116, label %for.inc, label %if.then117, !dbg !4399

if.then117:                                       ; preds = %lor.lhs.false111, %lor.lhs.false104, %land.lhs.true97
  %call118 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.72, i64 0, i64 0), i32 %4) #6, !dbg !4400
  br label %for.inc, !dbg !4400

if.else120:                                       ; preds = %for.body19
  %i.0.lcssa40 = phi i32 [ %i.0, %for.body19 ], !dbg !4340
  %cur_type.0.lcssa39 = phi %union.tree_node* [ %cur_type.0, %for.body19 ], !dbg !4311
  %.lcssa38 = phi i32 [ %11, %for.body19 ], !dbg !4341
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa40, metadata !4304, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata %union.tree_node* %cur_type.0.lcssa39, metadata !4300, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa40, metadata !4304, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata %union.tree_node* %cur_type.0.lcssa39, metadata !4300, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa40, metadata !4304, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata %union.tree_node* %cur_type.0.lcssa39, metadata !4300, metadata !DIExpression()), !dbg !4311
  %name = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 7, !dbg !4401
  %25 = load i8*, i8** %name, align 8, !dbg !4401
  %wanted_type_name = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 1, !dbg !4403
  %26 = load i8*, i8** %wanted_type_name, align 8, !dbg !4403
  tail call fastcc void @format_type_warning(i8* %25, i8* %format_start, i32 %format_length, %union.tree_node* %10, i32 %.lcssa38, i8* %26, %union.tree_node* %1, i32 %4) #8, !dbg !4404
  %.pre = load i32, i32* %pointer_count10, align 4, !dbg !4405
  br label %for.end, !dbg !4407

for.inc:                                          ; preds = %lor.lhs.false111, %if.then117, %if.end93
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4408
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4304, metadata !DIExpression()), !dbg !4311
  br label %for.cond16, !dbg !4409, !llvm.loop !4410

for.end.loopexit:                                 ; preds = %for.cond16, %if.then21
  %i.0.lcssa = phi i32 [ %i.0, %for.cond16 ], [ %i.0, %if.then21 ], !dbg !4340
  %.lcssa = phi i32 [ %11, %for.cond16 ], [ %11, %if.then21 ], !dbg !4341
  %cur_type.1.ph = phi %union.tree_node* [ %13, %if.then21 ], [ %cur_type.0, %for.cond16 ]
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4304, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4304, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4304, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4304, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4304, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4304, metadata !DIExpression()), !dbg !4311
  br label %for.end, !dbg !4405

for.end:                                          ; preds = %for.end.loopexit, %if.else120
  %i.041 = phi i32 [ %i.0.lcssa40, %if.else120 ], [ %i.0.lcssa, %for.end.loopexit ]
  %27 = phi i32 [ %.pre, %if.else120 ], [ %.lcssa, %for.end.loopexit ], !dbg !4405
  %cur_type.1 = phi %union.tree_node* [ %cur_type.0.lcssa39, %if.else120 ], [ %cur_type.1.ph, %for.end.loopexit ], !dbg !4311
  call void @llvm.dbg.value(metadata %union.tree_node* %cur_type.1, metadata !4300, metadata !DIExpression()), !dbg !4311
  %cmp124 = icmp slt i32 %i.041, %27, !dbg !4412
  br i1 %cmp124, label %cleanup, label %if.end126, !dbg !4413

if.end126:                                        ; preds = %for.end
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %cur_type.1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4414
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !4414
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !4300, metadata !DIExpression()), !dbg !4311
  %char_lenient_flag = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 4, !dbg !4415
  %30 = load i32, i32* %char_lenient_flag, align 8, !dbg !4415
  %tobool129 = icmp eq i32 %30, 0, !dbg !4417
  br i1 %tobool129, label %if.end135, label %if.then130, !dbg !4418

if.then130:                                       ; preds = %if.end126
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !4419
  %cmp131 = icmp eq %union.tree_node* %29, %31, !dbg !4420
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !4421
  %cmp133 = icmp eq %union.tree_node* %29, %32, !dbg !4422
  %or.cond6 = or i1 %cmp131, %cmp133, !dbg !4423
  br i1 %or.cond6, label %lor.end, label %lor.rhs, !dbg !4423

lor.rhs:                                          ; preds = %if.then130
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !4424
  %cmp134 = icmp eq %union.tree_node* %29, %33, !dbg !4425
  br label %lor.end, !dbg !4426

lor.end:                                          ; preds = %lor.rhs, %if.then130
  %34 = phi i1 [ true, %if.then130 ], [ %cmp134, %lor.rhs ]
  %lor.ext = zext i1 %34 to i32, !dbg !4426
  call void @llvm.dbg.value(metadata i32 %lor.ext, metadata !4305, metadata !DIExpression()), !dbg !4311
  br label %if.end135, !dbg !4427

if.end135:                                        ; preds = %if.end126, %lor.end
  %char_type_flag.0 = phi i32 [ %lor.ext, %lor.end ], [ 0, %if.end126 ], !dbg !4311
  call void @llvm.dbg.value(metadata i32 %char_type_flag.0, metadata !4305, metadata !DIExpression()), !dbg !4311
  %35 = load i32 (%union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 24), align 8, !dbg !4428
  %call136 = tail call i32 %35(%union.tree_node* %10, %union.tree_node* %29) #6, !dbg !4430
  %tobool137 = icmp eq i32 %call136, 0, !dbg !4430
  br i1 %tobool137, label %if.end139, label %cleanup, !dbg !4431

if.end139:                                        ; preds = %if.end135
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !4432
  %cmp140 = icmp eq %union.tree_node* %10, %36, !dbg !4434
  br i1 %cmp140, label %land.lhs.true141, label %if.end148, !dbg !4435

land.lhs.true141:                                 ; preds = %if.end139
  %37 = load i32, i32* @pedantic, align 4, !dbg !4436
  %tobool142 = icmp eq i32 %37, 0, !dbg !4436
  br i1 %tobool142, label %cleanup, label %lor.lhs.false143, !dbg !4437

lor.lhs.false143:                                 ; preds = %land.lhs.true141
  %cmp144 = icmp eq i32 %i.041, 1, !dbg !4438
  %tobool146 = icmp ne i32 %char_type_flag.0, 0, !dbg !4439
  %or.cond7 = and i1 %cmp144, %tobool146, !dbg !4440
  br i1 %or.cond7, label %cleanup, label %if.end148, !dbg !4440

if.end148:                                        ; preds = %lor.lhs.false143, %if.end139
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4441
  %bf.load150 = load i64, i64* %38, align 8, !dbg !4441
  %bf.cast15212 = and i64 %bf.load150, 65535, !dbg !4443
  %cmp153 = icmp eq i64 %bf.cast15212, 8, !dbg !4443
  br i1 %cmp153, label %land.lhs.true154, label %if.end182, !dbg !4444

land.lhs.true154:                                 ; preds = %if.end148
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4445
  %bf.load156 = load i64, i64* %39, align 8, !dbg !4445
  %bf.cast15819 = and i64 %bf.load156, 65535, !dbg !4446
  %cmp159 = icmp eq i64 %bf.cast15819, 8, !dbg !4446
  br i1 %cmp159, label %land.lhs.true160, label %if.end182, !dbg !4447

land.lhs.true160:                                 ; preds = %land.lhs.true154
  %40 = load i32, i32* @pedantic, align 4, !dbg !4448
  %tobool161 = icmp eq i32 %40, 0, !dbg !4448
  %cmp163 = icmp eq i32 %i.041, 0, !dbg !4449
  %or.cond8 = or i1 %tobool161, %cmp163, !dbg !4450
  br i1 %or.cond8, label %land.lhs.true168, label %lor.lhs.false164, !dbg !4450

lor.lhs.false164:                                 ; preds = %land.lhs.true160
  %cmp165 = icmp eq i32 %i.041, 1, !dbg !4451
  %tobool167 = icmp ne i32 %char_type_flag.0, 0, !dbg !4452
  %or.cond9 = and i1 %cmp165, %tobool167, !dbg !4453
  br i1 %or.cond9, label %land.lhs.true168, label %if.end182, !dbg !4453

land.lhs.true168:                                 ; preds = %lor.lhs.false164, %land.lhs.true160
  %i.043 = phi i32 [ %i.041, %lor.lhs.false164 ], [ %i.041, %land.lhs.true160 ]
  %bf.cast17320 = and i64 %bf.load150, 2097152, !dbg !4454
  %tobool174 = icmp eq i64 %bf.cast17320, 0, !dbg !4454
  br i1 %tobool174, label %cond.false178, label %cond.true175, !dbg !4455

cond.true175:                                     ; preds = %land.lhs.true168
  %call176 = tail call %union.tree_node* @c_common_unsigned_type(%union.tree_node* %29) #6, !dbg !4456
  %cmp177 = icmp eq %union.tree_node* %10, %call176, !dbg !4457
  br i1 %cmp177, label %cleanup, label %if.end182, !dbg !4454

cond.false178:                                    ; preds = %land.lhs.true168
  %call179 = tail call %union.tree_node* @c_common_signed_type(%union.tree_node* %29) #6, !dbg !4458
  %cmp180 = icmp eq %union.tree_node* %10, %call179, !dbg !4459
  br i1 %cmp180, label %cleanup, label %if.end182, !dbg !4455

if.end182:                                        ; preds = %cond.false178, %cond.true175, %lor.lhs.false164, %land.lhs.true154, %if.end148
  %i.042 = phi i32 [ %i.043, %cond.false178 ], [ %i.043, %cond.true175 ], [ %i.041, %lor.lhs.false164 ], [ %i.041, %land.lhs.true154 ], [ %i.041, %if.end148 ]
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !4460
  %cmp183 = icmp eq %union.tree_node* %10, %41, !dbg !4462
  br i1 %cmp183, label %land.lhs.true184, label %if.end191, !dbg !4463

land.lhs.true184:                                 ; preds = %if.end182
  %42 = load i32, i32* @pedantic, align 4, !dbg !4464
  %tobool185 = icmp eq i32 %42, 0, !dbg !4464
  %cmp187 = icmp ult i32 %i.042, 2, !dbg !4465
  %or.cond10 = or i1 %tobool185, %cmp187, !dbg !4466
  %tobool189 = icmp ne i32 %char_type_flag.0, 0, !dbg !4467
  %or.cond11 = and i1 %or.cond10, %tobool189, !dbg !4466
  br i1 %or.cond11, label %cleanup, label %if.end191, !dbg !4466

if.end191:                                        ; preds = %land.lhs.true184, %if.end182
  %scalar_identity_flag = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 2, !dbg !4468
  %43 = load i32, i32* %scalar_identity_flag, align 8, !dbg !4468
  %tobool192 = icmp eq i32 %43, 0, !dbg !4470
  br i1 %tobool192, label %if.end249, label %land.lhs.true193, !dbg !4471

land.lhs.true193:                                 ; preds = %if.end191
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4472
  %bf.load195 = load i64, i64* %44, align 8, !dbg !4472
  %bf.load199 = load i64, i64* %38, align 8, !dbg !4473
  %45 = xor i64 %bf.load195, %bf.load199, !dbg !4474
  %46 = and i64 %45, 65535, !dbg !4474
  %cmp202 = icmp eq i64 %46, 0, !dbg !4474
  br i1 %cmp202, label %land.lhs.true239, label %lor.lhs.false203, !dbg !4475

lor.lhs.false203:                                 ; preds = %land.lhs.true193
  %bf.cast20713 = and i64 %bf.load195, 65535, !dbg !4476
  %cmp208 = icmp eq i64 %bf.cast20713, 6, !dbg !4476
  br i1 %cmp208, label %land.lhs.true221, label %lor.lhs.false209, !dbg !4476

lor.lhs.false209:                                 ; preds = %lor.lhs.false203
  %cmp214 = icmp eq i64 %bf.cast20713, 7, !dbg !4476
  br i1 %cmp214, label %land.lhs.true221, label %lor.lhs.false215, !dbg !4476

lor.lhs.false215:                                 ; preds = %lor.lhs.false209
  %cmp220 = icmp eq i64 %bf.cast20713, 8, !dbg !4476
  br i1 %cmp220, label %land.lhs.true221, label %if.end249, !dbg !4477

land.lhs.true221:                                 ; preds = %lor.lhs.false215, %lor.lhs.false209, %lor.lhs.false203
  %bf.cast22516 = and i64 %bf.load199, 65535, !dbg !4478
  %cmp226 = icmp eq i64 %bf.cast22516, 6, !dbg !4478
  br i1 %cmp226, label %land.lhs.true239, label %lor.lhs.false227, !dbg !4478

lor.lhs.false227:                                 ; preds = %land.lhs.true221
  %cmp232 = icmp eq i64 %bf.cast22516, 7, !dbg !4478
  br i1 %cmp232, label %land.lhs.true239, label %lor.lhs.false233, !dbg !4478

lor.lhs.false233:                                 ; preds = %lor.lhs.false227
  %cmp238 = icmp eq i64 %bf.cast22516, 8, !dbg !4478
  br i1 %cmp238, label %land.lhs.true239, label %if.end249, !dbg !4479

land.lhs.true239:                                 ; preds = %lor.lhs.false233, %lor.lhs.false227, %land.lhs.true221, %land.lhs.true193
  %type240 = bitcast %union.tree_node* %29 to %struct.tree_type*, !dbg !4480
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type240, i64 0, i32 6, !dbg !4480
  %bf.load241 = load i32, i32* %precision, align 4, !dbg !4480
  %type243 = bitcast %union.tree_node* %10 to %struct.tree_type*, !dbg !4481
  %precision244 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type243, i64 0, i32 6, !dbg !4481
  %bf.load245 = load i32, i32* %precision244, align 4, !dbg !4481
  %47 = xor i32 %bf.load241, %bf.load245, !dbg !4482
  %48 = and i32 %47, 1023, !dbg !4482
  %cmp247 = icmp eq i32 %48, 0, !dbg !4482
  br i1 %cmp247, label %cleanup, label %if.end249, !dbg !4483

if.end249:                                        ; preds = %if.end191, %land.lhs.true239, %lor.lhs.false233, %lor.lhs.false215
  %name250 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 7, !dbg !4484
  %49 = load i8*, i8** %name250, align 8, !dbg !4484
  %50 = load i32, i32* %pointer_count10, align 4, !dbg !4485
  %wanted_type_name252 = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 1, !dbg !4486
  %51 = load i8*, i8** %wanted_type_name252, align 8, !dbg !4486
  tail call fastcc void @format_type_warning(i8* %49, i8* %format_start, i32 %format_length, %union.tree_node* %10, i32 %50, i8* %51, %union.tree_node* %1, i32 %4) #8, !dbg !4487
  br label %cleanup, !dbg !4488

cleanup:                                          ; preds = %land.lhs.true141, %if.end135, %land.lhs.true239, %land.lhs.true184, %cond.true175, %cond.false178, %lor.lhs.false143, %for.end, %for.body, %if.end249
  %next = getelementptr inbounds %struct.format_wanted_type, %struct.format_wanted_type* %types.addr.0, i64 0, i32 10, !dbg !4489
  %52 = load %struct.format_wanted_type*, %struct.format_wanted_type** %next, align 8, !dbg !4489
  call void @llvm.dbg.value(metadata %struct.format_wanted_type* %52, metadata !4293, metadata !DIExpression()), !dbg !4306
  br label %for.cond, !dbg !4490, !llvm.loop !4491

for.end260:                                       ; preds = %for.cond
  ret void, !dbg !4493
}

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @format_type_warning(i8* %descr, i8* %format_start, i32 %format_length, %union.tree_node* %wanted_type, i32 %pointer_count, i8* %wanted_type_name, %union.tree_node* %arg_type, i32 %arg_num) unnamed_addr #5 !dbg !4494 {
entry:
  call void @llvm.dbg.value(metadata i8* %descr, metadata !4498, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i8* %format_start, metadata !4499, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i32 %format_length, metadata !4500, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata %union.tree_node* %wanted_type, metadata !4501, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i32 %pointer_count, metadata !4502, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i8* %wanted_type_name, metadata !4503, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_type, metadata !4504, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i32 %arg_num, metadata !4505, metadata !DIExpression()), !dbg !4507
  %tobool = icmp eq i8* %wanted_type_name, null, !dbg !4508
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4510

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4511
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4511
  %tobool1 = icmp eq %union.tree_node* %1, null, !dbg !4511
  br i1 %tobool1, label %if.end, label %land.lhs.true2, !dbg !4512

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4512
  %bf.load = load i64, i64* %2, align 8, !dbg !4513
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4514
  %cmp = icmp eq i64 %bf.cast1, 35, !dbg !4514
  br i1 %cmp, label %land.lhs.true5, label %if.end, !dbg !4515

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %name8 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4516
  %3 = load %union.tree_node*, %union.tree_node** %name8, align 8, !dbg !4516
  %tobool9 = icmp eq %union.tree_node* %3, null, !dbg !4516
  br i1 %tobool9, label %if.end, label %land.lhs.true10, !dbg !4517

land.lhs.true10:                                  ; preds = %land.lhs.true5
  %4 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !4518
  %call = tail call i8* %4(%union.tree_node* nonnull %1, i32 2) #6, !dbg !4519
  %call13 = tail call i32 @strcmp(i8* nonnull %wanted_type_name, i8* %call) #6, !dbg !4520
  %tobool14 = icmp eq i32 %call13, 0, !dbg !4520
  br i1 %tobool14, label %if.then, label %if.end, !dbg !4521

if.then:                                          ; preds = %land.lhs.true10
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4522
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4522
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4504, metadata !DIExpression()), !dbg !4507
  br label %if.end, !dbg !4523

if.end:                                           ; preds = %land.lhs.true10, %land.lhs.true5, %land.lhs.true, %entry, %if.then, %land.lhs.true2
  %arg_type.addr.0 = phi %union.tree_node* [ %arg_type, %land.lhs.true10 ], [ %6, %if.then ], [ %arg_type, %land.lhs.true5 ], [ %arg_type, %land.lhs.true2 ], [ %arg_type, %land.lhs.true ], [ %arg_type, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_type.addr.0, metadata !4504, metadata !DIExpression()), !dbg !4507
  %add = add nsw i32 %pointer_count, 2, !dbg !4524
  %conv = sext i32 %add to i64, !dbg !4524
  %7 = alloca i8, i64 %conv, align 16, !dbg !4524
  call void @llvm.dbg.value(metadata i8* %7, metadata !4506, metadata !DIExpression()), !dbg !4507
  %cmp16 = icmp eq i32 %pointer_count, 0, !dbg !4525
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !4527

if.then18:                                        ; preds = %if.end
  store i8 0, i8* %7, align 16, !dbg !4528
  br label %if.end33, !dbg !4529

if.else:                                          ; preds = %if.end
  %8 = load i32, i32* @c_language, align 4, !dbg !4530
  %and = and i32 %8, 2, !dbg !4530
  %cmp19 = icmp eq i32 %and, 0, !dbg !4530
  br i1 %cmp19, label %if.else25, label %if.then21, !dbg !4532

if.then21:                                        ; preds = %if.else
  %conv22 = sext i32 %pointer_count to i64, !dbg !4533
  %call23 = call i8* @memset(i8* nonnull %7, i32 42, i64 %conv22) #6, !dbg !4535
  %arrayidx24 = getelementptr inbounds i8, i8* %7, i64 %conv22, !dbg !4536
  store i8 0, i8* %arrayidx24, align 1, !dbg !4537
  br label %if.end33, !dbg !4538

if.else25:                                        ; preds = %if.else
  store i8 32, i8* %7, align 16, !dbg !4539
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 1, !dbg !4541
  %conv27 = sext i32 %pointer_count to i64, !dbg !4542
  %call28 = call i8* @memset(i8* nonnull %add.ptr, i32 42, i64 %conv27) #6, !dbg !4543
  %add29 = add nsw i32 %pointer_count, 1, !dbg !4544
  %idxprom30 = sext i32 %add29 to i64, !dbg !4545
  %arrayidx31 = getelementptr inbounds i8, i8* %7, i64 %idxprom30, !dbg !4545
  store i8 0, i8* %arrayidx31, align 1, !dbg !4546
  br label %if.end33

if.end33:                                         ; preds = %if.then21, %if.else25, %if.then18
  %tobool36 = icmp ne i8* %descr, null, !dbg !4547
  br i1 %tobool, label %if.else42, label %if.then35, !dbg !4549

if.then35:                                        ; preds = %if.end33
  br i1 %tobool36, label %if.then37, label %if.else39, !dbg !4550

if.then37:                                        ; preds = %if.then35
  %call38 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.73, i64 0, i64 0), i8* nonnull %descr, i8* nonnull %wanted_type_name, i8* nonnull %7, i32 %arg_num, %union.tree_node* %arg_type.addr.0) #6, !dbg !4552
  br label %if.end49, !dbg !4552

if.else39:                                        ; preds = %if.then35
  %call40 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.74, i64 0, i64 0), i32 %format_length, i8* %format_start, i8* nonnull %wanted_type_name, i8* nonnull %7, i32 %arg_num, %union.tree_node* %arg_type.addr.0) #6, !dbg !4554
  br label %if.end49

if.else42:                                        ; preds = %if.end33
  br i1 %tobool36, label %if.then44, label %if.else46, !dbg !4555

if.then44:                                        ; preds = %if.else42
  %call45 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.75, i64 0, i64 0), i8* nonnull %descr, %union.tree_node* %wanted_type, i8* nonnull %7, i32 %arg_num, %union.tree_node* %arg_type.addr.0) #6, !dbg !4557
  br label %if.end49, !dbg !4557

if.else46:                                        ; preds = %if.else42
  %call47 = call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.76, i64 0, i64 0), i32 %format_length, i8* %format_start, %union.tree_node* %wanted_type, i8* nonnull %7, i32 %arg_num, %union.tree_node* %arg_type.addr.0) #6, !dbg !4559
  br label %if.end49

if.end49:                                         ; preds = %if.then44, %if.else46, %if.then37, %if.else39
  ret void, !dbg !4560
}

declare dso_local %union.tree_node* @c_common_unsigned_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_common_signed_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @maybe_get_identifier(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @identifier_global_value(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_length_info_modifier_index(%struct.format_length_info* %fli, i32 %c) unnamed_addr #5 !dbg !4561 {
entry:
  call void @llvm.dbg.value(metadata %struct.format_length_info* %fli, metadata !4565, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 119, metadata !4566, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 0, metadata !4567, metadata !DIExpression()), !dbg !4568
  br label %for.cond, !dbg !4569

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4571
  %fli.addr.0 = phi %struct.format_length_info* [ %fli, %entry ], [ %incdec.ptr, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.format_length_info* %fli.addr.0, metadata !4565, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4567, metadata !DIExpression()), !dbg !4568
  %name = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %fli.addr.0, i64 0, i32 0, !dbg !4572
  %0 = load i8*, i8** %name, align 8, !dbg !4572
  %tobool = icmp eq i8* %0, null, !dbg !4574
  br i1 %tobool, label %for.end, label %for.body, !dbg !4574

for.body:                                         ; preds = %for.cond
  %call = tail call i8* @strchr(i8* nonnull %0, i32 119) #6, !dbg !4575
  %tobool2 = icmp eq i8* %call, null, !dbg !4575
  br i1 %tobool2, label %for.inc, label %cleanup.loopexit, !dbg !4577

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !4578
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4567, metadata !DIExpression()), !dbg !4568
  %incdec.ptr = getelementptr inbounds %struct.format_length_info, %struct.format_length_info* %fli.addr.0, i64 1, !dbg !4579
  call void @llvm.dbg.value(metadata %struct.format_length_info* %incdec.ptr, metadata !4565, metadata !DIExpression()), !dbg !4568
  br label %for.cond, !dbg !4580, !llvm.loop !4581

for.end:                                          ; preds = %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 2389, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !4583
  br label %cleanup, !dbg !4584

cleanup.loopexit:                                 ; preds = %for.body
  %i.0.lcssa3 = phi i32 [ %i.0, %for.body ], !dbg !4571
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !4567, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !4567, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !4567, metadata !DIExpression()), !dbg !4568
  br label %cleanup, !dbg !4585

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  %retval.0 = phi i32 [ 0, %for.end ], [ %i.0.lcssa3, %cleanup.loopexit ], !dbg !4568
  ret i32 %retval.0, !dbg !4585
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_char_info_specifier_index(%struct.format_char_info* %fci, i32 %c) unnamed_addr #5 !dbg !4586 {
entry:
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci, metadata !4590, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.value(metadata i32 %c, metadata !4591, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.value(metadata i32 0, metadata !4592, metadata !DIExpression()), !dbg !4593
  br label %for.cond, !dbg !4594

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4596
  %fci.addr.0 = phi %struct.format_char_info* [ %fci, %entry ], [ %incdec.ptr, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.format_char_info* %fci.addr.0, metadata !4590, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4592, metadata !DIExpression()), !dbg !4593
  %format_chars = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.addr.0, i64 0, i32 0, !dbg !4597
  %0 = load i8*, i8** %format_chars, align 8, !dbg !4597
  %tobool = icmp eq i8* %0, null, !dbg !4599
  br i1 %tobool, label %for.end, label %for.body, !dbg !4599

for.body:                                         ; preds = %for.cond
  %call = tail call i8* @strchr(i8* nonnull %0, i32 %c) #6, !dbg !4600
  %tobool2 = icmp eq i8* %call, null, !dbg !4600
  br i1 %tobool2, label %for.inc, label %cleanup.loopexit, !dbg !4602

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !4603
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4592, metadata !DIExpression()), !dbg !4593
  %incdec.ptr = getelementptr inbounds %struct.format_char_info, %struct.format_char_info* %fci.addr.0, i64 1, !dbg !4604
  call void @llvm.dbg.value(metadata %struct.format_char_info* %incdec.ptr, metadata !4590, metadata !DIExpression()), !dbg !4593
  br label %for.cond, !dbg !4605, !llvm.loop !4606

for.end:                                          ; preds = %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 2370, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !4608
  br label %cleanup, !dbg !4609

cleanup.loopexit:                                 ; preds = %for.body
  %i.0.lcssa3 = phi i32 [ %i.0, %for.body ], !dbg !4596
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !4592, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !4592, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !4592, metadata !DIExpression()), !dbg !4593
  br label %cleanup, !dbg !4610

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  %retval.0 = phi i32 [ 0, %for.end ], [ %i.0.lcssa3, %cleanup.loopexit ], !dbg !4593
  ret i32 %retval.0, !dbg !4610
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1215, !1216, !1217}
!llvm.ident = !{!1218}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "format_types", scope: !2, file: !3, line: 775, type: !1213, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !256, globals: !1027, nameTableKind: None)
!3 = !DIFile(filename: "c-format.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !25, !32, !39, !233, !249}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !6, line: 280, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!9 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !6, line: 1817, baseType: !7, size: 32, elements: !26)
!26 = !{!27, !28, !29, !30, !31}
!27 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!31 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!32 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !6, line: 1805, baseType: !7, size: 32, elements: !33)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!37 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!38 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !6, line: 39, baseType: !7, size: 32, elements: !40)
!40 = !{!41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232}
!41 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!42 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!43 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!44 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!45 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!46 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!47 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!48 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!49 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!50 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!51 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!52 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!53 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!54 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!55 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!56 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!57 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!58 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!59 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!60 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!61 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!62 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!63 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!64 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!65 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!66 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!67 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!68 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!69 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!70 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!71 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!72 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!73 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!74 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!75 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!76 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!77 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!78 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!79 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!80 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!81 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!82 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!83 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!84 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!85 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!86 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!87 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!88 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!89 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!90 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!91 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!92 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!93 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!94 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!95 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!96 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!97 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!98 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!99 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!100 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!101 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!102 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!103 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!104 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!105 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!106 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!107 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!108 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!109 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!110 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!111 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!112 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!113 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!114 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!115 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!116 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!117 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!118 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!119 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!120 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!123 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!124 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!125 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!126 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!127 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!128 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!129 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!130 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!131 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!132 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!133 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!134 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!135 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!136 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!137 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!138 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!139 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!140 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!141 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!142 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!143 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!144 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!145 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!146 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!147 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!148 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!149 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!150 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!151 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!152 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!153 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!154 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!155 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!156 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!157 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!158 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!159 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!160 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!161 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!162 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!163 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!164 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!165 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!166 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!167 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!168 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!169 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!170 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!171 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!172 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!173 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!174 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!175 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!176 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!177 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!178 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!179 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!180 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!181 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!182 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!183 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!184 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!185 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!186 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!187 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!188 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!189 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!190 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!191 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!192 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!193 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!196 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!197 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!198 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!199 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!200 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!201 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!202 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!203 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!204 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!205 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!206 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!207 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!208 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!209 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!210 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!211 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!212 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!213 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!214 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!215 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!216 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!217 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!218 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!219 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!220 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!221 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!222 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!223 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!224 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!225 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!226 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!227 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!228 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!229 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!230 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!231 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!232 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!233 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "format_lengths", file: !234, line: 26, baseType: !7, size: 32, elements: !235)
!234 = !DIFile(filename: "./c-format.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!235 = !{!236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248}
!236 = !DIEnumerator(name: "FMT_LEN_none", value: 0, isUnsigned: true)
!237 = !DIEnumerator(name: "FMT_LEN_hh", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "FMT_LEN_h", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "FMT_LEN_l", value: 3, isUnsigned: true)
!240 = !DIEnumerator(name: "FMT_LEN_ll", value: 4, isUnsigned: true)
!241 = !DIEnumerator(name: "FMT_LEN_L", value: 5, isUnsigned: true)
!242 = !DIEnumerator(name: "FMT_LEN_z", value: 6, isUnsigned: true)
!243 = !DIEnumerator(name: "FMT_LEN_t", value: 7, isUnsigned: true)
!244 = !DIEnumerator(name: "FMT_LEN_j", value: 8, isUnsigned: true)
!245 = !DIEnumerator(name: "FMT_LEN_H", value: 9, isUnsigned: true)
!246 = !DIEnumerator(name: "FMT_LEN_D", value: 10, isUnsigned: true)
!247 = !DIEnumerator(name: "FMT_LEN_DD", value: 11, isUnsigned: true)
!248 = !DIEnumerator(name: "FMT_LEN_MAX", value: 12, isUnsigned: true)
!249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "format_std_version", file: !234, line: 45, baseType: !7, size: 32, elements: !250)
!250 = !{!251, !252, !253, !254, !255}
!251 = !DIEnumerator(name: "STD_C89", value: 0, isUnsigned: true)
!252 = !DIEnumerator(name: "STD_C94", value: 1, isUnsigned: true)
!253 = !DIEnumerator(name: "STD_C9L", value: 2, isUnsigned: true)
!254 = !DIEnumerator(name: "STD_C99", value: 3, isUnsigned: true)
!255 = !DIEnumerator(name: "STD_EXT", value: 4, isUnsigned: true)
!256 = !{!257, !258, !259, !260, !263, !264, !266, !39, !906, !981, !268, !1006, !1008, !1009, !261, !1025, !1026}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!258 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!259 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !267, line: 56, baseType: !268)
!267 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !6, line: 3371, size: 1792, elements: !270)
!270 = !{!271, !304, !310, !323, !330, !337, !342, !351, !357, !370, !382, !420, !428, !456, !464, !465, !470, !479, !485, !490, !494, !498, !527, !576, !582, !589, !596, !622, !647, !664, !676, !698, !716, !888}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !269, file: !6, line: 3372, baseType: !272, size: 64)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !6, line: 360, size: 64, elements: !273)
!273 = !{!274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !272, file: !6, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !272, file: !6, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !272, file: !6, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !272, file: !6, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !272, file: !6, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !272, file: !6, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !272, file: !6, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !272, file: !6, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !272, file: !6, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !272, file: !6, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !272, file: !6, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !272, file: !6, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !272, file: !6, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !272, file: !6, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !272, file: !6, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !272, file: !6, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !272, file: !6, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !272, file: !6, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !272, file: !6, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !272, file: !6, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !272, file: !6, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !272, file: !6, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !272, file: !6, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !272, file: !6, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !272, file: !6, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !272, file: !6, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !272, file: !6, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !272, file: !6, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !272, file: !6, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !272, file: !6, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !269, file: !6, line: 3373, baseType: !305, size: 192)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !6, line: 402, size: 192, elements: !306)
!306 = !{!307, !308, !309}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !305, file: !6, line: 403, baseType: !272, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !305, file: !6, line: 404, baseType: !266, size: 64, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !305, file: !6, line: 405, baseType: !266, size: 64, offset: 128)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !269, file: !6, line: 3374, baseType: !311, size: 320)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !6, line: 1384, size: 320, elements: !312)
!312 = !{!313, !314}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !311, file: !6, line: 1385, baseType: !305, size: 192)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !311, file: !6, line: 1386, baseType: !315, size: 128, offset: 192)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !316, line: 58, baseType: !317)
!316 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 54, size: 128, elements: !318)
!318 = !{!319, !321}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !317, file: !316, line: 56, baseType: !320, size: 64)
!320 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !317, file: !316, line: 57, baseType: !322, size: 64, offset: 64)
!322 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !269, file: !6, line: 3375, baseType: !324, size: 256)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !6, line: 1397, size: 256, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !324, file: !6, line: 1398, baseType: !305, size: 192)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !324, file: !6, line: 1399, baseType: !328, size: 64, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !6, line: 1392, flags: DIFlagFwdDecl)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !269, file: !6, line: 3376, baseType: !331, size: 256)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !6, line: 1408, size: 256, elements: !332)
!332 = !{!333, !334}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !331, file: !6, line: 1409, baseType: !305, size: 192)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !331, file: !6, line: 1410, baseType: !335, size: 64, offset: 192)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !6, line: 1403, flags: DIFlagFwdDecl)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !269, file: !6, line: 3377, baseType: !338, size: 256)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !6, line: 1437, size: 256, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !338, file: !6, line: 1438, baseType: !305, size: 192)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !338, file: !6, line: 1439, baseType: !266, size: 64, offset: 192)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !269, file: !6, line: 3378, baseType: !343, size: 256)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !6, line: 1418, size: 256, elements: !344)
!344 = !{!345, !346, !347}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !343, file: !6, line: 1419, baseType: !305, size: 192)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !343, file: !6, line: 1420, baseType: !259, size: 32, offset: 192)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !343, file: !6, line: 1421, baseType: !348, size: 8, offset: 224)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 8, elements: !349)
!349 = !{!350}
!350 = !DISubrange(count: 1)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !269, file: !6, line: 3379, baseType: !352, size: 320)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !6, line: 1428, size: 320, elements: !353)
!353 = !{!354, !355, !356}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !352, file: !6, line: 1429, baseType: !305, size: 192)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !352, file: !6, line: 1430, baseType: !266, size: 64, offset: 192)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !352, file: !6, line: 1431, baseType: !266, size: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !269, file: !6, line: 3380, baseType: !358, size: 320)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !6, line: 1460, size: 320, elements: !359)
!359 = !{!360, !361}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !358, file: !6, line: 1461, baseType: !305, size: 192)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !358, file: !6, line: 1462, baseType: !362, size: 128, offset: 192)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !363, line: 31, size: 128, elements: !364)
!363 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!364 = !{!365, !368, !369}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !362, file: !363, line: 32, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !258)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !362, file: !363, line: 33, baseType: !7, size: 32, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !362, file: !363, line: 34, baseType: !7, size: 32, offset: 96)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !269, file: !6, line: 3381, baseType: !371, size: 384)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !6, line: 2507, size: 384, elements: !372)
!372 = !{!373, !374, !379, !380, !381}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !371, file: !6, line: 2508, baseType: !305, size: 192)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !371, file: !6, line: 2509, baseType: !375, size: 32, offset: 192)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !376, line: 58, baseType: !377)
!376 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !378, line: 44, baseType: !7)
!378 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !371, file: !6, line: 2510, baseType: !7, size: 32, offset: 224)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !6, line: 2511, baseType: !266, size: 64, offset: 256)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !371, file: !6, line: 2512, baseType: !266, size: 64, offset: 320)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !269, file: !6, line: 3382, baseType: !383, size: 896)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !6, line: 2652, size: 896, elements: !384)
!384 = !{!385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !383, file: !6, line: 2653, baseType: !371, size: 384)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !383, file: !6, line: 2654, baseType: !266, size: 64, offset: 384)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !383, file: !6, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !383, file: !6, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !383, file: !6, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !383, file: !6, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !383, file: !6, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !383, file: !6, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !383, file: !6, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !383, file: !6, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !383, file: !6, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !383, file: !6, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !383, file: !6, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !383, file: !6, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !383, file: !6, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !383, file: !6, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !383, file: !6, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !383, file: !6, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !383, file: !6, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !383, file: !6, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !383, file: !6, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !383, file: !6, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !383, file: !6, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !383, file: !6, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !383, file: !6, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !383, file: !6, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !383, file: !6, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !383, file: !6, line: 2703, baseType: !7, size: 32, offset: 512)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !383, file: !6, line: 2705, baseType: !266, size: 64, offset: 576)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !383, file: !6, line: 2706, baseType: !266, size: 64, offset: 640)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !383, file: !6, line: 2707, baseType: !266, size: 64, offset: 704)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !383, file: !6, line: 2708, baseType: !266, size: 64, offset: 768)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !383, file: !6, line: 2711, baseType: !418, size: 64, offset: 832)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!419 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !6, line: 2711, flags: DIFlagFwdDecl)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !269, file: !6, line: 3383, baseType: !421, size: 960)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !6, line: 2756, size: 960, elements: !422)
!422 = !{!423, !424}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !421, file: !6, line: 2757, baseType: !383, size: 896)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !421, file: !6, line: 2758, baseType: !425, size: 64, offset: 896)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !267, line: 50, baseType: !426)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !267, line: 49, flags: DIFlagFwdDecl)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !269, file: !6, line: 3384, baseType: !429, size: 1472)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !6, line: 3114, size: 1472, elements: !430)
!430 = !{!431, !452, !453, !454, !455}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !429, file: !6, line: 3115, baseType: !432, size: 1216)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !6, line: 2984, size: 1216, elements: !433)
!433 = !{!434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !432, file: !6, line: 2985, baseType: !421, size: 960)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !432, file: !6, line: 2986, baseType: !266, size: 64, offset: 960)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !432, file: !6, line: 2987, baseType: !266, size: 64, offset: 1024)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !432, file: !6, line: 2988, baseType: !266, size: 64, offset: 1088)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !432, file: !6, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !432, file: !6, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !432, file: !6, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !432, file: !6, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !432, file: !6, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !432, file: !6, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !432, file: !6, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !432, file: !6, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !432, file: !6, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !432, file: !6, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !432, file: !6, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !432, file: !6, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !432, file: !6, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !432, file: !6, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !429, file: !6, line: 3117, baseType: !266, size: 64, offset: 1216)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !429, file: !6, line: 3119, baseType: !266, size: 64, offset: 1280)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !429, file: !6, line: 3121, baseType: !266, size: 64, offset: 1344)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !429, file: !6, line: 3123, baseType: !266, size: 64, offset: 1408)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !269, file: !6, line: 3385, baseType: !457, size: 1088)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !6, line: 2874, size: 1088, elements: !458)
!458 = !{!459, !460, !461}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !457, file: !6, line: 2875, baseType: !421, size: 960)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !457, file: !6, line: 2876, baseType: !425, size: 64, offset: 960)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !457, file: !6, line: 2877, baseType: !462, size: 64, offset: 1024)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !6, line: 2856, flags: DIFlagFwdDecl)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !269, file: !6, line: 3386, baseType: !432, size: 1216)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !269, file: !6, line: 3387, baseType: !466, size: 1280)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !6, line: 3093, size: 1280, elements: !467)
!467 = !{!468, !469}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !466, file: !6, line: 3094, baseType: !432, size: 1216)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !466, file: !6, line: 3095, baseType: !462, size: 64, offset: 1216)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !269, file: !6, line: 3388, baseType: !471, size: 1216)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !6, line: 2824, size: 1216, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !471, file: !6, line: 2825, baseType: !383, size: 896)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !471, file: !6, line: 2827, baseType: !266, size: 64, offset: 896)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !471, file: !6, line: 2828, baseType: !266, size: 64, offset: 960)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !471, file: !6, line: 2829, baseType: !266, size: 64, offset: 1024)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !471, file: !6, line: 2830, baseType: !266, size: 64, offset: 1088)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !471, file: !6, line: 2831, baseType: !266, size: 64, offset: 1152)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !269, file: !6, line: 3389, baseType: !480, size: 1024)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !6, line: 2850, size: 1024, elements: !481)
!481 = !{!482, !483, !484}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !480, file: !6, line: 2851, baseType: !421, size: 960)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !480, file: !6, line: 2852, baseType: !259, size: 32, offset: 960)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !480, file: !6, line: 2853, baseType: !259, size: 32, offset: 992)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !269, file: !6, line: 3390, baseType: !486, size: 1024)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !6, line: 2857, size: 1024, elements: !487)
!487 = !{!488, !489}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !486, file: !6, line: 2858, baseType: !421, size: 960)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !486, file: !6, line: 2859, baseType: !462, size: 64, offset: 960)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !269, file: !6, line: 3391, baseType: !491, size: 960)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !6, line: 2862, size: 960, elements: !492)
!492 = !{!493}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !491, file: !6, line: 2863, baseType: !421, size: 960)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !269, file: !6, line: 3392, baseType: !495, size: 1472)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !6, line: 3304, size: 1472, elements: !496)
!496 = !{!497}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !495, file: !6, line: 3305, baseType: !429, size: 1472)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !269, file: !6, line: 3393, baseType: !499, size: 1792)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !6, line: 3248, size: 1792, elements: !500)
!500 = !{!501, !502, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !499, file: !6, line: 3249, baseType: !429, size: 1472)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !499, file: !6, line: 3251, baseType: !503, size: 64, offset: 1472)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !505, line: 41, flags: DIFlagFwdDecl)
!505 = !DIFile(filename: "./statistics.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!506 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !499, file: !6, line: 3254, baseType: !266, size: 64, offset: 1536)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !499, file: !6, line: 3257, baseType: !266, size: 64, offset: 1600)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !499, file: !6, line: 3258, baseType: !266, size: 64, offset: 1664)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !499, file: !6, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !499, file: !6, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !499, file: !6, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !499, file: !6, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !499, file: !6, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !499, file: !6, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !499, file: !6, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !499, file: !6, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !499, file: !6, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !499, file: !6, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !499, file: !6, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !499, file: !6, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !499, file: !6, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !499, file: !6, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !499, file: !6, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !499, file: !6, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !499, file: !6, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !499, file: !6, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !269, file: !6, line: 3394, baseType: !528, size: 1344)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !6, line: 2279, size: 1344, elements: !529)
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !555, !556, !557, !565, !566, !567, !568, !569, !570, !571, !572, !573}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !528, file: !6, line: 2280, baseType: !305, size: 192)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !528, file: !6, line: 2281, baseType: !266, size: 64, offset: 192)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !528, file: !6, line: 2282, baseType: !266, size: 64, offset: 256)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !528, file: !6, line: 2283, baseType: !266, size: 64, offset: 320)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !528, file: !6, line: 2284, baseType: !266, size: 64, offset: 384)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !528, file: !6, line: 2285, baseType: !7, size: 32, offset: 448)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !528, file: !6, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !528, file: !6, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !528, file: !6, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !528, file: !6, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !528, file: !6, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !528, file: !6, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !528, file: !6, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !528, file: !6, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !528, file: !6, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !528, file: !6, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !528, file: !6, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !528, file: !6, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !528, file: !6, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !528, file: !6, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !528, file: !6, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !528, file: !6, line: 2305, baseType: !7, size: 32, offset: 512)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !528, file: !6, line: 2306, baseType: !553, size: 32, offset: 544)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !554, line: 31, baseType: !259)
!554 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!555 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !528, file: !6, line: 2307, baseType: !266, size: 64, offset: 576)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !528, file: !6, line: 2308, baseType: !266, size: 64, offset: 640)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !528, file: !6, line: 2314, baseType: !558, size: 64, offset: 704)
!558 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !6, line: 2309, size: 64, elements: !559)
!559 = !{!560, !561, !562}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !558, file: !6, line: 2310, baseType: !259, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !558, file: !6, line: 2311, baseType: !264, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !558, file: !6, line: 2312, baseType: !563, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !6, line: 2277, flags: DIFlagFwdDecl)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !528, file: !6, line: 2315, baseType: !266, size: 64, offset: 768)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !528, file: !6, line: 2316, baseType: !266, size: 64, offset: 832)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !528, file: !6, line: 2317, baseType: !266, size: 64, offset: 896)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !528, file: !6, line: 2318, baseType: !266, size: 64, offset: 960)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !528, file: !6, line: 2319, baseType: !266, size: 64, offset: 1024)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !528, file: !6, line: 2320, baseType: !266, size: 64, offset: 1088)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !528, file: !6, line: 2321, baseType: !266, size: 64, offset: 1152)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !528, file: !6, line: 2322, baseType: !266, size: 64, offset: 1216)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !528, file: !6, line: 2324, baseType: !574, size: 64, offset: 1280)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !6, line: 2324, flags: DIFlagFwdDecl)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !269, file: !6, line: 3395, baseType: !577, size: 320)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !6, line: 1469, size: 320, elements: !578)
!578 = !{!579, !580, !581}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !577, file: !6, line: 1470, baseType: !305, size: 192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !577, file: !6, line: 1471, baseType: !266, size: 64, offset: 192)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !577, file: !6, line: 1472, baseType: !266, size: 64, offset: 256)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !269, file: !6, line: 3396, baseType: !583, size: 320)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !6, line: 1482, size: 320, elements: !584)
!584 = !{!585, !586, !587}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !583, file: !6, line: 1483, baseType: !305, size: 192)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !583, file: !6, line: 1484, baseType: !259, size: 32, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !583, file: !6, line: 1485, baseType: !588, size: 64, offset: 256)
!588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 64, elements: !349)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !269, file: !6, line: 3397, baseType: !590, size: 384)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !6, line: 1829, size: 384, elements: !591)
!591 = !{!592, !593, !594, !595}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !590, file: !6, line: 1830, baseType: !305, size: 192)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !590, file: !6, line: 1831, baseType: !375, size: 32, offset: 192)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !590, file: !6, line: 1832, baseType: !266, size: 64, offset: 256)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !590, file: !6, line: 1835, baseType: !588, size: 64, offset: 320)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !269, file: !6, line: 3398, baseType: !597, size: 704)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !6, line: 1898, size: 704, elements: !598)
!598 = !{!599, !600, !601, !605, !606, !609}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !597, file: !6, line: 1899, baseType: !305, size: 192)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !597, file: !6, line: 1902, baseType: !266, size: 64, offset: 192)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !597, file: !6, line: 1905, baseType: !602, size: 64, offset: 256)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !267, line: 58, baseType: !603)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !267, line: 57, flags: DIFlagFwdDecl)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !597, file: !6, line: 1908, baseType: !7, size: 32, offset: 320)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !597, file: !6, line: 1911, baseType: !607, size: 64, offset: 384)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !6, line: 1876, flags: DIFlagFwdDecl)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !597, file: !6, line: 1914, baseType: !610, size: 256, offset: 448)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !6, line: 1883, size: 256, elements: !611)
!611 = !{!612, !614, !615, !620}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !610, file: !6, line: 1884, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !610, file: !6, line: 1885, baseType: !613, size: 64, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !610, file: !6, line: 1891, baseType: !616, size: 64, offset: 128)
!616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !610, file: !6, line: 1891, size: 64, elements: !617)
!617 = !{!618, !619}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !616, file: !6, line: 1891, baseType: !602, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !616, file: !6, line: 1891, baseType: !266, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !610, file: !6, line: 1892, baseType: !621, size: 64, offset: 192)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !269, file: !6, line: 3399, baseType: !623, size: 704)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !6, line: 2008, size: 704, elements: !624)
!624 = !{!625, !626, !627, !628, !629, !630, !642, !643, !644, !645, !646}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !623, file: !6, line: 2009, baseType: !305, size: 192)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !623, file: !6, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !623, file: !6, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !623, file: !6, line: 2014, baseType: !375, size: 32, offset: 224)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !623, file: !6, line: 2016, baseType: !266, size: 64, offset: 256)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !623, file: !6, line: 2017, baseType: !631, size: 64, offset: 320)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !6, line: 183, baseType: !633)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !6, line: 183, size: 128, elements: !634)
!634 = !{!635}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !633, file: !6, line: 183, baseType: !636, size: 128)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !6, line: 182, baseType: !637)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !6, line: 182, size: 128, elements: !638)
!638 = !{!639, !640, !641}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !637, file: !6, line: 182, baseType: !7, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !637, file: !6, line: 182, baseType: !7, size: 32, offset: 32)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !637, file: !6, line: 182, baseType: !588, size: 64, offset: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !623, file: !6, line: 2019, baseType: !266, size: 64, offset: 384)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !623, file: !6, line: 2020, baseType: !266, size: 64, offset: 448)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !623, file: !6, line: 2021, baseType: !266, size: 64, offset: 512)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !623, file: !6, line: 2022, baseType: !266, size: 64, offset: 576)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !623, file: !6, line: 2023, baseType: !266, size: 64, offset: 640)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !269, file: !6, line: 3400, baseType: !648, size: 832)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !6, line: 2430, size: 832, elements: !649)
!649 = !{!650, !651, !652, !653, !654, !655, !656, !657, !658, !659}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !648, file: !6, line: 2431, baseType: !305, size: 192)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !648, file: !6, line: 2433, baseType: !266, size: 64, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !648, file: !6, line: 2434, baseType: !266, size: 64, offset: 256)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !648, file: !6, line: 2435, baseType: !266, size: 64, offset: 320)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !648, file: !6, line: 2436, baseType: !266, size: 64, offset: 384)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !648, file: !6, line: 2437, baseType: !631, size: 64, offset: 448)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !648, file: !6, line: 2438, baseType: !266, size: 64, offset: 512)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !648, file: !6, line: 2440, baseType: !266, size: 64, offset: 576)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !648, file: !6, line: 2441, baseType: !266, size: 64, offset: 640)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !648, file: !6, line: 2443, baseType: !660, size: 128, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !6, line: 182, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !6, line: 182, size: 128, elements: !662)
!662 = !{!663}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !661, file: !6, line: 182, baseType: !636, size: 128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !269, file: !6, line: 3401, baseType: !665, size: 320)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !6, line: 3327, size: 320, elements: !666)
!666 = !{!667, !668, !675}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !665, file: !6, line: 3329, baseType: !305, size: 192)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !665, file: !6, line: 3330, baseType: !669, size: 64, offset: 192)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !6, line: 3320, size: 192, elements: !671)
!671 = !{!672, !673, !674}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !670, file: !6, line: 3322, baseType: !669, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !670, file: !6, line: 3323, baseType: !669, size: 64, offset: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !670, file: !6, line: 3324, baseType: !266, size: 64, offset: 128)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !665, file: !6, line: 3331, baseType: !669, size: 64, offset: 256)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !269, file: !6, line: 3402, baseType: !677, size: 256)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !6, line: 1540, size: 256, elements: !678)
!678 = !{!679, !680}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !677, file: !6, line: 1541, baseType: !305, size: 192)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !677, file: !6, line: 1542, baseType: !681, size: 64, offset: 192)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !6, line: 1538, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !6, line: 1538, size: 192, elements: !684)
!684 = !{!685}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !683, file: !6, line: 1538, baseType: !686, size: 192)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !6, line: 1537, baseType: !687)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !6, line: 1537, size: 192, elements: !688)
!688 = !{!689, !690, !691}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !687, file: !6, line: 1537, baseType: !7, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !687, file: !6, line: 1537, baseType: !7, size: 32, offset: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !687, file: !6, line: 1537, baseType: !692, size: 128, offset: 64)
!692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !693, size: 128, elements: !349)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !6, line: 1535, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !6, line: 1532, size: 128, elements: !695)
!695 = !{!696, !697}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !694, file: !6, line: 1533, baseType: !266, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !694, file: !6, line: 1534, baseType: !266, size: 64, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !269, file: !6, line: 3403, baseType: !699, size: 512)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !6, line: 1938, size: 512, elements: !700)
!700 = !{!701, !702, !703, !704, !710, !714, !715}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !699, file: !6, line: 1939, baseType: !305, size: 192)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !699, file: !6, line: 1940, baseType: !375, size: 32, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !699, file: !6, line: 1941, baseType: !5, size: 32, offset: 224)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !699, file: !6, line: 1946, baseType: !705, size: 32, offset: 256)
!705 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !6, line: 1942, size: 32, elements: !706)
!706 = !{!707, !708, !709}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !705, file: !6, line: 1943, baseType: !25, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !705, file: !6, line: 1944, baseType: !32, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !705, file: !6, line: 1945, baseType: !39, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !699, file: !6, line: 1950, baseType: !711, size: 64, offset: 320)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !267, line: 66, baseType: !712)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !267, line: 65, flags: DIFlagFwdDecl)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !699, file: !6, line: 1951, baseType: !711, size: 64, offset: 384)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !699, file: !6, line: 1953, baseType: !588, size: 64, offset: 448)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !269, file: !6, line: 3404, baseType: !717, size: 1664)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !6, line: 3337, size: 1664, elements: !718)
!718 = !{!719, !720}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !717, file: !6, line: 3338, baseType: !305, size: 192)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !717, file: !6, line: 3341, baseType: !721, size: 1472, offset: 192)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !722, line: 410, size: 1472, elements: !723)
!722 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !721, file: !722, line: 412, baseType: !259, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !721, file: !722, line: 413, baseType: !259, size: 32, offset: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !721, file: !722, line: 414, baseType: !259, size: 32, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !721, file: !722, line: 415, baseType: !259, size: 32, offset: 96)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !721, file: !722, line: 416, baseType: !259, size: 32, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !721, file: !722, line: 417, baseType: !259, size: 32, offset: 160)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !721, file: !722, line: 418, baseType: !258, size: 8, offset: 192)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !721, file: !722, line: 419, baseType: !258, size: 8, offset: 200)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !721, file: !722, line: 420, baseType: !733, size: 8, offset: 208)
!733 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !721, file: !722, line: 421, baseType: !733, size: 8, offset: 216)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !721, file: !722, line: 422, baseType: !733, size: 8, offset: 224)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !721, file: !722, line: 423, baseType: !733, size: 8, offset: 232)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !721, file: !722, line: 424, baseType: !733, size: 8, offset: 240)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !721, file: !722, line: 425, baseType: !733, size: 8, offset: 248)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !721, file: !722, line: 426, baseType: !733, size: 8, offset: 256)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !721, file: !722, line: 427, baseType: !733, size: 8, offset: 264)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !721, file: !722, line: 428, baseType: !733, size: 8, offset: 272)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !721, file: !722, line: 429, baseType: !733, size: 8, offset: 280)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !721, file: !722, line: 430, baseType: !733, size: 8, offset: 288)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !721, file: !722, line: 431, baseType: !733, size: 8, offset: 296)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !721, file: !722, line: 432, baseType: !733, size: 8, offset: 304)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !721, file: !722, line: 433, baseType: !733, size: 8, offset: 312)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !721, file: !722, line: 434, baseType: !733, size: 8, offset: 320)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !721, file: !722, line: 435, baseType: !733, size: 8, offset: 328)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !721, file: !722, line: 436, baseType: !733, size: 8, offset: 336)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !721, file: !722, line: 437, baseType: !733, size: 8, offset: 344)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !721, file: !722, line: 438, baseType: !733, size: 8, offset: 352)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !721, file: !722, line: 439, baseType: !733, size: 8, offset: 360)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !721, file: !722, line: 440, baseType: !733, size: 8, offset: 368)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !721, file: !722, line: 441, baseType: !733, size: 8, offset: 376)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !721, file: !722, line: 442, baseType: !733, size: 8, offset: 384)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !721, file: !722, line: 443, baseType: !733, size: 8, offset: 392)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !721, file: !722, line: 444, baseType: !733, size: 8, offset: 400)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !721, file: !722, line: 445, baseType: !733, size: 8, offset: 408)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !721, file: !722, line: 446, baseType: !733, size: 8, offset: 416)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !721, file: !722, line: 447, baseType: !733, size: 8, offset: 424)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !721, file: !722, line: 448, baseType: !733, size: 8, offset: 432)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !721, file: !722, line: 449, baseType: !733, size: 8, offset: 440)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !721, file: !722, line: 450, baseType: !733, size: 8, offset: 448)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !721, file: !722, line: 451, baseType: !733, size: 8, offset: 456)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !721, file: !722, line: 452, baseType: !733, size: 8, offset: 464)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !721, file: !722, line: 453, baseType: !733, size: 8, offset: 472)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !721, file: !722, line: 454, baseType: !733, size: 8, offset: 480)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !721, file: !722, line: 455, baseType: !733, size: 8, offset: 488)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !721, file: !722, line: 456, baseType: !733, size: 8, offset: 496)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !721, file: !722, line: 457, baseType: !733, size: 8, offset: 504)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !721, file: !722, line: 458, baseType: !733, size: 8, offset: 512)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !721, file: !722, line: 459, baseType: !733, size: 8, offset: 520)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !721, file: !722, line: 460, baseType: !733, size: 8, offset: 528)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !721, file: !722, line: 461, baseType: !733, size: 8, offset: 536)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !721, file: !722, line: 462, baseType: !733, size: 8, offset: 544)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !721, file: !722, line: 463, baseType: !733, size: 8, offset: 552)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !721, file: !722, line: 464, baseType: !733, size: 8, offset: 560)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !721, file: !722, line: 465, baseType: !733, size: 8, offset: 568)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !721, file: !722, line: 466, baseType: !733, size: 8, offset: 576)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !721, file: !722, line: 467, baseType: !733, size: 8, offset: 584)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !721, file: !722, line: 468, baseType: !733, size: 8, offset: 592)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !721, file: !722, line: 469, baseType: !733, size: 8, offset: 600)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !721, file: !722, line: 470, baseType: !733, size: 8, offset: 608)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !721, file: !722, line: 471, baseType: !733, size: 8, offset: 616)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !721, file: !722, line: 472, baseType: !733, size: 8, offset: 624)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !721, file: !722, line: 473, baseType: !733, size: 8, offset: 632)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !721, file: !722, line: 474, baseType: !733, size: 8, offset: 640)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !721, file: !722, line: 475, baseType: !733, size: 8, offset: 648)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !721, file: !722, line: 476, baseType: !733, size: 8, offset: 656)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !721, file: !722, line: 477, baseType: !733, size: 8, offset: 664)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !721, file: !722, line: 478, baseType: !733, size: 8, offset: 672)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !721, file: !722, line: 479, baseType: !733, size: 8, offset: 680)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !721, file: !722, line: 480, baseType: !733, size: 8, offset: 688)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !721, file: !722, line: 481, baseType: !733, size: 8, offset: 696)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !721, file: !722, line: 482, baseType: !733, size: 8, offset: 704)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !721, file: !722, line: 483, baseType: !733, size: 8, offset: 712)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !721, file: !722, line: 484, baseType: !733, size: 8, offset: 720)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !721, file: !722, line: 485, baseType: !733, size: 8, offset: 728)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !721, file: !722, line: 486, baseType: !733, size: 8, offset: 736)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !721, file: !722, line: 487, baseType: !733, size: 8, offset: 744)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !721, file: !722, line: 488, baseType: !733, size: 8, offset: 752)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !721, file: !722, line: 489, baseType: !733, size: 8, offset: 760)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !721, file: !722, line: 490, baseType: !733, size: 8, offset: 768)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !721, file: !722, line: 491, baseType: !733, size: 8, offset: 776)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !721, file: !722, line: 492, baseType: !733, size: 8, offset: 784)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !721, file: !722, line: 493, baseType: !733, size: 8, offset: 792)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !721, file: !722, line: 494, baseType: !733, size: 8, offset: 800)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !721, file: !722, line: 495, baseType: !733, size: 8, offset: 808)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !721, file: !722, line: 496, baseType: !733, size: 8, offset: 816)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !721, file: !722, line: 497, baseType: !733, size: 8, offset: 824)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !721, file: !722, line: 498, baseType: !733, size: 8, offset: 832)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !721, file: !722, line: 499, baseType: !733, size: 8, offset: 840)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !721, file: !722, line: 500, baseType: !733, size: 8, offset: 848)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !721, file: !722, line: 501, baseType: !733, size: 8, offset: 856)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !721, file: !722, line: 502, baseType: !733, size: 8, offset: 864)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !721, file: !722, line: 503, baseType: !733, size: 8, offset: 872)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !721, file: !722, line: 504, baseType: !733, size: 8, offset: 880)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !721, file: !722, line: 505, baseType: !733, size: 8, offset: 888)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !721, file: !722, line: 506, baseType: !733, size: 8, offset: 896)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !721, file: !722, line: 507, baseType: !733, size: 8, offset: 904)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !721, file: !722, line: 508, baseType: !733, size: 8, offset: 912)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !721, file: !722, line: 509, baseType: !733, size: 8, offset: 920)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !721, file: !722, line: 510, baseType: !733, size: 8, offset: 928)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !721, file: !722, line: 511, baseType: !733, size: 8, offset: 936)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !721, file: !722, line: 512, baseType: !733, size: 8, offset: 944)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !721, file: !722, line: 513, baseType: !733, size: 8, offset: 952)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !721, file: !722, line: 514, baseType: !733, size: 8, offset: 960)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !721, file: !722, line: 515, baseType: !733, size: 8, offset: 968)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !721, file: !722, line: 516, baseType: !733, size: 8, offset: 976)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !721, file: !722, line: 517, baseType: !733, size: 8, offset: 984)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !721, file: !722, line: 518, baseType: !733, size: 8, offset: 992)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !721, file: !722, line: 519, baseType: !733, size: 8, offset: 1000)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !721, file: !722, line: 520, baseType: !733, size: 8, offset: 1008)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !721, file: !722, line: 521, baseType: !733, size: 8, offset: 1016)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !721, file: !722, line: 522, baseType: !733, size: 8, offset: 1024)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !721, file: !722, line: 523, baseType: !733, size: 8, offset: 1032)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !721, file: !722, line: 524, baseType: !733, size: 8, offset: 1040)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !721, file: !722, line: 525, baseType: !733, size: 8, offset: 1048)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !721, file: !722, line: 526, baseType: !733, size: 8, offset: 1056)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !721, file: !722, line: 527, baseType: !733, size: 8, offset: 1064)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !721, file: !722, line: 528, baseType: !733, size: 8, offset: 1072)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !721, file: !722, line: 529, baseType: !733, size: 8, offset: 1080)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !721, file: !722, line: 530, baseType: !733, size: 8, offset: 1088)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !721, file: !722, line: 531, baseType: !733, size: 8, offset: 1096)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !721, file: !722, line: 532, baseType: !733, size: 8, offset: 1104)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !721, file: !722, line: 533, baseType: !733, size: 8, offset: 1112)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !721, file: !722, line: 534, baseType: !733, size: 8, offset: 1120)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !721, file: !722, line: 535, baseType: !733, size: 8, offset: 1128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !721, file: !722, line: 536, baseType: !733, size: 8, offset: 1136)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !721, file: !722, line: 537, baseType: !733, size: 8, offset: 1144)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !721, file: !722, line: 538, baseType: !733, size: 8, offset: 1152)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !721, file: !722, line: 539, baseType: !733, size: 8, offset: 1160)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !721, file: !722, line: 540, baseType: !733, size: 8, offset: 1168)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !721, file: !722, line: 541, baseType: !733, size: 8, offset: 1176)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !721, file: !722, line: 542, baseType: !733, size: 8, offset: 1184)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !721, file: !722, line: 543, baseType: !733, size: 8, offset: 1192)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !721, file: !722, line: 544, baseType: !733, size: 8, offset: 1200)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !721, file: !722, line: 545, baseType: !733, size: 8, offset: 1208)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !721, file: !722, line: 546, baseType: !733, size: 8, offset: 1216)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !721, file: !722, line: 547, baseType: !733, size: 8, offset: 1224)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !721, file: !722, line: 548, baseType: !733, size: 8, offset: 1232)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !721, file: !722, line: 549, baseType: !733, size: 8, offset: 1240)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !721, file: !722, line: 550, baseType: !733, size: 8, offset: 1248)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !721, file: !722, line: 551, baseType: !733, size: 8, offset: 1256)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !721, file: !722, line: 552, baseType: !733, size: 8, offset: 1264)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !721, file: !722, line: 553, baseType: !733, size: 8, offset: 1272)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !721, file: !722, line: 554, baseType: !733, size: 8, offset: 1280)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !721, file: !722, line: 555, baseType: !733, size: 8, offset: 1288)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !721, file: !722, line: 556, baseType: !733, size: 8, offset: 1296)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !721, file: !722, line: 557, baseType: !733, size: 8, offset: 1304)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !721, file: !722, line: 558, baseType: !733, size: 8, offset: 1312)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !721, file: !722, line: 559, baseType: !733, size: 8, offset: 1320)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !721, file: !722, line: 560, baseType: !733, size: 8, offset: 1328)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !721, file: !722, line: 561, baseType: !733, size: 8, offset: 1336)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !721, file: !722, line: 562, baseType: !733, size: 8, offset: 1344)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !721, file: !722, line: 563, baseType: !733, size: 8, offset: 1352)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !721, file: !722, line: 564, baseType: !733, size: 8, offset: 1360)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !721, file: !722, line: 565, baseType: !733, size: 8, offset: 1368)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !721, file: !722, line: 566, baseType: !733, size: 8, offset: 1376)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !721, file: !722, line: 567, baseType: !733, size: 8, offset: 1384)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !721, file: !722, line: 568, baseType: !733, size: 8, offset: 1392)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !721, file: !722, line: 569, baseType: !733, size: 8, offset: 1400)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !721, file: !722, line: 570, baseType: !733, size: 8, offset: 1408)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !721, file: !722, line: 571, baseType: !733, size: 8, offset: 1416)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !721, file: !722, line: 572, baseType: !733, size: 8, offset: 1424)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !721, file: !722, line: 573, baseType: !733, size: 8, offset: 1432)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !721, file: !722, line: 574, baseType: !733, size: 8, offset: 1440)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !269, file: !6, line: 3405, baseType: !889, size: 384)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !6, line: 3352, size: 384, elements: !890)
!890 = !{!891, !892}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !889, file: !6, line: 3353, baseType: !305, size: 192)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !889, file: !6, line: 3356, baseType: !893, size: 192, offset: 192)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !722, line: 578, size: 192, elements: !894)
!894 = !{!895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !893, file: !722, line: 580, baseType: !259, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !893, file: !722, line: 581, baseType: !259, size: 32, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !893, file: !722, line: 582, baseType: !259, size: 32, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !893, file: !722, line: 583, baseType: !259, size: 32, offset: 96)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !893, file: !722, line: 584, baseType: !258, size: 8, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !893, file: !722, line: 585, baseType: !258, size: 8, offset: 136)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !893, file: !722, line: 586, baseType: !258, size: 8, offset: 144)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !893, file: !722, line: 587, baseType: !258, size: 8, offset: 152)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !893, file: !722, line: 588, baseType: !258, size: 8, offset: 160)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !893, file: !722, line: 589, baseType: !258, size: 8, offset: 168)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !893, file: !722, line: 590, baseType: !258, size: 8, offset: 176)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "format_kind_info", file: !234, line: 252, baseType: !908)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !234, line: 209, size: 832, elements: !909)
!909 = !{!910, !911, !924, !948, !949, !950, !962, !972, !973, !974, !975, !976, !977, !978, !979, !980}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !908, file: !234, line: 213, baseType: !264, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "length_char_specs", scope: !908, file: !234, line: 215, baseType: !912, size: 64, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "format_length_info", file: !234, line: 103, baseType: !915)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !234, line: 85, size: 320, elements: !916)
!916 = !{!917, !918, !919, !920, !921, !922, !923}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !915, file: !234, line: 90, baseType: !264, size: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !915, file: !234, line: 92, baseType: !233, size: 32, offset: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "std", scope: !915, file: !234, line: 94, baseType: !249, size: 32, offset: 96)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "double_name", scope: !915, file: !234, line: 96, baseType: !264, size: 64, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "double_index", scope: !915, file: !234, line: 97, baseType: !233, size: 32, offset: 192)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "double_std", scope: !915, file: !234, line: 98, baseType: !249, size: 32, offset: 224)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "scalar_identity_flag", scope: !915, file: !234, line: 102, baseType: !259, size: 32, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "conversion_specs", scope: !908, file: !234, line: 217, baseType: !925, size: 64, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "format_char_info", file: !234, line: 159, baseType: !928)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "format_char_info", file: !234, line: 130, size: 2624, elements: !929)
!929 = !{!930, !931, !932, !933, !943, !944, !945}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "format_chars", scope: !928, file: !234, line: 132, baseType: !264, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_count", scope: !928, file: !234, line: 133, baseType: !259, size: 32, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "std", scope: !928, file: !234, line: 134, baseType: !249, size: 32, offset: 96)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !928, file: !234, line: 136, baseType: !934, size: 2304, offset: 128)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !935, size: 2304, elements: !941)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "format_type_detail", file: !234, line: 119, baseType: !936)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !234, line: 108, size: 192, elements: !937)
!937 = !{!938, !939, !940}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "std", scope: !936, file: !234, line: 113, baseType: !249, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !936, file: !234, line: 116, baseType: !264, size: 64, offset: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !936, file: !234, line: 118, baseType: !621, size: 64, offset: 128)
!941 = !{!942}
!942 = !DISubrange(count: 12)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_chars", scope: !928, file: !234, line: 143, baseType: !264, size: 64, offset: 2432)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !928, file: !234, line: 153, baseType: !264, size: 64, offset: 2496)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !928, file: !234, line: 158, baseType: !946, size: 64, offset: 2560)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_chars", scope: !908, file: !234, line: 219, baseType: !264, size: 64, offset: 192)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "modifier_chars", scope: !908, file: !234, line: 221, baseType: !264, size: 64, offset: 256)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_specs", scope: !908, file: !234, line: 223, baseType: !951, size: 64, offset: 320)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "format_flag_spec", file: !234, line: 187, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !234, line: 163, size: 320, elements: !955)
!955 = !{!956, !957, !958, !959, !960, !961}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_char", scope: !954, file: !234, line: 166, baseType: !259, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !954, file: !234, line: 175, baseType: !259, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "skip_next_char", scope: !954, file: !234, line: 178, baseType: !259, size: 32, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !954, file: !234, line: 181, baseType: !264, size: 64, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !954, file: !234, line: 184, baseType: !264, size: 64, offset: 192)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "std", scope: !954, file: !234, line: 186, baseType: !249, size: 32, offset: 256)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "bad_flag_pairs", scope: !908, file: !234, line: 225, baseType: !963, size: 64, offset: 384)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "format_flag_pair", file: !234, line: 205, baseType: !966)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !234, line: 192, size: 128, elements: !967)
!967 = !{!968, !969, !970, !971}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_char1", scope: !966, file: !234, line: 195, baseType: !259, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "flag_char2", scope: !966, file: !234, line: 197, baseType: !259, size: 32, offset: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "ignored", scope: !966, file: !234, line: 200, baseType: !259, size: 32, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !966, file: !234, line: 204, baseType: !259, size: 32, offset: 96)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !908, file: !234, line: 227, baseType: !259, size: 32, offset: 448)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "width_char", scope: !908, file: !234, line: 229, baseType: !259, size: 32, offset: 480)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "left_precision_char", scope: !908, file: !234, line: 232, baseType: !259, size: 32, offset: 512)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "precision_char", scope: !908, file: !234, line: 235, baseType: !259, size: 32, offset: 544)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "suppression_char", scope: !908, file: !234, line: 238, baseType: !259, size: 32, offset: 576)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "length_code_char", scope: !908, file: !234, line: 243, baseType: !259, size: 32, offset: 608)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_char", scope: !908, file: !234, line: 245, baseType: !259, size: 32, offset: 640)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "width_type", scope: !908, file: !234, line: 248, baseType: !621, size: 64, offset: 704)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "precision_type", scope: !908, file: !234, line: 251, baseType: !621, size: 64, offset: 768)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "format_check_context", file: !3, line: 814, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 809, size: 192, elements: !984)
!984 = !{!985, !997, !1005}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !983, file: !3, line: 811, baseType: !986, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "format_check_results", file: !3, line: 807, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 785, size: 224, elements: !989)
!989 = !{!990, !991, !992, !993, !994, !995, !996}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "number_non_literal", scope: !988, file: !3, line: 789, baseType: !259, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "number_extra_args", scope: !988, file: !3, line: 792, baseType: !259, size: 32, offset: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "number_dollar_extra_args", scope: !988, file: !3, line: 796, baseType: !259, size: 32, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "number_wide", scope: !988, file: !3, line: 799, baseType: !259, size: 32, offset: 96)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "number_empty", scope: !988, file: !3, line: 801, baseType: !259, size: 32, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "number_unterminated", scope: !988, file: !3, line: 804, baseType: !259, size: 32, offset: 160)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "number_other", scope: !988, file: !3, line: 806, baseType: !259, size: 32, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !983, file: !3, line: 812, baseType: !998, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "function_format_info", file: !3, line: 72, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function_format_info", file: !3, line: 67, size: 192, elements: !1001)
!1001 = !{!1002, !1003, !1004}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "format_type", scope: !1000, file: !3, line: 69, baseType: !259, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "format_num", scope: !1000, file: !3, line: 70, baseType: !320, size: 64, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "first_arg_num", scope: !1000, file: !3, line: 71, baseType: !320, size: 64, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !983, file: !3, line: 813, baseType: !266, size: 64, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!1008 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "format_wanted_type", file: !3, line: 286, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "format_wanted_type", file: !3, line: 256, size: 576, elements: !1012)
!1012 = !{!1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_type", scope: !1011, file: !3, line: 259, baseType: !266, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_type_name", scope: !1011, file: !3, line: 261, baseType: !264, size: 64, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "scalar_identity_flag", scope: !1011, file: !3, line: 263, baseType: !259, size: 32, offset: 128)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_count", scope: !1011, file: !3, line: 265, baseType: !259, size: 32, offset: 160)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "char_lenient_flag", scope: !1011, file: !3, line: 268, baseType: !259, size: 32, offset: 192)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "writing_in_flag", scope: !1011, file: !3, line: 271, baseType: !259, size: 32, offset: 224)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "reading_from_flag", scope: !1011, file: !3, line: 274, baseType: !259, size: 32, offset: 256)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1011, file: !3, line: 279, baseType: !264, size: 64, offset: 320)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1011, file: !3, line: 281, baseType: !266, size: 64, offset: 384)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "arg_num", scope: !1011, file: !3, line: 283, baseType: !259, size: 32, offset: 448)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1011, file: !3, line: 285, baseType: !1024, size: 64, offset: 512)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!1027 = !{!1028, !1030, !0, !1041, !1043, !1045, !1047, !1049, !1051, !1053, !1055, !1057, !1063, !1068, !1073, !1076, !1081, !1086, !1091, !1096, !1098, !1100, !1103, !1106, !1109, !1111, !1113, !1116, !1121, !1126, !1131, !1133, !1136, !1141, !1146, !1149, !1154, !1157, !1160, !1162, !1165, !1167, !1170, !1180, !1190, !1192, !1199, !1201, !1203, !1205, !1207, !1209, !1211}
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "dynamic_format_types", scope: !2, file: !3, line: 778, type: !906, isLocal: true, isDefinition: true)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(name: "gnu_target_overrides_format_attributes", scope: !2, file: !3, line: 2697, type: !1032, isLocal: true, isDefinition: true)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 640, elements: !1039)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "target_ovr_attr", file: !234, line: 324, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !234, line: 318, size: 128, elements: !1036)
!1036 = !{!1037, !1038}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "named_attr_src", scope: !1035, file: !234, line: 321, baseType: !264, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "named_attr_dst", scope: !1035, file: !234, line: 323, baseType: !264, size: 64, offset: 64)
!1039 = !{!1040}
!1040 = !DISubrange(count: 5)
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "n_format_types", scope: !2, file: !3, line: 780, type: !259, isLocal: true, isDefinition: true)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "dollar_first_arg_num", scope: !2, file: !3, line: 938, type: !259, isLocal: true, isDefinition: true)
!1045 = !DIGlobalVariableExpression(var: !1046, expr: !DIExpression())
!1046 = distinct !DIGlobalVariable(name: "dollar_arguments_count", scope: !2, file: !3, line: 937, type: !259, isLocal: true, isDefinition: true)
!1047 = !DIGlobalVariableExpression(var: !1048, expr: !DIExpression())
!1048 = distinct !DIGlobalVariable(name: "dollar_max_arg_used", scope: !2, file: !3, line: 939, type: !259, isLocal: true, isDefinition: true)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "dollar_format_warned", scope: !2, file: !3, line: 940, type: !259, isLocal: true, isDefinition: true)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "dollar_arguments_alloc", scope: !2, file: !3, line: 936, type: !259, isLocal: true, isDefinition: true)
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(name: "dollar_arguments_used", scope: !2, file: !3, line: 934, type: !261, isLocal: true, isDefinition: true)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "dollar_arguments_pointer_p", scope: !2, file: !3, line: 935, type: !261, isLocal: true, isDefinition: true)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "format_types_orig", scope: !2, file: !3, line: 710, type: !1059, isLocal: true, isDefinition: true)
!1059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1060, size: 8320, elements: !1061)
!1060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!1061 = !{!1062}
!1062 = !DISubrange(count: 10)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(name: "printf_length_specs", scope: !2, file: !3, line: 291, type: !1065, isLocal: true, isDefinition: true)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !913, size: 3520, elements: !1066)
!1066 = !{!1067}
!1067 = !DISubrange(count: 11)
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(name: "print_char_table", scope: !2, file: !3, line: 511, type: !1070, isLocal: true, isDefinition: true)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 39360, elements: !1071)
!1071 = !{!1072}
!1072 = !DISubrange(count: 15)
!1073 = !DIGlobalVariableExpression(var: !1074, expr: !DIExpression())
!1074 = distinct !DIGlobalVariable(name: "printf_flag_specs", scope: !2, file: !3, line: 361, type: !1075, isLocal: true, isDefinition: true)
!1075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 3520, elements: !1066)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "printf_flag_pairs", scope: !2, file: !3, line: 377, type: !1078, isLocal: true, isDefinition: true)
!1078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !964, size: 512, elements: !1079)
!1079 = !{!1080}
!1080 = !DISubrange(count: 4)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(name: "asm_fprintf_length_specs", scope: !2, file: !3, line: 307, type: !1083, isLocal: true, isDefinition: true)
!1083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !913, size: 960, elements: !1084)
!1084 = !{!1085}
!1085 = !DISubrange(count: 3)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "asm_fprintf_char_table", scope: !2, file: !3, line: 534, type: !1088, isLocal: true, isDefinition: true)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 34112, elements: !1089)
!1089 = !{!1090}
!1090 = !DISubrange(count: 13)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "asm_fprintf_flag_specs", scope: !2, file: !3, line: 385, type: !1093, isLocal: true, isDefinition: true)
!1093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 2880, elements: !1094)
!1094 = !{!1095}
!1095 = !DISubrange(count: 9)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "asm_fprintf_flag_pairs", scope: !2, file: !3, line: 398, type: !1078, isLocal: true, isDefinition: true)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "gcc_diag_length_specs", scope: !2, file: !3, line: 315, type: !1083, isLocal: true, isDefinition: true)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "gcc_diag_char_table", scope: !2, file: !3, line: 554, type: !1102, isLocal: true, isDefinition: true)
!1102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 26240, elements: !1061)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "gcc_diag_flag_specs", scope: !2, file: !3, line: 420, type: !1105, isLocal: true, isDefinition: true)
!1105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 1600, elements: !1039)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "gcc_diag_flag_pairs", scope: !2, file: !3, line: 406, type: !1108, isLocal: true, isDefinition: true)
!1108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !964, size: 128, elements: !349)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "gcc_tdiag_char_table", scope: !2, file: !3, line: 574, type: !1102, isLocal: true, isDefinition: true)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "gcc_cdiag_char_table", scope: !2, file: !3, line: 594, type: !1102, isLocal: true, isDefinition: true)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "gcc_cxxdiag_char_table", scope: !2, file: !3, line: 614, type: !1115, isLocal: true, isDefinition: true)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 28864, elements: !1066)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "gcc_cxxdiag_flag_specs", scope: !2, file: !3, line: 432, type: !1118, isLocal: true, isDefinition: true)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 1920, elements: !1119)
!1119 = !{!1120}
!1120 = !DISubrange(count: 6)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "gcc_gfc_length_specs", scope: !2, file: !3, line: 354, type: !1123, isLocal: true, isDefinition: true)
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !913, size: 640, elements: !1124)
!1124 = !{!1125}
!1125 = !DISubrange(count: 2)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "gcc_gfc_char_table", scope: !2, file: !3, line: 637, type: !1128, isLocal: true, isDefinition: true)
!1128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 18368, elements: !1129)
!1129 = !{!1130}
!1130 = !DISubrange(count: 7)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "gcc_gfc_flag_pairs", scope: !2, file: !3, line: 415, type: !1108, isLocal: true, isDefinition: true)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "scanf_length_specs", scope: !2, file: !3, line: 328, type: !1135, isLocal: true, isDefinition: true)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !913, size: 3200, elements: !1061)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "scan_char_table", scope: !2, file: !3, line: 655, type: !1138, isLocal: true, isDefinition: true)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 36736, elements: !1139)
!1139 = !{!1140}
!1140 = !DISubrange(count: 14)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "scanf_flag_specs", scope: !2, file: !3, line: 442, type: !1143, isLocal: true, isDefinition: true)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 2560, elements: !1144)
!1144 = !{!1145}
!1145 = !DISubrange(count: 8)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "scanf_flag_pairs", scope: !2, file: !3, line: 455, type: !1148, isLocal: true, isDefinition: true)
!1148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !964, size: 384, elements: !1084)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "time_char_table", scope: !2, file: !3, line: 676, type: !1151, isLocal: true, isDefinition: true)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 52480, elements: !1152)
!1152 = !{!1153}
!1153 = !DISubrange(count: 20)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(name: "strftime_flag_specs", scope: !2, file: !3, line: 463, type: !1156, isLocal: true, isDefinition: true)
!1156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 3200, elements: !1061)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "strftime_flag_pairs", scope: !2, file: !3, line: 478, type: !1159, isLocal: true, isDefinition: true)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !964, size: 768, elements: !1119)
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "strfmon_length_specs", scope: !2, file: !3, line: 345, type: !1123, isLocal: true, isDefinition: true)
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(name: "monetary_char_table", scope: !2, file: !3, line: 703, type: !1164, isLocal: true, isDefinition: true)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 5248, elements: !1124)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "strfmon_flag_specs", scope: !2, file: !3, line: 489, type: !1075, isLocal: true, isDefinition: true)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "strfmon_flag_pairs", scope: !2, file: !3, line: 504, type: !1169, isLocal: true, isDefinition: true)
!1169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !964, size: 256, elements: !1124)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "hwi", scope: !1172, file: !3, line: 2401, type: !266, isLocal: true, isDefinition: true)
!1172 = distinct !DISubprogram(name: "init_dynamic_asm_fprintf_info", scope: !3, file: !3, line: 2399, type: !1173, scopeLine: 2400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1175)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{null}
!1175 = !{!1176, !1179}
!1176 = !DILocalVariable(name: "new_asm_fprintf_length_specs", scope: !1177, file: !3, line: 2405, type: !1025)
!1177 = distinct !DILexicalBlock(scope: !1178, file: !3, line: 2404, column: 5)
!1178 = distinct !DILexicalBlock(scope: !1172, file: !3, line: 2403, column: 7)
!1179 = !DILocalVariable(name: "i", scope: !1177, file: !3, line: 2406, type: !7)
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "locus", scope: !1182, file: !3, line: 2460, type: !266, isLocal: true, isDefinition: true)
!1182 = distinct !DISubprogram(name: "init_dynamic_gfc_info", scope: !3, file: !3, line: 2458, type: !1173, scopeLine: 2459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1183)
!1183 = !{!1184}
!1184 = !DILocalVariable(name: "i", scope: !1185, file: !3, line: 2497, type: !1189)
!1185 = distinct !DILexicalBlock(scope: !1186, file: !3, line: 2496, column: 2)
!1186 = distinct !DILexicalBlock(scope: !1187, file: !3, line: 2495, column: 11)
!1187 = distinct !DILexicalBlock(scope: !1188, file: !3, line: 2463, column: 5)
!1188 = distinct !DILexicalBlock(scope: !1182, file: !3, line: 2462, column: 7)
!1189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "gfc_fci", scope: !1182, file: !3, line: 2464, type: !1026, isLocal: true, isDefinition: true)
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "t", scope: !1194, file: !3, line: 2510, type: !266, isLocal: true, isDefinition: true)
!1194 = distinct !DISubprogram(name: "init_dynamic_diag_info", scope: !3, file: !3, line: 2508, type: !1173, scopeLine: 2509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1195)
!1195 = !{!1196}
!1196 = !DILocalVariable(name: "i", scope: !1197, file: !3, line: 2516, type: !7)
!1197 = distinct !DILexicalBlock(scope: !1198, file: !3, line: 2513, column: 5)
!1198 = distinct !DILexicalBlock(scope: !1194, file: !3, line: 2512, column: 7)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "loc", scope: !1194, file: !3, line: 2510, type: !266, isLocal: true, isDefinition: true)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "hwi", scope: !1194, file: !3, line: 2510, type: !266, isLocal: true, isDefinition: true)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "diag_fci", scope: !1194, file: !3, line: 2514, type: !1026, isLocal: true, isDefinition: true)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "tdiag_fci", scope: !1194, file: !3, line: 2514, type: !1026, isLocal: true, isDefinition: true)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "cdiag_fci", scope: !1194, file: !3, line: 2514, type: !1026, isLocal: true, isDefinition: true)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "cxxdiag_fci", scope: !1194, file: !3, line: 2514, type: !1026, isLocal: true, isDefinition: true)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "diag_ls", scope: !1194, file: !3, line: 2515, type: !1025, isLocal: true, isDefinition: true)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1214 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1215 = !{i32 2, !"Dwarf Version", i32 4}
!1216 = !{i32 2, !"Debug Info Version", i32 3}
!1217 = !{i32 1, !"wchar_size", i32 4}
!1218 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!1219 = distinct !DISubprogram(name: "vprintf", scope: !1220, file: !1220, line: 39, type: !1221, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1231)
!1220 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!259, !1223, !1224}
!1223 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !264)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !1226)
!1226 = !{!1227, !1228, !1229, !1230}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1225, file: !3, baseType: !7, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1225, file: !3, baseType: !7, size: 32, offset: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1225, file: !3, baseType: !263, size: 64, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1225, file: !3, baseType: !263, size: 64, offset: 128)
!1231 = !{!1232, !1233}
!1232 = !DILocalVariable(name: "__fmt", arg: 1, scope: !1219, file: !1220, line: 39, type: !1223)
!1233 = !DILocalVariable(name: "__arg", arg: 2, scope: !1219, file: !1220, line: 39, type: !1224)
!1234 = !DILocation(line: 0, scope: !1219)
!1235 = !DILocation(line: 41, column: 20, scope: !1219)
!1236 = !DILocation(line: 41, column: 10, scope: !1219)
!1237 = !DILocation(line: 41, column: 3, scope: !1219)
!1238 = distinct !DISubprogram(name: "getchar", scope: !1220, file: !1220, line: 47, type: !1239, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1241)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!259}
!1241 = !{}
!1242 = !DILocation(line: 49, column: 16, scope: !1238)
!1243 = !DILocation(line: 49, column: 10, scope: !1238)
!1244 = !DILocation(line: 49, column: 3, scope: !1238)
!1245 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !1220, file: !1220, line: 56, type: !1246, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1298)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!259, !1248}
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1250, line: 7, baseType: !1251)
!1250 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1252, line: 49, size: 1728, elements: !1253)
!1252 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1253 = !{!1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1269, !1271, !1272, !1273, !1276, !1277, !1278, !1279, !1282, !1284, !1287, !1290, !1291, !1292, !1295, !1296}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1251, file: !1252, line: 51, baseType: !259, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1251, file: !1252, line: 54, baseType: !261, size: 64, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1251, file: !1252, line: 55, baseType: !261, size: 64, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1251, file: !1252, line: 56, baseType: !261, size: 64, offset: 192)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1251, file: !1252, line: 57, baseType: !261, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1251, file: !1252, line: 58, baseType: !261, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1251, file: !1252, line: 59, baseType: !261, size: 64, offset: 384)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1251, file: !1252, line: 60, baseType: !261, size: 64, offset: 448)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1251, file: !1252, line: 61, baseType: !261, size: 64, offset: 512)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1251, file: !1252, line: 64, baseType: !261, size: 64, offset: 576)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1251, file: !1252, line: 65, baseType: !261, size: 64, offset: 640)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1251, file: !1252, line: 66, baseType: !261, size: 64, offset: 704)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1251, file: !1252, line: 68, baseType: !1267, size: 64, offset: 768)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1252, line: 36, flags: DIFlagFwdDecl)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1251, file: !1252, line: 70, baseType: !1270, size: 64, offset: 832)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1251, file: !1252, line: 72, baseType: !259, size: 32, offset: 896)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1251, file: !1252, line: 73, baseType: !259, size: 32, offset: 928)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1251, file: !1252, line: 74, baseType: !1274, size: 64, offset: 960)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1275, line: 152, baseType: !322)
!1275 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1251, file: !1252, line: 77, baseType: !1008, size: 16, offset: 1024)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1251, file: !1252, line: 78, baseType: !733, size: 8, offset: 1040)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1251, file: !1252, line: 79, baseType: !348, size: 8, offset: 1048)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1251, file: !1252, line: 81, baseType: !1280, size: 64, offset: 1088)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1252, line: 43, baseType: null)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1251, file: !1252, line: 89, baseType: !1283, size: 64, offset: 1152)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1275, line: 153, baseType: !322)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1251, file: !1252, line: 91, baseType: !1285, size: 64, offset: 1216)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1252, line: 37, flags: DIFlagFwdDecl)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1251, file: !1252, line: 92, baseType: !1288, size: 64, offset: 1280)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1252, line: 38, flags: DIFlagFwdDecl)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1251, file: !1252, line: 93, baseType: !1270, size: 64, offset: 1344)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1251, file: !1252, line: 94, baseType: !263, size: 64, offset: 1408)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1251, file: !1252, line: 95, baseType: !1293, size: 64, offset: 1472)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1294, line: 46, baseType: !320)
!1294 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1251, file: !1252, line: 96, baseType: !259, size: 32, offset: 1536)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1251, file: !1252, line: 98, baseType: !1297, size: 160, offset: 1568)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 160, elements: !1152)
!1298 = !{!1299}
!1299 = !DILocalVariable(name: "__fp", arg: 1, scope: !1245, file: !1220, line: 56, type: !1248)
!1300 = !DILocation(line: 0, scope: !1245)
!1301 = !DILocation(line: 58, column: 10, scope: !1245)
!1302 = !DILocation(line: 58, column: 3, scope: !1245)
!1303 = distinct !DISubprogram(name: "getc_unlocked", scope: !1220, file: !1220, line: 66, type: !1246, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1304)
!1304 = !{!1305}
!1305 = !DILocalVariable(name: "__fp", arg: 1, scope: !1303, file: !1220, line: 66, type: !1248)
!1306 = !DILocation(line: 0, scope: !1303)
!1307 = !DILocation(line: 68, column: 10, scope: !1303)
!1308 = !DILocation(line: 68, column: 3, scope: !1303)
!1309 = distinct !DISubprogram(name: "getchar_unlocked", scope: !1220, file: !1220, line: 73, type: !1239, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1241)
!1310 = !DILocation(line: 75, column: 10, scope: !1309)
!1311 = !DILocation(line: 75, column: 3, scope: !1309)
!1312 = distinct !DISubprogram(name: "putchar", scope: !1220, file: !1220, line: 82, type: !1313, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1315)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!259, !259}
!1315 = !{!1316}
!1316 = !DILocalVariable(name: "__c", arg: 1, scope: !1312, file: !1220, line: 82, type: !259)
!1317 = !DILocation(line: 0, scope: !1312)
!1318 = !DILocation(line: 84, column: 21, scope: !1312)
!1319 = !DILocation(line: 84, column: 10, scope: !1312)
!1320 = !DILocation(line: 84, column: 3, scope: !1312)
!1321 = distinct !DISubprogram(name: "fputc_unlocked", scope: !1220, file: !1220, line: 91, type: !1322, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1324)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!259, !259, !1248}
!1324 = !{!1325, !1326}
!1325 = !DILocalVariable(name: "__c", arg: 1, scope: !1321, file: !1220, line: 91, type: !259)
!1326 = !DILocalVariable(name: "__stream", arg: 2, scope: !1321, file: !1220, line: 91, type: !1248)
!1327 = !DILocation(line: 0, scope: !1321)
!1328 = !DILocation(line: 93, column: 10, scope: !1321)
!1329 = !DILocation(line: 93, column: 3, scope: !1321)
!1330 = distinct !DISubprogram(name: "putc_unlocked", scope: !1220, file: !1220, line: 101, type: !1322, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1331)
!1331 = !{!1332, !1333}
!1332 = !DILocalVariable(name: "__c", arg: 1, scope: !1330, file: !1220, line: 101, type: !259)
!1333 = !DILocalVariable(name: "__stream", arg: 2, scope: !1330, file: !1220, line: 101, type: !1248)
!1334 = !DILocation(line: 0, scope: !1330)
!1335 = !DILocation(line: 103, column: 10, scope: !1330)
!1336 = !DILocation(line: 103, column: 3, scope: !1330)
!1337 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1220, file: !1220, line: 108, type: !1313, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1338)
!1338 = !{!1339}
!1339 = !DILocalVariable(name: "__c", arg: 1, scope: !1337, file: !1220, line: 108, type: !259)
!1340 = !DILocation(line: 0, scope: !1337)
!1341 = !DILocation(line: 110, column: 10, scope: !1337)
!1342 = !DILocation(line: 110, column: 3, scope: !1337)
!1343 = distinct !DISubprogram(name: "getline", scope: !1220, file: !1220, line: 118, type: !1344, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1348)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!1346, !260, !1347, !1248}
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1275, line: 193, baseType: !322)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1348 = !{!1349, !1350, !1351}
!1349 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !1343, file: !1220, line: 118, type: !260)
!1350 = !DILocalVariable(name: "__n", arg: 2, scope: !1343, file: !1220, line: 118, type: !1347)
!1351 = !DILocalVariable(name: "__stream", arg: 3, scope: !1343, file: !1220, line: 118, type: !1248)
!1352 = !DILocation(line: 0, scope: !1343)
!1353 = !DILocation(line: 120, column: 10, scope: !1343)
!1354 = !DILocation(line: 120, column: 3, scope: !1343)
!1355 = distinct !DISubprogram(name: "feof_unlocked", scope: !1220, file: !1220, line: 128, type: !1246, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1356)
!1356 = !{!1357}
!1357 = !DILocalVariable(name: "__stream", arg: 1, scope: !1355, file: !1220, line: 128, type: !1248)
!1358 = !DILocation(line: 0, scope: !1355)
!1359 = !DILocation(line: 130, column: 10, scope: !1355)
!1360 = !DILocation(line: 130, column: 3, scope: !1355)
!1361 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1220, file: !1220, line: 135, type: !1246, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1362)
!1362 = !{!1363}
!1363 = !DILocalVariable(name: "__stream", arg: 1, scope: !1361, file: !1220, line: 135, type: !1248)
!1364 = !DILocation(line: 0, scope: !1361)
!1365 = !DILocation(line: 137, column: 10, scope: !1361)
!1366 = !DILocation(line: 137, column: 3, scope: !1361)
!1367 = distinct !DISubprogram(name: "tolower", scope: !1368, file: !1368, line: 207, type: !1313, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1369)
!1368 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!1369 = !{!1370}
!1370 = !DILocalVariable(name: "__c", arg: 1, scope: !1367, file: !1368, line: 207, type: !259)
!1371 = !DILocation(line: 0, scope: !1367)
!1372 = !DILocation(line: 209, column: 22, scope: !1367)
!1373 = !DILocation(line: 209, column: 39, scope: !1367)
!1374 = !DILocation(line: 209, column: 38, scope: !1367)
!1375 = !DILocation(line: 209, column: 37, scope: !1367)
!1376 = !DILocation(line: 209, column: 10, scope: !1367)
!1377 = !DILocation(line: 209, column: 3, scope: !1367)
!1378 = distinct !DISubprogram(name: "toupper", scope: !1368, file: !1368, line: 213, type: !1313, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1379)
!1379 = !{!1380}
!1380 = !DILocalVariable(name: "__c", arg: 1, scope: !1378, file: !1368, line: 213, type: !259)
!1381 = !DILocation(line: 0, scope: !1378)
!1382 = !DILocation(line: 215, column: 22, scope: !1378)
!1383 = !DILocation(line: 215, column: 39, scope: !1378)
!1384 = !DILocation(line: 215, column: 38, scope: !1378)
!1385 = !DILocation(line: 215, column: 37, scope: !1378)
!1386 = !DILocation(line: 215, column: 10, scope: !1378)
!1387 = !DILocation(line: 215, column: 3, scope: !1378)
!1388 = distinct !DISubprogram(name: "atoi", scope: !1389, file: !1389, line: 361, type: !1390, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1392)
!1389 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!1390 = !DISubroutineType(types: !1391)
!1391 = !{!259, !264}
!1392 = !{!1393}
!1393 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1388, file: !1389, line: 361, type: !264)
!1394 = !DILocation(line: 0, scope: !1388)
!1395 = !DILocation(line: 363, column: 16, scope: !1388)
!1396 = !DILocation(line: 363, column: 10, scope: !1388)
!1397 = !DILocation(line: 363, column: 3, scope: !1388)
!1398 = distinct !DISubprogram(name: "atol", scope: !1389, file: !1389, line: 366, type: !1399, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1401)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!322, !264}
!1401 = !{!1402}
!1402 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1398, file: !1389, line: 366, type: !264)
!1403 = !DILocation(line: 0, scope: !1398)
!1404 = !DILocation(line: 368, column: 10, scope: !1398)
!1405 = !DILocation(line: 368, column: 3, scope: !1398)
!1406 = distinct !DISubprogram(name: "atoll", scope: !1389, file: !1389, line: 373, type: !1407, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1410)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!1409, !264}
!1409 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1410 = !{!1411}
!1411 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1406, file: !1389, line: 373, type: !264)
!1412 = !DILocation(line: 0, scope: !1406)
!1413 = !DILocation(line: 375, column: 10, scope: !1406)
!1414 = !DILocation(line: 375, column: 3, scope: !1406)
!1415 = distinct !DISubprogram(name: "bsearch", scope: !1416, file: !1416, line: 20, type: !1417, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1425)
!1416 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!1417 = !DISubroutineType(types: !1418)
!1418 = !{!263, !1419, !1419, !1293, !1293, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !1389, line: 808, baseType: !1422)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!259, !1419, !1419}
!1425 = !{!1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435}
!1426 = !DILocalVariable(name: "__key", arg: 1, scope: !1415, file: !1416, line: 20, type: !1419)
!1427 = !DILocalVariable(name: "__base", arg: 2, scope: !1415, file: !1416, line: 20, type: !1419)
!1428 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !1415, file: !1416, line: 20, type: !1293)
!1429 = !DILocalVariable(name: "__size", arg: 4, scope: !1415, file: !1416, line: 20, type: !1293)
!1430 = !DILocalVariable(name: "__compar", arg: 5, scope: !1415, file: !1416, line: 21, type: !1421)
!1431 = !DILocalVariable(name: "__l", scope: !1415, file: !1416, line: 23, type: !1293)
!1432 = !DILocalVariable(name: "__u", scope: !1415, file: !1416, line: 23, type: !1293)
!1433 = !DILocalVariable(name: "__idx", scope: !1415, file: !1416, line: 23, type: !1293)
!1434 = !DILocalVariable(name: "__p", scope: !1415, file: !1416, line: 24, type: !1419)
!1435 = !DILocalVariable(name: "__comparison", scope: !1415, file: !1416, line: 25, type: !259)
!1436 = !DILocation(line: 0, scope: !1415)
!1437 = !DILocation(line: 29, column: 3, scope: !1415)
!1438 = !DILocation(line: 27, column: 7, scope: !1415)
!1439 = !DILocation(line: 29, column: 14, scope: !1415)
!1440 = !DILocation(line: 31, column: 20, scope: !1441)
!1441 = distinct !DILexicalBlock(scope: !1415, file: !1416, line: 30, column: 5)
!1442 = !DILocation(line: 31, column: 27, scope: !1441)
!1443 = !DILocation(line: 32, column: 56, scope: !1441)
!1444 = !DILocation(line: 32, column: 47, scope: !1441)
!1445 = !DILocation(line: 33, column: 22, scope: !1441)
!1446 = !DILocation(line: 34, column: 24, scope: !1447)
!1447 = distinct !DILexicalBlock(scope: !1441, file: !1416, line: 34, column: 11)
!1448 = !DILocation(line: 34, column: 11, scope: !1441)
!1449 = !DILocation(line: 36, column: 29, scope: !1450)
!1450 = distinct !DILexicalBlock(scope: !1447, file: !1416, line: 36, column: 16)
!1451 = !DILocation(line: 36, column: 16, scope: !1447)
!1452 = !DILocation(line: 37, column: 14, scope: !1450)
!1453 = distinct !{!1453, !1437, !1454}
!1454 = !DILocation(line: 40, column: 5, scope: !1415)
!1455 = !DILocation(line: 43, column: 1, scope: !1415)
!1456 = distinct !DISubprogram(name: "atof", scope: !1457, file: !1457, line: 25, type: !1458, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1461)
!1457 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!1460, !264}
!1460 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1461 = !{!1462}
!1462 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1456, file: !1457, line: 25, type: !264)
!1463 = !DILocation(line: 0, scope: !1456)
!1464 = !DILocation(line: 27, column: 10, scope: !1456)
!1465 = !DILocation(line: 27, column: 3, scope: !1456)
!1466 = distinct !DISubprogram(name: "strtoimax", scope: !1467, file: !1467, line: 324, type: !1468, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1474)
!1467 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!1470, !1223, !1473, !259}
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !1471, line: 101, baseType: !1472)
!1471 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !1275, line: 72, baseType: !322)
!1473 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !260)
!1474 = !{!1475, !1476, !1477}
!1475 = !DILocalVariable(name: "nptr", arg: 1, scope: !1466, file: !1467, line: 324, type: !1223)
!1476 = !DILocalVariable(name: "endptr", arg: 2, scope: !1466, file: !1467, line: 324, type: !1473)
!1477 = !DILocalVariable(name: "base", arg: 3, scope: !1466, file: !1467, line: 324, type: !259)
!1478 = !DILocation(line: 0, scope: !1466)
!1479 = !DILocation(line: 327, column: 10, scope: !1466)
!1480 = !DILocation(line: 327, column: 3, scope: !1466)
!1481 = distinct !DISubprogram(name: "strtoumax", scope: !1467, file: !1467, line: 336, type: !1482, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1486)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!1484, !1223, !1473, !259}
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !1471, line: 102, baseType: !1485)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !1275, line: 73, baseType: !320)
!1486 = !{!1487, !1488, !1489}
!1487 = !DILocalVariable(name: "nptr", arg: 1, scope: !1481, file: !1467, line: 336, type: !1223)
!1488 = !DILocalVariable(name: "endptr", arg: 2, scope: !1481, file: !1467, line: 336, type: !1473)
!1489 = !DILocalVariable(name: "base", arg: 3, scope: !1481, file: !1467, line: 336, type: !259)
!1490 = !DILocation(line: 0, scope: !1481)
!1491 = !DILocation(line: 339, column: 10, scope: !1481)
!1492 = !DILocation(line: 339, column: 3, scope: !1481)
!1493 = distinct !DISubprogram(name: "wcstoimax", scope: !1467, file: !1467, line: 348, type: !1494, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1503)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!1470, !1496, !1500, !259}
!1496 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1497)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1499)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !1467, line: 34, baseType: !259)
!1500 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1501)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1503 = !{!1504, !1505, !1506}
!1504 = !DILocalVariable(name: "nptr", arg: 1, scope: !1493, file: !1467, line: 348, type: !1496)
!1505 = !DILocalVariable(name: "endptr", arg: 2, scope: !1493, file: !1467, line: 348, type: !1500)
!1506 = !DILocalVariable(name: "base", arg: 3, scope: !1493, file: !1467, line: 348, type: !259)
!1507 = !DILocation(line: 0, scope: !1493)
!1508 = !DILocation(line: 351, column: 10, scope: !1493)
!1509 = !DILocation(line: 351, column: 3, scope: !1493)
!1510 = distinct !DISubprogram(name: "wcstoumax", scope: !1467, file: !1467, line: 362, type: !1511, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1513)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!1484, !1496, !1500, !259}
!1513 = !{!1514, !1515, !1516}
!1514 = !DILocalVariable(name: "nptr", arg: 1, scope: !1510, file: !1467, line: 362, type: !1496)
!1515 = !DILocalVariable(name: "endptr", arg: 2, scope: !1510, file: !1467, line: 362, type: !1500)
!1516 = !DILocalVariable(name: "base", arg: 3, scope: !1510, file: !1467, line: 362, type: !259)
!1517 = !DILocation(line: 0, scope: !1510)
!1518 = !DILocation(line: 365, column: 10, scope: !1510)
!1519 = !DILocation(line: 365, column: 3, scope: !1510)
!1520 = distinct !DISubprogram(name: "stat", scope: !1521, file: !1521, line: 453, type: !1522, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1559)
!1521 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!259, !264, !1524}
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1526, line: 46, size: 1152, elements: !1527)
!1526 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!1527 = !{!1528, !1530, !1532, !1534, !1536, !1538, !1540, !1541, !1542, !1543, !1545, !1547, !1555, !1556, !1557}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1525, file: !1526, line: 48, baseType: !1529, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1275, line: 145, baseType: !320)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1525, file: !1526, line: 53, baseType: !1531, size: 64, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1275, line: 148, baseType: !320)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1525, file: !1526, line: 61, baseType: !1533, size: 64, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1275, line: 151, baseType: !320)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1525, file: !1526, line: 62, baseType: !1535, size: 32, offset: 192)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1275, line: 150, baseType: !7)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1525, file: !1526, line: 64, baseType: !1537, size: 32, offset: 224)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1275, line: 146, baseType: !7)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1525, file: !1526, line: 65, baseType: !1539, size: 32, offset: 256)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1275, line: 147, baseType: !7)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1525, file: !1526, line: 67, baseType: !259, size: 32, offset: 288)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1525, file: !1526, line: 69, baseType: !1529, size: 64, offset: 320)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1525, file: !1526, line: 74, baseType: !1274, size: 64, offset: 384)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1525, file: !1526, line: 78, baseType: !1544, size: 64, offset: 448)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1275, line: 174, baseType: !322)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1525, file: !1526, line: 80, baseType: !1546, size: 64, offset: 512)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1275, line: 179, baseType: !322)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1525, file: !1526, line: 91, baseType: !1548, size: 128, offset: 576)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1549, line: 10, size: 128, elements: !1550)
!1549 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!1550 = !{!1551, !1553}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1548, file: !1549, line: 12, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1275, line: 160, baseType: !322)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1548, file: !1549, line: 16, baseType: !1554, size: 64, offset: 64)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1275, line: 196, baseType: !322)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1525, file: !1526, line: 92, baseType: !1548, size: 128, offset: 704)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1525, file: !1526, line: 93, baseType: !1548, size: 128, offset: 832)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1525, file: !1526, line: 106, baseType: !1558, size: 192, offset: 960)
!1558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1554, size: 192, elements: !1084)
!1559 = !{!1560, !1561}
!1560 = !DILocalVariable(name: "__path", arg: 1, scope: !1520, file: !1521, line: 453, type: !264)
!1561 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !1520, file: !1521, line: 453, type: !1524)
!1562 = !DILocation(line: 0, scope: !1520)
!1563 = !DILocation(line: 455, column: 10, scope: !1520)
!1564 = !DILocation(line: 455, column: 3, scope: !1520)
!1565 = distinct !DISubprogram(name: "lstat", scope: !1521, file: !1521, line: 460, type: !1522, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1566)
!1566 = !{!1567, !1568}
!1567 = !DILocalVariable(name: "__path", arg: 1, scope: !1565, file: !1521, line: 460, type: !264)
!1568 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !1565, file: !1521, line: 460, type: !1524)
!1569 = !DILocation(line: 0, scope: !1565)
!1570 = !DILocation(line: 462, column: 10, scope: !1565)
!1571 = !DILocation(line: 462, column: 3, scope: !1565)
!1572 = distinct !DISubprogram(name: "fstat", scope: !1521, file: !1521, line: 467, type: !1573, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1575)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!259, !259, !1524}
!1575 = !{!1576, !1577}
!1576 = !DILocalVariable(name: "__fd", arg: 1, scope: !1572, file: !1521, line: 467, type: !259)
!1577 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !1572, file: !1521, line: 467, type: !1524)
!1578 = !DILocation(line: 0, scope: !1572)
!1579 = !DILocation(line: 469, column: 10, scope: !1572)
!1580 = !DILocation(line: 469, column: 3, scope: !1572)
!1581 = distinct !DISubprogram(name: "fstatat", scope: !1521, file: !1521, line: 474, type: !1582, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1584)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!259, !259, !264, !1524, !259}
!1584 = !{!1585, !1586, !1587, !1588}
!1585 = !DILocalVariable(name: "__fd", arg: 1, scope: !1581, file: !1521, line: 474, type: !259)
!1586 = !DILocalVariable(name: "__filename", arg: 2, scope: !1581, file: !1521, line: 474, type: !264)
!1587 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !1581, file: !1521, line: 474, type: !1524)
!1588 = !DILocalVariable(name: "__flag", arg: 4, scope: !1581, file: !1521, line: 474, type: !259)
!1589 = !DILocation(line: 0, scope: !1581)
!1590 = !DILocation(line: 477, column: 10, scope: !1581)
!1591 = !DILocation(line: 477, column: 3, scope: !1581)
!1592 = distinct !DISubprogram(name: "mknod", scope: !1521, file: !1521, line: 483, type: !1593, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1595)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!259, !264, !1535, !1529}
!1595 = !{!1596, !1597, !1598}
!1596 = !DILocalVariable(name: "__path", arg: 1, scope: !1592, file: !1521, line: 483, type: !264)
!1597 = !DILocalVariable(name: "__mode", arg: 2, scope: !1592, file: !1521, line: 483, type: !1535)
!1598 = !DILocalVariable(name: "__dev", arg: 3, scope: !1592, file: !1521, line: 483, type: !1529)
!1599 = !DILocation(line: 0, scope: !1592)
!1600 = !DILocation(line: 485, column: 10, scope: !1592)
!1601 = !DILocation(line: 485, column: 3, scope: !1592)
!1602 = distinct !DISubprogram(name: "mknodat", scope: !1521, file: !1521, line: 491, type: !1603, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1605)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!259, !259, !264, !1535, !1529}
!1605 = !{!1606, !1607, !1608, !1609}
!1606 = !DILocalVariable(name: "__fd", arg: 1, scope: !1602, file: !1521, line: 491, type: !259)
!1607 = !DILocalVariable(name: "__path", arg: 2, scope: !1602, file: !1521, line: 491, type: !264)
!1608 = !DILocalVariable(name: "__mode", arg: 3, scope: !1602, file: !1521, line: 491, type: !1535)
!1609 = !DILocalVariable(name: "__dev", arg: 4, scope: !1602, file: !1521, line: 491, type: !1529)
!1610 = !DILocation(line: 0, scope: !1602)
!1611 = !DILocation(line: 494, column: 10, scope: !1602)
!1612 = !DILocation(line: 494, column: 3, scope: !1602)
!1613 = distinct !DISubprogram(name: "stat64", scope: !1521, file: !1521, line: 502, type: !1614, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1636)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!259, !264, !1616}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !1526, line: 119, size: 1152, elements: !1618)
!1618 = !{!1619, !1620, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1632, !1633, !1634, !1635}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1617, file: !1526, line: 121, baseType: !1529, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1617, file: !1526, line: 123, baseType: !1621, size: 64, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1275, line: 149, baseType: !320)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1617, file: !1526, line: 124, baseType: !1533, size: 64, offset: 128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1617, file: !1526, line: 125, baseType: !1535, size: 32, offset: 192)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1617, file: !1526, line: 132, baseType: !1537, size: 32, offset: 224)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1617, file: !1526, line: 133, baseType: !1539, size: 32, offset: 256)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1617, file: !1526, line: 135, baseType: !259, size: 32, offset: 288)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1617, file: !1526, line: 136, baseType: !1529, size: 64, offset: 320)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1617, file: !1526, line: 137, baseType: !1274, size: 64, offset: 384)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1617, file: !1526, line: 143, baseType: !1544, size: 64, offset: 448)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1617, file: !1526, line: 144, baseType: !1631, size: 64, offset: 512)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !1275, line: 180, baseType: !322)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1617, file: !1526, line: 152, baseType: !1548, size: 128, offset: 576)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1617, file: !1526, line: 153, baseType: !1548, size: 128, offset: 704)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1617, file: !1526, line: 154, baseType: !1548, size: 128, offset: 832)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1617, file: !1526, line: 164, baseType: !1558, size: 192, offset: 960)
!1636 = !{!1637, !1638}
!1637 = !DILocalVariable(name: "__path", arg: 1, scope: !1613, file: !1521, line: 502, type: !264)
!1638 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !1613, file: !1521, line: 502, type: !1616)
!1639 = !DILocation(line: 0, scope: !1613)
!1640 = !DILocation(line: 504, column: 10, scope: !1613)
!1641 = !DILocation(line: 504, column: 3, scope: !1613)
!1642 = distinct !DISubprogram(name: "lstat64", scope: !1521, file: !1521, line: 509, type: !1614, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1643)
!1643 = !{!1644, !1645}
!1644 = !DILocalVariable(name: "__path", arg: 1, scope: !1642, file: !1521, line: 509, type: !264)
!1645 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !1642, file: !1521, line: 509, type: !1616)
!1646 = !DILocation(line: 0, scope: !1642)
!1647 = !DILocation(line: 511, column: 10, scope: !1642)
!1648 = !DILocation(line: 511, column: 3, scope: !1642)
!1649 = distinct !DISubprogram(name: "fstat64", scope: !1521, file: !1521, line: 516, type: !1650, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1652)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!259, !259, !1616}
!1652 = !{!1653, !1654}
!1653 = !DILocalVariable(name: "__fd", arg: 1, scope: !1649, file: !1521, line: 516, type: !259)
!1654 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !1649, file: !1521, line: 516, type: !1616)
!1655 = !DILocation(line: 0, scope: !1649)
!1656 = !DILocation(line: 518, column: 10, scope: !1649)
!1657 = !DILocation(line: 518, column: 3, scope: !1649)
!1658 = distinct !DISubprogram(name: "fstatat64", scope: !1521, file: !1521, line: 523, type: !1659, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1661)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!259, !259, !264, !1616, !259}
!1661 = !{!1662, !1663, !1664, !1665}
!1662 = !DILocalVariable(name: "__fd", arg: 1, scope: !1658, file: !1521, line: 523, type: !259)
!1663 = !DILocalVariable(name: "__filename", arg: 2, scope: !1658, file: !1521, line: 523, type: !264)
!1664 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !1658, file: !1521, line: 523, type: !1616)
!1665 = !DILocalVariable(name: "__flag", arg: 4, scope: !1658, file: !1521, line: 523, type: !259)
!1666 = !DILocation(line: 0, scope: !1658)
!1667 = !DILocation(line: 526, column: 10, scope: !1658)
!1668 = !DILocation(line: 526, column: 3, scope: !1658)
!1669 = distinct !DISubprogram(name: "set_Wformat", scope: !3, file: !3, line: 38, type: !1670, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1672)
!1670 = !DISubroutineType(types: !1671)
!1671 = !{null, !259}
!1672 = !{!1673}
!1673 = !DILocalVariable(name: "setting", arg: 1, scope: !1669, file: !3, line: 38, type: !259)
!1674 = !DILocation(line: 0, scope: !1669)
!1675 = !DILocation(line: 40, column: 15, scope: !1669)
!1676 = !DILocation(line: 41, column: 26, scope: !1669)
!1677 = !DILocation(line: 42, column: 27, scope: !1669)
!1678 = !DILocation(line: 43, column: 28, scope: !1669)
!1679 = !DILocation(line: 44, column: 7, scope: !1669)
!1680 = !DILocation(line: 46, column: 30, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1682, file: !3, line: 45, column: 5)
!1682 = distinct !DILexicalBlock(scope: !1669, file: !3, line: 44, column: 7)
!1683 = !DILocation(line: 47, column: 28, scope: !1681)
!1684 = !DILocation(line: 48, column: 23, scope: !1681)
!1685 = !DILocation(line: 51, column: 7, scope: !1686)
!1686 = distinct !DILexicalBlock(scope: !1669, file: !3, line: 51, column: 7)
!1687 = !DILocation(line: 51, column: 7, scope: !1669)
!1688 = !DILocation(line: 52, column: 18, scope: !1686)
!1689 = !DILocation(line: 52, column: 5, scope: !1686)
!1690 = !DILocation(line: 53, column: 1, scope: !1669)
!1691 = distinct !DISubprogram(name: "handle_format_arg_attribute", scope: !3, file: !3, line: 88, type: !1692, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1694)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!266, !621, !266, !266, !259, !257}
!1694 = !{!1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703}
!1695 = !DILocalVariable(name: "node", arg: 1, scope: !1691, file: !3, line: 88, type: !621)
!1696 = !DILocalVariable(name: "name", arg: 2, scope: !1691, file: !3, line: 88, type: !266)
!1697 = !DILocalVariable(name: "args", arg: 3, scope: !1691, file: !3, line: 89, type: !266)
!1698 = !DILocalVariable(name: "flags", arg: 4, scope: !1691, file: !3, line: 89, type: !259)
!1699 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !1691, file: !3, line: 89, type: !257)
!1700 = !DILocalVariable(name: "type", scope: !1691, file: !3, line: 91, type: !266)
!1701 = !DILocalVariable(name: "format_num_expr", scope: !1691, file: !3, line: 92, type: !266)
!1702 = !DILocalVariable(name: "format_num", scope: !1691, file: !3, line: 93, type: !320)
!1703 = !DILocalVariable(name: "argument", scope: !1691, file: !3, line: 94, type: !266)
!1704 = !DILocation(line: 0, scope: !1691)
!1705 = !DILocation(line: 91, column: 15, scope: !1691)
!1706 = !DILocation(line: 92, column: 26, scope: !1691)
!1707 = !DILocation(line: 93, column: 3, scope: !1691)
!1708 = !DILocation(line: 93, column: 26, scope: !1691)
!1709 = !DILocation(line: 96, column: 8, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1691, file: !3, line: 96, column: 7)
!1711 = !DILocation(line: 96, column: 7, scope: !1691)
!1712 = !DILocation(line: 98, column: 7, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !1710, file: !3, line: 97, column: 5)
!1714 = !DILocation(line: 99, column: 21, scope: !1713)
!1715 = !DILocation(line: 100, column: 7, scope: !1713)
!1716 = !DILocation(line: 103, column: 14, scope: !1691)
!1717 = !DILocation(line: 104, column: 7, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1691, file: !3, line: 104, column: 7)
!1719 = !DILocation(line: 104, column: 7, scope: !1691)
!1720 = !DILocation(line: 106, column: 43, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1722, file: !3, line: 106, column: 11)
!1722 = distinct !DILexicalBlock(scope: !1718, file: !3, line: 105, column: 5)
!1723 = !DILocation(line: 106, column: 12, scope: !1721)
!1724 = !DILocation(line: 106, column: 11, scope: !1722)
!1725 = !DILocation(line: 110, column: 7, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1691, file: !3, line: 110, column: 7)
!1727 = !DILocation(line: 110, column: 36, scope: !1726)
!1728 = !DILocation(line: 111, column: 7, scope: !1726)
!1729 = !DILocation(line: 111, column: 11, scope: !1726)
!1730 = !DILocation(line: 112, column: 7, scope: !1726)
!1731 = !DILocation(line: 112, column: 4, scope: !1726)
!1732 = !DILocation(line: 110, column: 7, scope: !1691)
!1733 = !DILocation(line: 114, column: 19, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1735, file: !3, line: 114, column: 11)
!1735 = distinct !DILexicalBlock(scope: !1726, file: !3, line: 113, column: 5)
!1736 = !DILocation(line: 114, column: 11, scope: !1735)
!1737 = !DILocation(line: 115, column: 2, scope: !1734)
!1738 = !DILocation(line: 116, column: 21, scope: !1735)
!1739 = !DILocation(line: 117, column: 7, scope: !1735)
!1740 = !DILocation(line: 121, column: 1, scope: !1691)
!1741 = distinct !DISubprogram(name: "get_constant", scope: !3, file: !3, line: 156, type: !1742, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1745)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{!258, !266, !1744, !259}
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!1745 = !{!1746, !1747, !1748}
!1746 = !DILocalVariable(name: "expr", arg: 1, scope: !1741, file: !3, line: 156, type: !266)
!1747 = !DILocalVariable(name: "value", arg: 2, scope: !1741, file: !3, line: 156, type: !1744)
!1748 = !DILocalVariable(name: "validated_p", arg: 3, scope: !1741, file: !3, line: 156, type: !259)
!1749 = !DILocation(line: 0, scope: !1741)
!1750 = !DILocation(line: 158, column: 7, scope: !1751)
!1751 = distinct !DILexicalBlock(scope: !1741, file: !3, line: 158, column: 7)
!1752 = !DILocation(line: 158, column: 24, scope: !1751)
!1753 = !DILocation(line: 158, column: 39, scope: !1751)
!1754 = !DILocation(line: 158, column: 42, scope: !1751)
!1755 = !DILocation(line: 158, column: 67, scope: !1751)
!1756 = !DILocation(line: 158, column: 7, scope: !1741)
!1757 = !DILocation(line: 160, column: 7, scope: !1758)
!1758 = distinct !DILexicalBlock(scope: !1751, file: !3, line: 159, column: 5)
!1759 = !DILocation(line: 164, column: 12, scope: !1741)
!1760 = !DILocation(line: 164, column: 10, scope: !1741)
!1761 = !DILocation(line: 166, column: 3, scope: !1741)
!1762 = !DILocation(line: 167, column: 1, scope: !1741)
!1763 = distinct !DISubprogram(name: "check_format_string", scope: !3, file: !3, line: 126, type: !1764, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1766)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!258, !266, !320, !259, !257}
!1766 = !{!1767, !1768, !1769, !1770, !1771}
!1767 = !DILocalVariable(name: "argument", arg: 1, scope: !1763, file: !3, line: 126, type: !266)
!1768 = !DILocalVariable(name: "format_num", arg: 2, scope: !1763, file: !3, line: 126, type: !320)
!1769 = !DILocalVariable(name: "flags", arg: 3, scope: !1763, file: !3, line: 127, type: !259)
!1770 = !DILocalVariable(name: "no_add_attrs", arg: 4, scope: !1763, file: !3, line: 127, type: !257)
!1771 = !DILocalVariable(name: "i", scope: !1763, file: !3, line: 129, type: !320)
!1772 = !DILocation(line: 0, scope: !1763)
!1773 = !DILocation(line: 131, column: 8, scope: !1774)
!1774 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 131, column: 3)
!1775 = !DILocation(line: 0, scope: !1774)
!1776 = !DILocation(line: 131, column: 17, scope: !1777)
!1777 = distinct !DILexicalBlock(scope: !1774, file: !3, line: 131, column: 3)
!1778 = !DILocation(line: 131, column: 3, scope: !1774)
!1779 = !DILocation(line: 133, column: 11, scope: !1780)
!1780 = distinct !DILexicalBlock(scope: !1777, file: !3, line: 132, column: 5)
!1781 = !DILocation(line: 135, column: 18, scope: !1780)
!1782 = !DILocation(line: 131, column: 33, scope: !1777)
!1783 = !DILocation(line: 131, column: 3, scope: !1777)
!1784 = distinct !{!1784, !1778, !1785}
!1785 = !DILocation(line: 136, column: 5, scope: !1774)
!1786 = !DILocation(line: 138, column: 8, scope: !1787)
!1787 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 138, column: 7)
!1788 = !DILocation(line: 139, column: 7, scope: !1787)
!1789 = !DILocation(line: 139, column: 10, scope: !1787)
!1790 = !DILocation(line: 139, column: 44, scope: !1787)
!1791 = !DILocation(line: 140, column: 7, scope: !1787)
!1792 = !DILocation(line: 140, column: 11, scope: !1787)
!1793 = !DILocation(line: 141, column: 7, scope: !1787)
!1794 = !DILocation(line: 141, column: 4, scope: !1787)
!1795 = !DILocation(line: 138, column: 7, scope: !1763)
!1796 = !DILocation(line: 143, column: 19, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1798, file: !3, line: 143, column: 11)
!1798 = distinct !DILexicalBlock(scope: !1787, file: !3, line: 142, column: 5)
!1799 = !DILocation(line: 143, column: 11, scope: !1798)
!1800 = !DILocation(line: 144, column: 2, scope: !1797)
!1801 = !DILocation(line: 145, column: 21, scope: !1798)
!1802 = !DILocation(line: 146, column: 7, scope: !1798)
!1803 = !DILocation(line: 150, column: 1, scope: !1763)
!1804 = distinct !DISubprogram(name: "check_function_format", scope: !3, file: !3, line: 870, type: !1805, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1807)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{null, !266, !259, !621}
!1807 = !{!1808, !1809, !1810, !1811, !1812, !1818, !1821, !1822, !1825}
!1808 = !DILocalVariable(name: "attrs", arg: 1, scope: !1804, file: !3, line: 870, type: !266)
!1809 = !DILocalVariable(name: "nargs", arg: 2, scope: !1804, file: !3, line: 870, type: !259)
!1810 = !DILocalVariable(name: "argarray", arg: 3, scope: !1804, file: !3, line: 870, type: !621)
!1811 = !DILocalVariable(name: "a", scope: !1804, file: !3, line: 872, type: !266)
!1812 = !DILocalVariable(name: "info", scope: !1813, file: !3, line: 880, type: !999)
!1813 = distinct !DILexicalBlock(scope: !1814, file: !3, line: 878, column: 2)
!1814 = distinct !DILexicalBlock(scope: !1815, file: !3, line: 877, column: 11)
!1815 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 876, column: 5)
!1816 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 875, column: 3)
!1817 = distinct !DILexicalBlock(scope: !1804, file: !3, line: 875, column: 3)
!1818 = !DILocalVariable(name: "params", scope: !1819, file: !3, line: 887, type: !266)
!1819 = distinct !DILexicalBlock(scope: !1820, file: !3, line: 883, column: 6)
!1820 = distinct !DILexicalBlock(scope: !1813, file: !3, line: 882, column: 8)
!1821 = !DILocalVariable(name: "i", scope: !1819, file: !3, line: 888, type: !259)
!1822 = !DILocalVariable(name: "c", scope: !1823, file: !3, line: 897, type: !266)
!1823 = distinct !DILexicalBlock(scope: !1824, file: !3, line: 896, column: 6)
!1824 = distinct !DILexicalBlock(scope: !1813, file: !3, line: 893, column: 8)
!1825 = !DILocalVariable(name: "args", scope: !1826, file: !3, line: 912, type: !266)
!1826 = distinct !DILexicalBlock(scope: !1827, file: !3, line: 907, column: 3)
!1827 = distinct !DILexicalBlock(scope: !1823, file: !3, line: 906, column: 12)
!1828 = !DILocation(line: 0, scope: !1804)
!1829 = !DILocation(line: 0, scope: !1813)
!1830 = !DILocation(line: 0, scope: !1824)
!1831 = !DILocation(line: 875, column: 8, scope: !1817)
!1832 = !DILocation(line: 0, scope: !1817)
!1833 = !DILocation(line: 875, column: 3, scope: !1817)
!1834 = !DILocation(line: 877, column: 37, scope: !1814)
!1835 = !DILocation(line: 877, column: 11, scope: !1814)
!1836 = !DILocation(line: 877, column: 11, scope: !1815)
!1837 = !DILocation(line: 880, column: 4, scope: !1813)
!1838 = !DILocation(line: 881, column: 24, scope: !1813)
!1839 = !DILocation(line: 881, column: 4, scope: !1813)
!1840 = !DILocation(line: 882, column: 8, scope: !1820)
!1841 = !DILocation(line: 882, column: 8, scope: !1813)
!1842 = !DILocation(line: 0, scope: !1819)
!1843 = !DILocation(line: 889, column: 13, scope: !1844)
!1844 = distinct !DILexicalBlock(scope: !1819, file: !3, line: 889, column: 8)
!1845 = !DILocation(line: 0, scope: !1844)
!1846 = !DILocation(line: 889, column: 30, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1844, file: !3, line: 889, column: 8)
!1848 = !DILocation(line: 889, column: 8, scope: !1844)
!1849 = !DILocation(line: 890, column: 12, scope: !1847)
!1850 = !DILocation(line: 889, column: 8, scope: !1847)
!1851 = distinct !{!1851, !1848, !1852}
!1852 = !DILocation(line: 890, column: 12, scope: !1844)
!1853 = !DILocation(line: 891, column: 8, scope: !1819)
!1854 = !DILocation(line: 892, column: 6, scope: !1819)
!1855 = !DILocation(line: 893, column: 8, scope: !1824)
!1856 = !DILocation(line: 893, column: 38, scope: !1824)
!1857 = !DILocation(line: 893, column: 46, scope: !1824)
!1858 = !DILocation(line: 893, column: 60, scope: !1824)
!1859 = !DILocation(line: 894, column: 8, scope: !1824)
!1860 = !DILocation(line: 894, column: 12, scope: !1824)
!1861 = !DILocation(line: 894, column: 30, scope: !1824)
!1862 = !DILocation(line: 894, column: 43, scope: !1824)
!1863 = !DILocation(line: 895, column: 5, scope: !1824)
!1864 = !DILocation(line: 893, column: 8, scope: !1813)
!1865 = !DILocation(line: 898, column: 17, scope: !1866)
!1866 = distinct !DILexicalBlock(scope: !1823, file: !3, line: 898, column: 8)
!1867 = !DILocation(line: 898, column: 13, scope: !1866)
!1868 = !DILocation(line: 0, scope: !1866)
!1869 = !DILocation(line: 0, scope: !1823)
!1870 = !DILocation(line: 898, column: 8, scope: !1866)
!1871 = !DILocation(line: 901, column: 33, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 901, column: 7)
!1873 = distinct !DILexicalBlock(scope: !1866, file: !3, line: 898, column: 8)
!1874 = !DILocation(line: 901, column: 7, scope: !1872)
!1875 = !DILocation(line: 902, column: 7, scope: !1872)
!1876 = !DILocation(line: 902, column: 31, scope: !1872)
!1877 = !DILocation(line: 902, column: 11, scope: !1872)
!1878 = !DILocation(line: 904, column: 12, scope: !1872)
!1879 = !DILocation(line: 904, column: 4, scope: !1872)
!1880 = !DILocation(line: 901, column: 7, scope: !1873)
!1881 = !DILocation(line: 900, column: 10, scope: !1873)
!1882 = !DILocation(line: 898, column: 8, scope: !1873)
!1883 = distinct !{!1883, !1870, !1884}
!1884 = !DILocation(line: 905, column: 5, scope: !1866)
!1885 = !DILocation(line: 906, column: 12, scope: !1823)
!1886 = !DILocation(line: 913, column: 17, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1826, file: !3, line: 913, column: 5)
!1888 = !DILocation(line: 0, scope: !1889)
!1889 = distinct !DILexicalBlock(scope: !1890, file: !3, line: 917, column: 13)
!1890 = distinct !DILexicalBlock(scope: !1891, file: !3, line: 916, column: 7)
!1891 = distinct !DILexicalBlock(scope: !1887, file: !3, line: 913, column: 5)
!1892 = !DILocation(line: 913, column: 10, scope: !1887)
!1893 = !DILocation(line: 0, scope: !1887)
!1894 = !DILocation(line: 0, scope: !1826)
!1895 = !DILocation(line: 913, column: 5, scope: !1887)
!1896 = !DILocation(line: 917, column: 13, scope: !1889)
!1897 = !DILocation(line: 917, column: 42, scope: !1889)
!1898 = !DILocation(line: 918, column: 6, scope: !1889)
!1899 = !DILocation(line: 918, column: 10, scope: !1889)
!1900 = !DILocation(line: 919, column: 10, scope: !1889)
!1901 = !DILocation(line: 917, column: 13, scope: !1890)
!1902 = !DILocation(line: 915, column: 17, scope: !1891)
!1903 = !DILocation(line: 913, column: 5, scope: !1891)
!1904 = distinct !{!1904, !1895, !1905}
!1905 = !DILocation(line: 921, column: 7, scope: !1887)
!1906 = !DILocation(line: 925, column: 9, scope: !1907)
!1907 = distinct !DILexicalBlock(scope: !1826, file: !3, line: 922, column: 9)
!1908 = !DILocation(line: 925, column: 27, scope: !1907)
!1909 = !DILocation(line: 925, column: 40, scope: !1907)
!1910 = !DILocation(line: 923, column: 7, scope: !1907)
!1911 = !DILocation(line: 928, column: 2, scope: !1814)
!1912 = !DILocation(line: 928, column: 2, scope: !1813)
!1913 = !DILocation(line: 875, column: 26, scope: !1816)
!1914 = !DILocation(line: 875, column: 3, scope: !1816)
!1915 = distinct !{!1915, !1833, !1916}
!1916 = !DILocation(line: 929, column: 5, scope: !1817)
!1917 = !DILocation(line: 930, column: 1, scope: !1804)
!1918 = distinct !DISubprogram(name: "decode_format_attr", scope: !3, file: !3, line: 177, type: !1919, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1921)
!1919 = !DISubroutineType(types: !1920)
!1920 = !{!258, !266, !998, !259}
!1921 = !{!1922, !1923, !1924, !1925, !1926, !1927, !1928}
!1922 = !DILocalVariable(name: "args", arg: 1, scope: !1918, file: !3, line: 177, type: !266)
!1923 = !DILocalVariable(name: "info", arg: 2, scope: !1918, file: !3, line: 177, type: !998)
!1924 = !DILocalVariable(name: "validated_p", arg: 3, scope: !1918, file: !3, line: 177, type: !259)
!1925 = !DILocalVariable(name: "format_type_id", scope: !1918, file: !3, line: 179, type: !266)
!1926 = !DILocalVariable(name: "format_num_expr", scope: !1918, file: !3, line: 180, type: !266)
!1927 = !DILocalVariable(name: "first_arg_num_expr", scope: !1918, file: !3, line: 181, type: !266)
!1928 = !DILocalVariable(name: "p", scope: !1929, file: !3, line: 192, type: !264)
!1929 = distinct !DILexicalBlock(scope: !1930, file: !3, line: 191, column: 5)
!1930 = distinct !DILexicalBlock(scope: !1918, file: !3, line: 184, column: 7)
!1931 = !DILocation(line: 0, scope: !1918)
!1932 = !DILocation(line: 179, column: 25, scope: !1918)
!1933 = !DILocation(line: 180, column: 26, scope: !1918)
!1934 = !DILocation(line: 182, column: 7, scope: !1918)
!1935 = !DILocation(line: 184, column: 7, scope: !1930)
!1936 = !DILocation(line: 184, column: 34, scope: !1930)
!1937 = !DILocation(line: 184, column: 7, scope: !1918)
!1938 = !DILocation(line: 186, column: 7, scope: !1939)
!1939 = distinct !DILexicalBlock(scope: !1930, file: !3, line: 185, column: 5)
!1940 = !DILocation(line: 187, column: 7, scope: !1939)
!1941 = !DILocation(line: 188, column: 7, scope: !1939)
!1942 = !DILocation(line: 192, column: 23, scope: !1929)
!1943 = !DILocation(line: 0, scope: !1929)
!1944 = !DILocation(line: 194, column: 11, scope: !1929)
!1945 = !DILocation(line: 196, column: 27, scope: !1929)
!1946 = !DILocation(line: 196, column: 13, scope: !1929)
!1947 = !DILocation(line: 196, column: 25, scope: !1929)
!1948 = !DILocation(line: 198, column: 29, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1929, file: !3, line: 198, column: 11)
!1950 = !DILocation(line: 198, column: 11, scope: !1929)
!1951 = !DILocation(line: 200, column: 4, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1949, file: !3, line: 199, column: 2)
!1953 = !DILocation(line: 201, column: 4, scope: !1952)
!1954 = !DILocation(line: 203, column: 4, scope: !1952)
!1955 = !DILocation(line: 207, column: 46, scope: !1956)
!1956 = distinct !DILexicalBlock(scope: !1918, file: !3, line: 207, column: 7)
!1957 = !DILocation(line: 207, column: 8, scope: !1956)
!1958 = !DILocation(line: 207, column: 7, scope: !1918)
!1959 = !DILocation(line: 209, column: 7, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 208, column: 5)
!1961 = !DILocation(line: 210, column: 7, scope: !1960)
!1962 = !DILocation(line: 213, column: 49, scope: !1963)
!1963 = distinct !DILexicalBlock(scope: !1918, file: !3, line: 213, column: 7)
!1964 = !DILocation(line: 213, column: 8, scope: !1963)
!1965 = !DILocation(line: 213, column: 7, scope: !1918)
!1966 = !DILocation(line: 215, column: 7, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !1963, file: !3, line: 214, column: 5)
!1968 = !DILocation(line: 216, column: 7, scope: !1967)
!1969 = !DILocation(line: 219, column: 13, scope: !1970)
!1970 = distinct !DILexicalBlock(scope: !1918, file: !3, line: 219, column: 7)
!1971 = !DILocation(line: 219, column: 27, scope: !1970)
!1972 = !DILocation(line: 219, column: 32, scope: !1970)
!1973 = !DILocation(line: 219, column: 64, scope: !1970)
!1974 = !DILocation(line: 219, column: 55, scope: !1970)
!1975 = !DILocation(line: 219, column: 7, scope: !1918)
!1976 = !DILocation(line: 221, column: 7, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1970, file: !3, line: 220, column: 5)
!1978 = !DILocation(line: 222, column: 7, scope: !1977)
!1979 = !DILocation(line: 223, column: 7, scope: !1977)
!1980 = !DILocation(line: 227, column: 1, scope: !1918)
!1981 = distinct !DISubprogram(name: "check_format_info", scope: !3, file: !3, line: 1187, type: !1982, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1984)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{null, !998, !266}
!1984 = !{!1985, !1986, !1987, !1988, !1989, !1990}
!1985 = !DILocalVariable(name: "info", arg: 1, scope: !1981, file: !3, line: 1187, type: !998)
!1986 = !DILocalVariable(name: "params", arg: 2, scope: !1981, file: !3, line: 1187, type: !266)
!1987 = !DILocalVariable(name: "format_ctx", scope: !1981, file: !3, line: 1189, type: !982)
!1988 = !DILocalVariable(name: "arg_num", scope: !1981, file: !3, line: 1190, type: !320)
!1989 = !DILocalVariable(name: "format_tree", scope: !1981, file: !3, line: 1191, type: !266)
!1990 = !DILocalVariable(name: "res", scope: !1981, file: !3, line: 1192, type: !987)
!1991 = !DILocation(line: 0, scope: !1981)
!1992 = !DILocation(line: 1189, column: 3, scope: !1981)
!1993 = !DILocation(line: 1192, column: 3, scope: !1981)
!1994 = !DILocation(line: 0, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1996, file: !3, line: 1199, column: 11)
!1996 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 1196, column: 5)
!1997 = distinct !DILexicalBlock(scope: !1998, file: !3, line: 1195, column: 3)
!1998 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1195, column: 3)
!1999 = !DILocation(line: 1195, column: 8, scope: !1998)
!2000 = !DILocation(line: 0, scope: !1998)
!2001 = !DILocation(line: 1197, column: 18, scope: !2002)
!2002 = distinct !DILexicalBlock(scope: !1996, file: !3, line: 1197, column: 11)
!2003 = !DILocation(line: 1197, column: 11, scope: !1996)
!2004 = !DILocation(line: 1199, column: 28, scope: !1995)
!2005 = !DILocation(line: 1199, column: 19, scope: !1995)
!2006 = !DILocation(line: 1199, column: 11, scope: !1996)
!2007 = !DILocation(line: 1201, column: 16, scope: !1996)
!2008 = !DILocation(line: 1195, column: 23, scope: !1997)
!2009 = !DILocation(line: 1195, column: 3, scope: !1997)
!2010 = distinct !{!2010, !2011, !2012}
!2011 = !DILocation(line: 1195, column: 3, scope: !1998)
!2012 = !DILocation(line: 1202, column: 5, scope: !1998)
!2013 = !DILocation(line: 1203, column: 17, scope: !1981)
!2014 = !DILocation(line: 1204, column: 12, scope: !1981)
!2015 = !DILocation(line: 1205, column: 19, scope: !2016)
!2016 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1205, column: 7)
!2017 = !DILocation(line: 1205, column: 7, scope: !1981)
!2018 = !DILocation(line: 1208, column: 7, scope: !1981)
!2019 = !DILocation(line: 1208, column: 26, scope: !1981)
!2020 = !DILocation(line: 1209, column: 7, scope: !1981)
!2021 = !DILocation(line: 1209, column: 25, scope: !1981)
!2022 = !DILocation(line: 1210, column: 7, scope: !1981)
!2023 = !DILocation(line: 1210, column: 32, scope: !1981)
!2024 = !DILocation(line: 1211, column: 7, scope: !1981)
!2025 = !DILocation(line: 1211, column: 19, scope: !1981)
!2026 = !DILocation(line: 1212, column: 7, scope: !1981)
!2027 = !DILocation(line: 1212, column: 20, scope: !1981)
!2028 = !DILocation(line: 1213, column: 7, scope: !1981)
!2029 = !DILocation(line: 1213, column: 27, scope: !1981)
!2030 = !DILocation(line: 1214, column: 7, scope: !1981)
!2031 = !DILocation(line: 1214, column: 20, scope: !1981)
!2032 = !DILocation(line: 1216, column: 14, scope: !1981)
!2033 = !DILocation(line: 1216, column: 18, scope: !1981)
!2034 = !DILocation(line: 1217, column: 14, scope: !1981)
!2035 = !DILocation(line: 1217, column: 19, scope: !1981)
!2036 = !DILocation(line: 1218, column: 14, scope: !1981)
!2037 = !DILocation(line: 1218, column: 21, scope: !1981)
!2038 = !DILocation(line: 1220, column: 3, scope: !1981)
!2039 = !DILocation(line: 1223, column: 11, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1223, column: 7)
!2041 = !DILocation(line: 1223, column: 30, scope: !2040)
!2042 = !DILocation(line: 1223, column: 7, scope: !1981)
!2043 = !DILocation(line: 1228, column: 13, scope: !2044)
!2044 = distinct !DILexicalBlock(scope: !2045, file: !3, line: 1228, column: 11)
!2045 = distinct !DILexicalBlock(scope: !2040, file: !3, line: 1224, column: 5)
!2046 = !DILocation(line: 1228, column: 32, scope: !2044)
!2047 = !DILocation(line: 1228, column: 45, scope: !2044)
!2048 = !DILocation(line: 1228, column: 51, scope: !2044)
!2049 = !DILocation(line: 1228, column: 11, scope: !2045)
!2050 = !DILocation(line: 1232, column: 4, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !2044, file: !3, line: 1229, column: 2)
!2052 = !DILocation(line: 1234, column: 2, scope: !2051)
!2053 = !DILocation(line: 1235, column: 22, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !2044, file: !3, line: 1235, column: 16)
!2055 = !DILocation(line: 1235, column: 36, scope: !2054)
!2056 = !DILocation(line: 1235, column: 16, scope: !2044)
!2057 = !DILocation(line: 1239, column: 4, scope: !2058)
!2058 = distinct !DILexicalBlock(scope: !2054, file: !3, line: 1236, column: 2)
!2059 = !DILocation(line: 1239, column: 19, scope: !2058)
!2060 = !DILocation(line: 1239, column: 23, scope: !2058)
!2061 = !DILocation(line: 0, scope: !2058)
!2062 = !DILocation(line: 1241, column: 12, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2058, file: !3, line: 1240, column: 6)
!2064 = !DILocation(line: 1243, column: 17, scope: !2063)
!2065 = distinct !{!2065, !2057, !2066}
!2066 = !DILocation(line: 1245, column: 6, scope: !2058)
!2067 = !DILocation(line: 1246, column: 20, scope: !2068)
!2068 = distinct !DILexicalBlock(scope: !2058, file: !3, line: 1246, column: 8)
!2069 = !DILocation(line: 1246, column: 23, scope: !2068)
!2070 = !DILocation(line: 1246, column: 8, scope: !2058)
!2071 = !DILocation(line: 1247, column: 6, scope: !2068)
!2072 = !DILocation(line: 1249, column: 28, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2068, file: !3, line: 1249, column: 13)
!2074 = !DILocation(line: 1249, column: 25, scope: !2073)
!2075 = !DILocation(line: 1250, column: 6, scope: !2073)
!2076 = !DILocation(line: 1253, column: 6, scope: !2073)
!2077 = !DILocation(line: 1265, column: 11, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1265, column: 7)
!2079 = !DILocation(line: 1265, column: 29, scope: !2078)
!2080 = !DILocation(line: 1265, column: 33, scope: !2078)
!2081 = !DILocation(line: 1265, column: 40, scope: !2078)
!2082 = !DILocation(line: 1265, column: 59, scope: !2078)
!2083 = !DILocation(line: 1266, column: 7, scope: !2078)
!2084 = !DILocation(line: 1266, column: 14, scope: !2078)
!2085 = !DILocation(line: 1266, column: 27, scope: !2078)
!2086 = !DILocation(line: 1265, column: 7, scope: !1981)
!2087 = !DILocation(line: 1267, column: 5, scope: !2078)
!2088 = !DILocation(line: 1268, column: 11, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1268, column: 7)
!2090 = !DILocation(line: 1268, column: 36, scope: !2089)
!2091 = !DILocation(line: 1268, column: 40, scope: !2089)
!2092 = !DILocation(line: 1268, column: 47, scope: !2089)
!2093 = !DILocation(line: 1268, column: 66, scope: !2089)
!2094 = !DILocation(line: 1269, column: 7, scope: !2089)
!2095 = !DILocation(line: 1269, column: 14, scope: !2089)
!2096 = !DILocation(line: 1269, column: 27, scope: !2089)
!2097 = !DILocation(line: 1268, column: 7, scope: !1981)
!2098 = !DILocation(line: 1270, column: 5, scope: !2089)
!2099 = !DILocation(line: 1271, column: 11, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1271, column: 7)
!2101 = !DILocation(line: 1271, column: 24, scope: !2100)
!2102 = !DILocation(line: 1271, column: 28, scope: !2100)
!2103 = !DILocation(line: 1271, column: 35, scope: !2100)
!2104 = !DILocation(line: 1271, column: 54, scope: !2100)
!2105 = !DILocation(line: 1272, column: 7, scope: !2100)
!2106 = !DILocation(line: 1272, column: 14, scope: !2100)
!2107 = !DILocation(line: 1272, column: 27, scope: !2100)
!2108 = !DILocation(line: 1271, column: 7, scope: !1981)
!2109 = !DILocation(line: 1274, column: 7, scope: !2100)
!2110 = !DILocation(line: 1274, column: 26, scope: !2100)
!2111 = !DILocation(line: 1274, column: 39, scope: !2100)
!2112 = !DILocation(line: 1273, column: 5, scope: !2100)
!2113 = !DILocation(line: 1276, column: 11, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1276, column: 7)
!2115 = !DILocation(line: 1276, column: 23, scope: !2114)
!2116 = !DILocation(line: 1276, column: 7, scope: !1981)
!2117 = !DILocation(line: 1277, column: 5, scope: !2114)
!2118 = !DILocation(line: 1279, column: 11, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1279, column: 7)
!2120 = !DILocation(line: 1279, column: 31, scope: !2119)
!2121 = !DILocation(line: 1279, column: 7, scope: !1981)
!2122 = !DILocation(line: 1280, column: 5, scope: !2119)
!2123 = !DILocation(line: 1281, column: 1, scope: !1981)
!2124 = distinct !DISubprogram(name: "decode_format_type", scope: !3, file: !3, line: 840, type: !1390, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2125)
!2125 = !{!2126, !2127, !2128, !2129}
!2126 = !DILocalVariable(name: "s", arg: 1, scope: !2124, file: !3, line: 840, type: !264)
!2127 = !DILocalVariable(name: "i", scope: !2124, file: !3, line: 842, type: !259)
!2128 = !DILocalVariable(name: "slen", scope: !2124, file: !3, line: 843, type: !259)
!2129 = !DILocalVariable(name: "alen", scope: !2130, file: !3, line: 849, type: !259)
!2130 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 848, column: 5)
!2131 = distinct !DILexicalBlock(scope: !2132, file: !3, line: 847, column: 3)
!2132 = distinct !DILexicalBlock(scope: !2124, file: !3, line: 847, column: 3)
!2133 = !DILocation(line: 0, scope: !2124)
!2134 = !DILocation(line: 845, column: 7, scope: !2124)
!2135 = !DILocation(line: 846, column: 10, scope: !2124)
!2136 = !DILocation(line: 0, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !2130, file: !3, line: 853, column: 11)
!2138 = !DILocation(line: 847, column: 8, scope: !2132)
!2139 = !DILocation(line: 0, scope: !2132)
!2140 = !DILocation(line: 847, column: 17, scope: !2131)
!2141 = !DILocation(line: 847, column: 3, scope: !2132)
!2142 = !DILocation(line: 850, column: 23, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2130, file: !3, line: 850, column: 11)
!2144 = !DILocation(line: 850, column: 39, scope: !2143)
!2145 = !DILocation(line: 850, column: 12, scope: !2143)
!2146 = !DILocation(line: 850, column: 11, scope: !2130)
!2147 = !DILocation(line: 852, column: 22, scope: !2130)
!2148 = !DILocation(line: 852, column: 38, scope: !2130)
!2149 = !DILocation(line: 852, column: 14, scope: !2130)
!2150 = !DILocation(line: 0, scope: !2130)
!2151 = !DILocation(line: 853, column: 24, scope: !2137)
!2152 = !DILocation(line: 853, column: 16, scope: !2137)
!2153 = !DILocation(line: 853, column: 28, scope: !2137)
!2154 = !DILocation(line: 853, column: 31, scope: !2137)
!2155 = !DILocation(line: 853, column: 36, scope: !2137)
!2156 = !DILocation(line: 853, column: 43, scope: !2137)
!2157 = !DILocation(line: 853, column: 46, scope: !2137)
!2158 = !DILocation(line: 853, column: 51, scope: !2137)
!2159 = !DILocation(line: 854, column: 4, scope: !2137)
!2160 = !DILocation(line: 854, column: 7, scope: !2137)
!2161 = !DILocation(line: 854, column: 19, scope: !2137)
!2162 = !DILocation(line: 854, column: 26, scope: !2137)
!2163 = !DILocation(line: 854, column: 29, scope: !2137)
!2164 = !DILocation(line: 854, column: 41, scope: !2137)
!2165 = !DILocation(line: 855, column: 4, scope: !2137)
!2166 = !DILocation(line: 855, column: 24, scope: !2137)
!2167 = !DILocation(line: 855, column: 40, scope: !2137)
!2168 = !DILocation(line: 855, column: 46, scope: !2137)
!2169 = !DILocation(line: 855, column: 8, scope: !2137)
!2170 = !DILocation(line: 853, column: 11, scope: !2130)
!2171 = !DILocation(line: 857, column: 5, scope: !2131)
!2172 = !DILocation(line: 847, column: 36, scope: !2131)
!2173 = !DILocation(line: 847, column: 3, scope: !2131)
!2174 = distinct !{!2174, !2141, !2175}
!2175 = !DILocation(line: 857, column: 5, scope: !2132)
!2176 = !DILocation(line: 859, column: 1, scope: !2124)
!2177 = distinct !DISubprogram(name: "handle_format_attribute", scope: !3, file: !3, line: 2775, type: !1692, scopeLine: 2777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2178)
!2178 = !{!2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187}
!2179 = !DILocalVariable(name: "node", arg: 1, scope: !2177, file: !3, line: 2775, type: !621)
!2180 = !DILocalVariable(name: "name", arg: 2, scope: !2177, file: !3, line: 2775, type: !266)
!2181 = !DILocalVariable(name: "args", arg: 3, scope: !2177, file: !3, line: 2775, type: !266)
!2182 = !DILocalVariable(name: "flags", arg: 4, scope: !2177, file: !3, line: 2776, type: !259)
!2183 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !2177, file: !3, line: 2776, type: !257)
!2184 = !DILocalVariable(name: "type", scope: !2177, file: !3, line: 2778, type: !266)
!2185 = !DILocalVariable(name: "info", scope: !2177, file: !3, line: 2779, type: !999)
!2186 = !DILocalVariable(name: "argument", scope: !2177, file: !3, line: 2780, type: !266)
!2187 = !DILocalVariable(name: "arg_num", scope: !2188, file: !3, line: 2814, type: !320)
!2188 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 2813, column: 2)
!2189 = distinct !DILexicalBlock(scope: !2190, file: !3, line: 2812, column: 11)
!2190 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 2807, column: 5)
!2191 = distinct !DILexicalBlock(scope: !2177, file: !3, line: 2806, column: 7)
!2192 = !DILocation(line: 0, scope: !2177)
!2193 = !DILocation(line: 2778, column: 15, scope: !2177)
!2194 = !DILocation(line: 2779, column: 3, scope: !2177)
!2195 = !DILocation(line: 2799, column: 8, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2177, file: !3, line: 2799, column: 7)
!2197 = !DILocation(line: 2799, column: 7, scope: !2177)
!2198 = !DILocation(line: 2801, column: 21, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 2800, column: 5)
!2200 = !DILocation(line: 2802, column: 7, scope: !2199)
!2201 = !DILocation(line: 2805, column: 14, scope: !2177)
!2202 = !DILocation(line: 2806, column: 7, scope: !2191)
!2203 = !DILocation(line: 2806, column: 7, scope: !2177)
!2204 = !DILocation(line: 2808, column: 48, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2190, file: !3, line: 2808, column: 11)
!2206 = !DILocation(line: 2808, column: 12, scope: !2205)
!2207 = !DILocation(line: 2808, column: 11, scope: !2190)
!2208 = !DILocation(line: 2812, column: 16, scope: !2189)
!2209 = !DILocation(line: 2812, column: 30, scope: !2189)
!2210 = !DILocation(line: 2812, column: 11, scope: !2190)
!2211 = !DILocation(line: 2818, column: 4, scope: !2188)
!2212 = !DILocation(line: 0, scope: !2188)
!2213 = !DILocation(line: 2819, column: 13, scope: !2188)
!2214 = !DILocation(line: 2819, column: 28, scope: !2188)
!2215 = distinct !{!2215, !2211, !2214}
!2216 = !DILocation(line: 2821, column: 16, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2188, file: !3, line: 2821, column: 8)
!2218 = !DILocation(line: 2821, column: 8, scope: !2188)
!2219 = !DILocation(line: 2823, column: 20, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2221, file: !3, line: 2823, column: 12)
!2221 = distinct !DILexicalBlock(scope: !2217, file: !3, line: 2822, column: 6)
!2222 = !DILocation(line: 2823, column: 12, scope: !2221)
!2223 = !DILocation(line: 2824, column: 3, scope: !2220)
!2224 = !DILocation(line: 2825, column: 22, scope: !2221)
!2225 = !DILocation(line: 2826, column: 8, scope: !2221)
!2226 = !DILocation(line: 2833, column: 8, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !2177, file: !3, line: 2833, column: 7)
!2228 = !DILocation(line: 2833, column: 26, scope: !2227)
!2229 = !DILocation(line: 2833, column: 39, scope: !2227)
!2230 = !DILocation(line: 2833, column: 45, scope: !2227)
!2231 = !DILocation(line: 2833, column: 75, scope: !2227)
!2232 = !DILocation(line: 2834, column: 7, scope: !2227)
!2233 = !DILocation(line: 2834, column: 15, scope: !2227)
!2234 = !DILocation(line: 2834, column: 29, scope: !2227)
!2235 = !DILocation(line: 2833, column: 7, scope: !2177)
!2236 = !DILocation(line: 2836, column: 7, scope: !2237)
!2237 = distinct !DILexicalBlock(scope: !2227, file: !3, line: 2835, column: 5)
!2238 = !DILocation(line: 2837, column: 21, scope: !2237)
!2239 = !DILocation(line: 2838, column: 7, scope: !2237)
!2240 = !DILocation(line: 2843, column: 24, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2177, file: !3, line: 2843, column: 7)
!2242 = !DILocation(line: 2844, column: 7, scope: !2241)
!2243 = !DILocation(line: 2844, column: 27, scope: !2241)
!2244 = !DILocation(line: 2845, column: 7, scope: !2241)
!2245 = !DILocation(line: 2845, column: 27, scope: !2241)
!2246 = !DILocation(line: 2846, column: 7, scope: !2241)
!2247 = !DILocation(line: 2846, column: 27, scope: !2241)
!2248 = !DILocation(line: 2847, column: 7, scope: !2241)
!2249 = !DILocation(line: 2847, column: 27, scope: !2241)
!2250 = !DILocation(line: 2848, column: 7, scope: !2241)
!2251 = !DILocation(line: 2848, column: 27, scope: !2241)
!2252 = !DILocation(line: 2843, column: 7, scope: !2177)
!2253 = !DILocation(line: 2852, column: 12, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2255, file: !3, line: 2852, column: 11)
!2255 = distinct !DILexicalBlock(scope: !2241, file: !3, line: 2849, column: 5)
!2256 = !DILocation(line: 2852, column: 11, scope: !2255)
!2257 = !DILocation(line: 2854, column: 4, scope: !2254)
!2258 = !DILocation(line: 2853, column: 38, scope: !2254)
!2259 = !DILocation(line: 2853, column: 15, scope: !2254)
!2260 = !DILocation(line: 2859, column: 16, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2255, file: !3, line: 2859, column: 11)
!2262 = !DILocation(line: 2853, column: 2, scope: !2254)
!2263 = !DILocation(line: 2859, column: 28, scope: !2261)
!2264 = !DILocation(line: 2859, column: 11, scope: !2255)
!2265 = !DILocation(line: 2860, column: 2, scope: !2261)
!2266 = !DILocation(line: 2863, column: 33, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2261, file: !3, line: 2863, column: 16)
!2268 = !DILocation(line: 2863, column: 16, scope: !2261)
!2269 = !DILocation(line: 2864, column: 2, scope: !2267)
!2270 = !DILocation(line: 2867, column: 33, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2267, file: !3, line: 2867, column: 16)
!2272 = !DILocation(line: 2868, column: 9, scope: !2271)
!2273 = !DILocation(line: 2868, column: 29, scope: !2271)
!2274 = !DILocation(line: 2869, column: 9, scope: !2271)
!2275 = !DILocation(line: 2869, column: 29, scope: !2271)
!2276 = !DILocation(line: 2870, column: 9, scope: !2271)
!2277 = !DILocation(line: 2870, column: 29, scope: !2271)
!2278 = !DILocation(line: 2867, column: 16, scope: !2267)
!2279 = !DILocation(line: 2871, column: 2, scope: !2271)
!2280 = !DILocation(line: 2873, column: 2, scope: !2271)
!2281 = !DILocation(line: 2877, column: 1, scope: !2177)
!2282 = !DILocation(line: 2403, column: 8, scope: !1178)
!2283 = !DILocation(line: 2403, column: 7, scope: !1172)
!2284 = !DILocation(line: 2412, column: 13, scope: !1177)
!2285 = !DILocation(line: 2412, column: 11, scope: !1177)
!2286 = !DILocation(line: 2413, column: 12, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !1177, file: !3, line: 2413, column: 11)
!2288 = !DILocation(line: 2413, column: 11, scope: !1177)
!2289 = !DILocation(line: 2415, column: 4, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2287, file: !3, line: 2414, column: 2)
!2291 = !DILocation(line: 2416, column: 4, scope: !2290)
!2292 = !DILocation(line: 2418, column: 13, scope: !1177)
!2293 = !DILocation(line: 2418, column: 11, scope: !1177)
!2294 = !DILocation(line: 2419, column: 12, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !1177, file: !3, line: 2419, column: 11)
!2296 = !DILocation(line: 2419, column: 16, scope: !2295)
!2297 = !DILocation(line: 2419, column: 19, scope: !2295)
!2298 = !DILocation(line: 2419, column: 35, scope: !2295)
!2299 = !DILocation(line: 2419, column: 11, scope: !1177)
!2300 = !DILocation(line: 2421, column: 4, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2295, file: !3, line: 2420, column: 2)
!2302 = !DILocation(line: 2422, column: 4, scope: !2301)
!2303 = !DILocation(line: 2424, column: 13, scope: !1177)
!2304 = !DILocation(line: 2424, column: 11, scope: !1177)
!2305 = !DILocation(line: 2425, column: 7, scope: !1177)
!2306 = !DILocation(line: 2426, column: 11, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !1177, file: !3, line: 2426, column: 11)
!2308 = !DILocation(line: 2426, column: 18, scope: !2307)
!2309 = !DILocation(line: 2426, column: 15, scope: !2307)
!2310 = !DILocation(line: 2426, column: 41, scope: !2307)
!2311 = !DILocation(line: 2426, column: 51, scope: !2307)
!2312 = !DILocation(line: 2426, column: 48, scope: !2307)
!2313 = !DILocation(line: 2426, column: 11, scope: !1177)
!2314 = !DILocation(line: 2428, column: 4, scope: !2315)
!2315 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 2427, column: 2)
!2316 = !DILocation(line: 2430, column: 4, scope: !2315)
!2317 = !DILocation(line: 2435, column: 10, scope: !1177)
!2318 = !DILocation(line: 2434, column: 38, scope: !1177)
!2319 = !DILocation(line: 0, scope: !1177)
!2320 = !DILocation(line: 2440, column: 11, scope: !1177)
!2321 = !DILocation(line: 2441, column: 11, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !1177, file: !3, line: 2441, column: 11)
!2323 = !DILocation(line: 2441, column: 18, scope: !2322)
!2324 = !DILocation(line: 2441, column: 15, scope: !2322)
!2325 = !DILocation(line: 2441, column: 11, scope: !1177)
!2326 = !DILocation(line: 2442, column: 2, scope: !2322)
!2327 = !DILocation(line: 2442, column: 34, scope: !2322)
!2328 = !DILocation(line: 2442, column: 40, scope: !2322)
!2329 = !DILocation(line: 2443, column: 23, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 2443, column: 16)
!2331 = !DILocation(line: 2443, column: 20, scope: !2330)
!2332 = !DILocation(line: 2443, column: 16, scope: !2322)
!2333 = !DILocation(line: 2444, column: 2, scope: !2330)
!2334 = !DILocation(line: 2444, column: 34, scope: !2330)
!2335 = !DILocation(line: 2444, column: 40, scope: !2330)
!2336 = !DILocation(line: 2446, column: 2, scope: !2330)
!2337 = !DILocation(line: 2449, column: 7, scope: !1177)
!2338 = !DILocation(line: 2449, column: 53, scope: !1177)
!2339 = !DILocation(line: 2449, column: 71, scope: !1177)
!2340 = !DILocation(line: 2451, column: 5, scope: !1178)
!2341 = !DILocation(line: 2452, column: 1, scope: !1172)
!2342 = !DILocation(line: 2462, column: 8, scope: !1188)
!2343 = !DILocation(line: 2462, column: 7, scope: !1182)
!2344 = !DILocation(line: 2470, column: 20, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !1187, file: !3, line: 2470, column: 11)
!2346 = !DILocation(line: 2470, column: 18, scope: !2345)
!2347 = !DILocation(line: 2470, column: 11, scope: !1187)
!2348 = !DILocation(line: 2472, column: 12, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2345, file: !3, line: 2471, column: 2)
!2350 = !DILocation(line: 2472, column: 10, scope: !2349)
!2351 = !DILocation(line: 2473, column: 8, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 2473, column: 8)
!2353 = !DILocation(line: 2473, column: 8, scope: !2349)
!2354 = !DILocation(line: 2475, column: 12, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2356, file: !3, line: 2475, column: 12)
!2356 = distinct !DILexicalBlock(scope: !2352, file: !3, line: 2474, column: 6)
!2357 = !DILocation(line: 2475, column: 30, scope: !2355)
!2358 = !DILocation(line: 2476, column: 5, scope: !2355)
!2359 = !DILocation(line: 2476, column: 8, scope: !2355)
!2360 = !DILocation(line: 2476, column: 29, scope: !2355)
!2361 = !DILocation(line: 2476, column: 26, scope: !2355)
!2362 = !DILocation(line: 2475, column: 12, scope: !2356)
!2363 = !DILocation(line: 2478, column: 5, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 2477, column: 3)
!2365 = !DILocation(line: 2479, column: 11, scope: !2364)
!2366 = !DILocation(line: 2480, column: 3, scope: !2364)
!2367 = !DILocation(line: 2482, column: 9, scope: !2355)
!2368 = !DILocation(line: 2489, column: 12, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !1187, file: !3, line: 2489, column: 11)
!2370 = !DILocation(line: 2489, column: 11, scope: !1187)
!2371 = !DILocation(line: 2492, column: 8, scope: !2369)
!2372 = !DILocation(line: 2491, column: 12, scope: !2369)
!2373 = !DILocation(line: 2490, column: 2, scope: !2369)
!2374 = !DILocation(line: 2490, column: 44, scope: !2369)
!2375 = !DILocation(line: 2490, column: 61, scope: !2369)
!2376 = !DILocation(line: 2495, column: 11, scope: !1186)
!2377 = !DILocation(line: 2495, column: 11, scope: !1187)
!2378 = !DILocation(line: 2497, column: 23, scope: !1185)
!2379 = !DILocation(line: 0, scope: !1185)
!2380 = !DILocation(line: 2498, column: 4, scope: !1185)
!2381 = !DILocation(line: 2498, column: 24, scope: !1185)
!2382 = !DILocation(line: 2498, column: 29, scope: !1185)
!2383 = !DILocation(line: 2499, column: 4, scope: !1185)
!2384 = !DILocation(line: 2499, column: 15, scope: !1185)
!2385 = !DILocation(line: 2499, column: 29, scope: !1185)
!2386 = !DILocation(line: 2500, column: 2, scope: !1185)
!2387 = !DILocation(line: 2502, column: 1, scope: !1182)
!2388 = !DILocation(line: 2512, column: 8, scope: !1198)
!2389 = !DILocation(line: 2512, column: 16, scope: !1198)
!2390 = !DILocation(line: 2512, column: 12, scope: !1198)
!2391 = !DILocation(line: 2512, column: 22, scope: !1198)
!2392 = !DILocation(line: 2524, column: 18, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2524, column: 11)
!2394 = !DILocation(line: 2524, column: 16, scope: !2393)
!2395 = !DILocation(line: 2524, column: 11, scope: !1197)
!2396 = !DILocation(line: 2526, column: 10, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2393, file: !3, line: 2525, column: 2)
!2398 = !DILocation(line: 2526, column: 8, scope: !2397)
!2399 = !DILocation(line: 2527, column: 8, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2397, file: !3, line: 2527, column: 8)
!2401 = !DILocation(line: 2527, column: 8, scope: !2397)
!2402 = !DILocation(line: 2529, column: 12, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2404, file: !3, line: 2529, column: 12)
!2404 = distinct !DILexicalBlock(scope: !2400, file: !3, line: 2528, column: 6)
!2405 = !DILocation(line: 2529, column: 28, scope: !2403)
!2406 = !DILocation(line: 2529, column: 12, scope: !2404)
!2407 = !DILocation(line: 2531, column: 5, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2403, file: !3, line: 2530, column: 3)
!2409 = !DILocation(line: 2532, column: 9, scope: !2408)
!2410 = !DILocation(line: 2533, column: 3, scope: !2408)
!2411 = !DILocation(line: 2535, column: 9, scope: !2403)
!2412 = !DILocation(line: 2535, column: 7, scope: !2403)
!2413 = !DILocation(line: 2541, column: 16, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2541, column: 11)
!2415 = !DILocation(line: 2541, column: 14, scope: !2414)
!2416 = !DILocation(line: 2541, column: 11, scope: !1197)
!2417 = !DILocation(line: 2543, column: 8, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2414, file: !3, line: 2542, column: 2)
!2419 = !DILocation(line: 2543, column: 6, scope: !2418)
!2420 = !DILocation(line: 2544, column: 8, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2418, file: !3, line: 2544, column: 8)
!2422 = !DILocation(line: 2544, column: 8, scope: !2418)
!2423 = !DILocation(line: 2546, column: 12, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2425, file: !3, line: 2546, column: 12)
!2425 = distinct !DILexicalBlock(scope: !2421, file: !3, line: 2545, column: 6)
!2426 = !DILocation(line: 2546, column: 26, scope: !2424)
!2427 = !DILocation(line: 2546, column: 12, scope: !2425)
!2428 = !DILocation(line: 2548, column: 5, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2424, file: !3, line: 2547, column: 3)
!2430 = !DILocation(line: 2549, column: 7, scope: !2429)
!2431 = !DILocation(line: 2550, column: 3, scope: !2429)
!2432 = !DILocation(line: 2551, column: 17, scope: !2433)
!2433 = distinct !DILexicalBlock(scope: !2424, file: !3, line: 2551, column: 17)
!2434 = !DILocation(line: 2551, column: 43, scope: !2433)
!2435 = !DILocation(line: 2551, column: 17, scope: !2424)
!2436 = !DILocation(line: 2553, column: 5, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2433, file: !3, line: 2552, column: 3)
!2438 = !DILocation(line: 2554, column: 7, scope: !2437)
!2439 = !DILocation(line: 2555, column: 3, scope: !2437)
!2440 = !DILocation(line: 2557, column: 7, scope: !2433)
!2441 = !DILocation(line: 2557, column: 5, scope: !2433)
!2442 = !DILocation(line: 2565, column: 18, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2565, column: 11)
!2444 = !DILocation(line: 2565, column: 16, scope: !2443)
!2445 = !DILocation(line: 2565, column: 11, scope: !1197)
!2446 = !DILocation(line: 2567, column: 10, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2443, file: !3, line: 2566, column: 2)
!2448 = !DILocation(line: 2567, column: 8, scope: !2447)
!2449 = !DILocation(line: 2568, column: 8, scope: !2450)
!2450 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 2568, column: 8)
!2451 = !DILocation(line: 2568, column: 8, scope: !2447)
!2452 = !DILocation(line: 2570, column: 12, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2454, file: !3, line: 2570, column: 12)
!2454 = distinct !DILexicalBlock(scope: !2450, file: !3, line: 2569, column: 6)
!2455 = !DILocation(line: 2570, column: 28, scope: !2453)
!2456 = !DILocation(line: 2570, column: 12, scope: !2454)
!2457 = !DILocation(line: 2572, column: 5, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2453, file: !3, line: 2571, column: 3)
!2459 = !DILocation(line: 2573, column: 9, scope: !2458)
!2460 = !DILocation(line: 2574, column: 3, scope: !2458)
!2461 = !DILocation(line: 2577, column: 11, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2453, file: !3, line: 2576, column: 3)
!2463 = !DILocation(line: 2577, column: 9, scope: !2462)
!2464 = !DILocation(line: 2578, column: 5, scope: !2462)
!2465 = !DILocation(line: 2579, column: 9, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2462, file: !3, line: 2579, column: 9)
!2467 = !DILocation(line: 2579, column: 16, scope: !2466)
!2468 = !DILocation(line: 2579, column: 13, scope: !2466)
!2469 = !DILocation(line: 2580, column: 9, scope: !2466)
!2470 = !DILocation(line: 2580, column: 19, scope: !2466)
!2471 = !DILocation(line: 2580, column: 16, scope: !2466)
!2472 = !DILocation(line: 2579, column: 9, scope: !2462)
!2473 = !DILocation(line: 2582, column: 9, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !2466, file: !3, line: 2581, column: 7)
!2475 = !DILocation(line: 2584, column: 13, scope: !2474)
!2476 = !DILocation(line: 2585, column: 7, scope: !2474)
!2477 = !DILocation(line: 2593, column: 12, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2593, column: 11)
!2479 = !DILocation(line: 2593, column: 11, scope: !1197)
!2480 = !DILocation(line: 2599, column: 7, scope: !2478)
!2481 = !DILocation(line: 2598, column: 12, scope: !2478)
!2482 = !DILocation(line: 2597, column: 4, scope: !2478)
!2483 = !DILocation(line: 2597, column: 50, scope: !2478)
!2484 = !DILocation(line: 2597, column: 68, scope: !2478)
!2485 = !DILocation(line: 2596, column: 48, scope: !2478)
!2486 = !DILocation(line: 2596, column: 66, scope: !2478)
!2487 = !DILocation(line: 2595, column: 48, scope: !2478)
!2488 = !DILocation(line: 2595, column: 66, scope: !2478)
!2489 = !DILocation(line: 2594, column: 45, scope: !2478)
!2490 = !DILocation(line: 2594, column: 63, scope: !2478)
!2491 = !DILocation(line: 2602, column: 11, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2602, column: 11)
!2493 = !DILocation(line: 2594, column: 2, scope: !2478)
!2494 = !DILocation(line: 2602, column: 11, scope: !1197)
!2495 = !DILocation(line: 2605, column: 8, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 2603, column: 2)
!2497 = !DILocation(line: 0, scope: !1197)
!2498 = !DILocation(line: 2606, column: 8, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2496, file: !3, line: 2606, column: 8)
!2500 = !DILocation(line: 2606, column: 15, scope: !2499)
!2501 = !DILocation(line: 2606, column: 12, scope: !2499)
!2502 = !DILocation(line: 2606, column: 8, scope: !2496)
!2503 = !DILocation(line: 2607, column: 6, scope: !2499)
!2504 = !DILocation(line: 2607, column: 17, scope: !2499)
!2505 = !DILocation(line: 2607, column: 23, scope: !2499)
!2506 = !DILocation(line: 2608, column: 20, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 2608, column: 13)
!2508 = !DILocation(line: 2608, column: 17, scope: !2507)
!2509 = !DILocation(line: 2608, column: 13, scope: !2499)
!2510 = !DILocation(line: 2609, column: 6, scope: !2507)
!2511 = !DILocation(line: 2609, column: 17, scope: !2507)
!2512 = !DILocation(line: 2609, column: 23, scope: !2507)
!2513 = !DILocation(line: 2611, column: 6, scope: !2507)
!2514 = !DILocation(line: 2615, column: 12, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2615, column: 11)
!2516 = !DILocation(line: 2615, column: 11, scope: !1197)
!2517 = !DILocation(line: 2618, column: 8, scope: !2515)
!2518 = !DILocation(line: 2617, column: 13, scope: !2515)
!2519 = !DILocation(line: 2616, column: 2, scope: !2515)
!2520 = !DILocation(line: 2616, column: 45, scope: !2515)
!2521 = !DILocation(line: 2616, column: 62, scope: !2515)
!2522 = !DILocation(line: 2621, column: 11, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2621, column: 11)
!2524 = !DILocation(line: 2621, column: 11, scope: !1197)
!2525 = !DILocation(line: 2623, column: 8, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2523, file: !3, line: 2622, column: 2)
!2527 = !DILocation(line: 2624, column: 4, scope: !2526)
!2528 = !DILocation(line: 2624, column: 25, scope: !2526)
!2529 = !DILocation(line: 2624, column: 30, scope: !2526)
!2530 = !DILocation(line: 2625, column: 4, scope: !2526)
!2531 = !DILocation(line: 2625, column: 16, scope: !2526)
!2532 = !DILocation(line: 2625, column: 30, scope: !2526)
!2533 = !DILocation(line: 2626, column: 2, scope: !2526)
!2534 = !DILocation(line: 2629, column: 12, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2629, column: 11)
!2536 = !DILocation(line: 2629, column: 11, scope: !1197)
!2537 = !DILocation(line: 2632, column: 9, scope: !2535)
!2538 = !DILocation(line: 2631, column: 14, scope: !2535)
!2539 = !DILocation(line: 2630, column: 2, scope: !2535)
!2540 = !DILocation(line: 2630, column: 46, scope: !2535)
!2541 = !DILocation(line: 2630, column: 63, scope: !2535)
!2542 = !DILocation(line: 2635, column: 11, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2635, column: 11)
!2544 = !DILocation(line: 2635, column: 11, scope: !1197)
!2545 = !DILocation(line: 2638, column: 8, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2543, file: !3, line: 2636, column: 2)
!2547 = !DILocation(line: 2639, column: 4, scope: !2546)
!2548 = !DILocation(line: 2639, column: 26, scope: !2546)
!2549 = !DILocation(line: 2639, column: 31, scope: !2546)
!2550 = !DILocation(line: 2640, column: 4, scope: !2546)
!2551 = !DILocation(line: 2640, column: 17, scope: !2546)
!2552 = !DILocation(line: 2640, column: 31, scope: !2546)
!2553 = !DILocation(line: 2641, column: 40, scope: !2546)
!2554 = !DILocation(line: 2641, column: 8, scope: !2546)
!2555 = !DILocation(line: 2642, column: 4, scope: !2546)
!2556 = !DILocation(line: 2642, column: 26, scope: !2546)
!2557 = !DILocation(line: 2642, column: 31, scope: !2546)
!2558 = !DILocation(line: 2643, column: 4, scope: !2546)
!2559 = !DILocation(line: 2643, column: 17, scope: !2546)
!2560 = !DILocation(line: 2643, column: 31, scope: !2546)
!2561 = !DILocation(line: 2644, column: 2, scope: !2546)
!2562 = !DILocation(line: 2647, column: 12, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2647, column: 11)
!2564 = !DILocation(line: 2647, column: 11, scope: !1197)
!2565 = !DILocation(line: 2650, column: 9, scope: !2563)
!2566 = !DILocation(line: 2649, column: 14, scope: !2563)
!2567 = !DILocation(line: 2648, column: 2, scope: !2563)
!2568 = !DILocation(line: 2648, column: 46, scope: !2563)
!2569 = !DILocation(line: 2648, column: 63, scope: !2563)
!2570 = !DILocation(line: 2653, column: 11, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2653, column: 11)
!2572 = !DILocation(line: 2653, column: 11, scope: !1197)
!2573 = !DILocation(line: 2656, column: 8, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2654, column: 2)
!2575 = !DILocation(line: 2657, column: 4, scope: !2574)
!2576 = !DILocation(line: 2657, column: 26, scope: !2574)
!2577 = !DILocation(line: 2657, column: 31, scope: !2574)
!2578 = !DILocation(line: 2658, column: 4, scope: !2574)
!2579 = !DILocation(line: 2658, column: 17, scope: !2574)
!2580 = !DILocation(line: 2658, column: 31, scope: !2574)
!2581 = !DILocation(line: 2659, column: 40, scope: !2574)
!2582 = !DILocation(line: 2659, column: 8, scope: !2574)
!2583 = !DILocation(line: 2660, column: 4, scope: !2574)
!2584 = !DILocation(line: 2660, column: 26, scope: !2574)
!2585 = !DILocation(line: 2660, column: 31, scope: !2574)
!2586 = !DILocation(line: 2661, column: 4, scope: !2574)
!2587 = !DILocation(line: 2661, column: 17, scope: !2574)
!2588 = !DILocation(line: 2661, column: 31, scope: !2574)
!2589 = !DILocation(line: 2662, column: 2, scope: !2574)
!2590 = !DILocation(line: 2665, column: 12, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2665, column: 11)
!2592 = !DILocation(line: 2665, column: 11, scope: !1197)
!2593 = !DILocation(line: 2668, column: 4, scope: !2591)
!2594 = !DILocation(line: 2667, column: 16, scope: !2591)
!2595 = !DILocation(line: 2666, column: 2, scope: !2591)
!2596 = !DILocation(line: 2666, column: 48, scope: !2591)
!2597 = !DILocation(line: 2666, column: 65, scope: !2591)
!2598 = !DILocation(line: 2671, column: 11, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2671, column: 11)
!2600 = !DILocation(line: 2671, column: 11, scope: !1197)
!2601 = !DILocation(line: 2674, column: 8, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2599, file: !3, line: 2672, column: 2)
!2603 = !DILocation(line: 2675, column: 4, scope: !2602)
!2604 = !DILocation(line: 2675, column: 28, scope: !2602)
!2605 = !DILocation(line: 2675, column: 33, scope: !2602)
!2606 = !DILocation(line: 2676, column: 4, scope: !2602)
!2607 = !DILocation(line: 2676, column: 19, scope: !2602)
!2608 = !DILocation(line: 2676, column: 33, scope: !2602)
!2609 = !DILocation(line: 2677, column: 40, scope: !2602)
!2610 = !DILocation(line: 2677, column: 8, scope: !2602)
!2611 = !DILocation(line: 2678, column: 4, scope: !2602)
!2612 = !DILocation(line: 2678, column: 28, scope: !2602)
!2613 = !DILocation(line: 2678, column: 33, scope: !2602)
!2614 = !DILocation(line: 2679, column: 4, scope: !2602)
!2615 = !DILocation(line: 2679, column: 19, scope: !2602)
!2616 = !DILocation(line: 2679, column: 33, scope: !2602)
!2617 = !DILocation(line: 2680, column: 2, scope: !2602)
!2618 = !DILocation(line: 2682, column: 1, scope: !1194)
!2619 = distinct !DISubprogram(name: "convert_format_name_to_system_name", scope: !3, file: !3, line: 2711, type: !2620, scopeLine: 2712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2622)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!264, !264}
!2622 = !{!2623, !2624}
!2623 = !DILocalVariable(name: "attr_name", arg: 1, scope: !2619, file: !3, line: 2711, type: !264)
!2624 = !DILocalVariable(name: "i", scope: !2619, file: !3, line: 2713, type: !259)
!2625 = !DILocation(line: 0, scope: !2619)
!2626 = !DILocation(line: 2715, column: 17, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 2715, column: 7)
!2628 = !DILocation(line: 2715, column: 25, scope: !2627)
!2629 = !DILocation(line: 2715, column: 28, scope: !2627)
!2630 = !DILocation(line: 2715, column: 39, scope: !2627)
!2631 = !DILocation(line: 2716, column: 7, scope: !2627)
!2632 = !DILocation(line: 2716, column: 10, scope: !2627)
!2633 = !DILocation(line: 2716, column: 41, scope: !2627)
!2634 = !DILocation(line: 2715, column: 7, scope: !2619)
!2635 = !DILocation(line: 2739, column: 3, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 2739, column: 3)
!2637 = !DILocation(line: 0, scope: !2636)
!2638 = !DILocation(line: 2740, column: 65, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2636, file: !3, line: 2739, column: 3)
!2640 = !DILocation(line: 2743, column: 66, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2642, file: !3, line: 2743, column: 11)
!2642 = distinct !DILexicalBlock(scope: !2639, file: !3, line: 2742, column: 5)
!2643 = !DILocation(line: 2743, column: 11, scope: !2641)
!2644 = !DILocation(line: 2743, column: 11, scope: !2642)
!2645 = !DILocation(line: 2746, column: 66, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2642, file: !3, line: 2746, column: 11)
!2647 = !DILocation(line: 2746, column: 11, scope: !2646)
!2648 = !DILocation(line: 2746, column: 11, scope: !2642)
!2649 = !DILocation(line: 2748, column: 9, scope: !2646)
!2650 = !DILocation(line: 2741, column: 8, scope: !2639)
!2651 = !DILocation(line: 2739, column: 3, scope: !2639)
!2652 = distinct !{!2652, !2635, !2653}
!2653 = !DILocation(line: 2749, column: 5, scope: !2636)
!2654 = !DILocation(line: 2752, column: 1, scope: !2619)
!2655 = distinct !DISubprogram(name: "cmp_attribs", scope: !3, file: !3, line: 2757, type: !2656, scopeLine: 2758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2658)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{!258, !264, !264}
!2658 = !{!2659, !2660, !2661, !2662}
!2659 = !DILocalVariable(name: "tattr_name", arg: 1, scope: !2655, file: !3, line: 2757, type: !264)
!2660 = !DILocalVariable(name: "attr_name", arg: 2, scope: !2655, file: !3, line: 2757, type: !264)
!2661 = !DILocalVariable(name: "alen", scope: !2655, file: !3, line: 2759, type: !259)
!2662 = !DILocalVariable(name: "slen", scope: !2655, file: !3, line: 2760, type: !259)
!2663 = !DILocation(line: 0, scope: !2655)
!2664 = !DILocation(line: 2759, column: 14, scope: !2655)
!2665 = !DILocation(line: 2760, column: 15, scope: !2655)
!2666 = !DILocation(line: 2760, column: 28, scope: !2655)
!2667 = !DILocation(line: 2761, column: 12, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2655, file: !3, line: 2761, column: 7)
!2669 = !DILocation(line: 2761, column: 16, scope: !2668)
!2670 = !DILocation(line: 2761, column: 19, scope: !2668)
!2671 = !DILocation(line: 2761, column: 32, scope: !2668)
!2672 = !DILocation(line: 2761, column: 39, scope: !2668)
!2673 = !DILocation(line: 2761, column: 42, scope: !2668)
!2674 = !DILocation(line: 2761, column: 55, scope: !2668)
!2675 = !DILocation(line: 2762, column: 7, scope: !2668)
!2676 = !DILocation(line: 2762, column: 10, scope: !2668)
!2677 = !DILocation(line: 2762, column: 30, scope: !2668)
!2678 = !DILocation(line: 2762, column: 37, scope: !2668)
!2679 = !DILocation(line: 2762, column: 40, scope: !2668)
!2680 = !DILocation(line: 2762, column: 60, scope: !2668)
!2681 = !DILocation(line: 2761, column: 7, scope: !2655)
!2682 = !DILocation(line: 2764, column: 17, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 2763, column: 5)
!2684 = !DILocation(line: 2765, column: 12, scope: !2683)
!2685 = !DILocation(line: 2766, column: 5, scope: !2683)
!2686 = !DILocation(line: 2767, column: 12, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2655, file: !3, line: 2767, column: 7)
!2688 = !DILocation(line: 2767, column: 20, scope: !2687)
!2689 = !DILocation(line: 2767, column: 55, scope: !2687)
!2690 = !DILocation(line: 2767, column: 23, scope: !2687)
!2691 = !DILocation(line: 2767, column: 61, scope: !2687)
!2692 = !DILocation(line: 2767, column: 7, scope: !2655)
!2693 = !DILocation(line: 2770, column: 1, scope: !2655)
!2694 = distinct !DISubprogram(name: "check_format_arg", scope: !3, file: !3, line: 1289, type: !2695, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2697)
!2695 = !DISubroutineType(types: !2696)
!2696 = !{null, !263, !266, !320}
!2697 = !{!2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2732, !2735, !2736}
!2698 = !DILocalVariable(name: "ctx", arg: 1, scope: !2694, file: !3, line: 1289, type: !263)
!2699 = !DILocalVariable(name: "format_tree", arg: 2, scope: !2694, file: !3, line: 1289, type: !266)
!2700 = !DILocalVariable(name: "arg_num", arg: 3, scope: !2694, file: !3, line: 1290, type: !320)
!2701 = !DILocalVariable(name: "format_ctx", scope: !2694, file: !3, line: 1292, type: !981)
!2702 = !DILocalVariable(name: "res", scope: !2694, file: !3, line: 1293, type: !986)
!2703 = !DILocalVariable(name: "info", scope: !2694, file: !3, line: 1294, type: !998)
!2704 = !DILocalVariable(name: "params", scope: !2694, file: !3, line: 1295, type: !266)
!2705 = !DILocalVariable(name: "format_length", scope: !2694, file: !3, line: 1297, type: !259)
!2706 = !DILocalVariable(name: "offset", scope: !2694, file: !3, line: 1298, type: !322)
!2707 = !DILocalVariable(name: "format_chars", scope: !2694, file: !3, line: 1299, type: !264)
!2708 = !DILocalVariable(name: "array_size", scope: !2694, file: !3, line: 1300, type: !266)
!2709 = !DILocalVariable(name: "array_init", scope: !2694, file: !3, line: 1301, type: !266)
!2710 = !DILocalVariable(name: "fwt_pool", scope: !2694, file: !3, line: 1302, type: !2711)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !2712, line: 58, baseType: !2713)
!2712 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !2712, line: 32, size: 704, elements: !2715)
!2715 = !{!2716, !2717, !2718, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2714, file: !2712, line: 34, baseType: !264, size: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !2714, file: !2712, line: 38, baseType: !1293, size: 64, offset: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !2714, file: !2712, line: 41, baseType: !2719, size: 64, offset: 128)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !2712, line: 30, baseType: !2720)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !2712, line: 26, size: 64, elements: !2722)
!2722 = !{!2723}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2721, file: !2712, line: 28, baseType: !2720, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !2714, file: !2712, line: 45, baseType: !261, size: 64, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !2714, file: !2712, line: 49, baseType: !1293, size: 64, offset: 256)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !2714, file: !2712, line: 51, baseType: !1293, size: 64, offset: 320)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !2714, file: !2712, line: 52, baseType: !1293, size: 64, offset: 384)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !2714, file: !2712, line: 53, baseType: !1293, size: 64, offset: 448)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !2714, file: !2712, line: 54, baseType: !2719, size: 64, offset: 512)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2714, file: !2712, line: 55, baseType: !1293, size: 64, offset: 576)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !2714, file: !2712, line: 56, baseType: !1293, size: 64, offset: 640)
!2732 = !DILocalVariable(name: "arg0", scope: !2733, file: !3, line: 1327, type: !266)
!2733 = distinct !DILexicalBlock(scope: !2734, file: !3, line: 1326, column: 5)
!2734 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1325, column: 7)
!2735 = !DILocalVariable(name: "arg1", scope: !2733, file: !3, line: 1327, type: !266)
!2736 = !DILocalVariable(name: "array_size_value", scope: !2737, file: !3, line: 1387, type: !322)
!2737 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 1386, column: 2)
!2738 = distinct !DILexicalBlock(scope: !2739, file: !3, line: 1385, column: 11)
!2739 = distinct !DILexicalBlock(scope: !2740, file: !3, line: 1381, column: 5)
!2740 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1380, column: 7)
!2741 = !DILocation(line: 0, scope: !2694)
!2742 = !DILocation(line: 1293, column: 43, scope: !2694)
!2743 = !DILocation(line: 1294, column: 44, scope: !2694)
!2744 = !DILocation(line: 1295, column: 29, scope: !2694)
!2745 = !DILocation(line: 1304, column: 7, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1304, column: 7)
!2747 = !DILocation(line: 1304, column: 7, scope: !2694)
!2748 = !DILocation(line: 0, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 1305, column: 5)
!2750 = !DILocation(line: 1308, column: 7, scope: !2749)
!2751 = !DILocation(line: 1308, column: 22, scope: !2749)
!2752 = !DILocation(line: 1308, column: 26, scope: !2749)
!2753 = !DILocation(line: 1310, column: 8, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 1309, column: 2)
!2755 = !DILocation(line: 1312, column: 13, scope: !2754)
!2756 = distinct !{!2756, !2750, !2757}
!2757 = !DILocation(line: 1314, column: 2, scope: !2749)
!2758 = !DILocation(line: 1316, column: 11, scope: !2749)
!2759 = !DILocation(line: 1317, column: 7, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 1316, column: 11)
!2761 = !DILocation(line: 1317, column: 19, scope: !2760)
!2762 = !DILocation(line: 1317, column: 2, scope: !2760)
!2763 = !DILocation(line: 1319, column: 7, scope: !2760)
!2764 = !DILocation(line: 1319, column: 24, scope: !2760)
!2765 = !DILocation(line: 1325, column: 7, scope: !2734)
!2766 = !DILocation(line: 1325, column: 31, scope: !2734)
!2767 = !DILocation(line: 1325, column: 7, scope: !2694)
!2768 = !DILocation(line: 1329, column: 14, scope: !2733)
!2769 = !DILocation(line: 0, scope: !2733)
!2770 = !DILocation(line: 1330, column: 14, scope: !2733)
!2771 = !DILocation(line: 1331, column: 7, scope: !2733)
!2772 = !DILocation(line: 1332, column: 7, scope: !2733)
!2773 = !DILocation(line: 1333, column: 11, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 1333, column: 11)
!2775 = !DILocation(line: 1333, column: 28, scope: !2774)
!2776 = !DILocation(line: 1333, column: 11, scope: !2733)
!2777 = !DILocation(line: 1337, column: 9, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2774, file: !3, line: 1336, column: 2)
!2779 = !DILocation(line: 1337, column: 27, scope: !2778)
!2780 = !DILocation(line: 1338, column: 4, scope: !2778)
!2781 = !DILocation(line: 1340, column: 12, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 1340, column: 11)
!2783 = !DILocation(line: 1341, column: 4, scope: !2782)
!2784 = !DILocation(line: 1341, column: 17, scope: !2782)
!2785 = !DILocation(line: 1341, column: 41, scope: !2782)
!2786 = !DILocation(line: 1340, column: 11, scope: !2733)
!2787 = !DILocation(line: 1343, column: 9, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2782, file: !3, line: 1342, column: 2)
!2789 = !DILocation(line: 1343, column: 27, scope: !2788)
!2790 = !DILocation(line: 1344, column: 4, scope: !2788)
!2791 = !DILocation(line: 0, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1347, column: 7)
!2793 = !DILocation(line: 1347, column: 7, scope: !2792)
!2794 = !DILocation(line: 1347, column: 31, scope: !2792)
!2795 = !DILocation(line: 1347, column: 7, scope: !2694)
!2796 = !DILocation(line: 1349, column: 12, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 1348, column: 5)
!2798 = !DILocation(line: 1349, column: 30, scope: !2797)
!2799 = !DILocation(line: 1350, column: 7, scope: !2797)
!2800 = !DILocation(line: 1352, column: 17, scope: !2694)
!2801 = !DILocation(line: 1353, column: 7, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1353, column: 7)
!2803 = !DILocation(line: 1353, column: 31, scope: !2802)
!2804 = !DILocation(line: 1354, column: 7, scope: !2802)
!2805 = !DILocation(line: 1354, column: 25, scope: !2802)
!2806 = !DILocation(line: 1354, column: 10, scope: !2802)
!2807 = !DILocation(line: 1355, column: 7, scope: !2802)
!2808 = !DILocation(line: 1355, column: 35, scope: !2802)
!2809 = !DILocation(line: 1355, column: 21, scope: !2802)
!2810 = !DILocation(line: 1355, column: 18, scope: !2802)
!2811 = !DILocation(line: 1355, column: 70, scope: !2802)
!2812 = !DILocation(line: 1353, column: 7, scope: !2694)
!2813 = !DILocation(line: 1356, column: 19, scope: !2802)
!2814 = !DILocation(line: 1356, column: 5, scope: !2802)
!2815 = !DILocation(line: 1357, column: 7, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1357, column: 7)
!2817 = !DILocation(line: 1357, column: 31, scope: !2816)
!2818 = !DILocation(line: 1358, column: 7, scope: !2816)
!2819 = !DILocation(line: 1358, column: 10, scope: !2816)
!2820 = !DILocation(line: 1358, column: 46, scope: !2816)
!2821 = !DILocation(line: 1359, column: 7, scope: !2816)
!2822 = !DILocation(line: 1359, column: 24, scope: !2816)
!2823 = !DILocation(line: 1359, column: 59, scope: !2816)
!2824 = !DILocation(line: 1360, column: 7, scope: !2816)
!2825 = !DILocation(line: 1360, column: 10, scope: !2816)
!2826 = !DILocation(line: 1360, column: 33, scope: !2816)
!2827 = !DILocation(line: 1357, column: 7, scope: !2694)
!2828 = !DILocation(line: 1365, column: 20, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 1361, column: 5)
!2830 = !DILocation(line: 1367, column: 5, scope: !2829)
!2831 = !DILocation(line: 1368, column: 7, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1368, column: 7)
!2833 = !DILocation(line: 1368, column: 31, scope: !2832)
!2834 = !DILocation(line: 1368, column: 7, scope: !2694)
!2835 = !DILocation(line: 1370, column: 12, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 1369, column: 5)
!2837 = !DILocation(line: 1370, column: 30, scope: !2836)
!2838 = !DILocation(line: 1371, column: 7, scope: !2836)
!2839 = !DILocation(line: 1373, column: 7, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1373, column: 7)
!2841 = !DILocation(line: 1373, column: 66, scope: !2840)
!2842 = !DILocation(line: 1373, column: 63, scope: !2840)
!2843 = !DILocation(line: 1373, column: 7, scope: !2694)
!2844 = !DILocation(line: 1375, column: 12, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2840, file: !3, line: 1374, column: 5)
!2846 = !DILocation(line: 1375, column: 23, scope: !2845)
!2847 = !DILocation(line: 1376, column: 7, scope: !2845)
!2848 = !DILocation(line: 1378, column: 18, scope: !2694)
!2849 = !DILocation(line: 1379, column: 19, scope: !2694)
!2850 = !DILocation(line: 1380, column: 18, scope: !2740)
!2851 = !DILocation(line: 1380, column: 7, scope: !2694)
!2852 = !DILocation(line: 1383, column: 7, scope: !2739)
!2853 = !DILocation(line: 1385, column: 11, scope: !2738)
!2854 = !DILocation(line: 1385, column: 11, scope: !2739)
!2855 = !DILocation(line: 1387, column: 37, scope: !2737)
!2856 = !DILocation(line: 0, scope: !2737)
!2857 = !DILocation(line: 1388, column: 25, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 1388, column: 8)
!2859 = !DILocation(line: 1389, column: 8, scope: !2858)
!2860 = !DILocation(line: 1389, column: 28, scope: !2858)
!2861 = !DILocation(line: 1390, column: 11, scope: !2858)
!2862 = !DILocation(line: 1390, column: 25, scope: !2858)
!2863 = !DILocation(line: 1390, column: 8, scope: !2858)
!2864 = !DILocation(line: 1391, column: 22, scope: !2858)
!2865 = !DILocation(line: 1394, column: 7, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1394, column: 7)
!2867 = !DILocation(line: 1394, column: 7, scope: !2694)
!2868 = !DILocation(line: 1396, column: 21, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2870, file: !3, line: 1396, column: 11)
!2870 = distinct !DILexicalBlock(scope: !2866, file: !3, line: 1395, column: 5)
!2871 = !DILocation(line: 1396, column: 18, scope: !2869)
!2872 = !DILocation(line: 1396, column: 11, scope: !2870)
!2873 = !DILocation(line: 1398, column: 9, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 1397, column: 2)
!2875 = !DILocation(line: 1398, column: 27, scope: !2874)
!2876 = !DILocation(line: 1399, column: 4, scope: !2874)
!2877 = !DILocation(line: 1401, column: 20, scope: !2870)
!2878 = !DILocation(line: 1402, column: 21, scope: !2870)
!2879 = !DILocation(line: 1403, column: 5, scope: !2870)
!2880 = !DILocation(line: 1404, column: 21, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1404, column: 7)
!2882 = !DILocation(line: 1404, column: 25, scope: !2881)
!2883 = !DILocation(line: 1404, column: 41, scope: !2881)
!2884 = !DILocation(line: 1404, column: 28, scope: !2881)
!2885 = !DILocation(line: 1404, column: 58, scope: !2881)
!2886 = !DILocation(line: 1404, column: 7, scope: !2694)
!2887 = !DILocation(line: 1406, column: 12, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 1405, column: 5)
!2889 = !DILocation(line: 1406, column: 31, scope: !2888)
!2890 = !DILocation(line: 1407, column: 7, scope: !2888)
!2891 = !DILocation(line: 1409, column: 21, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1409, column: 7)
!2893 = !DILocation(line: 1409, column: 7, scope: !2694)
!2894 = !DILocation(line: 1416, column: 3, scope: !2694)
!2895 = !DILocation(line: 1411, column: 12, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 1410, column: 5)
!2897 = !DILocation(line: 1411, column: 24, scope: !2896)
!2898 = !DILocation(line: 1412, column: 7, scope: !2896)
!2899 = !DILocation(line: 1416, column: 18, scope: !2694)
!2900 = !DILocation(line: 1416, column: 22, scope: !2694)
!2901 = !DILocation(line: 1418, column: 18, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 1418, column: 11)
!2903 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1417, column: 5)
!2904 = !DILocation(line: 1418, column: 11, scope: !2903)
!2905 = !DILocation(line: 1420, column: 16, scope: !2903)
!2906 = distinct !{!2906, !2894, !2907}
!2907 = !DILocation(line: 1422, column: 5, scope: !2694)
!2908 = !DILocation(line: 1426, column: 8, scope: !2694)
!2909 = !DILocation(line: 1426, column: 20, scope: !2694)
!2910 = !DILocation(line: 1427, column: 14, scope: !2694)
!2911 = !DILocation(line: 1429, column: 3, scope: !2694)
!2912 = !DILocation(line: 1431, column: 3, scope: !2694)
!2913 = !DILocation(line: 1432, column: 1, scope: !2694)
!2914 = distinct !DISubprogram(name: "check_format_info_main", scope: !3, file: !3, line: 1443, type: !2915, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2917)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{null, !986, !998, !264, !259, !266, !320, !2711}
!2917 = !{!2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2955, !2956, !2957, !2958, !2961, !2963, !2970, !2972, !2973, !2980, !2986, !2988, !2992, !2995, !2998, !3002, !3003, !3006}
!2918 = !DILocalVariable(name: "res", arg: 1, scope: !2914, file: !3, line: 1443, type: !986)
!2919 = !DILocalVariable(name: "info", arg: 2, scope: !2914, file: !3, line: 1444, type: !998)
!2920 = !DILocalVariable(name: "format_chars", arg: 3, scope: !2914, file: !3, line: 1444, type: !264)
!2921 = !DILocalVariable(name: "format_length", arg: 4, scope: !2914, file: !3, line: 1445, type: !259)
!2922 = !DILocalVariable(name: "params", arg: 5, scope: !2914, file: !3, line: 1445, type: !266)
!2923 = !DILocalVariable(name: "arg_num", arg: 6, scope: !2914, file: !3, line: 1446, type: !320)
!2924 = !DILocalVariable(name: "fwt_pool", arg: 7, scope: !2914, file: !3, line: 1446, type: !2711)
!2925 = !DILocalVariable(name: "orig_format_chars", scope: !2914, file: !3, line: 1448, type: !264)
!2926 = !DILocalVariable(name: "first_fillin_param", scope: !2914, file: !3, line: 1449, type: !266)
!2927 = !DILocalVariable(name: "fki", scope: !2914, file: !3, line: 1451, type: !1213)
!2928 = !DILocalVariable(name: "flag_specs", scope: !2914, file: !3, line: 1452, type: !951)
!2929 = !DILocalVariable(name: "bad_flag_pairs", scope: !2914, file: !3, line: 1453, type: !963)
!2930 = !DILocalVariable(name: "has_operand_number", scope: !2914, file: !3, line: 1457, type: !259)
!2931 = !DILocalVariable(name: "i", scope: !2932, file: !3, line: 1463, type: !259)
!2932 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 1462, column: 5)
!2933 = !DILocalVariable(name: "suppressed", scope: !2932, file: !3, line: 1464, type: !259)
!2934 = !DILocalVariable(name: "length_chars", scope: !2932, file: !3, line: 1465, type: !264)
!2935 = !DILocalVariable(name: "length_chars_val", scope: !2932, file: !3, line: 1466, type: !233)
!2936 = !DILocalVariable(name: "length_chars_std", scope: !2932, file: !3, line: 1467, type: !249)
!2937 = !DILocalVariable(name: "format_char", scope: !2932, file: !3, line: 1468, type: !259)
!2938 = !DILocalVariable(name: "cur_param", scope: !2932, file: !3, line: 1469, type: !266)
!2939 = !DILocalVariable(name: "wanted_type", scope: !2932, file: !3, line: 1470, type: !266)
!2940 = !DILocalVariable(name: "main_arg_num", scope: !2932, file: !3, line: 1471, type: !259)
!2941 = !DILocalVariable(name: "main_arg_params", scope: !2932, file: !3, line: 1472, type: !266)
!2942 = !DILocalVariable(name: "wanted_type_std", scope: !2932, file: !3, line: 1473, type: !249)
!2943 = !DILocalVariable(name: "wanted_type_name", scope: !2932, file: !3, line: 1474, type: !264)
!2944 = !DILocalVariable(name: "width_wanted_type", scope: !2932, file: !3, line: 1475, type: !1010)
!2945 = !DILocalVariable(name: "precision_wanted_type", scope: !2932, file: !3, line: 1476, type: !1010)
!2946 = !DILocalVariable(name: "main_wanted_type", scope: !2932, file: !3, line: 1477, type: !1010)
!2947 = !DILocalVariable(name: "first_wanted_type", scope: !2932, file: !3, line: 1478, type: !1009)
!2948 = !DILocalVariable(name: "last_wanted_type", scope: !2932, file: !3, line: 1479, type: !1009)
!2949 = !DILocalVariable(name: "fli", scope: !2932, file: !3, line: 1480, type: !912)
!2950 = !DILocalVariable(name: "fci", scope: !2932, file: !3, line: 1481, type: !925)
!2951 = !DILocalVariable(name: "flag_chars", scope: !2932, file: !3, line: 1482, type: !2952)
!2952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 2048, elements: !2953)
!2953 = !{!2954}
!2954 = !DISubrange(count: 256)
!2955 = !DILocalVariable(name: "alloc_flag", scope: !2932, file: !3, line: 1483, type: !259)
!2956 = !DILocalVariable(name: "scalar_identity_flag", scope: !2932, file: !3, line: 1484, type: !259)
!2957 = !DILocalVariable(name: "format_start", scope: !2932, file: !3, line: 1485, type: !264)
!2958 = !DILocalVariable(name: "opnum", scope: !2959, file: !3, line: 1520, type: !259)
!2959 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 1515, column: 2)
!2960 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1514, column: 11)
!2961 = !DILocalVariable(name: "s", scope: !2962, file: !3, line: 1544, type: !951)
!2962 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1543, column: 2)
!2963 = !DILocalVariable(name: "opnum", scope: !2964, file: !3, line: 1581, type: !259)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 1580, column: 3)
!2965 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1579, column: 12)
!2966 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 1572, column: 6)
!2967 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 1571, column: 8)
!2968 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 1570, column: 2)
!2969 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1569, column: 11)
!2970 = !DILocalVariable(name: "non_zero_width_char", scope: !2971, file: !3, line: 1636, type: !259)
!2971 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 1633, column: 6)
!2972 = !DILocalVariable(name: "found_width", scope: !2971, file: !3, line: 1637, type: !259)
!2973 = !DILocalVariable(name: "opnum", scope: !2974, file: !3, line: 1684, type: !259)
!2974 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 1683, column: 3)
!2975 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1682, column: 12)
!2976 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 1678, column: 6)
!2977 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 1677, column: 8)
!2978 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 1672, column: 2)
!2979 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1671, column: 11)
!2980 = !DILocalVariable(name: "s", scope: !2981, file: !3, line: 1821, type: !951)
!2981 = distinct !DILexicalBlock(scope: !2982, file: !3, line: 1820, column: 3)
!2982 = distinct !DILexicalBlock(scope: !2983, file: !3, line: 1819, column: 12)
!2983 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 1818, column: 6)
!2984 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 1815, column: 2)
!2985 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1814, column: 11)
!2986 = !DILocalVariable(name: "d", scope: !2987, file: !3, line: 1867, type: !259)
!2987 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1866, column: 7)
!2988 = !DILocalVariable(name: "s", scope: !2989, file: !3, line: 1870, type: !951)
!2989 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 1869, column: 4)
!2990 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 1868, column: 2)
!2991 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 1868, column: 2)
!2992 = !DILocalVariable(name: "t", scope: !2993, file: !3, line: 1884, type: !951)
!2993 = distinct !DILexicalBlock(scope: !2994, file: !3, line: 1883, column: 8)
!2994 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 1882, column: 10)
!2995 = !DILocalVariable(name: "long_name", scope: !2996, file: !3, line: 1891, type: !264)
!2996 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 1890, column: 5)
!2997 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 1889, column: 7)
!2998 = !DILocalVariable(name: "s", scope: !2999, file: !3, line: 1918, type: !951)
!2999 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 1917, column: 2)
!3000 = distinct !DILexicalBlock(scope: !3001, file: !3, line: 1916, column: 7)
!3001 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1916, column: 7)
!3002 = !DILocalVariable(name: "t", scope: !2999, file: !3, line: 1918, type: !951)
!3003 = !DILocalVariable(name: "y2k_level", scope: !3004, file: !3, line: 1955, type: !259)
!3004 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 1954, column: 2)
!3005 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1953, column: 11)
!3006 = !DILocalVariable(name: "wanted_type_ptr", scope: !3007, file: !3, line: 2048, type: !1009)
!3007 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 2047, column: 2)
!3008 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 2033, column: 11)
!3009 = !DILocation(line: 0, scope: !2914)
!3010 = !DILocation(line: 1448, column: 35, scope: !2914)
!3011 = !DILocation(line: 1451, column: 34, scope: !2914)
!3012 = !DILocation(line: 1451, column: 53, scope: !2914)
!3013 = !DILocation(line: 1452, column: 45, scope: !2914)
!3014 = !DILocation(line: 1453, column: 49, scope: !2914)
!3015 = !DILocation(line: 1459, column: 38, scope: !2914)
!3016 = !DILocation(line: 1459, column: 32, scope: !2914)
!3017 = !DILocation(line: 1459, column: 3, scope: !2914)
!3018 = !DILocation(line: 0, scope: !2932)
!3019 = !DILocation(line: 0, scope: !2960)
!3020 = !DILocation(line: 0, scope: !2969)
!3021 = !DILocation(line: 0, scope: !2967)
!3022 = !DILocation(line: 0, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1610, column: 7)
!3024 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 1609, column: 9)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 1602, column: 3)
!3026 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1601, column: 12)
!3027 = !DILocation(line: 0, scope: !3025)
!3028 = !DILocation(line: 0, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 1645, column: 12)
!3030 = !DILocation(line: 0, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1658, column: 11)
!3032 = !DILocation(line: 0, scope: !2979)
!3033 = !DILocation(line: 0, scope: !2977)
!3034 = !DILocation(line: 0, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 1705, column: 3)
!3036 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1704, column: 12)
!3037 = !DILocation(line: 0, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1745, column: 11)
!3039 = !DILocation(line: 0, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 1782, column: 6)
!3041 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 1781, column: 8)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 1777, column: 2)
!3043 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1776, column: 11)
!3044 = !DILocation(line: 0, scope: !2985)
!3045 = !DILocation(line: 0, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1911, column: 11)
!3047 = !DILocation(line: 0, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 2051, column: 6)
!3049 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 2050, column: 8)
!3050 = !DILocation(line: 0, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 2121, column: 11)
!3052 = !DILocation(line: 0, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 1488, column: 8)
!3054 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 1487, column: 2)
!3055 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1486, column: 11)
!3056 = !DILocation(line: 0, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 1492, column: 6)
!3058 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 1490, column: 8)
!3059 = !DILocation(line: 1461, column: 3, scope: !2914)
!3060 = !DILocation(line: 1485, column: 34, scope: !2932)
!3061 = !DILocation(line: 1457, column: 7, scope: !2914)
!3062 = !DILocation(line: 1472, column: 7, scope: !2932)
!3063 = !DILocation(line: 1472, column: 12, scope: !2932)
!3064 = !DILocation(line: 1475, column: 7, scope: !2932)
!3065 = !DILocation(line: 1476, column: 7, scope: !2932)
!3066 = !DILocation(line: 1477, column: 7, scope: !2932)
!3067 = !DILocation(line: 1482, column: 7, scope: !2932)
!3068 = !DILocation(line: 1482, column: 12, scope: !2932)
!3069 = !DILocation(line: 1486, column: 11, scope: !3055)
!3070 = !DILocation(line: 1486, column: 25, scope: !3055)
!3071 = !DILocation(line: 1486, column: 11, scope: !2932)
!3072 = !DILocation(line: 1488, column: 21, scope: !3053)
!3073 = !DILocation(line: 1488, column: 41, scope: !3053)
!3074 = !DILocation(line: 1488, column: 8, scope: !3054)
!3075 = !DILocation(line: 1489, column: 6, scope: !3053)
!3076 = !DILocation(line: 1490, column: 14, scope: !3058)
!3077 = !DILocation(line: 1490, column: 28, scope: !3058)
!3078 = !DILocation(line: 1490, column: 36, scope: !3058)
!3079 = !DILocation(line: 1490, column: 43, scope: !3058)
!3080 = !DILocation(line: 1490, column: 33, scope: !3058)
!3081 = !DILocation(line: 1491, column: 30, scope: !3058)
!3082 = !DILocation(line: 1493, column: 25, scope: !3057)
!3083 = !DILocation(line: 1494, column: 30, scope: !3057)
!3084 = !DILocation(line: 1495, column: 6, scope: !3057)
!3085 = !DILocation(line: 1496, column: 27, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 1496, column: 8)
!3087 = !DILocation(line: 1496, column: 8, scope: !3054)
!3088 = !DILocation(line: 1497, column: 47, scope: !3086)
!3089 = !DILocation(line: 1497, column: 53, scope: !3086)
!3090 = !DILocation(line: 1497, column: 6, scope: !3086)
!3091 = !DILocation(line: 1500, column: 24, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1500, column: 11)
!3093 = !DILocation(line: 1500, column: 11, scope: !3092)
!3094 = !DILocation(line: 1500, column: 27, scope: !3092)
!3095 = !DILocation(line: 1500, column: 11, scope: !2932)
!3096 = distinct !{!3096, !3059, !3097}
!3097 = !DILocation(line: 2124, column: 5, scope: !2914)
!3098 = !DILocation(line: 1502, column: 11, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1502, column: 11)
!3100 = !DILocation(line: 1502, column: 25, scope: !3099)
!3101 = !DILocation(line: 1502, column: 11, scope: !2932)
!3102 = !DILocation(line: 1504, column: 4, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3099, file: !3, line: 1503, column: 2)
!3104 = !DILocation(line: 1505, column: 4, scope: !3103)
!3105 = !DILocation(line: 1507, column: 25, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1507, column: 11)
!3107 = !DILocation(line: 1507, column: 11, scope: !2932)
!3108 = !DILocation(line: 1509, column: 4, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1508, column: 2)
!3110 = !DILocation(line: 1510, column: 4, scope: !3109)
!3111 = !DILocation(line: 1512, column: 21, scope: !2932)
!3112 = !DILocation(line: 1514, column: 17, scope: !2960)
!3113 = !DILocation(line: 1514, column: 23, scope: !2960)
!3114 = !DILocation(line: 1514, column: 74, scope: !2960)
!3115 = !DILocation(line: 1514, column: 52, scope: !2960)
!3116 = !DILocation(line: 1521, column: 12, scope: !2959)
!3117 = !DILocation(line: 0, scope: !2959)
!3118 = !DILocation(line: 1524, column: 14, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !2959, file: !3, line: 1524, column: 8)
!3120 = !DILocation(line: 1524, column: 8, scope: !2959)
!3121 = !DILocation(line: 1526, column: 19, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 1526, column: 13)
!3123 = !DILocation(line: 1526, column: 13, scope: !3119)
!3124 = !DILocation(line: 1529, column: 37, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 1527, column: 6)
!3126 = !DILocation(line: 1529, column: 23, scope: !3125)
!3127 = !DILocation(line: 1530, column: 6, scope: !3125)
!3128 = !DILocation(line: 1532, column: 27, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 1532, column: 16)
!3130 = !DILocation(line: 1532, column: 16, scope: !2960)
!3131 = !DILocation(line: 1534, column: 8, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 1534, column: 8)
!3133 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 1533, column: 2)
!3134 = !DILocation(line: 1534, column: 8, scope: !3133)
!3135 = !DILocation(line: 1471, column: 11, scope: !2932)
!3136 = !DILocation(line: 1541, column: 7, scope: !2932)
!3137 = !DILocation(line: 1541, column: 15, scope: !2932)
!3138 = !DILocation(line: 1541, column: 14, scope: !2932)
!3139 = !DILocation(line: 1541, column: 28, scope: !2932)
!3140 = !DILocation(line: 1542, column: 7, scope: !2932)
!3141 = !DILocation(line: 1542, column: 23, scope: !2932)
!3142 = !DILocation(line: 1542, column: 35, scope: !2932)
!3143 = !DILocation(line: 1542, column: 10, scope: !2932)
!3144 = !DILocation(line: 1542, column: 50, scope: !2932)
!3145 = !DILocation(line: 1545, column: 13, scope: !2962)
!3146 = !DILocation(line: 1545, column: 12, scope: !2962)
!3147 = !DILocation(line: 1544, column: 32, scope: !2962)
!3148 = !DILocation(line: 0, scope: !2962)
!3149 = !DILocation(line: 1546, column: 29, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 1546, column: 8)
!3151 = !DILocation(line: 1546, column: 28, scope: !3150)
!3152 = !DILocation(line: 1546, column: 8, scope: !3150)
!3153 = !DILocation(line: 1546, column: 43, scope: !3150)
!3154 = !DILocation(line: 1546, column: 8, scope: !2962)
!3155 = !DILocation(line: 1548, column: 55, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1547, column: 6)
!3157 = !DILocation(line: 1548, column: 8, scope: !3156)
!3158 = !DILocation(line: 1549, column: 6, scope: !3156)
!3159 = !DILocation(line: 1552, column: 12, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1551, column: 6)
!3161 = !DILocation(line: 1553, column: 27, scope: !3160)
!3162 = !DILocation(line: 1553, column: 26, scope: !3160)
!3163 = !DILocation(line: 1553, column: 8, scope: !3160)
!3164 = !DILocation(line: 1553, column: 24, scope: !3160)
!3165 = !DILocation(line: 1554, column: 8, scope: !3160)
!3166 = !DILocation(line: 1554, column: 22, scope: !3160)
!3167 = !DILocation(line: 1556, column: 11, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 1556, column: 8)
!3169 = !DILocation(line: 1556, column: 8, scope: !3168)
!3170 = !DILocation(line: 1556, column: 8, scope: !2962)
!3171 = !DILocation(line: 1565, column: 4, scope: !2962)
!3172 = !DILocation(line: 1558, column: 8, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1557, column: 6)
!3174 = !DILocation(line: 1559, column: 12, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 1559, column: 12)
!3176 = !DILocation(line: 1559, column: 26, scope: !3175)
!3177 = !DILocation(line: 1559, column: 12, scope: !3173)
!3178 = !DILocation(line: 1561, column: 5, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 1560, column: 3)
!3180 = !DILocation(line: 1562, column: 5, scope: !3179)
!3181 = !DILocation(line: 1566, column: 2, scope: !2932)
!3182 = distinct !{!3182, !3136, !3181}
!3183 = !DILocation(line: 1569, column: 16, scope: !2969)
!3184 = !DILocation(line: 1569, column: 27, scope: !2969)
!3185 = !DILocation(line: 1569, column: 11, scope: !2932)
!3186 = !DILocation(line: 1571, column: 13, scope: !2967)
!3187 = !DILocation(line: 1571, column: 24, scope: !2967)
!3188 = !DILocation(line: 1571, column: 32, scope: !2967)
!3189 = !DILocation(line: 1638, column: 15, scope: !2971)
!3190 = !DILocation(line: 1571, column: 36, scope: !2967)
!3191 = !DILocation(line: 1571, column: 35, scope: !2967)
!3192 = !DILocation(line: 1571, column: 49, scope: !2967)
!3193 = !DILocation(line: 1571, column: 8, scope: !2968)
!3194 = !DILocation(line: 1573, column: 12, scope: !2966)
!3195 = !DILocation(line: 1574, column: 31, scope: !2966)
!3196 = !DILocation(line: 1574, column: 26, scope: !2966)
!3197 = !DILocation(line: 1574, column: 8, scope: !2966)
!3198 = !DILocation(line: 1574, column: 24, scope: !2966)
!3199 = !DILocation(line: 1575, column: 8, scope: !2966)
!3200 = !DILocation(line: 1575, column: 22, scope: !2966)
!3201 = !DILocation(line: 1578, column: 8, scope: !2966)
!3202 = !DILocation(line: 1579, column: 31, scope: !2965)
!3203 = !DILocation(line: 1579, column: 12, scope: !2966)
!3204 = !DILocation(line: 1583, column: 30, scope: !2964)
!3205 = !DILocation(line: 1582, column: 13, scope: !2964)
!3206 = !DILocation(line: 0, scope: !2964)
!3207 = !DILocation(line: 1586, column: 15, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 1586, column: 9)
!3209 = !DILocation(line: 1586, column: 9, scope: !2964)
!3210 = !DILocation(line: 1588, column: 20, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 1588, column: 14)
!3212 = !DILocation(line: 1588, column: 14, scope: !3208)
!3213 = !DILocation(line: 1591, column: 19, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 1589, column: 7)
!3215 = !DILocation(line: 1591, column: 33, scope: !3214)
!3216 = !DILocation(line: 1591, column: 25, scope: !3214)
!3217 = !DILocation(line: 1591, column: 47, scope: !3214)
!3218 = !DILocation(line: 1592, column: 7, scope: !3214)
!3219 = !DILocation(line: 1598, column: 9, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3221, file: !3, line: 1598, column: 9)
!3221 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 1597, column: 3)
!3222 = !DILocation(line: 1598, column: 9, scope: !3221)
!3223 = !DILocation(line: 1601, column: 18, scope: !3026)
!3224 = !DILocation(line: 1601, column: 32, scope: !3026)
!3225 = !DILocation(line: 1601, column: 12, scope: !2966)
!3226 = !DILocation(line: 1603, column: 9, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 1603, column: 9)
!3228 = !DILocation(line: 1603, column: 16, scope: !3227)
!3229 = !DILocation(line: 1603, column: 9, scope: !3025)
!3230 = !DILocation(line: 1605, column: 9, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 1604, column: 7)
!3232 = !DILocation(line: 1606, column: 9, scope: !3231)
!3233 = !DILocation(line: 1608, column: 17, scope: !3025)
!3234 = !DILocation(line: 1609, column: 28, scope: !3024)
!3235 = !DILocation(line: 1609, column: 9, scope: !3025)
!3236 = !DILocation(line: 1611, column: 18, scope: !3023)
!3237 = !DILocation(line: 1611, column: 16, scope: !3023)
!3238 = !DILocation(line: 1612, column: 9, scope: !3023)
!3239 = !DILocation(line: 1613, column: 7, scope: !3023)
!3240 = !DILocation(line: 1614, column: 43, scope: !3025)
!3241 = !DILocation(line: 1614, column: 37, scope: !3025)
!3242 = !DILocation(line: 1614, column: 35, scope: !3025)
!3243 = !DILocation(line: 1615, column: 40, scope: !3025)
!3244 = !DILocation(line: 1616, column: 37, scope: !3025)
!3245 = !DILocation(line: 1617, column: 41, scope: !3025)
!3246 = !DILocation(line: 1618, column: 44, scope: !3025)
!3247 = !DILocation(line: 1619, column: 39, scope: !3025)
!3248 = !DILocation(line: 1620, column: 41, scope: !3025)
!3249 = !DILocation(line: 1621, column: 28, scope: !3025)
!3250 = !DILocation(line: 1622, column: 29, scope: !3025)
!3251 = !DILocation(line: 1623, column: 33, scope: !3025)
!3252 = !DILocation(line: 1623, column: 31, scope: !3025)
!3253 = !DILocation(line: 1624, column: 28, scope: !3025)
!3254 = !DILocation(line: 1628, column: 7, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 1627, column: 9)
!3256 = !DILocation(line: 0, scope: !2971)
!3257 = !DILocation(line: 1638, column: 8, scope: !2971)
!3258 = !DILocation(line: 1641, column: 23, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 1641, column: 9)
!3260 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 1639, column: 3)
!3261 = !DILocation(line: 1641, column: 9, scope: !3260)
!3262 = !DILocation(line: 1643, column: 5, scope: !3260)
!3263 = distinct !{!3263, !3257, !3264}
!3264 = !DILocation(line: 1644, column: 3, scope: !2971)
!3265 = !DILocation(line: 1645, column: 12, scope: !3029)
!3266 = !DILocation(line: 1645, column: 28, scope: !3029)
!3267 = !DILocation(line: 1645, column: 24, scope: !3029)
!3268 = !DILocation(line: 1646, column: 11, scope: !3029)
!3269 = !DILocation(line: 1646, column: 17, scope: !3029)
!3270 = !DILocation(line: 1645, column: 12, scope: !2971)
!3271 = !DILocation(line: 1647, column: 57, scope: !3029)
!3272 = !DILocation(line: 1647, column: 3, scope: !3029)
!3273 = !DILocation(line: 1648, column: 12, scope: !2971)
!3274 = !DILocation(line: 1650, column: 9, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !3, line: 1649, column: 3)
!3276 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 1648, column: 12)
!3277 = !DILocation(line: 1651, column: 28, scope: !3275)
!3278 = !DILocation(line: 1651, column: 23, scope: !3275)
!3279 = !DILocation(line: 1651, column: 5, scope: !3275)
!3280 = !DILocation(line: 1651, column: 21, scope: !3275)
!3281 = !DILocation(line: 1652, column: 5, scope: !3275)
!3282 = !DILocation(line: 1652, column: 19, scope: !3275)
!3283 = !DILocation(line: 1653, column: 3, scope: !3275)
!3284 = !DILocation(line: 1658, column: 16, scope: !3031)
!3285 = !DILocation(line: 1658, column: 36, scope: !3031)
!3286 = !DILocation(line: 1658, column: 41, scope: !3031)
!3287 = !DILocation(line: 1658, column: 45, scope: !3031)
!3288 = !DILocation(line: 1658, column: 44, scope: !3031)
!3289 = !DILocation(line: 1658, column: 58, scope: !3031)
!3290 = !DILocation(line: 1658, column: 11, scope: !2932)
!3291 = !DILocation(line: 1660, column: 4, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 1659, column: 2)
!3293 = !DILocation(line: 1661, column: 8, scope: !3292)
!3294 = !DILocation(line: 1662, column: 27, scope: !3292)
!3295 = !DILocation(line: 1662, column: 22, scope: !3292)
!3296 = !DILocation(line: 1662, column: 4, scope: !3292)
!3297 = !DILocation(line: 1662, column: 20, scope: !3292)
!3298 = !DILocation(line: 1663, column: 4, scope: !3292)
!3299 = !DILocation(line: 1663, column: 18, scope: !3292)
!3300 = !DILocation(line: 1664, column: 9, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 1664, column: 8)
!3302 = !DILocation(line: 1664, column: 8, scope: !3292)
!3303 = !DILocation(line: 1665, column: 70, scope: !3301)
!3304 = !DILocation(line: 1665, column: 6, scope: !3301)
!3305 = !DILocation(line: 1666, column: 11, scope: !3292)
!3306 = !DILocation(line: 1666, column: 4, scope: !3292)
!3307 = !DILocation(line: 1667, column: 6, scope: !3292)
!3308 = distinct !{!3308, !3306, !3309}
!3309 = !DILocation(line: 1667, column: 8, scope: !3292)
!3310 = !DILocation(line: 1671, column: 16, scope: !2979)
!3311 = !DILocation(line: 1671, column: 31, scope: !2979)
!3312 = !DILocation(line: 1671, column: 36, scope: !2979)
!3313 = !DILocation(line: 1671, column: 40, scope: !2979)
!3314 = !DILocation(line: 1671, column: 39, scope: !2979)
!3315 = !DILocation(line: 1671, column: 53, scope: !2979)
!3316 = !DILocation(line: 1671, column: 11, scope: !2932)
!3317 = !DILocation(line: 1673, column: 4, scope: !2978)
!3318 = !DILocation(line: 1674, column: 8, scope: !2978)
!3319 = !DILocation(line: 1675, column: 27, scope: !2978)
!3320 = !DILocation(line: 1675, column: 22, scope: !2978)
!3321 = !DILocation(line: 1675, column: 4, scope: !2978)
!3322 = !DILocation(line: 1675, column: 20, scope: !2978)
!3323 = !DILocation(line: 1676, column: 4, scope: !2978)
!3324 = !DILocation(line: 1676, column: 18, scope: !2978)
!3325 = !DILocation(line: 1677, column: 13, scope: !2977)
!3326 = !DILocation(line: 1677, column: 28, scope: !2977)
!3327 = !DILocation(line: 1677, column: 36, scope: !2977)
!3328 = !DILocation(line: 1677, column: 40, scope: !2977)
!3329 = !DILocation(line: 1677, column: 39, scope: !2977)
!3330 = !DILocation(line: 1677, column: 53, scope: !2977)
!3331 = !DILocation(line: 1677, column: 8, scope: !2978)
!3332 = !DILocation(line: 1681, column: 8, scope: !2976)
!3333 = !DILocation(line: 1682, column: 31, scope: !2975)
!3334 = !DILocation(line: 1682, column: 12, scope: !2976)
!3335 = !DILocation(line: 1686, column: 30, scope: !2974)
!3336 = !DILocation(line: 1685, column: 13, scope: !2974)
!3337 = !DILocation(line: 0, scope: !2974)
!3338 = !DILocation(line: 1689, column: 15, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 1689, column: 9)
!3340 = !DILocation(line: 1689, column: 9, scope: !2974)
!3341 = !DILocation(line: 1691, column: 20, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 1691, column: 14)
!3343 = !DILocation(line: 1691, column: 14, scope: !3339)
!3344 = !DILocation(line: 1694, column: 19, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1692, column: 7)
!3346 = !DILocation(line: 1694, column: 33, scope: !3345)
!3347 = !DILocation(line: 1694, column: 25, scope: !3345)
!3348 = !DILocation(line: 1694, column: 47, scope: !3345)
!3349 = !DILocation(line: 1695, column: 7, scope: !3345)
!3350 = !DILocation(line: 1701, column: 9, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 1701, column: 9)
!3352 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 1700, column: 3)
!3353 = !DILocation(line: 1701, column: 9, scope: !3352)
!3354 = !DILocation(line: 1704, column: 18, scope: !3036)
!3355 = !DILocation(line: 1704, column: 32, scope: !3036)
!3356 = !DILocation(line: 1704, column: 12, scope: !2976)
!3357 = !DILocation(line: 1706, column: 9, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1706, column: 9)
!3359 = !DILocation(line: 1706, column: 16, scope: !3358)
!3360 = !DILocation(line: 1706, column: 9, scope: !3035)
!3361 = !DILocation(line: 1708, column: 9, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 1707, column: 7)
!3363 = !DILocation(line: 1709, column: 9, scope: !3362)
!3364 = !DILocation(line: 1711, column: 17, scope: !3035)
!3365 = !DILocation(line: 1712, column: 28, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1712, column: 9)
!3367 = !DILocation(line: 1712, column: 9, scope: !3035)
!3368 = !DILocation(line: 1714, column: 18, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 1713, column: 7)
!3370 = !DILocation(line: 1714, column: 16, scope: !3369)
!3371 = !DILocation(line: 1715, column: 9, scope: !3369)
!3372 = !DILocation(line: 1716, column: 7, scope: !3369)
!3373 = !DILocation(line: 1717, column: 47, scope: !3035)
!3374 = !DILocation(line: 1717, column: 41, scope: !3035)
!3375 = !DILocation(line: 1717, column: 39, scope: !3035)
!3376 = !DILocation(line: 1718, column: 44, scope: !3035)
!3377 = !DILocation(line: 1719, column: 41, scope: !3035)
!3378 = !DILocation(line: 1720, column: 45, scope: !3035)
!3379 = !DILocation(line: 1721, column: 48, scope: !3035)
!3380 = !DILocation(line: 1722, column: 43, scope: !3035)
!3381 = !DILocation(line: 1723, column: 45, scope: !3035)
!3382 = !DILocation(line: 1724, column: 32, scope: !3035)
!3383 = !DILocation(line: 1725, column: 33, scope: !3035)
!3384 = !DILocation(line: 1726, column: 37, scope: !3035)
!3385 = !DILocation(line: 1726, column: 35, scope: !3035)
!3386 = !DILocation(line: 1727, column: 32, scope: !3035)
!3387 = !DILocation(line: 1728, column: 26, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1728, column: 9)
!3389 = !DILocation(line: 1728, column: 9, scope: !3035)
!3390 = !DILocation(line: 1729, column: 25, scope: !3388)
!3391 = !DILocation(line: 1729, column: 30, scope: !3388)
!3392 = !DILocation(line: 1729, column: 7, scope: !3388)
!3393 = !DILocation(line: 1730, column: 9, scope: !3035)
!3394 = !DILocation(line: 1733, column: 3, scope: !3035)
!3395 = !DILocation(line: 1737, column: 19, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 1737, column: 12)
!3397 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 1736, column: 6)
!3398 = !DILocation(line: 1737, column: 25, scope: !3396)
!3399 = !DILocation(line: 1738, column: 5, scope: !3396)
!3400 = !DILocation(line: 1738, column: 9, scope: !3396)
!3401 = !DILocation(line: 1737, column: 12, scope: !3397)
!3402 = !DILocation(line: 1739, column: 62, scope: !3396)
!3403 = !DILocation(line: 1739, column: 3, scope: !3396)
!3404 = !DILocation(line: 1740, column: 15, scope: !3397)
!3405 = !DILocation(line: 1740, column: 8, scope: !3397)
!3406 = !DILocation(line: 1741, column: 3, scope: !3397)
!3407 = distinct !{!3407, !3405, !3408}
!3408 = !DILocation(line: 1741, column: 5, scope: !3397)
!3409 = !DILocation(line: 1745, column: 16, scope: !3038)
!3410 = !DILocation(line: 1745, column: 11, scope: !3038)
!3411 = !DILocation(line: 1745, column: 27, scope: !3038)
!3412 = !DILocation(line: 1745, column: 50, scope: !3038)
!3413 = !DILocation(line: 1745, column: 49, scope: !3038)
!3414 = !DILocation(line: 1745, column: 46, scope: !3038)
!3415 = !DILocation(line: 1745, column: 11, scope: !2932)
!3416 = !DILocation(line: 1747, column: 8, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 1746, column: 2)
!3418 = !DILocation(line: 1748, column: 27, scope: !3417)
!3419 = !DILocation(line: 1748, column: 22, scope: !3417)
!3420 = !DILocation(line: 1748, column: 4, scope: !3417)
!3421 = !DILocation(line: 1748, column: 20, scope: !3417)
!3422 = !DILocation(line: 1749, column: 4, scope: !3417)
!3423 = !DILocation(line: 1749, column: 18, scope: !3417)
!3424 = !DILocation(line: 1750, column: 16, scope: !3417)
!3425 = !DILocation(line: 1751, column: 2, scope: !3417)
!3426 = !DILocation(line: 1754, column: 16, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1754, column: 11)
!3428 = !DILocation(line: 1754, column: 22, scope: !3427)
!3429 = !DILocation(line: 1754, column: 11, scope: !2932)
!3430 = !DILocation(line: 1756, column: 9, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 1756, column: 8)
!3432 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 1755, column: 2)
!3433 = !DILocation(line: 1756, column: 8, scope: !3431)
!3434 = !DILocation(line: 1756, column: 22, scope: !3431)
!3435 = !DILocation(line: 1756, column: 33, scope: !3431)
!3436 = !DILocation(line: 1756, column: 29, scope: !3431)
!3437 = !DILocation(line: 1758, column: 12, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 1758, column: 12)
!3439 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 1757, column: 6)
!3440 = !DILocation(line: 1758, column: 28, scope: !3438)
!3441 = !DILocation(line: 1758, column: 35, scope: !3438)
!3442 = !DILocation(line: 1758, column: 54, scope: !3438)
!3443 = !DILocation(line: 1759, column: 5, scope: !3438)
!3444 = !DILocation(line: 1759, column: 24, scope: !3438)
!3445 = !DILocation(line: 1758, column: 12, scope: !3439)
!3446 = !DILocation(line: 1762, column: 9, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1760, column: 3)
!3448 = !DILocation(line: 1763, column: 5, scope: !3447)
!3449 = !DILocation(line: 1763, column: 21, scope: !3447)
!3450 = !DILocation(line: 1764, column: 5, scope: !3447)
!3451 = !DILocation(line: 1764, column: 19, scope: !3447)
!3452 = !DILocation(line: 1765, column: 17, scope: !3447)
!3453 = !DILocation(line: 1766, column: 3, scope: !3447)
!3454 = !DILocation(line: 1771, column: 18, scope: !2932)
!3455 = !DILocation(line: 1776, column: 11, scope: !3043)
!3456 = !DILocation(line: 1776, column: 11, scope: !2932)
!3457 = !DILocation(line: 1778, column: 4, scope: !3042)
!3458 = !DILocation(line: 1778, column: 16, scope: !3042)
!3459 = !DILocation(line: 1778, column: 21, scope: !3042)
!3460 = !DILocation(line: 1779, column: 5, scope: !3042)
!3461 = !DILocation(line: 1779, column: 28, scope: !3042)
!3462 = !DILocation(line: 1779, column: 42, scope: !3042)
!3463 = !DILocation(line: 1779, column: 8, scope: !3042)
!3464 = !DILocation(line: 1781, column: 13, scope: !3041)
!3465 = !DILocation(line: 1780, column: 11, scope: !3042)
!3466 = distinct !{!3466, !3457, !3465}
!3467 = !DILocation(line: 1781, column: 18, scope: !3041)
!3468 = !DILocation(line: 1781, column: 8, scope: !3042)
!3469 = !DILocation(line: 1783, column: 25, scope: !3040)
!3470 = !DILocation(line: 1783, column: 22, scope: !3040)
!3471 = !DILocation(line: 1784, column: 17, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 1784, column: 12)
!3473 = !DILocation(line: 1784, column: 29, scope: !3472)
!3474 = !DILocation(line: 1784, column: 34, scope: !3472)
!3475 = !DILocation(line: 1784, column: 42, scope: !3472)
!3476 = !DILocation(line: 1784, column: 37, scope: !3472)
!3477 = !DILocation(line: 1784, column: 53, scope: !3472)
!3478 = !DILocation(line: 1784, column: 50, scope: !3472)
!3479 = !DILocation(line: 1784, column: 12, scope: !3040)
!3480 = !DILocation(line: 1786, column: 17, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3472, file: !3, line: 1785, column: 3)
!3482 = !DILocation(line: 1788, column: 29, scope: !3481)
!3483 = !DILocation(line: 1789, column: 29, scope: !3481)
!3484 = !DILocation(line: 1790, column: 3, scope: !3481)
!3485 = !DILocation(line: 1794, column: 29, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3472, file: !3, line: 1792, column: 3)
!3487 = !DILocation(line: 1795, column: 29, scope: !3486)
!3488 = !DILocation(line: 1796, column: 33, scope: !3486)
!3489 = !DILocation(line: 0, scope: !3472)
!3490 = !DILocation(line: 1798, column: 12, scope: !3040)
!3491 = !DILocation(line: 1799, column: 31, scope: !3040)
!3492 = !DILocation(line: 1799, column: 26, scope: !3040)
!3493 = !DILocation(line: 1799, column: 8, scope: !3040)
!3494 = !DILocation(line: 1799, column: 24, scope: !3040)
!3495 = !DILocation(line: 1800, column: 8, scope: !3040)
!3496 = !DILocation(line: 1800, column: 22, scope: !3040)
!3497 = !DILocation(line: 1801, column: 6, scope: !3040)
!3498 = !DILocation(line: 1775, column: 28, scope: !2932)
!3499 = !DILocation(line: 1802, column: 8, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 1802, column: 8)
!3501 = !DILocation(line: 1802, column: 8, scope: !3042)
!3502 = !DILocation(line: 1805, column: 12, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !3, line: 1805, column: 12)
!3504 = distinct !DILexicalBlock(scope: !3500, file: !3, line: 1803, column: 6)
!3505 = !DILocation(line: 1805, column: 41, scope: !3503)
!3506 = !DILocation(line: 1805, column: 39, scope: !3503)
!3507 = !DILocation(line: 1805, column: 12, scope: !3504)
!3508 = !DILocation(line: 1808, column: 5, scope: !3503)
!3509 = !DILocation(line: 1809, column: 10, scope: !3503)
!3510 = !DILocation(line: 1806, column: 3, scope: !3503)
!3511 = !DILocation(line: 1814, column: 16, scope: !2985)
!3512 = !DILocation(line: 1814, column: 31, scope: !2985)
!3513 = !DILocation(line: 1814, column: 11, scope: !2932)
!3514 = !DILocation(line: 1816, column: 12, scope: !2984)
!3515 = !DILocation(line: 1816, column: 4, scope: !2984)
!3516 = !DILocation(line: 1816, column: 11, scope: !2984)
!3517 = !DILocation(line: 1816, column: 25, scope: !2984)
!3518 = !DILocation(line: 1817, column: 4, scope: !2984)
!3519 = !DILocation(line: 1817, column: 20, scope: !2984)
!3520 = !DILocation(line: 1817, column: 36, scope: !2984)
!3521 = !DILocation(line: 1817, column: 7, scope: !2984)
!3522 = !DILocation(line: 1817, column: 51, scope: !2984)
!3523 = !DILocation(line: 1819, column: 33, scope: !2982)
!3524 = !DILocation(line: 1819, column: 32, scope: !2982)
!3525 = !DILocation(line: 1819, column: 12, scope: !2982)
!3526 = !DILocation(line: 1819, column: 47, scope: !2982)
!3527 = !DILocation(line: 1819, column: 12, scope: !2983)
!3528 = !DILocation(line: 1822, column: 14, scope: !2981)
!3529 = !DILocation(line: 1822, column: 13, scope: !2981)
!3530 = !DILocation(line: 1821, column: 33, scope: !2981)
!3531 = !DILocation(line: 0, scope: !2981)
!3532 = !DILocation(line: 1823, column: 52, scope: !2981)
!3533 = !DILocation(line: 1823, column: 5, scope: !2981)
!3534 = !DILocation(line: 1831, column: 8, scope: !2983)
!3535 = !DILocation(line: 1824, column: 3, scope: !2981)
!3536 = !DILocation(line: 1827, column: 9, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !2982, file: !3, line: 1826, column: 3)
!3538 = !DILocation(line: 1828, column: 24, scope: !3537)
!3539 = !DILocation(line: 1828, column: 23, scope: !3537)
!3540 = !DILocation(line: 1828, column: 5, scope: !3537)
!3541 = !DILocation(line: 1828, column: 21, scope: !3537)
!3542 = !DILocation(line: 1829, column: 5, scope: !3537)
!3543 = !DILocation(line: 1829, column: 19, scope: !3537)
!3544 = distinct !{!3544, !3515, !3545}
!3545 = !DILocation(line: 1832, column: 6, scope: !2984)
!3546 = !DILocation(line: 1835, column: 22, scope: !2932)
!3547 = !DILocation(line: 1835, column: 21, scope: !2932)
!3548 = !DILocation(line: 1836, column: 23, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1836, column: 11)
!3550 = !DILocation(line: 1837, column: 4, scope: !3549)
!3551 = !DILocation(line: 1837, column: 15, scope: !3549)
!3552 = !DILocation(line: 1837, column: 21, scope: !3549)
!3553 = !DILocation(line: 1838, column: 23, scope: !3549)
!3554 = !DILocation(line: 1838, column: 8, scope: !3549)
!3555 = !DILocation(line: 1840, column: 4, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3549, file: !3, line: 1839, column: 2)
!3557 = !DILocation(line: 1841, column: 4, scope: !3556)
!3558 = !DILocation(line: 1843, column: 19, scope: !2932)
!3559 = !DILocation(line: 1844, column: 18, scope: !2932)
!3560 = !DILocation(line: 1845, column: 7, scope: !2932)
!3561 = !DILocation(line: 1845, column: 19, scope: !2932)
!3562 = !DILocation(line: 1845, column: 32, scope: !2932)
!3563 = !DILocation(line: 1846, column: 7, scope: !2932)
!3564 = !DILocation(line: 1846, column: 10, scope: !2932)
!3565 = !DILocation(line: 1846, column: 50, scope: !2932)
!3566 = !DILocation(line: 1848, column: 16, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1848, column: 11)
!3568 = !DILocation(line: 1847, column: 4, scope: !2932)
!3569 = distinct !{!3569, !3560, !3570}
!3570 = !DILocation(line: 1847, column: 6, scope: !2932)
!3571 = !DILocation(line: 1848, column: 29, scope: !3567)
!3572 = !DILocation(line: 1848, column: 11, scope: !2932)
!3573 = !DILocation(line: 1850, column: 8, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !3, line: 1850, column: 8)
!3575 = distinct !DILexicalBlock(scope: !3567, file: !3, line: 1849, column: 2)
!3576 = !DILocation(line: 1850, column: 8, scope: !3575)
!3577 = !DILocation(line: 1851, column: 6, scope: !3574)
!3578 = !DILocation(line: 1854, column: 6, scope: !3574)
!3579 = !DILocation(line: 1858, column: 11, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1858, column: 11)
!3581 = !DILocation(line: 1858, column: 11, scope: !2932)
!3582 = !DILocation(line: 1860, column: 8, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !3, line: 1860, column: 8)
!3584 = distinct !DILexicalBlock(scope: !3580, file: !3, line: 1859, column: 2)
!3585 = !DILocation(line: 1860, column: 29, scope: !3583)
!3586 = !DILocation(line: 1860, column: 27, scope: !3583)
!3587 = !DILocation(line: 1860, column: 8, scope: !3584)
!3588 = !DILocation(line: 1862, column: 8, scope: !3583)
!3589 = !DILocation(line: 1862, column: 49, scope: !3583)
!3590 = !DILocation(line: 1861, column: 6, scope: !3583)
!3591 = !DILocation(line: 0, scope: !2987)
!3592 = !DILocation(line: 0, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 1875, column: 10)
!3594 = !DILocation(line: 0, scope: !2993)
!3595 = !DILocation(line: 1868, column: 7, scope: !2991)
!3596 = !DILocation(line: 0, scope: !2991)
!3597 = !DILocation(line: 1867, column: 6, scope: !2987)
!3598 = !DILocation(line: 1868, column: 14, scope: !2990)
!3599 = !DILocation(line: 1868, column: 28, scope: !2990)
!3600 = !DILocation(line: 1868, column: 2, scope: !2991)
!3601 = !DILocation(line: 1871, column: 14, scope: !2989)
!3602 = !DILocation(line: 1870, column: 34, scope: !2989)
!3603 = !DILocation(line: 0, scope: !2989)
!3604 = !DILocation(line: 1872, column: 26, scope: !2989)
!3605 = !DILocation(line: 1872, column: 19, scope: !2989)
!3606 = !DILocation(line: 1872, column: 6, scope: !2989)
!3607 = !DILocation(line: 1872, column: 24, scope: !2989)
!3608 = !DILocation(line: 1873, column: 10, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 1873, column: 10)
!3610 = !DILocation(line: 1873, column: 32, scope: !3609)
!3611 = !DILocation(line: 1873, column: 24, scope: !3609)
!3612 = !DILocation(line: 1873, column: 10, scope: !2989)
!3613 = !DILocation(line: 1875, column: 23, scope: !3593)
!3614 = !DILocation(line: 1875, column: 10, scope: !3593)
!3615 = !DILocation(line: 1875, column: 50, scope: !3593)
!3616 = !DILocation(line: 1875, column: 10, scope: !2989)
!3617 = !DILocation(line: 1878, column: 5, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 1876, column: 8)
!3619 = !DILocation(line: 1878, column: 35, scope: !3618)
!3620 = !DILocation(line: 1877, column: 3, scope: !3618)
!3621 = !DILocation(line: 1879, column: 4, scope: !3618)
!3622 = !DILocation(line: 1880, column: 3, scope: !3618)
!3623 = !DILocation(line: 1882, column: 10, scope: !2994)
!3624 = !DILocation(line: 1882, column: 10, scope: !2989)
!3625 = !DILocation(line: 1885, column: 7, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 1885, column: 7)
!3627 = !DILocation(line: 1885, column: 26, scope: !3626)
!3628 = !DILocation(line: 1885, column: 24, scope: !3626)
!3629 = !DILocation(line: 1885, column: 7, scope: !2993)
!3630 = !DILocation(line: 1887, column: 7, scope: !3626)
!3631 = !DILocation(line: 1887, column: 28, scope: !3626)
!3632 = !DILocation(line: 1886, column: 5, scope: !3626)
!3633 = !DILocation(line: 1888, column: 34, scope: !2993)
!3634 = !DILocation(line: 1888, column: 54, scope: !2993)
!3635 = !DILocation(line: 1888, column: 7, scope: !2993)
!3636 = !DILocation(line: 1889, column: 9, scope: !2997)
!3637 = !DILocation(line: 1889, column: 17, scope: !2997)
!3638 = !DILocation(line: 1889, column: 20, scope: !2997)
!3639 = !DILocation(line: 1889, column: 39, scope: !2997)
!3640 = !DILocation(line: 1889, column: 37, scope: !2997)
!3641 = !DILocation(line: 1889, column: 7, scope: !2993)
!3642 = !DILocation(line: 1891, column: 35, scope: !2996)
!3643 = !DILocation(line: 1891, column: 45, scope: !2996)
!3644 = !DILocation(line: 1891, column: 32, scope: !2996)
!3645 = !DILocation(line: 0, scope: !2996)
!3646 = !DILocation(line: 1894, column: 11, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1894, column: 11)
!3648 = !DILocation(line: 1894, column: 30, scope: !3647)
!3649 = !DILocation(line: 1894, column: 28, scope: !3647)
!3650 = !DILocation(line: 1894, column: 11, scope: !2996)
!3651 = !DILocation(line: 1897, column: 11, scope: !3647)
!3652 = !DILocation(line: 1898, column: 29, scope: !3647)
!3653 = !DILocation(line: 1895, column: 9, scope: !3647)
!3654 = !DILocation(line: 1868, column: 35, scope: !2990)
!3655 = !DILocation(line: 1868, column: 2, scope: !2990)
!3656 = distinct !{!3656, !3600, !3657}
!3657 = !DILocation(line: 1901, column: 4, scope: !2991)
!3658 = !DILocation(line: 1902, column: 15, scope: !2987)
!3659 = !DILocation(line: 1902, column: 2, scope: !2987)
!3660 = !DILocation(line: 1902, column: 20, scope: !2987)
!3661 = !DILocation(line: 1905, column: 17, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1905, column: 11)
!3663 = !DILocation(line: 1905, column: 23, scope: !3662)
!3664 = !DILocation(line: 1906, column: 4, scope: !3662)
!3665 = !DILocation(line: 1906, column: 7, scope: !3662)
!3666 = !DILocation(line: 1906, column: 32, scope: !3662)
!3667 = !DILocation(line: 1905, column: 11, scope: !2932)
!3668 = !DILocation(line: 1908, column: 16, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1908, column: 11)
!3670 = !DILocation(line: 1908, column: 11, scope: !3669)
!3671 = !DILocation(line: 1908, column: 27, scope: !3669)
!3672 = !DILocation(line: 1908, column: 30, scope: !3669)
!3673 = !DILocation(line: 1908, column: 67, scope: !3669)
!3674 = !DILocation(line: 1908, column: 11, scope: !2932)
!3675 = !DILocation(line: 1911, column: 16, scope: !3046)
!3676 = !DILocation(line: 1911, column: 11, scope: !3046)
!3677 = !DILocation(line: 1912, column: 4, scope: !3046)
!3678 = !DILocation(line: 1912, column: 7, scope: !3046)
!3679 = !DILocation(line: 1912, column: 50, scope: !3046)
!3680 = !DILocation(line: 1911, column: 11, scope: !2932)
!3681 = !DILocation(line: 1916, column: 12, scope: !3001)
!3682 = !DILocation(line: 0, scope: !3001)
!3683 = !DILocation(line: 1916, column: 37, scope: !3000)
!3684 = !DILocation(line: 1916, column: 48, scope: !3000)
!3685 = !DILocation(line: 1916, column: 7, scope: !3001)
!3686 = !DILocation(line: 1919, column: 8, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 1919, column: 8)
!3688 = !DILocation(line: 1919, column: 58, scope: !3687)
!3689 = !DILocation(line: 1919, column: 8, scope: !2999)
!3690 = !DILocation(line: 1921, column: 46, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 1921, column: 8)
!3692 = !DILocation(line: 1921, column: 8, scope: !3691)
!3693 = !DILocation(line: 1921, column: 58, scope: !3691)
!3694 = !DILocation(line: 1921, column: 8, scope: !2999)
!3695 = !DILocation(line: 1923, column: 26, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 1923, column: 8)
!3697 = !DILocation(line: 1923, column: 36, scope: !3696)
!3698 = !DILocation(line: 1924, column: 8, scope: !3696)
!3699 = !DILocation(line: 1924, column: 24, scope: !3696)
!3700 = !DILocation(line: 1924, column: 11, scope: !3696)
!3701 = !DILocation(line: 1924, column: 61, scope: !3696)
!3702 = !DILocation(line: 1923, column: 8, scope: !2999)
!3703 = !DILocation(line: 1926, column: 53, scope: !2999)
!3704 = !DILocation(line: 1926, column: 8, scope: !2999)
!3705 = !DILocation(line: 0, scope: !2999)
!3706 = !DILocation(line: 1927, column: 53, scope: !2999)
!3707 = !DILocation(line: 1927, column: 8, scope: !2999)
!3708 = !DILocation(line: 1928, column: 26, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 1928, column: 8)
!3710 = !DILocation(line: 1928, column: 8, scope: !3709)
!3711 = !DILocation(line: 0, scope: !3709)
!3712 = !DILocation(line: 1928, column: 8, scope: !2999)
!3713 = !DILocation(line: 1930, column: 12, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 1929, column: 6)
!3715 = !DILocation(line: 1931, column: 3, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 1930, column: 12)
!3717 = !DILocation(line: 1936, column: 3, scope: !3716)
!3718 = !DILocation(line: 1941, column: 12, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 1940, column: 6)
!3720 = !DILocation(line: 1942, column: 3, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 1941, column: 12)
!3722 = !DILocation(line: 1947, column: 3, scope: !3721)
!3723 = !DILocation(line: 1916, column: 55, scope: !3000)
!3724 = !DILocation(line: 1916, column: 7, scope: !3000)
!3725 = distinct !{!3725, !3685, !3726}
!3726 = !DILocation(line: 1950, column: 2, scope: !3001)
!3727 = !DILocation(line: 1953, column: 11, scope: !3005)
!3728 = !DILocation(line: 1953, column: 11, scope: !2932)
!3729 = !DILocation(line: 0, scope: !3004)
!3730 = !DILocation(line: 1956, column: 21, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 1956, column: 8)
!3732 = !DILocation(line: 1956, column: 8, scope: !3731)
!3733 = !DILocation(line: 1956, column: 34, scope: !3731)
!3734 = !DILocation(line: 1956, column: 8, scope: !3004)
!3735 = !DILocation(line: 1957, column: 10, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 1957, column: 10)
!3737 = !DILocation(line: 1957, column: 35, scope: !3736)
!3738 = !DILocation(line: 1957, column: 38, scope: !3736)
!3739 = !DILocation(line: 1961, column: 26, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 1961, column: 13)
!3741 = !DILocation(line: 1961, column: 13, scope: !3740)
!3742 = !DILocation(line: 1961, column: 39, scope: !3740)
!3743 = !DILocation(line: 1961, column: 13, scope: !3731)
!3744 = !DILocation(line: 1963, column: 26, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 1963, column: 13)
!3746 = !DILocation(line: 1963, column: 13, scope: !3745)
!3747 = !DILocation(line: 1963, column: 39, scope: !3745)
!3748 = !DILocation(line: 1963, column: 13, scope: !3740)
!3749 = !DILocation(line: 0, scope: !3731)
!3750 = !DILocation(line: 1965, column: 8, scope: !3004)
!3751 = !DILocation(line: 1966, column: 6, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 1965, column: 8)
!3753 = !DILocation(line: 1969, column: 6, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3752, file: !3, line: 1968, column: 13)
!3755 = !DILocation(line: 1973, column: 24, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1973, column: 11)
!3757 = !DILocation(line: 1973, column: 11, scope: !3756)
!3758 = !DILocation(line: 1973, column: 37, scope: !3756)
!3759 = !DILocation(line: 1973, column: 11, scope: !2932)
!3760 = !DILocation(line: 1976, column: 9, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 1976, column: 8)
!3762 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 1974, column: 2)
!3763 = !DILocation(line: 1976, column: 8, scope: !3761)
!3764 = !DILocation(line: 1976, column: 22, scope: !3761)
!3765 = !DILocation(line: 1976, column: 8, scope: !3762)
!3766 = !DILocation(line: 1977, column: 6, scope: !3761)
!3767 = !DILocation(line: 1980, column: 8, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 1980, column: 8)
!3769 = !DILocation(line: 1980, column: 9, scope: !3768)
!3770 = !DILocation(line: 1980, column: 22, scope: !3768)
!3771 = !DILocation(line: 1980, column: 8, scope: !3762)
!3772 = !DILocation(line: 1981, column: 6, scope: !3768)
!3773 = !DILocation(line: 1982, column: 4, scope: !3762)
!3774 = !DILocation(line: 1982, column: 12, scope: !3762)
!3775 = !DILocation(line: 1982, column: 11, scope: !3762)
!3776 = !DILocation(line: 1982, column: 25, scope: !3762)
!3777 = !DILocation(line: 1982, column: 42, scope: !3762)
!3778 = !DILocation(line: 0, scope: !3762)
!3779 = !DILocation(line: 1983, column: 6, scope: !3762)
!3780 = distinct !{!3780, !3773, !3781}
!3781 = !DILocation(line: 1983, column: 8, scope: !3762)
!3782 = !DILocation(line: 1984, column: 22, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 1984, column: 8)
!3784 = !DILocation(line: 1984, column: 8, scope: !3762)
!3785 = !DILocation(line: 1986, column: 6, scope: !3783)
!3786 = !DILocation(line: 1991, column: 16, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1991, column: 11)
!3788 = !DILocation(line: 1991, column: 22, scope: !3787)
!3789 = !DILocation(line: 1991, column: 11, scope: !2932)
!3790 = !DILocation(line: 1993, column: 19, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1992, column: 2)
!3792 = !DILocation(line: 1993, column: 48, scope: !3791)
!3793 = !DILocation(line: 1994, column: 7, scope: !3791)
!3794 = !DILocation(line: 1995, column: 52, scope: !3791)
!3795 = !DILocation(line: 1996, column: 51, scope: !3791)
!3796 = !DILocation(line: 1997, column: 20, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 1997, column: 8)
!3798 = !DILocation(line: 1997, column: 8, scope: !3791)
!3799 = !DILocation(line: 1999, column: 8, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3797, file: !3, line: 1998, column: 6)
!3801 = !DILocation(line: 2004, column: 15, scope: !3800)
!3802 = !DILocation(line: 2005, column: 12, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 2005, column: 12)
!3804 = !DILocation(line: 2005, column: 19, scope: !3803)
!3805 = !DILocation(line: 2005, column: 12, scope: !3800)
!3806 = !DILocation(line: 2007, column: 5, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 2006, column: 3)
!3808 = !DILocation(line: 2008, column: 5, scope: !3807)
!3809 = !DILocation(line: 2010, column: 17, scope: !3800)
!3810 = !DILocation(line: 2010, column: 15, scope: !3800)
!3811 = !DILocation(line: 2011, column: 8, scope: !3800)
!3812 = !DILocation(line: 2013, column: 13, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3797, file: !3, line: 2013, column: 13)
!3814 = !DILocation(line: 2017, column: 6, scope: !3813)
!3815 = !DILocation(line: 2017, column: 9, scope: !3813)
!3816 = !DILocation(line: 2017, column: 37, scope: !3813)
!3817 = !DILocation(line: 2017, column: 35, scope: !3813)
!3818 = !DILocation(line: 2018, column: 6, scope: !3813)
!3819 = !DILocation(line: 2018, column: 9, scope: !3813)
!3820 = !DILocation(line: 2018, column: 37, scope: !3813)
!3821 = !DILocation(line: 2018, column: 35, scope: !3813)
!3822 = !DILocation(line: 2013, column: 13, scope: !3797)
!3823 = !DILocation(line: 2020, column: 12, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 2020, column: 12)
!3825 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 2019, column: 6)
!3826 = !DILocation(line: 2020, column: 40, scope: !3824)
!3827 = !DILocation(line: 2020, column: 38, scope: !3824)
!3828 = !DILocation(line: 2020, column: 12, scope: !3825)
!3829 = !DILocation(line: 2023, column: 5, scope: !3824)
!3830 = !DILocation(line: 2024, column: 23, scope: !3824)
!3831 = !DILocation(line: 2021, column: 3, scope: !3824)
!3832 = !DILocation(line: 2028, column: 29, scope: !2932)
!3833 = !DILocation(line: 2031, column: 17, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 2031, column: 11)
!3835 = !DILocation(line: 2031, column: 31, scope: !3834)
!3836 = !DILocation(line: 2031, column: 11, scope: !2932)
!3837 = !DILocation(line: 2033, column: 17, scope: !3008)
!3838 = !DILocation(line: 2033, column: 31, scope: !3008)
!3839 = !DILocation(line: 2033, column: 54, scope: !3008)
!3840 = !DILocation(line: 2033, column: 51, scope: !3008)
!3841 = !DILocation(line: 2033, column: 36, scope: !3008)
!3842 = !DILocation(line: 2034, column: 7, scope: !3008)
!3843 = !DILocation(line: 0, scope: !3008)
!3844 = !DILocation(line: 2036, column: 8, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 2035, column: 2)
!3846 = !DILocation(line: 2038, column: 12, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 2038, column: 12)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 2037, column: 6)
!3849 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2036, column: 8)
!3850 = !DILocation(line: 2038, column: 12, scope: !3848)
!3851 = !DILocation(line: 2039, column: 3, scope: !3847)
!3852 = !DILocation(line: 2042, column: 3, scope: !3847)
!3853 = !DILocation(line: 2050, column: 8, scope: !3007)
!3854 = !DILocation(line: 2052, column: 18, scope: !3048)
!3855 = !DILocation(line: 2053, column: 17, scope: !3048)
!3856 = !DILocation(line: 2053, column: 15, scope: !3048)
!3857 = !DILocation(line: 2054, column: 6, scope: !3048)
!3858 = !DILocation(line: 2057, column: 8, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 2056, column: 6)
!3860 = !DILocation(line: 2058, column: 31, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 2058, column: 12)
!3862 = !DILocation(line: 2058, column: 12, scope: !3859)
!3863 = !DILocation(line: 2060, column: 5, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 2059, column: 3)
!3865 = !DILocation(line: 2061, column: 5, scope: !3864)
!3866 = !DILocation(line: 0, scope: !3049)
!3867 = !DILocation(line: 0, scope: !3007)
!3868 = !DILocation(line: 0, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2086, column: 12)
!3870 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 2069, column: 6)
!3871 = !DILocation(line: 0, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2090, column: 12)
!3873 = !DILocation(line: 0, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 2111, column: 3)
!3875 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2110, column: 12)
!3876 = !DILocation(line: 2068, column: 4, scope: !3007)
!3877 = !DILocation(line: 2070, column: 12, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2070, column: 12)
!3879 = !DILocation(line: 2070, column: 19, scope: !3878)
!3880 = !DILocation(line: 2070, column: 12, scope: !3870)
!3881 = !DILocation(line: 2076, column: 20, scope: !3870)
!3882 = !DILocation(line: 2077, column: 17, scope: !3870)
!3883 = !DILocation(line: 2077, column: 15, scope: !3870)
!3884 = !DILocation(line: 2079, column: 25, scope: !3870)
!3885 = !DILocation(line: 2079, column: 37, scope: !3870)
!3886 = !DILocation(line: 2080, column: 25, scope: !3870)
!3887 = !DILocation(line: 2080, column: 42, scope: !3870)
!3888 = !DILocation(line: 2081, column: 46, scope: !3870)
!3889 = !DILocation(line: 2081, column: 60, scope: !3870)
!3890 = !DILocation(line: 2081, column: 25, scope: !3870)
!3891 = !DILocation(line: 2081, column: 39, scope: !3870)
!3892 = !DILocation(line: 2082, column: 25, scope: !3870)
!3893 = !DILocation(line: 2082, column: 43, scope: !3870)
!3894 = !DILocation(line: 2083, column: 25, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2083, column: 12)
!3896 = !DILocation(line: 2083, column: 12, scope: !3895)
!3897 = !DILocation(line: 2083, column: 38, scope: !3895)
!3898 = !DILocation(line: 2083, column: 12, scope: !3870)
!3899 = !DILocation(line: 2084, column: 38, scope: !3895)
!3900 = !DILocation(line: 2084, column: 3, scope: !3895)
!3901 = !DILocation(line: 2085, column: 25, scope: !3870)
!3902 = !DILocation(line: 2085, column: 46, scope: !3870)
!3903 = !DILocation(line: 2088, column: 25, scope: !3870)
!3904 = !DILocation(line: 2088, column: 41, scope: !3870)
!3905 = !DILocation(line: 2089, column: 25, scope: !3870)
!3906 = !DILocation(line: 2089, column: 43, scope: !3870)
!3907 = !DILocation(line: 2090, column: 12, scope: !3870)
!3908 = !DILocation(line: 2091, column: 36, scope: !3872)
!3909 = !DILocation(line: 2091, column: 3, scope: !3872)
!3910 = !DILocation(line: 2094, column: 22, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 2094, column: 9)
!3912 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 2093, column: 3)
!3913 = !DILocation(line: 2094, column: 9, scope: !3911)
!3914 = !DILocation(line: 2094, column: 35, scope: !3911)
!3915 = !DILocation(line: 2094, column: 9, scope: !3912)
!3916 = !DILocation(line: 2095, column: 40, scope: !3911)
!3917 = !DILocation(line: 2095, column: 7, scope: !3911)
!3918 = !DILocation(line: 2096, column: 22, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 2096, column: 9)
!3920 = !DILocation(line: 2096, column: 9, scope: !3919)
!3921 = !DILocation(line: 2096, column: 35, scope: !3919)
!3922 = !DILocation(line: 2096, column: 9, scope: !3912)
!3923 = !DILocation(line: 2097, column: 42, scope: !3919)
!3924 = !DILocation(line: 2097, column: 7, scope: !3919)
!3925 = !DILocation(line: 2099, column: 25, scope: !3870)
!3926 = !DILocation(line: 2099, column: 30, scope: !3870)
!3927 = !DILocation(line: 2100, column: 25, scope: !3870)
!3928 = !DILocation(line: 2100, column: 31, scope: !3870)
!3929 = !DILocation(line: 2101, column: 35, scope: !3870)
!3930 = !DILocation(line: 2101, column: 25, scope: !3870)
!3931 = !DILocation(line: 2101, column: 33, scope: !3870)
!3932 = !DILocation(line: 2102, column: 25, scope: !3870)
!3933 = !DILocation(line: 2102, column: 30, scope: !3870)
!3934 = !DILocation(line: 2103, column: 29, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2103, column: 12)
!3936 = !DILocation(line: 2103, column: 12, scope: !3870)
!3937 = !DILocation(line: 2104, column: 21, scope: !3935)
!3938 = !DILocation(line: 2104, column: 26, scope: !3935)
!3939 = !DILocation(line: 2104, column: 3, scope: !3935)
!3940 = !DILocation(line: 2105, column: 30, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2105, column: 12)
!3942 = !DILocation(line: 2105, column: 12, scope: !3870)
!3943 = !DILocation(line: 2109, column: 19, scope: !3870)
!3944 = !DILocation(line: 2110, column: 12, scope: !3875)
!3945 = !DILocation(line: 2110, column: 12, scope: !3870)
!3946 = !DILocation(line: 2113, column: 23, scope: !3874)
!3947 = !DILocation(line: 2112, column: 37, scope: !3874)
!3948 = !DILocation(line: 2114, column: 12, scope: !3874)
!3949 = !DILocation(line: 2115, column: 49, scope: !3874)
!3950 = !DILocation(line: 2115, column: 19, scope: !3874)
!3951 = !DILocation(line: 2116, column: 53, scope: !3874)
!3952 = !DILocation(line: 2117, column: 3, scope: !3874)
!3953 = distinct !{!3953, !3876, !3954}
!3954 = !DILocation(line: 2118, column: 6, scope: !3007)
!3955 = !DILocation(line: 2072, column: 5, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3878, file: !3, line: 2071, column: 3)
!3957 = !DILocation(line: 2073, column: 5, scope: !3956)
!3958 = !DILocation(line: 2087, column: 41, scope: !3869)
!3959 = !DILocation(line: 1731, column: 25, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1730, column: 9)
!3961 = !DILocation(line: 2121, column: 29, scope: !3051)
!3962 = !DILocation(line: 2121, column: 11, scope: !2932)
!3963 = !DILocation(line: 2123, column: 8, scope: !3051)
!3964 = !DILocation(line: 2123, column: 21, scope: !3051)
!3965 = !DILocation(line: 2122, column: 2, scope: !3051)
!3966 = !DILocation(line: 2125, column: 1, scope: !2914)
!3967 = distinct !DISubprogram(name: "init_dollar_format_checking", scope: !3, file: !3, line: 949, type: !3968, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3970)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{null, !259, !266}
!3970 = !{!3971, !3972, !3973, !3974}
!3971 = !DILocalVariable(name: "first_arg_num", arg: 1, scope: !3967, file: !3, line: 949, type: !259)
!3972 = !DILocalVariable(name: "params", arg: 2, scope: !3967, file: !3, line: 949, type: !266)
!3973 = !DILocalVariable(name: "oparams", scope: !3967, file: !3, line: 951, type: !266)
!3974 = !DILocalVariable(name: "i", scope: !3975, file: !3, line: 980, type: !259)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 979, column: 2)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 978, column: 11)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 976, column: 5)
!3978 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 975, column: 7)
!3979 = !DILocation(line: 0, scope: !3967)
!3980 = !DILocation(line: 953, column: 24, scope: !3967)
!3981 = !DILocation(line: 954, column: 26, scope: !3967)
!3982 = !DILocation(line: 955, column: 23, scope: !3967)
!3983 = !DILocation(line: 956, column: 24, scope: !3967)
!3984 = !DILocation(line: 957, column: 21, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 957, column: 7)
!3986 = !DILocation(line: 957, column: 7, scope: !3967)
!3987 = !DILocation(line: 959, column: 7, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 958, column: 5)
!3989 = !DILocation(line: 961, column: 26, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 960, column: 2)
!3991 = !DILocation(line: 962, column: 13, scope: !3990)
!3992 = distinct !{!3992, !3987, !3993}
!3993 = !DILocation(line: 963, column: 2, scope: !3988)
!3994 = !DILocation(line: 965, column: 7, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 965, column: 7)
!3996 = !DILocation(line: 965, column: 32, scope: !3995)
!3997 = !DILocation(line: 965, column: 30, scope: !3995)
!3998 = !DILocation(line: 965, column: 7, scope: !3967)
!3999 = !DILocation(line: 967, column: 11, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 967, column: 11)
!4001 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 966, column: 5)
!4002 = !DILocation(line: 967, column: 11, scope: !4001)
!4003 = !DILocation(line: 968, column: 2, scope: !4000)
!4004 = !DILocation(line: 969, column: 11, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 969, column: 11)
!4006 = !DILocation(line: 969, column: 11, scope: !4001)
!4007 = !DILocation(line: 970, column: 2, scope: !4005)
!4008 = !DILocation(line: 971, column: 32, scope: !4001)
!4009 = !DILocation(line: 971, column: 30, scope: !4001)
!4010 = !DILocation(line: 972, column: 31, scope: !4001)
!4011 = !DILocation(line: 972, column: 29, scope: !4001)
!4012 = !DILocation(line: 973, column: 36, scope: !4001)
!4013 = !DILocation(line: 973, column: 34, scope: !4001)
!4014 = !DILocation(line: 975, column: 7, scope: !3978)
!4015 = !DILocation(line: 974, column: 5, scope: !4001)
!4016 = !DILocation(line: 975, column: 7, scope: !3967)
!4017 = !DILocation(line: 977, column: 15, scope: !3977)
!4018 = !DILocation(line: 977, column: 41, scope: !3977)
!4019 = !DILocation(line: 977, column: 7, scope: !3977)
!4020 = !DILocation(line: 978, column: 11, scope: !3977)
!4021 = !DILocation(line: 982, column: 4, scope: !3975)
!4022 = !DILocation(line: 0, scope: !3975)
!4023 = !DILocation(line: 984, column: 41, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 983, column: 6)
!4025 = !DILocation(line: 985, column: 13, scope: !4024)
!4026 = !DILocation(line: 984, column: 40, scope: !4024)
!4027 = !DILocation(line: 984, column: 8, scope: !4024)
!4028 = !DILocation(line: 984, column: 38, scope: !4024)
!4029 = !DILocation(line: 986, column: 17, scope: !4024)
!4030 = !DILocation(line: 987, column: 9, scope: !4024)
!4031 = distinct !{!4031, !4021, !4032}
!4032 = !DILocation(line: 988, column: 6, scope: !3975)
!4033 = !DILocation(line: 991, column: 1, scope: !3967)
!4034 = distinct !DISubprogram(name: "finish_dollar_format_checking", scope: !3, file: !3, line: 1125, type: !4035, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4037)
!4035 = !DISubroutineType(types: !4036)
!4036 = !{null, !986, !259}
!4037 = !{!4038, !4039, !4040, !4041}
!4038 = !DILocalVariable(name: "res", arg: 1, scope: !4034, file: !3, line: 1125, type: !986)
!4039 = !DILocalVariable(name: "pointer_gap_ok", arg: 2, scope: !4034, file: !3, line: 1125, type: !259)
!4040 = !DILocalVariable(name: "i", scope: !4034, file: !3, line: 1127, type: !259)
!4041 = !DILocalVariable(name: "found_pointer_gap", scope: !4034, file: !3, line: 1128, type: !258)
!4042 = !DILocation(line: 0, scope: !4034)
!4043 = !DILocation(line: 0, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !3, line: 1133, column: 8)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 1132, column: 2)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 1131, column: 11)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 1130, column: 5)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1129, column: 3)
!4049 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 1129, column: 3)
!4050 = !DILocation(line: 1129, column: 8, scope: !4049)
!4051 = !DILocation(line: 0, scope: !4049)
!4052 = !DILocation(line: 1129, column: 19, scope: !4048)
!4053 = !DILocation(line: 1129, column: 17, scope: !4048)
!4054 = !DILocation(line: 1129, column: 3, scope: !4049)
!4055 = !DILocation(line: 1131, column: 12, scope: !4046)
!4056 = !DILocation(line: 1131, column: 11, scope: !4047)
!4057 = !DILocation(line: 1129, column: 41, scope: !4048)
!4058 = !DILocation(line: 1139, column: 10, scope: !4044)
!4059 = !DILocation(line: 1137, column: 6, scope: !4044)
!4060 = !DILocation(line: 1129, column: 3, scope: !4048)
!4061 = distinct !{!4061, !4054, !4062}
!4062 = !DILocation(line: 1141, column: 5, scope: !4049)
!4063 = !DILocation(line: 1142, column: 7, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 1142, column: 7)
!4065 = !DILocation(line: 1128, column: 8, scope: !4034)
!4066 = !DILocation(line: 1133, column: 27, scope: !4044)
!4067 = !DILocation(line: 1133, column: 48, scope: !4044)
!4068 = !DILocation(line: 1134, column: 6, scope: !4044)
!4069 = !DILocation(line: 1134, column: 9, scope: !4044)
!4070 = !DILocation(line: 1133, column: 8, scope: !4045)
!4071 = !DILocation(line: 1143, column: 7, scope: !4064)
!4072 = !DILocation(line: 1143, column: 11, scope: !4064)
!4073 = !DILocation(line: 1144, column: 4, scope: !4064)
!4074 = !DILocation(line: 1144, column: 29, scope: !4064)
!4075 = !DILocation(line: 1144, column: 27, scope: !4064)
!4076 = !DILocation(line: 1142, column: 7, scope: !4034)
!4077 = !DILocation(line: 1146, column: 12, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 1145, column: 5)
!4079 = !DILocation(line: 1146, column: 24, scope: !4078)
!4080 = !DILocation(line: 1147, column: 12, scope: !4078)
!4081 = !DILocation(line: 1147, column: 36, scope: !4078)
!4082 = !DILocation(line: 1148, column: 5, scope: !4078)
!4083 = !DILocation(line: 1149, column: 1, scope: !4034)
!4084 = distinct !DISubprogram(name: "maybe_read_dollar_number", scope: !3, file: !3, line: 1004, type: !4085, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4088)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{!259, !4087, !259, !266, !621, !1213}
!4087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!4088 = !{!4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4099, !4101}
!4089 = !DILocalVariable(name: "format", arg: 1, scope: !4084, file: !3, line: 1004, type: !4087)
!4090 = !DILocalVariable(name: "dollar_needed", arg: 2, scope: !4084, file: !3, line: 1005, type: !259)
!4091 = !DILocalVariable(name: "params", arg: 3, scope: !4084, file: !3, line: 1005, type: !266)
!4092 = !DILocalVariable(name: "param_ptr", arg: 4, scope: !4084, file: !3, line: 1005, type: !621)
!4093 = !DILocalVariable(name: "fki", arg: 5, scope: !4084, file: !3, line: 1006, type: !1213)
!4094 = !DILocalVariable(name: "argnum", scope: !4084, file: !3, line: 1008, type: !259)
!4095 = !DILocalVariable(name: "overflow_flag", scope: !4084, file: !3, line: 1009, type: !259)
!4096 = !DILocalVariable(name: "fcp", scope: !4084, file: !3, line: 1010, type: !264)
!4097 = !DILocalVariable(name: "nargnum", scope: !4098, file: !3, line: 1025, type: !259)
!4098 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1024, column: 5)
!4099 = !DILocalVariable(name: "nalloc", scope: !4100, file: !3, line: 1061, type: !259)
!4100 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1060, column: 5)
!4101 = !DILocalVariable(name: "i", scope: !4102, file: !3, line: 1082, type: !259)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 1081, column: 5)
!4103 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1080, column: 7)
!4104 = !DILocation(line: 0, scope: !4084)
!4105 = !DILocation(line: 1010, column: 21, scope: !4084)
!4106 = !DILocation(line: 1011, column: 8, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1011, column: 7)
!4108 = !DILocation(line: 1011, column: 7, scope: !4084)
!4109 = !DILocation(line: 1023, column: 3, scope: !4084)
!4110 = !DILocation(line: 1013, column: 11, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 1013, column: 11)
!4112 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 1012, column: 5)
!4113 = !DILocation(line: 1013, column: 11, scope: !4112)
!4114 = !DILocation(line: 1015, column: 4, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 1014, column: 2)
!4116 = !DILocation(line: 1016, column: 4, scope: !4115)
!4117 = !DILocation(line: 1023, column: 10, scope: !4084)
!4118 = !DILocation(line: 1026, column: 20, scope: !4098)
!4119 = !DILocation(line: 1026, column: 32, scope: !4098)
!4120 = !DILocation(line: 1026, column: 37, scope: !4098)
!4121 = !DILocation(line: 1026, column: 29, scope: !4098)
!4122 = !DILocation(line: 0, scope: !4098)
!4123 = !DILocation(line: 1027, column: 19, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 1027, column: 11)
!4125 = !DILocation(line: 1027, column: 34, scope: !4124)
!4126 = !DILocation(line: 1027, column: 39, scope: !4124)
!4127 = !DILocation(line: 1027, column: 23, scope: !4124)
!4128 = !DILocation(line: 1030, column: 10, scope: !4098)
!4129 = distinct !{!4129, !4109, !4130}
!4130 = !DILocation(line: 1031, column: 5, scope: !4084)
!4131 = !DILocation(line: 1032, column: 12, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1032, column: 7)
!4133 = !DILocation(line: 1032, column: 7, scope: !4084)
!4134 = !DILocation(line: 1034, column: 11, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 1034, column: 11)
!4136 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1033, column: 5)
!4137 = !DILocation(line: 1034, column: 11, scope: !4136)
!4138 = !DILocation(line: 1036, column: 4, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 1035, column: 2)
!4140 = !DILocation(line: 1037, column: 4, scope: !4139)
!4141 = !DILocation(line: 1042, column: 17, scope: !4084)
!4142 = !DILocation(line: 1042, column: 11, scope: !4084)
!4143 = !DILocation(line: 1043, column: 7, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1043, column: 7)
!4145 = !DILocation(line: 1043, column: 20, scope: !4144)
!4146 = !DILocation(line: 1043, column: 16, scope: !4144)
!4147 = !DILocation(line: 1046, column: 9, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 1044, column: 5)
!4149 = !DILocation(line: 1045, column: 7, scope: !4148)
!4150 = !DILocation(line: 1047, column: 28, scope: !4148)
!4151 = !DILocation(line: 1048, column: 5, scope: !4148)
!4152 = !DILocation(line: 1049, column: 7, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1049, column: 7)
!4154 = !DILocation(line: 1049, column: 31, scope: !4153)
!4155 = !DILocation(line: 1049, column: 21, scope: !4153)
!4156 = !DILocation(line: 1050, column: 11, scope: !4153)
!4157 = !DILocation(line: 1050, column: 44, scope: !4153)
!4158 = !DILocation(line: 1050, column: 42, scope: !4153)
!4159 = !DILocation(line: 1050, column: 32, scope: !4153)
!4160 = !DILocation(line: 1052, column: 7, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 1051, column: 5)
!4162 = !DILocation(line: 1053, column: 7, scope: !4161)
!4163 = !DILocation(line: 1055, column: 16, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1055, column: 7)
!4165 = !DILocation(line: 1055, column: 14, scope: !4164)
!4166 = !DILocation(line: 1055, column: 7, scope: !4084)
!4167 = !DILocation(line: 1056, column: 25, scope: !4164)
!4168 = !DILocation(line: 1056, column: 5, scope: !4164)
!4169 = !DILocation(line: 1059, column: 10, scope: !4084)
!4170 = !DILocation(line: 1059, column: 3, scope: !4084)
!4171 = !DILocation(line: 1059, column: 35, scope: !4084)
!4172 = !DILocation(line: 1059, column: 33, scope: !4084)
!4173 = !DILocation(line: 1062, column: 18, scope: !4100)
!4174 = !DILocation(line: 1062, column: 43, scope: !4100)
!4175 = !DILocation(line: 0, scope: !4100)
!4176 = !DILocation(line: 1063, column: 31, scope: !4100)
!4177 = !DILocation(line: 1063, column: 29, scope: !4100)
!4178 = !DILocation(line: 1065, column: 36, scope: !4100)
!4179 = !DILocation(line: 1065, column: 34, scope: !4100)
!4180 = !DILocation(line: 1067, column: 15, scope: !4100)
!4181 = !DILocation(line: 1067, column: 39, scope: !4100)
!4182 = !DILocation(line: 1067, column: 37, scope: !4100)
!4183 = !DILocation(line: 1068, column: 15, scope: !4100)
!4184 = !DILocation(line: 1068, column: 8, scope: !4100)
!4185 = !DILocation(line: 1067, column: 7, scope: !4100)
!4186 = !DILocation(line: 1069, column: 30, scope: !4100)
!4187 = distinct !{!4187, !4170, !4188}
!4188 = !DILocation(line: 1070, column: 5, scope: !4084)
!4189 = !DILocation(line: 1071, column: 14, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 1071, column: 7)
!4191 = !DILocation(line: 1071, column: 20, scope: !4190)
!4192 = !DILocation(line: 1072, column: 7, scope: !4190)
!4193 = !DILocation(line: 1079, column: 5, scope: !4190)
!4194 = !DILocation(line: 1079, column: 34, scope: !4190)
!4195 = !DILocation(line: 1072, column: 10, scope: !4190)
!4196 = !DILocation(line: 1072, column: 39, scope: !4190)
!4197 = !DILocation(line: 1072, column: 44, scope: !4190)
!4198 = !DILocation(line: 1071, column: 7, scope: !4084)
!4199 = !DILocation(line: 1074, column: 41, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4190, file: !3, line: 1073, column: 5)
!4201 = !DILocation(line: 1076, column: 22, scope: !4200)
!4202 = !DILocation(line: 1075, column: 7, scope: !4200)
!4203 = !DILocation(line: 1077, column: 5, scope: !4200)
!4204 = !DILocation(line: 1079, column: 39, scope: !4190)
!4205 = !DILocation(line: 1080, column: 7, scope: !4103)
!4206 = !DILocation(line: 1080, column: 7, scope: !4084)
!4207 = !DILocation(line: 1083, column: 18, scope: !4102)
!4208 = !DILocation(line: 0, scope: !4102)
!4209 = !DILocation(line: 0, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 1084, column: 7)
!4211 = distinct !DILexicalBlock(scope: !4102, file: !3, line: 1084, column: 7)
!4212 = !DILocation(line: 1084, column: 12, scope: !4211)
!4213 = !DILocation(line: 0, scope: !4211)
!4214 = !DILocation(line: 1084, column: 21, scope: !4210)
!4215 = !DILocation(line: 1084, column: 30, scope: !4210)
!4216 = !DILocation(line: 1084, column: 44, scope: !4210)
!4217 = !DILocation(line: 1084, column: 7, scope: !4211)
!4218 = !DILocation(line: 1085, column: 15, scope: !4210)
!4219 = !DILocation(line: 1085, column: 13, scope: !4210)
!4220 = !DILocation(line: 1084, column: 51, scope: !4210)
!4221 = !DILocation(line: 1084, column: 7, scope: !4210)
!4222 = distinct !{!4222, !4217, !4223}
!4223 = !DILocation(line: 1085, column: 15, scope: !4211)
!4224 = !DILocation(line: 1088, column: 7, scope: !4102)
!4225 = !DILocation(line: 1091, column: 16, scope: !4103)
!4226 = !DILocation(line: 1093, column: 1, scope: !4084)
!4227 = distinct !DISubprogram(name: "avoid_dollar_number", scope: !3, file: !3, line: 1099, type: !4228, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4230)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!258, !264}
!4230 = !{!4231}
!4231 = !DILocalVariable(name: "format", arg: 1, scope: !4227, file: !3, line: 1099, type: !264)
!4232 = !DILocation(line: 0, scope: !4227)
!4233 = !DILocation(line: 1101, column: 8, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 1101, column: 7)
!4235 = !DILocation(line: 1101, column: 7, scope: !4227)
!4236 = !DILocation(line: 1103, column: 3, scope: !4227)
!4237 = !DILocation(line: 1103, column: 10, scope: !4227)
!4238 = !DILocation(line: 1104, column: 11, scope: !4227)
!4239 = distinct !{!4239, !4236, !4238}
!4240 = !DILocation(line: 1105, column: 15, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 1105, column: 7)
!4242 = !DILocation(line: 1105, column: 7, scope: !4227)
!4243 = !DILocation(line: 1107, column: 7, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 1106, column: 5)
!4245 = !DILocation(line: 1108, column: 7, scope: !4244)
!4246 = !DILocation(line: 1111, column: 1, scope: !4227)
!4247 = distinct !DISubprogram(name: "get_flag_spec", scope: !3, file: !3, line: 1161, type: !4248, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4250)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!951, !951, !259, !264}
!4250 = !{!4251, !4252, !4253, !4254}
!4251 = !DILocalVariable(name: "spec", arg: 1, scope: !4247, file: !3, line: 1161, type: !951)
!4252 = !DILocalVariable(name: "flag", arg: 2, scope: !4247, file: !3, line: 1161, type: !259)
!4253 = !DILocalVariable(name: "predicates", arg: 3, scope: !4247, file: !3, line: 1161, type: !264)
!4254 = !DILocalVariable(name: "i", scope: !4247, file: !3, line: 1163, type: !259)
!4255 = !DILocation(line: 0, scope: !4247)
!4256 = !DILocation(line: 0, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 1168, column: 11)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 1165, column: 5)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 1164, column: 3)
!4260 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 1164, column: 3)
!4261 = !DILocation(line: 1164, column: 8, scope: !4260)
!4262 = !DILocation(line: 0, scope: !4260)
!4263 = !DILocation(line: 1164, column: 23, scope: !4259)
!4264 = !DILocation(line: 1164, column: 33, scope: !4259)
!4265 = !DILocation(line: 1164, column: 3, scope: !4260)
!4266 = !DILocation(line: 1166, column: 29, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 1166, column: 11)
!4268 = !DILocation(line: 1166, column: 11, scope: !4258)
!4269 = !DILocation(line: 1174, column: 34, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 1174, column: 16)
!4271 = !DILocation(line: 1174, column: 16, scope: !4257)
!4272 = !DILocation(line: 1164, column: 40, scope: !4259)
!4273 = !DILocation(line: 1164, column: 3, scope: !4259)
!4274 = distinct !{!4274, !4265, !4275}
!4275 = !DILocation(line: 1176, column: 5, scope: !4260)
!4276 = !DILocation(line: 1177, column: 3, scope: !4247)
!4277 = !DILocation(line: 1175, column: 10, scope: !4270)
!4278 = !DILocation(line: 1175, column: 2, scope: !4270)
!4279 = !DILocation(line: 1170, column: 26, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 1170, column: 8)
!4281 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 1169, column: 2)
!4282 = !DILocation(line: 1171, column: 8, scope: !4280)
!4283 = !DILocation(line: 1171, column: 11, scope: !4280)
!4284 = !DILocation(line: 1171, column: 50, scope: !4280)
!4285 = !DILocation(line: 1170, column: 8, scope: !4281)
!4286 = !DILocation(line: 1172, column: 14, scope: !4280)
!4287 = !DILocation(line: 1172, column: 6, scope: !4280)
!4288 = !DILocation(line: 1179, column: 1, scope: !4247)
!4289 = distinct !DISubprogram(name: "check_format_types", scope: !3, file: !3, line: 2131, type: !4290, scopeLine: 2133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4292)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{null, !1009, !264, !259}
!4292 = !{!4293, !4294, !4295, !4296, !4300, !4301, !4302, !4303, !4304, !4305}
!4293 = !DILocalVariable(name: "types", arg: 1, scope: !4289, file: !3, line: 2131, type: !1009)
!4294 = !DILocalVariable(name: "format_start", arg: 2, scope: !4289, file: !3, line: 2131, type: !264)
!4295 = !DILocalVariable(name: "format_length", arg: 3, scope: !4289, file: !3, line: 2132, type: !259)
!4296 = !DILocalVariable(name: "cur_param", scope: !4297, file: !3, line: 2136, type: !266)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 2135, column: 5)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 2134, column: 3)
!4299 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 2134, column: 3)
!4300 = !DILocalVariable(name: "cur_type", scope: !4297, file: !3, line: 2137, type: !266)
!4301 = !DILocalVariable(name: "orig_cur_type", scope: !4297, file: !3, line: 2138, type: !266)
!4302 = !DILocalVariable(name: "wanted_type", scope: !4297, file: !3, line: 2139, type: !266)
!4303 = !DILocalVariable(name: "arg_num", scope: !4297, file: !3, line: 2140, type: !259)
!4304 = !DILocalVariable(name: "i", scope: !4297, file: !3, line: 2141, type: !259)
!4305 = !DILocalVariable(name: "char_type_flag", scope: !4297, file: !3, line: 2142, type: !259)
!4306 = !DILocation(line: 0, scope: !4289)
!4307 = !DILocation(line: 2134, column: 3, scope: !4289)
!4308 = !DILocation(line: 2134, column: 16, scope: !4298)
!4309 = !DILocation(line: 2134, column: 3, scope: !4299)
!4310 = !DILocation(line: 2143, column: 26, scope: !4297)
!4311 = !DILocation(line: 0, scope: !4297)
!4312 = !DILocation(line: 2144, column: 18, scope: !4297)
!4313 = !DILocation(line: 2145, column: 23, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2145, column: 11)
!4315 = !DILocation(line: 2145, column: 20, scope: !4314)
!4316 = !DILocation(line: 2145, column: 11, scope: !4297)
!4317 = !DILocation(line: 2149, column: 28, scope: !4297)
!4318 = !DILocation(line: 2150, column: 24, scope: !4297)
!4319 = !DILocation(line: 2153, column: 7, scope: !4297)
!4320 = !DILocation(line: 2154, column: 7, scope: !4297)
!4321 = !DILocation(line: 2156, column: 18, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2156, column: 11)
!4323 = !DILocation(line: 2156, column: 32, scope: !4322)
!4324 = !DILocation(line: 2156, column: 11, scope: !4297)
!4325 = !DILocation(line: 2157, column: 33, scope: !4322)
!4326 = !DILocation(line: 2157, column: 16, scope: !4322)
!4327 = !DILocation(line: 2157, column: 2, scope: !4322)
!4328 = !DILocation(line: 2159, column: 21, scope: !4297)
!4329 = !DILocation(line: 2161, column: 7, scope: !4297)
!4330 = !DILocation(line: 0, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2174, column: 12)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !3, line: 2168, column: 6)
!4333 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 2167, column: 8)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 2166, column: 2)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 2165, column: 7)
!4336 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2165, column: 7)
!4337 = !DILocation(line: 0, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2182, column: 12)
!4339 = !DILocation(line: 2165, column: 12, scope: !4336)
!4340 = !DILocation(line: 0, scope: !4336)
!4341 = !DILocation(line: 2165, column: 30, scope: !4335)
!4342 = !DILocation(line: 2165, column: 21, scope: !4335)
!4343 = !DILocation(line: 2165, column: 7, scope: !4336)
!4344 = !DILocation(line: 2167, column: 8, scope: !4333)
!4345 = !DILocation(line: 2167, column: 29, scope: !4333)
!4346 = !DILocation(line: 2167, column: 8, scope: !4334)
!4347 = !DILocation(line: 2169, column: 19, scope: !4332)
!4348 = !DILocation(line: 2170, column: 24, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2170, column: 12)
!4350 = !DILocation(line: 2170, column: 21, scope: !4349)
!4351 = !DILocation(line: 2170, column: 12, scope: !4332)
!4352 = !DILocation(line: 2174, column: 19, scope: !4331)
!4353 = !DILocation(line: 2174, column: 12, scope: !4331)
!4354 = !DILocation(line: 2175, column: 10, scope: !4331)
!4355 = !DILocation(line: 2175, column: 5, scope: !4331)
!4356 = !DILocation(line: 2176, column: 18, scope: !4331)
!4357 = !DILocation(line: 2177, column: 8, scope: !4331)
!4358 = !DILocation(line: 2174, column: 12, scope: !4332)
!4359 = !DILocation(line: 2178, column: 3, scope: !4331)
!4360 = !DILocation(line: 2182, column: 19, scope: !4338)
!4361 = !DILocation(line: 2182, column: 12, scope: !4338)
!4362 = !DILocation(line: 2183, column: 5, scope: !4338)
!4363 = !DILocation(line: 2185, column: 8, scope: !4338)
!4364 = !DILocation(line: 2182, column: 12, scope: !4332)
!4365 = !DILocation(line: 2186, column: 3, scope: !4338)
!4366 = !DILocation(line: 2189, column: 22, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2189, column: 12)
!4368 = !DILocation(line: 2189, column: 27, scope: !4367)
!4369 = !DILocation(line: 2189, column: 30, scope: !4367)
!4370 = !DILocation(line: 2189, column: 52, scope: !4367)
!4371 = !DILocation(line: 2189, column: 12, scope: !4332)
!4372 = !DILocation(line: 2190, column: 15, scope: !4367)
!4373 = !DILocation(line: 2190, column: 3, scope: !4367)
!4374 = !DILocation(line: 0, scope: !4367)
!4375 = !DILocation(line: 2199, column: 19, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2199, column: 12)
!4377 = !DILocation(line: 2199, column: 12, scope: !4376)
!4378 = !DILocation(line: 2200, column: 5, scope: !4376)
!4379 = !DILocation(line: 2201, column: 9, scope: !4376)
!4380 = !DILocation(line: 2202, column: 9, scope: !4376)
!4381 = !DILocation(line: 2202, column: 23, scope: !4376)
!4382 = !DILocation(line: 2203, column: 6, scope: !4376)
!4383 = !DILocation(line: 2203, column: 10, scope: !4376)
!4384 = !DILocation(line: 2204, column: 10, scope: !4376)
!4385 = !DILocation(line: 2204, column: 14, scope: !4376)
!4386 = !DILocation(line: 2205, column: 7, scope: !4376)
!4387 = !DILocation(line: 2205, column: 10, scope: !4376)
!4388 = !DILocation(line: 2199, column: 12, scope: !4332)
!4389 = !DILocation(line: 2206, column: 3, scope: !4376)
!4390 = !DILocation(line: 2212, column: 14, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2212, column: 12)
!4392 = !DILocation(line: 2213, column: 8, scope: !4391)
!4393 = !DILocation(line: 2213, column: 5, scope: !4391)
!4394 = !DILocation(line: 2214, column: 9, scope: !4391)
!4395 = !DILocation(line: 2215, column: 9, scope: !4391)
!4396 = !DILocation(line: 2215, column: 12, scope: !4391)
!4397 = !DILocation(line: 2216, column: 9, scope: !4391)
!4398 = !DILocation(line: 2216, column: 12, scope: !4391)
!4399 = !DILocation(line: 2212, column: 12, scope: !4332)
!4400 = !DILocation(line: 2217, column: 3, scope: !4391)
!4401 = !DILocation(line: 2224, column: 36, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4333, file: !3, line: 2223, column: 6)
!4403 = !DILocation(line: 2226, column: 15, scope: !4402)
!4404 = !DILocation(line: 2224, column: 8, scope: !4402)
!4405 = !DILocation(line: 2232, column: 22, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2232, column: 11)
!4407 = !DILocation(line: 2228, column: 8, scope: !4402)
!4408 = !DILocation(line: 2165, column: 45, scope: !4335)
!4409 = !DILocation(line: 2165, column: 7, scope: !4335)
!4410 = distinct !{!4410, !4343, !4411}
!4411 = !DILocation(line: 2230, column: 2, scope: !4336)
!4412 = !DILocation(line: 2232, column: 13, scope: !4406)
!4413 = !DILocation(line: 2232, column: 11, scope: !4297)
!4414 = !DILocation(line: 2235, column: 18, scope: !4297)
!4415 = !DILocation(line: 2240, column: 18, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2240, column: 11)
!4417 = !DILocation(line: 2240, column: 11, scope: !4416)
!4418 = !DILocation(line: 2240, column: 11, scope: !4297)
!4419 = !DILocation(line: 2241, column: 32, scope: !4416)
!4420 = !DILocation(line: 2241, column: 29, scope: !4416)
!4421 = !DILocation(line: 2242, column: 21, scope: !4416)
!4422 = !DILocation(line: 2242, column: 18, scope: !4416)
!4423 = !DILocation(line: 2242, column: 6, scope: !4416)
!4424 = !DILocation(line: 2243, column: 21, scope: !4416)
!4425 = !DILocation(line: 2243, column: 18, scope: !4416)
!4426 = !DILocation(line: 2243, column: 6, scope: !4416)
!4427 = !DILocation(line: 2241, column: 2, scope: !4416)
!4428 = !DILocation(line: 2246, column: 22, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2246, column: 11)
!4430 = !DILocation(line: 2246, column: 11, scope: !4429)
!4431 = !DILocation(line: 2246, column: 11, scope: !4297)
!4432 = !DILocation(line: 2252, column: 26, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2252, column: 11)
!4434 = !DILocation(line: 2252, column: 23, scope: !4433)
!4435 = !DILocation(line: 2253, column: 4, scope: !4433)
!4436 = !DILocation(line: 2253, column: 9, scope: !4433)
!4437 = !DILocation(line: 2253, column: 18, scope: !4433)
!4438 = !DILocation(line: 2253, column: 24, scope: !4433)
!4439 = !DILocation(line: 2253, column: 32, scope: !4433)
!4440 = !DILocation(line: 2253, column: 29, scope: !4433)
!4441 = !DILocation(line: 2259, column: 11, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2259, column: 11)
!4443 = !DILocation(line: 2259, column: 35, scope: !4442)
!4444 = !DILocation(line: 2260, column: 4, scope: !4442)
!4445 = !DILocation(line: 2260, column: 7, scope: !4442)
!4446 = !DILocation(line: 2260, column: 28, scope: !4442)
!4447 = !DILocation(line: 2261, column: 4, scope: !4442)
!4448 = !DILocation(line: 2261, column: 9, scope: !4442)
!4449 = !DILocation(line: 2261, column: 23, scope: !4442)
!4450 = !DILocation(line: 2261, column: 18, scope: !4442)
!4451 = !DILocation(line: 2261, column: 34, scope: !4442)
!4452 = !DILocation(line: 2261, column: 42, scope: !4442)
!4453 = !DILocation(line: 2261, column: 39, scope: !4442)
!4454 = !DILocation(line: 2262, column: 8, scope: !4442)
!4455 = !DILocation(line: 2259, column: 11, scope: !4297)
!4456 = !DILocation(line: 2263, column: 25, scope: !4442)
!4457 = !DILocation(line: 2263, column: 22, scope: !4442)
!4458 = !DILocation(line: 2264, column: 25, scope: !4442)
!4459 = !DILocation(line: 2264, column: 22, scope: !4442)
!4460 = !DILocation(line: 2268, column: 26, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2268, column: 11)
!4462 = !DILocation(line: 2268, column: 23, scope: !4461)
!4463 = !DILocation(line: 2269, column: 4, scope: !4461)
!4464 = !DILocation(line: 2269, column: 9, scope: !4461)
!4465 = !DILocation(line: 2269, column: 23, scope: !4461)
!4466 = !DILocation(line: 2269, column: 18, scope: !4461)
!4467 = !DILocation(line: 2270, column: 7, scope: !4461)
!4468 = !DILocation(line: 2272, column: 18, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2272, column: 11)
!4470 = !DILocation(line: 2272, column: 11, scope: !4469)
!4471 = !DILocation(line: 2273, column: 4, scope: !4469)
!4472 = !DILocation(line: 2273, column: 8, scope: !4469)
!4473 = !DILocation(line: 2273, column: 32, scope: !4469)
!4474 = !DILocation(line: 2273, column: 29, scope: !4469)
!4475 = !DILocation(line: 2274, column: 8, scope: !4469)
!4476 = !DILocation(line: 2274, column: 12, scope: !4469)
!4477 = !DILocation(line: 2275, column: 5, scope: !4469)
!4478 = !DILocation(line: 2275, column: 8, scope: !4469)
!4479 = !DILocation(line: 2276, column: 4, scope: !4469)
!4480 = !DILocation(line: 2276, column: 7, scope: !4469)
!4481 = !DILocation(line: 2276, column: 36, scope: !4469)
!4482 = !DILocation(line: 2276, column: 33, scope: !4469)
!4483 = !DILocation(line: 2272, column: 11, scope: !4297)
!4484 = !DILocation(line: 2279, column: 35, scope: !4297)
!4485 = !DILocation(line: 2280, column: 27, scope: !4297)
!4486 = !DILocation(line: 2281, column: 14, scope: !4297)
!4487 = !DILocation(line: 2279, column: 7, scope: !4297)
!4488 = !DILocation(line: 2282, column: 5, scope: !4298)
!4489 = !DILocation(line: 2134, column: 37, scope: !4298)
!4490 = !DILocation(line: 2134, column: 3, scope: !4298)
!4491 = distinct !{!4491, !4309, !4492}
!4492 = !DILocation(line: 2282, column: 5, scope: !4299)
!4493 = !DILocation(line: 2283, column: 1, scope: !4289)
!4494 = distinct !DISubprogram(name: "format_type_warning", scope: !3, file: !3, line: 2297, type: !4495, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4497)
!4495 = !DISubroutineType(types: !4496)
!4496 = !{null, !264, !264, !259, !266, !259, !264, !266, !259}
!4497 = !{!4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506}
!4498 = !DILocalVariable(name: "descr", arg: 1, scope: !4494, file: !3, line: 2297, type: !264)
!4499 = !DILocalVariable(name: "format_start", arg: 2, scope: !4494, file: !3, line: 2297, type: !264)
!4500 = !DILocalVariable(name: "format_length", arg: 3, scope: !4494, file: !3, line: 2298, type: !259)
!4501 = !DILocalVariable(name: "wanted_type", arg: 4, scope: !4494, file: !3, line: 2298, type: !266)
!4502 = !DILocalVariable(name: "pointer_count", arg: 5, scope: !4494, file: !3, line: 2298, type: !259)
!4503 = !DILocalVariable(name: "wanted_type_name", arg: 6, scope: !4494, file: !3, line: 2299, type: !264)
!4504 = !DILocalVariable(name: "arg_type", arg: 7, scope: !4494, file: !3, line: 2299, type: !266)
!4505 = !DILocalVariable(name: "arg_num", arg: 8, scope: !4494, file: !3, line: 2299, type: !259)
!4506 = !DILocalVariable(name: "p", scope: !4494, file: !3, line: 2301, type: !261)
!4507 = !DILocation(line: 0, scope: !4494)
!4508 = !DILocation(line: 2305, column: 7, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 2305, column: 7)
!4510 = !DILocation(line: 2306, column: 7, scope: !4509)
!4511 = !DILocation(line: 2306, column: 10, scope: !4509)
!4512 = !DILocation(line: 2307, column: 7, scope: !4509)
!4513 = !DILocation(line: 2307, column: 10, scope: !4509)
!4514 = !DILocation(line: 2307, column: 43, scope: !4509)
!4515 = !DILocation(line: 2308, column: 7, scope: !4509)
!4516 = !DILocation(line: 2308, column: 10, scope: !4509)
!4517 = !DILocation(line: 2309, column: 7, scope: !4509)
!4518 = !DILocation(line: 2310, column: 16, scope: !4509)
!4519 = !DILocation(line: 2310, column: 5, scope: !4509)
!4520 = !DILocation(line: 2309, column: 11, scope: !4509)
!4521 = !DILocation(line: 2305, column: 7, scope: !4494)
!4522 = !DILocation(line: 2311, column: 16, scope: !4509)
!4523 = !DILocation(line: 2311, column: 5, scope: !4509)
!4524 = !DILocation(line: 2317, column: 16, scope: !4494)
!4525 = !DILocation(line: 2318, column: 21, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 2318, column: 7)
!4527 = !DILocation(line: 2318, column: 7, scope: !4494)
!4528 = !DILocation(line: 2319, column: 10, scope: !4526)
!4529 = !DILocation(line: 2319, column: 5, scope: !4526)
!4530 = !DILocation(line: 2320, column: 12, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 2320, column: 12)
!4532 = !DILocation(line: 2320, column: 12, scope: !4526)
!4533 = !DILocation(line: 2322, column: 23, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2321, column: 5)
!4535 = !DILocation(line: 2322, column: 7, scope: !4534)
!4536 = !DILocation(line: 2323, column: 7, scope: !4534)
!4537 = !DILocation(line: 2323, column: 24, scope: !4534)
!4538 = !DILocation(line: 2324, column: 5, scope: !4534)
!4539 = !DILocation(line: 2327, column: 12, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2326, column: 5)
!4541 = !DILocation(line: 2328, column: 17, scope: !4540)
!4542 = !DILocation(line: 2328, column: 27, scope: !4540)
!4543 = !DILocation(line: 2328, column: 7, scope: !4540)
!4544 = !DILocation(line: 2329, column: 23, scope: !4540)
!4545 = !DILocation(line: 2329, column: 7, scope: !4540)
!4546 = !DILocation(line: 2329, column: 28, scope: !4540)
!4547 = !DILocation(line: 0, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 2331, column: 7)
!4549 = !DILocation(line: 2331, column: 7, scope: !4494)
!4550 = !DILocation(line: 2333, column: 11, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 2332, column: 5)
!4552 = !DILocation(line: 2334, column: 2, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 2333, column: 11)
!4554 = !DILocation(line: 2338, column: 2, scope: !4553)
!4555 = !DILocation(line: 2345, column: 11, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 2344, column: 5)
!4557 = !DILocation(line: 2346, column: 2, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2345, column: 11)
!4559 = !DILocation(line: 2350, column: 2, scope: !4558)
!4560 = !DILocation(line: 2354, column: 1, scope: !4494)
!4561 = distinct !DISubprogram(name: "find_length_info_modifier_index", scope: !3, file: !3, line: 2380, type: !4562, scopeLine: 2381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4564)
!4562 = !DISubroutineType(types: !4563)
!4563 = !{!7, !912, !259}
!4564 = !{!4565, !4566, !4567}
!4565 = !DILocalVariable(name: "fli", arg: 1, scope: !4561, file: !3, line: 2380, type: !912)
!4566 = !DILocalVariable(name: "c", arg: 2, scope: !4561, file: !3, line: 2380, type: !259)
!4567 = !DILocalVariable(name: "i", scope: !4561, file: !3, line: 2382, type: !7)
!4568 = !DILocation(line: 0, scope: !4561)
!4569 = !DILocation(line: 2384, column: 8, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 2384, column: 3)
!4571 = !DILocation(line: 0, scope: !4570)
!4572 = !DILocation(line: 2384, column: 20, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 2384, column: 3)
!4574 = !DILocation(line: 2384, column: 3, scope: !4570)
!4575 = !DILocation(line: 2385, column: 9, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 2385, column: 9)
!4577 = !DILocation(line: 2385, column: 9, scope: !4573)
!4578 = !DILocation(line: 2384, column: 27, scope: !4573)
!4579 = !DILocation(line: 2384, column: 34, scope: !4573)
!4580 = !DILocation(line: 2384, column: 3, scope: !4573)
!4581 = distinct !{!4581, !4574, !4582}
!4582 = !DILocation(line: 2386, column: 14, scope: !4570)
!4583 = !DILocation(line: 2389, column: 3, scope: !4561)
!4584 = !DILocation(line: 2391, column: 5, scope: !4561)
!4585 = !DILocation(line: 2393, column: 1, scope: !4561)
!4586 = distinct !DISubprogram(name: "find_char_info_specifier_index", scope: !3, file: !3, line: 2361, type: !4587, scopeLine: 2362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4589)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!7, !925, !259}
!4589 = !{!4590, !4591, !4592}
!4590 = !DILocalVariable(name: "fci", arg: 1, scope: !4586, file: !3, line: 2361, type: !925)
!4591 = !DILocalVariable(name: "c", arg: 2, scope: !4586, file: !3, line: 2361, type: !259)
!4592 = !DILocalVariable(name: "i", scope: !4586, file: !3, line: 2363, type: !7)
!4593 = !DILocation(line: 0, scope: !4586)
!4594 = !DILocation(line: 2365, column: 8, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 2365, column: 3)
!4596 = !DILocation(line: 0, scope: !4595)
!4597 = !DILocation(line: 2365, column: 20, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 2365, column: 3)
!4599 = !DILocation(line: 2365, column: 3, scope: !4595)
!4600 = !DILocation(line: 2366, column: 9, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 2366, column: 9)
!4602 = !DILocation(line: 2366, column: 9, scope: !4598)
!4603 = !DILocation(line: 2365, column: 35, scope: !4598)
!4604 = !DILocation(line: 2365, column: 42, scope: !4598)
!4605 = !DILocation(line: 2365, column: 3, scope: !4598)
!4606 = distinct !{!4606, !4599, !4607}
!4607 = !DILocation(line: 2367, column: 14, scope: !4595)
!4608 = !DILocation(line: 2370, column: 3, scope: !4586)
!4609 = !DILocation(line: 2372, column: 5, scope: !4586)
!4610 = !DILocation(line: 2374, column: 1, scope: !4586)
