; ModuleID = 'matrix-reorg.bc'
source_filename = "matrix-reorg.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.simple_ipa_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.gcov_ctr_summary = type opaque
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.free_info = type { %union.gimple_statement_d*, %union.tree_node* }
%struct.matrix_info = type { %union.tree_node*, i32, i32, %union.gimple_statement_d*, %union.gimple_statement_d**, i32, i8, %union.tree_node*, %struct.free_info*, %union.tree_node**, %union.tree_node**, i64*, i32, i64*, %struct.VEC_access_site_info_p_heap*, i32* }
%struct.VEC_access_site_info_p_heap = type { %struct.VEC_access_site_info_p_base }
%struct.VEC_access_site_info_p_base = type { i32, i32, [1 x %struct.access_site_info*] }
%struct.access_site_info = type { %union.gimple_statement_d*, %union.tree_node*, %union.tree_node*, i32, i8, %union.tree_node*, i8 }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.affine_iv = type { %union.tree_node*, %union.tree_node*, i8 }
%struct.malloc_call_data = type { %union.gimple_statement_d*, %union.tree_node*, %union.tree_node* }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.check_var_data = type { %union.tree_node*, %union.gimple_statement_d* }
%struct.pointer_set_t = type opaque
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.tree_ssa_name = type { %struct.tree_common, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.ptr_info_def*, %struct.ssa_use_operand_d }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.matrix_access_phi_node = type { %union.gimple_statement_d*, i32 }
%struct.ssa_acc_in_tree = type { %union.tree_node*, i32, %union.tree_node*, %union.tree_node**, %union.tree_node*, i8 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [13 x i8] c"matrix-reorg\00", align 1
@pass_ipa_matrix_reorg = dso_local local_unnamed_addr global %struct.simple_ipa_opt_pass { %struct.opt_pass { i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i8 ()* @gate_matrix_reorg, i32 ()* @matrix_reorg, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 129 } }, align 8, !dbg !0
@flag_ipa_matrix_reorg = external dso_local local_unnamed_addr global i32, align 4
@flag_whole_program = external dso_local local_unnamed_addr global i32, align 4
@profile_info = external dso_local local_unnamed_addr global %struct.gcov_ctr_summary*, align 8
@check_transpose_p = internal unnamed_addr global i8 0, align 1, !dbg !2109
@cgraph_nodes = external dso_local local_unnamed_addr global %struct.cgraph_node*, align 8
@matrices_to_reorg = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2111
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@htab_mat_acc_phi_nodes = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2113
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [41 x i8] c"Found vector type, don't flatten matrix\0A\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@.str.4 = private unnamed_addr constant [15 x i8] c"matrix-reorg.c\00", align 1
@varpool_nodes_queue = external dso_local local_unnamed_addr global %struct.varpool_node*, align 8
@.str.5 = private unnamed_addr constant [41 x i8] c"Matrix %s is an argument to function %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [48 x i8] c"Matrix %s: Function call %s, level %d escapes.\0A\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"Matrix %s: Cannot calculate the size of allocation, escaping at level %d\0A\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.8 = private unnamed_addr constant [12 x i8] c"Matrix %s:\0A\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"dim %d before sort \00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"count is  %ld  \0A\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"dim %d after sort\0A\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"dim_map[%d] after sort %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [45 x i8] c"Transposed dimensions: dim %d is now dim %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@.str.16 = private unnamed_addr constant [47 x i8] c"Matrix \22%s\22; Escaping Level: %d, Num Dims: %d,\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c" Malloc Dims: %d, \00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"Flattened %d dimensions \0A\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2145 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2158, metadata !DIExpression()), !dbg !2160
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2159, metadata !DIExpression()), !dbg !2160
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2161
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2162
  ret i32 %call, !dbg !2163
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2164 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2168
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2169
  ret i32 %call, !dbg !2170
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2171 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2226, metadata !DIExpression()), !dbg !2227
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2228
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2228
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2228
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2228
  %cmp = icmp uge i8* %0, %1, !dbg !2228
  %conv1 = zext i1 %cmp to i64, !dbg !2228
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2228
  %tobool = icmp eq i64 %expval, 0, !dbg !2228
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2228

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2228
  br label %cond.end, !dbg !2228

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2228
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2228
  %2 = load i8, i8* %0, align 1, !dbg !2228
  %conv3 = zext i8 %2 to i32, !dbg !2228
  br label %cond.end, !dbg !2228

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2228
  ret i32 %cond, !dbg !2229
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2230 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2232, metadata !DIExpression()), !dbg !2233
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2234
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2234
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2234
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2234
  %cmp = icmp uge i8* %0, %1, !dbg !2234
  %conv1 = zext i1 %cmp to i64, !dbg !2234
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2234
  %tobool = icmp eq i64 %expval, 0, !dbg !2234
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2234

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2234
  br label %cond.end, !dbg !2234

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2234
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2234
  %2 = load i8, i8* %0, align 1, !dbg !2234
  %conv3 = zext i8 %2 to i32, !dbg !2234
  br label %cond.end, !dbg !2234

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2234
  ret i32 %cond, !dbg !2235
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2236 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2237
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2237
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2237
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2237
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2237
  %cmp = icmp uge i8* %1, %2, !dbg !2237
  %conv1 = zext i1 %cmp to i64, !dbg !2237
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2237
  %tobool = icmp eq i64 %expval, 0, !dbg !2237
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2237

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2237
  br label %cond.end, !dbg !2237

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2237
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2237
  %3 = load i8, i8* %1, align 1, !dbg !2237
  %conv3 = zext i8 %3 to i32, !dbg !2237
  br label %cond.end, !dbg !2237

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2237
  ret i32 %cond, !dbg !2238
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2239 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2243, metadata !DIExpression()), !dbg !2244
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2245
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2246
  ret i32 %call, !dbg !2247
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2248 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2252, metadata !DIExpression()), !dbg !2254
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2253, metadata !DIExpression()), !dbg !2254
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2255
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2255
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2255
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2255
  %cmp = icmp uge i8* %0, %1, !dbg !2255
  %conv1 = zext i1 %cmp to i64, !dbg !2255
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2255
  %tobool = icmp eq i64 %expval, 0, !dbg !2255
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2255

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2255
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2255
  br label %cond.end, !dbg !2255

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2255
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2255
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2255
  store i8 %conv2, i8* %0, align 1, !dbg !2255
  %conv6 = and i32 %__c, 255, !dbg !2255
  br label %cond.end, !dbg !2255

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2255
  ret i32 %cond, !dbg !2256
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2257 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2259, metadata !DIExpression()), !dbg !2261
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2260, metadata !DIExpression()), !dbg !2261
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2262
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2262
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2262
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2262
  %cmp = icmp uge i8* %0, %1, !dbg !2262
  %conv1 = zext i1 %cmp to i64, !dbg !2262
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2262
  %tobool = icmp eq i64 %expval, 0, !dbg !2262
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2262

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2262
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2262
  br label %cond.end, !dbg !2262

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2262
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2262
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2262
  store i8 %conv2, i8* %0, align 1, !dbg !2262
  %conv6 = and i32 %__c, 255, !dbg !2262
  br label %cond.end, !dbg !2262

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2262
  ret i32 %cond, !dbg !2263
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2264 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2266, metadata !DIExpression()), !dbg !2267
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2268
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2268
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2268
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2268
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2268
  %cmp = icmp uge i8* %1, %2, !dbg !2268
  %conv1 = zext i1 %cmp to i64, !dbg !2268
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2268
  %tobool = icmp eq i64 %expval, 0, !dbg !2268
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2268

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2268
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2268
  br label %cond.end, !dbg !2268

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2268
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2268
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2268
  store i8 %conv4, i8* %1, align 1, !dbg !2268
  %conv6 = and i32 %__c, 255, !dbg !2268
  br label %cond.end, !dbg !2268

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2268
  ret i32 %cond, !dbg !2269
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2270 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2276, metadata !DIExpression()), !dbg !2279
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2277, metadata !DIExpression()), !dbg !2279
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2278, metadata !DIExpression()), !dbg !2279
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2280
  ret i64 %call, !dbg !2281
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2282 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2284, metadata !DIExpression()), !dbg !2285
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2286
  %0 = load i32, i32* %_flags, align 8, !dbg !2286
  %and = lshr i32 %0, 4, !dbg !2286
  %and.lobit = and i32 %and, 1, !dbg !2286
  ret i32 %and.lobit, !dbg !2287
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2288 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2290, metadata !DIExpression()), !dbg !2291
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2292
  %0 = load i32, i32* %_flags, align 8, !dbg !2292
  %and = lshr i32 %0, 5, !dbg !2292
  %and.lobit = and i32 %and, 1, !dbg !2292
  ret i32 %and.lobit, !dbg !2293
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2294 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2297, metadata !DIExpression()), !dbg !2298
  %__c.off = add i32 %__c, 128, !dbg !2299
  %0 = icmp ult i32 %__c.off, 384, !dbg !2299
  br i1 %0, label %cond.true, label %cond.end, !dbg !2299

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2300
  %1 = load i32*, i32** %call, align 8, !dbg !2301
  %idxprom = sext i32 %__c to i64, !dbg !2302
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2302
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2302
  br label %cond.end, !dbg !2303

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2303
  ret i32 %cond, !dbg !2304
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2305 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2307, metadata !DIExpression()), !dbg !2308
  %__c.off = add i32 %__c, 128, !dbg !2309
  %0 = icmp ult i32 %__c.off, 384, !dbg !2309
  br i1 %0, label %cond.true, label %cond.end, !dbg !2309

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2310
  %1 = load i32*, i32** %call, align 8, !dbg !2311
  %idxprom = sext i32 %__c to i64, !dbg !2312
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2312
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2312
  br label %cond.end, !dbg !2313

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2313
  ret i32 %cond, !dbg !2314
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2315 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2320, metadata !DIExpression()), !dbg !2321
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2322
  %conv = trunc i64 %call to i32, !dbg !2323
  ret i32 %conv, !dbg !2324
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2325 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2329, metadata !DIExpression()), !dbg !2330
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2331
  ret i64 %call, !dbg !2332
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2333 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2338, metadata !DIExpression()), !dbg !2339
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2340
  ret i64 %call, !dbg !2341
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2342 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2348, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2349, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2350, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2351, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2352, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i64 0, metadata !2353, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2354, metadata !DIExpression()), !dbg !2358
  br label %while.cond, !dbg !2359

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2360
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2358
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2354, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2353, metadata !DIExpression()), !dbg !2358
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2361
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2359

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2362
  %div = lshr i64 %add, 1, !dbg !2364
  call void @llvm.dbg.value(metadata i64 %div, metadata !2355, metadata !DIExpression()), !dbg !2358
  %mul = mul i64 %div, %__size, !dbg !2365
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2366
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2356, metadata !DIExpression()), !dbg !2358
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2367
  call void @llvm.dbg.value(metadata i32 %call, metadata !2357, metadata !DIExpression()), !dbg !2358
  %cmp1 = icmp slt i32 %call, 0, !dbg !2368
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2370

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2371
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2373

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2374
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2353, metadata !DIExpression()), !dbg !2358
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2358
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2358
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2354, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2353, metadata !DIExpression()), !dbg !2358
  br label %while.cond, !dbg !2359, !llvm.loop !2375

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2358
  ret i8* %retval.0, !dbg !2377
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2378 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2384, metadata !DIExpression()), !dbg !2385
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2386
  ret double %call, !dbg !2387
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2388 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2397, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2398, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata i32 %base, metadata !2399, metadata !DIExpression()), !dbg !2400
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2401
  ret i64 %call, !dbg !2402
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2403 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2409, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2410, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i32 %base, metadata !2411, metadata !DIExpression()), !dbg !2412
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2413
  ret i64 %call, !dbg !2414
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2415 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2426, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2427, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.value(metadata i32 %base, metadata !2428, metadata !DIExpression()), !dbg !2429
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2430
  ret i64 %call, !dbg !2431
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2432 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2436, metadata !DIExpression()), !dbg !2439
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2437, metadata !DIExpression()), !dbg !2439
  call void @llvm.dbg.value(metadata i32 %base, metadata !2438, metadata !DIExpression()), !dbg !2439
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2440
  ret i64 %call, !dbg !2441
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2442 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2482, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2483, metadata !DIExpression()), !dbg !2484
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2485
  ret i32 %call, !dbg !2486
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2487 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2489, metadata !DIExpression()), !dbg !2491
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2490, metadata !DIExpression()), !dbg !2491
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2492
  ret i32 %call, !dbg !2493
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2494 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2498, metadata !DIExpression()), !dbg !2500
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2499, metadata !DIExpression()), !dbg !2500
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2501
  ret i32 %call, !dbg !2502
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2503 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2507, metadata !DIExpression()), !dbg !2511
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2508, metadata !DIExpression()), !dbg !2511
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2509, metadata !DIExpression()), !dbg !2511
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2510, metadata !DIExpression()), !dbg !2511
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2512
  ret i32 %call, !dbg !2513
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2514 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2518, metadata !DIExpression()), !dbg !2521
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2519, metadata !DIExpression()), !dbg !2521
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2520, metadata !DIExpression()), !dbg !2521
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2520, metadata !DIExpression(DW_OP_deref)), !dbg !2521
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2522
  ret i32 %call, !dbg !2523
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2524 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2528, metadata !DIExpression()), !dbg !2532
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2529, metadata !DIExpression()), !dbg !2532
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2530, metadata !DIExpression()), !dbg !2532
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2531, metadata !DIExpression()), !dbg !2532
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2531, metadata !DIExpression(DW_OP_deref)), !dbg !2532
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2533
  ret i32 %call, !dbg !2534
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2535 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2559, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2560, metadata !DIExpression()), !dbg !2561
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2562
  ret i32 %call, !dbg !2563
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2564 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2566, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2567, metadata !DIExpression()), !dbg !2568
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2569
  ret i32 %call, !dbg !2570
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2571 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2575, metadata !DIExpression()), !dbg !2577
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2576, metadata !DIExpression()), !dbg !2577
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2578
  ret i32 %call, !dbg !2579
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2580 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2584, metadata !DIExpression()), !dbg !2588
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2585, metadata !DIExpression()), !dbg !2588
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2586, metadata !DIExpression()), !dbg !2588
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2587, metadata !DIExpression()), !dbg !2588
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2589
  ret i32 %call, !dbg !2590
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_matrix_reorg() #5 !dbg !2591 {
entry:
  %0 = load i32, i32* @flag_ipa_matrix_reorg, align 4, !dbg !2592
  %tobool = icmp ne i32 %0, 0, !dbg !2592
  %1 = load i32, i32* @flag_whole_program, align 4, !dbg !2593
  %tobool1 = icmp ne i32 %1, 0, !dbg !2593
  %2 = and i1 %tobool1, %tobool, !dbg !2593
  %conv = zext i1 %2 to i8, !dbg !2592
  ret i8 %conv, !dbg !2594
}

; Function Attrs: nounwind uwtable
define internal i32 @matrix_reorg() #5 !dbg !2595 {
entry:
  %0 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !2812
  %tobool = icmp eq %struct.gcov_ctr_summary* %0, null, !dbg !2812
  br i1 %tobool, label %if.else, label %if.then, !dbg !2814

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !2815

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi i8 [ 0, %if.else ], [ 1, %if.then ], !dbg !2816
  store i8 %storemerge, i8* @check_transpose_p, align 1, !dbg !2816
  br label %for.cond, !dbg !2817

for.cond:                                         ; preds = %for.inc, %if.end
  %node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %if.end ], [ %next, %for.inc ]
  %node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %node.0.in, align 8, !dbg !2819
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.0, metadata !2597, metadata !DIExpression()), !dbg !2820
  %tobool1 = icmp eq %struct.cgraph_node* %node.0, null, !dbg !2821
  br i1 %tobool1, label %for.end, label %for.body, !dbg !2821

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc zeroext i8 @may_flatten_matrices(%struct.cgraph_node* nonnull %node.0) #7, !dbg !2822
  %tobool2 = icmp eq i8 %call, 0, !dbg !2822
  br i1 %tobool2, label %cleanup58.loopexit1, label %for.inc, !dbg !2825

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 3, !dbg !2826
  br label %for.cond, !dbg !2827, !llvm.loop !2828

for.end:                                          ; preds = %for.cond
  %call5 = tail call %struct.htab* @htab_create(i64 37, i32 (i8*)* nonnull @mtt_info_hash, i32 (i8*, i8*)* nonnull @mtt_info_eq, void (i8*)* nonnull @mat_free) #6, !dbg !2830
  store %struct.htab* %call5, %struct.htab** @matrices_to_reorg, align 8, !dbg !2831
  tail call fastcc void @find_matrices_decl() #7, !dbg !2832
  br label %for.cond6, !dbg !2833

for.cond6:                                        ; preds = %for.inc36, %for.end
  %node.1.in = phi %struct.cgraph_node** [ @cgraph_nodes, %for.end ], [ %next37, %for.inc36 ]
  %node.1 = load %struct.cgraph_node*, %struct.cgraph_node** %node.1.in, align 8, !dbg !2834
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.1, metadata !2597, metadata !DIExpression()), !dbg !2820
  %tobool7 = icmp eq %struct.cgraph_node* %node.1, null, !dbg !2835
  br i1 %tobool7, label %for.end38, label %for.body8, !dbg !2835

for.body8:                                        ; preds = %for.cond6
  %analyzed = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 27, !dbg !2836
  %bf.load = load i16, i16* %analyzed, align 4, !dbg !2836
  %bf.clear = and i16 %bf.load, 32, !dbg !2836
  %tobool9 = icmp eq i16 %bf.clear, 0, !dbg !2837
  br i1 %tobool9, label %for.inc36, label %if.then10, !dbg !2838

if.then10:                                        ; preds = %for.body8
  %1 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2839
  %2 = bitcast %struct.cgraph_node* %node.1 to i64*, !dbg !2840
  %3 = load i64, i64* %2, align 8, !dbg !2840
  store i64 %3, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2841
  %4 = bitcast %struct.cgraph_node* %node.1 to %struct.tree_function_decl**, !dbg !2842
  %5 = load %struct.tree_function_decl*, %struct.tree_function_decl** %4, align 8, !dbg !2842
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %5, i64 0, i32 1, !dbg !2842
  %6 = load %struct.function*, %struct.function** %f, align 8, !dbg !2842
  tail call void @push_cfun(%struct.function* %6) #6, !dbg !2843
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* null) #6, !dbg !2844
  tail call void @gimple_register_cfg_hooks() #6, !dbg !2845
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2846
  %call12 = tail call fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %7) #7, !dbg !2848
  %tobool13 = icmp eq i8 %call12, 0, !dbg !2848
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !2849

if.then14:                                        ; preds = %if.then10
  tail call void @free_dominance_info(i32 1) #6, !dbg !2850
  tail call void @free_dominance_info(i32 2) #6, !dbg !2852
  tail call void @pop_cfun() #6, !dbg !2853
  store i64 %1, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2854
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* null) #6, !dbg !2855
  br label %cleanup, !dbg !2856

if.end15:                                         ; preds = %if.then10
  %8 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !2857
  %tobool16 = icmp eq %struct.htab* %8, null, !dbg !2857
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !2859

if.then17:                                        ; preds = %if.end15
  tail call void @free_dominance_info(i32 1) #6, !dbg !2860
  tail call void @free_dominance_info(i32 2) #6, !dbg !2862
  tail call void @pop_cfun() #6, !dbg !2863
  store i64 %1, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2864
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* null) #6, !dbg !2865
  br label %cleanup, !dbg !2866

if.end18:                                         ; preds = %if.end15
  %call19 = tail call %struct.htab* @htab_create(i64 37, i32 (i8*)* nonnull @mat_acc_phi_hash, i32 (i8*, i8*)* nonnull @mat_acc_phi_eq, void (i8*)* nonnull @free) #6, !dbg !2867
  store %struct.htab* %call19, %struct.htab** @htab_mat_acc_phi_nodes, align 8, !dbg !2868
  %9 = load i8, i8* @check_transpose_p, align 1, !dbg !2869
  %tobool20 = icmp eq i8 %9, 0, !dbg !2869
  br i1 %tobool20, label %if.then21, label %if.else22, !dbg !2871

if.then21:                                        ; preds = %if.end18
  tail call fastcc void @find_sites_in_func(i8 zeroext 0) #7, !dbg !2872
  br label %if.end34, !dbg !2872

if.else22:                                        ; preds = %if.end18
  tail call fastcc void @find_sites_in_func(i8 zeroext 1) #7, !dbg !2873
  tail call void @loop_optimizer_init(i32 7) #6, !dbg !2875
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2876
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 4, !dbg !2876
  %11 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !2876
  %tobool24 = icmp eq %struct.loops* %11, null, !dbg !2876
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !2878

if.then25:                                        ; preds = %if.else22
  tail call void @scev_initialize() #6, !dbg !2879
  br label %if.end26, !dbg !2879

if.end26:                                         ; preds = %if.else22, %if.then25
  %12 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !2880
  tail call void @htab_traverse(%struct.htab* %12, i32 (i8**, i8*)* nonnull @analyze_transpose, i8* null) #6, !dbg !2881
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2882
  %x_current_loops28 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 4, !dbg !2882
  %14 = load %struct.loops*, %struct.loops** %x_current_loops28, align 8, !dbg !2882
  %tobool29 = icmp eq %struct.loops* %14, null, !dbg !2882
  br i1 %tobool29, label %if.end34, label %if.then30, !dbg !2884

if.then30:                                        ; preds = %if.end26
  tail call void @scev_finalize() #6, !dbg !2885
  tail call void @loop_optimizer_finalize() #6, !dbg !2887
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2888
  %x_current_loops32 = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, i32 4, !dbg !2888
  store %struct.loops* null, %struct.loops** %x_current_loops32, align 8, !dbg !2889
  br label %if.end34, !dbg !2890

if.end34:                                         ; preds = %if.end26, %if.then30, %if.then21
  %16 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !2891
  tail call void @htab_traverse(%struct.htab* %16, i32 (i8**, i8*)* nonnull @check_allocation_function, i8* null) #6, !dbg !2892
  tail call void @free_dominance_info(i32 1) #6, !dbg !2893
  tail call void @free_dominance_info(i32 2) #6, !dbg !2894
  tail call void @pop_cfun() #6, !dbg !2895
  store i64 %1, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2896
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* null) #6, !dbg !2897
  br label %cleanup, !dbg !2898

cleanup:                                          ; preds = %if.end34, %if.then17, %if.then14
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end34 ], [ false, %if.then17 ], [ false, %if.then14 ]
  br i1 %cleanup.dest.slot.0, label %for.inc36, label %cleanup58.loopexit

for.inc36:                                        ; preds = %for.body8, %cleanup
  %next37 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 3, !dbg !2899
  br label %for.cond6, !dbg !2900, !llvm.loop !2901

for.end38:                                        ; preds = %for.cond6
  %17 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !2903
  tail call void @htab_traverse(%struct.htab* %17, i32 (i8**, i8*)* nonnull @transform_allocation_sites, i8* null) #6, !dbg !2904
  br label %for.cond39, !dbg !2905

for.cond39:                                       ; preds = %for.inc55, %for.end38
  %node.2.in = phi %struct.cgraph_node** [ @cgraph_nodes, %for.end38 ], [ %next56, %for.inc55 ]
  %node.2 = load %struct.cgraph_node*, %struct.cgraph_node** %node.2.in, align 8, !dbg !2906
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.2, metadata !2597, metadata !DIExpression()), !dbg !2820
  %tobool40 = icmp eq %struct.cgraph_node* %node.2, null, !dbg !2907
  br i1 %tobool40, label %for.end57, label %for.body41, !dbg !2907

for.body41:                                       ; preds = %for.cond39
  %analyzed42 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.2, i64 0, i32 27, !dbg !2908
  %bf.load43 = load i16, i16* %analyzed42, align 4, !dbg !2908
  %bf.clear45 = and i16 %bf.load43, 32, !dbg !2908
  %tobool47 = icmp eq i16 %bf.clear45, 0, !dbg !2909
  br i1 %tobool47, label %for.inc55, label %if.then48, !dbg !2910

if.then48:                                        ; preds = %for.body41
  %18 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2911
  %19 = bitcast %struct.cgraph_node* %node.2 to i64*, !dbg !2912
  %20 = load i64, i64* %19, align 8, !dbg !2912
  store i64 %20, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2913
  %21 = bitcast %struct.cgraph_node* %node.2 to %struct.tree_function_decl**, !dbg !2914
  %22 = load %struct.tree_function_decl*, %struct.tree_function_decl** %21, align 8, !dbg !2914
  %f53 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %22, i64 0, i32 1, !dbg !2914
  %23 = load %struct.function*, %struct.function** %f53, align 8, !dbg !2914
  tail call void @push_cfun(%struct.function* %23) #6, !dbg !2915
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* null) #6, !dbg !2916
  tail call void @gimple_register_cfg_hooks() #6, !dbg !2917
  tail call fastcc void @record_all_accesses_in_func() #7, !dbg !2918
  %24 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !2919
  tail call void @htab_traverse(%struct.htab* %24, i32 (i8**, i8*)* nonnull @transform_access_sites, i8* null) #6, !dbg !2920
  tail call void @free_dominance_info(i32 1) #6, !dbg !2921
  tail call void @free_dominance_info(i32 2) #6, !dbg !2922
  tail call void @pop_cfun() #6, !dbg !2923
  store i64 %18, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !2924
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* null) #6, !dbg !2925
  br label %for.inc55, !dbg !2926

for.inc55:                                        ; preds = %for.body41, %if.then48
  %next56 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.2, i64 0, i32 3, !dbg !2927
  br label %for.cond39, !dbg !2928, !llvm.loop !2929

for.end57:                                        ; preds = %for.cond39
  %25 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !2931
  tail call void @htab_traverse(%struct.htab* %25, i32 (i8**, i8*)* nonnull @dump_matrix_reorg_analysis, i8* null) #6, !dbg !2932
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8, !dbg !2933
  tail call void @set_cfun(%struct.function* null) #6, !dbg !2934
  store %struct.htab* null, %struct.htab** @matrices_to_reorg, align 8, !dbg !2935
  br label %cleanup58, !dbg !2936

cleanup58.loopexit:                               ; preds = %cleanup
  br label %cleanup58, !dbg !2937

cleanup58.loopexit1:                              ; preds = %for.body
  br label %cleanup58, !dbg !2937

cleanup58:                                        ; preds = %cleanup58.loopexit1, %cleanup58.loopexit, %for.end57
  ret i32 0, !dbg !2937
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @may_flatten_matrices(%struct.cgraph_node* %node) unnamed_addr #5 !dbg !2938 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !2942, metadata !DIExpression()), !dbg !2953
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !2954
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !2954
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !2943, metadata !DIExpression()), !dbg !2953
  %analyzed = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 27, !dbg !2955
  %bf.load = load i16, i16* %analyzed, align 4, !dbg !2955
  %bf.clear = and i16 %bf.load, 32, !dbg !2955
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !2957
  br i1 %tobool, label %cleanup, label %if.then, !dbg !2958

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.cgraph_node* %node to %struct.tree_function_decl**, !dbg !2959
  %2 = load %struct.tree_function_decl*, %struct.tree_function_decl** %1, align 8, !dbg !2959
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %2, i64 0, i32 1, !dbg !2960
  %3 = load %struct.function*, %struct.function** %f, align 8, !dbg !2960
  call void @llvm.dbg.value(metadata %struct.function* %3, metadata !2944, metadata !DIExpression()), !dbg !2953
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !2962
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2962
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !2962
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2962
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !2964
  br label %for.cond, !dbg !2962

for.cond:                                         ; preds = %for.inc10, %if.then
  %7 = phi %struct.control_flow_graph* [ %4, %if.then ], [ %.pre, %for.inc10 ], !dbg !2967
  %.pn = phi %struct.basic_block_def* [ %5, %if.then ], [ %bb.0, %for.inc10 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2968
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2968
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2945, metadata !DIExpression()), !dbg !2953
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 1, !dbg !2967
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2967
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %8, !dbg !2967
  br i1 %cmp, label %cleanup.loopexit1, label %for.body, !dbg !2962

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !2969
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !2969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !2969
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !2969
  br label %for.cond3, !dbg !2970

for.cond3:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2946, metadata !DIExpression(DW_OP_deref)), !dbg !2953
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !2971
  %tobool4 = icmp eq i8 %call, 0, !dbg !2973
  br i1 %tobool4, label %for.body5, label %for.inc10, !dbg !2974

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2946, metadata !DIExpression(DW_OP_deref)), !dbg !2953
  %call6 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !2975
  %call7 = call fastcc zeroext i8 @may_flatten_matrices_1(%union.gimple_statement_d* %call6) #7, !dbg !2977
  %tobool8 = icmp eq i8 %call7, 0, !dbg !2977
  br i1 %tobool8, label %cleanup.loopexit, label %for.inc, !dbg !2978

for.inc:                                          ; preds = %for.body5
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2946, metadata !DIExpression(DW_OP_deref)), !dbg !2953
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !2979
  br label %for.cond3, !dbg !2980, !llvm.loop !2981

for.inc10:                                        ; preds = %for.cond3
  %.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2967
  br label %for.cond, !dbg !2967, !llvm.loop !2983

cleanup.loopexit:                                 ; preds = %for.body5
  br label %cleanup, !dbg !2985

cleanup.loopexit1:                                ; preds = %for.cond
  br label %cleanup, !dbg !2985

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ 0, %cleanup.loopexit ], [ 1, %cleanup.loopexit1 ], !dbg !2953
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !2985
  ret i8 %retval.0, !dbg !2985
}

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @mtt_info_hash(i8* %mtt) #5 !dbg !2986 {
entry:
  call void @llvm.dbg.value(metadata i8* %mtt, metadata !2988, metadata !DIExpression()), !dbg !2989
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !2990
  %1 = bitcast i8* %mtt to i8**, !dbg !2991
  %2 = load i8*, i8** %1, align 8, !dbg !2991
  %call = tail call i32 %0(i8* %2) #6, !dbg !2990
  ret i32 %call, !dbg !2992
}

; Function Attrs: nounwind uwtable
define internal i32 @mtt_info_eq(i8* %mtt1, i8* %mtt2) #5 !dbg !2993 {
entry:
  call void @llvm.dbg.value(metadata i8* %mtt1, metadata !2995, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.value(metadata i8* %mtt2, metadata !2996, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.value(metadata i8* %mtt1, metadata !2997, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.value(metadata i8* %mtt2, metadata !2999, metadata !DIExpression()), !dbg !3000
  %decl = bitcast i8* %mtt1 to %union.tree_node**, !dbg !3001
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3001
  %decl1 = bitcast i8* %mtt2 to %union.tree_node**, !dbg !3003
  %1 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !3003
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !3004
  %. = zext i1 %cmp to i32, !dbg !3000
  ret i32 %., !dbg !3005
}

; Function Attrs: nounwind uwtable
define internal void @mat_free(i8* %e) #5 !dbg !3006 {
entry:
  call void @llvm.dbg.value(metadata i8* %e, metadata !3008, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata i8* %e, metadata !3009, metadata !DIExpression()), !dbg !3010
  %tobool = icmp eq i8* %e, null, !dbg !3011
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !3013

if.end:                                           ; preds = %entry
  %free_stmts = getelementptr inbounds i8, i8* %e, i64 48, !dbg !3014
  %0 = bitcast i8* %free_stmts to %struct.free_info**, !dbg !3014
  %1 = load %struct.free_info*, %struct.free_info** %0, align 8, !dbg !3014
  %tobool1 = icmp eq %struct.free_info* %1, null, !dbg !3016
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !3017

if.then2:                                         ; preds = %if.end
  %2 = bitcast %struct.free_info* %1 to i8*, !dbg !3017
  tail call void @free(i8* nonnull %2) #6, !dbg !3018
  br label %if.end4, !dbg !3018

if.end4:                                          ; preds = %if.end, %if.then2
  %dim_hot_level = getelementptr inbounds i8, i8* %e, i64 88, !dbg !3019
  %3 = bitcast i8* %dim_hot_level to i64**, !dbg !3019
  %4 = load i64*, i64** %3, align 8, !dbg !3019
  %tobool5 = icmp eq i64* %4, null, !dbg !3021
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !3022

if.then6:                                         ; preds = %if.end4
  %5 = bitcast i64* %4 to i8*, !dbg !3022
  tail call void @free(i8* nonnull %5) #6, !dbg !3023
  br label %if.end8, !dbg !3023

if.end8:                                          ; preds = %if.end4, %if.then6
  %malloc_for_level = getelementptr inbounds i8, i8* %e, i64 24, !dbg !3024
  %6 = bitcast i8* %malloc_for_level to %union.gimple_statement_d***, !dbg !3024
  %7 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %6, align 8, !dbg !3024
  %tobool9 = icmp eq %union.gimple_statement_d** %7, null, !dbg !3026
  br i1 %tobool9, label %cleanup.cont, label %if.then10, !dbg !3027

if.then10:                                        ; preds = %if.end8
  %8 = bitcast %union.gimple_statement_d** %7 to i8*, !dbg !3027
  tail call void @free(i8* nonnull %8) #6, !dbg !3028
  br label %cleanup.cont, !dbg !3028

cleanup.cont:                                     ; preds = %if.end8, %entry, %if.then10
  ret void, !dbg !3029
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_matrices_decl() unnamed_addr #5 !dbg !3030 {
entry:
  %0 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !3039
  %tobool = icmp eq %struct.htab* %0, null, !dbg !3039
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3039

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 566, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3039
  br label %cond.end, !dbg !3039

cond.end:                                         ; preds = %entry, %cond.true
  br label %for.cond, !dbg !3040

for.cond:                                         ; preds = %cleanup, %cond.end
  %vnode.0.in = phi %struct.varpool_node** [ @varpool_nodes_queue, %cond.end ], [ %next_needed, %cleanup ]
  %vnode.0 = load %struct.varpool_node*, %struct.varpool_node** %vnode.0.in, align 8, !dbg !3041
  call void @llvm.dbg.value(metadata %struct.varpool_node* %vnode.0, metadata !3034, metadata !DIExpression()), !dbg !3042
  %tobool1 = icmp eq %struct.varpool_node* %vnode.0, null, !dbg !3043
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3043

for.body:                                         ; preds = %for.cond
  %decl = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %vnode.0, i64 0, i32 0, !dbg !3044
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3044
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3035, metadata !DIExpression()), !dbg !3045
  %tobool2 = icmp eq %union.tree_node* %1, null, !dbg !3046
  br i1 %tobool2, label %cleanup, label %lor.lhs.false, !dbg !3048

lor.lhs.false:                                    ; preds = %for.body
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3049
  %bf.load = load i64, i64* %2, align 8, !dbg !3049
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3050
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !3050
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3051

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !3052
  %tobool3 = icmp eq %struct.htab* %3, null, !dbg !3052
  br i1 %tobool3, label %cleanup, label %if.then4, !dbg !3054

if.then4:                                         ; preds = %if.end
  %call = tail call fastcc %struct.matrix_info* @analyze_matrix_decl(%union.tree_node* nonnull %1) #7, !dbg !3055
  call void @llvm.dbg.value(metadata %struct.matrix_info* %call, metadata !3032, metadata !DIExpression()), !dbg !3042
  %tobool5 = icmp eq %struct.matrix_info* %call, null, !dbg !3057
  br i1 %tobool5, label %cleanup, label %if.then6, !dbg !3058

if.then6:                                         ; preds = %if.then4
  %bf.load8 = load i64, i64* %2, align 8, !dbg !3059
  %bf.cast102 = and i64 %bf.load8, 262144, !dbg !3059
  %tobool11 = icmp eq i64 %bf.cast102, 0, !dbg !3059
  br i1 %tobool11, label %if.then12, label %cleanup, !dbg !3062

if.then12:                                        ; preds = %if.then6
  %4 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !3063
  %5 = bitcast %struct.matrix_info* %call to i8*, !dbg !3065
  %call13 = tail call i8** @htab_find_slot(%struct.htab* %4, i8* nonnull %5, i32 1) #6, !dbg !3066
  call void @llvm.dbg.value(metadata i8** %call13, metadata !3033, metadata !DIExpression()), !dbg !3042
  %6 = bitcast i8** %call13 to %struct.matrix_info**, !dbg !3067
  store %struct.matrix_info* %call, %struct.matrix_info** %6, align 8, !dbg !3067
  br label %cleanup, !dbg !3068

cleanup:                                          ; preds = %if.then6, %if.then4, %if.end, %lor.lhs.false, %for.body, %if.then12
  %next_needed = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %vnode.0, i64 0, i32 2, !dbg !3069
  br label %for.cond, !dbg !3070, !llvm.loop !3071

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3073
}

declare dso_local void @push_cfun(%struct.function*) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local void @gimple_register_cfg_hooks() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %fun) unnamed_addr #0 !dbg !3074 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !3081, metadata !DIExpression()), !dbg !3082
  %tobool = icmp eq %struct.function* %fun, null, !dbg !3083
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !3084

land.lhs.true:                                    ; preds = %entry
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !3085
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3085
  %tobool1 = icmp eq %struct.gimple_df* %0, null, !dbg !3086
  br i1 %tobool1, label %land.end, label %land.rhs, !dbg !3087

land.rhs:                                         ; preds = %land.lhs.true
  %in_ssa_p = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 10, !dbg !3088
  %bf.load = load i8, i8* %in_ssa_p, align 8, !dbg !3088
  %bf.clear = and i8 %bf.load, 1, !dbg !3088
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %entry, %land.rhs
  %1 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ %bf.clear, %land.rhs ]
  ret i8 %1, !dbg !3089
}

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

declare dso_local void @pop_cfun() local_unnamed_addr #2

declare dso_local void @bitmap_obstack_release(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @mat_acc_phi_hash(i8* %p) #5 !dbg !3090 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !3092, metadata !DIExpression()), !dbg !3095
  call void @llvm.dbg.value(metadata i8* %p, metadata !3093, metadata !DIExpression()), !dbg !3095
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !3096
  %1 = bitcast i8* %p to i8**, !dbg !3097
  %2 = load i8*, i8** %1, align 8, !dbg !3097
  %call = tail call i32 %0(i8* %2) #6, !dbg !3096
  ret i32 %call, !dbg !3098
}

; Function Attrs: nounwind uwtable
define internal i32 @mat_acc_phi_eq(i8* %p1, i8* %p2) #5 !dbg !3099 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !3101, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.value(metadata i8* %p2, metadata !3102, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.value(metadata i8* %p1, metadata !3103, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.value(metadata i8* %p2, metadata !3104, metadata !DIExpression()), !dbg !3105
  %phi = bitcast i8* %p1 to %union.gimple_statement_d**, !dbg !3106
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi, align 8, !dbg !3106
  %phi3 = bitcast i8* %p2 to %union.gimple_statement_d**, !dbg !3108
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi3, align 8, !dbg !3108
  %cmp = icmp eq %union.gimple_statement_d* %0, %1, !dbg !3109
  %. = zext i1 %cmp to i32, !dbg !3105
  ret i32 %., !dbg !3110
}

declare dso_local void @free(i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @find_sites_in_func(i8 zeroext %record) unnamed_addr #5 !dbg !3111 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmpmi = alloca %struct.matrix_info, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8 %record, metadata !3115, metadata !DIExpression()), !dbg !3139
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3140
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3140
  %1 = bitcast %struct.matrix_info* %tmpmi to i8*, !dbg !3141
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %1) #8, !dbg !3141
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3142
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 3, !dbg !3142
  %3 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3142
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %3, i64 0, i32 2, !dbg !3142
  %4 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3142
  %tobool = icmp eq %struct.VEC_tree_gc* %4, null, !dbg !3142
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3142

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %4, i64 0, i32 0, !dbg !3142
  br label %cond.end, !dbg !3142

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3142
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !3142
  %call4 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %call) #6, !dbg !3143
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call4, metadata !3116, metadata !DIExpression()), !dbg !3139
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3144
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !3144
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3144
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !3144
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3144
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3145
  %decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %tmpmi, i64 0, i32 0, !dbg !3146
  br label %for.cond, !dbg !3144

for.cond:                                         ; preds = %for.inc50, %cond.end
  %9 = phi %struct.control_flow_graph* [ %6, %cond.end ], [ %.pre4, %for.inc50 ], !dbg !3149
  %.pn = phi %struct.basic_block_def* [ %7, %cond.end ], [ %bb.0, %for.inc50 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3150
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3150
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3129, metadata !DIExpression()), !dbg !3139
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 1, !dbg !3149
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3149
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %10, !dbg !3149
  br i1 %cmp, label %for.end52, label %for.body, !dbg !3144

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !3151
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !3151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !3151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !3151
  br label %for.cond8, !dbg !3152

for.cond8:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3127, metadata !DIExpression(DW_OP_deref)), !dbg !3139
  %call9 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3153
  %tobool10 = icmp eq i8 %call9, 0, !dbg !3154
  br i1 %tobool10, label %for.body11, label %for.inc50, !dbg !3155

for.body11:                                       ; preds = %for.cond8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3127, metadata !DIExpression(DW_OP_deref)), !dbg !3139
  %call12 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3156
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !3128, metadata !DIExpression()), !dbg !3139
  %call13 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call12) #6, !dbg !3157
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !3132, metadata !DIExpression()), !dbg !3158
  %cmp14 = icmp eq %union.tree_node* %call13, null, !dbg !3159
  br i1 %cmp14, label %if.end20, label %land.lhs.true, !dbg !3160

land.lhs.true:                                    ; preds = %for.body11
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3161
  %bf.load = load i64, i64* %11, align 8, !dbg !3161
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !3162
  %cmp16 = icmp eq i64 %bf.cast3, 32, !dbg !3162
  br i1 %cmp16, label %if.then, label %if.end20, !dbg !3163

if.then:                                          ; preds = %land.lhs.true
  store %union.tree_node* %call13, %union.tree_node** %decl, align 8, !dbg !3164
  %12 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !3165
  %call17 = call i8* @htab_find(%struct.htab* %12, i8* nonnull %1) #6, !dbg !3167
  call void @llvm.dbg.value(metadata i8* %call17, metadata !3131, metadata !DIExpression()), !dbg !3139
  %tobool18 = icmp eq i8* %call17, null, !dbg !3168
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !3169

if.then19:                                        ; preds = %if.then
  %13 = bitcast i8* %call17 to %struct.matrix_info*, !dbg !3170
  call void @llvm.dbg.value(metadata %struct.matrix_info* %13, metadata !3131, metadata !DIExpression()), !dbg !3139
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call4) #6, !dbg !3171
  call fastcc void @analyze_matrix_allocation_site(%struct.matrix_info* nonnull %13, %union.gimple_statement_d* %call12, i32 0, %struct.simple_bitmap_def* %call4) #7, !dbg !3173
  br label %if.end20, !dbg !3174

if.end20:                                         ; preds = %if.then, %for.body11, %if.then19, %land.lhs.true
  %call21 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %call12) #7, !dbg !3175
  %tobool22 = icmp eq i8 %call21, 0, !dbg !3175
  br i1 %tobool22, label %for.inc, label %land.lhs.true23, !dbg !3177

land.lhs.true23:                                  ; preds = %if.end20
  %call24 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %call12) #6, !dbg !3178
  %tobool26 = icmp eq i8 %call24, 0, !dbg !3178
  br i1 %tobool26, label %for.inc, label %land.lhs.true27, !dbg !3179

land.lhs.true27:                                  ; preds = %land.lhs.true23
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3180
  %bf.load29 = load i64, i64* %14, align 8, !dbg !3180
  %bf.cast311 = and i64 %bf.load29, 65535, !dbg !3181
  %cmp32 = icmp eq i64 %bf.cast311, 141, !dbg !3181
  br i1 %cmp32, label %land.lhs.true34, label %for.inc, !dbg !3182

land.lhs.true34:                                  ; preds = %land.lhs.true27
  %call35 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call12) #7, !dbg !3183
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3183
  %bf.load37 = load i64, i64* %15, align 8, !dbg !3183
  %bf.cast392 = and i64 %bf.load37, 65535, !dbg !3184
  %cmp40 = icmp eq i64 %bf.cast392, 32, !dbg !3184
  br i1 %cmp40, label %if.then42, label %for.inc, !dbg !3185

if.then42:                                        ; preds = %land.lhs.true34
  %call43 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call12) #7, !dbg !3186
  store %union.tree_node* %call43, %union.tree_node** %decl, align 8, !dbg !3188
  %16 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !3189
  %call45 = call i8* @htab_find(%struct.htab* %16, i8* nonnull %1) #6, !dbg !3191
  call void @llvm.dbg.value(metadata i8* %call45, metadata !3131, metadata !DIExpression()), !dbg !3139
  %tobool46 = icmp eq i8* %call45, null, !dbg !3192
  br i1 %tobool46, label %for.inc, label %if.then47, !dbg !3193

if.then47:                                        ; preds = %if.then42
  %17 = bitcast i8* %call45 to %struct.matrix_info*, !dbg !3194
  call void @llvm.dbg.value(metadata %struct.matrix_info* %17, metadata !3131, metadata !DIExpression()), !dbg !3139
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call4) #6, !dbg !3195
  call fastcc void @analyze_matrix_accesses(%struct.matrix_info* nonnull %17, %union.tree_node* %call13, i32 0, i8 zeroext 0, %struct.simple_bitmap_def* %call4, i8 zeroext %record) #7, !dbg !3197
  br label %for.inc, !dbg !3198

for.inc:                                          ; preds = %if.then42, %land.lhs.true23, %if.end20, %land.lhs.true27, %land.lhs.true34, %if.then47
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3127, metadata !DIExpression(DW_OP_deref)), !dbg !3139
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3199
  br label %for.cond8, !dbg !3200, !llvm.loop !3201

for.inc50:                                        ; preds = %for.cond8
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3149
  %cfg7.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3203
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7.phi.trans.insert, align 8, !dbg !3149
  br label %for.cond, !dbg !3149, !llvm.loop !3204

for.end52:                                        ; preds = %for.cond
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call4, i64 0, i32 0, !dbg !3206
  %18 = load i8*, i8** %popcount, align 8, !dbg !3206
  call void @free(i8* %18) #6, !dbg !3206
  %19 = bitcast %struct.simple_bitmap_def* %call4 to i8*, !dbg !3206
  call void @free(i8* %19) #6, !dbg !3206
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1) #8, !dbg !3207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3207
  ret void, !dbg !3207
}

declare dso_local void @loop_optimizer_init(i32) local_unnamed_addr #2

declare dso_local void @scev_initialize() local_unnamed_addr #2

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @analyze_transpose(i8** %slot, i8* %data) #5 !dbg !3208 {
entry:
  %iv = alloca %struct.affine_iv, align 8
  %acc_info = alloca %struct.access_site_info*, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !3212, metadata !DIExpression()), !dbg !3236
  call void @llvm.dbg.value(metadata i8* %data, metadata !3213, metadata !DIExpression()), !dbg !3236
  %0 = bitcast i8** %slot to %struct.matrix_info**, !dbg !3237
  %1 = load %struct.matrix_info*, %struct.matrix_info** %0, align 8, !dbg !3237
  call void @llvm.dbg.value(metadata %struct.matrix_info* %1, metadata !3214, metadata !DIExpression()), !dbg !3236
  %min_indirect_level_escape = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 2, !dbg !3238
  %2 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3238
  call void @llvm.dbg.value(metadata i32 %2, metadata !3215, metadata !DIExpression()), !dbg !3236
  %3 = bitcast %struct.affine_iv* %iv to i8*, !dbg !3239
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3239
  %4 = bitcast %struct.access_site_info** %acc_info to i8*, !dbg !3240
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !3240
  %cmp = icmp slt i32 %2, 2, !dbg !3241
  br i1 %cmp, label %entry.if.then_crit_edge, label %lor.lhs.false, !dbg !3243

entry.if.then_crit_edge:                          ; preds = %entry
  %access_l1.phi.trans.insert = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 14, !dbg !3244
  %.pre = load %struct.VEC_access_site_info_p_heap*, %struct.VEC_access_site_info_p_heap** %access_l1.phi.trans.insert, align 8, !dbg !3247
  br label %if.then, !dbg !3243

lor.lhs.false:                                    ; preds = %entry
  %access_l = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 14, !dbg !3248
  %5 = load %struct.VEC_access_site_info_p_heap*, %struct.VEC_access_site_info_p_heap** %access_l, align 8, !dbg !3248
  %tobool = icmp eq %struct.VEC_access_site_info_p_heap* %5, null, !dbg !3249
  br i1 %tobool, label %if.then, label %if.end9, !dbg !3250

if.then:                                          ; preds = %entry.if.then_crit_edge, %lor.lhs.false
  %6 = phi %struct.VEC_access_site_info_p_heap* [ %.pre, %entry.if.then_crit_edge ], [ null, %lor.lhs.false ], !dbg !3247
  %access_l1 = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 14, !dbg !3247
  %tobool2 = icmp eq %struct.VEC_access_site_info_p_heap* %6, null, !dbg !3251
  br i1 %tobool2, label %cleanup, label %for.cond.preheader, !dbg !3252

for.cond.preheader:                               ; preds = %if.then
  %7 = bitcast %struct.access_site_info** %acc_info to i8**, !dbg !3253
  br label %for.cond, !dbg !3257

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %8 = phi %struct.VEC_access_site_info_p_heap* [ %.pre1, %for.body ], [ %6, %for.cond.preheader ], !dbg !3258
  %i.0 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !3259
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3225, metadata !DIExpression()), !dbg !3236
  %tobool5 = icmp eq %struct.VEC_access_site_info_p_heap* %8, null, !dbg !3258
  br i1 %tobool5, label %cond.end, label %cond.true, !dbg !3258

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_access_site_info_p_heap, %struct.VEC_access_site_info_p_heap* %8, i64 0, i32 0, !dbg !3258
  br label %cond.end, !dbg !3258

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_access_site_info_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3258
  call void @llvm.dbg.value(metadata %struct.access_site_info** %acc_info, metadata !3224, metadata !DIExpression(DW_OP_deref)), !dbg !3236
  %call = call fastcc i32 @VEC_access_site_info_p_base_iterate(%struct.VEC_access_site_info_p_base* %cond, i32 %i.0, %struct.access_site_info** nonnull %acc_info) #7, !dbg !3258
  %tobool7 = icmp eq i32 %call, 0, !dbg !3257
  br i1 %tobool7, label %for.end, label %for.body, !dbg !3257

for.body:                                         ; preds = %cond.end
  %9 = load i8*, i8** %7, align 8, !dbg !3260
  call void @free(i8* %9) #6, !dbg !3261
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3262
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3225, metadata !DIExpression()), !dbg !3236
  %.pre1 = load %struct.VEC_access_site_info_p_heap*, %struct.VEC_access_site_info_p_heap** %access_l1, align 8, !dbg !3258
  br label %for.cond, !dbg !3263, !llvm.loop !3264

for.end:                                          ; preds = %cond.end
  call fastcc void @VEC_access_site_info_p_heap_free(%struct.VEC_access_site_info_p_heap** nonnull %access_l1) #7, !dbg !3266
  br label %cleanup, !dbg !3267

if.end9:                                          ; preds = %lor.lhs.false
  %dim_hot_level = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 13, !dbg !3268
  %10 = load i64*, i64** %dim_hot_level, align 8, !dbg !3268
  %tobool10 = icmp eq i64* %10, null, !dbg !3270
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !3271

if.then11:                                        ; preds = %if.end9
  %conv = sext i32 %2 to i64, !dbg !3272
  %call12 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !3273
  %11 = bitcast i64** %dim_hot_level to i8**, !dbg !3274
  store i8* %call12, i8** %11, align 8, !dbg !3274
  br label %if.end14, !dbg !3275

if.end14:                                         ; preds = %if.end9, %if.then11
  call void @llvm.dbg.value(metadata i32 0, metadata !3225, metadata !DIExpression()), !dbg !3236
  %step = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 1, !dbg !3276
  %12 = bitcast %struct.access_site_info** %acc_info to i8**, !dbg !3277
  br label %for.cond15, !dbg !3278

for.cond15:                                       ; preds = %for.inc59, %if.end14
  %i.1 = phi i32 [ 0, %if.end14 ], [ %inc60, %for.inc59 ], !dbg !3279
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3225, metadata !DIExpression()), !dbg !3236
  %13 = load %struct.VEC_access_site_info_p_heap*, %struct.VEC_access_site_info_p_heap** %access_l, align 8, !dbg !3280
  %tobool17 = icmp eq %struct.VEC_access_site_info_p_heap* %13, null, !dbg !3280
  br i1 %tobool17, label %cond.end22, label %cond.true18, !dbg !3280

cond.true18:                                      ; preds = %for.cond15
  %base20 = getelementptr inbounds %struct.VEC_access_site_info_p_heap, %struct.VEC_access_site_info_p_heap* %13, i64 0, i32 0, !dbg !3280
  br label %cond.end22, !dbg !3280

cond.end22:                                       ; preds = %for.cond15, %cond.true18
  %cond23 = phi %struct.VEC_access_site_info_p_base* [ %base20, %cond.true18 ], [ null, %for.cond15 ], !dbg !3280
  call void @llvm.dbg.value(metadata %struct.access_site_info** %acc_info, metadata !3224, metadata !DIExpression(DW_OP_deref)), !dbg !3236
  %call24 = call fastcc i32 @VEC_access_site_info_p_base_iterate(%struct.VEC_access_site_info_p_base* %cond23, i32 %i.1, %struct.access_site_info** nonnull %acc_info) #7, !dbg !3280
  %tobool25 = icmp eq i32 %call24, 0, !dbg !3281
  br i1 %tobool25, label %for.end61, label %for.body26, !dbg !3281

for.body26:                                       ; preds = %cond.end22
  %14 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !3282
  call void @llvm.dbg.value(metadata %struct.access_site_info* %14, metadata !3224, metadata !DIExpression()), !dbg !3236
  %stmt = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %14, i64 0, i32 0, !dbg !3283
  %15 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3283
  %call27 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %15) #7, !dbg !3284
  %cmp28 = icmp eq i32 %call27, 66, !dbg !3285
  br i1 %cmp28, label %land.lhs.true, label %if.end58, !dbg !3286

land.lhs.true:                                    ; preds = %for.body26
  %16 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !3287
  call void @llvm.dbg.value(metadata %struct.access_site_info* %16, metadata !3224, metadata !DIExpression()), !dbg !3236
  %level = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %16, i64 0, i32 3, !dbg !3288
  %17 = load i32, i32* %level, align 8, !dbg !3288
  %cmp30 = icmp slt i32 %17, %2, !dbg !3289
  br i1 %cmp30, label %if.then32, label %if.end58, !dbg !3290

if.then32:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.access_site_info* %16, metadata !3224, metadata !DIExpression()), !dbg !3236
  %stmt33 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %16, i64 0, i32 0, !dbg !3291
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt33, align 8, !dbg !3291
  %call34 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %18) #7, !dbg !3292
  call void @llvm.dbg.value(metadata %struct.loop* %call34, metadata !3216, metadata !DIExpression()), !dbg !3236
  %tobool35 = icmp eq %struct.loop* %call34, null, !dbg !3293
  br i1 %tobool35, label %if.then38, label %lor.lhs.false36, !dbg !3295

lor.lhs.false36:                                  ; preds = %if.then32
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %call34, i64 0, i32 8, !dbg !3296
  %19 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3296
  %tobool37 = icmp eq %struct.loop* %19, null, !dbg !3297
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !3298

if.then38:                                        ; preds = %lor.lhs.false36, %if.then32
  %20 = load i8*, i8** %12, align 8, !dbg !3299
  call void @free(i8* %20) #6, !dbg !3301
  br label %for.inc59, !dbg !3302

if.end39:                                         ; preds = %lor.lhs.false36
  %21 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !3303
  call void @llvm.dbg.value(metadata %struct.access_site_info* %21, metadata !3224, metadata !DIExpression()), !dbg !3236
  %offset = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %21, i64 0, i32 1, !dbg !3304
  %22 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !3304
  call void @llvm.dbg.value(metadata %struct.affine_iv* %iv, metadata !3217, metadata !DIExpression(DW_OP_deref)), !dbg !3236
  %call40 = call zeroext i8 @simple_iv(%struct.loop* nonnull %call34, %struct.loop* nonnull %call34, %union.tree_node* %22, %struct.affine_iv* nonnull %iv, i8 zeroext 1) #6, !dbg !3305
  %tobool41 = icmp eq i8 %call40, 0, !dbg !3305
  br i1 %tobool41, label %if.end58, label %if.then42, !dbg !3306

if.then42:                                        ; preds = %if.end39
  %23 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !3307
  %cmp43 = icmp eq %union.tree_node* %23, null, !dbg !3308
  br i1 %cmp43, label %if.end58, label %if.then45, !dbg !3309

if.then45:                                        ; preds = %if.then42
  %call47 = call i64 @int_cst_value(%union.tree_node* nonnull %23) #6, !dbg !3310
  call void @llvm.dbg.value(metadata i64 %call47, metadata !3226, metadata !DIExpression()), !dbg !3311
  %cmp48 = icmp eq i64 %call47, 0, !dbg !3312
  br i1 %cmp48, label %if.end58, label %if.then50, !dbg !3314

if.then50:                                        ; preds = %if.then45
  %24 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !3315
  call void @llvm.dbg.value(metadata %struct.access_site_info* %24, metadata !3224, metadata !DIExpression()), !dbg !3236
  %iterated_by_inner_most_loop_p = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %24, i64 0, i32 6, !dbg !3317
  store i8 1, i8* %iterated_by_inner_most_loop_p, align 8, !dbg !3318
  call void @llvm.dbg.value(metadata %struct.access_site_info* %24, metadata !3224, metadata !DIExpression()), !dbg !3236
  %stmt51 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %24, i64 0, i32 0, !dbg !3319
  %25 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt51, align 8, !dbg !3319
  %call52 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %25) #7, !dbg !3320
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call52, i64 0, i32 8, !dbg !3321
  %26 = load i64, i64* %count, align 8, !dbg !3321
  %27 = load i64*, i64** %dim_hot_level, align 8, !dbg !3322
  %28 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !3323
  call void @llvm.dbg.value(metadata %struct.access_site_info* %28, metadata !3224, metadata !DIExpression()), !dbg !3236
  %level54 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %28, i64 0, i32 3, !dbg !3324
  %29 = load i32, i32* %level54, align 8, !dbg !3324
  %idxprom = sext i32 %29 to i64, !dbg !3325
  %arrayidx = getelementptr inbounds i64, i64* %27, i64 %idxprom, !dbg !3325
  %30 = load i64, i64* %arrayidx, align 8, !dbg !3326
  %add = add nsw i64 %30, %26, !dbg !3326
  store i64 %add, i64* %arrayidx, align 8, !dbg !3326
  br label %if.end58, !dbg !3327

if.end58:                                         ; preds = %if.then45, %if.then42, %if.end39, %if.then50, %land.lhs.true, %for.body26
  %31 = load i8*, i8** %12, align 8, !dbg !3328
  call void @free(i8* %31) #6, !dbg !3329
  br label %for.inc59, !dbg !3330

for.inc59:                                        ; preds = %if.end58, %if.then38
  %inc60 = add nuw nsw i32 %i.1, 1, !dbg !3331
  call void @llvm.dbg.value(metadata i32 %inc60, metadata !3225, metadata !DIExpression()), !dbg !3236
  br label %for.cond15, !dbg !3332, !llvm.loop !3333

for.end61:                                        ; preds = %cond.end22
  call fastcc void @VEC_access_site_info_p_heap_free(%struct.VEC_access_site_info_p_heap** nonnull %access_l) #7, !dbg !3335
  br label %cleanup, !dbg !3336

cleanup:                                          ; preds = %if.then, %for.end, %for.end61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !3337
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3337
  ret i32 1, !dbg !3337
}

declare dso_local void @scev_finalize() local_unnamed_addr #2

declare dso_local void @loop_optimizer_finalize() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @check_allocation_function(i8** %slot, i8* %data) #5 !dbg !3338 {
entry:
  %mcd = alloca %struct.malloc_call_data, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !3340, metadata !DIExpression()), !dbg !3356
  call void @llvm.dbg.value(metadata i8* %data, metadata !3341, metadata !DIExpression()), !dbg !3356
  %0 = bitcast i8** %slot to %struct.matrix_info**, !dbg !3357
  %1 = load %struct.matrix_info*, %struct.matrix_info** %0, align 8, !dbg !3357
  call void @llvm.dbg.value(metadata %struct.matrix_info* %1, metadata !3343, metadata !DIExpression()), !dbg !3356
  %malloc_for_level = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 4, !dbg !3358
  %2 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level, align 8, !dbg !3358
  %tobool = icmp eq %union.gimple_statement_d** %2, null, !dbg !3360
  br i1 %tobool, label %cleanup89, label %if.end, !dbg !3361

if.end:                                           ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3362
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 3, !dbg !3362
  %4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3362
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %4, i64 0, i32 2, !dbg !3362
  %5 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3362
  %tobool1 = icmp eq %struct.VEC_tree_gc* %5, null, !dbg !3362
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !3362

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %5, i64 0, i32 0, !dbg !3362
  br label %cond.end, !dbg !3362

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3362
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !3362
  %call5 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %call) #6, !dbg !3363
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call5, metadata !3344, metadata !DIExpression()), !dbg !3356
  %allocation_function_decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 7, !dbg !3364
  %6 = load %union.tree_node*, %union.tree_node** %allocation_function_decl, align 8, !dbg !3364
  %7 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3366
  %cmp = icmp eq %union.tree_node* %6, %7, !dbg !3367
  br i1 %cmp, label %lor.lhs.false, label %cleanup89, !dbg !3368

lor.lhs.false:                                    ; preds = %cond.end
  %8 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level, align 8, !dbg !3369
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %8, align 8, !dbg !3370
  %tobool7 = icmp eq %union.gimple_statement_d* %9, null, !dbg !3370
  br i1 %tobool7, label %cleanup89, label %for.cond.preheader, !dbg !3371

for.cond.preheader:                               ; preds = %lor.lhs.false
  %max_malloced_level = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 5, !dbg !3372
  %10 = load i32, i32* %max_malloced_level, align 8, !dbg !3372
  %11 = sext i32 %10 to i64, !dbg !3375
  br label %for.cond, !dbg !3375

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv8 = phi i64 [ 1, %for.cond.preheader ], [ %indvars.iv.next9, %for.inc ], !dbg !3376
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !3342, metadata !DIExpression()), !dbg !3356
  %cmp10 = icmp slt i64 %indvars.iv8, %11, !dbg !3377
  %12 = trunc i64 %indvars.iv8 to i32, !dbg !3375
  br i1 %cmp10, label %for.body, label %for.end, !dbg !3375

for.body:                                         ; preds = %for.cond
  %arrayidx12 = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %8, i64 %indvars.iv8, !dbg !3378
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx12, align 8, !dbg !3378
  %tobool13 = icmp eq %union.gimple_statement_d* %13, null, !dbg !3378
  br i1 %tobool13, label %for.end, label %for.inc, !dbg !3380

for.inc:                                          ; preds = %for.body
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !3381
  call void @llvm.dbg.value(metadata i32 undef, metadata !3342, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3356
  br label %for.cond, !dbg !3382, !llvm.loop !3383

for.end:                                          ; preds = %for.body, %for.cond
  %.lcssa11 = phi i32 [ %12, %for.body ], [ %12, %for.cond ], !dbg !3375
  call void @llvm.dbg.value(metadata i32 %.lcssa11, metadata !3342, metadata !DIExpression()), !dbg !3356
  call void @llvm.dbg.value(metadata i32 %.lcssa11, metadata !3342, metadata !DIExpression()), !dbg !3356
  call void @llvm.dbg.value(metadata i32 %.lcssa11, metadata !3342, metadata !DIExpression()), !dbg !3356
  call void @llvm.dbg.value(metadata i32 %.lcssa11, metadata !3342, metadata !DIExpression()), !dbg !3356
  tail call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %1, i32 %.lcssa11, %union.gimple_statement_d* null) #7, !dbg !3385
  call void @llvm.dbg.value(metadata i32 1, metadata !3342, metadata !DIExpression()), !dbg !3356
  %min_indirect_level_escape = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 2, !dbg !3386
  %14 = bitcast %struct.malloc_call_data* %mcd to i8*, !dbg !3387
  %size_var = getelementptr inbounds %struct.malloc_call_data, %struct.malloc_call_data* %mcd, i64 0, i32 1, !dbg !3388
  %15 = bitcast %union.tree_node** %size_var to i64**, !dbg !3388
  %dimension_size54 = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 9, !dbg !3390
  %16 = bitcast %union.tree_node*** %dimension_size54 to i8**, !dbg !3392
  %dimension_size_orig64 = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 10, !dbg !3392
  %17 = bitcast %union.tree_node*** %dimension_size_orig64 to i8**, !dbg !3392
  %decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 0, !dbg !3394
  %18 = bitcast %union.tree_node** %size_var to i64*, !dbg !3398
  br label %for.cond16, !dbg !3400

for.cond16:                                       ; preds = %for.inc74, %for.end
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.inc74 ], [ 1, %for.end ], !dbg !3401
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !3342, metadata !DIExpression()), !dbg !3356
  %19 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3402
  %20 = sext i32 %19 to i64, !dbg !3403
  %cmp17 = icmp slt i64 %indvars.iv6, %20, !dbg !3403
  br i1 %cmp17, label %for.body18, label %for.end76.loopexit, !dbg !3404

for.body18:                                       ; preds = %for.cond16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8, !dbg !3405
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false), !dbg !3406
  %21 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level, align 8, !dbg !3407
  %arrayidx21 = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %21, i64 %indvars.iv6, !dbg !3408
  %22 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx21, align 8, !dbg !3408
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %22, metadata !3345, metadata !DIExpression()), !dbg !3387
  call void @llvm.dbg.value(metadata %struct.malloc_call_data* %mcd, metadata !3350, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  call fastcc void @collect_data_for_malloc_call(%union.gimple_statement_d* %22, %struct.malloc_call_data* nonnull %mcd) #7, !dbg !3409
  %23 = load i64*, i64** %15, align 8, !dbg !3410
  %bf.load = load i64, i64* %23, align 8, !dbg !3410
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3411
  %cmp23 = icmp eq i64 %bf.cast1, 23, !dbg !3411
  br i1 %cmp23, label %if.then24, label %if.end42, !dbg !3412

if.then24:                                        ; preds = %for.body18
  %24 = ptrtoint i64* %23 to i64, !dbg !3412
  %25 = load %union.tree_node**, %union.tree_node*** %dimension_size54, align 8, !dbg !3413
  %tobool25 = icmp eq %union.tree_node** %25, null, !dbg !3415
  br i1 %tobool25, label %if.then26, label %if.end33, !dbg !3416

if.then26:                                        ; preds = %if.then24
  %26 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3417
  %conv = sext i32 %26 to i64, !dbg !3419
  %call28 = call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !3420
  store i8* %call28, i8** %16, align 8, !dbg !3421
  %27 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3422
  %conv31 = sext i32 %27 to i64, !dbg !3423
  %call32 = call i8* @xcalloc(i64 %conv31, i64 8) #6, !dbg !3424
  store i8* %call32, i8** %17, align 8, !dbg !3425
  %.pre2 = load i64, i64* %18, align 8, !dbg !3426
  %.pre3 = load %union.tree_node**, %union.tree_node*** %dimension_size54, align 8, !dbg !3427
  br label %if.end33, !dbg !3428

if.end33:                                         ; preds = %if.then24, %if.then26
  %28 = phi %union.tree_node** [ %25, %if.then24 ], [ %.pre3, %if.then26 ], !dbg !3427
  %29 = phi i64 [ %24, %if.then24 ], [ %.pre2, %if.then26 ], !dbg !3426
  %arrayidx37 = getelementptr inbounds %union.tree_node*, %union.tree_node** %28, i64 %indvars.iv6, !dbg !3429
  %30 = bitcast %union.tree_node** %arrayidx37 to i64*, !dbg !3430
  store i64 %29, i64* %30, align 8, !dbg !3430
  %31 = load i64, i64* %18, align 8, !dbg !3431
  %32 = load %union.tree_node**, %union.tree_node*** %dimension_size_orig64, align 8, !dbg !3432
  %arrayidx41 = getelementptr inbounds %union.tree_node*, %union.tree_node** %32, i64 %indvars.iv6, !dbg !3433
  %33 = bitcast %union.tree_node** %arrayidx41 to i64*, !dbg !3434
  store i64 %31, i64* %33, align 8, !dbg !3434
  br label %cleanup, !dbg !3435

if.end42:                                         ; preds = %for.body18
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call5) #6, !dbg !3436
  %34 = load %union.tree_node*, %union.tree_node** %size_var, align 8, !dbg !3437
  %call44 = call fastcc %union.tree_node* @can_calculate_expr_before_stmt(%union.tree_node* %34, %struct.simple_bitmap_def* %call5) #7, !dbg !3438
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !3349, metadata !DIExpression()), !dbg !3387
  %cmp45 = icmp eq %union.tree_node* %call44, null, !dbg !3439
  br i1 %cmp45, label %if.then47, label %if.end53, !dbg !3440

if.then47:                                        ; preds = %if.end42
  %35 = trunc i64 %indvars.iv6 to i32, !dbg !3441
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %1, i32 %35, %union.gimple_statement_d* %22) #7, !dbg !3441
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3442
  %tobool48 = icmp eq %struct._IO_FILE* %36, null, !dbg !3442
  br i1 %tobool48, label %cleanup, label %if.then49, !dbg !3443

if.then49:                                        ; preds = %if.then47
  %37 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3444
  %call50 = call i8* @get_name(%union.tree_node* %37) #6, !dbg !3445
  %38 = trunc i64 %indvars.iv6 to i32, !dbg !3446
  %call51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %36, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i8* %call50, i32 %38) #6, !dbg !3446
  br label %cleanup, !dbg !3446

if.end53:                                         ; preds = %if.end42
  %39 = load %union.tree_node**, %union.tree_node*** %dimension_size54, align 8, !dbg !3447
  %tobool55 = icmp eq %union.tree_node** %39, null, !dbg !3448
  br i1 %tobool55, label %if.then56, label %if.end65, !dbg !3449

if.then56:                                        ; preds = %if.end53
  %40 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3450
  %conv58 = sext i32 %40 to i64, !dbg !3451
  %call59 = call i8* @xcalloc(i64 %conv58, i64 8) #6, !dbg !3452
  store i8* %call59, i8** %16, align 8, !dbg !3453
  %41 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3454
  %conv62 = sext i32 %41 to i64, !dbg !3455
  %call63 = call i8* @xcalloc(i64 %conv62, i64 8) #6, !dbg !3456
  store i8* %call63, i8** %17, align 8, !dbg !3457
  %.pre = load %union.tree_node**, %union.tree_node*** %dimension_size54, align 8, !dbg !3458
  br label %if.end65, !dbg !3459

if.end65:                                         ; preds = %if.end53, %if.then56
  %42 = phi %union.tree_node** [ %39, %if.end53 ], [ %.pre, %if.then56 ], !dbg !3458
  %arrayidx68 = getelementptr inbounds %union.tree_node*, %union.tree_node** %42, i64 %indvars.iv6, !dbg !3460
  store %union.tree_node* %call44, %union.tree_node** %arrayidx68, align 8, !dbg !3461
  %43 = load %union.tree_node**, %union.tree_node*** %dimension_size_orig64, align 8, !dbg !3462
  %arrayidx71 = getelementptr inbounds %union.tree_node*, %union.tree_node** %43, i64 %indvars.iv6, !dbg !3463
  store %union.tree_node* %call44, %union.tree_node** %arrayidx71, align 8, !dbg !3464
  br label %cleanup, !dbg !3465

cleanup:                                          ; preds = %if.then47, %if.then49, %if.end65, %if.end33
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end33 ], [ false, %if.end65 ], [ true, %if.then49 ], [ true, %if.then47 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8, !dbg !3465
  br i1 %cleanup.dest.slot.0, label %cleanup.for.end76_crit_edge, label %for.inc74

cleanup.for.end76_crit_edge:                      ; preds = %cleanup
  %.pre4 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3466
  br label %for.end76

for.inc74:                                        ; preds = %cleanup
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !3468
  call void @llvm.dbg.value(metadata i32 undef, metadata !3342, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3356
  br label %for.cond16, !dbg !3469, !llvm.loop !3470

for.end76.loopexit:                               ; preds = %for.cond16
  %.lcssa = phi i32 [ %19, %for.cond16 ], !dbg !3402
  br label %for.end76, !dbg !3472

for.end76:                                        ; preds = %for.end76.loopexit, %cleanup.for.end76_crit_edge
  %44 = phi i32 [ %.pre4, %cleanup.for.end76_crit_edge ], [ %.lcssa, %for.end76.loopexit ], !dbg !3466
  call void @llvm.dbg.value(metadata i32 %44, metadata !3342, metadata !DIExpression()), !dbg !3356
  %45 = sext i32 %44 to i64, !dbg !3472
  br label %for.cond78, !dbg !3472

for.cond78:                                       ; preds = %for.body82, %for.end76
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body82 ], [ %45, %for.end76 ], !dbg !3473
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3342, metadata !DIExpression()), !dbg !3356
  %46 = load i32, i32* %max_malloced_level, align 8, !dbg !3474
  %47 = sext i32 %46 to i64, !dbg !3476
  %cmp80 = icmp slt i64 %indvars.iv, %47, !dbg !3476
  br i1 %cmp80, label %for.body82, label %cleanup89.loopexit, !dbg !3477

for.body82:                                       ; preds = %for.cond78
  %48 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level, align 8, !dbg !3478
  %arrayidx85 = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %48, i64 %indvars.iv, !dbg !3479
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %arrayidx85, align 8, !dbg !3480
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !3481
  call void @llvm.dbg.value(metadata i32 undef, metadata !3342, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3356
  br label %for.cond78, !dbg !3482, !llvm.loop !3483

cleanup89.loopexit:                               ; preds = %for.cond78
  br label %cleanup89, !dbg !3485

cleanup89:                                        ; preds = %cleanup89.loopexit, %lor.lhs.false, %cond.end, %entry
  ret i32 1, !dbg !3485
}

; Function Attrs: nounwind uwtable
define internal i32 @transform_allocation_sites(i8** %slot, i8* %data) #5 !dbg !3486 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %mcd = alloca %struct.malloc_call_data, align 8
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  %data106 = alloca %struct.check_var_data, align 8
  %tmp129 = alloca %struct.gimple_stmt_iterator, align 8
  %gsi239 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp255 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp263 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp274 = alloca %struct.gimple_stmt_iterator, align 8
  %gsi286 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp327 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !3488, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata i8* %data, metadata !3489, metadata !DIExpression()), !dbg !3540
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3541
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3541
  %1 = bitcast %struct.malloc_call_data* %mcd to i8*, !dbg !3542
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3542
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 24, i1 false), !dbg !3543
  %2 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !3544
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2) #8, !dbg !3544
  %3 = bitcast i8** %slot to %struct.matrix_info**, !dbg !3545
  %4 = load %struct.matrix_info*, %struct.matrix_info** %3, align 8, !dbg !3545
  call void @llvm.dbg.value(metadata %struct.matrix_info* %4, metadata !3491, metadata !DIExpression()), !dbg !3540
  %min_indirect_level_escape = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 2, !dbg !3546
  %5 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3546
  call void @llvm.dbg.value(metadata i32 %5, metadata !3513, metadata !DIExpression()), !dbg !3540
  %malloc_for_level = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 4, !dbg !3547
  %6 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level, align 8, !dbg !3547
  %tobool = icmp eq %union.gimple_statement_d** %6, null, !dbg !3549
  br i1 %tobool, label %if.then, label %if.end, !dbg !3550

if.then:                                          ; preds = %entry
  store i32 0, i32* %min_indirect_level_escape, align 4, !dbg !3551
  br label %if.end, !dbg !3552

if.end:                                           ; preds = %entry, %if.then
  %7 = phi i32 [ %5, %entry ], [ 0, %if.then ], !dbg !3553
  %cmp = icmp slt i32 %7, 2, !dbg !3555
  br i1 %cmp, label %cleanup338, label %if.end4, !dbg !3556

if.end4:                                          ; preds = %if.end
  %conv = sext i32 %7 to i64, !dbg !3557
  %call = tail call i8* @xcalloc(i64 %conv, i64 4) #6, !dbg !3558
  %dim_map = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 15, !dbg !3559
  %8 = bitcast i32** %dim_map to i8**, !dbg !3560
  store i8* %call, i8** %8, align 8, !dbg !3560
  call void @llvm.dbg.value(metadata i32 0, metadata !3490, metadata !DIExpression()), !dbg !3540
  br label %for.cond, !dbg !3561

for.cond:                                         ; preds = %for.body, %if.end4
  %indvars.iv26 = phi i64 [ %indvars.iv.next27, %for.body ], [ 0, %if.end4 ], !dbg !3563
  call void @llvm.dbg.value(metadata i64 %indvars.iv26, metadata !3490, metadata !DIExpression()), !dbg !3540
  %9 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3564
  %10 = sext i32 %9 to i64, !dbg !3566
  %cmp7 = icmp slt i64 %indvars.iv26, %10, !dbg !3566
  br i1 %cmp7, label %for.body, label %for.end, !dbg !3567

for.body:                                         ; preds = %for.cond
  %11 = load i32*, i32** %dim_map, align 8, !dbg !3568
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %indvars.iv26, !dbg !3569
  %12 = trunc i64 %indvars.iv26 to i32, !dbg !3570
  store i32 %12, i32* %arrayidx, align 4, !dbg !3570
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1, !dbg !3571
  call void @llvm.dbg.value(metadata i32 undef, metadata !3490, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3540
  br label %for.cond, !dbg !3572, !llvm.loop !3573

for.end:                                          ; preds = %for.cond
  %.lcssa29 = phi i32 [ %9, %for.cond ], !dbg !3564
  %13 = load i8, i8* @check_transpose_p, align 1, !dbg !3575
  %tobool10 = icmp eq i8 %13, 0, !dbg !3575
  br i1 %tobool10, label %for.cond84.preheader, label %if.then11, !dbg !3576

for.cond84.preheader:                             ; preds = %for.end
  br label %for.cond84, !dbg !3577

if.then11:                                        ; preds = %for.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3580
  %tobool13 = icmp eq %struct._IO_FILE* %14, null, !dbg !3580
  br i1 %tobool13, label %if.end32, label %if.then14, !dbg !3582

if.then14:                                        ; preds = %if.then11
  %decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 0, !dbg !3583
  %15 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3583
  %call15 = tail call i8* @get_name(%union.tree_node* %15) #6, !dbg !3585
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i8* %call15) #6, !dbg !3586
  call void @llvm.dbg.value(metadata i32 0, metadata !3515, metadata !DIExpression()), !dbg !3587
  %dim_hot_level = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 13, !dbg !3588
  %16 = sext i32 %5 to i64, !dbg !3593
  br label %for.cond17, !dbg !3593

for.cond17:                                       ; preds = %for.inc29, %if.then14
  %indvars.iv24 = phi i64 [ %indvars.iv.next25, %for.inc29 ], [ 0, %if.then14 ], !dbg !3594
  call void @llvm.dbg.value(metadata i64 %indvars.iv24, metadata !3515, metadata !DIExpression()), !dbg !3587
  %cmp18 = icmp slt i64 %indvars.iv24, %16, !dbg !3595
  br i1 %cmp18, label %for.body20, label %if.end32.loopexit, !dbg !3596

for.body20:                                       ; preds = %for.cond17
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3597
  %18 = trunc i64 %indvars.iv24 to i32, !dbg !3598
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i32 %18) #6, !dbg !3598
  %19 = load i64*, i64** %dim_hot_level, align 8, !dbg !3599
  %tobool22 = icmp eq i64* %19, null, !dbg !3600
  br i1 %tobool22, label %for.inc29, label %if.then23, !dbg !3601

if.then23:                                        ; preds = %for.body20
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3602
  %arrayidx26 = getelementptr inbounds i64, i64* %19, i64 %indvars.iv24, !dbg !3603
  %21 = load i64, i64* %arrayidx26, align 8, !dbg !3603
  %call27 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i64 %21) #6, !dbg !3604
  br label %for.inc29, !dbg !3604

for.inc29:                                        ; preds = %for.body20, %if.then23
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1, !dbg !3605
  call void @llvm.dbg.value(metadata i32 undef, metadata !3515, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3587
  br label %for.cond17, !dbg !3606, !llvm.loop !3607

if.end32.loopexit:                                ; preds = %for.cond17
  %.pre = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3609
  br label %if.end32, !dbg !3610

if.end32:                                         ; preds = %if.end32.loopexit, %if.then11
  %22 = phi i32 [ %.pre, %if.end32.loopexit ], [ %.lcssa29, %if.then11 ], !dbg !3609
  %dim_hot_level33 = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 13, !dbg !3610
  %23 = load i64*, i64** %dim_hot_level33, align 8, !dbg !3610
  %24 = load i32*, i32** %dim_map, align 8, !dbg !3611
  tail call fastcc void @sort_dim_hot_level(i64* %23, i32* %24, i32 %22) #7, !dbg !3612
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3613
  %tobool36 = icmp eq %struct._IO_FILE* %25, null, !dbg !3613
  br i1 %tobool36, label %if.end54, label %for.cond38.preheader, !dbg !3615

for.cond38.preheader:                             ; preds = %if.end32
  %26 = sext i32 %5 to i64, !dbg !3616
  br label %for.cond38, !dbg !3616

for.cond38:                                       ; preds = %for.cond38.preheader, %for.inc51
  %indvars.iv22 = phi i64 [ 0, %for.cond38.preheader ], [ %indvars.iv.next23, %for.inc51 ], !dbg !3618
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !3515, metadata !DIExpression()), !dbg !3587
  %cmp39 = icmp slt i64 %indvars.iv22, %26, !dbg !3619
  br i1 %cmp39, label %for.body41, label %if.end54.loopexit, !dbg !3616

for.body41:                                       ; preds = %for.cond38
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3621
  %28 = trunc i64 %indvars.iv22 to i32, !dbg !3623
  %call42 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i32 %28) #6, !dbg !3623
  %29 = load i64*, i64** %dim_hot_level33, align 8, !dbg !3624
  %tobool44 = icmp eq i64* %29, null, !dbg !3626
  br i1 %tobool44, label %for.inc51, label %if.then45, !dbg !3627

if.then45:                                        ; preds = %for.body41
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3628
  %arrayidx48 = getelementptr inbounds i64, i64* %29, i64 %indvars.iv22, !dbg !3629
  %31 = load i64, i64* %arrayidx48, align 8, !dbg !3629
  %call49 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i64 %31) #6, !dbg !3630
  br label %for.inc51, !dbg !3630

for.inc51:                                        ; preds = %for.body41, %if.then45
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !3631
  call void @llvm.dbg.value(metadata i32 undef, metadata !3515, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3587
  br label %for.cond38, !dbg !3632, !llvm.loop !3633

if.end54.loopexit:                                ; preds = %for.cond38
  br label %if.end54, !dbg !3635

if.end54:                                         ; preds = %if.end54.loopexit, %if.end32
  call void @llvm.dbg.value(metadata i32 0, metadata !3515, metadata !DIExpression()), !dbg !3587
  %is_transposed_p = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 6, !dbg !3637
  br label %for.cond55, !dbg !3635

for.cond55:                                       ; preds = %for.inc81, %if.end54
  %indvars.iv20 = phi i64 [ %indvars.iv.next21, %for.inc81 ], [ 0, %if.end54 ], !dbg !3642
  call void @llvm.dbg.value(metadata i64 %indvars.iv20, metadata !3515, metadata !DIExpression()), !dbg !3587
  %32 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3643
  %33 = sext i32 %32 to i64, !dbg !3644
  %cmp57 = icmp slt i64 %indvars.iv20, %33, !dbg !3644
  br i1 %cmp57, label %for.body59, label %if.end95.loopexit3, !dbg !3645

for.body59:                                       ; preds = %for.cond55
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3646
  %tobool60 = icmp eq %struct._IO_FILE* %34, null, !dbg !3646
  br i1 %tobool60, label %for.body59.if.end66_crit_edge, label %if.then61, !dbg !3648

for.body59.if.end66_crit_edge:                    ; preds = %for.body59
  br label %if.end66, !dbg !3648

if.then61:                                        ; preds = %for.body59
  %35 = load i32*, i32** %dim_map, align 8, !dbg !3649
  %arrayidx64 = getelementptr inbounds i32, i32* %35, i64 %indvars.iv20, !dbg !3650
  %36 = load i32, i32* %arrayidx64, align 4, !dbg !3650
  %37 = trunc i64 %indvars.iv20 to i32, !dbg !3651
  %call65 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %34, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i32 %37, i32 %36) #6, !dbg !3651
  br label %if.end66, !dbg !3651

if.end66:                                         ; preds = %for.body59.if.end66_crit_edge, %if.then61
  %38 = load i32*, i32** %dim_map, align 8, !dbg !3652
  %arrayidx69 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv20, !dbg !3653
  %39 = load i32, i32* %arrayidx69, align 4, !dbg !3653
  %40 = zext i32 %39 to i64, !dbg !3654
  %cmp70 = icmp eq i64 %indvars.iv20, %40, !dbg !3654
  br i1 %cmp70, label %for.inc81, label %if.then72, !dbg !3655

if.then72:                                        ; preds = %if.end66
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3656
  %tobool73 = icmp eq %struct._IO_FILE* %41, null, !dbg !3656
  br i1 %tobool73, label %if.end79, label %if.then74, !dbg !3658

if.then74:                                        ; preds = %if.then72
  %42 = trunc i64 %indvars.iv20 to i32, !dbg !3659
  %call78 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %41, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.13, i64 0, i64 0), i32 %39, i32 %42) #6, !dbg !3659
  br label %if.end79, !dbg !3659

if.end79:                                         ; preds = %if.then72, %if.then74
  store i8 1, i8* %is_transposed_p, align 4, !dbg !3660
  br label %for.inc81, !dbg !3661

for.inc81:                                        ; preds = %if.end66, %if.end79
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1, !dbg !3662
  call void @llvm.dbg.value(metadata i32 undef, metadata !3515, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3587
  br label %for.cond55, !dbg !3663, !llvm.loop !3664

for.cond84:                                       ; preds = %for.cond84.preheader, %for.body88
  %indvars.iv18 = phi i64 [ 0, %for.cond84.preheader ], [ %indvars.iv.next19, %for.body88 ], !dbg !3666
  %43 = phi i32 [ %.lcssa29, %for.cond84.preheader ], [ %.pre4, %for.body88 ], !dbg !3666
  call void @llvm.dbg.value(metadata i64 %indvars.iv18, metadata !3490, metadata !DIExpression()), !dbg !3540
  %44 = sext i32 %43 to i64, !dbg !3668
  %cmp86 = icmp slt i64 %indvars.iv18, %44, !dbg !3668
  br i1 %cmp86, label %for.body88, label %if.end95.loopexit, !dbg !3577

for.body88:                                       ; preds = %for.cond84
  %45 = load i32*, i32** %dim_map, align 8, !dbg !3669
  %arrayidx91 = getelementptr inbounds i32, i32* %45, i64 %indvars.iv18, !dbg !3670
  %46 = trunc i64 %indvars.iv18 to i32, !dbg !3671
  store i32 %46, i32* %arrayidx91, align 4, !dbg !3671
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1, !dbg !3672
  call void @llvm.dbg.value(metadata i32 undef, metadata !3490, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3540
  %.pre4 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3666
  br label %for.cond84, !dbg !3673, !llvm.loop !3674

if.end95.loopexit:                                ; preds = %for.cond84
  br label %if.end95, !dbg !3676

if.end95.loopexit3:                               ; preds = %for.cond55
  br label %if.end95, !dbg !3676

if.end95:                                         ; preds = %if.end95.loopexit3, %if.end95.loopexit
  %47 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level, align 8, !dbg !3676
  %48 = load %union.gimple_statement_d*, %union.gimple_statement_d** %47, align 8, !dbg !3677
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %48, metadata !3495, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata %struct.malloc_call_data* %mcd, metadata !3500, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  call fastcc void @collect_data_for_malloc_call(%union.gimple_statement_d* %48, %struct.malloc_call_data* nonnull %mcd) #7, !dbg !3678
  %size_var = getelementptr inbounds %struct.malloc_call_data, %struct.malloc_call_data* %mcd, i64 0, i32 1, !dbg !3679
  %49 = bitcast %union.tree_node** %size_var to i64*, !dbg !3679
  %50 = load i64, i64* %49, align 8, !dbg !3679
  %dimension_size = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 9, !dbg !3680
  %51 = bitcast %union.tree_node*** %dimension_size to i64**, !dbg !3680
  %52 = load i64*, i64** %51, align 8, !dbg !3680
  store i64 %50, i64* %52, align 8, !dbg !3681
  %53 = load i64, i64* %49, align 8, !dbg !3682
  %dimension_size_orig = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 10, !dbg !3683
  %54 = bitcast %union.tree_node*** %dimension_size_orig to i64**, !dbg !3683
  %55 = load i64*, i64** %54, align 8, !dbg !3683
  store i64 %53, i64* %55, align 8, !dbg !3684
  call void @llvm.dbg.value(metadata i32 1, metadata !3490, metadata !DIExpression()), !dbg !3540
  %56 = bitcast %struct.check_var_data* %data106 to i8*, !dbg !3685
  %allocation_function_decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 7, !dbg !3685
  %57 = bitcast %union.tree_node** %allocation_function_decl to i64*, !dbg !3685
  %58 = bitcast %struct.check_var_data* %data106 to i64*, !dbg !3685
  %stmt = getelementptr inbounds %struct.check_var_data, %struct.check_var_data* %data106, i64 0, i32 1, !dbg !3685
  br label %for.cond101, !dbg !3686

for.cond101:                                      ; preds = %for.inc121, %if.end95
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc121 ], [ 1, %if.end95 ], !dbg !3687
  call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !3490, metadata !DIExpression()), !dbg !3540
  %59 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3688
  %60 = sext i32 %59 to i64, !dbg !3689
  %cmp103 = icmp slt i64 %indvars.iv16, %60, !dbg !3689
  br i1 %cmp103, label %for.body105, label %for.end123.loopexit, !dbg !3690

for.body105:                                      ; preds = %for.cond101
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #8, !dbg !3691
  %61 = load %union.tree_node**, %union.tree_node*** %dimension_size, align 8, !dbg !3692
  %arrayidx109 = getelementptr inbounds %union.tree_node*, %union.tree_node** %61, i64 %indvars.iv16, !dbg !3692
  %62 = load %union.tree_node*, %union.tree_node** %arrayidx109, align 8, !dbg !3692
  %tobool110 = icmp eq %union.tree_node* %62, null, !dbg !3692
  br i1 %tobool110, label %cond.true, label %cond.end, !dbg !3692

cond.true:                                        ; preds = %for.body105
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 2108, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3692
  %.pre5 = load %union.tree_node**, %union.tree_node*** %dimension_size, align 8, !dbg !3693
  br label %cond.end, !dbg !3692

cond.end:                                         ; preds = %for.body105, %cond.true
  %63 = phi %union.tree_node** [ %61, %for.body105 ], [ %.pre5, %cond.true ], !dbg !3693
  %64 = load i64, i64* %57, align 8, !dbg !3694
  store i64 %64, i64* %58, align 8, !dbg !3695
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !3696
  %arrayidx113 = getelementptr inbounds %union.tree_node*, %union.tree_node** %63, i64 %indvars.iv16, !dbg !3693
  %call114 = call %union.tree_node* @walk_tree_without_duplicates_1(%union.tree_node** nonnull %arrayidx113, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @check_var_notmodified_p, i8* nonnull %56, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !3693
  call void @llvm.dbg.value(metadata %union.tree_node* %call114, metadata !3518, metadata !DIExpression()), !dbg !3685
  %cmp115 = icmp eq %union.tree_node* %call114, null, !dbg !3697
  br i1 %cmp115, label %cleanup, label %if.then117, !dbg !3699

if.then117:                                       ; preds = %cond.end
  %65 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3700
  %66 = trunc i64 %indvars.iv16 to i32, !dbg !3702
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %4, i32 %66, %union.gimple_statement_d* %65) #7, !dbg !3702
  br label %cleanup, !dbg !3703

cleanup:                                          ; preds = %cond.end, %if.then117
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then117 ], [ true, %cond.end ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #8, !dbg !3704
  br i1 %cleanup.dest.slot.0, label %for.inc121, label %cleanup.for.end123_crit_edge

cleanup.for.end123_crit_edge:                     ; preds = %cleanup
  %.pre6 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3705
  br label %for.end123

for.inc121:                                       ; preds = %cleanup
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !3707
  call void @llvm.dbg.value(metadata i32 undef, metadata !3490, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3540
  br label %for.cond101, !dbg !3708, !llvm.loop !3709

for.end123.loopexit:                              ; preds = %for.cond101
  %.lcssa = phi i32 [ %59, %for.cond101 ], !dbg !3688
  br label %for.end123, !dbg !3711

for.end123:                                       ; preds = %for.end123.loopexit, %cleanup.for.end123_crit_edge
  %67 = phi i32 [ %.pre6, %cleanup.for.end123_crit_edge ], [ %.lcssa, %for.end123.loopexit ], !dbg !3705
  %cmp125 = icmp slt i32 %67, 2, !dbg !3711
  br i1 %cmp125, label %cleanup338, label %if.end128, !dbg !3712

if.end128:                                        ; preds = %for.end123
  %68 = bitcast %struct.gimple_stmt_iterator* %tmp129 to i8*, !dbg !3713
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #8, !dbg !3713
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp129, %union.gimple_statement_d* %48) #6, !dbg !3713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %68, i64 24, i1 false), !dbg !3713
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #8, !dbg !3713
  %69 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3714
  %70 = load i64, i64* %57, align 8, !dbg !3715
  store i64 %70, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3716
  %.cast = inttoptr i64 %70 to %struct.tree_function_decl*, !dbg !3717
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %.cast, i64 0, i32 1, !dbg !3717
  %71 = load %struct.function*, %struct.function** %f, align 8, !dbg !3717
  call void @push_cfun(%struct.function* %71) #6, !dbg !3718
  %dimension_type_size = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 11, !dbg !3719
  %72 = load i64*, i64** %dimension_type_size, align 8, !dbg !3719
  %73 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3720
  %idxprom133 = sext i32 %73 to i64, !dbg !3721
  %arrayidx134 = getelementptr inbounds i64, i64* %72, i64 %idxprom133, !dbg !3721
  %74 = load i64, i64* %arrayidx134, align 8, !dbg !3721
  call void @llvm.dbg.value(metadata i64 %74, metadata !3501, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3494, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata i32 %73, metadata !3490, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3540
  %75 = sext i32 %73 to i64, !dbg !3722
  br label %for.cond136, !dbg !3722

for.cond136:                                      ; preds = %if.end195, %if.end128
  %indvars.iv14 = phi i64 [ %indvars.iv.next15, %if.end195 ], [ %75, %if.end128 ], !dbg !3540
  %prev_dim_size.0 = phi %union.tree_node* [ %call148, %if.end195 ], [ null, %if.end128 ], !dbg !3540
  %indvars.iv.next15 = add nsw i64 %indvars.iv14, -1, !dbg !3723
  call void @llvm.dbg.value(metadata i32 undef, metadata !3490, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3540
  call void @llvm.dbg.value(metadata %union.tree_node* %prev_dim_size.0, metadata !3494, metadata !DIExpression()), !dbg !3540
  %cmp137 = icmp sgt i64 %indvars.iv14, 0, !dbg !3724
  br i1 %cmp137, label %for.body139, label %for.end202, !dbg !3725

for.body139:                                      ; preds = %for.cond136
  %76 = load %union.tree_node**, %union.tree_node*** %dimension_size_orig, align 8, !dbg !3726
  %77 = load i32*, i32** %dim_map, align 8, !dbg !3726
  %arrayidx144 = getelementptr inbounds i32, i32* %77, i64 %indvars.iv.next15, !dbg !3726
  %78 = load i32, i32* %arrayidx144, align 4, !dbg !3726
  %idxprom145 = sext i32 %78 to i64, !dbg !3726
  %arrayidx146 = getelementptr inbounds %union.tree_node*, %union.tree_node** %76, i64 %idxprom145, !dbg !3726
  %79 = bitcast %union.tree_node** %arrayidx146 to %struct.tree_common**, !dbg !3726
  %80 = load %struct.tree_common*, %struct.tree_common** %79, align 8, !dbg !3726
  %type147 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %80, i64 0, i32 2, !dbg !3726
  %81 = load %union.tree_node*, %union.tree_node** %type147, align 8, !dbg !3726
  %call148 = call %union.tree_node* @add_new_static_var(%union.tree_node* %81) #6, !dbg !3727
  call void @llvm.dbg.value(metadata %union.tree_node* %call148, metadata !3527, metadata !DIExpression()), !dbg !3728
  %82 = load %union.tree_node**, %union.tree_node*** %dimension_size_orig, align 8, !dbg !3729
  %83 = load i32*, i32** %dim_map, align 8, !dbg !3729
  %arrayidx152 = getelementptr inbounds i32, i32* %83, i64 %indvars.iv.next15, !dbg !3729
  %84 = load i32, i32* %arrayidx152, align 4, !dbg !3729
  %idxprom153 = sext i32 %84 to i64, !dbg !3729
  %arrayidx154 = getelementptr inbounds %union.tree_node*, %union.tree_node** %82, i64 %idxprom153, !dbg !3729
  %85 = bitcast %union.tree_node** %arrayidx154 to %struct.tree_common**, !dbg !3729
  %86 = load %struct.tree_common*, %struct.tree_common** %85, align 8, !dbg !3729
  %type156 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %86, i64 0, i32 2, !dbg !3729
  %87 = load %union.tree_node*, %union.tree_node** %type156, align 8, !dbg !3729
  call void @llvm.dbg.value(metadata %union.tree_node* %87, metadata !3492, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata i32 0, metadata !3514, metadata !DIExpression()), !dbg !3540
  %88 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3730
  %89 = sext i32 %88 to i64, !dbg !3733
  br label %for.cond157, !dbg !3733

for.cond157:                                      ; preds = %for.inc169, %for.body139
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc169 ], [ 0, %for.body139 ], !dbg !3734
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !3514, metadata !DIExpression()), !dbg !3540
  %cmp159 = icmp slt i64 %indvars.iv12, %89, !dbg !3735
  br i1 %cmp159, label %for.body161, label %for.end171, !dbg !3736

for.body161:                                      ; preds = %for.cond157
  %arrayidx164 = getelementptr inbounds i32, i32* %83, i64 %indvars.iv12, !dbg !3737
  %90 = load i32, i32* %arrayidx164, align 4, !dbg !3737
  %91 = trunc i64 %indvars.iv.next15 to i32, !dbg !3739
  %cmp165 = icmp eq i32 %90, %91, !dbg !3739
  br i1 %cmp165, label %for.end171, label %for.inc169, !dbg !3740

for.inc169:                                       ; preds = %for.body161
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !3741
  call void @llvm.dbg.value(metadata i32 undef, metadata !3514, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3540
  br label %for.cond157, !dbg !3742, !llvm.loop !3743

for.end171:                                       ; preds = %for.body161, %for.cond157
  %indvars.iv12.lcssa = phi i64 [ %indvars.iv12, %for.body161 ], [ %indvars.iv12, %for.cond157 ], !dbg !3734
  call void @llvm.dbg.value(metadata i64 %indvars.iv12.lcssa, metadata !3514, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata i64 %indvars.iv12.lcssa, metadata !3514, metadata !DIExpression()), !dbg !3540
  %92 = load i64*, i64** %dimension_type_size, align 8, !dbg !3745
  %add = add nuw i64 %indvars.iv12.lcssa, 1, !dbg !3746
  %idxprom173 = and i64 %add, 4294967295, !dbg !3747
  %arrayidx174 = getelementptr inbounds i64, i64* %92, i64 %idxprom173, !dbg !3747
  %93 = load i64, i64* %arrayidx174, align 8, !dbg !3747
  %call175 = call %union.tree_node* @build_int_cst(%union.tree_node* %87, i64 %93) #6, !dbg !3748
  call void @llvm.dbg.value(metadata %union.tree_node* %call175, metadata !3529, metadata !DIExpression()), !dbg !3728
  %tobool176 = icmp eq %union.tree_node* %prev_dim_size.0, null, !dbg !3749
  br i1 %tobool176, label %if.then177, label %if.end179, !dbg !3751

if.then177:                                       ; preds = %for.end171
  %call178 = call %union.tree_node* @build_int_cst(%union.tree_node* %87, i64 %74) #6, !dbg !3752
  call void @llvm.dbg.value(metadata %union.tree_node* %call178, metadata !3494, metadata !DIExpression()), !dbg !3540
  br label %if.end179, !dbg !3753

if.end179:                                        ; preds = %for.end171, %if.then177
  %prev_dim_size.1 = phi %union.tree_node* [ %prev_dim_size.0, %for.end171 ], [ %call178, %if.then177 ], !dbg !3540
  call void @llvm.dbg.value(metadata %union.tree_node* %prev_dim_size.1, metadata !3494, metadata !DIExpression()), !dbg !3540
  %94 = load i8, i8* @check_transpose_p, align 1, !dbg !3754
  %tobool180 = icmp eq i8 %94, 0, !dbg !3754
  br i1 %tobool180, label %land.lhs.true, label %if.else189, !dbg !3756

land.lhs.true:                                    ; preds = %if.end179
  %95 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3757
  %96 = trunc i64 %indvars.iv14 to i32, !dbg !3758
  %cmp183 = icmp eq i32 %95, %96, !dbg !3758
  br i1 %cmp183, label %if.then185, label %if.else189, !dbg !3759

if.then185:                                       ; preds = %land.lhs.true
  %97 = load %union.tree_node**, %union.tree_node*** %dimension_size_orig, align 8, !dbg !3760
  %idxprom187 = and i64 %indvars.iv12.lcssa, 4294967295, !dbg !3762
  %arrayidx188 = getelementptr inbounds %union.tree_node*, %union.tree_node** %97, i64 %idxprom187, !dbg !3762
  %98 = load %union.tree_node*, %union.tree_node** %arrayidx188, align 8, !dbg !3762
  call void @llvm.dbg.value(metadata %union.tree_node* %98, metadata !3523, metadata !DIExpression()), !dbg !3728
  br label %if.end195, !dbg !3763

if.else189:                                       ; preds = %if.end179, %land.lhs.true
  %99 = load %union.tree_node**, %union.tree_node*** %dimension_size_orig, align 8, !dbg !3764
  %idxprom191 = and i64 %indvars.iv12.lcssa, 4294967295, !dbg !3764
  %arrayidx192 = getelementptr inbounds %union.tree_node*, %union.tree_node** %99, i64 %idxprom191, !dbg !3764
  %100 = load %union.tree_node*, %union.tree_node** %arrayidx192, align 8, !dbg !3764
  %call193 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 67, %union.tree_node* %87, %union.tree_node* %100, %union.tree_node* %call175) #6, !dbg !3764
  call void @llvm.dbg.value(metadata %union.tree_node* %call193, metadata !3523, metadata !DIExpression()), !dbg !3728
  %call194 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %87, %union.tree_node* %call193, %union.tree_node* %prev_dim_size.1) #6, !dbg !3766
  call void @llvm.dbg.value(metadata %union.tree_node* %call194, metadata !3523, metadata !DIExpression()), !dbg !3728
  br label %if.end195

if.end195:                                        ; preds = %if.else189, %if.then185
  %dim_size.0 = phi %union.tree_node* [ %call194, %if.else189 ], [ %98, %if.then185 ], !dbg !3767
  call void @llvm.dbg.value(metadata %union.tree_node* %dim_size.0, metadata !3523, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3499, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call196 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %gsi, %union.tree_node* %dim_size.0, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !3768
  call void @llvm.dbg.value(metadata %union.tree_node* %call196, metadata !3523, metadata !DIExpression()), !dbg !3728
  %call197 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call148, %union.tree_node* %call196) #6, !dbg !3769
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call197, metadata !3528, metadata !DIExpression()), !dbg !3728
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call197) #6, !dbg !3770
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3499, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call197, i32 1) #6, !dbg !3771
  %101 = load %union.tree_node**, %union.tree_node*** %dimension_size, align 8, !dbg !3772
  %arrayidx200 = getelementptr inbounds %union.tree_node*, %union.tree_node** %101, i64 %indvars.iv.next15, !dbg !3773
  store %union.tree_node* %call148, %union.tree_node** %arrayidx200, align 8, !dbg !3774
  call void @llvm.dbg.value(metadata %union.tree_node* %call148, metadata !3494, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata i32 undef, metadata !3490, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3540
  br label %for.cond136, !dbg !3775, !llvm.loop !3776

for.end202:                                       ; preds = %for.cond136
  call void @update_ssa(i32 2048) #6, !dbg !3778
  %102 = load %union.tree_node*, %union.tree_node** %allocation_function_decl, align 8, !dbg !3779
  %call204 = call %struct.cgraph_node* @cgraph_node(%union.tree_node* %102) #6, !dbg !3780
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call204, metadata !3497, metadata !DIExpression()), !dbg !3540
  %call205 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %48, i32 0) #7, !dbg !3781
  call void @llvm.dbg.value(metadata %union.tree_node* %call205, metadata !3511, metadata !DIExpression()), !dbg !3540
  %103 = load %union.tree_node**, %union.tree_node*** %dimension_size, align 8, !dbg !3782
  %104 = load %union.tree_node*, %union.tree_node** %103, align 8, !dbg !3783
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3499, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call208 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %gsi, %union.tree_node* %104, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !3784
  call void @llvm.dbg.value(metadata %union.tree_node* %call208, metadata !3512, metadata !DIExpression()), !dbg !3540
  %105 = getelementptr inbounds %union.tree_node, %union.tree_node* %call205, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3785
  %bf.load = load i64, i64* %105, align 8, !dbg !3785
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3787
  %cmp209 = icmp eq i64 %bf.cast2, 141, !dbg !3787
  br i1 %cmp209, label %if.then211, label %if.end233, !dbg !3788

if.then211:                                       ; preds = %for.end202
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call212 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call205) #7, !dbg !3789
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call212, metadata !3496, metadata !DIExpression()), !dbg !3540
  br label %for.cond213, !dbg !3789

for.cond213:                                      ; preds = %for.inc230, %if.then211
  %use_stmt.0 = phi %union.gimple_statement_d* [ %call212, %if.then211 ], [ %call231, %for.inc230 ], !dbg !3792
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt.0, metadata !3496, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call214 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3793
  %tobool215 = icmp eq i8 %call214, 0, !dbg !3793
  br i1 %tobool215, label %for.body216, label %if.end233.loopexit, !dbg !3789

for.body216:                                      ; preds = %for.cond213
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call217 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3795
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call217, metadata !3510, metadata !DIExpression()), !dbg !3540
  %cmp223 = icmp eq %union.gimple_statement_d* %use_stmt.0, %48, !dbg !3797
  br i1 %cmp223, label %for.body216.split.us, label %for.body216.for.body216.split_crit_edge, !dbg !3795

for.body216.for.body216.split_crit_edge:          ; preds = %for.body216
  br label %for.cond218, !dbg !3795

for.body216.split.us:                             ; preds = %for.body216
  br label %for.cond218.us, !dbg !3795

for.cond218.us:                                   ; preds = %for.body222.us, %for.body216.split.us
  %use_p.0.us = phi %struct.ssa_use_operand_d* [ %call217, %for.body216.split.us ], [ %call228.us, %for.body222.us ], !dbg !3800
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0.us, metadata !3510, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call219.us = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3801
  %tobool220.us = icmp eq i8 %call219.us, 0, !dbg !3801
  br i1 %tobool220.us, label %for.body222.us, label %for.inc230.us-lcssa.us, !dbg !3795

for.body222.us:                                   ; preds = %for.cond218.us
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0.us, %union.tree_node* %call208) #7, !dbg !3802
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call228.us = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3801
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call228.us, metadata !3510, metadata !DIExpression()), !dbg !3540
  br label %for.cond218.us, !dbg !3801, !llvm.loop !3803

for.inc230.us-lcssa.us:                           ; preds = %for.cond218.us
  br label %for.inc230, !dbg !3793

for.cond218:                                      ; preds = %for.body222, %for.body216.for.body216.split_crit_edge
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* undef, metadata !3510, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call219 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3801
  %tobool220 = icmp eq i8 %call219, 0, !dbg !3801
  br i1 %tobool220, label %for.body222, label %for.inc230.us-lcssa, !dbg !3795

for.body222:                                      ; preds = %for.cond218
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call228 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3801
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call228, metadata !3510, metadata !DIExpression()), !dbg !3540
  br label %for.cond218, !dbg !3801, !llvm.loop !3803

for.inc230.us-lcssa:                              ; preds = %for.cond218
  br label %for.inc230, !dbg !3793

for.inc230:                                       ; preds = %for.inc230.us-lcssa.us, %for.inc230.us-lcssa
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call231 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3793
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call231, metadata !3496, metadata !DIExpression()), !dbg !3540
  br label %for.cond213, !dbg !3793, !llvm.loop !3805

if.end233.loopexit:                               ; preds = %for.cond213
  br label %if.end233, !dbg !3807

if.end233:                                        ; preds = %if.end233.loopexit, %for.end202
  call void @llvm.dbg.value(metadata i32 1, metadata !3490, metadata !DIExpression()), !dbg !3540
  %106 = bitcast %struct.gimple_stmt_iterator* %gsi239 to i8*, !dbg !3808
  %107 = bitcast %struct.gimple_stmt_iterator* %tmp255 to i8*, !dbg !3808
  %108 = bitcast %struct.gimple_stmt_iterator* %tmp263 to i8*, !dbg !3809
  %109 = bitcast %struct.gimple_stmt_iterator* %tmp274 to i8*, !dbg !3813
  br label %for.cond234, !dbg !3807

for.cond234:                                      ; preds = %for.end277, %if.end233
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %for.end277 ], [ 1, %if.end233 ], !dbg !3817
  call void @llvm.dbg.value(metadata i64 %indvars.iv10, metadata !3490, metadata !DIExpression()), !dbg !3540
  %110 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3818
  %111 = sext i32 %110 to i64, !dbg !3819
  %cmp236 = icmp slt i64 %indvars.iv10, %111, !dbg !3819
  br i1 %cmp236, label %for.body238, label %for.end280, !dbg !3820

for.body238:                                      ; preds = %for.cond234
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #8, !dbg !3821
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !3534, metadata !DIExpression()), !dbg !3808
  %112 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level, align 8, !dbg !3822
  %arrayidx242 = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %112, i64 %indvars.iv10, !dbg !3823
  %113 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx242, align 8, !dbg !3823
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %113, metadata !3535, metadata !DIExpression()), !dbg !3808
  %call243 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %113) #7, !dbg !3824
  %tobool244 = icmp eq i8 %call243, 0, !dbg !3824
  br i1 %tobool244, label %cond.true245, label %cond.end247, !dbg !3824

cond.true245:                                     ; preds = %for.body238
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 2212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3824
  br label %cond.end247, !dbg !3824

cond.end247:                                      ; preds = %for.body238, %cond.true245
  %call249 = call %struct.cgraph_edge* @cgraph_edge(%struct.cgraph_node* %call204, %union.gimple_statement_d* %113) #6, !dbg !3825
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %call249, metadata !3498, metadata !DIExpression()), !dbg !3540
  %tobool250 = icmp eq %struct.cgraph_edge* %call249, null, !dbg !3826
  br i1 %tobool250, label %cond.true251, label %cond.end253, !dbg !3826

cond.true251:                                     ; preds = %cond.end247
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 2214, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3826
  br label %cond.end253, !dbg !3826

cond.end253:                                      ; preds = %cond.end247, %cond.true251
  call void @cgraph_remove_edge(%struct.cgraph_edge* %call249) #6, !dbg !3827
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #8, !dbg !3828
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp255, %union.gimple_statement_d* %113) #6, !dbg !3828
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* nonnull align 8 %107, i64 24, i1 false), !dbg !3828
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #8, !dbg !3828
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi239, metadata !3530, metadata !DIExpression(DW_OP_deref)), !dbg !3808
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi239, i8 zeroext 1) #6, !dbg !3829
  %call256 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %113) #7, !dbg !3830
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call257 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call256) #7, !dbg !3830
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call257, metadata !3496, metadata !DIExpression()), !dbg !3540
  br label %for.cond258, !dbg !3830

for.cond258:                                      ; preds = %for.body262, %cond.end253
  %use_stmt.1 = phi %union.gimple_statement_d* [ %call257, %cond.end253 ], [ %call265, %for.body262 ], !dbg !3831
  %use_stmt1.0 = phi %union.gimple_statement_d* [ null, %cond.end253 ], [ %use_stmt.1, %for.body262 ], !dbg !3808
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt1.0, metadata !3534, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt.1, metadata !3496, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call259 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3832
  %tobool260 = icmp eq i8 %call259, 0, !dbg !3832
  br i1 %tobool260, label %for.body262, label %for.end266, !dbg !3830

for.body262:                                      ; preds = %for.cond258
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt.1, metadata !3534, metadata !DIExpression()), !dbg !3808
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #8, !dbg !3833
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp263, %union.gimple_statement_d* %use_stmt.1) #6, !dbg !3833
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* nonnull align 8 %108, i64 24, i1 false), !dbg !3833
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #8, !dbg !3833
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi239, metadata !3530, metadata !DIExpression(DW_OP_deref)), !dbg !3808
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi239, i8 zeroext 1) #6, !dbg !3834
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call265 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3832
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call265, metadata !3496, metadata !DIExpression()), !dbg !3540
  br label %for.cond258, !dbg !3832, !llvm.loop !3835

for.end266:                                       ; preds = %for.cond258
  %use_stmt1.0.lcssa = phi %union.gimple_statement_d* [ %use_stmt1.0, %for.cond258 ], !dbg !3808
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt1.0.lcssa, metadata !3534, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt1.0.lcssa, metadata !3534, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt1.0.lcssa, metadata !3534, metadata !DIExpression()), !dbg !3808
  %call267 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %use_stmt1.0.lcssa) #6, !dbg !3837
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call268 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call267) #7, !dbg !3837
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call268, metadata !3496, metadata !DIExpression()), !dbg !3540
  br label %for.cond269, !dbg !3837

for.cond269:                                      ; preds = %for.body273, %for.end266
  %use_stmt.2 = phi %union.gimple_statement_d* [ %call268, %for.end266 ], [ %call276, %for.body273 ], !dbg !3838
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt.2, metadata !3496, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call270 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3839
  %tobool271 = icmp eq i8 %call270, 0, !dbg !3839
  br i1 %tobool271, label %for.body273, label %for.end277, !dbg !3837

for.body273:                                      ; preds = %for.cond269
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #8, !dbg !3840
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp274, %union.gimple_statement_d* %use_stmt.2) #6, !dbg !3840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* nonnull align 8 %109, i64 24, i1 false), !dbg !3840
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #8, !dbg !3840
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi239, metadata !3530, metadata !DIExpression(DW_OP_deref)), !dbg !3808
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi239, i8 zeroext 1) #6, !dbg !3841
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3502, metadata !DIExpression(DW_OP_deref)), !dbg !3540
  %call276 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !3839
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call276, metadata !3496, metadata !DIExpression()), !dbg !3540
  br label %for.cond269, !dbg !3839, !llvm.loop !3842

for.end277:                                       ; preds = %for.cond269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #8, !dbg !3844
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !3845
  call void @llvm.dbg.value(metadata i32 undef, metadata !3490, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3540
  br label %for.cond234, !dbg !3846, !llvm.loop !3847

for.end280:                                       ; preds = %for.cond234
  call void @update_ssa(i32 2048) #6, !dbg !3849
  call void @llvm.dbg.value(metadata i32 1, metadata !3490, metadata !DIExpression()), !dbg !3540
  %114 = bitcast %struct.gimple_stmt_iterator* %gsi286 to i8*, !dbg !3850
  %free_stmts = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %4, i64 0, i32 8, !dbg !3851
  %115 = bitcast %struct.gimple_stmt_iterator* %tmp327 to i8*, !dbg !3850
  br label %for.cond281, !dbg !3853

for.cond281:                                      ; preds = %cleanup332, %for.end280
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup332 ], [ 1, %for.end280 ], !dbg !3854
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3490, metadata !DIExpression()), !dbg !3540
  %116 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !3855
  %117 = sext i32 %116 to i64, !dbg !3856
  %cmp283 = icmp slt i64 %indvars.iv, %117, !dbg !3856
  br i1 %cmp283, label %for.body285, label %for.end337, !dbg !3857

for.body285:                                      ; preds = %for.cond281
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #8, !dbg !3858
  %118 = load %struct.free_info*, %struct.free_info** %free_stmts, align 8, !dbg !3859
  %stmt289 = getelementptr inbounds %struct.free_info, %struct.free_info* %118, i64 %indvars.iv, i32 0, !dbg !3860
  %119 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt289, align 8, !dbg !3860
  %tobool290 = icmp eq %union.gimple_statement_d* %119, null, !dbg !3861
  br i1 %tobool290, label %cleanup332, label %if.end292, !dbg !3862

if.end292:                                        ; preds = %for.body285
  %func = getelementptr inbounds %struct.free_info, %struct.free_info* %118, i64 %indvars.iv, i32 1, !dbg !3863
  %120 = load %union.tree_node*, %union.tree_node** %func, align 8, !dbg !3863
  %call296 = call %struct.cgraph_node* @cgraph_node(%union.tree_node* %120) #6, !dbg !3864
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call296, metadata !3497, metadata !DIExpression()), !dbg !3540
  %121 = load %struct.free_info*, %struct.free_info** %free_stmts, align 8, !dbg !3865
  %stmt300 = getelementptr inbounds %struct.free_info, %struct.free_info* %121, i64 %indvars.iv, i32 0, !dbg !3865
  %122 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt300, align 8, !dbg !3865
  %call301 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %122) #7, !dbg !3865
  %tobool302 = icmp eq i8 %call301, 0, !dbg !3865
  br i1 %tobool302, label %cond.true303, label %cond.end305, !dbg !3865

cond.true303:                                     ; preds = %if.end292
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 2249, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3865
  br label %cond.end305, !dbg !3865

cond.end305:                                      ; preds = %if.end292, %cond.true303
  %123 = load %struct.free_info*, %struct.free_info** %free_stmts, align 8, !dbg !3866
  %stmt310 = getelementptr inbounds %struct.free_info, %struct.free_info* %123, i64 %indvars.iv, i32 0, !dbg !3867
  %124 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt310, align 8, !dbg !3867
  %call311 = call %struct.cgraph_edge* @cgraph_edge(%struct.cgraph_node* %call296, %union.gimple_statement_d* %124) #6, !dbg !3868
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %call311, metadata !3498, metadata !DIExpression()), !dbg !3540
  %tobool312 = icmp eq %struct.cgraph_edge* %call311, null, !dbg !3869
  br i1 %tobool312, label %cond.true313, label %cond.end315, !dbg !3869

cond.true313:                                     ; preds = %cond.end305
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 2251, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3869
  br label %cond.end315, !dbg !3869

cond.end315:                                      ; preds = %cond.end305, %cond.true313
  call void @cgraph_remove_edge(%struct.cgraph_edge* %call311) #6, !dbg !3870
  %125 = load %struct.free_info*, %struct.free_info** %free_stmts, align 8, !dbg !3871
  %func320 = getelementptr inbounds %struct.free_info, %struct.free_info* %125, i64 %indvars.iv, i32 1, !dbg !3872
  %126 = bitcast %union.tree_node** %func320 to i64*, !dbg !3872
  %127 = load i64, i64* %126, align 8, !dbg !3872
  store i64 %127, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3873
  %128 = bitcast %union.tree_node** %func320 to %struct.tree_function_decl**, !dbg !3874
  %129 = load %struct.tree_function_decl*, %struct.tree_function_decl** %128, align 8, !dbg !3874
  %f326 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %129, i64 0, i32 1, !dbg !3874
  %130 = load %struct.function*, %struct.function** %f326, align 8, !dbg !3874
  call void @set_cfun(%struct.function* %130) #6, !dbg !3875
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #8, !dbg !3876
  %131 = load %struct.free_info*, %struct.free_info** %free_stmts, align 8, !dbg !3877
  %stmt331 = getelementptr inbounds %struct.free_info, %struct.free_info* %131, i64 %indvars.iv, i32 0, !dbg !3878
  %132 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt331, align 8, !dbg !3878
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp327, %union.gimple_statement_d* %132) #6, !dbg !3876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* nonnull align 8 %115, i64 24, i1 false), !dbg !3876
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #8, !dbg !3876
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi286, metadata !3536, metadata !DIExpression(DW_OP_deref)), !dbg !3850
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi286, i8 zeroext 1) #6, !dbg !3879
  br label %cleanup332, !dbg !3880

cleanup332:                                       ; preds = %for.body285, %cond.end315
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #8, !dbg !3880
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3881
  call void @llvm.dbg.value(metadata i32 undef, metadata !3490, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3540
  br label %for.cond281, !dbg !3882, !llvm.loop !3883

for.end337:                                       ; preds = %for.cond281
  store i64 %69, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3885
  call void @pop_cfun() #6, !dbg !3886
  br label %cleanup338, !dbg !3887

cleanup338:                                       ; preds = %for.end123, %if.end, %for.end337
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2) #8, !dbg !3888
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3888
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3888
  ret i32 1, !dbg !3888
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_all_accesses_in_func() unnamed_addr #5 !dbg !3889 {
entry:
  %tmpmi = alloca %struct.matrix_info, align 8
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3901
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !3901
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3901
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 2, !dbg !3901
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3901
  %tobool = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !3901
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3901

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %2, i64 0, i32 0, !dbg !3901
  br label %cond.end, !dbg !3901

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3901
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !3901
  %call4 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %call) #6, !dbg !3902
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call4, metadata !3892, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 0, metadata !3891, metadata !DIExpression()), !dbg !3903
  %3 = bitcast %struct.matrix_info* %tmpmi to i8*, !dbg !3904
  %decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %tmpmi, i64 0, i32 0, !dbg !3904
  br label %for.cond, !dbg !3905

for.cond:                                         ; preds = %cleanup, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %cleanup ], !dbg !3906
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3891, metadata !DIExpression()), !dbg !3903
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3907
  %gimple_df6 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 3, !dbg !3907
  %5 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df6, align 8, !dbg !3907
  %ssa_names7 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %5, i64 0, i32 2, !dbg !3907
  %6 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names7, align 8, !dbg !3907
  %tobool8 = icmp eq %struct.VEC_tree_gc* %6, null, !dbg !3907
  br i1 %tobool8, label %cond.end15, label %cond.true9, !dbg !3907

cond.true9:                                       ; preds = %for.cond
  %base13 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %6, i64 0, i32 0, !dbg !3907
  br label %cond.end15, !dbg !3907

cond.end15:                                       ; preds = %for.cond, %cond.true9
  %cond16 = phi %struct.VEC_tree_base* [ %base13, %cond.true9 ], [ null, %for.cond ], !dbg !3907
  %call17 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond16) #7, !dbg !3907
  %cmp = icmp ult i32 %i.0, %call17, !dbg !3908
  br i1 %cmp, label %for.body, label %for.end, !dbg !3909

for.body:                                         ; preds = %cond.end15
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %3) #8, !dbg !3910
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3911
  %gimple_df19 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 3, !dbg !3911
  %8 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df19, align 8, !dbg !3911
  %ssa_names20 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %8, i64 0, i32 2, !dbg !3911
  %9 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names20, align 8, !dbg !3911
  %tobool21 = icmp eq %struct.VEC_tree_gc* %9, null, !dbg !3911
  br i1 %tobool21, label %cond.end28, label %cond.true22, !dbg !3911

cond.true22:                                      ; preds = %for.body
  %base26 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %9, i64 0, i32 0, !dbg !3911
  br label %cond.end28, !dbg !3911

cond.end28:                                       ; preds = %for.body, %cond.true22
  %cond29 = phi %struct.VEC_tree_base* [ %base26, %cond.true22 ], [ null, %for.body ], !dbg !3911
  %call30 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond29, i32 %i.0) #7, !dbg !3911
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !3898, metadata !DIExpression()), !dbg !3904
  %tobool31 = icmp eq %union.tree_node* %call30, null, !dbg !3912
  br i1 %tobool31, label %cleanup, label %lor.lhs.false, !dbg !3914

lor.lhs.false:                                    ; preds = %cond.end28
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3915
  %10 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !3915
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %10, align 8, !dbg !3915
  %call32 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %11) #7, !dbg !3916
  %tobool33 = icmp eq i8 %call32, 0, !dbg !3916
  br i1 %tobool33, label %cleanup, label %lor.lhs.false34, !dbg !3917

lor.lhs.false34:                                  ; preds = %lor.lhs.false
  %12 = load %union.gimple_statement_d*, %union.gimple_statement_d** %10, align 8, !dbg !3918
  %call37 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %12) #6, !dbg !3919
  %tobool38 = icmp eq i8 %call37, 0, !dbg !3919
  br i1 %tobool38, label %cleanup, label %if.end, !dbg !3920

if.end:                                           ; preds = %lor.lhs.false34
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %10, align 8, !dbg !3921
  %call41 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %13) #7, !dbg !3922
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !3899, metadata !DIExpression()), !dbg !3904
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %10, align 8, !dbg !3923
  %call44 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %14) #7, !dbg !3924
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !3900, metadata !DIExpression()), !dbg !3904
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3925
  %bf.load = load i64, i64* %15, align 8, !dbg !3925
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3927
  %cmp46 = icmp eq i64 %bf.cast1, 32, !dbg !3927
  br i1 %cmp46, label %if.end53, label %land.lhs.true, !dbg !3928

land.lhs.true:                                    ; preds = %if.end
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3929
  %bf.load48 = load i64, i64* %16, align 8, !dbg !3929
  %bf.cast502 = and i64 %bf.load48, 65535, !dbg !3930
  %cmp51 = icmp eq i64 %bf.cast502, 32, !dbg !3930
  br i1 %cmp51, label %if.end53, label %cleanup, !dbg !3931

if.end53:                                         ; preds = %land.lhs.true, %if.end
  store %union.tree_node* %call41, %union.tree_node** %decl, align 8, !dbg !3932
  %17 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !3933
  %call54 = call i8* @htab_find(%struct.htab* %17, i8* nonnull %3) #6, !dbg !3935
  call void @llvm.dbg.value(metadata i8* %call54, metadata !3897, metadata !DIExpression()), !dbg !3904
  %tobool55 = icmp eq i8* %call54, null, !dbg !3936
  br i1 %tobool55, label %cleanup, label %if.then56, !dbg !3937

if.then56:                                        ; preds = %if.end53
  %18 = bitcast i8* %call54 to %struct.matrix_info*, !dbg !3938
  call void @llvm.dbg.value(metadata %struct.matrix_info* %18, metadata !3897, metadata !DIExpression()), !dbg !3904
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call4) #6, !dbg !3939
  call fastcc void @analyze_matrix_accesses(%struct.matrix_info* nonnull %18, %union.tree_node* nonnull %call30, i32 0, i8 zeroext 0, %struct.simple_bitmap_def* %call4, i8 zeroext 1) #7, !dbg !3941
  br label %cleanup, !dbg !3942

cleanup:                                          ; preds = %land.lhs.true, %if.end53, %lor.lhs.false34, %lor.lhs.false, %cond.end28, %if.then56
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %3) #8, !dbg !3943
  %inc = add i32 %i.0, 1, !dbg !3944
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3891, metadata !DIExpression()), !dbg !3903
  br label %for.cond, !dbg !3945, !llvm.loop !3946

for.end:                                          ; preds = %cond.end15
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call4, i64 0, i32 0, !dbg !3948
  %19 = load i8*, i8** %popcount, align 8, !dbg !3948
  call void @free(i8* %19) #6, !dbg !3948
  %20 = bitcast %struct.simple_bitmap_def* %call4 to i8*, !dbg !3948
  call void @free(i8* %20) #6, !dbg !3948
  ret void, !dbg !3949
}

; Function Attrs: nounwind uwtable
define internal i32 @transform_access_sites(i8** %slot, i8* %data) #5 !dbg !3950 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %acc_info = alloca %struct.access_site_info*, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  %tmp67 = alloca %struct.gimple_stmt_iterator, align 8
  %imm_iter108 = alloca %struct.immediate_use_iterator_d, align 8
  %tmp133 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp151 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !3952, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %data, metadata !3953, metadata !DIExpression()), !dbg !4019
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4020
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4020
  %1 = bitcast i8** %slot to %struct.matrix_info**, !dbg !4021
  %2 = load %struct.matrix_info*, %struct.matrix_info** %1, align 8, !dbg !4021
  call void @llvm.dbg.value(metadata %struct.matrix_info* %2, metadata !3955, metadata !DIExpression()), !dbg !4019
  %min_indirect_level_escape = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %2, i64 0, i32 2, !dbg !4022
  %3 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !4022
  call void @llvm.dbg.value(metadata i32 %3, metadata !3956, metadata !DIExpression()), !dbg !4019
  %4 = bitcast %struct.access_site_info** %acc_info to i8*, !dbg !4023
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4023
  %cmp = icmp slt i32 %3, 2, !dbg !4024
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !4026

lor.lhs.false:                                    ; preds = %entry
  %access_l = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %2, i64 0, i32 14, !dbg !4027
  %5 = load %struct.VEC_access_site_info_p_heap*, %struct.VEC_access_site_info_p_heap** %access_l, align 8, !dbg !4027
  %tobool = icmp eq %struct.VEC_access_site_info_p_heap* %5, null, !dbg !4028
  br i1 %tobool, label %cleanup, label %for.cond.preheader, !dbg !4029

for.cond.preheader:                               ; preds = %lor.lhs.false
  %6 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !4030
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4030
  %sub = add nsw i32 %3, -1, !dbg !4031
  %8 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !4032
  %9 = bitcast %struct.gimple_stmt_iterator* %tmp67 to i8*, !dbg !4033
  %10 = bitcast %struct.access_site_info** %acc_info to i8**, !dbg !4034
  %11 = bitcast %struct.immediate_use_iterator_d* %imm_iter108 to i8*, !dbg !4035
  %dim_map = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %2, i64 0, i32 15, !dbg !4036
  %dimension_size140 = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %2, i64 0, i32 9, !dbg !4037
  %12 = bitcast %struct.gimple_stmt_iterator* %tmp151 to i8*, !dbg !4037
  %is_transposed_p = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %2, i64 0, i32 6, !dbg !4039
  %dimension_type_size = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %2, i64 0, i32 11, !dbg !4040
  %idxprom124 = sext i32 %3 to i64, !dbg !4040
  %13 = bitcast %struct.gimple_stmt_iterator* %tmp133 to i8*, !dbg !4041
  br label %for.cond, !dbg !4044

for.cond:                                         ; preds = %for.cond.preheader, %for.inc206
  %14 = phi %struct.VEC_access_site_info_p_heap* [ %.pre, %for.inc206 ], [ %5, %for.cond.preheader ], !dbg !4045
  %i.0 = phi i32 [ %inc, %for.inc206 ], [ 0, %for.cond.preheader ], !dbg !4046
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3959, metadata !DIExpression()), !dbg !4019
  %tobool2 = icmp eq %struct.VEC_access_site_info_p_heap* %14, null, !dbg !4045
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !4045

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_access_site_info_p_heap, %struct.VEC_access_site_info_p_heap* %14, i64 0, i32 0, !dbg !4045
  br label %cond.end, !dbg !4045

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_access_site_info_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !4045
  call void @llvm.dbg.value(metadata %struct.access_site_info** %acc_info, metadata !3957, metadata !DIExpression(DW_OP_deref)), !dbg !4019
  %call = call fastcc i32 @VEC_access_site_info_p_base_iterate(%struct.VEC_access_site_info_p_base* %cond, i32 %i.0, %struct.access_site_info** nonnull %acc_info) #7, !dbg !4045
  %tobool4 = icmp eq i32 %call, 0, !dbg !4044
  br i1 %tobool4, label %for.end207, label %for.body, !dbg !4044

for.body:                                         ; preds = %cond.end
  %15 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4047
  call void @llvm.dbg.value(metadata %struct.access_site_info* %15, metadata !3957, metadata !DIExpression()), !dbg !4019
  %level = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %15, i64 0, i32 3, !dbg !4049
  %16 = load i32, i32* %level, align 8, !dbg !4049
  %cmp5 = icmp slt i32 %16, %3, !dbg !4050
  call void @llvm.dbg.value(metadata %struct.access_site_info* %15, metadata !3957, metadata !DIExpression()), !dbg !4019
  br i1 %cmp5, label %if.end7, label %if.then6, !dbg !4051

if.then6:                                         ; preds = %for.body
  %17 = bitcast %struct.access_site_info* %15 to i8*, !dbg !4052
  call void @free(i8* %17) #6, !dbg !4054
  br label %for.inc206, !dbg !4055

if.end7:                                          ; preds = %for.body
  %is_alloc = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %15, i64 0, i32 4, !dbg !4056
  %18 = load i8, i8* %is_alloc, align 4, !dbg !4056
  %tobool8 = icmp eq i8 %18, 0, !dbg !4057
  call void @llvm.dbg.value(metadata %struct.access_site_info* %15, metadata !3957, metadata !DIExpression()), !dbg !4019
  br i1 %tobool8, label %if.end82, label %if.then9, !dbg !4058

if.then9:                                         ; preds = %if.end7
  %cmp11 = icmp sgt i32 %16, -1, !dbg !4059
  br i1 %cmp11, label %land.lhs.true, label %if.end81, !dbg !4060

land.lhs.true:                                    ; preds = %if.then9
  call void @llvm.dbg.value(metadata %struct.access_site_info* %15, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %15, i64 0, i32 0, !dbg !4061
  %19 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4061
  %call12 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %19) #7, !dbg !4062
  %tobool13 = icmp eq %struct.basic_block_def* %call12, null, !dbg !4062
  br i1 %tobool13, label %if.end81, label %if.then14, !dbg !4063

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #8, !dbg !4064
  %20 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4065
  call void @llvm.dbg.value(metadata %struct.access_site_info* %20, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt16 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %20, i64 0, i32 0, !dbg !4066
  %21 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt16, align 8, !dbg !4066
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %21, metadata !3981, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3960, metadata !DIExpression(DW_OP_deref)), !dbg !4030
  %call17 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %21, i32 2) #7, !dbg !4067
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !3980, metadata !DIExpression()), !dbg !4030
  br label %for.cond18, !dbg !4067

for.cond18:                                       ; preds = %for.body21, %if.then14
  %def.0 = phi %union.tree_node* [ %call17, %if.then14 ], [ %call22, %for.body21 ], !dbg !4069
  call void @llvm.dbg.value(metadata %union.tree_node* %def.0, metadata !3980, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3960, metadata !DIExpression(DW_OP_deref)), !dbg !4030
  %call19 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4070
  %tobool20 = icmp eq i8 %call19, 0, !dbg !4070
  br i1 %tobool20, label %for.body21, label %for.end, !dbg !4067

for.body21:                                       ; preds = %for.cond18
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %def.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4072
  %22 = bitcast i32* %var to %union.tree_node**, !dbg !4072
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !4072
  call void @mark_sym_for_renaming(%union.tree_node* %23) #6, !dbg !4073
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !3960, metadata !DIExpression(DW_OP_deref)), !dbg !4030
  %call22 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4070
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !3980, metadata !DIExpression()), !dbg !4030
  br label %for.cond18, !dbg !4070, !llvm.loop !4074

for.end:                                          ; preds = %for.cond18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !4076
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* %21) #6, !dbg !4076
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !4076
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !4076
  %24 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4077
  call void @llvm.dbg.value(metadata %struct.access_site_info* %24, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt23 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %24, i64 0, i32 0, !dbg !4077
  %25 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt23, align 8, !dbg !4077
  %call24 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %25) #7, !dbg !4077
  %tobool25 = icmp eq i8 %call24, 0, !dbg !4077
  br i1 %tobool25, label %cond.true26, label %cond.end28, !dbg !4077

cond.true26:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1843, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4077
  br label %cond.end28, !dbg !4077

cond.end28:                                       ; preds = %for.end, %cond.true26
  %26 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4078
  call void @llvm.dbg.value(metadata %struct.access_site_info* %26, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt30 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %26, i64 0, i32 0, !dbg !4079
  %27 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt30, align 8, !dbg !4079
  %call31 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %27) #7, !dbg !4080
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !3982, metadata !DIExpression()), !dbg !4030
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4081
  %bf.load = load i64, i64* %28, align 8, !dbg !4081
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !4082
  %cmp33 = icmp eq i64 %bf.cast3, 141, !dbg !4082
  br i1 %cmp33, label %land.lhs.true34, label %if.end75, !dbg !4083

land.lhs.true34:                                  ; preds = %cond.end28
  %29 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4084
  call void @llvm.dbg.value(metadata %struct.access_site_info* %29, metadata !3957, metadata !DIExpression()), !dbg !4019
  %level35 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %29, i64 0, i32 3, !dbg !4085
  %30 = load i32, i32* %level35, align 8, !dbg !4085
  %cmp36 = icmp slt i32 %30, %sub, !dbg !4086
  br i1 %cmp36, label %if.then37, label %if.end75, !dbg !4087

if.then37:                                        ; preds = %land.lhs.true34
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #8, !dbg !4088
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3983, metadata !DIExpression(DW_OP_deref)), !dbg !4032
  %call38 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call31) #7, !dbg !4089
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call38, metadata !3987, metadata !DIExpression()), !dbg !4032
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4033
  br label %for.cond39, !dbg !4089

for.cond39:                                       ; preds = %for.inc72, %if.then37
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3983, metadata !DIExpression(DW_OP_deref)), !dbg !4032
  %call40 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4090
  %tobool41 = icmp eq i8 %call40, 0, !dbg !4090
  br i1 %tobool41, label %for.body43, label %for.end74, !dbg !4089

for.body43:                                       ; preds = %for.cond39
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3983, metadata !DIExpression(DW_OP_deref)), !dbg !4032
  %call44 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4091
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call44, metadata !3986, metadata !DIExpression()), !dbg !4032
  br label %for.cond45, !dbg !4091

for.cond45:                                       ; preds = %cond.end56, %for.body43
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call44, %for.body43 ], [ %call70, %cond.end56 ], !dbg !4092
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !3986, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3983, metadata !DIExpression(DW_OP_deref)), !dbg !4032
  %call46 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4093
  %tobool47 = icmp eq i8 %call46, 0, !dbg !4093
  br i1 %tobool47, label %for.body49, label %for.inc72, !dbg !4091

for.body49:                                       ; preds = %for.cond45
  %31 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4094
  call void @llvm.dbg.value(metadata %struct.access_site_info* %31, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt51 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %31, i64 0, i32 0, !dbg !4094
  %32 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt51, align 8, !dbg !4094
  %call52 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %32) #7, !dbg !4094
  %cmp53 = icmp eq i32 %call52, 47, !dbg !4094
  br i1 %cmp53, label %cond.end56, label %cond.true54, !dbg !4094

cond.true54:                                      ; preds = %for.body49
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1859, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4094
  br label %cond.end56, !dbg !4094

cond.end56:                                       ; preds = %for.body49, %cond.true54
  %33 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4095
  %call58 = call %union.tree_node* @create_tmp_var(%union.tree_node* %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4096
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !3994, metadata !DIExpression()), !dbg !4033
  %call59 = call zeroext i8 @add_referenced_var(%union.tree_node* %call58) #6, !dbg !4097
  %34 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4098
  call void @llvm.dbg.value(metadata %struct.access_site_info* %34, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt60 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %34, i64 0, i32 0, !dbg !4099
  %35 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt60, align 8, !dbg !4099
  %call61 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %35) #7, !dbg !4100
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !3988, metadata !DIExpression()), !dbg !4033
  %type63 = getelementptr inbounds %union.tree_node, %union.tree_node* %call58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4101
  %36 = load %union.tree_node*, %union.tree_node** %type63, align 8, !dbg !4101
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4101
  %37 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4101
  %call64 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %36, %union.tree_node* %37) #6, !dbg !4101
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !3988, metadata !DIExpression()), !dbg !4033
  %call65 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call58, %union.tree_node* %call64) #6, !dbg !4102
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call65, metadata !3995, metadata !DIExpression()), !dbg !4033
  %call66 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call58, %union.gimple_statement_d* %call65) #7, !dbg !4103
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !3994, metadata !DIExpression()), !dbg !4033
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call65, %union.tree_node* %call66) #7, !dbg !4104
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4105
  %38 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4106
  call void @llvm.dbg.value(metadata %struct.access_site_info* %38, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt68 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %38, i64 0, i32 0, !dbg !4107
  %39 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt68, align 8, !dbg !4107
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp67, %union.gimple_statement_d* %39) #6, !dbg !4105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !4105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4105
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3954, metadata !DIExpression(DW_OP_deref)), !dbg !4019
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call65, i32 1) #6, !dbg !4108
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %call66) #7, !dbg !4109
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3983, metadata !DIExpression(DW_OP_deref)), !dbg !4032
  %call70 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4093
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call70, metadata !3986, metadata !DIExpression()), !dbg !4032
  br label %for.cond45, !dbg !4093, !llvm.loop !4110

for.inc72:                                        ; preds = %for.cond45
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3983, metadata !DIExpression(DW_OP_deref)), !dbg !4032
  %call73 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4090
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call73, metadata !3987, metadata !DIExpression()), !dbg !4032
  br label %for.cond39, !dbg !4090, !llvm.loop !4112

for.end74:                                        ; preds = %for.cond39
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #8, !dbg !4114
  br label %if.end75, !dbg !4115

if.end75:                                         ; preds = %for.end74, %land.lhs.true34, %cond.end28
  %40 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4116
  call void @llvm.dbg.value(metadata %struct.access_site_info* %40, metadata !3957, metadata !DIExpression()), !dbg !4019
  %level76 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %40, i64 0, i32 3, !dbg !4118
  %41 = load i32, i32* %level76, align 8, !dbg !4118
  %cmp78 = icmp slt i32 %41, %sub, !dbg !4119
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !4120

if.then79:                                        ; preds = %if.end75
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3954, metadata !DIExpression(DW_OP_deref)), !dbg !4019
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !4121
  br label %if.end80, !dbg !4121

if.end80:                                         ; preds = %if.then79, %if.end75
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #8, !dbg !4122
  br label %if.end81, !dbg !4123

if.end81:                                         ; preds = %land.lhs.true, %if.end80, %if.then9
  %42 = load i8*, i8** %10, align 8, !dbg !4124
  call void @free(i8* %42) #6, !dbg !4125
  br label %for.inc206, !dbg !4126

if.end82:                                         ; preds = %if.end7
  %stmt83 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %15, i64 0, i32 0, !dbg !4127
  %43 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt83, align 8, !dbg !4127
  %call84 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %43) #7, !dbg !4128
  call void @llvm.dbg.value(metadata i32 %call84, metadata !3958, metadata !DIExpression()), !dbg !4019
  switch i32 %call84, label %if.end205 [
    i32 47, label %land.lhs.true86
    i32 66, label %if.end82.land.lhs.true104_crit_edge
  ], !dbg !4129

if.end82.land.lhs.true104_crit_edge:              ; preds = %if.end82
  %.pre5 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4130
  %level105.phi.trans.insert = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %.pre5, i64 0, i32 3, !dbg !4131
  %.pre6 = load i32, i32* %level105.phi.trans.insert, align 8, !dbg !4132
  br label %land.lhs.true104, !dbg !4129

land.lhs.true86:                                  ; preds = %if.end82
  %44 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4133
  call void @llvm.dbg.value(metadata %struct.access_site_info* %44, metadata !3957, metadata !DIExpression()), !dbg !4019
  %level87 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %44, i64 0, i32 3, !dbg !4134
  %45 = load i32, i32* %level87, align 8, !dbg !4134
  %cmp89 = icmp slt i32 %45, %sub, !dbg !4135
  br i1 %cmp89, label %if.then90, label %if.else, !dbg !4136

if.then90:                                        ; preds = %land.lhs.true86
  call void @llvm.dbg.value(metadata %struct.access_site_info* %44, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt91 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %44, i64 0, i32 0, !dbg !4137
  %46 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt91, align 8, !dbg !4137
  %call92 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %46) #7, !dbg !4137
  %type94 = getelementptr inbounds %union.tree_node, %union.tree_node* %call92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4137
  %47 = load %union.tree_node*, %union.tree_node** %type94, align 8, !dbg !4137
  %48 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4137
  call void @llvm.dbg.value(metadata %struct.access_site_info* %48, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt95 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %48, i64 0, i32 0, !dbg !4137
  %49 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt95, align 8, !dbg !4137
  %call96 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %49) #7, !dbg !4137
  %operands98 = getelementptr inbounds %union.tree_node, %union.tree_node* %call96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4137
  %50 = load %union.tree_node*, %union.tree_node** %operands98, align 8, !dbg !4137
  %call100 = call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %47, %union.tree_node* %50) #6, !dbg !4137
  call void @llvm.dbg.value(metadata %union.tree_node* %call100, metadata !3996, metadata !DIExpression()), !dbg !4138
  %51 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4139
  call void @llvm.dbg.value(metadata %struct.access_site_info* %51, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt101 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %51, i64 0, i32 0, !dbg !4140
  %52 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt101, align 8, !dbg !4140
  call fastcc void @gimple_assign_set_rhs_code(%union.gimple_statement_d* %52, i32 116) #7, !dbg !4141
  %53 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4142
  call void @llvm.dbg.value(metadata %struct.access_site_info* %53, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt102 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %53, i64 0, i32 0, !dbg !4143
  %54 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt102, align 8, !dbg !4143
  call fastcc void @gimple_assign_set_rhs1(%union.gimple_statement_d* %54, %union.tree_node* %call100) #7, !dbg !4144
  br label %if.end205, !dbg !4145

if.else:                                          ; preds = %land.lhs.true86
  br i1 false, label %if.else.land.lhs.true104_crit_edge, label %if.end205, !dbg !4146

if.else.land.lhs.true104_crit_edge:               ; preds = %if.else
  br label %land.lhs.true104, !dbg !4146

land.lhs.true104:                                 ; preds = %if.end82.land.lhs.true104_crit_edge, %if.else.land.lhs.true104_crit_edge
  %55 = phi i32 [ %.pre6, %if.end82.land.lhs.true104_crit_edge ], [ %45, %if.else.land.lhs.true104_crit_edge ], !dbg !4132
  %56 = phi %struct.access_site_info* [ %.pre5, %if.end82.land.lhs.true104_crit_edge ], [ %44, %if.else.land.lhs.true104_crit_edge ], !dbg !4130
  call void @llvm.dbg.value(metadata %struct.access_site_info* %56, metadata !3957, metadata !DIExpression()), !dbg !4019
  %cmp106 = icmp slt i32 %55, %3, !dbg !4147
  br i1 %cmp106, label %if.then107, label %if.end205, !dbg !4148

if.then107:                                       ; preds = %land.lhs.true104
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #8, !dbg !4149
  call void @llvm.dbg.value(metadata %struct.access_site_info* %56, metadata !3957, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %55, metadata !4004, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !4008, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata %struct.access_site_info* %56, metadata !3957, metadata !DIExpression()), !dbg !4019
  %offset112 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %56, i64 0, i32 1, !dbg !4150
  %57 = load %union.tree_node*, %union.tree_node** %offset112, align 8, !dbg !4150
  call void @llvm.dbg.value(metadata %union.tree_node* %57, metadata !4003, metadata !DIExpression()), !dbg !4035
  %58 = load i32*, i32** %dim_map, align 8, !dbg !4151
  %idxprom113 = sext i32 %55 to i64, !dbg !4152
  %arrayidx114 = getelementptr inbounds i32, i32* %58, i64 %idxprom113, !dbg !4152
  %59 = load i32, i32* %arrayidx114, align 4, !dbg !4152
  %cmp116 = icmp eq i32 %59, %sub, !dbg !4153
  br i1 %cmp116, label %if.then117, label %if.else139, !dbg !4154

if.then117:                                       ; preds = %if.then107
  %60 = load i8, i8* @check_transpose_p, align 1, !dbg !4155
  %tobool118 = icmp eq i8 %60, 0, !dbg !4155
  br i1 %tobool118, label %if.end154, label %lor.lhs.false119, !dbg !4156

lor.lhs.false119:                                 ; preds = %if.then117
  %61 = load i8, i8* %is_transposed_p, align 4, !dbg !4157
  %cmp120 = icmp eq i8 %61, 0, !dbg !4158
  br i1 %cmp120, label %if.end154, label %if.else123, !dbg !4159

if.else123:                                       ; preds = %lor.lhs.false119
  %62 = load i64*, i64** %dimension_type_size, align 8, !dbg !4160
  %arrayidx125 = getelementptr inbounds i64, i64* %62, i64 %idxprom124, !dbg !4161
  %63 = load i64, i64* %arrayidx125, align 8, !dbg !4161
  %add = add nsw i32 %55, 1, !dbg !4162
  %idxprom127 = sext i32 %add to i64, !dbg !4163
  %arrayidx128 = getelementptr inbounds i64, i64* %62, i64 %idxprom127, !dbg !4163
  %64 = load i64, i64* %arrayidx128, align 8, !dbg !4163
  %call129 = call fastcc %union.tree_node* @compute_offset(i64 %63, i64 %64, %union.tree_node* %57) #7, !dbg !4164
  call void @llvm.dbg.value(metadata %union.tree_node* %call129, metadata !4009, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %union.tree_node* %call129, metadata !4006, metadata !DIExpression()), !dbg !4035
  %cmp130 = icmp eq %union.tree_node* %call129, %57, !dbg !4165
  br i1 %cmp130, label %if.end154, label %if.then132, !dbg !4166

if.then132:                                       ; preds = %if.else123
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8, !dbg !4167
  %65 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4168
  call void @llvm.dbg.value(metadata %struct.access_site_info* %65, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt134 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %65, i64 0, i32 0, !dbg !4169
  %66 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt134, align 8, !dbg !4169
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp133, %union.gimple_statement_d* %66) #6, !dbg !4167
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %13, i64 24, i1 false), !dbg !4167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8, !dbg !4167
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3954, metadata !DIExpression(DW_OP_deref)), !dbg !4019
  %call135 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %gsi, %union.tree_node* %call129, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !4170
  call void @llvm.dbg.value(metadata %union.tree_node* %call135, metadata !4007, metadata !DIExpression()), !dbg !4035
  br label %if.end154, !dbg !4171

if.else139:                                       ; preds = %if.then107
  %67 = load %union.tree_node**, %union.tree_node*** %dimension_size140, align 8, !dbg !4172
  %add144 = add nsw i32 %59, 1, !dbg !4173
  %idxprom145 = sext i32 %add144 to i64, !dbg !4174
  %arrayidx146 = getelementptr inbounds %union.tree_node*, %union.tree_node** %67, i64 %idxprom145, !dbg !4174
  %68 = load %union.tree_node*, %union.tree_node** %arrayidx146, align 8, !dbg !4174
  call void @llvm.dbg.value(metadata %union.tree_node* %68, metadata !4008, metadata !DIExpression()), !dbg !4035
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4175
  call void @llvm.dbg.value(metadata %struct.access_site_info* %56, metadata !3957, metadata !DIExpression()), !dbg !4019
  %index = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %56, i64 0, i32 2, !dbg !4175
  %70 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !4175
  %call147 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %69, %union.tree_node* %70) #6, !dbg !4175
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4175
  %call148 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %71, %union.tree_node* %68) #6, !dbg !4175
  %call149 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %69, %union.tree_node* %call147, %union.tree_node* %call148) #6, !dbg !4175
  call void @llvm.dbg.value(metadata %union.tree_node* %call149, metadata !4005, metadata !DIExpression()), !dbg !4035
  %call150 = call zeroext i8 @add_referenced_var(%union.tree_node* %68) #6, !dbg !4176
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !4177
  %72 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4178
  call void @llvm.dbg.value(metadata %struct.access_site_info* %72, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt152 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %72, i64 0, i32 0, !dbg !4179
  %73 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt152, align 8, !dbg !4179
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp151, %union.gimple_statement_d* %73) #6, !dbg !4177
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %12, i64 24, i1 false), !dbg !4177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !4177
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3954, metadata !DIExpression(DW_OP_deref)), !dbg !4019
  %call153 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %gsi, %union.tree_node* %call149, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !4180
  call void @llvm.dbg.value(metadata %union.tree_node* %call153, metadata !4007, metadata !DIExpression()), !dbg !4035
  br label %if.end154

if.end154:                                        ; preds = %if.else123, %if.then117, %lor.lhs.false119, %if.then132, %if.else139
  %tmp1.2 = phi %union.tree_node* [ %call153, %if.else139 ], [ %57, %lor.lhs.false119 ], [ %57, %if.then117 ], [ %call135, %if.then132 ], [ %57, %if.else123 ], !dbg !4036
  call void @llvm.dbg.value(metadata %union.tree_node* %tmp1.2, metadata !4007, metadata !DIExpression()), !dbg !4035
  %cmp155 = icmp eq %union.tree_node* %tmp1.2, %57, !dbg !4181
  br i1 %cmp155, label %if.end203, label %if.then157, !dbg !4182

if.then157:                                       ; preds = %if.end154
  %74 = getelementptr inbounds %union.tree_node, %union.tree_node* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4183
  %bf.load159 = load i64, i64* %74, align 8, !dbg !4183
  %bf.cast1611 = and i64 %bf.load159, 65535, !dbg !4184
  %cmp162 = icmp eq i64 %bf.cast1611, 141, !dbg !4184
  br i1 %cmp162, label %if.then164, label %if.else189, !dbg !4185

if.then164:                                       ; preds = %if.then157
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter108, metadata !3999, metadata !DIExpression(DW_OP_deref)), !dbg !4035
  %call166 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter108, %union.tree_node* %57) #7, !dbg !4186
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call166, metadata !4014, metadata !DIExpression()), !dbg !4188
  br label %for.cond167, !dbg !4186

for.cond167:                                      ; preds = %for.inc186, %if.then164
  %use_stmt165.0 = phi %union.gimple_statement_d* [ %call166, %if.then164 ], [ %call187, %for.inc186 ], !dbg !4189
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt165.0, metadata !4014, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter108, metadata !3999, metadata !DIExpression(DW_OP_deref)), !dbg !4035
  %call168 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter108) #7, !dbg !4190
  %tobool169 = icmp eq i8 %call168, 0, !dbg !4190
  br i1 %tobool169, label %for.body171, label %if.end203.loopexit, !dbg !4186

for.body171:                                      ; preds = %for.cond167
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter108, metadata !3999, metadata !DIExpression(DW_OP_deref)), !dbg !4035
  %call172 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter108) #7, !dbg !4192
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call172, metadata !4002, metadata !DIExpression()), !dbg !4035
  br label %for.cond173, !dbg !4192

for.cond173:                                      ; preds = %for.inc183, %for.body171
  %use_p109.0 = phi %struct.ssa_use_operand_d* [ %call172, %for.body171 ], [ %call184, %for.inc183 ], !dbg !4194
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p109.0, metadata !4002, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter108, metadata !3999, metadata !DIExpression(DW_OP_deref)), !dbg !4035
  %call174 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter108) #7, !dbg !4195
  %tobool175 = icmp eq i8 %call174, 0, !dbg !4195
  br i1 %tobool175, label %for.body177, label %for.inc186, !dbg !4192

for.body177:                                      ; preds = %for.cond173
  %75 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4197
  call void @llvm.dbg.value(metadata %struct.access_site_info* %75, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt178 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %75, i64 0, i32 0, !dbg !4199
  %76 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt178, align 8, !dbg !4199
  %cmp179 = icmp eq %union.gimple_statement_d* %use_stmt165.0, %76, !dbg !4200
  br i1 %cmp179, label %if.then181, label %for.inc183, !dbg !4201

if.then181:                                       ; preds = %for.body177
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p109.0, %union.tree_node* %tmp1.2) #7, !dbg !4202
  br label %for.inc183, !dbg !4202

for.inc183:                                       ; preds = %for.body177, %if.then181
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter108, metadata !3999, metadata !DIExpression(DW_OP_deref)), !dbg !4035
  %call184 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter108) #7, !dbg !4195
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call184, metadata !4002, metadata !DIExpression()), !dbg !4035
  br label %for.cond173, !dbg !4195, !llvm.loop !4203

for.inc186:                                       ; preds = %for.cond173
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter108, metadata !3999, metadata !DIExpression(DW_OP_deref)), !dbg !4035
  %call187 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter108) #7, !dbg !4190
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call187, metadata !4014, metadata !DIExpression()), !dbg !4188
  br label %for.cond167, !dbg !4190, !llvm.loop !4205

if.else189:                                       ; preds = %if.then157
  %cmp194 = icmp eq i64 %bf.cast1611, 23, !dbg !4207
  br i1 %cmp194, label %cond.end198, label %cond.true196, !dbg !4207

cond.true196:                                     ; preds = %if.else189
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1956, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4207
  br label %cond.end198, !dbg !4207

cond.end198:                                      ; preds = %if.else189, %cond.true196
  %77 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4209
  call void @llvm.dbg.value(metadata %struct.access_site_info* %77, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt200 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %77, i64 0, i32 0, !dbg !4210
  %78 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt200, align 8, !dbg !4210
  call fastcc void @gimple_assign_set_rhs2(%union.gimple_statement_d* %78, %union.tree_node* %tmp1.2) #7, !dbg !4211
  %79 = load %struct.access_site_info*, %struct.access_site_info** %acc_info, align 8, !dbg !4212
  call void @llvm.dbg.value(metadata %struct.access_site_info* %79, metadata !3957, metadata !DIExpression()), !dbg !4019
  %stmt201 = getelementptr inbounds %struct.access_site_info, %struct.access_site_info* %79, i64 0, i32 0, !dbg !4213
  %80 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt201, align 8, !dbg !4213
  call fastcc void @update_stmt(%union.gimple_statement_d* %80) #7, !dbg !4214
  br label %if.end203

if.end203.loopexit:                               ; preds = %for.cond167
  br label %if.end203, !dbg !4215

if.end203:                                        ; preds = %if.end203.loopexit, %if.end154, %cond.end198
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #8, !dbg !4215
  br label %if.end205, !dbg !4216

if.end205:                                        ; preds = %if.else, %land.lhs.true104, %if.end203, %if.end82, %if.then90
  %81 = load i8*, i8** %10, align 8, !dbg !4217
  call void @free(i8* %81) #6, !dbg !4218
  br label %for.inc206, !dbg !4219

for.inc206:                                       ; preds = %if.end205, %if.end81, %if.then6
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4220
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3959, metadata !DIExpression()), !dbg !4019
  %.pre = load %struct.VEC_access_site_info_p_heap*, %struct.VEC_access_site_info_p_heap** %access_l, align 8, !dbg !4045
  br label %for.cond, !dbg !4221, !llvm.loop !4222

for.end207:                                       ; preds = %cond.end
  call fastcc void @VEC_access_site_info_p_heap_free(%struct.VEC_access_site_info_p_heap** nonnull %access_l) #7, !dbg !4224
  call void @update_ssa(i32 2048) #6, !dbg !4225
  br label %cleanup, !dbg !4226

cleanup:                                          ; preds = %lor.lhs.false, %entry, %for.end207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4227
  ret i32 1, !dbg !4227
}

; Function Attrs: nounwind uwtable
define internal i32 @dump_matrix_reorg_analysis(i8** %slot, i8* %data) #5 !dbg !4228 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !4230, metadata !DIExpression()), !dbg !4233
  call void @llvm.dbg.value(metadata i8* %data, metadata !4231, metadata !DIExpression()), !dbg !4233
  %0 = bitcast i8** %slot to %struct.matrix_info**, !dbg !4234
  %1 = load %struct.matrix_info*, %struct.matrix_info** %0, align 8, !dbg !4234
  call void @llvm.dbg.value(metadata %struct.matrix_info* %1, metadata !4232, metadata !DIExpression()), !dbg !4233
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4235
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !4235
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4237

if.end:                                           ; preds = %entry
  %decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 0, !dbg !4238
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4238
  %call = tail call i8* @get_name(%union.tree_node* %3) #6, !dbg !4239
  %min_indirect_level_escape = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 2, !dbg !4240
  %4 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !4240
  %num_dims = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 1, !dbg !4241
  %5 = load i32, i32* %num_dims, align 8, !dbg !4241
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0), i8* %call, i32 %4, i32 %5) #6, !dbg !4242
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4243
  %max_malloced_level = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %1, i64 0, i32 5, !dbg !4244
  %7 = load i32, i32* %max_malloced_level, align 8, !dbg !4244
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i32 %7) #6, !dbg !4245
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4246
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !4247
  %9 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !4248
  %cmp = icmp sgt i32 %9, 1, !dbg !4250
  br i1 %cmp, label %if.then5, label %cleanup, !dbg !4251

if.then5:                                         ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4252
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i32 %9) #6, !dbg !4253
  br label %cleanup, !dbg !4253

cleanup:                                          ; preds = %entry, %if.end, %if.then5
  ret i32 1, !dbg !4254
}

declare dso_local void @set_cfun(%struct.function*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4255 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4259, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4260, metadata !DIExpression()), !dbg !4263
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !4264
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4261, metadata !DIExpression()), !dbg !4262
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !4265
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4266
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4267
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4268
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4269
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4270
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4271
  ret void, !dbg !4272
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4273 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4277, metadata !DIExpression()), !dbg !4278
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4279
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4279
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !4280
  %conv1 = zext i1 %cmp to i8, !dbg !4281
  ret i8 %conv1, !dbg !4282
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @may_flatten_matrices_1(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !4283 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4287, metadata !DIExpression()), !dbg !4294
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !4295
  switch i32 %call, label %sw.epilog [
    i32 6, label %sw.bb
    i32 7, label %cleanup56
  ], !dbg !4296

sw.bb:                                            ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @gimple_assign_cast_p(%union.gimple_statement_d* %stmt) #7, !dbg !4297
  %tobool = icmp eq i8 %call1, 0, !dbg !4297
  br i1 %tobool, label %cleanup56, label %if.end, !dbg !4299

if.end:                                           ; preds = %sw.bb
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !4300
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4288, metadata !DIExpression()), !dbg !4294
  br label %while.cond, !dbg !4301

while.cond:                                       ; preds = %if.end53, %if.end
  %t.0 = phi %union.tree_node* [ %call2, %if.end ], [ %5, %if.end53 ], !dbg !4302
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !4288, metadata !DIExpression()), !dbg !4294
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4303
  %bf.load = load i64, i64* %0, align 8, !dbg !4303
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4303
  %cmp = icmp eq i64 %bf.cast1, 116, !dbg !4303
  br i1 %cmp, label %while.body, label %lor.rhs, !dbg !4303

lor.rhs:                                          ; preds = %while.cond
  %cmp7 = icmp eq i64 %bf.cast1, 113, !dbg !4303
  br i1 %cmp7, label %while.body, label %sw.epilog.loopexit, !dbg !4301

while.body:                                       ; preds = %while.cond, %lor.rhs
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4304
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4304
  %tobool8 = icmp eq %union.tree_node* %1, null, !dbg !4304
  br i1 %tobool8, label %if.end53, label %land.lhs.true, !dbg !4305

land.lhs.true:                                    ; preds = %while.body
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4305
  %bf.load12 = load i64, i64* %2, align 8, !dbg !4306
  %bf.cast143 = and i64 %bf.load12, 65535, !dbg !4306
  %cmp15 = icmp eq i64 %bf.cast143, 10, !dbg !4306
  br i1 %cmp15, label %if.then23, label %lor.lhs.false, !dbg !4306

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp22 = icmp eq i64 %bf.cast143, 12, !dbg !4306
  br i1 %cmp22, label %if.then23, label %if.end53, !dbg !4307

if.then23:                                        ; preds = %lor.lhs.false, %land.lhs.true
  br label %while.cond26, !dbg !4308

while.cond26:                                     ; preds = %while.body39, %if.then23
  %pointee.0 = phi %union.tree_node* [ %1, %if.then23 ], [ %pointee.0.pre, %while.body39 ], !dbg !4309
  call void @llvm.dbg.value(metadata %union.tree_node* %pointee.0, metadata !4289, metadata !DIExpression()), !dbg !4309
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %pointee.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4310
  %bf.load28 = load i64, i64* %3, align 8, !dbg !4310
  %bf.cast305 = and i64 %bf.load28, 65535, !dbg !4310
  %cmp31 = icmp eq i64 %bf.cast305, 10, !dbg !4310
  %cmp37 = icmp eq i64 %bf.cast305, 12, !dbg !4310
  %or.cond = or i1 %cmp31, %cmp37, !dbg !4310
  br i1 %or.cond, label %while.body39, label %while.end, !dbg !4310

while.body39:                                     ; preds = %while.cond26
  %pointee.0.in.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %pointee.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4309
  %pointee.0.pre = load %union.tree_node*, %union.tree_node** %pointee.0.in.phi.trans.insert, align 8, !dbg !4309
  br label %while.cond26, !dbg !4308, !llvm.loop !4311

while.end:                                        ; preds = %while.cond26
  %bf.cast305.lcssa = phi i64 [ %bf.cast305, %while.cond26 ], !dbg !4310
  %cmp46 = icmp eq i64 %bf.cast305.lcssa, 14, !dbg !4313
  br i1 %cmp46, label %if.then47, label %cleanup, !dbg !4315

if.then47:                                        ; preds = %while.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4316
  %tobool48 = icmp eq %struct._IO_FILE* %4, null, !dbg !4316
  br i1 %tobool48, label %cleanup, label %if.then49, !dbg !4319

if.then49:                                        ; preds = %if.then47
  %call50 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4320
  br label %cleanup, !dbg !4320

cleanup:                                          ; preds = %if.then47, %while.end, %if.then49
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then49 ], [ false, %if.then47 ], [ true, %while.end ]
  br i1 %cleanup.dest.slot.0, label %if.end53, label %cleanup56.loopexit

if.end53:                                         ; preds = %while.body, %cleanup, %lor.lhs.false
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4321
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4321
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4288, metadata !DIExpression()), !dbg !4294
  br label %while.cond, !dbg !4301, !llvm.loop !4322

sw.epilog.loopexit:                               ; preds = %lor.rhs
  br label %sw.epilog, !dbg !4324

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %entry
  br label %cleanup56, !dbg !4324

cleanup56.loopexit:                               ; preds = %cleanup
  br label %cleanup56, !dbg !4325

cleanup56:                                        ; preds = %cleanup56.loopexit, %sw.bb, %entry, %sw.epilog
  %retval.3 = phi i8 [ 1, %sw.epilog ], [ 1, %sw.bb ], [ 0, %entry ], [ 0, %cleanup56.loopexit ], !dbg !4294
  ret i8 %retval.3, !dbg !4325
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4326 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4330, metadata !DIExpression()), !dbg !4331
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4332
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4332
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !4333
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4333
  ret %union.gimple_statement_d* %1, !dbg !4334
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !4335 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4340, metadata !DIExpression()), !dbg !4341
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4342
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4342
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !4343
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !4343
  %2 = load i64, i64* %1, align 8, !dbg !4343
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !4344
  store i64 %2, i64* %3, align 8, !dbg !4344
  ret void, !dbg !4345
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4346 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4353, metadata !DIExpression()), !dbg !4354
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !4355
  %0 = load i32, i32* %flags, align 8, !dbg !4355
  %and = and i32 %0, 512, !dbg !4356
  %tobool = icmp eq i32 %and, 0, !dbg !4356
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !4357

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !4358
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !4358
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !4359
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !4360

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !4361
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !4361
  br label %cond.end, !dbg !4360

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !4360
  ret %struct.gimple_seq_d* %cond, !dbg !4362
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4363 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4370, metadata !DIExpression()), !dbg !4371
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4372
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4372

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !4373
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !4373
  br label %cond.end, !dbg !4372

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4372
  ret %struct.gimple_seq_node_d* %cond, !dbg !4374
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4375 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4380, metadata !DIExpression()), !dbg !4381
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !4382
  %bf.load = load i32, i32* %0, align 8, !dbg !4382
  %bf.clear = and i32 %bf.load, 255, !dbg !4382
  ret i32 %bf.clear, !dbg !4383
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_assign_cast_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !4384 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !4386, metadata !DIExpression()), !dbg !4390
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %s) #7, !dbg !4391
  %tobool = icmp eq i8 %call, 0, !dbg !4391
  br i1 %tobool, label %return, label %if.then, !dbg !4392

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %s) #7, !dbg !4393
  call void @llvm.dbg.value(metadata i32 %call1, metadata !4387, metadata !DIExpression()), !dbg !4394
  switch i32 %call1, label %lor.rhs [
    i32 116, label %lor.end
    i32 113, label %lor.end
    i32 118, label %lor.end
    i32 77, label %lor.end
  ], !dbg !4395

lor.rhs:                                          ; preds = %if.then
  br label %lor.end, !dbg !4396

lor.end:                                          ; preds = %if.then, %if.then, %if.then, %if.then, %lor.rhs
  %0 = phi i8 [ 1, %if.then ], [ 0, %lor.rhs ], [ 1, %if.then ], [ 1, %if.then ], [ 1, %if.then ]
  br label %return

return:                                           ; preds = %entry, %lor.end
  %retval.0 = phi i8 [ %0, %lor.end ], [ 0, %entry ], !dbg !4390
  ret i8 %retval.0, !dbg !4397
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4398 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4402, metadata !DIExpression()), !dbg !4403
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !4404
  ret %union.tree_node* %call, !dbg !4405
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4406 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4410, metadata !DIExpression()), !dbg !4411
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4412
  %cmp = icmp eq i32 %call, 6, !dbg !4413
  %conv1 = zext i1 %cmp to i8, !dbg !4412
  ret i8 %conv1, !dbg !4414
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4415 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4419, metadata !DIExpression()), !dbg !4421
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %call, metadata !4420, metadata !DIExpression()), !dbg !4421
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !4423
  %cmp = icmp eq i32 %call1, 3, !dbg !4425
  br i1 %cmp, label %if.then, label %if.end, !dbg !4426

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !4427
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4427
  %bf.load = load i64, i64* %0, align 8, !dbg !4427
  %1 = trunc i64 %bf.load to i32, !dbg !4427
  %bf.cast = and i32 %1, 65535, !dbg !4427
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !4420, metadata !DIExpression()), !dbg !4421
  br label %if.end, !dbg !4428

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !4421
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !4420, metadata !DIExpression()), !dbg !4421
  ret i32 %code.0, !dbg !4429
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !4430 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4432, metadata !DIExpression()), !dbg !4434
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %call, metadata !4433, metadata !DIExpression()), !dbg !4434
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !4436

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !4438
  %bf.load = load i32, i32* %0, align 8, !dbg !4438
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4438
  br label %cleanup, !dbg !4439

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4440
  br label %cleanup, !dbg !4442

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !4434
  ret i32 %retval.0, !dbg !4443
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !4444 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4448, metadata !DIExpression()), !dbg !4449
  %idxprom = sext i32 %code to i64, !dbg !4450
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !4450
  %0 = load i8, i8* %arrayidx, align 1, !dbg !4450
  %conv = zext i8 %0 to i32, !dbg !4451
  ret i32 %conv, !dbg !4452
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4453 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4457, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.value(metadata i32 %i, metadata !4458, metadata !DIExpression()), !dbg !4459
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4460
  %tobool = icmp eq i8 %call, 0, !dbg !4460
  br i1 %tobool, label %return, label %if.then, !dbg !4462

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4463
  %idxprom = zext i32 %i to i64, !dbg !4463
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !4463
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4463
  br label %return, !dbg !4465

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4466
  ret %union.tree_node* %retval.0, !dbg !4467
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4468 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4470, metadata !DIExpression()), !dbg !4471
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4472
  %cmp = icmp eq i32 %call, 0, !dbg !4473
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4474

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4475
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4476
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4477
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4478 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4482, metadata !DIExpression()), !dbg !4484
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !4485
  %idxprom = zext i32 %call to i64, !dbg !4486
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !4486
  %0 = load i64, i64* %arrayidx, align 8, !dbg !4486
  call void @llvm.dbg.value(metadata i64 %0, metadata !4483, metadata !DIExpression()), !dbg !4484
  %cmp = icmp eq i64 %0, 0, !dbg !4487
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4487

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4487
  br label %cond.end, !dbg !4487

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !4488
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !4489
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !4490
  ret %union.tree_node** %2, !dbg !4491
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4492 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4496, metadata !DIExpression()), !dbg !4497
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4498
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !4499
  ret i32 %call1, !dbg !4500
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !4501 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4505, metadata !DIExpression()), !dbg !4506
  %idxprom = zext i32 %code to i64, !dbg !4507
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !4507
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4507
  ret i32 %0, !dbg !4508
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.matrix_info* @analyze_matrix_decl(%union.tree_node* %var_decl) unnamed_addr #5 !dbg !4509 {
entry:
  %tmpmi = alloca %struct.matrix_info, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var_decl, metadata !4513, metadata !DIExpression()), !dbg !4519
  %0 = bitcast %struct.matrix_info* %tmpmi to i8*, !dbg !4520
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %0) #8, !dbg !4520
  call void @llvm.dbg.value(metadata i32 0, metadata !4518, metadata !DIExpression()), !dbg !4519
  %1 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !4521
  %tobool = icmp eq %struct.htab* %1, null, !dbg !4521
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4521

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 491, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4521
  br label %cond.end, !dbg !4521

cond.end:                                         ; preds = %entry, %cond.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %var_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4522
  %bf.load = load i64, i64* %2, align 8, !dbg !4522
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4524
  %cmp = icmp eq i64 %bf.cast1, 34, !dbg !4524
  br i1 %cmp, label %if.then, label %if.else, !dbg !4525

if.then:                                          ; preds = %cond.end
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %var_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4526
  br label %if.end8, !dbg !4527

if.else:                                          ; preds = %cond.end
  %cmp5 = icmp eq i64 %bf.cast1, 32, !dbg !4528
  br i1 %cmp5, label %if.then6, label %cleanup, !dbg !4530

if.then6:                                         ; preds = %if.else
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %var_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4531
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.then
  %var_type.0.in = phi %union.tree_node** [ %initial, %if.then ], [ %type, %if.then6 ]
  %var_type.0 = load %union.tree_node*, %union.tree_node** %var_type.0.in, align 8, !dbg !4532
  call void @llvm.dbg.value(metadata %union.tree_node* %var_type.0, metadata !4517, metadata !DIExpression()), !dbg !4519
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %var_type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4533
  %bf.load10 = load i64, i64* %3, align 8, !dbg !4533
  %bf.cast123 = and i64 %bf.load10, 65535, !dbg !4533
  %cmp13 = icmp eq i64 %bf.cast123, 10, !dbg !4533
  br i1 %cmp13, label %if.end20, label %lor.lhs.false, !dbg !4533

lor.lhs.false:                                    ; preds = %if.end8
  %cmp18 = icmp eq i64 %bf.cast123, 12, !dbg !4533
  br i1 %cmp18, label %if.end20, label %cleanup, !dbg !4535

if.end20:                                         ; preds = %lor.lhs.false, %if.end8
  br label %while.cond, !dbg !4536

while.cond:                                       ; preds = %while.body, %if.end20
  %bf.load27 = phi i64 [ %bf.load10, %if.end20 ], [ %bf.load22.pre, %while.body ], !dbg !4537
  %var_type.1 = phi %union.tree_node* [ %var_type.0, %if.end20 ], [ %4, %while.body ], !dbg !4519
  %dim_num.0 = phi i32 [ 0, %if.end20 ], [ %inc, %while.body ], !dbg !4519
  call void @llvm.dbg.value(metadata i32 %dim_num.0, metadata !4518, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata %union.tree_node* %var_type.1, metadata !4517, metadata !DIExpression()), !dbg !4519
  %bf.cast245 = and i64 %bf.load27, 65535, !dbg !4537
  %cmp25 = icmp eq i64 %bf.cast245, 10, !dbg !4537
  %cmp30 = icmp eq i64 %bf.cast245, 12, !dbg !4537
  %or.cond = or i1 %cmp25, %cmp30, !dbg !4537
  br i1 %or.cond, label %while.body, label %while.end, !dbg !4537

while.body:                                       ; preds = %while.cond
  %type32 = getelementptr inbounds %union.tree_node, %union.tree_node* %var_type.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4538
  %4 = load %union.tree_node*, %union.tree_node** %type32, align 8, !dbg !4538
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4517, metadata !DIExpression()), !dbg !4519
  %inc = add nuw nsw i32 %dim_num.0, 1, !dbg !4540
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4518, metadata !DIExpression()), !dbg !4519
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4519
  %bf.load22.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !4537
  br label %while.cond, !dbg !4536, !llvm.loop !4541

while.end:                                        ; preds = %while.cond
  %var_type.1.lcssa = phi %union.tree_node* [ %var_type.1, %while.cond ], !dbg !4519
  %dim_num.0.lcssa = phi i32 [ %dim_num.0, %while.cond ], !dbg !4519
  call void @llvm.dbg.value(metadata %union.tree_node* %var_type.1.lcssa, metadata !4517, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 %dim_num.0.lcssa, metadata !4518, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata %union.tree_node* %var_type.1.lcssa, metadata !4517, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 %dim_num.0.lcssa, metadata !4518, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata %union.tree_node* %var_type.1.lcssa, metadata !4517, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 %dim_num.0.lcssa, metadata !4518, metadata !DIExpression()), !dbg !4519
  %cmp33 = icmp ult i32 %dim_num.0.lcssa, 2, !dbg !4543
  br i1 %cmp33, label %cleanup, label %if.end35, !dbg !4545

if.end35:                                         ; preds = %while.end
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %var_type.1.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4546
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4546
  %cmp37 = icmp eq %union.tree_node* %6, null, !dbg !4546
  br i1 %cmp37, label %cleanup, label %lor.lhs.false38, !dbg !4548

lor.lhs.false38:                                  ; preds = %if.end35
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %var_type.1.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4549
  %8 = bitcast %union.tree_node** %7 to i64**, !dbg !4549
  %9 = load i64*, i64** %8, align 8, !dbg !4549
  %bf.load41 = load i64, i64* %9, align 8, !dbg !4549
  %bf.cast437 = and i64 %bf.load41, 65535, !dbg !4550
  %cmp44 = icmp eq i64 %bf.cast437, 23, !dbg !4550
  br i1 %cmp44, label %if.end46, label %cleanup, !dbg !4551

if.end46:                                         ; preds = %lor.lhs.false38
  %decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %tmpmi, i64 0, i32 0, !dbg !4552
  store %union.tree_node* %var_decl, %union.tree_node** %decl, align 8, !dbg !4553
  %10 = load %struct.htab*, %struct.htab** @matrices_to_reorg, align 8, !dbg !4554
  %call = call i8* @htab_find(%struct.htab* %10, i8* nonnull %0) #6, !dbg !4555
  call void @llvm.dbg.value(metadata i8* %call, metadata !4516, metadata !DIExpression()), !dbg !4519
  %tobool47 = icmp eq i8* %call, null, !dbg !4556
  br i1 %tobool47, label %if.end49, label %cleanup, !dbg !4558

if.end49:                                         ; preds = %if.end46
  %call50 = call i8* @xcalloc(i64 1, i64 112) #6, !dbg !4559
  %11 = bitcast i8* %call50 to %struct.matrix_info*, !dbg !4560
  call void @llvm.dbg.value(metadata %struct.matrix_info* %11, metadata !4514, metadata !DIExpression()), !dbg !4519
  %decl51 = bitcast i8* %call50 to %union.tree_node**, !dbg !4561
  store %union.tree_node* %var_decl, %union.tree_node** %decl51, align 8, !dbg !4562
  %num_dims = getelementptr inbounds i8, i8* %call50, i64 8, !dbg !4563
  %12 = bitcast i8* %num_dims to i32*, !dbg !4563
  store i32 %dim_num.0.lcssa, i32* %12, align 8, !dbg !4564
  %conv = zext i32 %dim_num.0.lcssa to i64, !dbg !4565
  %call52 = call i8* @xcalloc(i64 %conv, i64 16) #6, !dbg !4566
  %free_stmts = getelementptr inbounds i8, i8* %call50, i64 48, !dbg !4567
  %13 = bitcast i8* %free_stmts to i8**, !dbg !4568
  store i8* %call52, i8** %13, align 8, !dbg !4568
  %min_indirect_level_escape = getelementptr inbounds i8, i8* %call50, i64 12, !dbg !4569
  %14 = bitcast i8* %min_indirect_level_escape to i32*, !dbg !4569
  store i32 -1, i32* %14, align 4, !dbg !4570
  %15 = getelementptr inbounds i8, i8* %call50, i64 36, !dbg !4571
  store i8 0, i8* %15, align 4, !dbg !4572
  br label %cleanup, !dbg !4573

cleanup:                                          ; preds = %if.end46, %lor.lhs.false38, %if.end35, %while.end, %lor.lhs.false, %if.else, %if.end49
  %retval.0 = phi %struct.matrix_info* [ %11, %if.end49 ], [ null, %if.else ], [ null, %lor.lhs.false ], [ null, %while.end ], [ null, %lor.lhs.false38 ], [ null, %if.end35 ], [ null, %if.end46 ], !dbg !4519
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %0) #8, !dbg !4574
  ret %struct.matrix_info* %retval.0, !dbg !4574
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

declare dso_local i8* @htab_find(%struct.htab*, i8*) local_unnamed_addr #2

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !4575 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4581, metadata !DIExpression()), !dbg !4582
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4583
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4583

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4583
  %0 = load i32, i32* %num, align 8, !dbg !4583
  br label %cond.end, !dbg !4583

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4583
  ret i32 %cond, !dbg !4583
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_matrix_allocation_site(%struct.matrix_info* %mi, %union.gimple_statement_d* %stmt, i32 %level, %struct.simple_bitmap_def* %visited) unnamed_addr #5 !dbg !4584 {
entry:
  call void @llvm.dbg.value(metadata %struct.matrix_info* %mi, metadata !4588, metadata !DIExpression()), !dbg !4604
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4589, metadata !DIExpression()), !dbg !4604
  call void @llvm.dbg.value(metadata i32 %level, metadata !4590, metadata !DIExpression()), !dbg !4604
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %visited, metadata !4591, metadata !DIExpression()), !dbg !4604
  %call = tail call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* %stmt) #6, !dbg !4605
  %tobool = icmp eq i8 %call, 0, !dbg !4605
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4606

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @gimple_assign_cast_p(%union.gimple_statement_d* %stmt) #7, !dbg !4607
  %tobool3 = icmp eq i8 %call1, 0, !dbg !4607
  br i1 %tobool3, label %if.else11, label %if.then, !dbg !4608

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !4609
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4592, metadata !DIExpression()), !dbg !4610
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4611
  %bf.load = load i64, i64* %0, align 8, !dbg !4611
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4612
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4612
  br i1 %cmp, label %if.then6, label %if.else, !dbg !4613

if.then6:                                         ; preds = %if.then
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4614
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4614
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !4614
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !4595, metadata !DIExpression()), !dbg !4615
  tail call fastcc void @analyze_matrix_allocation_site(%struct.matrix_info* %mi, %union.gimple_statement_d* %2, i32 %level, %struct.simple_bitmap_def* %visited) #7, !dbg !4616
  br label %cleanup

if.else:                                          ; preds = %if.then
  %decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 0, !dbg !4617
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4617
  %cmp7 = icmp ne %union.tree_node* %call4, %3, !dbg !4619
  br label %cleanup, !dbg !4620

cleanup:                                          ; preds = %if.else, %if.then6
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then6 ], [ %cmp7, %if.else ]
  br i1 %cleanup.dest.slot.0, label %if.end53, label %return

if.else11:                                        ; preds = %lor.lhs.false
  %call12 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !4621
  %tobool13 = icmp eq i8 %call12, 0, !dbg !4621
  br i1 %tobool13, label %if.end53, label %if.then14, !dbg !4622

if.then14:                                        ; preds = %if.else11
  %call15 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %stmt) #6, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %call15, metadata !4598, metadata !DIExpression()), !dbg !4624
  %and = and i32 %call15, 16, !dbg !4625
  %tobool16 = icmp eq i32 %and, 0, !dbg !4625
  br i1 %tobool16, label %if.then17, label %if.else18, !dbg !4626

if.then17:                                        ; preds = %if.then14
  tail call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %level, %union.gimple_statement_d* %stmt) #7, !dbg !4627
  br label %return, !dbg !4629

if.else18:                                        ; preds = %if.then14
  %call19 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #7, !dbg !4630
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !4601, metadata !DIExpression()), !dbg !4631
  %cmp20 = icmp eq %union.tree_node* %call19, null, !dbg !4632
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !4634

if.then22:                                        ; preds = %if.else18
  tail call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %level, %union.gimple_statement_d* %stmt) #7, !dbg !4635
  br label %cleanup37, !dbg !4637

if.end23:                                         ; preds = %if.else18
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 5, !dbg !4638
  %bf.load24 = load i32, i32* %function_code, align 8, !dbg !4638
  %bf.clear25 = and i32 %bf.load24, 2047, !dbg !4638
  %cmp26 = icmp eq i32 %bf.clear25, 491, !dbg !4640
  br i1 %cmp26, label %cleanup37, label %if.then28, !dbg !4641

if.then28:                                        ; preds = %if.end23
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4642
  %tobool29 = icmp eq %struct._IO_FILE* %4, null, !dbg !4642
  br i1 %tobool29, label %if.end35, label %if.then30, !dbg !4645

if.then30:                                        ; preds = %if.then28
  %decl31 = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 0, !dbg !4646
  %5 = load %union.tree_node*, %union.tree_node** %decl31, align 8, !dbg !4646
  %call32 = tail call i8* @get_name(%union.tree_node* %5) #6, !dbg !4647
  %call33 = tail call i8* @get_name(%union.tree_node* nonnull %call19) #6, !dbg !4648
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0), i8* %call32, i8* %call33) #6, !dbg !4649
  br label %if.end35, !dbg !4649

if.end35:                                         ; preds = %if.then28, %if.then30
  tail call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %level, %union.gimple_statement_d* %stmt) #7, !dbg !4650
  br label %cleanup37, !dbg !4651

cleanup37:                                        ; preds = %if.end23, %if.end35, %if.then22
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then22 ], [ false, %if.end35 ], [ true, %if.end23 ]
  br i1 %cleanup.dest.slot.1, label %if.end40, label %return

if.end40:                                         ; preds = %cleanup37
  %malloc_for_level = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 4, !dbg !4652
  %6 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level, align 8, !dbg !4652
  %tobool41 = icmp eq %union.gimple_statement_d** %6, null, !dbg !4654
  br i1 %tobool41, label %if.else49, label %land.lhs.true, !dbg !4655

land.lhs.true:                                    ; preds = %if.end40
  %max_malloced_level = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 5, !dbg !4656
  %7 = load i32, i32* %max_malloced_level, align 8, !dbg !4656
  %sub = add nsw i32 %7, -1, !dbg !4657
  %cmp42 = icmp eq i32 %sub, %level, !dbg !4658
  br i1 %cmp42, label %land.lhs.true44, label %if.else49, !dbg !4659

land.lhs.true44:                                  ; preds = %land.lhs.true
  %idxprom = sext i32 %level to i64, !dbg !4660
  %arrayidx = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %6, i64 %idxprom, !dbg !4660
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !4660
  %cmp46 = icmp eq %union.gimple_statement_d* %8, %stmt, !dbg !4661
  br i1 %cmp46, label %if.else49, label %if.then48, !dbg !4662

if.then48:                                        ; preds = %land.lhs.true44
  tail call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %level, %union.gimple_statement_d* %stmt) #7, !dbg !4663
  br label %return, !dbg !4665

if.else49:                                        ; preds = %land.lhs.true44, %if.end40, %land.lhs.true
  tail call fastcc void @add_allocation_site(%struct.matrix_info* %mi, %union.gimple_statement_d* %stmt, i32 %level) #7, !dbg !4666
  br label %return, !dbg !4667

if.end53:                                         ; preds = %if.else11, %cleanup
  tail call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %level, %union.gimple_statement_d* %stmt) #7, !dbg !4668
  br label %return, !dbg !4669

return:                                           ; preds = %if.then17, %if.then48, %if.else49, %cleanup37, %cleanup, %if.end53
  ret void, !dbg !4669
}

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_matrix_accesses(%struct.matrix_info* %mi, %union.tree_node* %ssa_var, i32 %current_indirect_level, i8 zeroext %last_op, %struct.simple_bitmap_def* %visited, i8 zeroext %record_accesses) unnamed_addr #5 !dbg !4670 {
entry:
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.matrix_info* %mi, metadata !4674, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata %union.tree_node* %ssa_var, metadata !4675, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata i32 %current_indirect_level, metadata !4676, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata i8 %last_op, metadata !4677, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %visited, metadata !4678, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata i8 %record_accesses, metadata !4679, metadata !DIExpression()), !dbg !4686
  %0 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !4687
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !4687
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %ssa_var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4688
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4688
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !4688
  tail call fastcc void @update_type_size(%struct.matrix_info* %mi, %union.gimple_statement_d* %2, %union.tree_node* %ssa_var, i32 %current_indirect_level) #7, !dbg !4689
  %min_indirect_level_escape = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 2, !dbg !4690
  %3 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !4690
  %cmp = icmp sgt i32 %3, -1, !dbg !4692
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4693

land.lhs.true:                                    ; preds = %entry
  %cmp2 = icmp sgt i32 %3, %current_indirect_level, !dbg !4694
  br i1 %cmp2, label %if.end, label %cleanup, !dbg !4695

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %ssa_var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4696
  %bf.load = load i64, i64* %4, align 8, !dbg !4696
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4696
  %cmp3 = icmp eq i64 %bf.cast1, 141, !dbg !4696
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !4696

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1375, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4696
  br label %cond.end, !dbg !4696

cond.end:                                         ; preds = %if.end, %cond.true
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4680, metadata !DIExpression(DW_OP_deref)), !dbg !4686
  %call = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %ssa_var) #7, !dbg !4697
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call, metadata !4681, metadata !DIExpression()), !dbg !4686
  br label %for.cond, !dbg !4697

for.cond:                                         ; preds = %for.inc, %cond.end
  %current_indirect_level.addr.0 = phi i32 [ %current_indirect_level, %cond.end ], [ %current_indirect_level.addr.3, %for.inc ]
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call, %cond.end ], [ %call20, %for.inc ], !dbg !4698
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !4681, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata i32 %current_indirect_level.addr.0, metadata !4676, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4680, metadata !DIExpression(DW_OP_deref)), !dbg !4686
  %call4 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4699
  %tobool = icmp eq i8 %call4, 0, !dbg !4699
  br i1 %tobool, label %for.body, label %cleanup.loopexit, !dbg !4697

for.body:                                         ; preds = %for.cond
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !4700
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4700
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %5, metadata !4682, metadata !DIExpression()), !dbg !4701
  %call5 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %5) #7, !dbg !4702
  %cmp6 = icmp eq i32 %call5, 16, !dbg !4704
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !4705

if.then7:                                         ; preds = %for.body
  call fastcc void @analyze_accesses_for_phi_node(%struct.matrix_info* %mi, %union.gimple_statement_d* %5, i32 %current_indirect_level.addr.0, %struct.simple_bitmap_def* %visited, i8 zeroext %record_accesses) #7, !dbg !4706
  br label %for.inc, !dbg !4706

if.else:                                          ; preds = %for.body
  %call8 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %5) #7, !dbg !4707
  %tobool9 = icmp eq i8 %call8, 0, !dbg !4707
  br i1 %tobool9, label %if.else12, label %if.then10, !dbg !4709

if.then10:                                        ; preds = %if.else
  %call11 = call fastcc i32 @analyze_accesses_for_call_stmt(%struct.matrix_info* %mi, %union.tree_node* %ssa_var, %union.gimple_statement_d* %5, i32 %current_indirect_level.addr.0) #7, !dbg !4710
  br label %for.inc, !dbg !4710

if.else12:                                        ; preds = %if.else
  %call13 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %5) #7, !dbg !4711
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4711
  br i1 %tobool14, label %for.inc, label %if.then15, !dbg !4713

if.then15:                                        ; preds = %if.else12
  %call16 = call fastcc i32 @analyze_accesses_for_assign_stmt(%struct.matrix_info* %mi, %union.tree_node* %ssa_var, %union.gimple_statement_d* %5, i32 %current_indirect_level.addr.0, i8 zeroext %last_op, %struct.simple_bitmap_def* %visited, i8 zeroext %record_accesses) #7, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %call16, metadata !4676, metadata !DIExpression()), !dbg !4686
  br label %for.inc, !dbg !4715

for.inc:                                          ; preds = %if.else12, %if.then7, %if.then15, %if.then10
  %current_indirect_level.addr.3 = phi i32 [ %current_indirect_level.addr.0, %if.then7 ], [ %current_indirect_level.addr.0, %if.then10 ], [ %call16, %if.then15 ], [ %current_indirect_level.addr.0, %if.else12 ]
  call void @llvm.dbg.value(metadata i32 %current_indirect_level.addr.3, metadata !4676, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4680, metadata !DIExpression(DW_OP_deref)), !dbg !4686
  %call20 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4699
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call20, metadata !4681, metadata !DIExpression()), !dbg !4686
  br label %for.cond, !dbg !4699, !llvm.loop !4716

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4718

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !4718
  ret void, !dbg !4718
}

declare dso_local zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4719 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4721, metadata !DIExpression()), !dbg !4722
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4723
  %cmp = icmp eq i32 %call, 8, !dbg !4724
  %conv1 = zext i1 %cmp to i8, !dbg !4723
  ret i8 %conv1, !dbg !4725
}

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %l, %union.gimple_statement_d* %s) unnamed_addr #5 !dbg !4726 {
entry:
  call void @llvm.dbg.value(metadata %struct.matrix_info* %mi, metadata !4730, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %l, metadata !4731, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !4732, metadata !DIExpression()), !dbg !4733
  %min_indirect_level_escape = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 2, !dbg !4734
  %0 = load i32, i32* %min_indirect_level_escape, align 4, !dbg !4734
  %cmp = icmp eq i32 %0, -1, !dbg !4736
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4737

lor.lhs.false:                                    ; preds = %entry
  %cmp2 = icmp sgt i32 %0, %l, !dbg !4738
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4739

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 %l, i32* %min_indirect_level_escape, align 4, !dbg !4740
  %min_indirect_level_escape_stmt = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 3, !dbg !4742
  store %union.gimple_statement_d* %s, %union.gimple_statement_d** %min_indirect_level_escape_stmt, align 8, !dbg !4743
  br label %if.end, !dbg !4744

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !4745
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4746 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4748, metadata !DIExpression()), !dbg !4750
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !4751
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4749, metadata !DIExpression()), !dbg !4750
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4752
  %bf.load = load i64, i64* %0, align 8, !dbg !4752
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4754
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !4754
  br i1 %cmp, label %if.then, label %cleanup, !dbg !4755

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4756
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4756
  br label %cleanup, !dbg !4757

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !4750
  ret %union.tree_node* %retval.0, !dbg !4758
}

declare dso_local i8* @get_name(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_allocation_site(%struct.matrix_info* %mi, %union.gimple_statement_d* %stmt, i32 %level) unnamed_addr #5 !dbg !4759 {
entry:
  %mcd = alloca %struct.malloc_call_data, align 8
  call void @llvm.dbg.value(metadata %struct.matrix_info* %mi, metadata !4763, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4764, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata i32 %level, metadata !4765, metadata !DIExpression()), !dbg !4771
  %0 = bitcast %struct.malloc_call_data* %mcd to i8*, !dbg !4772
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4772
  %allocation_function_decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 7, !dbg !4773
  %1 = load %union.tree_node*, %union.tree_node** %allocation_function_decl, align 8, !dbg !4773
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !4774
  br i1 %tobool, label %if.then, label %if.else, !dbg !4775

if.then:                                          ; preds = %entry
  %2 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !4776
  %3 = bitcast %union.tree_node** %allocation_function_decl to i64*, !dbg !4777
  store i64 %2, i64* %3, align 8, !dbg !4777
  br label %if.end13, !dbg !4778

if.else:                                          ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4779
  %cmp = icmp eq %union.tree_node* %1, %4, !dbg !4780
  br i1 %cmp, label %if.end13, label %if.then3, !dbg !4781

if.then3:                                         ; preds = %if.else
  %malloc_for_level = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 4, !dbg !4782
  %5 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level, align 8, !dbg !4782
  %tobool4 = icmp eq %union.gimple_statement_d** %5, null, !dbg !4782
  br i1 %tobool4, label %cond.true, label %cond.end, !dbg !4782

cond.true:                                        ; preds = %if.then3
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 731, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4782
  br label %cond.end, !dbg !4782

cond.end:                                         ; preds = %if.then3, %cond.true
  call void @llvm.dbg.value(metadata i32 0, metadata !4767, metadata !DIExpression()), !dbg !4783
  %max_malloced_level = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 5, !dbg !4784
  %6 = load i32, i32* %max_malloced_level, align 8, !dbg !4784
  %7 = sext i32 %6 to i64, !dbg !4787
  br label %for.cond, !dbg !4787

for.cond:                                         ; preds = %for.inc, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %cond.end ], !dbg !4788
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4767, metadata !DIExpression()), !dbg !4783
  %cmp5 = icmp slt i64 %indvars.iv, %7, !dbg !4789
  %8 = trunc i64 %indvars.iv to i32, !dbg !4790
  br i1 %cmp5, label %land.rhs, label %for.end, !dbg !4790

land.rhs:                                         ; preds = %for.cond
  %9 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level, align 8, !dbg !4791
  %arrayidx = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %9, i64 %indvars.iv, !dbg !4792
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !4792
  %tobool7 = icmp eq %union.gimple_statement_d* %10, null, !dbg !4790
  br i1 %tobool7, label %for.end, label %for.inc, !dbg !4793

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4794
  call void @llvm.dbg.value(metadata i32 undef, metadata !4767, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4783
  br label %for.cond, !dbg !4795, !llvm.loop !4796

for.end:                                          ; preds = %land.rhs, %for.cond
  %.lcssa = phi i32 [ %8, %land.rhs ], [ %8, %for.cond ], !dbg !4790
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4767, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4767, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4767, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4767, metadata !DIExpression()), !dbg !4783
  %cmp8 = icmp sgt i32 %.lcssa, %level, !dbg !4798
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !4800

if.then9:                                         ; preds = %for.end
  %11 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !4801
  %12 = bitcast %union.tree_node** %allocation_function_decl to i64*, !dbg !4803
  store i64 %11, i64* %12, align 8, !dbg !4803
  tail call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %.lcssa, %union.gimple_statement_d* %stmt) #7, !dbg !4804
  br label %cleanup, !dbg !4805

if.else11:                                        ; preds = %for.end
  tail call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %level, %union.gimple_statement_d* %stmt) #7, !dbg !4806
  br label %cleanup, !dbg !4808

cleanup:                                          ; preds = %if.then9, %if.else11
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then9 ], [ false, %if.else11 ]
  br i1 %cleanup.dest.slot.0, label %if.end13, label %cleanup46

if.end13:                                         ; preds = %if.else, %cleanup, %if.then
  call void @llvm.dbg.value(metadata %struct.malloc_call_data* %mcd, metadata !4766, metadata !DIExpression(DW_OP_deref)), !dbg !4771
  call fastcc void @collect_data_for_malloc_call(%union.gimple_statement_d* %stmt, %struct.malloc_call_data* nonnull %mcd) #7, !dbg !4809
  %malloc_for_level14 = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 4, !dbg !4810
  %13 = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level14, align 8, !dbg !4810
  %tobool15 = icmp eq %union.gimple_statement_d** %13, null, !dbg !4812
  %14 = bitcast %union.gimple_statement_d** %13 to i8*, !dbg !4813
  br i1 %tobool15, label %if.then16, label %if.else20, !dbg !4813

if.then16:                                        ; preds = %if.end13
  %add = add nsw i32 %level, 1, !dbg !4814
  %conv = sext i32 %add to i64, !dbg !4814
  %call = call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !4814
  %15 = bitcast %union.gimple_statement_d*** %malloc_for_level14 to i8**, !dbg !4816
  store i8* %call, i8** %15, align 8, !dbg !4816
  %max_malloced_level19 = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 5, !dbg !4817
  store i32 %add, i32* %max_malloced_level19, align 8, !dbg !4818
  %16 = bitcast i8* %call to %union.gimple_statement_d**, !dbg !4819
  br label %if.end42, !dbg !4819

if.else20:                                        ; preds = %if.end13
  %max_malloced_level21 = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 5, !dbg !4820
  %17 = load i32, i32* %max_malloced_level21, align 8, !dbg !4820
  %cmp22 = icmp sgt i32 %17, %level, !dbg !4822
  br i1 %cmp22, label %if.end42, label %if.then24, !dbg !4823

if.then24:                                        ; preds = %if.else20
  %18 = bitcast %union.gimple_statement_d*** %malloc_for_level14 to i8**, !dbg !4824
  %add26 = add nsw i32 %level, 1, !dbg !4824
  %conv27 = sext i32 %add26 to i64, !dbg !4824
  %mul = shl nsw i64 %conv27, 3, !dbg !4824
  %call28 = call i8* @xrealloc(i8* nonnull %14, i64 %mul) #6, !dbg !4824
  store i8* %call28, i8** %18, align 8, !dbg !4826
  %.cast = bitcast i8* %call28 to %union.gimple_statement_d**, !dbg !4827
  %19 = load i32, i32* %max_malloced_level21, align 8, !dbg !4828
  %add32 = add nsw i32 %19, 1, !dbg !4829
  %idxprom33 = sext i32 %add32 to i64, !dbg !4830
  %arrayidx34 = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %.cast, i64 %idxprom33, !dbg !4830
  %20 = bitcast %union.gimple_statement_d** %arrayidx34 to i8*, !dbg !4831
  %sub = sub nsw i32 %level, %19, !dbg !4832
  %conv36 = sext i32 %sub to i64, !dbg !4833
  %mul37 = shl nsw i64 %conv36, 3, !dbg !4834
  %call38 = call i8* @memset(i8* %20, i32 0, i64 %mul37) #6, !dbg !4835
  store i32 %add26, i32* %max_malloced_level21, align 8, !dbg !4836
  %.pre = load %union.gimple_statement_d**, %union.gimple_statement_d*** %malloc_for_level14, align 8, !dbg !4837
  br label %if.end42, !dbg !4838

if.end42:                                         ; preds = %if.else20, %if.then24, %if.then16
  %21 = phi %union.gimple_statement_d** [ %13, %if.else20 ], [ %.pre, %if.then24 ], [ %16, %if.then16 ], !dbg !4837
  %idxprom44 = sext i32 %level to i64, !dbg !4839
  %arrayidx45 = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %21, i64 %idxprom44, !dbg !4839
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %arrayidx45, align 8, !dbg !4840
  br label %cleanup46, !dbg !4841

cleanup46:                                        ; preds = %cleanup, %if.end42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4841
  ret void, !dbg !4841
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4842 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4844, metadata !DIExpression()), !dbg !4845
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !4846
  ret %union.tree_node* %call, !dbg !4847
}

; Function Attrs: nounwind uwtable
define internal fastcc void @collect_data_for_malloc_call(%union.gimple_statement_d* %stmt, %struct.malloc_call_data* %m_data) unnamed_addr #5 !dbg !4848 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4853, metadata !DIExpression()), !dbg !4858
  call void @llvm.dbg.value(metadata %struct.malloc_call_data* %m_data, metadata !4854, metadata !DIExpression()), !dbg !4858
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4855, metadata !DIExpression()), !dbg !4858
  %call = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !4859
  %tobool = icmp eq i8 %call, 0, !dbg !4859
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4859

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4859
  br label %cond.end, !dbg !4859

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #7, !dbg !4860
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4856, metadata !DIExpression()), !dbg !4858
  %cmp = icmp eq %union.tree_node* %call1, null, !dbg !4861
  br i1 %cmp, label %cleanup.cont, label %lor.lhs.false, !dbg !4863

lor.lhs.false:                                    ; preds = %cond.end
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 5, !dbg !4864
  %bf.load = load i32, i32* %function_code, align 8, !dbg !4864
  %bf.clear = and i32 %bf.load, 2047, !dbg !4864
  %cmp2 = icmp eq i32 %bf.clear, 491, !dbg !4865
  br i1 %cmp2, label %if.end, label %cleanup.cont, !dbg !4866

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !4867
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !4857, metadata !DIExpression()), !dbg !4858
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !4855, metadata !DIExpression()), !dbg !4858
  %call_stmt = getelementptr inbounds %struct.malloc_call_data, %struct.malloc_call_data* %m_data, i64 0, i32 0, !dbg !4868
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %call_stmt, align 8, !dbg !4869
  %size_var4 = getelementptr inbounds %struct.malloc_call_data, %struct.malloc_call_data* %m_data, i64 0, i32 1, !dbg !4870
  store %union.tree_node* %call3, %union.tree_node** %size_var4, align 8, !dbg !4871
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4872
  %bf.load5 = load i64, i64* %0, align 8, !dbg !4872
  %bf.cast1 = and i64 %bf.load5, 65535, !dbg !4874
  %cmp7 = icmp eq i64 %bf.cast1, 32, !dbg !4874
  %malloc_size = getelementptr inbounds %struct.malloc_call_data, %struct.malloc_call_data* %m_data, i64 0, i32 2, !dbg !4875
  br i1 %cmp7, label %if.else, label %if.then8, !dbg !4876

if.then8:                                         ; preds = %if.end
  store %union.tree_node* %call3, %union.tree_node** %malloc_size, align 8, !dbg !4877
  br label %cleanup.cont, !dbg !4878

if.else:                                          ; preds = %if.end
  store %union.tree_node* null, %union.tree_node** %malloc_size, align 8, !dbg !4879
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %lor.lhs.false, %cond.end, %if.else, %if.then8
  ret void, !dbg !4880
}

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !4881 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4883, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i32 %index, metadata !4884, metadata !DIExpression()), !dbg !4885
  %add = add i32 %index, 3, !dbg !4886
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !4887
  ret %union.tree_node* %call, !dbg !4888
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_type_size(%struct.matrix_info* %mi, %union.gimple_statement_d* %stmt, %union.tree_node* %ssa_var, i32 %current_indirect_level) unnamed_addr #5 !dbg !4889 {
entry:
  call void @llvm.dbg.value(metadata %struct.matrix_info* %mi, metadata !4893, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4894, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata %union.tree_node* %ssa_var, metadata !4895, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %current_indirect_level, metadata !4896, metadata !DIExpression()), !dbg !4902
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !4903
  %tobool = icmp eq i8 %call, 0, !dbg !4903
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4905

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !4906
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4906
  %bf.load = load i64, i64* %0, align 8, !dbg !4906
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4907
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !4907
  br i1 %cmp, label %if.then, label %if.else, !dbg !4908

if.then:                                          ; preds = %land.lhs.true
  %call3 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !4909
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !4897, metadata !DIExpression()), !dbg !4902
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4911
  %1 = bitcast %union.tree_node** %operands to %struct.tree_ssa_name**, !dbg !4911
  %2 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %1, align 8, !dbg !4911
  %var = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %2, i64 0, i32 1, !dbg !4911
  %3 = bitcast %union.tree_node** %var to %struct.tree_common**, !dbg !4911
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !4911
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !4911
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !4911
  %6 = load i64*, i64** %5, align 8, !dbg !4911
  %bf.load5 = load i64, i64* %6, align 8, !dbg !4911
  %bf.cast72 = and i64 %bf.load5, 65535, !dbg !4911
  %cmp8 = icmp eq i64 %bf.cast72, 10, !dbg !4911
  br i1 %cmp8, label %cond.end, label %lor.lhs.false, !dbg !4911

lor.lhs.false:                                    ; preds = %if.then
  %cmp21 = icmp eq i64 %bf.cast72, 12, !dbg !4911
  br i1 %cmp21, label %cond.end, label %cond.true, !dbg !4911

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1001, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4911
  %.pre = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %1, align 8, !dbg !4912
  %var27.phi.trans.insert = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %.pre, i64 0, i32 1, !dbg !4913
  %.phi.trans.insert = bitcast %union.tree_node** %var27.phi.trans.insert to %struct.tree_common**, !dbg !4913
  %.pre4 = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert, align 8, !dbg !4912
  br label %cond.end, !dbg !4911

cond.end:                                         ; preds = %if.then, %lor.lhs.false, %cond.true
  %7 = phi %struct.tree_common* [ %4, %if.then ], [ %4, %lor.lhs.false ], [ %.pre4, %cond.true ], !dbg !4912
  %type29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !4912
  %8 = bitcast %union.tree_node** %type29 to %struct.tree_common**, !dbg !4912
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !4912
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !4912
  %10 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !4912
  %call32 = tail call i64 @int_size_in_bytes(%union.tree_node* %10) #6, !dbg !4914
  call void @llvm.dbg.value(metadata i64 %call32, metadata !4898, metadata !DIExpression()), !dbg !4902
  br label %if.end, !dbg !4915

if.else:                                          ; preds = %entry, %land.lhs.true
  %type34 = getelementptr inbounds %union.tree_node, %union.tree_node* %ssa_var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4916
  %11 = load %union.tree_node*, %union.tree_node** %type34, align 8, !dbg !4916
  %call35 = tail call i64 @int_size_in_bytes(%union.tree_node* %11) #6, !dbg !4917
  call void @llvm.dbg.value(metadata i64 %call35, metadata !4898, metadata !DIExpression()), !dbg !4902
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %type_size.0 = phi i64 [ %call32, %cond.end ], [ %call35, %if.else ], !dbg !4918
  call void @llvm.dbg.value(metadata i64 %type_size.0, metadata !4898, metadata !DIExpression()), !dbg !4902
  %cmp36 = icmp slt i64 %type_size.0, 1, !dbg !4919
  br i1 %cmp36, label %if.then38, label %if.else39, !dbg !4920

if.then38:                                        ; preds = %if.end
  tail call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %current_indirect_level, %union.gimple_statement_d* %stmt) #7, !dbg !4921
  br label %if.end86, !dbg !4921

if.else39:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 %current_indirect_level, metadata !4899, metadata !DIExpression()), !dbg !4922
  %dimension_type_size = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 11, !dbg !4923
  %12 = load i64*, i64** %dimension_type_size, align 8, !dbg !4923
  %tobool40 = icmp eq i64* %12, null, !dbg !4925
  %13 = bitcast i64* %12 to i8*, !dbg !4926
  br i1 %tobool40, label %if.then41, label %if.else46, !dbg !4926

if.then41:                                        ; preds = %if.else39
  %add = add nsw i32 %current_indirect_level, 1, !dbg !4927
  %conv42 = sext i32 %add to i64, !dbg !4929
  %call43 = tail call i8* @xcalloc(i64 %conv42, i64 8) #6, !dbg !4930
  %14 = bitcast i64** %dimension_type_size to i8**, !dbg !4931
  store i8* %call43, i8** %14, align 8, !dbg !4931
  %dimension_type_size_len = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 12, !dbg !4932
  store i32 %add, i32* %dimension_type_size_len, align 8, !dbg !4933
  %15 = bitcast i8* %call43 to i64*, !dbg !4934
  br label %if.end68, !dbg !4934

if.else46:                                        ; preds = %if.else39
  %dimension_type_size_len47 = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 12, !dbg !4935
  %16 = load i32, i32* %dimension_type_size_len47, align 8, !dbg !4935
  %cmp49 = icmp sgt i32 %16, %current_indirect_level, !dbg !4937
  br i1 %cmp49, label %if.end68, label %if.then51, !dbg !4938

if.then51:                                        ; preds = %if.else46
  %17 = bitcast i64** %dimension_type_size to i8**, !dbg !4939
  %add53 = add nsw i32 %current_indirect_level, 1, !dbg !4941
  %conv54 = sext i32 %add53 to i64, !dbg !4942
  %mul = shl nsw i64 %conv54, 3, !dbg !4943
  %call55 = tail call i8* @xrealloc(i8* nonnull %13, i64 %mul) #6, !dbg !4944
  store i8* %call55, i8** %17, align 8, !dbg !4945
  %.cast = bitcast i8* %call55 to i64*, !dbg !4946
  %18 = load i32, i32* %dimension_type_size_len47, align 8, !dbg !4947
  %idxprom = sext i32 %18 to i64, !dbg !4948
  %arrayidx59 = getelementptr inbounds i64, i64* %.cast, i64 %idxprom, !dbg !4948
  %19 = bitcast i64* %arrayidx59 to i8*, !dbg !4949
  %sub = sub nsw i32 %add53, %18, !dbg !4950
  %conv62 = sext i32 %sub to i64, !dbg !4951
  %mul63 = shl nsw i64 %conv62, 3, !dbg !4952
  %call64 = tail call i8* @memset(i8* %19, i32 0, i64 %mul63) #6, !dbg !4953
  store i32 %add53, i32* %dimension_type_size_len47, align 8, !dbg !4954
  %.pre5 = load i64*, i64** %dimension_type_size, align 8, !dbg !4955
  br label %if.end68, !dbg !4957

if.end68:                                         ; preds = %if.else46, %if.then51, %if.then41
  %20 = phi i64* [ %12, %if.else46 ], [ %.pre5, %if.then51 ], [ %15, %if.then41 ], !dbg !4955
  %idxprom70 = sext i32 %current_indirect_level to i64, !dbg !4958
  %arrayidx71 = getelementptr inbounds i64, i64* %20, i64 %idxprom70, !dbg !4958
  %21 = load i64, i64* %arrayidx71, align 8, !dbg !4958
  %tobool72 = icmp eq i64 %21, 0, !dbg !4958
  br i1 %tobool72, label %if.then73, label %if.else77, !dbg !4959

if.then73:                                        ; preds = %if.end68
  store i64 %type_size.0, i64* %arrayidx71, align 8, !dbg !4960
  br label %if.end86, !dbg !4961

if.else77:                                        ; preds = %if.end68
  %cmp81 = icmp eq i64 %21, %type_size.0, !dbg !4962
  br i1 %cmp81, label %if.end86, label %if.then83, !dbg !4964

if.then83:                                        ; preds = %if.else77
  tail call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %current_indirect_level, %union.gimple_statement_d* %stmt) #7, !dbg !4965
  br label %if.end86, !dbg !4965

if.end86:                                         ; preds = %if.else77, %if.then73, %if.then83, %if.then38
  ret void, !dbg !4966
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !4967 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4972, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4973, metadata !DIExpression()), !dbg !4974
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4975
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !4976
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !4977
  store i40* %imm_uses, i40** %0, align 8, !dbg !4977
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !4978
  %1 = bitcast i40* %next to i64*, !dbg !4978
  %2 = load i64, i64* %1, align 8, !dbg !4978
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !4979
  store i64 %2, i64* %3, align 8, !dbg !4979
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !4980
  %tobool = icmp eq i8 %call, 0, !dbg !4980
  br i1 %tobool, label %if.end, label %return, !dbg !4982

if.end:                                           ; preds = %entry
  %imm_use2 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4983
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use2, align 8, !dbg !4983
  br label %return, !dbg !4984

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !4974
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !4985
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !4986 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4992, metadata !DIExpression()), !dbg !4993
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4994
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !4994
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !4995
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !4995
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !4996
  %conv1 = zext i1 %cmp to i8, !dbg !4997
  ret i8 %conv1, !dbg !4998
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_accesses_for_phi_node(%struct.matrix_info* %mi, %union.gimple_statement_d* %use_stmt, i32 %current_indirect_level, %struct.simple_bitmap_def* %visited, i8 zeroext %record_accesses) unnamed_addr #5 !dbg !4999 {
entry:
  %tmp_maphi = alloca %struct.matrix_access_phi_node, align 8
  call void @llvm.dbg.value(metadata %struct.matrix_info* %mi, metadata !5003, metadata !DIExpression()), !dbg !5022
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt, metadata !5004, metadata !DIExpression()), !dbg !5022
  call void @llvm.dbg.value(metadata i32 %current_indirect_level, metadata !5005, metadata !DIExpression()), !dbg !5022
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %visited, metadata !5006, metadata !DIExpression()), !dbg !5022
  call void @llvm.dbg.value(metadata i8 %record_accesses, metadata !5007, metadata !DIExpression()), !dbg !5022
  %0 = bitcast %struct.matrix_access_phi_node* %tmp_maphi to i8*, !dbg !5023
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5023
  %phi = getelementptr inbounds %struct.matrix_access_phi_node, %struct.matrix_access_phi_node* %tmp_maphi, i64 0, i32 0, !dbg !5024
  store %union.gimple_statement_d* %use_stmt, %union.gimple_statement_d** %phi, align 8, !dbg !5025
  %1 = load %struct.htab*, %struct.htab** @htab_mat_acc_phi_nodes, align 8, !dbg !5026
  %call = call i8* @htab_find(%struct.htab* %1, i8* nonnull %0) #6, !dbg !5027
  call void @llvm.dbg.value(metadata i8* %call, metadata !5009, metadata !DIExpression()), !dbg !5022
  %tobool = icmp eq i8* %call, null, !dbg !5028
  br i1 %tobool, label %if.end19, label %if.then, !dbg !5029

if.then:                                          ; preds = %entry
  %indirection_level = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5030
  %2 = bitcast i8* %indirection_level to i32*, !dbg !5030
  %3 = load i32, i32* %2, align 8, !dbg !5030
  %cmp = icmp eq i32 %3, %current_indirect_level, !dbg !5031
  br i1 %cmp, label %cleanup, label %if.else, !dbg !5032

if.else:                                          ; preds = %if.then
  %cmp3 = icmp slt i32 %3, %current_indirect_level, !dbg !5033
  br i1 %cmp3, label %cond.true, label %cond.end, !dbg !5033

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !5033

cond.end:                                         ; preds = %if.else, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %current_indirect_level, %if.else ], !dbg !5033
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5011, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !5017, metadata !DIExpression()), !dbg !5034
  store i32 %cond, i32* %2, align 8, !dbg !5035
  call void @llvm.dbg.value(metadata i64 0, metadata !5016, metadata !DIExpression()), !dbg !5034
  br label %for.cond, !dbg !5036

for.cond:                                         ; preds = %for.inc, %cond.end
  %j.0 = phi i64 [ 0, %cond.end ], [ %inc, %for.inc ], !dbg !5037
  %stmt.0 = phi %union.gimple_statement_d* [ null, %cond.end ], [ %stmt.1, %for.inc ], !dbg !5034
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !5017, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !5016, metadata !DIExpression()), !dbg !5034
  %call6 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %use_stmt) #7, !dbg !5038
  %conv = zext i32 %call6 to i64, !dbg !5038
  %cmp7 = icmp ult i64 %j.0, %conv, !dbg !5039
  br i1 %cmp7, label %for.body, label %for.end, !dbg !5040

for.body:                                         ; preds = %for.cond
  %conv9 = trunc i64 %j.0 to i32, !dbg !5041
  %call10 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %use_stmt, i32 %conv9) #7, !dbg !5041
  %call11 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call10) #7, !dbg !5041
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5018, metadata !DIExpression()), !dbg !5042
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5043
  %4 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5043
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %4, align 8, !dbg !5043
  %call12 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %5) #7, !dbg !5045
  %cmp13 = icmp eq i32 %call12, 16, !dbg !5046
  br i1 %cmp13, label %for.inc, label %if.then15, !dbg !5047

if.then15:                                        ; preds = %for.body
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %4, align 8, !dbg !5048
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %6, metadata !5017, metadata !DIExpression()), !dbg !5034
  br label %for.inc, !dbg !5049

for.inc:                                          ; preds = %for.body, %if.then15
  %stmt.1 = phi %union.gimple_statement_d* [ %6, %if.then15 ], [ %stmt.0, %for.body ], !dbg !5034
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1, metadata !5017, metadata !DIExpression()), !dbg !5034
  %inc = add nuw nsw i64 %j.0, 1, !dbg !5050
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5016, metadata !DIExpression()), !dbg !5034
  br label %for.cond, !dbg !5051, !llvm.loop !5052

for.end:                                          ; preds = %for.cond
  %stmt.0.lcssa = phi %union.gimple_statement_d* [ %stmt.0, %for.cond ], !dbg !5034
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0.lcssa, metadata !5017, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0.lcssa, metadata !5017, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0.lcssa, metadata !5017, metadata !DIExpression()), !dbg !5034
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %cond, %union.gimple_statement_d* %stmt.0.lcssa) #7, !dbg !5054
  br label %cleanup, !dbg !5055

if.end19:                                         ; preds = %entry
  %call20 = call i8* @xcalloc(i64 1, i64 16) #6, !dbg !5056
  call void @llvm.dbg.value(metadata i8* %call20, metadata !5009, metadata !DIExpression()), !dbg !5022
  %phi21 = bitcast i8* %call20 to %union.gimple_statement_d**, !dbg !5057
  store %union.gimple_statement_d* %use_stmt, %union.gimple_statement_d** %phi21, align 8, !dbg !5058
  %indirection_level22 = getelementptr inbounds i8, i8* %call20, i64 8, !dbg !5059
  %7 = bitcast i8* %indirection_level22 to i32*, !dbg !5059
  store i32 %current_indirect_level, i32* %7, align 8, !dbg !5060
  %8 = load %struct.htab*, %struct.htab** @htab_mat_acc_phi_nodes, align 8, !dbg !5061
  %call23 = call i8** @htab_find_slot(%struct.htab* %8, i8* %call20, i32 1) #6, !dbg !5062
  call void @llvm.dbg.value(metadata i8** %call23, metadata !5010, metadata !DIExpression()), !dbg !5022
  %tobool24 = icmp eq i8** %call23, null, !dbg !5063
  br i1 %tobool24, label %cond.true25, label %cond.end27, !dbg !5063

cond.true25:                                      ; preds = %if.end19
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1174, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5063
  br label %cond.end27, !dbg !5063

cond.end27:                                       ; preds = %if.end19, %cond.true25
  store i8* %call20, i8** %call23, align 8, !dbg !5064
  %call29 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %use_stmt) #7, !dbg !5065
  %call30 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call29) #7, !dbg !5065
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5065
  %9 = bitcast %union.tree_node** %version to i32*, !dbg !5065
  %10 = load i32, i32* %9, align 8, !dbg !5065
  %div = lshr i32 %10, 6, !dbg !5065
  %idxprom = zext i32 %div to i64, !dbg !5065
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %visited, i64 0, i32 3, i64 %idxprom, !dbg !5065
  %11 = load i64, i64* %arrayidx, align 8, !dbg !5065
  %call32 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %use_stmt) #7, !dbg !5065
  %call33 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call32) #7, !dbg !5065
  %version35 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5065
  %12 = bitcast %union.tree_node** %version35 to i32*, !dbg !5065
  %13 = load i32, i32* %12, align 8, !dbg !5065
  %rem = and i32 %13, 63, !dbg !5065
  %sh_prom = zext i32 %rem to i64, !dbg !5065
  %14 = shl i64 1, %sh_prom, !dbg !5065
  %15 = and i64 %11, %14, !dbg !5065
  %tobool36 = icmp eq i64 %15, 0, !dbg !5065
  br i1 %tobool36, label %if.then37, label %cleanup, !dbg !5067

if.then37:                                        ; preds = %cond.end27
  %call38 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %use_stmt) #7, !dbg !5068
  %call39 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call38) #7, !dbg !5068
  %version41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5068
  %16 = bitcast %union.tree_node** %version41 to i32*, !dbg !5068
  %17 = load i32, i32* %16, align 8, !dbg !5068
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %visited, i32 %17) #7, !dbg !5070
  %call42 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %use_stmt) #7, !dbg !5071
  %call43 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call42) #7, !dbg !5071
  call fastcc void @analyze_matrix_accesses(%struct.matrix_info* %mi, %union.tree_node* %call43, i32 %current_indirect_level, i8 zeroext 0, %struct.simple_bitmap_def* %visited, i8 zeroext %record_accesses) #7, !dbg !5072
  %call44 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %use_stmt) #7, !dbg !5073
  %call45 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call44) #7, !dbg !5073
  %version47 = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5073
  %18 = bitcast %union.tree_node** %version47 to i32*, !dbg !5073
  %19 = load i32, i32* %18, align 8, !dbg !5073
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %visited, i32 %19) #7, !dbg !5074
  br label %cleanup, !dbg !5075

cleanup:                                          ; preds = %cond.end27, %if.then37, %if.then, %for.end
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5076
  ret void, !dbg !5076
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @analyze_accesses_for_call_stmt(%struct.matrix_info* %mi, %union.tree_node* %ssa_var, %union.gimple_statement_d* %use_stmt, i32 %current_indirect_level) unnamed_addr #5 !dbg !5077 {
entry:
  %lhs_acc = alloca %struct.ssa_acc_in_tree, align 8
  %rhs_acc = alloca %struct.ssa_acc_in_tree, align 8
  call void @llvm.dbg.value(metadata %struct.matrix_info* %mi, metadata !5081, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.value(metadata %union.tree_node* %ssa_var, metadata !5082, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt, metadata !5083, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.value(metadata i32 %current_indirect_level, metadata !5084, metadata !DIExpression()), !dbg !5108
  %call = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %use_stmt) #7, !dbg !5109
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5085, metadata !DIExpression()), !dbg !5108
  %call1 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %use_stmt) #7, !dbg !5110
  %tobool = icmp eq %union.tree_node* %call1, null, !dbg !5110
  br i1 %tobool, label %if.end39, label %if.then, !dbg !5111

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %use_stmt) #7, !dbg !5112
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5086, metadata !DIExpression()), !dbg !5113
  %0 = bitcast %struct.ssa_acc_in_tree* %lhs_acc to i8*, !dbg !5114
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #8, !dbg !5114
  %1 = bitcast %struct.ssa_acc_in_tree* %rhs_acc to i8*, !dbg !5114
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1) #8, !dbg !5114
  %call3 = call i8* @memset(i8* nonnull %0, i32 0, i64 48) #6, !dbg !5115
  %call4 = call i8* @memset(i8* nonnull %1, i32 0, i64 48) #6, !dbg !5116
  %ssa_var5 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %lhs_acc, i64 0, i32 0, !dbg !5117
  store %union.tree_node* %ssa_var, %union.tree_node** %ssa_var5, align 8, !dbg !5118
  %t_code = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %lhs_acc, i64 0, i32 1, !dbg !5119
  store i32 0, i32* %t_code, align 8, !dbg !5120
  call void @llvm.dbg.value(metadata %struct.ssa_acc_in_tree* %lhs_acc, metadata !5089, metadata !DIExpression(DW_OP_deref)), !dbg !5113
  call fastcc void @ssa_accessed_in_tree(%union.tree_node* %call2, %struct.ssa_acc_in_tree* nonnull %lhs_acc) #7, !dbg !5121
  %ssa_var6 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %rhs_acc, i64 0, i32 0, !dbg !5122
  store %union.tree_node* %ssa_var, %union.tree_node** %ssa_var6, align 8, !dbg !5123
  %t_code7 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %rhs_acc, i64 0, i32 1, !dbg !5124
  store i32 0, i32* %t_code7, align 8, !dbg !5125
  call void @llvm.dbg.value(metadata %struct.ssa_acc_in_tree* %rhs_acc, metadata !5098, metadata !DIExpression(DW_OP_deref)), !dbg !5113
  call fastcc void @ssa_accessed_in_call_rhs(%union.gimple_statement_d* %use_stmt, %struct.ssa_acc_in_tree* nonnull %rhs_acc) #7, !dbg !5126
  %var_found = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %lhs_acc, i64 0, i32 5, !dbg !5127
  %2 = load i8, i8* %var_found, align 8, !dbg !5127
  %tobool8 = icmp eq i8 %2, 0, !dbg !5129
  br i1 %tobool8, label %if.then.lor.lhs.false_crit_edge, label %land.lhs.true, !dbg !5130

if.then.lor.lhs.false_crit_edge:                  ; preds = %if.then
  %var_found15.phi.trans.insert = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %rhs_acc, i64 0, i32 5, !dbg !5131
  %.pre = load i8, i8* %var_found15.phi.trans.insert, align 8, !dbg !5132
  br label %lor.lhs.false, !dbg !5130

land.lhs.true:                                    ; preds = %if.then
  %var_found9 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %rhs_acc, i64 0, i32 5, !dbg !5133
  %3 = load i8, i8* %var_found9, align 8, !dbg !5133
  %tobool11 = icmp eq i8 %3, 0, !dbg !5134
  br i1 %tobool11, label %lor.lhs.false, label %land.lhs.true12, !dbg !5135

land.lhs.true12:                                  ; preds = %land.lhs.true
  %4 = load i32, i32* %t_code, align 8, !dbg !5136
  %cmp = icmp eq i32 %4, 47, !dbg !5137
  br i1 %cmp, label %if.then20, label %lor.lhs.false, !dbg !5138

lor.lhs.false:                                    ; preds = %if.then.lor.lhs.false_crit_edge, %land.lhs.true, %land.lhs.true12
  %5 = phi i8 [ %.pre, %if.then.lor.lhs.false_crit_edge ], [ 0, %land.lhs.true ], [ %3, %land.lhs.true12 ], !dbg !5132
  %tobool16 = icmp eq i8 %5, 0, !dbg !5139
  br i1 %tobool16, label %land.lhs.true17, label %if.end, !dbg !5140

land.lhs.true17:                                  ; preds = %lor.lhs.false
  br i1 %tobool8, label %if.then20, label %if.end, !dbg !5141

if.then20:                                        ; preds = %land.lhs.true17, %land.lhs.true12
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %current_indirect_level, %union.gimple_statement_d* %use_stmt) #7, !dbg !5142
  br label %cleanup, !dbg !5144

if.end:                                           ; preds = %land.lhs.true17, %lor.lhs.false
  br i1 %tobool16, label %cond.end, label %lor.lhs.false23, !dbg !5145

lor.lhs.false23:                                  ; preds = %if.end
  br i1 %tobool8, label %cond.end, label %cond.true, !dbg !5145

cond.true:                                        ; preds = %lor.lhs.false23
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1082, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5145
  %.pre2 = load i8, i8* %var_found, align 8, !dbg !5146
  br label %cond.end, !dbg !5145

cond.end:                                         ; preds = %lor.lhs.false23, %if.end, %cond.true
  %6 = phi i8 [ 0, %lor.lhs.false23 ], [ %2, %if.end ], [ %.pre2, %cond.true ], !dbg !5146
  %tobool27 = icmp eq i8 %6, 0, !dbg !5147
  br i1 %tobool27, label %cleanup, label %if.then28, !dbg !5148

if.then28:                                        ; preds = %cond.end
  %add = add nsw i32 %current_indirect_level, 1, !dbg !5149
  call void @llvm.dbg.value(metadata i32 %add, metadata !5099, metadata !DIExpression()), !dbg !5150
  %7 = load i32, i32* %t_code, align 8, !dbg !5151
  %cmp30 = icmp eq i32 %7, 47, !dbg !5151
  br i1 %cmp30, label %cond.end34, label %cond.true32, !dbg !5151

cond.true32:                                      ; preds = %if.then28
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1090, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5151
  br label %cond.end34, !dbg !5151

cond.end34:                                       ; preds = %if.then28, %cond.true32
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %add, %union.gimple_statement_d* %use_stmt) #7, !dbg !5152
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %cond.end34, %if.then20
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then20 ], [ false, %cond.end34 ], [ true, %cond.end ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1) #8, !dbg !5153
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #8, !dbg !5153
  %tobool40 = icmp ne %union.tree_node* %call, null, !dbg !5154
  %or.cond = and i1 %cleanup.dest.slot.0, %tobool40
  br i1 %or.cond, label %if.then41, label %cleanup73

if.end39:                                         ; preds = %entry
  %tobool40.old = icmp eq %union.tree_node* %call, null, !dbg !5154
  br i1 %tobool40.old, label %cleanup73, label %if.then41, !dbg !5155

if.then41:                                        ; preds = %if.end39, %cleanup
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !5156
  %bf.load = load i32, i32* %function_code, align 8, !dbg !5156
  %bf.clear = and i32 %bf.load, 2047, !dbg !5156
  %cmp42 = icmp eq i32 %bf.clear, 455, !dbg !5157
  br i1 %cmp42, label %if.else, label %if.then44, !dbg !5158

if.then44:                                        ; preds = %if.then41
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5159
  %tobool45 = icmp eq %struct._IO_FILE* %8, null, !dbg !5159
  br i1 %tobool45, label %if.end50, label %if.then46, !dbg !5162

if.then46:                                        ; preds = %if.then44
  %decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 0, !dbg !5163
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5163
  %call47 = call i8* @get_name(%union.tree_node* %9) #6, !dbg !5164
  %call48 = call i8* @get_name(%union.tree_node* %call) #6, !dbg !5165
  %call49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6, i64 0, i64 0), i8* %call47, i8* %call48, i32 %current_indirect_level) #6, !dbg !5166
  br label %if.end50, !dbg !5166

if.end50:                                         ; preds = %if.then44, %if.then46
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %current_indirect_level, %union.gimple_statement_d* %use_stmt) #7, !dbg !5167
  br label %cleanup73, !dbg !5168

if.else:                                          ; preds = %if.then41
  %free_stmts = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 8, !dbg !5169
  %10 = load %struct.free_info*, %struct.free_info** %free_stmts, align 8, !dbg !5169
  %idxprom = sext i32 %current_indirect_level to i64, !dbg !5170
  %stmt = getelementptr inbounds %struct.free_info, %struct.free_info* %10, i64 %idxprom, i32 0, !dbg !5171
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5171
  %cmp51 = icmp eq %union.gimple_statement_d* %11, null, !dbg !5172
  br i1 %cmp51, label %if.else61, label %land.lhs.true53, !dbg !5173

land.lhs.true53:                                  ; preds = %if.else
  %cmp58 = icmp eq %union.gimple_statement_d* %11, %use_stmt, !dbg !5174
  br i1 %cmp58, label %if.else61, label %if.then60, !dbg !5175

if.then60:                                        ; preds = %land.lhs.true53
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %current_indirect_level, %union.gimple_statement_d* %use_stmt) #7, !dbg !5176
  br label %cleanup73, !dbg !5176

if.else61:                                        ; preds = %land.lhs.true53, %if.else
  call void @llvm.dbg.value(metadata i32 %current_indirect_level, metadata !5102, metadata !DIExpression()), !dbg !5177
  store %union.gimple_statement_d* %use_stmt, %union.gimple_statement_d** %stmt, align 8, !dbg !5178
  %12 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !5179
  %13 = load %struct.free_info*, %struct.free_info** %free_stmts, align 8, !dbg !5180
  %func = getelementptr inbounds %struct.free_info, %struct.free_info* %13, i64 %idxprom, i32 1, !dbg !5181
  %14 = bitcast %union.tree_node** %func to i64*, !dbg !5182
  store i64 %12, i64* %14, align 8, !dbg !5182
  br label %cleanup73

cleanup73:                                        ; preds = %if.end39, %if.then60, %if.else61, %if.end50, %cleanup
  ret i32 %current_indirect_level, !dbg !5183
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @analyze_accesses_for_assign_stmt(%struct.matrix_info* %mi, %union.tree_node* %ssa_var, %union.gimple_statement_d* %use_stmt, i32 %current_indirect_level, i8 zeroext %last_op, %struct.simple_bitmap_def* %visited, i8 zeroext %record_accesses) unnamed_addr #5 !dbg !5184 {
entry:
  %lhs_acc = alloca %struct.ssa_acc_in_tree, align 8
  %rhs_acc = alloca %struct.ssa_acc_in_tree, align 8
  call void @llvm.dbg.value(metadata %struct.matrix_info* %mi, metadata !5188, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata %union.tree_node* %ssa_var, metadata !5189, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %use_stmt, metadata !5190, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i32 %current_indirect_level, metadata !5191, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i8 %last_op, metadata !5192, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %visited, metadata !5193, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i8 %record_accesses, metadata !5194, metadata !DIExpression()), !dbg !5217
  %call = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %use_stmt) #6, !dbg !5218
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5195, metadata !DIExpression()), !dbg !5217
  %0 = bitcast %struct.ssa_acc_in_tree* %lhs_acc to i8*, !dbg !5219
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #8, !dbg !5219
  %1 = bitcast %struct.ssa_acc_in_tree* %rhs_acc to i8*, !dbg !5219
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1) #8, !dbg !5219
  %call1 = call i8* @memset(i8* nonnull %0, i32 0, i64 48) #6, !dbg !5220
  %call2 = call i8* @memset(i8* nonnull %1, i32 0, i64 48) #6, !dbg !5221
  %ssa_var3 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %lhs_acc, i64 0, i32 0, !dbg !5222
  store %union.tree_node* %ssa_var, %union.tree_node** %ssa_var3, align 8, !dbg !5223
  %t_code = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %lhs_acc, i64 0, i32 1, !dbg !5224
  store i32 0, i32* %t_code, align 8, !dbg !5225
  call void @llvm.dbg.value(metadata %struct.ssa_acc_in_tree* %lhs_acc, metadata !5196, metadata !DIExpression(DW_OP_deref)), !dbg !5217
  call fastcc void @ssa_accessed_in_tree(%union.tree_node* %call, %struct.ssa_acc_in_tree* nonnull %lhs_acc) #7, !dbg !5226
  %ssa_var4 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %rhs_acc, i64 0, i32 0, !dbg !5227
  store %union.tree_node* %ssa_var, %union.tree_node** %ssa_var4, align 8, !dbg !5228
  %t_code5 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %rhs_acc, i64 0, i32 1, !dbg !5229
  store i32 0, i32* %t_code5, align 8, !dbg !5230
  call void @llvm.dbg.value(metadata %struct.ssa_acc_in_tree* %rhs_acc, metadata !5197, metadata !DIExpression(DW_OP_deref)), !dbg !5217
  call fastcc void @ssa_accessed_in_assign_rhs(%union.gimple_statement_d* %use_stmt, %struct.ssa_acc_in_tree* nonnull %rhs_acc) #7, !dbg !5231
  %var_found = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %lhs_acc, i64 0, i32 5, !dbg !5232
  %2 = load i8, i8* %var_found, align 8, !dbg !5232
  %tobool = icmp eq i8 %2, 0, !dbg !5234
  br i1 %tobool, label %entry.lor.lhs.false_crit_edge, label %land.lhs.true, !dbg !5235

entry.lor.lhs.false_crit_edge:                    ; preds = %entry
  %var_found12.phi.trans.insert = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %rhs_acc, i64 0, i32 5, !dbg !5236
  %.pre = load i8, i8* %var_found12.phi.trans.insert, align 8, !dbg !5237
  br label %lor.lhs.false, !dbg !5235

land.lhs.true:                                    ; preds = %entry
  %var_found6 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %rhs_acc, i64 0, i32 5, !dbg !5238
  %3 = load i8, i8* %var_found6, align 8, !dbg !5238
  %tobool8 = icmp eq i8 %3, 0, !dbg !5239
  br i1 %tobool8, label %lor.lhs.false, label %land.lhs.true9, !dbg !5240

land.lhs.true9:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %t_code, align 8, !dbg !5241
  %cmp = icmp eq i32 %4, 47, !dbg !5242
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5243

lor.lhs.false:                                    ; preds = %entry.lor.lhs.false_crit_edge, %land.lhs.true, %land.lhs.true9
  %5 = phi i8 [ %.pre, %entry.lor.lhs.false_crit_edge ], [ 0, %land.lhs.true ], [ %3, %land.lhs.true9 ], !dbg !5237
  %var_found12 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %rhs_acc, i64 0, i32 5, !dbg !5237
  %tobool13 = icmp eq i8 %5, 0, !dbg !5244
  br i1 %tobool13, label %land.lhs.true14, label %if.end, !dbg !5245

land.lhs.true14:                                  ; preds = %lor.lhs.false
  br i1 %tobool, label %if.then, label %if.end, !dbg !5246

if.then:                                          ; preds = %land.lhs.true14, %land.lhs.true9
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %current_indirect_level, %union.gimple_statement_d* %use_stmt) #7, !dbg !5247
  br label %cleanup159, !dbg !5249

if.end:                                           ; preds = %land.lhs.true14, %lor.lhs.false
  br i1 %tobool13, label %cond.end, label %lor.lhs.false19, !dbg !5250

lor.lhs.false19:                                  ; preds = %if.end
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5250

cond.true:                                        ; preds = %lor.lhs.false19
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1222, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5250
  %.pre6 = load i8, i8* %var_found, align 8, !dbg !5251
  br label %cond.end, !dbg !5250

cond.end:                                         ; preds = %lor.lhs.false19, %if.end, %cond.true
  %6 = phi i8 [ 0, %lor.lhs.false19 ], [ %2, %if.end ], [ %.pre6, %cond.true ], !dbg !5251
  %tobool23 = icmp eq i8 %6, 0, !dbg !5252
  br i1 %tobool23, label %if.end50, label %if.then24, !dbg !5253

if.then24:                                        ; preds = %cond.end
  %add = add nsw i32 %current_indirect_level, 1, !dbg !5254
  call void @llvm.dbg.value(metadata i32 %add, metadata !5198, metadata !DIExpression()), !dbg !5255
  %7 = load i32, i32* %t_code, align 8, !dbg !5256
  %cmp26 = icmp eq i32 %7, 47, !dbg !5256
  br i1 %cmp26, label %cond.end30, label %cond.true28, !dbg !5256

cond.true28:                                      ; preds = %if.then24
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1230, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5256
  br label %cond.end30, !dbg !5256

cond.end30:                                       ; preds = %if.then24, %cond.true28
  %call32 = call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* %use_stmt) #6, !dbg !5257
  %tobool34 = icmp eq i8 %call32, 0, !dbg !5257
  br i1 %tobool34, label %lor.lhs.false35, label %lor.lhs.false39, !dbg !5258

lor.lhs.false35:                                  ; preds = %cond.end30
  %call36 = call fastcc zeroext i8 @gimple_assign_cast_p(%union.gimple_statement_d* %use_stmt) #7, !dbg !5259
  %tobool38 = icmp eq i8 %call36, 0, !dbg !5259
  br i1 %tobool38, label %if.then43, label %lor.lhs.false39, !dbg !5260

lor.lhs.false39:                                  ; preds = %lor.lhs.false35, %cond.end30
  %call40 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %use_stmt) #7, !dbg !5261
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5261
  %bf.load = load i64, i64* %8, align 8, !dbg !5261
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !5262
  %cmp41 = icmp eq i64 %bf.cast5, 141, !dbg !5262
  br i1 %cmp41, label %if.else, label %if.then43, !dbg !5263

if.then43:                                        ; preds = %lor.lhs.false39, %lor.lhs.false35
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %add, %union.gimple_statement_d* %use_stmt) #7, !dbg !5264
  br label %cleanup159, !dbg !5264

if.else:                                          ; preds = %lor.lhs.false39
  %call44 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %use_stmt) #7, !dbg !5265
  %def_stmt45 = getelementptr inbounds %union.tree_node, %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5265
  %9 = bitcast %union.tree_node** %def_stmt45 to %union.gimple_statement_d**, !dbg !5265
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %9, align 8, !dbg !5265
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %10, metadata !5201, metadata !DIExpression()), !dbg !5266
  call fastcc void @analyze_matrix_allocation_site(%struct.matrix_info* %mi, %union.gimple_statement_d* %10, i32 %add, %struct.simple_bitmap_def* %visited) #7, !dbg !5267
  %tobool46 = icmp eq i8 %record_accesses, 0, !dbg !5268
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !5270

if.then47:                                        ; preds = %if.else
  call fastcc void @record_access_alloc_site_info(%struct.matrix_info* %mi, %union.gimple_statement_d* %use_stmt, %union.tree_node* null, %union.tree_node* null, i32 %add, i8 zeroext 1) #7, !dbg !5271
  br label %if.end48, !dbg !5271

if.end48:                                         ; preds = %if.else, %if.then47
  call fastcc void @update_type_size(%struct.matrix_info* %mi, %union.gimple_statement_d* %use_stmt, %union.tree_node* null, i32 %add) #7, !dbg !5272
  br label %cleanup159

if.end50:                                         ; preds = %cond.end
  %11 = load i8, i8* %var_found12, align 8, !dbg !5273
  %tobool52 = icmp eq i8 %11, 0, !dbg !5274
  br i1 %tobool52, label %cleanup159, label %if.then53, !dbg !5275

if.then53:                                        ; preds = %if.end50
  %12 = load i32, i32* %t_code5, align 8, !dbg !5276
  %cmp55 = icmp eq i32 %12, 47, !dbg !5278
  br i1 %cmp55, label %if.end66, label %land.lhs.true57, !dbg !5279

land.lhs.true57:                                  ; preds = %if.then53
  %cmp59 = icmp eq i32 %12, 66, !dbg !5280
  br i1 %cmp59, label %if.end66, label %land.lhs.true61, !dbg !5281

land.lhs.true61:                                  ; preds = %land.lhs.true57
  %cmp63 = icmp eq i32 %12, 141, !dbg !5282
  br i1 %cmp63, label %if.end66, label %if.then65, !dbg !5283

if.then65:                                        ; preds = %land.lhs.true61
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %current_indirect_level, %union.gimple_statement_d* %use_stmt) #7, !dbg !5284
  br label %cleanup159, !dbg !5286

if.end66:                                         ; preds = %land.lhs.true61, %land.lhs.true57, %if.then53
  br i1 %cmp55, label %if.then70, label %if.else75, !dbg !5287

if.then70:                                        ; preds = %if.end66
  %tobool71 = icmp eq i8 %record_accesses, 0, !dbg !5288
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !5291

if.then72:                                        ; preds = %if.then70
  call fastcc void @record_access_alloc_site_info(%struct.matrix_info* %mi, %union.gimple_statement_d* %use_stmt, %union.tree_node* null, %union.tree_node* null, i32 %current_indirect_level, i8 zeroext 1) #7, !dbg !5292
  br label %if.end73, !dbg !5292

if.end73:                                         ; preds = %if.then70, %if.then72
  %add74 = add nsw i32 %current_indirect_level, 1, !dbg !5293
  call void @llvm.dbg.value(metadata i32 %add74, metadata !5191, metadata !DIExpression()), !dbg !5217
  br label %if.end124, !dbg !5294

if.else75:                                        ; preds = %if.end66
  %cmp77 = icmp eq i32 %12, 66, !dbg !5295
  br i1 %cmp77, label %if.then79, label %if.end124, !dbg !5296

if.then79:                                        ; preds = %if.else75
  %second_op = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %rhs_acc, i64 0, i32 4, !dbg !5297
  %13 = load %union.tree_node*, %union.tree_node** %second_op, align 8, !dbg !5297
  %tobool80 = icmp eq %union.tree_node* %13, null, !dbg !5297
  br i1 %tobool80, label %cond.true81, label %cond.end83, !dbg !5297

cond.true81:                                      ; preds = %if.then79
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 1269, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5297
  br label %cond.end83, !dbg !5297

cond.end83:                                       ; preds = %if.then79, %cond.true81
  %tobool85 = icmp eq i8 %last_op, 0, !dbg !5298
  br i1 %tobool85, label %if.else87, label %if.then86, !dbg !5299

if.then86:                                        ; preds = %cond.end83
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %current_indirect_level, %union.gimple_statement_d* %use_stmt) #7, !dbg !5300
  br label %if.end124, !dbg !5300

if.else87:                                        ; preds = %cond.end83
  %call88 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %use_stmt) #7, !dbg !5301
  call void @llvm.dbg.value(metadata %union.tree_node* %call88, metadata !5212, metadata !DIExpression()), !dbg !5302
  %call89 = call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %use_stmt) #7, !dbg !5303
  call void @llvm.dbg.value(metadata %union.tree_node* %call89, metadata !5213, metadata !DIExpression()), !dbg !5302
  %cmp90 = icmp eq %union.tree_node* %call88, %ssa_var, !dbg !5304
  %call89.call88 = select i1 %cmp90, %union.tree_node* %call89, %union.tree_node* %call88, !dbg !5305
  call void @llvm.dbg.value(metadata %union.tree_node* %call89.call88, metadata !5213, metadata !DIExpression()), !dbg !5302
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call89.call88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5306
  %bf.load97 = load i64, i64* %14, align 8, !dbg !5306
  %bf.cast994 = and i64 %bf.load97, 65535, !dbg !5308
  %cmp100 = icmp eq i64 %bf.cast994, 23, !dbg !5308
  br i1 %cmp100, label %if.then102, label %if.else108, !dbg !5309

if.then102:                                       ; preds = %if.else87
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5310
  %15 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5310
  %int_cst103 = getelementptr inbounds %union.tree_node, %union.tree_node* %call89.call88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5311
  %low = bitcast i32* %int_cst103 to i64*, !dbg !5311
  %16 = load i64, i64* %low, align 8, !dbg !5311
  %call106 = call i64 @int_size_in_bytes(%union.tree_node* %15) #6, !dbg !5312
  %div = udiv i64 %16, %call106, !dbg !5313
  %call107 = call %union.tree_node* @build_int_cst(%union.tree_node* %15, i64 %div) #6, !dbg !5314
  call void @llvm.dbg.value(metadata %union.tree_node* %call107, metadata !5204, metadata !DIExpression()), !dbg !5302
  br label %if.end116, !dbg !5315

if.else108:                                       ; preds = %if.else87
  %def_stmt110 = getelementptr inbounds %union.tree_node, %union.tree_node* %call89.call88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5316
  %17 = bitcast %union.tree_node** %def_stmt110 to %union.gimple_statement_d**, !dbg !5316
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %17, align 8, !dbg !5316
  %call111 = call fastcc %union.tree_node* @get_index_from_offset(%union.tree_node* %call89.call88, %union.gimple_statement_d* %18) #7, !dbg !5318
  call void @llvm.dbg.value(metadata %union.tree_node* %call111, metadata !5204, metadata !DIExpression()), !dbg !5302
  %cmp112 = icmp eq %union.tree_node* %call111, null, !dbg !5319
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !5321

if.then114:                                       ; preds = %if.else108
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %current_indirect_level, %union.gimple_statement_d* %use_stmt) #7, !dbg !5322
  br label %cleanup, !dbg !5324

if.end116:                                        ; preds = %if.else108, %if.then102
  %index.0 = phi %union.tree_node* [ %call107, %if.then102 ], [ %call111, %if.else108 ], !dbg !5325
  call void @llvm.dbg.value(metadata %union.tree_node* %index.0, metadata !5204, metadata !DIExpression()), !dbg !5302
  %tobool117 = icmp eq i8 %record_accesses, 0, !dbg !5326
  br i1 %tobool117, label %cleanup, label %if.then118, !dbg !5328

if.then118:                                       ; preds = %if.end116
  call fastcc void @record_access_alloc_site_info(%struct.matrix_info* %mi, %union.gimple_statement_d* %use_stmt, %union.tree_node* %call89.call88, %union.tree_node* %index.0, i32 %current_indirect_level, i8 zeroext 0) #7, !dbg !5329
  br label %cleanup, !dbg !5329

cleanup:                                          ; preds = %if.end116, %if.then118, %if.then114
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then114 ], [ true, %if.then118 ], [ true, %if.end116 ]
  br i1 %cleanup.dest.slot.0, label %if.end124, label %cleanup159

if.end124:                                        ; preds = %if.else75, %cleanup, %if.then86, %if.end73
  %current_indirect_level.addr.0 = phi i32 [ %add74, %if.end73 ], [ %current_indirect_level, %if.then86 ], [ %current_indirect_level, %cleanup ], [ %current_indirect_level, %if.else75 ]
  call void @llvm.dbg.value(metadata i32 %current_indirect_level.addr.0, metadata !5191, metadata !DIExpression()), !dbg !5217
  %19 = load i32, i32* %t_code, align 8, !dbg !5330
  %cmp126 = icmp eq i32 %19, 47, !dbg !5331
  br i1 %cmp126, label %if.end124.if.then135_crit_edge, label %lor.lhs.false128, !dbg !5332

if.end124.if.then135_crit_edge:                   ; preds = %if.end124
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5333
  %bf.load138.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !5335
  br label %if.then135, !dbg !5332

lor.lhs.false128:                                 ; preds = %if.end124
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5336
  %bf.load130 = load i64, i64* %20, align 8, !dbg !5336
  %bf.cast1322 = and i64 %bf.load130, 65535, !dbg !5337
  %cmp133 = icmp eq i64 %bf.cast1322, 141, !dbg !5337
  br i1 %cmp133, label %if.else152, label %if.then135, !dbg !5338

if.then135:                                       ; preds = %if.end124.if.then135_crit_edge, %lor.lhs.false128
  %bf.load138 = phi i64 [ %bf.load138.pre, %if.end124.if.then135_crit_edge ], [ %bf.load130, %lor.lhs.false128 ], !dbg !5335
  call void @llvm.dbg.value(metadata i32 %current_indirect_level.addr.0, metadata !5214, metadata !DIExpression()), !dbg !5339
  %bf.cast1403 = and i64 %bf.load138, 65535, !dbg !5340
  %cmp141 = icmp eq i64 %bf.cast1403, 32, !dbg !5340
  br i1 %cmp141, label %lor.lhs.false143, label %if.then146, !dbg !5341

lor.lhs.false143:                                 ; preds = %if.then135
  %decl = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 0, !dbg !5342
  %21 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5342
  %cmp144 = icmp eq %union.tree_node* %call, %21, !dbg !5343
  br i1 %cmp144, label %if.else147, label %if.then146, !dbg !5344

if.then146:                                       ; preds = %lor.lhs.false143, %if.then135
  call fastcc void @mark_min_matrix_escape_level(%struct.matrix_info* %mi, i32 %current_indirect_level.addr.0, %union.gimple_statement_d* %use_stmt) #7, !dbg !5345
  br label %cleanup159, !dbg !5345

if.else147:                                       ; preds = %lor.lhs.false143
  call fastcc void @analyze_matrix_allocation_site(%struct.matrix_info* %mi, %union.gimple_statement_d* %use_stmt, i32 %current_indirect_level.addr.0, %struct.simple_bitmap_def* %visited) #7, !dbg !5346
  %tobool148 = icmp eq i8 %record_accesses, 0, !dbg !5348
  br i1 %tobool148, label %cleanup159, label %if.then149, !dbg !5350

if.then149:                                       ; preds = %if.else147
  call fastcc void @record_access_alloc_site_info(%struct.matrix_info* %mi, %union.gimple_statement_d* %use_stmt, %union.tree_node* null, %union.tree_node* null, i32 %current_indirect_level.addr.0, i8 zeroext 1) #7, !dbg !5351
  br label %cleanup159, !dbg !5351

if.else152:                                       ; preds = %lor.lhs.false128
  %22 = load i32, i32* %t_code5, align 8, !dbg !5352
  %cmp154 = icmp eq i32 %22, 66, !dbg !5354
  %conv156 = zext i1 %cmp154 to i8, !dbg !5355
  call fastcc void @analyze_matrix_accesses(%struct.matrix_info* %mi, %union.tree_node* %call, i32 %current_indirect_level.addr.0, i8 zeroext %conv156, %struct.simple_bitmap_def* %visited, i8 zeroext %record_accesses) #7, !dbg !5356
  br label %cleanup159

cleanup159:                                       ; preds = %if.else147, %if.end50, %if.then146, %if.then149, %if.else152, %if.then43, %if.end48, %cleanup, %if.then65, %if.then
  %retval.1 = phi i32 [ %current_indirect_level, %if.then ], [ %current_indirect_level, %if.then65 ], [ %current_indirect_level, %cleanup ], [ %current_indirect_level, %if.end48 ], [ %current_indirect_level, %if.then43 ], [ %current_indirect_level, %if.end50 ], [ %current_indirect_level.addr.0, %if.then146 ], [ %current_indirect_level.addr.0, %if.then149 ], [ %current_indirect_level.addr.0, %if.else147 ], [ %current_indirect_level.addr.0, %if.else152 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1) #8, !dbg !5357
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #8, !dbg !5357
  ret i32 %retval.1, !dbg !5357
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5358 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5362, metadata !DIExpression()), !dbg !5364
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5365
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5365
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !5363, metadata !DIExpression()), !dbg !5364
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !5366
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5366
  %2 = load i64, i64* %1, align 8, !dbg !5366
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !5367
  store i64 %2, i64* %3, align 8, !dbg !5367
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !5368
  %tobool = icmp eq i8 %call, 0, !dbg !5368
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5370

if.end:                                           ; preds = %entry
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5371
  br label %cleanup, !dbg !5372

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !5364
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5373
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5374 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5376, metadata !DIExpression()), !dbg !5377
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5378
  ret %union.tree_node* %call, !dbg !5379
}

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5380 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5384, metadata !DIExpression()), !dbg !5385
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !5386
  %0 = load i32, i32* %nargs, align 4, !dbg !5386
  ret i32 %0, !dbg !5387
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5388 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5392, metadata !DIExpression()), !dbg !5393
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5394
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5394
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5395
  ret %union.tree_node* %1, !dbg !5396
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5397 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5401, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %i, metadata !5402, metadata !DIExpression()), !dbg !5403
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !5404
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !5405
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !5406
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !5407 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5412, metadata !DIExpression()), !dbg !5413
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5414
  ret %union.tree_node* %0, !dbg !5415
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5416 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5418, metadata !DIExpression()), !dbg !5419
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !5420
  ret %union.tree_node** %result, !dbg !5421
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !5422 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !5426, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !5427, metadata !DIExpression()), !dbg !5431
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !5432
  %0 = load i8*, i8** %popcount, align 8, !dbg !5432
  %tobool = icmp eq i8* %0, null, !dbg !5433
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !5434

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !5435
  %.pre2 = zext i32 %.pre to i64, !dbg !5436
  %.pre3 = shl i64 1, %.pre2, !dbg !5436
  %.pre4 = lshr i32 %bitno, 6, !dbg !5437
  %.pre5 = zext i32 %.pre4 to i64, !dbg !5438
  br label %if.end7, !dbg !5434

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !5439
  %idxprom = zext i32 %div to i64, !dbg !5439
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !5439
  %1 = load i64, i64* %arrayidx, align 8, !dbg !5439
  %rem = and i32 %bitno, 63, !dbg !5439
  %sh_prom = zext i32 %rem to i64, !dbg !5439
  %2 = shl i64 1, %sh_prom, !dbg !5440
  %3 = and i64 %1, %2, !dbg !5440
  %tobool1 = icmp eq i64 %3, 0, !dbg !5440
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !5442

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !5443
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !5444
  %inc = add i8 %4, 1, !dbg !5444
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !5444
  br label %if.end7, !dbg !5443

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !5438
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !5436
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !5438
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !5445
  %or = or i64 %5, %shl.pre-phi, !dbg !5445
  store i64 %or, i64* %arrayidx13, align 8, !dbg !5445
  ret void, !dbg !5446
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !5447 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !5449, metadata !DIExpression()), !dbg !5454
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !5450, metadata !DIExpression()), !dbg !5454
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !5455
  %0 = load i8*, i8** %popcount, align 8, !dbg !5455
  %tobool = icmp eq i8* %0, null, !dbg !5456
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !5457

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !5458
  %.pre2 = zext i32 %.pre to i64, !dbg !5459
  %.pre3 = shl i64 1, %.pre2, !dbg !5459
  %.pre4 = lshr i32 %bitno, 6, !dbg !5460
  %.pre5 = zext i32 %.pre4 to i64, !dbg !5461
  br label %if.end7, !dbg !5457

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !5462
  %idxprom = zext i32 %div to i64, !dbg !5462
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !5462
  %1 = load i64, i64* %arrayidx, align 8, !dbg !5462
  %rem = and i32 %bitno, 63, !dbg !5462
  %sh_prom = zext i32 %rem to i64, !dbg !5462
  %2 = shl i64 1, %sh_prom, !dbg !5463
  %3 = and i64 %1, %2, !dbg !5463
  %tobool1 = icmp eq i64 %3, 0, !dbg !5463
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !5465

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !5466
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !5467
  %dec = add i8 %4, -1, !dbg !5467
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !5467
  br label %if.end7, !dbg !5466

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !5461
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !5459
  %neg = xor i64 %shl.pre-phi, -1, !dbg !5468
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !5461
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !5469
  %and14 = and i64 %5, %neg, !dbg !5469
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !5469
  ret void, !dbg !5470
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5471 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5476, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %index, metadata !5477, metadata !DIExpression()), !dbg !5478
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !5479
  %0 = load i32, i32* %capacity, align 8, !dbg !5479
  %cmp = icmp ult i32 %0, %index, !dbg !5479
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5479

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5479
  br label %cond.end, !dbg !5479

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !5480
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !5480
  ret %struct.phi_arg_d* %arrayidx, !dbg !5481
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5482 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5484, metadata !DIExpression()), !dbg !5485
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5486
  ret %union.tree_node* %call, !dbg !5487
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ssa_accessed_in_tree(%union.tree_node* %t, %struct.ssa_acc_in_tree* %a) unnamed_addr #5 !dbg !5488 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5493, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata %struct.ssa_acc_in_tree* %a, metadata !5494, metadata !DIExpression()), !dbg !5495
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5496
  %bf.load = load i64, i64* %0, align 8, !dbg !5496
  %1 = trunc i64 %bf.load to i32, !dbg !5496
  %bf.cast = and i32 %1, 65535, !dbg !5496
  %t_code = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 1, !dbg !5497
  store i32 %bf.cast, i32* %t_code, align 8, !dbg !5498
  %trunc = trunc i64 %bf.load to i16, !dbg !5499
  switch i16 %trunc, label %sw.epilog [
    i16 141, label %sw.bb
    i16 47, label %sw.bb2
  ], !dbg !5499

sw.bb:                                            ; preds = %entry
  %ssa_var = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 0, !dbg !5500
  %2 = load %union.tree_node*, %union.tree_node** %ssa_var, align 8, !dbg !5500
  %cmp = icmp eq %union.tree_node* %2, %t, !dbg !5503
  br i1 %cmp, label %if.then, label %sw.epilog, !dbg !5504

if.then:                                          ; preds = %sw.bb
  %var_found = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 5, !dbg !5505
  store i8 1, i8* %var_found, align 8, !dbg !5506
  br label %sw.epilog, !dbg !5507

sw.bb2:                                           ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5508
  %3 = bitcast %union.tree_node** %operands to i64**, !dbg !5508
  %4 = load i64*, i64** %3, align 8, !dbg !5508
  %bf.load4 = load i64, i64* %4, align 8, !dbg !5508
  %bf.cast61 = and i64 %bf.load4, 65535, !dbg !5508
  %cmp7 = icmp eq i64 %bf.cast61, 32, !dbg !5508
  %5 = bitcast i64* %4 to %union.tree_node*, !dbg !5508
  br i1 %cmp7, label %land.lhs.true64, label %lor.lhs.false, !dbg !5508

lor.lhs.false:                                    ; preds = %sw.bb2
  %cmp15 = icmp eq i64 %bf.cast61, 34, !dbg !5508
  br i1 %cmp15, label %land.lhs.true64, label %lor.lhs.false16, !dbg !5508

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %cmp24 = icmp eq i64 %bf.cast61, 36, !dbg !5508
  br i1 %cmp24, label %land.lhs.true64, label %lor.lhs.false25, !dbg !5508

lor.lhs.false25:                                  ; preds = %lor.lhs.false16
  %cmp33 = icmp eq i64 %bf.cast61, 141, !dbg !5508
  br i1 %cmp33, label %land.lhs.true, label %sw.epilog, !dbg !5508

land.lhs.true:                                    ; preds = %lor.lhs.false25
  %var = getelementptr inbounds i64, i64* %4, i64 3, !dbg !5508
  %6 = bitcast i64* %var to i64**, !dbg !5508
  %7 = load i64*, i64** %6, align 8, !dbg !5508
  %bf.load38 = load i64, i64* %7, align 8, !dbg !5508
  %bf.cast405 = and i64 %bf.load38, 65535, !dbg !5508
  %cmp41 = icmp eq i64 %bf.cast405, 32, !dbg !5508
  br i1 %cmp41, label %land.lhs.true64, label %lor.lhs.false42, !dbg !5508

lor.lhs.false42:                                  ; preds = %land.lhs.true
  %cmp52 = icmp eq i64 %bf.cast405, 34, !dbg !5508
  br i1 %cmp52, label %land.lhs.true64, label %lor.lhs.false53, !dbg !5508

lor.lhs.false53:                                  ; preds = %lor.lhs.false42
  %cmp63 = icmp eq i64 %bf.cast405, 36, !dbg !5508
  br i1 %cmp63, label %land.lhs.true64, label %sw.epilog, !dbg !5510

land.lhs.true64:                                  ; preds = %lor.lhs.false53, %lor.lhs.false42, %land.lhs.true, %lor.lhs.false16, %lor.lhs.false, %sw.bb2
  %ssa_var68 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 0, !dbg !5511
  %8 = load %union.tree_node*, %union.tree_node** %ssa_var68, align 8, !dbg !5511
  %cmp69 = icmp eq %union.tree_node* %8, %5, !dbg !5512
  br i1 %cmp69, label %if.then70, label %sw.epilog, !dbg !5513

if.then70:                                        ; preds = %land.lhs.true64
  %var_found71 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 5, !dbg !5514
  store i8 1, i8* %var_found71, align 8, !dbg !5515
  br label %sw.epilog, !dbg !5516

sw.epilog:                                        ; preds = %entry, %lor.lhs.false25, %lor.lhs.false53, %land.lhs.true64, %if.then70, %sw.bb, %if.then
  ret void, !dbg !5517
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ssa_accessed_in_call_rhs(%union.gimple_statement_d* %stmt, %struct.ssa_acc_in_tree* %a) unnamed_addr #5 !dbg !5518 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5522, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.value(metadata %struct.ssa_acc_in_tree* %a, metadata !5523, metadata !DIExpression()), !dbg !5527
  %t_code = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 1, !dbg !5528
  store i32 59, i32* %t_code, align 8, !dbg !5529
  call void @llvm.dbg.value(metadata i64 0, metadata !5526, metadata !DIExpression()), !dbg !5527
  %ssa_var = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 0, !dbg !5530
  br label %for.cond, !dbg !5535

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5536
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5526, metadata !DIExpression()), !dbg !5527
  %call = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !5537
  %conv = zext i32 %call to i64, !dbg !5537
  %cmp = icmp ult i64 %i.0, %conv, !dbg !5538
  br i1 %cmp, label %for.body, label %for.end.loopexit, !dbg !5539

for.body:                                         ; preds = %for.cond
  %conv2 = trunc i64 %i.0 to i32, !dbg !5540
  %call3 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %conv2) #7, !dbg !5541
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5525, metadata !DIExpression()), !dbg !5527
  %0 = load %union.tree_node*, %union.tree_node** %ssa_var, align 8, !dbg !5542
  %cmp4 = icmp eq %union.tree_node* %call3, %0, !dbg !5543
  br i1 %cmp4, label %if.then, label %for.inc, !dbg !5544

if.then:                                          ; preds = %for.body
  %var_found = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 5, !dbg !5545
  store i8 1, i8* %var_found, align 8, !dbg !5547
  %call6 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #7, !dbg !5548
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5524, metadata !DIExpression()), !dbg !5527
  %t_tree = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 2, !dbg !5549
  store %union.tree_node* %call6, %union.tree_node** %t_tree, align 8, !dbg !5550
  br label %for.end, !dbg !5551

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5552
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5526, metadata !DIExpression()), !dbg !5527
  br label %for.cond, !dbg !5553, !llvm.loop !5554

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !5556

for.end:                                          ; preds = %for.end.loopexit, %if.then
  ret void, !dbg !5556
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5557 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5559, metadata !DIExpression()), !dbg !5561
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5562
  call void @llvm.dbg.value(metadata i32 %call, metadata !5560, metadata !DIExpression()), !dbg !5561
  %sub = add i32 %call, -3, !dbg !5563
  ret i32 %sub, !dbg !5564
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5565 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5567, metadata !DIExpression()), !dbg !5568
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !5569
  %0 = load i32, i32* %num_ops, align 4, !dbg !5569
  ret i32 %0, !dbg !5570
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ssa_accessed_in_assign_rhs(%union.gimple_statement_d* %stmt, %struct.ssa_acc_in_tree* %a) unnamed_addr #5 !dbg !5571 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5573, metadata !DIExpression()), !dbg !5575
  call void @llvm.dbg.value(metadata %struct.ssa_acc_in_tree* %a, metadata !5574, metadata !DIExpression()), !dbg !5575
  %call = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5576
  %t_code = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 1, !dbg !5577
  store i32 %call, i32* %t_code, align 8, !dbg !5578
  switch i32 %call, label %sw.epilog [
    i32 141, label %sw.bb
    i32 47, label %sw.bb
    i32 116, label %sw.bb
    i32 113, label %sw.bb
    i32 118, label %sw.bb
    i32 66, label %sw.bb3
    i32 63, label %sw.bb3
    i32 65, label %sw.bb3
  ], !dbg !5579

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5580
  tail call fastcc void @ssa_accessed_in_tree(%union.tree_node* %call2, %struct.ssa_acc_in_tree* %a) #7, !dbg !5582
  br label %sw.epilog, !dbg !5583

sw.bb3:                                           ; preds = %entry, %entry, %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5584
  %call5 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !5585
  %ssa_var = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 0, !dbg !5586
  %0 = load %union.tree_node*, %union.tree_node** %ssa_var, align 8, !dbg !5586
  %cmp = icmp eq %union.tree_node* %call4, %0, !dbg !5588
  br i1 %cmp, label %if.then, label %if.else, !dbg !5589

if.then:                                          ; preds = %sw.bb3
  %var_found = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 5, !dbg !5590
  store i8 1, i8* %var_found, align 8, !dbg !5592
  %second_op = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 4, !dbg !5593
  store %union.tree_node* %call5, %union.tree_node** %second_op, align 8, !dbg !5594
  br label %sw.epilog, !dbg !5595

if.else:                                          ; preds = %sw.bb3
  %cmp7 = icmp eq %union.tree_node* %call5, %0, !dbg !5596
  br i1 %cmp7, label %if.then8, label %sw.epilog, !dbg !5598

if.then8:                                         ; preds = %if.else
  %var_found9 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 5, !dbg !5599
  store i8 1, i8* %var_found9, align 8, !dbg !5601
  %second_op10 = getelementptr inbounds %struct.ssa_acc_in_tree, %struct.ssa_acc_in_tree* %a, i64 0, i32 4, !dbg !5602
  store %union.tree_node* %call4, %union.tree_node** %second_op10, align 8, !dbg !5603
  br label %sw.epilog, !dbg !5604

sw.epilog:                                        ; preds = %entry, %if.then, %if.then8, %if.else, %sw.bb
  ret void, !dbg !5605
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_access_alloc_site_info(%struct.matrix_info* %mi, %union.gimple_statement_d* %stmt, %union.tree_node* %offset, %union.tree_node* %index, i32 %level, i8 zeroext %is_alloc) unnamed_addr #5 !dbg !5606 {
entry:
  call void @llvm.dbg.value(metadata %struct.matrix_info* %mi, metadata !5610, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5611, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %union.tree_node* %offset, metadata !5612, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %union.tree_node* %index, metadata !5613, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %level, metadata !5614, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i8 %is_alloc, metadata !5615, metadata !DIExpression()), !dbg !5617
  %access_l = getelementptr inbounds %struct.matrix_info, %struct.matrix_info* %mi, i64 0, i32 14, !dbg !5618
  %0 = load %struct.VEC_access_site_info_p_heap*, %struct.VEC_access_site_info_p_heap** %access_l, align 8, !dbg !5618
  %tobool = icmp eq %struct.VEC_access_site_info_p_heap* %0, null, !dbg !5620
  br i1 %tobool, label %if.then, label %if.end, !dbg !5621

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.VEC_access_site_info_p_heap* @VEC_access_site_info_p_heap_alloc(i32 100) #7, !dbg !5622
  store %struct.VEC_access_site_info_p_heap* %call, %struct.VEC_access_site_info_p_heap** %access_l, align 8, !dbg !5623
  br label %if.end, !dbg !5624

if.end:                                           ; preds = %entry, %if.then
  %call2 = tail call i8* @xcalloc(i64 1, i64 48) #6, !dbg !5625
  %1 = bitcast i8* %call2 to %struct.access_site_info*, !dbg !5626
  call void @llvm.dbg.value(metadata %struct.access_site_info* %1, metadata !5616, metadata !DIExpression()), !dbg !5617
  %stmt3 = bitcast i8* %call2 to %union.gimple_statement_d**, !dbg !5627
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %stmt3, align 8, !dbg !5628
  %offset4 = getelementptr inbounds i8, i8* %call2, i64 8, !dbg !5629
  %2 = bitcast i8* %offset4 to %union.tree_node**, !dbg !5629
  store %union.tree_node* %offset, %union.tree_node** %2, align 8, !dbg !5630
  %index5 = getelementptr inbounds i8, i8* %call2, i64 16, !dbg !5631
  %3 = bitcast i8* %index5 to %union.tree_node**, !dbg !5631
  store %union.tree_node* %index, %union.tree_node** %3, align 8, !dbg !5632
  %4 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !5633
  %function_decl = getelementptr inbounds i8, i8* %call2, i64 32, !dbg !5634
  %5 = bitcast i8* %function_decl to i64*, !dbg !5635
  store i64 %4, i64* %5, align 8, !dbg !5635
  %level6 = getelementptr inbounds i8, i8* %call2, i64 24, !dbg !5636
  %6 = bitcast i8* %level6 to i32*, !dbg !5636
  store i32 %level, i32* %6, align 8, !dbg !5637
  %7 = getelementptr inbounds i8, i8* %call2, i64 28, !dbg !5638
  store i8 %is_alloc, i8* %7, align 4, !dbg !5639
  %call9 = tail call fastcc %struct.access_site_info** @VEC_access_site_info_p_heap_safe_push(%struct.VEC_access_site_info_p_heap** nonnull %access_l, %struct.access_site_info* %1) #7, !dbg !5640
  ret void, !dbg !5641
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5642 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5644, metadata !DIExpression()), !dbg !5645
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5646
  %cmp = icmp ugt i32 %call, 2, !dbg !5648
  br i1 %cmp, label %if.then, label %return, !dbg !5649

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !5650
  br label %return, !dbg !5651

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !5652
  ret %union.tree_node* %retval.0, !dbg !5653
}

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_index_from_offset(%union.tree_node* %offset, %union.gimple_statement_d* %def_stmt) unnamed_addr #5 !dbg !5654 {
entry:
  br label %tailrecurse, !dbg !5663

tailrecurse:                                      ; preds = %if.then8, %entry
  %def_stmt.tr = phi %union.gimple_statement_d* [ %def_stmt, %entry ], [ %2, %if.then8 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %offset, metadata !5658, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %def_stmt.tr, metadata !5659, metadata !DIExpression()), !dbg !5665
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %def_stmt.tr) #7, !dbg !5666
  %cmp = icmp eq i32 %call, 16, !dbg !5668
  br i1 %cmp, label %cleanup.loopexit, label %if.end, !dbg !5669

if.end:                                           ; preds = %tailrecurse
  %call1 = tail call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* %def_stmt.tr) #6, !dbg !5670
  %tobool = icmp eq i8 %call1, 0, !dbg !5670
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !5671

lor.lhs.false:                                    ; preds = %if.end
  %call2 = tail call fastcc zeroext i8 @gimple_assign_cast_p(%union.gimple_statement_d* %def_stmt.tr) #7, !dbg !5672
  %tobool4 = icmp eq i8 %call2, 0, !dbg !5672
  br i1 %tobool4, label %if.else, label %land.lhs.true, !dbg !5673

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %call5 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %def_stmt.tr) #7, !dbg !5674
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5674
  %bf.load = load i64, i64* %0, align 8, !dbg !5674
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !5675
  %cmp6 = icmp eq i64 %bf.cast4, 141, !dbg !5675
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !5676

if.then8:                                         ; preds = %land.lhs.true
  %call9 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %def_stmt.tr) #7, !dbg !5677
  %def_stmt10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5677
  %1 = bitcast %union.tree_node** %def_stmt10 to %union.gimple_statement_d**, !dbg !5677
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !5677
  br label %tailrecurse, !dbg !5663

if.else:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %def_stmt.tr.lcssa7 = phi %union.gimple_statement_d* [ %def_stmt.tr, %lor.lhs.false ], [ %def_stmt.tr, %land.lhs.true ]
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %def_stmt.tr.lcssa7, metadata !5659, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %def_stmt.tr.lcssa7, metadata !5659, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %def_stmt.tr.lcssa7, metadata !5659, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %def_stmt.tr.lcssa7, metadata !5659, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %def_stmt.tr.lcssa7, metadata !5659, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %def_stmt.tr.lcssa7, metadata !5659, metadata !DIExpression()), !dbg !5665
  %call12 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %def_stmt.tr.lcssa7) #7, !dbg !5678
  %tobool14 = icmp eq i8 %call12, 0, !dbg !5678
  br i1 %tobool14, label %cleanup, label %land.lhs.true15, !dbg !5680

land.lhs.true15:                                  ; preds = %if.else
  %call16 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %def_stmt.tr.lcssa7) #7, !dbg !5681
  %cmp17 = icmp eq i32 %call16, 65, !dbg !5682
  br i1 %cmp17, label %if.then19, label %cleanup, !dbg !5683

if.then19:                                        ; preds = %land.lhs.true15
  %call20 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %def_stmt.tr.lcssa7) #7, !dbg !5684
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !5660, metadata !DIExpression()), !dbg !5665
  %call21 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %def_stmt.tr.lcssa7) #7, !dbg !5686
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !5661, metadata !DIExpression()), !dbg !5665
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5687
  %bf.load23 = load i64, i64* %3, align 8, !dbg !5687
  %bf.cast251 = and i64 %bf.load23, 65535, !dbg !5689
  %cmp26 = icmp eq i64 %bf.cast251, 23, !dbg !5689
  br i1 %cmp26, label %if.end36, label %land.lhs.true28, !dbg !5690

land.lhs.true28:                                  ; preds = %if.then19
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5691
  %bf.load30 = load i64, i64* %4, align 8, !dbg !5691
  %bf.cast323 = and i64 %bf.load30, 65535, !dbg !5692
  %cmp33 = icmp eq i64 %bf.cast323, 23, !dbg !5692
  br i1 %cmp33, label %if.end36, label %cleanup, !dbg !5693

if.end36:                                         ; preds = %land.lhs.true28, %if.then19
  %call21.call20 = select i1 %cmp26, %union.tree_node* %call21, %union.tree_node* %call20, !dbg !5694
  call void @llvm.dbg.value(metadata %union.tree_node* %call21.call20, metadata !5662, metadata !DIExpression()), !dbg !5665
  br label %cleanup, !dbg !5695

cleanup.loopexit:                                 ; preds = %tailrecurse
  br label %cleanup, !dbg !5696

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true28, %if.else, %land.lhs.true15, %if.end36
  %retval.0 = phi %union.tree_node* [ %call21.call20, %if.end36 ], [ null, %land.lhs.true28 ], [ null, %land.lhs.true15 ], [ null, %if.else ], [ null, %cleanup.loopexit ], !dbg !5665
  ret %union.tree_node* %retval.0, !dbg !5696
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_access_site_info_p_heap* @VEC_access_site_info_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5697 {
entry:
  call void @llvm.dbg.value(metadata i32 100, metadata !5701, metadata !DIExpression()), !dbg !5702
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 100) #6, !dbg !5703
  %0 = bitcast i8* %call to %struct.VEC_access_site_info_p_heap*, !dbg !5703
  ret %struct.VEC_access_site_info_p_heap* %0, !dbg !5703
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.access_site_info** @VEC_access_site_info_p_heap_safe_push(%struct.VEC_access_site_info_p_heap** %vec_, %struct.access_site_info* %obj_) unnamed_addr #0 !dbg !5704 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_site_info_p_heap** %vec_, metadata !5710, metadata !DIExpression()), !dbg !5712
  call void @llvm.dbg.value(metadata %struct.access_site_info* %obj_, metadata !5711, metadata !DIExpression()), !dbg !5712
  %call = tail call fastcc i32 @VEC_access_site_info_p_heap_reserve(%struct.VEC_access_site_info_p_heap** %vec_, i32 1) #7, !dbg !5713
  %0 = load %struct.VEC_access_site_info_p_heap*, %struct.VEC_access_site_info_p_heap** %vec_, align 8, !dbg !5713
  %tobool = icmp eq %struct.VEC_access_site_info_p_heap* %0, null, !dbg !5713
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5713

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_access_site_info_p_heap, %struct.VEC_access_site_info_p_heap* %0, i64 0, i32 0, !dbg !5713
  br label %cond.end, !dbg !5713

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_access_site_info_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5713
  %call1 = tail call fastcc %struct.access_site_info** @VEC_access_site_info_p_base_quick_push(%struct.VEC_access_site_info_p_base* %cond, %struct.access_site_info* %obj_) #7, !dbg !5713
  ret %struct.access_site_info** %call1, !dbg !5713
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_access_site_info_p_heap_reserve(%struct.VEC_access_site_info_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5714 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_site_info_p_heap** %vec_, metadata !5718, metadata !DIExpression()), !dbg !5721
  call void @llvm.dbg.value(metadata i32 1, metadata !5719, metadata !DIExpression()), !dbg !5721
  %0 = load %struct.VEC_access_site_info_p_heap*, %struct.VEC_access_site_info_p_heap** %vec_, align 8, !dbg !5722
  %tobool = icmp eq %struct.VEC_access_site_info_p_heap* %0, null, !dbg !5722
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5722

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_access_site_info_p_heap, %struct.VEC_access_site_info_p_heap* %0, i64 0, i32 0, !dbg !5722
  br label %cond.end, !dbg !5722

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_access_site_info_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5722
  %call = tail call fastcc i32 @VEC_access_site_info_p_base_space(%struct.VEC_access_site_info_p_base* %cond, i32 1) #7, !dbg !5722
  %tobool1 = icmp eq i32 %call, 0, !dbg !5722
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5722
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5720, metadata !DIExpression()), !dbg !5721
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5722

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_access_site_info_p_heap** %vec_ to i8**, !dbg !5723
  %2 = load i8*, i8** %1, align 8, !dbg !5723
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !5723
  store i8* %call3, i8** %1, align 8, !dbg !5723
  br label %if.end, !dbg !5723

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5722
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.access_site_info** @VEC_access_site_info_p_base_quick_push(%struct.VEC_access_site_info_p_base* %vec_, %struct.access_site_info* %obj_) unnamed_addr #0 !dbg !5725 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_site_info_p_base* %vec_, metadata !5730, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata %struct.access_site_info* %obj_, metadata !5731, metadata !DIExpression()), !dbg !5733
  %num1 = getelementptr inbounds %struct.VEC_access_site_info_p_base, %struct.VEC_access_site_info_p_base* %vec_, i64 0, i32 0, !dbg !5734
  %0 = load i32, i32* %num1, align 8, !dbg !5734
  %inc = add i32 %0, 1, !dbg !5734
  store i32 %inc, i32* %num1, align 8, !dbg !5734
  %idxprom = zext i32 %0 to i64, !dbg !5734
  %arrayidx = getelementptr inbounds %struct.VEC_access_site_info_p_base, %struct.VEC_access_site_info_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5734
  call void @llvm.dbg.value(metadata %struct.access_site_info** %arrayidx, metadata !5732, metadata !DIExpression()), !dbg !5733
  store %struct.access_site_info* %obj_, %struct.access_site_info** %arrayidx, align 8, !dbg !5734
  ret %struct.access_site_info** %arrayidx, !dbg !5734
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_access_site_info_p_base_space(%struct.VEC_access_site_info_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5735 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_site_info_p_base* %vec_, metadata !5739, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i32 1, metadata !5740, metadata !DIExpression()), !dbg !5741
  %tobool = icmp eq %struct.VEC_access_site_info_p_base* %vec_, null, !dbg !5742
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5742

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_access_site_info_p_base, %struct.VEC_access_site_info_p_base* %vec_, i64 0, i32 1, !dbg !5742
  %0 = load i32, i32* %alloc, align 4, !dbg !5742
  %num = getelementptr inbounds %struct.VEC_access_site_info_p_base, %struct.VEC_access_site_info_p_base* %vec_, i64 0, i32 0, !dbg !5742
  %1 = load i32, i32* %num, align 8, !dbg !5742
  %cmp1 = icmp ne i32 %0, %1, !dbg !5742
  %phitmp = zext i1 %cmp1 to i32, !dbg !5742
  br label %cond.end, !dbg !5742

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5742

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5742
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_access_site_info_p_base_iterate(%struct.VEC_access_site_info_p_base* %vec_, i32 %ix_, %struct.access_site_info** %ptr) unnamed_addr #0 !dbg !5743 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_site_info_p_base* %vec_, metadata !5749, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5750, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.value(metadata %struct.access_site_info** %ptr, metadata !5751, metadata !DIExpression()), !dbg !5752
  %tobool = icmp eq %struct.VEC_access_site_info_p_base* %vec_, null, !dbg !5753
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5753

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_access_site_info_p_base, %struct.VEC_access_site_info_p_base* %vec_, i64 0, i32 0, !dbg !5753
  %0 = load i32, i32* %num, align 8, !dbg !5753
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5753
  br i1 %cmp, label %if.then, label %if.else, !dbg !5755

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5756
  %arrayidx = getelementptr inbounds %struct.VEC_access_site_info_p_base, %struct.VEC_access_site_info_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5756
  %1 = load %struct.access_site_info*, %struct.access_site_info** %arrayidx, align 8, !dbg !5756
  br label %return, !dbg !5756

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5758

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.access_site_info* [ null, %if.else ], [ %1, %if.then ], !dbg !5760
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5760
  store %struct.access_site_info* %storemerge, %struct.access_site_info** %ptr, align 8, !dbg !5760
  ret i32 %retval.0, !dbg !5755
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_access_site_info_p_heap_free(%struct.VEC_access_site_info_p_heap** %vec_) unnamed_addr #0 !dbg !5761 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_site_info_p_heap** %vec_, metadata !5765, metadata !DIExpression()), !dbg !5766
  %0 = load %struct.VEC_access_site_info_p_heap*, %struct.VEC_access_site_info_p_heap** %vec_, align 8, !dbg !5767
  %tobool = icmp eq %struct.VEC_access_site_info_p_heap* %0, null, !dbg !5767
  br i1 %tobool, label %if.end, label %if.then, !dbg !5769

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_access_site_info_p_heap* %0 to i8*, !dbg !5769
  tail call void @free(i8* nonnull %1) #6, !dbg !5767
  br label %if.end, !dbg !5767

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_access_site_info_p_heap* null, %struct.VEC_access_site_info_p_heap** %vec_, align 8, !dbg !5769
  ret void, !dbg !5769
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5770 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5774, metadata !DIExpression()), !dbg !5776
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !5777
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5775, metadata !DIExpression()), !dbg !5776
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !5778
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5780

if.end:                                           ; preds = %entry
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5781
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5781
  br label %cleanup, !dbg !5782

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.loop* [ %0, %if.end ], [ null, %entry ], !dbg !5776
  ret %struct.loop* %retval.0, !dbg !5783
}

declare dso_local zeroext i8 @simple_iv(%struct.loop*, %struct.loop*, %union.tree_node*, %struct.affine_iv*, i8 zeroext) local_unnamed_addr #2

declare dso_local i64 @int_cst_value(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5784 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5788, metadata !DIExpression()), !dbg !5789
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !5790
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5790
  ret %struct.basic_block_def* %0, !dbg !5791
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @can_calculate_expr_before_stmt(%union.tree_node* %expr, %struct.simple_bitmap_def* %visited) unnamed_addr #5 !dbg !5792 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5796, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %visited, metadata !5797, metadata !DIExpression()), !dbg !5800
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5801
  %bf.load = load i64, i64* %0, align 8, !dbg !5801
  %1 = trunc i64 %bf.load to i16, !dbg !5801
  switch i16 %1, label %sw.default [
    i16 141, label %sw.bb
    i16 32, label %cleanup
    i16 34, label %cleanup
    i16 23, label %cleanup
  ], !dbg !5802

sw.bb:                                            ; preds = %entry
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5803
  %2 = bitcast %union.tree_node** %version to i32*, !dbg !5803
  %3 = load i32, i32* %2, align 8, !dbg !5803
  %div = lshr i32 %3, 6, !dbg !5803
  %idxprom = zext i32 %div to i64, !dbg !5803
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %visited, i64 0, i32 3, i64 %idxprom, !dbg !5803
  %4 = load i64, i64* %arrayidx, align 8, !dbg !5803
  %rem = and i32 %3, 63, !dbg !5803
  %sh_prom = zext i32 %rem to i64, !dbg !5803
  %5 = shl i64 1, %sh_prom, !dbg !5803
  %6 = and i64 %4, %5, !dbg !5803
  %tobool = icmp eq i64 %6, 0, !dbg !5803
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5806

if.end:                                           ; preds = %sw.bb
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %visited, i32 %3) #7, !dbg !5807
  %def_stmt6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5808
  %7 = bitcast %union.tree_node** %def_stmt6 to %union.gimple_statement_d**, !dbg !5808
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %7, align 8, !dbg !5808
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %8, metadata !5798, metadata !DIExpression()), !dbg !5800
  %call = tail call fastcc %union.tree_node* @can_calculate_stmt_before_stmt(%union.gimple_statement_d* %8, %struct.simple_bitmap_def* %visited) #7, !dbg !5809
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5799, metadata !DIExpression()), !dbg !5800
  %9 = load i32, i32* %2, align 8, !dbg !5810
  tail call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %visited, i32 %9) #7, !dbg !5811
  br label %cleanup, !dbg !5812

sw.default:                                       ; preds = %entry
  br label %cleanup, !dbg !5813

cleanup:                                          ; preds = %sw.bb, %entry, %entry, %entry, %sw.default, %if.end
  %retval.0 = phi %union.tree_node* [ null, %sw.default ], [ %call, %if.end ], [ null, %sw.bb ], [ %expr, %entry ], [ %expr, %entry ], [ %expr, %entry ], !dbg !5814
  ret %union.tree_node* %retval.0, !dbg !5815
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @can_calculate_stmt_before_stmt(%union.gimple_statement_d* %stmt, %struct.simple_bitmap_def* %visited) unnamed_addr #5 !dbg !5816 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5820, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %visited, metadata !5821, metadata !DIExpression()), !dbg !5834
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5835
  switch i32 %call, label %cleanup43 [
    i32 6, label %sw.bb
    i32 16, label %for.cond.preheader
  ], !dbg !5836

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5837

sw.bb:                                            ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %call1, metadata !5825, metadata !DIExpression()), !dbg !5834
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5839
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5822, metadata !DIExpression()), !dbg !5834
  switch i32 %call1, label %sw.default [
    i32 66, label %sw.bb3
    i32 63, label %sw.bb3
    i32 64, label %sw.bb3
    i32 65, label %sw.bb3
    i32 116, label %sw.bb12
    i32 113, label %sw.bb12
  ], !dbg !5840

sw.bb3:                                           ; preds = %sw.bb, %sw.bb, %sw.bb, %sw.bb
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !5841
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5823, metadata !DIExpression()), !dbg !5834
  %call5 = tail call fastcc %union.tree_node* @can_calculate_expr_before_stmt(%union.tree_node* %call2, %struct.simple_bitmap_def* %visited) #7, !dbg !5843
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5822, metadata !DIExpression()), !dbg !5834
  %tobool = icmp eq %union.tree_node* %call5, null, !dbg !5844
  br i1 %tobool, label %cleanup43, label %if.end, !dbg !5846

if.end:                                           ; preds = %sw.bb3
  %call6 = tail call fastcc %union.tree_node* @can_calculate_expr_before_stmt(%union.tree_node* %call4, %struct.simple_bitmap_def* %visited) #7, !dbg !5847
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5823, metadata !DIExpression()), !dbg !5834
  %tobool7 = icmp eq %union.tree_node* %call6, null, !dbg !5848
  br i1 %tobool7, label %cleanup43, label %if.then8, !dbg !5850

if.then8:                                         ; preds = %if.end
  %call9 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !5851
  %call10 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %call1, %union.tree_node* %call9, %union.tree_node* nonnull %call5, %union.tree_node* nonnull %call6) #6, !dbg !5851
  br label %cleanup43, !dbg !5852

sw.bb12:                                          ; preds = %sw.bb, %sw.bb
  %call13 = tail call fastcc %union.tree_node* @can_calculate_expr_before_stmt(%union.tree_node* %call2, %struct.simple_bitmap_def* %visited) #7, !dbg !5853
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !5824, metadata !DIExpression()), !dbg !5834
  %cmp = icmp eq %union.tree_node* %call13, null, !dbg !5854
  br i1 %cmp, label %cleanup43, label %if.then14, !dbg !5856

if.then14:                                        ; preds = %sw.bb12
  %call15 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !5857
  %call16 = tail call %union.tree_node* @build1_stat(i32 %call1, %union.tree_node* %call15, %union.tree_node* nonnull %call13) #6, !dbg !5857
  br label %cleanup43, !dbg !5858

sw.default:                                       ; preds = %sw.bb
  %call17 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt) #6, !dbg !5859
  %tobool18 = icmp eq i8 %call17, 0, !dbg !5859
  br i1 %tobool18, label %cleanup43, label %if.then19, !dbg !5861

if.then19:                                        ; preds = %sw.default
  %call20 = tail call fastcc %union.tree_node* @can_calculate_expr_before_stmt(%union.tree_node* %call2, %struct.simple_bitmap_def* %visited) #7, !dbg !5862
  br label %cleanup43, !dbg !5863

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %res.0 = phi %union.tree_node* [ %res.2, %for.inc ], [ null, %for.cond.preheader ], !dbg !5864
  %j.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5865
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !5826, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.value(metadata %union.tree_node* %res.0, metadata !5824, metadata !DIExpression()), !dbg !5834
  %call23 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !5866
  %conv = zext i32 %call23 to i64, !dbg !5866
  %cmp24 = icmp ult i64 %j.0, %conv, !dbg !5867
  br i1 %cmp24, label %for.body, label %cleanup43.loopexit, !dbg !5837

for.body:                                         ; preds = %for.cond
  %conv26 = trunc i64 %j.0 to i32, !dbg !5868
  %call27 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %stmt, i32 %conv26) #7, !dbg !5868
  %call28 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call27) #7, !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !5833, metadata !DIExpression()), !dbg !5869
  %call29 = tail call fastcc %union.tree_node* @can_calculate_expr_before_stmt(%union.tree_node* %call28, %struct.simple_bitmap_def* %visited) #7, !dbg !5870
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !5829, metadata !DIExpression()), !dbg !5869
  %cmp30 = icmp eq %union.tree_node* %res.0, null, !dbg !5871
  br i1 %cmp30, label %if.end39, label %if.else33, !dbg !5873

if.else33:                                        ; preds = %for.body
  %tobool34 = icmp eq %union.tree_node* %call29, null, !dbg !5874
  br i1 %tobool34, label %cleanup, label %lor.lhs.false, !dbg !5876

lor.lhs.false:                                    ; preds = %if.else33
  %call35 = tail call zeroext i8 @expressions_equal_p(%union.tree_node* nonnull %res.0, %union.tree_node* nonnull %call29) #6, !dbg !5877
  %tobool36 = icmp eq i8 %call35, 0, !dbg !5877
  br i1 %tobool36, label %cleanup, label %if.end39, !dbg !5878

if.end39:                                         ; preds = %lor.lhs.false, %for.body
  %res.1 = phi %union.tree_node* [ %call29, %for.body ], [ %res.0, %lor.lhs.false ], !dbg !5864
  call void @llvm.dbg.value(metadata %union.tree_node* %res.1, metadata !5824, metadata !DIExpression()), !dbg !5834
  br label %cleanup, !dbg !5879

cleanup:                                          ; preds = %lor.lhs.false, %if.else33, %if.end39
  %res.2 = phi %union.tree_node* [ %res.1, %if.end39 ], [ %res.0, %lor.lhs.false ], [ %res.0, %if.else33 ], !dbg !5864
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end39 ], [ false, %lor.lhs.false ], [ false, %if.else33 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %res.2, metadata !5824, metadata !DIExpression()), !dbg !5834
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup43.loopexit

for.inc:                                          ; preds = %cleanup
  %inc = add nuw nsw i64 %j.0, 1, !dbg !5880
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5826, metadata !DIExpression()), !dbg !5864
  br label %for.cond, !dbg !5881, !llvm.loop !5882

cleanup43.loopexit:                               ; preds = %for.cond, %cleanup
  %retval.3.ph = phi %union.tree_node* [ %res.0, %for.cond ], [ null, %cleanup ]
  br label %cleanup43, !dbg !5884

cleanup43:                                        ; preds = %cleanup43.loopexit, %sw.default, %if.end, %sw.bb3, %sw.bb12, %entry, %if.then19, %if.then14, %if.then8
  %retval.3 = phi %union.tree_node* [ %call20, %if.then19 ], [ %call16, %if.then14 ], [ %call10, %if.then8 ], [ null, %sw.bb3 ], [ null, %if.end ], [ null, %sw.bb12 ], [ null, %sw.default ], [ null, %entry ], [ %retval.3.ph, %cleanup43.loopexit ]
  ret %union.tree_node* %retval.3, !dbg !5884
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5885 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5887, metadata !DIExpression()), !dbg !5892
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5893
  call void @llvm.dbg.value(metadata i32 %call, metadata !5888, metadata !DIExpression()), !dbg !5892
  switch i32 %call, label %if.else14 [
    i32 8, label %if.then3
    i32 6, label %if.else
    i32 1, label %if.then13
  ], !dbg !5894

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #7, !dbg !5895
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5889, metadata !DIExpression()), !dbg !5897
  br label %cleanup, !dbg !5898

if.else:                                          ; preds = %entry
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5899
  %cond = icmp eq i32 %call5, 66, !dbg !5900
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !5900

sw.bb:                                            ; preds = %if.else
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5901
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5901
  %0 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5889, metadata !DIExpression()), !dbg !5897
  br label %cleanup, !dbg !5903

sw.default:                                       ; preds = %if.else
  %call8 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !5904
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5904
  %1 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !5904
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5889, metadata !DIExpression()), !dbg !5897
  br label %cleanup, !dbg !5905

if.then13:                                        ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !5906
  br label %cleanup, !dbg !5908

if.else14:                                        ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5909
  br label %cleanup, !dbg !5910

cleanup:                                          ; preds = %if.then3, %sw.default, %sw.bb, %if.else14, %if.then13
  %retval.0 = phi %union.tree_node* [ %2, %if.then13 ], [ %3, %if.else14 ], [ %call4, %if.then3 ], [ %1, %sw.default ], [ %0, %sw.bb ], !dbg !5911
  ret %union.tree_node* %retval.0, !dbg !5912
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @expressions_equal_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5913 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5915, metadata !DIExpression()), !dbg !5918
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !5919
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5916, metadata !DIExpression()), !dbg !5918
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5920
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !5920
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !5920
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !5921
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !5921
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !5921
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !5922
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !5922
  ret %union.tree_node* %4, !dbg !5923
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sort_dim_hot_level(i64* %a, i32* %dim_map, i32 %n) unnamed_addr #5 !dbg !5924 {
entry:
  call void @llvm.dbg.value(metadata i64* %a, metadata !5928, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.value(metadata i32* %dim_map, metadata !5929, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.value(metadata i32 %n, metadata !5930, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.value(metadata i32 0, metadata !5931, metadata !DIExpression()), !dbg !5935
  %sub = add nsw i32 %n, -1, !dbg !5936
  %0 = sext i32 %sub to i64, !dbg !5939
  br label %for.cond, !dbg !5939

for.cond:                                         ; preds = %for.inc29, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc29 ], [ 0, %entry ], !dbg !5940
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !5931, metadata !DIExpression()), !dbg !5935
  %cmp = icmp slt i64 %indvars.iv1, %0, !dbg !5941
  br i1 %cmp, label %for.cond1.preheader, label %for.end31, !dbg !5942

for.cond1.preheader:                              ; preds = %for.cond
  %1 = trunc i64 %indvars.iv1 to i32, !dbg !5943
  %2 = xor i32 %1, -1, !dbg !5943
  %sub3 = add i32 %2, %n, !dbg !5943
  %3 = sext i32 %sub3 to i64, !dbg !5947
  br label %for.cond1, !dbg !5947

for.cond1:                                        ; preds = %for.cond1.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5948
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5932, metadata !DIExpression()), !dbg !5935
  %cmp4 = icmp slt i64 %indvars.iv, %3, !dbg !5949
  br i1 %cmp4, label %for.body5, label %for.inc29, !dbg !5947

for.body5:                                        ; preds = %for.cond1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5950
  %arrayidx = getelementptr inbounds i64, i64* %a, i64 %indvars.iv.next, !dbg !5953
  %4 = load i64, i64* %arrayidx, align 8, !dbg !5953
  %arrayidx7 = getelementptr inbounds i64, i64* %a, i64 %indvars.iv, !dbg !5954
  %5 = load i64, i64* %arrayidx7, align 8, !dbg !5954
  %cmp8 = icmp slt i64 %4, %5, !dbg !5955
  br i1 %cmp8, label %if.then, label %for.inc, !dbg !5956

if.then:                                          ; preds = %for.body5
  call void @llvm.dbg.value(metadata i64 %5, metadata !5934, metadata !DIExpression()), !dbg !5935
  store i64 %4, i64* %arrayidx7, align 8, !dbg !5957
  store i64 %5, i64* %arrayidx, align 8, !dbg !5959
  %arrayidx20 = getelementptr inbounds i32, i32* %dim_map, i64 %indvars.iv, !dbg !5960
  %6 = load i32, i32* %arrayidx20, align 4, !dbg !5960
  call void @llvm.dbg.value(metadata i32 %6, metadata !5933, metadata !DIExpression()), !dbg !5935
  %arrayidx23 = getelementptr inbounds i32, i32* %dim_map, i64 %indvars.iv.next, !dbg !5961
  %7 = load i32, i32* %arrayidx23, align 4, !dbg !5961
  store i32 %7, i32* %arrayidx20, align 4, !dbg !5962
  store i32 %6, i32* %arrayidx23, align 4, !dbg !5963
  br label %for.inc, !dbg !5964

for.inc:                                          ; preds = %for.body5, %if.then
  call void @llvm.dbg.value(metadata i32 undef, metadata !5932, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5935
  br label %for.cond1, !dbg !5965, !llvm.loop !5966

for.inc29:                                        ; preds = %for.cond1
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !5968
  call void @llvm.dbg.value(metadata i32 undef, metadata !5931, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5935
  br label %for.cond, !dbg !5969, !llvm.loop !5970

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !5972
}

declare dso_local %union.tree_node* @walk_tree_without_duplicates_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @check_var_notmodified_p(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !5973 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !5977, metadata !DIExpression()), !dbg !5986
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !5978, metadata !DIExpression()), !dbg !5986
  call void @llvm.dbg.value(metadata i8* %data, metadata !5979, metadata !DIExpression()), !dbg !5986
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5981, metadata !DIExpression()), !dbg !5986
  call void @llvm.dbg.value(metadata i8* %data, metadata !5982, metadata !DIExpression()), !dbg !5986
  %fn1 = bitcast i8* %data to %union.tree_node**, !dbg !5988
  %1 = load %union.tree_node*, %union.tree_node** %fn1, align 8, !dbg !5988
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5983, metadata !DIExpression()), !dbg !5986
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5989
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5989
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5990
  %bf.load = load i64, i64* %3, align 8, !dbg !5990
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5992
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !5992
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !5993

land.lhs.true:                                    ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 34, !dbg !5994
  br i1 %cmp6, label %if.end, label %cleanup, !dbg !5995

if.end:                                           ; preds = %land.lhs.true, %entry
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 1, !dbg !5996
  %4 = load %struct.function*, %struct.function** %f, align 8, !dbg !5996
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !5996
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5996
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !5996
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5996
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5998
  br label %for.cond, !dbg !5996

for.cond:                                         ; preds = %for.inc26, %if.end
  %8 = phi %struct.control_flow_graph* [ %5, %if.end ], [ %.pre3, %for.inc26 ], !dbg !6002
  %.pn = phi %struct.basic_block_def* [ %6, %if.end ], [ %bb.0, %for.inc26 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !6003
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !6003
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5980, metadata !DIExpression()), !dbg !5986
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !6002
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6002
  %cmp10 = icmp eq %struct.basic_block_def* %bb.0, %9, !dbg !6002
  br i1 %cmp10, label %for.end28, label %for.body, !dbg !5996

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !6004
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !6004
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !6004
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !6004
  br label %for.cond11, !dbg !6005

for.cond11:                                       ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5984, metadata !DIExpression(DW_OP_deref)), !dbg !5986
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6006
  %tobool = icmp eq i8 %call, 0, !dbg !6008
  br i1 %tobool, label %for.body12, label %for.inc26, !dbg !6009

for.body12:                                       ; preds = %for.cond11
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5984, metadata !DIExpression(DW_OP_deref)), !dbg !5986
  %call13 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6010
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call13, metadata !5985, metadata !DIExpression()), !dbg !5986
  %call14 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %call13) #7, !dbg !6012
  %tobool15 = icmp eq i8 %call14, 0, !dbg !6012
  br i1 %tobool15, label %land.lhs.true16, label %if.end20, !dbg !6014

land.lhs.true16:                                  ; preds = %for.body12
  %call17 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call13) #7, !dbg !6015
  %tobool18 = icmp eq i8 %call17, 0, !dbg !6015
  br i1 %tobool18, label %for.inc, label %if.end20, !dbg !6016

if.end20:                                         ; preds = %land.lhs.true16, %for.body12
  %call21 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call13) #6, !dbg !6017
  %cmp22 = icmp eq %union.tree_node* %call21, %0, !dbg !6019
  br i1 %cmp22, label %if.then23, label %for.inc, !dbg !6020

if.then23:                                        ; preds = %if.end20
  %call13.lcssa = phi %union.gimple_statement_d* [ %call13, %if.end20 ], !dbg !6010
  %stmt24 = getelementptr inbounds i8, i8* %data, i64 8, !dbg !6021
  %10 = bitcast i8* %stmt24 to %union.gimple_statement_d**, !dbg !6021
  store %union.gimple_statement_d* %call13.lcssa, %union.gimple_statement_d** %10, align 8, !dbg !6023
  br label %cleanup, !dbg !6024

for.inc:                                          ; preds = %land.lhs.true16, %if.end20
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5984, metadata !DIExpression(DW_OP_deref)), !dbg !5986
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6025
  br label %for.cond11, !dbg !6026, !llvm.loop !6027

for.inc26:                                        ; preds = %for.cond11
  %.pre = load %struct.function*, %struct.function** %f, align 8, !dbg !6002
  %cfg9.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !6029
  %.pre3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9.phi.trans.insert, align 8, !dbg !6002
  br label %for.cond, !dbg !6002, !llvm.loop !6030

for.end28:                                        ; preds = %for.cond
  store i32 1, i32* %walk_subtrees, align 4, !dbg !6032
  br label %cleanup, !dbg !6033

cleanup:                                          ; preds = %land.lhs.true, %for.end28, %if.then23
  %retval.0 = phi %union.tree_node* [ %0, %if.then23 ], [ null, %for.end28 ], [ null, %land.lhs.true ], !dbg !5986
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6034
  ret %union.tree_node* %retval.0, !dbg !6034
}

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @add_new_static_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator*, %union.tree_node*, i8 zeroext, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @mark_symbols_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

declare dso_local %struct.cgraph_node* @cgraph_node(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !6035 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6039, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6040, metadata !DIExpression()), !dbg !6041
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6042
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6043
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !6044
  store i40* %imm_uses, i40** %0, align 8, !dbg !6044
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !6045
  %1 = bitcast i40* %next to i64*, !dbg !6045
  %2 = load i64, i64* %1, align 8, !dbg !6045
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6046
  store i64 %2, i64* %3, align 8, !dbg !6046
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !6047
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next_imm_name, align 8, !dbg !6048
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6049
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6050
  %next3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !6051
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next3, align 8, !dbg !6052
  %stmt = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 2, i32 0, !dbg !6053
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !6054
  %use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 3, !dbg !6055
  store %union.tree_node** null, %union.tree_node*** %use, align 8, !dbg !6056
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6057
  %tobool = icmp eq i8 %call, 0, !dbg !6057
  br i1 %tobool, label %if.end, label %return, !dbg !6059

if.end:                                           ; preds = %entry
  %imm_use6 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6060
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !6060
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !6061
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !6062
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !6062
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !6062
  br label %return, !dbg !6063

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end ], [ null, %entry ], !dbg !6041
  ret %union.gimple_statement_d* %retval.0, !dbg !6064
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6065 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6067, metadata !DIExpression()), !dbg !6068
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6069
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6069
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6070
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !6070
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !6071
  %conv1 = zext i1 %cmp to i8, !dbg !6072
  ret i8 %conv1, !dbg !6073
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6074 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6076, metadata !DIExpression()), !dbg !6077
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6078
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6078
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !6079
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6079
  %2 = load i64, i64* %1, align 8, !dbg !6079
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !6080
  %3 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !6081
  store i64 %2, i64* %3, align 8, !dbg !6081
  ret %struct.ssa_use_operand_d* %0, !dbg !6082
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6083 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6085, metadata !DIExpression()), !dbg !6086
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6087
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6087
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6088
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %iter_node, !dbg !6089
  %conv1 = zext i1 %cmp to i8, !dbg !6090
  ret i8 %conv1, !dbg !6091
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !6092 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !6096, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !6097, metadata !DIExpression()), !dbg !6098
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #7, !dbg !6099
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !6100
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !6100
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !6101
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #7, !dbg !6102
  ret void, !dbg !6103
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6104 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6106, metadata !DIExpression()), !dbg !6107
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !6108
  %0 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !6108
  %1 = load i64, i64* %0, align 8, !dbg !6108
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6109
  store i64 %1, i64* %2, align 8, !dbg !6109
  %call = tail call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6110
  %tobool = icmp eq i8 %call, 0, !dbg !6110
  br i1 %tobool, label %if.else, label %return, !dbg !6112

if.else:                                          ; preds = %entry
  %imm_use1 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6113
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use1, align 8, !dbg !6113
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 1, !dbg !6115
  %4 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6115
  %5 = load i64, i64* %4, align 8, !dbg !6115
  store i64 %5, i64* %0, align 8, !dbg !6116
  br label %return, !dbg !6117

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %struct.ssa_use_operand_d* [ %3, %if.else ], [ null, %entry ], !dbg !6118
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6119
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6120 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6124, metadata !DIExpression()), !dbg !6125
  %next = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !6126
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6126
  %1 = load i64, i64* %0, align 8, !dbg !6126
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6127
  store i64 %1, i64* %2, align 8, !dbg !6127
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6128
  %tobool = icmp eq i8 %call, 0, !dbg !6128
  br i1 %tobool, label %if.end4, label %if.then, !dbg !6130

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6131
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6131
  %cmp = icmp eq %struct.ssa_use_operand_d* %3, null, !dbg !6134
  br i1 %cmp, label %return, label %if.then2, !dbg !6135

if.then2:                                         ; preds = %if.then
  %iter_node3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6136
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node3) #7, !dbg !6137
  br label %return, !dbg !6137

if.end4:                                          ; preds = %entry
  %imm_use5 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6138
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !6138
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !6139
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !6140
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !6140
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6140
  br label %return, !dbg !6141

return:                                           ; preds = %if.then, %if.then2, %if.end4
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end4 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !6125
  ret %union.gimple_statement_d* %retval.0, !dbg !6142
}

declare dso_local %struct.cgraph_edge* @cgraph_edge(%struct.cgraph_node*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @cgraph_remove_edge(%struct.cgraph_edge*) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %head, %struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6143 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !6147, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6148, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !6150, metadata !DIExpression()), !dbg !6155
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head, i64 0, i32 2, i32 0, !dbg !6156
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6156
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !6151, metadata !DIExpression()), !dbg !6155
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %head) #7, !dbg !6157
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6152, metadata !DIExpression()), !dbg !6155
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !6158
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !6158
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !6159
  %tobool = icmp eq i8 %call1, 0, !dbg !6159
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !6159
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6154, metadata !DIExpression()), !dbg !6155
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #7, !dbg !6160
  %cmp = icmp eq i32 %call2, 16, !dbg !6162
  br i1 %cmp, label %if.then, label %if.else, !dbg !6163

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6153, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !6164
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !6149, metadata !DIExpression()), !dbg !6155
  br label %for.cond, !dbg !6164

for.cond:                                         ; preds = %for.inc, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.then ], [ %call12, %for.inc ], !dbg !6167
  %last_p.0 = phi %struct.ssa_use_operand_d* [ %head, %if.then ], [ %last_p.1, %for.inc ], !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0, metadata !6150, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !6149, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6153, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6168
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6168
  br i1 %tobool6, label %for.body, label %if.end44.loopexit, !dbg !6164

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !6170
  %cmp8 = icmp eq %union.tree_node* %call7, %call, !dbg !6172
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !6173

if.then10:                                        ; preds = %for.body
  %call11 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.0, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.0) #7, !dbg !6174
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !6150, metadata !DIExpression()), !dbg !6155
  br label %for.inc, !dbg !6175

for.inc:                                          ; preds = %for.body, %if.then10
  %last_p.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.then10 ], [ %last_p.0, %for.body ], !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.1, metadata !6150, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6153, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  %call12 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6168
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call12, metadata !6149, metadata !DIExpression()), !dbg !6155
  br label %for.cond, !dbg !6168, !llvm.loop !6176

if.else:                                          ; preds = %entry
  br i1 %tobool, label %if.else31, label %if.then15, !dbg !6178

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6153, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !6180
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !6149, metadata !DIExpression()), !dbg !6155
  br label %for.cond17, !dbg !6180

for.cond17:                                       ; preds = %for.inc28, %if.then15
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call29, %for.inc28 ], !dbg !6184
  %last_p.2 = phi %struct.ssa_use_operand_d* [ %head, %if.then15 ], [ %last_p.3, %for.inc28 ], !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2, metadata !6150, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !6149, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6153, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  %call18 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6185
  %tobool19 = icmp eq i8 %call18, 0, !dbg !6185
  br i1 %tobool19, label %for.body21, label %if.end44.loopexit1, !dbg !6180

for.body21:                                       ; preds = %for.cond17
  %call22 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1) #7, !dbg !6187
  %cmp23 = icmp eq %union.tree_node* %call22, %call, !dbg !6189
  br i1 %cmp23, label %if.then25, label %for.inc28, !dbg !6190

if.then25:                                        ; preds = %for.body21
  %call26 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.1, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.2) #7, !dbg !6191
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !6150, metadata !DIExpression()), !dbg !6155
  br label %for.inc28, !dbg !6192

for.inc28:                                        ; preds = %for.body21, %if.then25
  %last_p.3 = phi %struct.ssa_use_operand_d* [ %call26, %if.then25 ], [ %last_p.2, %for.body21 ], !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.3, metadata !6150, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6153, metadata !DIExpression(DW_OP_deref)), !dbg !6155
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6185
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !6149, metadata !DIExpression()), !dbg !6155
  br label %for.cond17, !dbg !6185, !llvm.loop !6193

if.else31:                                        ; preds = %if.else
  %call32 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %0) #7, !dbg !6195
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call32, metadata !6149, metadata !DIExpression()), !dbg !6155
  %cmp33 = icmp eq %struct.ssa_use_operand_d* %call32, null, !dbg !6197
  br i1 %cmp33, label %if.end44, label %if.then35, !dbg !6198

if.then35:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call32) #7, !dbg !6199
  %cmp37 = icmp eq %union.tree_node* %call36, %call, !dbg !6202
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !6203

if.then39:                                        ; preds = %if.then35
  %call40 = tail call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* nonnull %call32, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %head) #7, !dbg !6204
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !6150, metadata !DIExpression()), !dbg !6155
  br label %if.end44, !dbg !6205

if.end44.loopexit:                                ; preds = %for.cond
  %last_p.0.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.0, %for.cond ], !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !6150, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !6150, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !6150, metadata !DIExpression()), !dbg !6155
  br label %if.end44, !dbg !6206

if.end44.loopexit1:                               ; preds = %for.cond17
  %last_p.2.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.2, %for.cond17 ], !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !6150, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !6150, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !6150, metadata !DIExpression()), !dbg !6155
  br label %if.end44, !dbg !6206

if.end44:                                         ; preds = %if.end44.loopexit1, %if.end44.loopexit, %if.else31, %if.then35, %if.then39
  %last_p.7 = phi %struct.ssa_use_operand_d* [ %head, %if.else31 ], [ %call40, %if.then39 ], [ %head, %if.then35 ], [ %last_p.0.lcssa, %if.end44.loopexit ], [ %last_p.2.lcssa, %if.end44.loopexit1 ], !dbg !6208
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.7, metadata !6150, metadata !DIExpression()), !dbg !6155
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6206
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6206
  %cmp45 = icmp eq %struct.ssa_use_operand_d* %2, null, !dbg !6209
  br i1 %cmp45, label %if.end49, label %if.then47, !dbg !6210

if.then47:                                        ; preds = %if.end44
  %iter_node48 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6211
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node48) #7, !dbg !6212
  br label %if.end49, !dbg !6212

if.end49:                                         ; preds = %if.end44, %if.then47
  %iter_node50 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6213
  call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* nonnull %iter_node50, %struct.ssa_use_operand_d* %last_p.7) #7, !dbg !6214
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !6215
  ret void, !dbg !6215
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !6216 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6221, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !6222, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6223, metadata !DIExpression()), !dbg !6226
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !6227
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6224, metadata !DIExpression()), !dbg !6226
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6228
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6229
  store i8 0, i8* %done, align 8, !dbg !6230
  %and = and i32 %flags, 5, !dbg !6231
  %cmp = icmp eq i32 %and, 0, !dbg !6231
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6231

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6231
  br label %cond.end, !dbg !6231

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !6232
  %tobool = icmp eq i8 %call1, 0, !dbg !6232
  %cond2 = select i1 %tobool, i32 4, i32 1, !dbg !6232
  call void @llvm.dbg.value(metadata i32 %cond2, metadata !6225, metadata !DIExpression()), !dbg !6226
  %and3 = and i32 %cond2, %flags, !dbg !6233
  %cmp4 = icmp eq i32 %and3, 0, !dbg !6235
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6236

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %done, align 8, !dbg !6237
  br label %cleanup, !dbg !6239

if.end:                                           ; preds = %cond.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6240
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6241
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !6242
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6243
  store i32 %call7, i32* %num_phi, align 4, !dbg !6244
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6245
  store i32 2, i32* %iter_type, align 4, !dbg !6246
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6247
  br label %cleanup, !dbg !6248

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !6226
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6249
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6250 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6256, metadata !DIExpression()), !dbg !6257
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6258
  %0 = load i8, i8* %done, align 8, !dbg !6258
  ret i8 %0, !dbg !6259
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p) unnamed_addr #0 !dbg !6260 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !6264, metadata !DIExpression()), !dbg !6267
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !6265, metadata !DIExpression()), !dbg !6267
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p, metadata !6266, metadata !DIExpression()), !dbg !6267
  %cmp = icmp eq %struct.ssa_use_operand_d* %use_p, %head, !dbg !6268
  br i1 %cmp, label %if.end3, label %if.then, !dbg !6270

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %last_p, i64 0, i32 1, !dbg !6271
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !6271
  %cmp1 = icmp eq %struct.ssa_use_operand_d* %0, %use_p, !dbg !6274
  br i1 %cmp1, label %if.end3, label %if.else, !dbg !6275

if.else:                                          ; preds = %if.then
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p) #7, !dbg !6276
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %last_p) #7, !dbg !6278
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !6266, metadata !DIExpression()), !dbg !6267
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.else, %if.then
  %last_p.addr.1 = phi %struct.ssa_use_operand_d* [ %last_p, %entry ], [ %use_p, %if.then ], [ %use_p, %if.else ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.addr.1, metadata !6266, metadata !DIExpression()), !dbg !6267
  ret %struct.ssa_use_operand_d* %last_p.addr.1, !dbg !6279
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6280 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6284, metadata !DIExpression()), !dbg !6286
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6287
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !6287
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !6289
  br i1 %tobool, label %if.end, label %if.then, !dbg !6290

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !6291
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !6285, metadata !DIExpression()), !dbg !6286
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !6293
  %2 = load i64, i64* %1, align 8, !dbg !6293
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6294
  store i64 %2, i64* %3, align 8, !dbg !6294
  br label %cleanup, !dbg !6295

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6296
  %4 = load i32, i32* %phi_i, align 8, !dbg !6296
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6298
  %5 = load i32, i32* %num_phi, align 4, !dbg !6298
  %cmp = icmp slt i32 %4, %5, !dbg !6299
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !6300

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6301
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6301
  %inc = add nsw i32 %4, 1, !dbg !6301
  store i32 %inc, i32* %phi_i, align 8, !dbg !6301
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !6301
  br label %cleanup, !dbg !6303

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6304
  store i8 1, i8* %done, align 8, !dbg !6305
  br label %cleanup, !dbg !6306

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !6286
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6307
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6308 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6310, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6311, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6312, metadata !DIExpression()), !dbg !6313
  %0 = and i32 %flags, 11, !dbg !6314
  %1 = icmp eq i32 %0, 1, !dbg !6314
  br i1 %1, label %cond.end, label %cond.true, !dbg !6314

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6314
  br label %cond.end, !dbg !6314

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !6315
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6316
  store i32 2, i32* %iter_type, align 4, !dbg !6317
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6318
  ret %struct.ssa_use_operand_d* %call, !dbg !6319
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6320 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6324, metadata !DIExpression()), !dbg !6326
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6327
  %tobool = icmp eq i8 %call, 0, !dbg !6327
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6329

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !6330
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !6330
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !6330
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !6325, metadata !DIExpression()), !dbg !6326
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !6331
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !6333

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !6334
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !6334
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !6335
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !6335
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !6336
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !6337
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !6338
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !6338

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !6339
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !6340 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !6344, metadata !DIExpression()), !dbg !6345
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !6346
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6346
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !6348
  br i1 %cmp, label %return, label %if.end, !dbg !6349

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !6350
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6350
  %2 = load i64, i64* %1, align 8, !dbg !6350
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !6351
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !6352
  store i64 %2, i64* %3, align 8, !dbg !6352
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !6353
  %5 = load i64, i64* %4, align 8, !dbg !6353
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !6354
  %7 = load i64*, i64** %6, align 8, !dbg !6354
  store i64 %5, i64* %7, align 8, !dbg !6355
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6356
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !6357
  br label %return, !dbg !6358

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !6358
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !6359 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !6363, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !6364, metadata !DIExpression()), !dbg !6365
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !6366
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6367
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !6368
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6368
  %1 = load i64, i64* %0, align 8, !dbg !6368
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !6369
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !6370
  store i64 %1, i64* %2, align 8, !dbg !6370
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !6371
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !6372
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !6373
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !6374
  ret void, !dbg !6375
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6376 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6378, metadata !DIExpression()), !dbg !6379
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6380
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !6380
  ret %union.tree_node* %0, !dbg !6381
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6382 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6386, metadata !DIExpression()), !dbg !6387
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6388
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !6389
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6390
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !6391
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6392
  store i32 0, i32* %iter_type, align 4, !dbg !6393
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6394
  store i32 0, i32* %phi_i, align 8, !dbg !6395
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6396
  store i32 0, i32* %num_phi, align 4, !dbg !6397
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6398
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6399
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6400
  store i8 1, i8* %done, align 8, !dbg !6401
  ret void, !dbg !6402
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6403 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6407, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6408, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6409, metadata !DIExpression()), !dbg !6410
  %0 = and i32 %flags, 10, !dbg !6411
  %1 = icmp eq i32 %0, 8, !dbg !6411
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !6411

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !6411
  %3 = icmp eq i32 %2, 4, !dbg !6411
  br i1 %3, label %cond.true, label %cond.end, !dbg !6411

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6411
  br label %cond.end, !dbg !6411

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !6412
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !6413

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6414
  br label %cond.end12, !dbg !6413

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !6413
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6415
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !6416
  %and14 = and i32 %flags, 8, !dbg !6417
  %tobool15 = icmp eq i32 %and14, 0, !dbg !6417
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !6419

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !6420
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !6421

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !6422
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !6423
  br i1 %cmp, label %if.end, label %if.then, !dbg !6424

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !6425
  %6 = load i64*, i64** %5, align 8, !dbg !6425
  %7 = load i64, i64* %6, align 8, !dbg !6426
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !6427
  store i64 %7, i64* %8, align 8, !dbg !6427
  br label %if.end, !dbg !6428

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !6429
  %tobool24 = icmp eq i32 %and23, 0, !dbg !6429
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !6430

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6431
  br label %cond.end28, !dbg !6430

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !6430
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6432
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !6433
  %and30 = and i32 %flags, 4, !dbg !6434
  %tobool31 = icmp eq i32 %and30, 0, !dbg !6434
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !6436

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !6437
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !6438

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !6439
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !6440
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !6441

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !6442
  %11 = load i64*, i64** %10, align 8, !dbg !6442
  %12 = load i64, i64* %11, align 8, !dbg !6443
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6444
  store i64 %12, i64* %13, align 8, !dbg !6444
  br label %if.end42, !dbg !6445

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6446
  store i8 0, i8* %done, align 8, !dbg !6447
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6448
  store i32 0, i32* %phi_i, align 8, !dbg !6449
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6450
  store i32 0, i32* %num_phi, align 4, !dbg !6451
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6452
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6453
  ret void, !dbg !6454
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6455 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6459, metadata !DIExpression()), !dbg !6460
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !6461
  %tobool = icmp eq i8 %call, 0, !dbg !6461
  br i1 %tobool, label %return, label %if.end, !dbg !6463

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !6464
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !6464
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !6464
  br label %return, !dbg !6465

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !6460
  ret %struct.def_optype_d* %retval.0, !dbg !6466
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6467 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6469, metadata !DIExpression()), !dbg !6470
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6471
  %tobool = icmp eq i8 %call, 0, !dbg !6471
  br i1 %tobool, label %return, label %if.end, !dbg !6473

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !6474
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !6474
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6474
  br label %return, !dbg !6475

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !6470
  ret %union.tree_node* %retval.0, !dbg !6476
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6477 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6481, metadata !DIExpression()), !dbg !6482
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !6483
  %tobool = icmp eq i8 %call, 0, !dbg !6483
  br i1 %tobool, label %return, label %if.end, !dbg !6485

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !6486
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !6486
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !6486
  br label %return, !dbg !6487

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !6482
  ret %struct.use_optype_d* %retval.0, !dbg !6488
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6489 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6491, metadata !DIExpression()), !dbg !6492
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6493
  %tobool = icmp eq i8 %call, 0, !dbg !6493
  br i1 %tobool, label %return, label %if.end, !dbg !6495

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !6496
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !6496
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6496
  br label %return, !dbg !6497

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !6492
  ret %union.tree_node* %retval.0, !dbg !6498
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6499 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6501, metadata !DIExpression()), !dbg !6502
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6503
  %cmp = icmp ugt i32 %call, 5, !dbg !6504
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6505

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6506
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6507
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6508
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !6509 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !6513, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !6514, metadata !DIExpression()), !dbg !6516
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !6517
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6519

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6520
  %bf.load = load i64, i64* %0, align 8, !dbg !6520
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6521
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !6521
  br i1 %cmp, label %if.else, label %if.then, !dbg !6522

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !6523
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6524
  br label %if.end, !dbg !6525

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6526
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !6526
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !6515, metadata !DIExpression()), !dbg !6516
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #7, !dbg !6528
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6529
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6530 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6534, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6535, metadata !DIExpression()), !dbg !6536
  br label %land.end, !dbg !6537

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6537
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6537
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6537
  ret %union.tree_node* %0, !dbg !6537
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6538 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6542, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6543, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.value(metadata i32 2, metadata !6544, metadata !DIExpression()), !dbg !6545
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 2) #7, !dbg !6546
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6547
  store i32 1, i32* %iter_type, align 4, !dbg !6548
  %call = tail call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6549
  ret %union.tree_node* %call, !dbg !6550
}

declare dso_local void @mark_sym_for_renaming(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6551 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6555, metadata !DIExpression()), !dbg !6557
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6558
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !6558
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !6560
  br i1 %tobool, label %if.end, label %if.then, !dbg !6561

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !6562
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %use_ptr) #7, !dbg !6562
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6556, metadata !DIExpression()), !dbg !6557
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !6564
  %2 = load i64*, i64** %1, align 8, !dbg !6564
  %3 = load i64, i64* %2, align 8, !dbg !6565
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6566
  store i64 %3, i64* %4, align 8, !dbg !6566
  br label %cleanup, !dbg !6567

if.end:                                           ; preds = %entry
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6568
  %5 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !6568
  %tobool4 = icmp eq %struct.def_optype_d* %5, null, !dbg !6570
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !6571

if.then5:                                         ; preds = %if.end
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %5, i64 0, i32 1, !dbg !6572
  %6 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !6572
  %call7 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %6) #7, !dbg !6572
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !6556, metadata !DIExpression()), !dbg !6557
  %7 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !6574
  %8 = load i64*, i64** %7, align 8, !dbg !6574
  %9 = load i64, i64* %8, align 8, !dbg !6575
  %10 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !6576
  store i64 %9, i64* %10, align 8, !dbg !6576
  br label %cleanup, !dbg !6577

if.end11:                                         ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6578
  store i8 1, i8* %done, align 8, !dbg !6579
  br label %cleanup, !dbg !6580

cleanup:                                          ; preds = %if.end11, %if.then5, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call7, %if.then5 ], [ null, %if.end11 ], !dbg !6557
  ret %union.tree_node* %retval.0, !dbg !6581
}

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6582 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6584, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6585, metadata !DIExpression()), !dbg !6586
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6587
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !6588
  ret %union.tree_node* %call, !dbg !6589
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !6590 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6594, metadata !DIExpression()), !dbg !6596
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6595, metadata !DIExpression()), !dbg !6596
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !6597
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !6598
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6600

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6601
  %bf.load = load i64, i64* %0, align 8, !dbg !6601
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6602
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !6602
  br i1 %cmp, label %if.then, label %if.end, !dbg !6603

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6604
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6604
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !6605
  br label %if.end, !dbg !6604

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !6606
}

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_rhs_code(%union.gimple_statement_d* %s, i32 %code) unnamed_addr #0 !dbg !6607 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !6611, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i32 116, metadata !6612, metadata !DIExpression()), !dbg !6613
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !6614
  %bf.load = load i32, i32* %0, align 8, !dbg !6615
  %bf.clear = and i32 %bf.load, 65535, !dbg !6615
  %bf.set = or i32 %bf.clear, 7602176, !dbg !6615
  store i32 %bf.set, i32* %0, align 8, !dbg !6615
  ret void, !dbg !6616
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_rhs1(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !6617 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6619, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !6620, metadata !DIExpression()), !dbg !6621
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #7, !dbg !6622
  ret void, !dbg !6623
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @compute_offset(i64 %orig, i64 %new_val, %union.tree_node* %result) unnamed_addr #5 !dbg !6624 {
entry:
  call void @llvm.dbg.value(metadata i64 %orig, metadata !6628, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.value(metadata i64 %new_val, metadata !6629, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !6630, metadata !DIExpression()), !dbg !6638
  %call = tail call i32 @exact_log2(i64 %orig) #6, !dbg !6639
  call void @llvm.dbg.value(metadata i32 %call, metadata !6631, metadata !DIExpression()), !dbg !6638
  %call1 = tail call i32 @exact_log2(i64 %new_val) #6, !dbg !6640
  call void @llvm.dbg.value(metadata i32 %call1, metadata !6632, metadata !DIExpression()), !dbg !6638
  %cmp = icmp ne i32 %call, -1, !dbg !6641
  %cmp2 = icmp ne i32 %call1, -1, !dbg !6643
  %or.cond = and i1 %cmp, %cmp2, !dbg !6644
  br i1 %or.cond, label %if.then, label %if.end20, !dbg !6644

if.then:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %call, %call1, !dbg !6645
  br i1 %cmp3, label %cleanup, label %if.else, !dbg !6648

if.else:                                          ; preds = %if.then
  %cmp5 = icmp sgt i32 %call, %call1, !dbg !6649
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %result, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6651
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6651
  br i1 %cmp5, label %if.then6, label %if.end11, !dbg !6652

if.then6:                                         ; preds = %if.else
  %sub = sub nsw i32 %call, %call1, !dbg !6653
  %conv = sext i32 %sub to i64, !dbg !6655
  %call7 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %0, i64 %conv) #6, !dbg !6656
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !6635, metadata !DIExpression()), !dbg !6638
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6657
  %call10 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 83, %union.tree_node* %1, %union.tree_node* %result, %union.tree_node* %call7) #6, !dbg !6657
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !6633, metadata !DIExpression()), !dbg !6638
  br label %cleanup, !dbg !6658

if.end11:                                         ; preds = %if.else
  %sub14 = sub nsw i32 %call1, %call, !dbg !6659
  %conv15 = sext i32 %sub14 to i64, !dbg !6660
  %call16 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %0, i64 %conv15) #6, !dbg !6661
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !6635, metadata !DIExpression()), !dbg !6638
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6662
  %call19 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 84, %union.tree_node* %2, %union.tree_node* %result, %union.tree_node* %call16) #6, !dbg !6662
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !6633, metadata !DIExpression()), !dbg !6638
  br label %cleanup, !dbg !6663

if.end20:                                         ; preds = %entry
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %result, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6664
  %3 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !6664
  %call23 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %3, i64 %orig) #6, !dbg !6665
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !6636, metadata !DIExpression()), !dbg !6638
  %4 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !6666
  %call26 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %4, i64 %new_val) #6, !dbg !6667
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !6637, metadata !DIExpression()), !dbg !6638
  %5 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !6668
  %call29 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 67, %union.tree_node* %5, %union.tree_node* %result, %union.tree_node* %call23) #6, !dbg !6668
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !6634, metadata !DIExpression()), !dbg !6638
  %6 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !6669
  %call32 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %6, %union.tree_node* %call29, %union.tree_node* %call26) #6, !dbg !6669
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !6633, metadata !DIExpression()), !dbg !6638
  br label %cleanup, !dbg !6670

cleanup:                                          ; preds = %if.then, %if.end20, %if.end11, %if.then6
  %retval.0 = phi %union.tree_node* [ %call10, %if.then6 ], [ %call19, %if.end11 ], [ %call32, %if.end20 ], [ %result, %if.then ], !dbg !6638
  ret %union.tree_node* %retval.0, !dbg !6671
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_rhs2(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !6672 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6674, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !6675, metadata !DIExpression()), !dbg !6676
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 2, %union.tree_node* %rhs) #7, !dbg !6677
  ret void, !dbg !6678
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !6679 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !6683, metadata !DIExpression()), !dbg !6684
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !6685
  %tobool = icmp eq i8 %call, 0, !dbg !6685
  br i1 %tobool, label %if.end, label %if.then, !dbg !6687

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !6688
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !6690
  br label %if.end, !dbg !6691

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6692
}

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !6693 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6697, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 %i, metadata !6698, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !6699, metadata !DIExpression()), !dbg !6700
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !6701
  %tobool = icmp eq i8 %call, 0, !dbg !6701
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !6701

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !6701
  %cmp = icmp ugt i32 %call1, %i, !dbg !6701
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6701

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6701
  br label %cond.end, !dbg !6701

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !6702
  %idxprom = zext i32 %i to i64, !dbg !6702
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !6702
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !6703
  ret void, !dbg !6704
}

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #2

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2141, !2142, !2143}
!llvm.ident = !{!2144}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pass_ipa_matrix_reorg", scope: !2, file: !3, line: 2405, type: !2115, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !674, globals: !2108, nameTableKind: None)
!3 = !DIFile(filename: "matrix-reorg.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !13, !189, !317, !512, !521, !525, !531, !536, !541, !559, !566, !573, !596, !635, !641, !667}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !6, line: 104, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 74, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!16 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!20 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!21 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!22 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!23 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!24 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!25 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!26 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!27 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!28 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!29 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!30 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!31 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!32 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!33 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!34 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!35 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!36 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!37 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!38 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!39 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!40 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!41 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!42 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!43 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!44 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!45 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!46 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!47 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!48 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!50 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!51 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!52 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!53 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!54 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!55 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!56 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!57 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!58 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!59 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!60 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!61 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!62 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!63 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!64 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!65 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!66 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!67 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!68 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!69 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!70 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!71 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!72 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!73 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!74 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!75 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!76 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!77 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!78 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!79 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!80 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!81 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!82 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!83 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!84 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!85 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!86 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!87 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!88 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!89 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!90 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!91 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!92 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!93 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!94 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!95 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!96 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!97 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!98 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!99 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!100 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!101 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!102 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!103 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!104 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!105 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!106 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!107 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!108 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!109 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!110 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!111 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!112 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!113 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!114 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!115 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!116 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!117 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!118 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!119 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!120 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!121 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!122 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!123 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!124 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!125 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!126 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!127 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!128 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!129 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!130 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!131 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!132 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!133 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!134 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!135 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!136 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!137 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!138 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!139 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!140 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!141 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!142 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!143 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!144 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!145 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!146 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!147 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!148 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!149 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!150 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!151 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!152 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!153 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!154 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!155 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!156 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!157 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!158 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!159 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!160 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!161 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!162 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!163 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!164 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!165 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!166 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!167 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!168 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!169 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!170 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!171 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!172 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!173 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!174 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!175 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!176 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!177 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!178 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!179 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!180 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!181 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!182 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!183 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!184 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!185 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!186 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!187 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!188 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !190, line: 7, baseType: !7, size: 32, elements: !191)
!190 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316}
!192 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!281 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!282 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!283 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!284 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!285 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!286 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!287 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!288 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!289 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!290 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!291 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!292 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!293 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!294 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!295 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!296 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!297 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!298 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!299 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!300 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!301 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!302 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!303 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!304 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!305 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!306 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!307 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!308 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!309 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!310 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!311 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!312 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!313 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!314 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!315 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!316 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!317 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !318, line: 39, baseType: !7, size: 32, elements: !319)
!318 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!319 = !{!320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511}
!320 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!321 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!322 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!323 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!324 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!325 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!326 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!327 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!328 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!329 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!330 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!331 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!332 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!333 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!334 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!335 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!336 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!337 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!338 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!339 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!340 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!341 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!342 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!343 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!344 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!345 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!346 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!347 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!348 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!349 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!350 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!351 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!352 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!353 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!354 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!355 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!356 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!357 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!358 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!359 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!360 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!361 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!362 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!363 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!364 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!365 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!366 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!367 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!368 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!369 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!370 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!371 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!372 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!373 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!374 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!375 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!376 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!378 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!379 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!380 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!381 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!382 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!383 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!384 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!385 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!386 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!387 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!388 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!389 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!390 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!391 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!392 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!393 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!394 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!395 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!396 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!397 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!398 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!399 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!400 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!401 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!402 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!403 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!404 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!405 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!406 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!407 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!408 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!409 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!410 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!411 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!412 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!413 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!414 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!415 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!416 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!417 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!418 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!419 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!420 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!421 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!422 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!423 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!424 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!425 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!426 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!427 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!428 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!429 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!430 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!431 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!432 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!433 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!434 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!435 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!436 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!437 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!438 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!439 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!440 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!441 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!442 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!443 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!444 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!445 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!446 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!447 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!448 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!449 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!450 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!451 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!452 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!453 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!454 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!455 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!456 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!457 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!458 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!459 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!460 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!461 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!462 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!463 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!464 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!465 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!466 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!467 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!468 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!469 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!470 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!471 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!472 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!473 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!474 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!475 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!476 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!477 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!478 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!479 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!480 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!481 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!482 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!483 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!484 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!485 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!486 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!487 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!488 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!489 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!490 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!491 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!492 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!493 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!494 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!495 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!496 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!497 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!498 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!499 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!500 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!501 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!502 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!505 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!506 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!507 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!508 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!509 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!510 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!511 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!512 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !513, line: 31, baseType: !7, size: 32, elements: !514)
!513 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!514 = !{!515, !516, !517, !518, !519, !520}
!515 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!516 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!517 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!518 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!519 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!520 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!521 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !513, line: 91, baseType: !7, size: 32, elements: !522)
!522 = !{!523, !524}
!523 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!524 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!525 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !526, line: 363, baseType: !7, size: 32, elements: !527)
!526 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!527 = !{!528, !529, !530}
!528 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!529 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!530 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!531 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !526, line: 355, baseType: !7, size: 32, elements: !532)
!532 = !{!533, !534, !535}
!533 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!534 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!535 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!536 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !537, line: 474, baseType: !7, size: 32, elements: !538)
!537 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!538 = !{!539, !540}
!539 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!540 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !318, line: 280, baseType: !7, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558}
!543 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!544 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!545 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!546 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!547 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!548 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!549 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!550 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!551 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!552 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!553 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!554 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!555 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!556 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!557 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!558 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!559 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !318, line: 1817, baseType: !7, size: 32, elements: !560)
!560 = !{!561, !562, !563, !564, !565}
!561 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!562 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!563 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!564 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!565 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !318, line: 1805, baseType: !7, size: 32, elements: !567)
!567 = !{!568, !569, !570, !571, !572}
!568 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!569 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!570 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!571 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!572 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!573 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !574, line: 309, baseType: !7, size: 32, elements: !575)
!574 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!575 = !{!576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595}
!576 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!577 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!578 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!579 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!580 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!581 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!582 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!583 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!584 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!585 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!586 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!587 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!588 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!589 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!590 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!591 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!592 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!593 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!594 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!595 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!596 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !597, line: 51, baseType: !7, size: 32, elements: !598)
!597 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!598 = !{!599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634}
!599 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!603 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!604 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!605 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!606 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!607 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!608 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!609 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!610 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!611 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!612 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!613 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!614 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!615 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!616 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!617 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!618 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!619 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!620 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!621 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!622 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!623 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!624 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!625 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!626 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!627 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!628 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!629 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!630 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!631 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!632 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!633 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!634 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!635 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !597, line: 80, baseType: !7, size: 32, elements: !636)
!636 = !{!637, !638, !639, !640}
!637 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!638 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!639 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!640 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!641 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !597, line: 727, baseType: !7, size: 32, elements: !642)
!642 = !{!643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666}
!643 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!644 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!645 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!646 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!647 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!648 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!649 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!650 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!651 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!652 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!653 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!654 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!655 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!656 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!657 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!658 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!659 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!660 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!661 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!662 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!663 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!664 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!665 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!666 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !668, line: 119, baseType: !7, size: 32, elements: !669)
!668 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!669 = !{!670, !671, !672, !673}
!670 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!671 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!672 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!673 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!674 = !{!675, !676, !677, !678, !681, !682, !317, !635, !684, !2036, !866, !1277, !679, !2038, !2090, !2052, !2091, !2047, !2060, !2097, !2100, !2101, !7, !820, !2078, !2065, !2063, !2077, !703, !2089, !837, !2102}
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!677 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !680)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !597, line: 737, size: 768, elements: !686)
!686 = !{!687, !1883, !1893, !1899, !1904, !1909, !1916, !1922, !1928, !1933, !1947, !1952, !1958, !1963, !1973, !1978, !1994, !2001, !2008, !2014, !2019, !2025, !2031}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !685, file: !597, line: 738, baseType: !688, size: 256)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !597, line: 271, size: 256, elements: !689)
!689 = !{!690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !705, !706, !1882}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !688, file: !597, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !688, file: !597, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !688, file: !597, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !688, file: !597, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !688, file: !597, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !688, file: !597, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !688, file: !597, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !688, file: !597, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !688, file: !597, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !688, file: !597, line: 312, baseType: !7, size: 32, offset: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !688, file: !597, line: 316, baseType: !701, size: 32, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !702, line: 58, baseType: !703)
!702 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !704, line: 44, baseType: !7)
!704 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!705 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !688, file: !597, line: 319, baseType: !7, size: 32, offset: 96)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !688, file: !597, line: 323, baseType: !707, size: 64, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !526, line: 217, size: 832, elements: !709)
!709 = !{!710, !1849, !1850, !1851, !1852, !1856, !1857, !1858, !1876, !1877, !1878, !1879, !1880, !1881}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !708, file: !526, line: 219, baseType: !711, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !526, line: 151, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !526, line: 151, size: 128, elements: !714)
!714 = !{!715}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !713, file: !526, line: 151, baseType: !716, size: 128)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !526, line: 150, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !526, line: 150, size: 128, elements: !718)
!718 = !{!719, !720, !721}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !717, file: !526, line: 150, baseType: !7, size: 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !717, file: !526, line: 150, baseType: !7, size: 32, offset: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !717, file: !526, line: 150, baseType: !722, size: 64, offset: 64)
!722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !723, size: 64, elements: !785)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !724, line: 108, baseType: !725)
!724 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !526, line: 122, size: 512, elements: !727)
!727 = !{!728, !729, !730, !1841, !1842, !1843, !1844, !1845, !1846, !1847}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !726, file: !526, line: 124, baseType: !707, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !726, file: !526, line: 125, baseType: !707, size: 64, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !726, file: !526, line: 131, baseType: !731, size: 64, offset: 128)
!731 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !526, line: 128, size: 64, elements: !732)
!732 = !{!733, !749}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !731, file: !526, line: 129, baseType: !734, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !724, line: 66, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !597, line: 143, size: 192, elements: !737)
!737 = !{!738, !747, !748}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !736, file: !597, line: 145, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !724, line: 69, baseType: !740)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !597, line: 136, size: 192, elements: !742)
!742 = !{!743, !745, !746}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !741, file: !597, line: 137, baseType: !744, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !724, line: 58, baseType: !684)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !741, file: !597, line: 138, baseType: !740, size: 64, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !741, file: !597, line: 139, baseType: !740, size: 64, offset: 128)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !736, file: !597, line: 146, baseType: !739, size: 64, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !736, file: !597, line: 152, baseType: !734, size: 64, offset: 128)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !731, file: !526, line: 130, baseType: !750, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !724, line: 50, baseType: !751)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !753, line: 240, size: 384, elements: !754)
!753 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!754 = !{!755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !752, file: !753, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !752, file: !753, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !752, file: !753, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !752, file: !753, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !752, file: !753, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !752, file: !753, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !752, file: !753, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !752, file: !753, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !752, file: !753, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !752, file: !753, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !752, file: !753, line: 321, baseType: !766, size: 320, offset: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !753, line: 315, size: 320, elements: !767)
!767 = !{!768, !1808, !1810, !1839, !1840}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !766, file: !753, line: 316, baseType: !769, size: 64)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !770, size: 64, elements: !785)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !753, line: 183, baseType: !771)
!771 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !753, line: 166, size: 64, elements: !772)
!772 = !{!773, !774, !775, !776, !777, !787, !788, !800, !803, !865, !1786, !1787, !1798, !1805}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !771, file: !753, line: 168, baseType: !677, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !771, file: !753, line: 169, baseType: !7, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !771, file: !753, line: 170, baseType: !682, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !771, file: !753, line: 171, baseType: !750, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !771, file: !753, line: 172, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !724, line: 53, baseType: !779)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !753, line: 359, size: 128, elements: !781)
!781 = !{!782, !783}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !780, file: !753, line: 360, baseType: !677, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !780, file: !753, line: 361, baseType: !784, size: 64, offset: 64)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 64, elements: !785)
!785 = !{!786}
!786 = !DISubrange(count: 1)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !771, file: !753, line: 173, baseType: !189, size: 32)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !771, file: !753, line: 174, baseType: !789, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !753, line: 133, baseType: !790)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !753, line: 115, size: 32, elements: !791)
!791 = !{!792, !793, !794, !795, !796, !797, !798, !799}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !790, file: !753, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !790, file: !753, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !790, file: !753, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !790, file: !753, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !790, file: !753, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !790, file: !753, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !790, file: !753, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !790, file: !753, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !771, file: !753, line: 175, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !753, line: 175, flags: DIFlagFwdDecl)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !771, file: !753, line: 176, baseType: !804, size: 64)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !806, line: 75, size: 256, elements: !807)
!806 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!807 = !{!808, !823, !824, !825}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !805, file: !806, line: 76, baseType: !809, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !806, line: 68, baseType: !811)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !806, line: 63, size: 320, elements: !812)
!812 = !{!813, !815, !816, !817}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !811, file: !806, line: 64, baseType: !814, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !811, file: !806, line: 65, baseType: !814, size: 64, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !811, file: !806, line: 66, baseType: !7, size: 32, offset: 128)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !811, file: !806, line: 67, baseType: !818, size: 128, offset: 192)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !819, size: 128, elements: !821)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !806, line: 29, baseType: !820)
!820 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!821 = !{!822}
!822 = !DISubrange(count: 2)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !805, file: !806, line: 77, baseType: !809, size: 64, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !805, file: !806, line: 78, baseType: !7, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !805, file: !806, line: 79, baseType: !826, size: 64, offset: 192)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !806, line: 49, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !806, line: 45, size: 832, elements: !829)
!829 = !{!830, !831, !832}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !828, file: !806, line: 46, baseType: !814, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !828, file: !806, line: 47, baseType: !804, size: 64, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !828, file: !806, line: 48, baseType: !833, size: 704, offset: 128)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !834, line: 164, size: 704, elements: !835)
!834 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!835 = !{!836, !838, !848, !849, !850, !851, !852, !853, !857, !861, !862, !863, !864}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !833, file: !834, line: 166, baseType: !837, size: 64)
!837 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !833, file: !834, line: 167, baseType: !839, size: 64, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !834, line: 157, size: 192, elements: !841)
!841 = !{!842, !843, !844}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !840, file: !834, line: 159, baseType: !679, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !840, file: !834, line: 160, baseType: !839, size: 64, offset: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !840, file: !834, line: 161, baseType: !845, size: 32, offset: 128)
!845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 32, elements: !846)
!846 = !{!847}
!847 = !DISubrange(count: 4)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !833, file: !834, line: 168, baseType: !679, size: 64, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !833, file: !834, line: 169, baseType: !679, size: 64, offset: 192)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !833, file: !834, line: 170, baseType: !679, size: 64, offset: 256)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !833, file: !834, line: 171, baseType: !837, size: 64, offset: 320)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !833, file: !834, line: 172, baseType: !677, size: 32, offset: 384)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !833, file: !834, line: 176, baseType: !854, size: 64, offset: 448)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{!839, !681, !837}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !833, file: !834, line: 177, baseType: !858, size: 64, offset: 512)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{null, !681, !839}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !833, file: !834, line: 178, baseType: !681, size: 64, offset: 576)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !833, file: !834, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !833, file: !834, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !833, file: !834, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !771, file: !753, line: 177, baseType: !866, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !724, line: 56, baseType: !867)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !318, line: 3371, size: 1792, elements: !869)
!869 = !{!870, !903, !909, !920, !939, !950, !955, !962, !968, !981, !989, !1027, !1032, !1060, !1077, !1078, !1083, !1092, !1098, !1103, !1107, !1111, !1435, !1484, !1490, !1496, !1503, !1516, !1530, !1547, !1559, !1581, !1596, !1768}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !868, file: !318, line: 3372, baseType: !871, size: 64)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !318, line: 360, size: 64, elements: !872)
!872 = !{!873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !871, file: !318, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !871, file: !318, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !871, file: !318, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !871, file: !318, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !871, file: !318, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !871, file: !318, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !871, file: !318, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !871, file: !318, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !871, file: !318, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !871, file: !318, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !871, file: !318, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !871, file: !318, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !871, file: !318, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !871, file: !318, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !871, file: !318, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !871, file: !318, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !871, file: !318, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !871, file: !318, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !871, file: !318, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !871, file: !318, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !871, file: !318, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !871, file: !318, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !871, file: !318, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !871, file: !318, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !871, file: !318, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !871, file: !318, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !871, file: !318, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !871, file: !318, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !871, file: !318, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !871, file: !318, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !868, file: !318, line: 3373, baseType: !904, size: 192)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !318, line: 402, size: 192, elements: !905)
!905 = !{!906, !907, !908}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !904, file: !318, line: 403, baseType: !871, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !904, file: !318, line: 404, baseType: !866, size: 64, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !904, file: !318, line: 405, baseType: !866, size: 64, offset: 128)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !868, file: !318, line: 3374, baseType: !910, size: 320)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !318, line: 1384, size: 320, elements: !911)
!911 = !{!912, !913}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !910, file: !318, line: 1385, baseType: !904, size: 192)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !910, file: !318, line: 1386, baseType: !914, size: 128, offset: 192)
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !915, line: 58, baseType: !916)
!915 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !915, line: 54, size: 128, elements: !917)
!917 = !{!918, !919}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !916, file: !915, line: 56, baseType: !820, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !916, file: !915, line: 57, baseType: !837, size: 64, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !868, file: !318, line: 3375, baseType: !921, size: 256)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !318, line: 1397, size: 256, elements: !922)
!922 = !{!923, !924}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !921, file: !318, line: 1398, baseType: !904, size: 192)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !921, file: !318, line: 1399, baseType: !925, size: 64, offset: 192)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !927, line: 52, size: 256, elements: !928)
!927 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!928 = !{!929, !930, !931, !932, !933, !934, !935}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !926, file: !927, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !926, file: !927, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !926, file: !927, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !926, file: !927, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !926, file: !927, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !926, file: !927, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !926, file: !927, line: 62, baseType: !936, size: 192, offset: 64)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !820, size: 192, elements: !937)
!937 = !{!938}
!938 = !DISubrange(count: 3)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !868, file: !318, line: 3376, baseType: !940, size: 256)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !318, line: 1408, size: 256, elements: !941)
!941 = !{!942, !943}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !940, file: !318, line: 1409, baseType: !904, size: 192)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !940, file: !318, line: 1410, baseType: !944, size: 64, offset: 192)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !946, line: 27, size: 192, elements: !947)
!946 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!947 = !{!948, !949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !945, file: !946, line: 29, baseType: !914, size: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !945, file: !946, line: 30, baseType: !189, size: 32, offset: 128)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !868, file: !318, line: 3377, baseType: !951, size: 256)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !318, line: 1437, size: 256, elements: !952)
!952 = !{!953, !954}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !951, file: !318, line: 1438, baseType: !904, size: 192)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !951, file: !318, line: 1439, baseType: !866, size: 64, offset: 192)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !868, file: !318, line: 3378, baseType: !956, size: 256)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !318, line: 1418, size: 256, elements: !957)
!957 = !{!958, !959, !960}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !956, file: !318, line: 1419, baseType: !904, size: 192)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !956, file: !318, line: 1420, baseType: !677, size: 32, offset: 192)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !956, file: !318, line: 1421, baseType: !961, size: 8, offset: 224)
!961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 8, elements: !785)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !868, file: !318, line: 3379, baseType: !963, size: 320)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !318, line: 1428, size: 320, elements: !964)
!964 = !{!965, !966, !967}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !963, file: !318, line: 1429, baseType: !904, size: 192)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !963, file: !318, line: 1430, baseType: !866, size: 64, offset: 192)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !963, file: !318, line: 1431, baseType: !866, size: 64, offset: 256)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !868, file: !318, line: 3380, baseType: !969, size: 320)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !318, line: 1460, size: 320, elements: !970)
!970 = !{!971, !972}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !969, file: !318, line: 1461, baseType: !904, size: 192)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !969, file: !318, line: 1462, baseType: !973, size: 128, offset: 192)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !974, line: 31, size: 128, elements: !975)
!974 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!975 = !{!976, !979, !980}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !973, file: !974, line: 32, baseType: !977, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !676)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !973, file: !974, line: 33, baseType: !7, size: 32, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !973, file: !974, line: 34, baseType: !7, size: 32, offset: 96)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !868, file: !318, line: 3381, baseType: !982, size: 384)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !318, line: 2507, size: 384, elements: !983)
!983 = !{!984, !985, !986, !987, !988}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !982, file: !318, line: 2508, baseType: !904, size: 192)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !982, file: !318, line: 2509, baseType: !701, size: 32, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !982, file: !318, line: 2510, baseType: !7, size: 32, offset: 224)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !982, file: !318, line: 2511, baseType: !866, size: 64, offset: 256)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !982, file: !318, line: 2512, baseType: !866, size: 64, offset: 320)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !868, file: !318, line: 3382, baseType: !990, size: 896)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !318, line: 2652, size: 896, elements: !991)
!991 = !{!992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !990, file: !318, line: 2653, baseType: !982, size: 384)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !990, file: !318, line: 2654, baseType: !866, size: 64, offset: 384)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !990, file: !318, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !990, file: !318, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !990, file: !318, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !990, file: !318, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !990, file: !318, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !990, file: !318, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !990, file: !318, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !990, file: !318, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !990, file: !318, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !990, file: !318, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !990, file: !318, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !990, file: !318, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !990, file: !318, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !990, file: !318, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !990, file: !318, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !990, file: !318, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !990, file: !318, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !990, file: !318, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !990, file: !318, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !990, file: !318, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !990, file: !318, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !990, file: !318, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !990, file: !318, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !990, file: !318, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !990, file: !318, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !990, file: !318, line: 2703, baseType: !7, size: 32, offset: 512)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !990, file: !318, line: 2705, baseType: !866, size: 64, offset: 576)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !990, file: !318, line: 2706, baseType: !866, size: 64, offset: 640)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !990, file: !318, line: 2707, baseType: !866, size: 64, offset: 704)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !990, file: !318, line: 2708, baseType: !866, size: 64, offset: 768)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !990, file: !318, line: 2711, baseType: !1025, size: 64, offset: 832)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !318, line: 2711, flags: DIFlagFwdDecl)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !868, file: !318, line: 3383, baseType: !1028, size: 960)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !318, line: 2756, size: 960, elements: !1029)
!1029 = !{!1030, !1031}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1028, file: !318, line: 2757, baseType: !990, size: 896)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1028, file: !318, line: 2758, baseType: !750, size: 64, offset: 896)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !868, file: !318, line: 3384, baseType: !1033, size: 1472)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !318, line: 3114, size: 1472, elements: !1034)
!1034 = !{!1035, !1056, !1057, !1058, !1059}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1033, file: !318, line: 3115, baseType: !1036, size: 1216)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !318, line: 2984, size: 1216, elements: !1037)
!1037 = !{!1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1036, file: !318, line: 2985, baseType: !1028, size: 960)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1036, file: !318, line: 2986, baseType: !866, size: 64, offset: 960)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1036, file: !318, line: 2987, baseType: !866, size: 64, offset: 1024)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1036, file: !318, line: 2988, baseType: !866, size: 64, offset: 1088)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1036, file: !318, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1036, file: !318, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1036, file: !318, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1036, file: !318, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1036, file: !318, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1036, file: !318, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1036, file: !318, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1036, file: !318, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1036, file: !318, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1036, file: !318, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1036, file: !318, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1036, file: !318, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1036, file: !318, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1036, file: !318, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1033, file: !318, line: 3117, baseType: !866, size: 64, offset: 1216)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1033, file: !318, line: 3119, baseType: !866, size: 64, offset: 1280)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1033, file: !318, line: 3121, baseType: !866, size: 64, offset: 1344)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1033, file: !318, line: 3123, baseType: !866, size: 64, offset: 1408)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !868, file: !318, line: 3385, baseType: !1061, size: 1088)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !318, line: 2874, size: 1088, elements: !1062)
!1062 = !{!1063, !1064, !1065}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1061, file: !318, line: 2875, baseType: !1028, size: 960)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1061, file: !318, line: 2876, baseType: !750, size: 64, offset: 960)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1061, file: !318, line: 2877, baseType: !1066, size: 64, offset: 1024)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1068, line: 172, size: 128, elements: !1069)
!1068 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1069 = !{!1070, !1071, !1072, !1073, !1074, !1075, !1076}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1067, file: !1068, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1067, file: !1068, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1067, file: !1068, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1067, file: !1068, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1067, file: !1068, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1067, file: !1068, line: 195, baseType: !7, size: 32, offset: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1067, file: !1068, line: 199, baseType: !866, size: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !868, file: !318, line: 3386, baseType: !1036, size: 1216)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !868, file: !318, line: 3387, baseType: !1079, size: 1280)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !318, line: 3093, size: 1280, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1079, file: !318, line: 3094, baseType: !1036, size: 1216)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1079, file: !318, line: 3095, baseType: !1066, size: 64, offset: 1216)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !868, file: !318, line: 3388, baseType: !1084, size: 1216)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !318, line: 2824, size: 1216, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089, !1090, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1084, file: !318, line: 2825, baseType: !990, size: 896)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1084, file: !318, line: 2827, baseType: !866, size: 64, offset: 896)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1084, file: !318, line: 2828, baseType: !866, size: 64, offset: 960)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1084, file: !318, line: 2829, baseType: !866, size: 64, offset: 1024)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1084, file: !318, line: 2830, baseType: !866, size: 64, offset: 1088)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1084, file: !318, line: 2831, baseType: !866, size: 64, offset: 1152)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !868, file: !318, line: 3389, baseType: !1093, size: 1024)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !318, line: 2850, size: 1024, elements: !1094)
!1094 = !{!1095, !1096, !1097}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1093, file: !318, line: 2851, baseType: !1028, size: 960)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1093, file: !318, line: 2852, baseType: !677, size: 32, offset: 960)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1093, file: !318, line: 2853, baseType: !677, size: 32, offset: 992)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !868, file: !318, line: 3390, baseType: !1099, size: 1024)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !318, line: 2857, size: 1024, elements: !1100)
!1100 = !{!1101, !1102}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1099, file: !318, line: 2858, baseType: !1028, size: 960)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1099, file: !318, line: 2859, baseType: !1066, size: 64, offset: 960)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !868, file: !318, line: 3391, baseType: !1104, size: 960)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !318, line: 2862, size: 960, elements: !1105)
!1105 = !{!1106}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1104, file: !318, line: 2863, baseType: !1028, size: 960)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !868, file: !318, line: 3392, baseType: !1108, size: 1472)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !318, line: 3304, size: 1472, elements: !1109)
!1109 = !{!1110}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1108, file: !318, line: 3305, baseType: !1033, size: 1472)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !868, file: !318, line: 3393, baseType: !1112, size: 1792)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !318, line: 3248, size: 1792, elements: !1113)
!1113 = !{!1114, !1115, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1112, file: !318, line: 3249, baseType: !1033, size: 1472)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1112, file: !318, line: 3251, baseType: !1116, size: 64, offset: 1472)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1118, line: 463, size: 1152, elements: !1119)
!1118 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1119 = !{!1120, !1123, !1154, !1155, !1295, !1358, !1359, !1360, !1361, !1362, !1363, !1387, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1117, file: !1118, line: 464, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1118, line: 464, flags: DIFlagFwdDecl)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1117, file: !1118, line: 467, baseType: !1124, size: 64, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !526, line: 374, size: 640, elements: !1126)
!1126 = !{!1127, !1129, !1130, !1143, !1144, !1145, !1146, !1147, !1148, !1150, !1152, !1153}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1125, file: !526, line: 377, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !724, line: 111, baseType: !707)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1125, file: !526, line: 378, baseType: !1128, size: 64, offset: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1125, file: !526, line: 381, baseType: !1131, size: 64, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !526, line: 282, baseType: !1133)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !526, line: 282, size: 128, elements: !1134)
!1134 = !{!1135}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1133, file: !526, line: 282, baseType: !1136, size: 128)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !526, line: 281, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !526, line: 281, size: 128, elements: !1138)
!1138 = !{!1139, !1140, !1141}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1137, file: !526, line: 281, baseType: !7, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1137, file: !526, line: 281, baseType: !7, size: 32, offset: 32)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1137, file: !526, line: 281, baseType: !1142, size: 64, offset: 64)
!1142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1128, size: 64, elements: !785)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1125, file: !526, line: 384, baseType: !677, size: 32, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1125, file: !526, line: 387, baseType: !677, size: 32, offset: 224)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1125, file: !526, line: 390, baseType: !677, size: 32, offset: 256)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1125, file: !526, line: 394, baseType: !1131, size: 64, offset: 320)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1125, file: !526, line: 396, baseType: !525, size: 32, offset: 384)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1125, file: !526, line: 399, baseType: !1149, size: 64, offset: 416)
!1149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 64, elements: !821)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1125, file: !526, line: 402, baseType: !1151, size: 64, offset: 480)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !821)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1125, file: !526, line: 406, baseType: !677, size: 32, offset: 544)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1125, file: !526, line: 409, baseType: !677, size: 32, offset: 576)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1117, file: !1118, line: 470, baseType: !735, size: 64, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1117, file: !1118, line: 473, baseType: !1156, size: 64, offset: 192)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1068, line: 39, size: 1152, elements: !1158)
!1158 = !{!1159, !1211, !1224, !1237, !1238, !1250, !1251, !1255, !1256, !1257, !1258, !1259}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1157, file: !1068, line: 41, baseType: !1160, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1161, line: 144, baseType: !1162)
!1161 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1161, line: 100, size: 896, elements: !1164)
!1164 = !{!1165, !1173, !1178, !1183, !1185, !1188, !1189, !1190, !1191, !1192, !1197, !1199, !1200, !1205, !1210}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1163, file: !1161, line: 102, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1161, line: 52, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!1170, !1171}
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1161, line: 47, baseType: !7)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1163, file: !1161, line: 105, baseType: !1174, size: 64, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1161, line: 59, baseType: !1175)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!677, !1171, !1171}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1163, file: !1161, line: 108, baseType: !1179, size: 64, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1161, line: 63, baseType: !1180)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !681}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1163, file: !1161, line: 111, baseType: !1184, size: 64, offset: 192)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1163, file: !1161, line: 114, baseType: !1186, size: 64, offset: 256)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1187, line: 46, baseType: !820)
!1187 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1163, file: !1161, line: 117, baseType: !1186, size: 64, offset: 320)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1163, file: !1161, line: 120, baseType: !1186, size: 64, offset: 384)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1163, file: !1161, line: 124, baseType: !7, size: 32, offset: 448)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1163, file: !1161, line: 128, baseType: !7, size: 32, offset: 480)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1163, file: !1161, line: 131, baseType: !1193, size: 64, offset: 512)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1161, line: 75, baseType: !1194)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!681, !1186, !1186}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1163, file: !1161, line: 132, baseType: !1198, size: 64, offset: 576)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1161, line: 78, baseType: !1180)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1163, file: !1161, line: 135, baseType: !681, size: 64, offset: 640)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1163, file: !1161, line: 136, baseType: !1201, size: 64, offset: 704)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1161, line: 82, baseType: !1202)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!681, !681, !1186, !1186}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1163, file: !1161, line: 137, baseType: !1206, size: 64, offset: 768)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1161, line: 83, baseType: !1207)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{null, !681, !681}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1163, file: !1161, line: 141, baseType: !7, size: 32, offset: 832)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1157, file: !1068, line: 48, baseType: !1212, size: 64, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !597, line: 35, baseType: !1214)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !597, line: 35, size: 128, elements: !1215)
!1215 = !{!1216}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1214, file: !597, line: 35, baseType: !1217, size: 128)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !597, line: 33, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !597, line: 33, size: 128, elements: !1219)
!1219 = !{!1220, !1221, !1222}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1218, file: !597, line: 33, baseType: !7, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1218, file: !597, line: 33, baseType: !7, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1218, file: !597, line: 33, baseType: !1223, size: 64, offset: 64)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, size: 64, elements: !785)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1157, file: !1068, line: 51, baseType: !1225, size: 64, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !318, line: 183, baseType: !1227)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !318, line: 183, size: 128, elements: !1228)
!1228 = !{!1229}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1227, file: !318, line: 183, baseType: !1230, size: 128)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !318, line: 182, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !318, line: 182, size: 128, elements: !1232)
!1232 = !{!1233, !1234, !1235}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1231, file: !318, line: 182, baseType: !7, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1231, file: !318, line: 182, baseType: !7, size: 32, offset: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1231, file: !318, line: 182, baseType: !1236, size: 64, offset: 64)
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !866, size: 64, elements: !785)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1157, file: !1068, line: 54, baseType: !866, size: 64, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1157, file: !1068, line: 57, baseType: !1239, size: 128, offset: 256)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1240, line: 31, size: 128, elements: !1241)
!1240 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1241 = !{!1242, !1243, !1244, !1245, !1246, !1247, !1248}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1239, file: !1240, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1239, file: !1240, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1239, file: !1240, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1239, file: !1240, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1239, file: !1240, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1239, file: !1240, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1239, file: !1240, line: 56, baseType: !1249, size: 64, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !724, line: 47, baseType: !804)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1157, file: !1068, line: 60, baseType: !1239, size: 128, offset: 384)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1157, file: !1068, line: 64, baseType: !1252, size: 64, offset: 512)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1254, line: 33, flags: DIFlagFwdDecl)
!1254 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1157, file: !1068, line: 67, baseType: !866, size: 64, offset: 576)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1157, file: !1068, line: 73, baseType: !1160, size: 64, offset: 640)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1157, file: !1068, line: 77, baseType: !1249, size: 64, offset: 704)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1157, file: !1068, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1157, file: !1068, line: 82, baseType: !1260, size: 320, offset: 832)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !668, line: 62, size: 320, elements: !1261)
!1261 = !{!1262, !1268, !1269, !1270, !1271, !1278}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1260, file: !668, line: 63, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !668, line: 56, size: 128, elements: !1265)
!1265 = !{!1266, !1267}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1264, file: !668, line: 57, baseType: !1263, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1264, file: !668, line: 58, baseType: !961, size: 8, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1260, file: !668, line: 64, baseType: !7, size: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1260, file: !668, line: 66, baseType: !7, size: 32, offset: 96)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1260, file: !668, line: 68, baseType: !676, size: 8, offset: 128)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1260, file: !668, line: 70, baseType: !1272, size: 64, offset: 192)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !668, line: 37, size: 128, elements: !1274)
!1274 = !{!1275, !1276}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1273, file: !668, line: 39, baseType: !1272, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1273, file: !668, line: 40, baseType: !1277, size: 64, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1260, file: !668, line: 71, baseType: !1279, size: 64, offset: 256)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !668, line: 45, size: 320, elements: !1281)
!1281 = !{!1282, !1283}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1280, file: !668, line: 47, baseType: !1279, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1280, file: !668, line: 48, baseType: !1284, size: 256, offset: 64)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !318, line: 1883, size: 256, elements: !1285)
!1285 = !{!1286, !1288, !1289, !1294}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1284, file: !318, line: 1884, baseType: !1287, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1284, file: !318, line: 1885, baseType: !1287, size: 64, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1284, file: !318, line: 1891, baseType: !1290, size: 64, offset: 128)
!1290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1284, file: !318, line: 1891, size: 64, elements: !1291)
!1291 = !{!1292, !1293}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1290, file: !318, line: 1891, baseType: !744, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1290, file: !318, line: 1891, baseType: !866, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1284, file: !318, line: 1892, baseType: !1277, size: 64, offset: 192)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1117, file: !1118, line: 476, baseType: !1296, size: 64, offset: 256)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !513, line: 187, size: 256, elements: !1298)
!1298 = !{!1299, !1300, !1356, !1357}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1297, file: !513, line: 189, baseType: !677, size: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1297, file: !513, line: 192, baseType: !1301, size: 64, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !513, line: 87, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !513, line: 87, size: 128, elements: !1304)
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1303, file: !513, line: 87, baseType: !1306, size: 128)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !513, line: 85, baseType: !1307)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !513, line: 85, size: 128, elements: !1308)
!1308 = !{!1309, !1310, !1311}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1307, file: !513, line: 85, baseType: !7, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1307, file: !513, line: 85, baseType: !7, size: 32, offset: 32)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1307, file: !513, line: 85, baseType: !1312, size: 64, offset: 64)
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1313, size: 64, elements: !785)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !513, line: 84, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !513, line: 100, size: 1216, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1321, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1346, !1354, !1355}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1315, file: !513, line: 102, baseType: !677, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1315, file: !513, line: 105, baseType: !7, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1315, file: !513, line: 108, baseType: !707, size: 64, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1315, file: !513, line: 111, baseType: !707, size: 64, offset: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1315, file: !513, line: 114, baseType: !1322, size: 64, offset: 192)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !513, line: 41, size: 64, elements: !1323)
!1323 = !{!1324, !1325}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1322, file: !513, line: 42, baseType: !512, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1322, file: !513, line: 43, baseType: !7, size: 32, offset: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1315, file: !513, line: 117, baseType: !7, size: 32, offset: 256)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1315, file: !513, line: 120, baseType: !7, size: 32, offset: 288)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1315, file: !513, line: 123, baseType: !1301, size: 64, offset: 320)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1315, file: !513, line: 126, baseType: !1314, size: 64, offset: 384)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1315, file: !513, line: 129, baseType: !1314, size: 64, offset: 448)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1315, file: !513, line: 132, baseType: !681, size: 64, offset: 512)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1315, file: !513, line: 139, baseType: !866, size: 64, offset: 576)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1315, file: !513, line: 143, baseType: !914, size: 128, offset: 640)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1315, file: !513, line: 146, baseType: !914, size: 128, offset: 768)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1315, file: !513, line: 148, baseType: !676, size: 8, offset: 896)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1315, file: !513, line: 149, baseType: !676, size: 8, offset: 904)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1315, file: !513, line: 153, baseType: !521, size: 32, offset: 928)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1315, file: !513, line: 156, baseType: !1339, size: 64, offset: 960)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !513, line: 48, size: 320, elements: !1341)
!1341 = !{!1342, !1343, !1344, !1345}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1340, file: !513, line: 50, baseType: !744, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1340, file: !513, line: 59, baseType: !914, size: 128, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1340, file: !513, line: 64, baseType: !676, size: 8, offset: 192)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1340, file: !513, line: 67, baseType: !1339, size: 64, offset: 256)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1315, file: !513, line: 159, baseType: !1347, size: 64, offset: 1024)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !513, line: 72, size: 256, elements: !1349)
!1349 = !{!1350, !1351, !1352, !1353}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1348, file: !513, line: 74, baseType: !725, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1348, file: !513, line: 77, baseType: !1347, size: 64, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1348, file: !513, line: 78, baseType: !1347, size: 64, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1348, file: !513, line: 81, baseType: !1347, size: 64, offset: 192)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1315, file: !513, line: 162, baseType: !676, size: 8, offset: 1088)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1315, file: !513, line: 166, baseType: !866, size: 64, offset: 1152)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1297, file: !513, line: 197, baseType: !1160, size: 64, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1297, file: !513, line: 200, baseType: !1314, size: 64, offset: 192)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1117, file: !1118, line: 479, baseType: !1160, size: 64, offset: 320)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1117, file: !1118, line: 484, baseType: !866, size: 64, offset: 384)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1117, file: !1118, line: 488, baseType: !866, size: 64, offset: 448)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1117, file: !1118, line: 493, baseType: !866, size: 64, offset: 512)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1117, file: !1118, line: 496, baseType: !866, size: 64, offset: 576)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1117, file: !1118, line: 501, baseType: !1364, size: 64, offset: 640)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !537, line: 2355, size: 576, elements: !1366)
!1366 = !{!1367, !1370, !1371, !1372, !1373, !1375, !1376, !1381, !1382, !1383, !1384, !1385, !1386}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1365, file: !537, line: 2356, baseType: !1368, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !537, line: 2356, flags: DIFlagFwdDecl)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1365, file: !537, line: 2357, baseType: !682, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1365, file: !537, line: 2358, baseType: !677, size: 32, offset: 128)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1365, file: !537, line: 2359, baseType: !677, size: 32, offset: 160)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1365, file: !537, line: 2360, baseType: !1374, size: 128, offset: 192)
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 128, elements: !846)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1365, file: !537, line: 2364, baseType: !677, size: 32, offset: 320)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1365, file: !537, line: 2367, baseType: !1377, size: 128, offset: 384)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !537, line: 2349, size: 128, elements: !1378)
!1378 = !{!1379, !1380}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1377, file: !537, line: 2351, baseType: !750, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1377, file: !537, line: 2352, baseType: !837, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1365, file: !537, line: 2371, baseType: !536, size: 32, offset: 512)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1365, file: !537, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1365, file: !537, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1365, file: !537, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1365, file: !537, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1365, file: !537, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1117, file: !1118, line: 504, baseType: !1388, size: 64, offset: 704)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1118, line: 504, flags: DIFlagFwdDecl)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1117, file: !1118, line: 507, baseType: !1160, size: 64, offset: 768)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1117, file: !1118, line: 510, baseType: !677, size: 32, offset: 832)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1117, file: !1118, line: 513, baseType: !677, size: 32, offset: 864)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1117, file: !1118, line: 516, baseType: !701, size: 32, offset: 896)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1117, file: !1118, line: 519, baseType: !701, size: 32, offset: 928)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1117, file: !1118, line: 522, baseType: !7, size: 32, offset: 960)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1117, file: !1118, line: 523, baseType: !7, size: 32, offset: 992)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1117, file: !1118, line: 528, baseType: !682, size: 64, offset: 1024)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1117, file: !1118, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1117, file: !1118, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1117, file: !1118, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1117, file: !1118, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1117, file: !1118, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1117, file: !1118, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1117, file: !1118, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1117, file: !1118, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1117, file: !1118, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1117, file: !1118, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1117, file: !1118, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1117, file: !1118, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1117, file: !1118, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1117, file: !1118, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1117, file: !1118, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1117, file: !1118, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1112, file: !318, line: 3254, baseType: !866, size: 64, offset: 1536)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1112, file: !318, line: 3257, baseType: !866, size: 64, offset: 1600)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1112, file: !318, line: 3258, baseType: !866, size: 64, offset: 1664)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1112, file: !318, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1112, file: !318, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1112, file: !318, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1112, file: !318, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1112, file: !318, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1112, file: !318, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1112, file: !318, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1112, file: !318, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1112, file: !318, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1112, file: !318, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1112, file: !318, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1112, file: !318, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1112, file: !318, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1112, file: !318, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1112, file: !318, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1112, file: !318, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1112, file: !318, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1112, file: !318, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !868, file: !318, line: 3394, baseType: !1436, size: 1344)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !318, line: 2279, size: 1344, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1463, !1464, !1465, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1436, file: !318, line: 2280, baseType: !904, size: 192)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1436, file: !318, line: 2281, baseType: !866, size: 64, offset: 192)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1436, file: !318, line: 2282, baseType: !866, size: 64, offset: 256)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1436, file: !318, line: 2283, baseType: !866, size: 64, offset: 320)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1436, file: !318, line: 2284, baseType: !866, size: 64, offset: 384)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1436, file: !318, line: 2285, baseType: !7, size: 32, offset: 448)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1436, file: !318, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1436, file: !318, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1436, file: !318, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1436, file: !318, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1436, file: !318, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1436, file: !318, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1436, file: !318, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1436, file: !318, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1436, file: !318, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1436, file: !318, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1436, file: !318, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1436, file: !318, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1436, file: !318, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1436, file: !318, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1436, file: !318, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1436, file: !318, line: 2305, baseType: !7, size: 32, offset: 512)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1436, file: !318, line: 2306, baseType: !1461, size: 32, offset: 544)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1462, line: 31, baseType: !677)
!1462 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1436, file: !318, line: 2307, baseType: !866, size: 64, offset: 576)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1436, file: !318, line: 2308, baseType: !866, size: 64, offset: 640)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1436, file: !318, line: 2314, baseType: !1466, size: 64, offset: 704)
!1466 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !318, line: 2309, size: 64, elements: !1467)
!1467 = !{!1468, !1469, !1470}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1466, file: !318, line: 2310, baseType: !677, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1466, file: !318, line: 2311, baseType: !682, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1466, file: !318, line: 2312, baseType: !1471, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !318, line: 2277, flags: DIFlagFwdDecl)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1436, file: !318, line: 2315, baseType: !866, size: 64, offset: 768)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1436, file: !318, line: 2316, baseType: !866, size: 64, offset: 832)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1436, file: !318, line: 2317, baseType: !866, size: 64, offset: 896)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1436, file: !318, line: 2318, baseType: !866, size: 64, offset: 960)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1436, file: !318, line: 2319, baseType: !866, size: 64, offset: 1024)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1436, file: !318, line: 2320, baseType: !866, size: 64, offset: 1088)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1436, file: !318, line: 2321, baseType: !866, size: 64, offset: 1152)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1436, file: !318, line: 2322, baseType: !866, size: 64, offset: 1216)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1436, file: !318, line: 2324, baseType: !1482, size: 64, offset: 1280)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !318, line: 2324, flags: DIFlagFwdDecl)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !868, file: !318, line: 3395, baseType: !1485, size: 320)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !318, line: 1469, size: 320, elements: !1486)
!1486 = !{!1487, !1488, !1489}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1485, file: !318, line: 1470, baseType: !904, size: 192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1485, file: !318, line: 1471, baseType: !866, size: 64, offset: 192)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1485, file: !318, line: 1472, baseType: !866, size: 64, offset: 256)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !868, file: !318, line: 3396, baseType: !1491, size: 320)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !318, line: 1482, size: 320, elements: !1492)
!1492 = !{!1493, !1494, !1495}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1491, file: !318, line: 1483, baseType: !904, size: 192)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1491, file: !318, line: 1484, baseType: !677, size: 32, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1491, file: !318, line: 1485, baseType: !1236, size: 64, offset: 256)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !868, file: !318, line: 3397, baseType: !1497, size: 384)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !318, line: 1829, size: 384, elements: !1498)
!1498 = !{!1499, !1500, !1501, !1502}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1497, file: !318, line: 1830, baseType: !904, size: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1497, file: !318, line: 1831, baseType: !701, size: 32, offset: 192)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1497, file: !318, line: 1832, baseType: !866, size: 64, offset: 256)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1497, file: !318, line: 1835, baseType: !1236, size: 64, offset: 320)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !868, file: !318, line: 3398, baseType: !1504, size: 704)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !318, line: 1898, size: 704, elements: !1505)
!1505 = !{!1506, !1507, !1508, !1509, !1510, !1515}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1504, file: !318, line: 1899, baseType: !904, size: 192)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1504, file: !318, line: 1902, baseType: !866, size: 64, offset: 192)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1504, file: !318, line: 1905, baseType: !744, size: 64, offset: 256)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1504, file: !318, line: 1908, baseType: !7, size: 32, offset: 320)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1504, file: !318, line: 1911, baseType: !1511, size: 64, offset: 384)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1068, line: 117, size: 128, elements: !1513)
!1513 = !{!1514}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1512, file: !1068, line: 120, baseType: !1239, size: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1504, file: !318, line: 1914, baseType: !1284, size: 256, offset: 448)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !868, file: !318, line: 3399, baseType: !1517, size: 704)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !318, line: 2008, size: 704, elements: !1518)
!1518 = !{!1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1517, file: !318, line: 2009, baseType: !904, size: 192)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1517, file: !318, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1517, file: !318, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1517, file: !318, line: 2014, baseType: !701, size: 32, offset: 224)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1517, file: !318, line: 2016, baseType: !866, size: 64, offset: 256)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1517, file: !318, line: 2017, baseType: !1225, size: 64, offset: 320)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1517, file: !318, line: 2019, baseType: !866, size: 64, offset: 384)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1517, file: !318, line: 2020, baseType: !866, size: 64, offset: 448)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1517, file: !318, line: 2021, baseType: !866, size: 64, offset: 512)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1517, file: !318, line: 2022, baseType: !866, size: 64, offset: 576)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1517, file: !318, line: 2023, baseType: !866, size: 64, offset: 640)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !868, file: !318, line: 3400, baseType: !1531, size: 832)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !318, line: 2430, size: 832, elements: !1532)
!1532 = !{!1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1531, file: !318, line: 2431, baseType: !904, size: 192)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1531, file: !318, line: 2433, baseType: !866, size: 64, offset: 192)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1531, file: !318, line: 2434, baseType: !866, size: 64, offset: 256)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1531, file: !318, line: 2435, baseType: !866, size: 64, offset: 320)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1531, file: !318, line: 2436, baseType: !866, size: 64, offset: 384)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1531, file: !318, line: 2437, baseType: !1225, size: 64, offset: 448)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1531, file: !318, line: 2438, baseType: !866, size: 64, offset: 512)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1531, file: !318, line: 2440, baseType: !866, size: 64, offset: 576)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1531, file: !318, line: 2441, baseType: !866, size: 64, offset: 640)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1531, file: !318, line: 2443, baseType: !1543, size: 128, offset: 704)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !318, line: 182, baseType: !1544)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !318, line: 182, size: 128, elements: !1545)
!1545 = !{!1546}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1544, file: !318, line: 182, baseType: !1230, size: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !868, file: !318, line: 3401, baseType: !1548, size: 320)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !318, line: 3327, size: 320, elements: !1549)
!1549 = !{!1550, !1551, !1558}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1548, file: !318, line: 3329, baseType: !904, size: 192)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1548, file: !318, line: 3330, baseType: !1552, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !318, line: 3320, size: 192, elements: !1554)
!1554 = !{!1555, !1556, !1557}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1553, file: !318, line: 3322, baseType: !1552, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1553, file: !318, line: 3323, baseType: !1552, size: 64, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1553, file: !318, line: 3324, baseType: !866, size: 64, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1548, file: !318, line: 3331, baseType: !1552, size: 64, offset: 256)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !868, file: !318, line: 3402, baseType: !1560, size: 256)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !318, line: 1540, size: 256, elements: !1561)
!1561 = !{!1562, !1563}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1560, file: !318, line: 1541, baseType: !904, size: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1560, file: !318, line: 1542, baseType: !1564, size: 64, offset: 192)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !318, line: 1538, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !318, line: 1538, size: 192, elements: !1567)
!1567 = !{!1568}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1566, file: !318, line: 1538, baseType: !1569, size: 192)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !318, line: 1537, baseType: !1570)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !318, line: 1537, size: 192, elements: !1571)
!1571 = !{!1572, !1573, !1574}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1570, file: !318, line: 1537, baseType: !7, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1570, file: !318, line: 1537, baseType: !7, size: 32, offset: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1570, file: !318, line: 1537, baseType: !1575, size: 128, offset: 64)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1576, size: 128, elements: !785)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !318, line: 1535, baseType: !1577)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !318, line: 1532, size: 128, elements: !1578)
!1578 = !{!1579, !1580}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1577, file: !318, line: 1533, baseType: !866, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1577, file: !318, line: 1534, baseType: !866, size: 64, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !868, file: !318, line: 3403, baseType: !1582, size: 512)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !318, line: 1938, size: 512, elements: !1583)
!1583 = !{!1584, !1585, !1586, !1587, !1593, !1594, !1595}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1582, file: !318, line: 1939, baseType: !904, size: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1582, file: !318, line: 1940, baseType: !701, size: 32, offset: 192)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1582, file: !318, line: 1941, baseType: !541, size: 32, offset: 224)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1582, file: !318, line: 1946, baseType: !1588, size: 32, offset: 256)
!1588 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !318, line: 1942, size: 32, elements: !1589)
!1589 = !{!1590, !1591, !1592}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1588, file: !318, line: 1943, baseType: !559, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1588, file: !318, line: 1944, baseType: !566, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1588, file: !318, line: 1945, baseType: !317, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1582, file: !318, line: 1950, baseType: !734, size: 64, offset: 320)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1582, file: !318, line: 1951, baseType: !734, size: 64, offset: 384)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1582, file: !318, line: 1953, baseType: !1236, size: 64, offset: 448)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !868, file: !318, line: 3404, baseType: !1597, size: 1664)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !318, line: 3337, size: 1664, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1597, file: !318, line: 3338, baseType: !904, size: 192)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1597, file: !318, line: 3341, baseType: !1601, size: 1472, offset: 192)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1602, line: 410, size: 1472, elements: !1603)
!1602 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1603 = !{!1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1601, file: !1602, line: 412, baseType: !677, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1601, file: !1602, line: 413, baseType: !677, size: 32, offset: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1601, file: !1602, line: 414, baseType: !677, size: 32, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1601, file: !1602, line: 415, baseType: !677, size: 32, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1601, file: !1602, line: 416, baseType: !677, size: 32, offset: 128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1601, file: !1602, line: 417, baseType: !677, size: 32, offset: 160)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1601, file: !1602, line: 418, baseType: !676, size: 8, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1601, file: !1602, line: 419, baseType: !676, size: 8, offset: 200)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1601, file: !1602, line: 420, baseType: !1613, size: 8, offset: 208)
!1613 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1601, file: !1602, line: 421, baseType: !1613, size: 8, offset: 216)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1601, file: !1602, line: 422, baseType: !1613, size: 8, offset: 224)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1601, file: !1602, line: 423, baseType: !1613, size: 8, offset: 232)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1601, file: !1602, line: 424, baseType: !1613, size: 8, offset: 240)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1601, file: !1602, line: 425, baseType: !1613, size: 8, offset: 248)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1601, file: !1602, line: 426, baseType: !1613, size: 8, offset: 256)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1601, file: !1602, line: 427, baseType: !1613, size: 8, offset: 264)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1601, file: !1602, line: 428, baseType: !1613, size: 8, offset: 272)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1601, file: !1602, line: 429, baseType: !1613, size: 8, offset: 280)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1601, file: !1602, line: 430, baseType: !1613, size: 8, offset: 288)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1601, file: !1602, line: 431, baseType: !1613, size: 8, offset: 296)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1601, file: !1602, line: 432, baseType: !1613, size: 8, offset: 304)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1601, file: !1602, line: 433, baseType: !1613, size: 8, offset: 312)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1601, file: !1602, line: 434, baseType: !1613, size: 8, offset: 320)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1601, file: !1602, line: 435, baseType: !1613, size: 8, offset: 328)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1601, file: !1602, line: 436, baseType: !1613, size: 8, offset: 336)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1601, file: !1602, line: 437, baseType: !1613, size: 8, offset: 344)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1601, file: !1602, line: 438, baseType: !1613, size: 8, offset: 352)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1601, file: !1602, line: 439, baseType: !1613, size: 8, offset: 360)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1601, file: !1602, line: 440, baseType: !1613, size: 8, offset: 368)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1601, file: !1602, line: 441, baseType: !1613, size: 8, offset: 376)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1601, file: !1602, line: 442, baseType: !1613, size: 8, offset: 384)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1601, file: !1602, line: 443, baseType: !1613, size: 8, offset: 392)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1601, file: !1602, line: 444, baseType: !1613, size: 8, offset: 400)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1601, file: !1602, line: 445, baseType: !1613, size: 8, offset: 408)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1601, file: !1602, line: 446, baseType: !1613, size: 8, offset: 416)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1601, file: !1602, line: 447, baseType: !1613, size: 8, offset: 424)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1601, file: !1602, line: 448, baseType: !1613, size: 8, offset: 432)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1601, file: !1602, line: 449, baseType: !1613, size: 8, offset: 440)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1601, file: !1602, line: 450, baseType: !1613, size: 8, offset: 448)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1601, file: !1602, line: 451, baseType: !1613, size: 8, offset: 456)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1601, file: !1602, line: 452, baseType: !1613, size: 8, offset: 464)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1601, file: !1602, line: 453, baseType: !1613, size: 8, offset: 472)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1601, file: !1602, line: 454, baseType: !1613, size: 8, offset: 480)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1601, file: !1602, line: 455, baseType: !1613, size: 8, offset: 488)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1601, file: !1602, line: 456, baseType: !1613, size: 8, offset: 496)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1601, file: !1602, line: 457, baseType: !1613, size: 8, offset: 504)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1601, file: !1602, line: 458, baseType: !1613, size: 8, offset: 512)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1601, file: !1602, line: 459, baseType: !1613, size: 8, offset: 520)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1601, file: !1602, line: 460, baseType: !1613, size: 8, offset: 528)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1601, file: !1602, line: 461, baseType: !1613, size: 8, offset: 536)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1601, file: !1602, line: 462, baseType: !1613, size: 8, offset: 544)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1601, file: !1602, line: 463, baseType: !1613, size: 8, offset: 552)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1601, file: !1602, line: 464, baseType: !1613, size: 8, offset: 560)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1601, file: !1602, line: 465, baseType: !1613, size: 8, offset: 568)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1601, file: !1602, line: 466, baseType: !1613, size: 8, offset: 576)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1601, file: !1602, line: 467, baseType: !1613, size: 8, offset: 584)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1601, file: !1602, line: 468, baseType: !1613, size: 8, offset: 592)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1601, file: !1602, line: 469, baseType: !1613, size: 8, offset: 600)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1601, file: !1602, line: 470, baseType: !1613, size: 8, offset: 608)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1601, file: !1602, line: 471, baseType: !1613, size: 8, offset: 616)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1601, file: !1602, line: 472, baseType: !1613, size: 8, offset: 624)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1601, file: !1602, line: 473, baseType: !1613, size: 8, offset: 632)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1601, file: !1602, line: 474, baseType: !1613, size: 8, offset: 640)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1601, file: !1602, line: 475, baseType: !1613, size: 8, offset: 648)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1601, file: !1602, line: 476, baseType: !1613, size: 8, offset: 656)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1601, file: !1602, line: 477, baseType: !1613, size: 8, offset: 664)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1601, file: !1602, line: 478, baseType: !1613, size: 8, offset: 672)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1601, file: !1602, line: 479, baseType: !1613, size: 8, offset: 680)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1601, file: !1602, line: 480, baseType: !1613, size: 8, offset: 688)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1601, file: !1602, line: 481, baseType: !1613, size: 8, offset: 696)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1601, file: !1602, line: 482, baseType: !1613, size: 8, offset: 704)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1601, file: !1602, line: 483, baseType: !1613, size: 8, offset: 712)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1601, file: !1602, line: 484, baseType: !1613, size: 8, offset: 720)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1601, file: !1602, line: 485, baseType: !1613, size: 8, offset: 728)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1601, file: !1602, line: 486, baseType: !1613, size: 8, offset: 736)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1601, file: !1602, line: 487, baseType: !1613, size: 8, offset: 744)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1601, file: !1602, line: 488, baseType: !1613, size: 8, offset: 752)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1601, file: !1602, line: 489, baseType: !1613, size: 8, offset: 760)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1601, file: !1602, line: 490, baseType: !1613, size: 8, offset: 768)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1601, file: !1602, line: 491, baseType: !1613, size: 8, offset: 776)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1601, file: !1602, line: 492, baseType: !1613, size: 8, offset: 784)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1601, file: !1602, line: 493, baseType: !1613, size: 8, offset: 792)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1601, file: !1602, line: 494, baseType: !1613, size: 8, offset: 800)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1601, file: !1602, line: 495, baseType: !1613, size: 8, offset: 808)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1601, file: !1602, line: 496, baseType: !1613, size: 8, offset: 816)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1601, file: !1602, line: 497, baseType: !1613, size: 8, offset: 824)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1601, file: !1602, line: 498, baseType: !1613, size: 8, offset: 832)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1601, file: !1602, line: 499, baseType: !1613, size: 8, offset: 840)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1601, file: !1602, line: 500, baseType: !1613, size: 8, offset: 848)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1601, file: !1602, line: 501, baseType: !1613, size: 8, offset: 856)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1601, file: !1602, line: 502, baseType: !1613, size: 8, offset: 864)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1601, file: !1602, line: 503, baseType: !1613, size: 8, offset: 872)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1601, file: !1602, line: 504, baseType: !1613, size: 8, offset: 880)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1601, file: !1602, line: 505, baseType: !1613, size: 8, offset: 888)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1601, file: !1602, line: 506, baseType: !1613, size: 8, offset: 896)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1601, file: !1602, line: 507, baseType: !1613, size: 8, offset: 904)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1601, file: !1602, line: 508, baseType: !1613, size: 8, offset: 912)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1601, file: !1602, line: 509, baseType: !1613, size: 8, offset: 920)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1601, file: !1602, line: 510, baseType: !1613, size: 8, offset: 928)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1601, file: !1602, line: 511, baseType: !1613, size: 8, offset: 936)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1601, file: !1602, line: 512, baseType: !1613, size: 8, offset: 944)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1601, file: !1602, line: 513, baseType: !1613, size: 8, offset: 952)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1601, file: !1602, line: 514, baseType: !1613, size: 8, offset: 960)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1601, file: !1602, line: 515, baseType: !1613, size: 8, offset: 968)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1601, file: !1602, line: 516, baseType: !1613, size: 8, offset: 976)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1601, file: !1602, line: 517, baseType: !1613, size: 8, offset: 984)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1601, file: !1602, line: 518, baseType: !1613, size: 8, offset: 992)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1601, file: !1602, line: 519, baseType: !1613, size: 8, offset: 1000)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1601, file: !1602, line: 520, baseType: !1613, size: 8, offset: 1008)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1601, file: !1602, line: 521, baseType: !1613, size: 8, offset: 1016)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1601, file: !1602, line: 522, baseType: !1613, size: 8, offset: 1024)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1601, file: !1602, line: 523, baseType: !1613, size: 8, offset: 1032)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1601, file: !1602, line: 524, baseType: !1613, size: 8, offset: 1040)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1601, file: !1602, line: 525, baseType: !1613, size: 8, offset: 1048)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1601, file: !1602, line: 526, baseType: !1613, size: 8, offset: 1056)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1601, file: !1602, line: 527, baseType: !1613, size: 8, offset: 1064)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1601, file: !1602, line: 528, baseType: !1613, size: 8, offset: 1072)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1601, file: !1602, line: 529, baseType: !1613, size: 8, offset: 1080)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1601, file: !1602, line: 530, baseType: !1613, size: 8, offset: 1088)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1601, file: !1602, line: 531, baseType: !1613, size: 8, offset: 1096)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1601, file: !1602, line: 532, baseType: !1613, size: 8, offset: 1104)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1601, file: !1602, line: 533, baseType: !1613, size: 8, offset: 1112)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1601, file: !1602, line: 534, baseType: !1613, size: 8, offset: 1120)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1601, file: !1602, line: 535, baseType: !1613, size: 8, offset: 1128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1601, file: !1602, line: 536, baseType: !1613, size: 8, offset: 1136)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1601, file: !1602, line: 537, baseType: !1613, size: 8, offset: 1144)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1601, file: !1602, line: 538, baseType: !1613, size: 8, offset: 1152)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1601, file: !1602, line: 539, baseType: !1613, size: 8, offset: 1160)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1601, file: !1602, line: 540, baseType: !1613, size: 8, offset: 1168)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1601, file: !1602, line: 541, baseType: !1613, size: 8, offset: 1176)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1601, file: !1602, line: 542, baseType: !1613, size: 8, offset: 1184)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1601, file: !1602, line: 543, baseType: !1613, size: 8, offset: 1192)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1601, file: !1602, line: 544, baseType: !1613, size: 8, offset: 1200)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1601, file: !1602, line: 545, baseType: !1613, size: 8, offset: 1208)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1601, file: !1602, line: 546, baseType: !1613, size: 8, offset: 1216)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1601, file: !1602, line: 547, baseType: !1613, size: 8, offset: 1224)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1601, file: !1602, line: 548, baseType: !1613, size: 8, offset: 1232)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1601, file: !1602, line: 549, baseType: !1613, size: 8, offset: 1240)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1601, file: !1602, line: 550, baseType: !1613, size: 8, offset: 1248)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1601, file: !1602, line: 551, baseType: !1613, size: 8, offset: 1256)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1601, file: !1602, line: 552, baseType: !1613, size: 8, offset: 1264)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1601, file: !1602, line: 553, baseType: !1613, size: 8, offset: 1272)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1601, file: !1602, line: 554, baseType: !1613, size: 8, offset: 1280)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1601, file: !1602, line: 555, baseType: !1613, size: 8, offset: 1288)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1601, file: !1602, line: 556, baseType: !1613, size: 8, offset: 1296)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1601, file: !1602, line: 557, baseType: !1613, size: 8, offset: 1304)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1601, file: !1602, line: 558, baseType: !1613, size: 8, offset: 1312)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1601, file: !1602, line: 559, baseType: !1613, size: 8, offset: 1320)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1601, file: !1602, line: 560, baseType: !1613, size: 8, offset: 1328)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1601, file: !1602, line: 561, baseType: !1613, size: 8, offset: 1336)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1601, file: !1602, line: 562, baseType: !1613, size: 8, offset: 1344)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1601, file: !1602, line: 563, baseType: !1613, size: 8, offset: 1352)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1601, file: !1602, line: 564, baseType: !1613, size: 8, offset: 1360)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1601, file: !1602, line: 565, baseType: !1613, size: 8, offset: 1368)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1601, file: !1602, line: 566, baseType: !1613, size: 8, offset: 1376)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1601, file: !1602, line: 567, baseType: !1613, size: 8, offset: 1384)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1601, file: !1602, line: 568, baseType: !1613, size: 8, offset: 1392)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1601, file: !1602, line: 569, baseType: !1613, size: 8, offset: 1400)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1601, file: !1602, line: 570, baseType: !1613, size: 8, offset: 1408)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1601, file: !1602, line: 571, baseType: !1613, size: 8, offset: 1416)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1601, file: !1602, line: 572, baseType: !1613, size: 8, offset: 1424)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1601, file: !1602, line: 573, baseType: !1613, size: 8, offset: 1432)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1601, file: !1602, line: 574, baseType: !1613, size: 8, offset: 1440)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !868, file: !318, line: 3405, baseType: !1769, size: 384)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !318, line: 3352, size: 384, elements: !1770)
!1770 = !{!1771, !1772}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1769, file: !318, line: 3353, baseType: !904, size: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1769, file: !318, line: 3356, baseType: !1773, size: 192, offset: 192)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1602, line: 578, size: 192, elements: !1774)
!1774 = !{!1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1773, file: !1602, line: 580, baseType: !677, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1773, file: !1602, line: 581, baseType: !677, size: 32, offset: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1773, file: !1602, line: 582, baseType: !677, size: 32, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1773, file: !1602, line: 583, baseType: !677, size: 32, offset: 96)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1773, file: !1602, line: 584, baseType: !676, size: 8, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1773, file: !1602, line: 585, baseType: !676, size: 8, offset: 136)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1773, file: !1602, line: 586, baseType: !676, size: 8, offset: 144)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1773, file: !1602, line: 587, baseType: !676, size: 8, offset: 152)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1773, file: !1602, line: 588, baseType: !676, size: 8, offset: 160)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1773, file: !1602, line: 589, baseType: !676, size: 8, offset: 168)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1773, file: !1602, line: 590, baseType: !676, size: 8, offset: 176)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !771, file: !753, line: 178, baseType: !707, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !771, file: !753, line: 179, baseType: !1788, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !753, line: 150, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !753, line: 142, size: 320, elements: !1791)
!1791 = !{!1792, !1793, !1794, !1795, !1796, !1797}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1790, file: !753, line: 144, baseType: !866, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1790, file: !753, line: 145, baseType: !750, size: 64, offset: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1790, file: !753, line: 146, baseType: !750, size: 64, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1790, file: !753, line: 147, baseType: !1461, size: 32, offset: 192)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1790, file: !753, line: 148, baseType: !7, size: 32, offset: 224)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1790, file: !753, line: 149, baseType: !676, size: 8, offset: 256)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !771, file: !753, line: 180, baseType: !1799, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !753, line: 162, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !753, line: 159, size: 128, elements: !1802)
!1802 = !{!1803, !1804}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1801, file: !753, line: 160, baseType: !866, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1801, file: !753, line: 161, baseType: !837, size: 64, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !771, file: !753, line: 181, baseType: !1806, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !753, line: 181, flags: DIFlagFwdDecl)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !766, file: !753, line: 317, baseType: !1809, size: 64)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !837, size: 64, elements: !785)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !766, file: !753, line: 318, baseType: !1811, size: 320)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !753, line: 188, size: 320, elements: !1812)
!1812 = !{!1813, !1815, !1838}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1811, file: !753, line: 190, baseType: !1814, size: 192)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !770, size: 192, elements: !937)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1811, file: !753, line: 193, baseType: !1816, size: 64, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !753, line: 206, size: 320, elements: !1818)
!1818 = !{!1819, !1823, !1824, !1825, !1837}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1817, file: !753, line: 208, baseType: !1820, size: 64)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !724, line: 62, baseType: !1822)
!1822 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !724, line: 61, flags: DIFlagFwdDecl)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1817, file: !753, line: 211, baseType: !7, size: 32, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1817, file: !753, line: 214, baseType: !837, size: 64, offset: 128)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1817, file: !753, line: 224, baseType: !1826, size: 64, offset: 192)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !753, line: 202, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !753, line: 202, size: 128, elements: !1829)
!1829 = !{!1830}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1828, file: !753, line: 202, baseType: !1831, size: 128)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !753, line: 200, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !753, line: 200, size: 128, elements: !1833)
!1833 = !{!1834, !1835, !1836}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1832, file: !753, line: 200, baseType: !7, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1832, file: !753, line: 200, baseType: !7, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1832, file: !753, line: 200, baseType: !784, size: 64, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1817, file: !753, line: 234, baseType: !1826, size: 64, offset: 256)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1811, file: !753, line: 197, baseType: !837, size: 64, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !766, file: !753, line: 319, baseType: !926, size: 256)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !766, file: !753, line: 320, baseType: !945, size: 192)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !726, file: !526, line: 134, baseType: !681, size: 64, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !726, file: !526, line: 137, baseType: !866, size: 64, offset: 256)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !726, file: !526, line: 138, baseType: !701, size: 32, offset: 320)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !726, file: !526, line: 142, baseType: !7, size: 32, offset: 352)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !726, file: !526, line: 144, baseType: !677, size: 32, offset: 384)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !726, file: !526, line: 145, baseType: !677, size: 32, offset: 416)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !726, file: !526, line: 146, baseType: !1848, size: 64, offset: 448)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !526, line: 119, baseType: !837)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !708, file: !526, line: 220, baseType: !711, size: 64, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !708, file: !526, line: 223, baseType: !681, size: 64, offset: 128)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !708, file: !526, line: 226, baseType: !1314, size: 64, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !708, file: !526, line: 229, baseType: !1853, size: 128, offset: 256)
!1853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1854, size: 128, elements: !821)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !526, line: 229, flags: DIFlagFwdDecl)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !708, file: !526, line: 232, baseType: !707, size: 64, offset: 384)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !708, file: !526, line: 233, baseType: !707, size: 64, offset: 448)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !708, file: !526, line: 238, baseType: !1859, size: 64, offset: 512)
!1859 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !526, line: 235, size: 64, elements: !1860)
!1860 = !{!1861, !1867}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1859, file: !526, line: 236, baseType: !1862, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !526, line: 273, size: 128, elements: !1864)
!1864 = !{!1865, !1866}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1863, file: !526, line: 275, baseType: !734, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1863, file: !526, line: 278, baseType: !734, size: 64, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1859, file: !526, line: 237, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !526, line: 259, size: 320, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874, !1875}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1869, file: !526, line: 261, baseType: !750, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1869, file: !526, line: 262, baseType: !750, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1869, file: !526, line: 266, baseType: !750, size: 64, offset: 128)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1869, file: !526, line: 267, baseType: !750, size: 64, offset: 192)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1869, file: !526, line: 270, baseType: !677, size: 32, offset: 256)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !708, file: !526, line: 241, baseType: !1848, size: 64, offset: 576)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !708, file: !526, line: 244, baseType: !677, size: 32, offset: 640)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !708, file: !526, line: 247, baseType: !677, size: 32, offset: 672)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !708, file: !526, line: 250, baseType: !677, size: 32, offset: 704)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !708, file: !526, line: 253, baseType: !677, size: 32, offset: 736)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !708, file: !526, line: 256, baseType: !677, size: 32, offset: 768)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !688, file: !597, line: 327, baseType: !866, size: 64, offset: 192)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !685, file: !597, line: 739, baseType: !1884, size: 448)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !597, line: 350, size: 448, elements: !1885)
!1885 = !{!1886, !1892}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1884, file: !597, line: 353, baseType: !1887, size: 384)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !597, line: 333, size: 384, elements: !1888)
!1888 = !{!1889, !1890, !1891}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1887, file: !597, line: 336, baseType: !688, size: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1887, file: !597, line: 343, baseType: !1272, size: 64, offset: 256)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1887, file: !597, line: 344, baseType: !1279, size: 64, offset: 320)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1884, file: !597, line: 359, baseType: !1236, size: 64, offset: 384)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !685, file: !597, line: 740, baseType: !1894, size: 512)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !597, line: 365, size: 512, elements: !1895)
!1895 = !{!1896, !1897, !1898}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1894, file: !597, line: 368, baseType: !1887, size: 384)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1894, file: !597, line: 373, baseType: !866, size: 64, offset: 384)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1894, file: !597, line: 374, baseType: !866, size: 64, offset: 448)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !685, file: !597, line: 741, baseType: !1900, size: 576)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !597, line: 380, size: 576, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1900, file: !597, line: 383, baseType: !1894, size: 512)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1900, file: !597, line: 389, baseType: !1236, size: 64, offset: 512)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !685, file: !597, line: 742, baseType: !1905, size: 320)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !597, line: 395, size: 320, elements: !1906)
!1906 = !{!1907, !1908}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1905, file: !597, line: 397, baseType: !688, size: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1905, file: !597, line: 400, baseType: !734, size: 64, offset: 256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !685, file: !597, line: 743, baseType: !1910, size: 448)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !597, line: 406, size: 448, elements: !1911)
!1911 = !{!1912, !1913, !1914, !1915}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1910, file: !597, line: 408, baseType: !688, size: 256)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1910, file: !597, line: 412, baseType: !866, size: 64, offset: 256)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1910, file: !597, line: 420, baseType: !866, size: 64, offset: 320)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1910, file: !597, line: 423, baseType: !734, size: 64, offset: 384)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !685, file: !597, line: 744, baseType: !1917, size: 384)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !597, line: 429, size: 384, elements: !1918)
!1918 = !{!1919, !1920, !1921}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1917, file: !597, line: 431, baseType: !688, size: 256)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1917, file: !597, line: 434, baseType: !866, size: 64, offset: 256)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1917, file: !597, line: 437, baseType: !734, size: 64, offset: 320)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !685, file: !597, line: 745, baseType: !1923, size: 384)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !597, line: 443, size: 384, elements: !1924)
!1924 = !{!1925, !1926, !1927}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1923, file: !597, line: 445, baseType: !688, size: 256)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1923, file: !597, line: 449, baseType: !866, size: 64, offset: 256)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1923, file: !597, line: 453, baseType: !734, size: 64, offset: 320)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !685, file: !597, line: 746, baseType: !1929, size: 320)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !597, line: 459, size: 320, elements: !1930)
!1930 = !{!1931, !1932}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1929, file: !597, line: 461, baseType: !688, size: 256)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1929, file: !597, line: 464, baseType: !866, size: 64, offset: 256)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !685, file: !597, line: 747, baseType: !1934, size: 768)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !597, line: 469, size: 768, elements: !1935)
!1935 = !{!1936, !1937, !1938, !1939, !1940}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1934, file: !597, line: 471, baseType: !688, size: 256)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1934, file: !597, line: 474, baseType: !7, size: 32, offset: 256)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1934, file: !597, line: 475, baseType: !7, size: 32, offset: 288)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1934, file: !597, line: 478, baseType: !866, size: 64, offset: 320)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1934, file: !597, line: 481, baseType: !1941, size: 384, offset: 384)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 384, elements: !785)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !318, line: 1917, size: 384, elements: !1943)
!1943 = !{!1944, !1945, !1946}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1942, file: !318, line: 1920, baseType: !1284, size: 256)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1942, file: !318, line: 1921, baseType: !866, size: 64, offset: 256)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1942, file: !318, line: 1922, baseType: !701, size: 32, offset: 320)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !685, file: !597, line: 748, baseType: !1948, size: 320)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !597, line: 487, size: 320, elements: !1949)
!1949 = !{!1950, !1951}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1948, file: !597, line: 490, baseType: !688, size: 256)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1948, file: !597, line: 494, baseType: !677, size: 32, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !685, file: !597, line: 749, baseType: !1953, size: 384)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !597, line: 500, size: 384, elements: !1954)
!1954 = !{!1955, !1956, !1957}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1953, file: !597, line: 502, baseType: !688, size: 256)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1953, file: !597, line: 506, baseType: !734, size: 64, offset: 256)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1953, file: !597, line: 510, baseType: !734, size: 64, offset: 320)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !685, file: !597, line: 750, baseType: !1959, size: 320)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !597, line: 529, size: 320, elements: !1960)
!1960 = !{!1961, !1962}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1959, file: !597, line: 531, baseType: !688, size: 256)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1959, file: !597, line: 540, baseType: !734, size: 64, offset: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !685, file: !597, line: 751, baseType: !1964, size: 704)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !597, line: 546, size: 704, elements: !1965)
!1965 = !{!1966, !1967, !1968, !1969, !1970, !1971, !1972}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1964, file: !597, line: 549, baseType: !1894, size: 512)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1964, file: !597, line: 553, baseType: !682, size: 64, offset: 512)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1964, file: !597, line: 557, baseType: !676, size: 8, offset: 576)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1964, file: !597, line: 558, baseType: !676, size: 8, offset: 584)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1964, file: !597, line: 559, baseType: !676, size: 8, offset: 592)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1964, file: !597, line: 560, baseType: !676, size: 8, offset: 600)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1964, file: !597, line: 566, baseType: !1236, size: 64, offset: 640)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !685, file: !597, line: 752, baseType: !1974, size: 384)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !597, line: 571, size: 384, elements: !1975)
!1975 = !{!1976, !1977}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1974, file: !597, line: 573, baseType: !1905, size: 320)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1974, file: !597, line: 577, baseType: !866, size: 64, offset: 320)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !685, file: !597, line: 753, baseType: !1979, size: 576)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !597, line: 600, size: 576, elements: !1980)
!1980 = !{!1981, !1982, !1983, !1984, !1993}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1979, file: !597, line: 602, baseType: !1905, size: 320)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1979, file: !597, line: 605, baseType: !866, size: 64, offset: 320)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1979, file: !597, line: 609, baseType: !1186, size: 64, offset: 384)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1979, file: !597, line: 612, baseType: !1985, size: 64, offset: 448)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !597, line: 581, size: 320, elements: !1987)
!1987 = !{!1988, !1989, !1990, !1991, !1992}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1986, file: !597, line: 583, baseType: !317, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1986, file: !597, line: 586, baseType: !866, size: 64, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1986, file: !597, line: 589, baseType: !866, size: 64, offset: 128)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1986, file: !597, line: 592, baseType: !866, size: 64, offset: 192)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1986, file: !597, line: 595, baseType: !866, size: 64, offset: 256)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1979, file: !597, line: 616, baseType: !734, size: 64, offset: 512)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !685, file: !597, line: 754, baseType: !1995, size: 512)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !597, line: 622, size: 512, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1995, file: !597, line: 624, baseType: !1905, size: 320)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1995, file: !597, line: 628, baseType: !866, size: 64, offset: 320)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1995, file: !597, line: 632, baseType: !866, size: 64, offset: 384)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1995, file: !597, line: 636, baseType: !866, size: 64, offset: 448)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !685, file: !597, line: 755, baseType: !2002, size: 704)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !597, line: 642, size: 704, elements: !2003)
!2003 = !{!2004, !2005, !2006, !2007}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2002, file: !597, line: 644, baseType: !1995, size: 512)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !2002, file: !597, line: 648, baseType: !866, size: 64, offset: 512)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !2002, file: !597, line: 652, baseType: !866, size: 64, offset: 576)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !2002, file: !597, line: 653, baseType: !866, size: 64, offset: 640)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !685, file: !597, line: 756, baseType: !2009, size: 448)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !597, line: 663, size: 448, elements: !2010)
!2010 = !{!2011, !2012, !2013}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2009, file: !597, line: 665, baseType: !1905, size: 320)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2009, file: !597, line: 668, baseType: !866, size: 64, offset: 320)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2009, file: !597, line: 673, baseType: !866, size: 64, offset: 384)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !685, file: !597, line: 757, baseType: !2015, size: 384)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !597, line: 694, size: 384, elements: !2016)
!2016 = !{!2017, !2018}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2015, file: !597, line: 696, baseType: !1905, size: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2015, file: !597, line: 699, baseType: !866, size: 64, offset: 320)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !685, file: !597, line: 758, baseType: !2020, size: 384)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !597, line: 681, size: 384, elements: !2021)
!2021 = !{!2022, !2023, !2024}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2020, file: !597, line: 683, baseType: !688, size: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !2020, file: !597, line: 686, baseType: !866, size: 64, offset: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !2020, file: !597, line: 689, baseType: !866, size: 64, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !685, file: !597, line: 759, baseType: !2026, size: 384)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !597, line: 707, size: 384, elements: !2027)
!2027 = !{!2028, !2029, !2030}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2026, file: !597, line: 709, baseType: !688, size: 256)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !2026, file: !597, line: 712, baseType: !866, size: 64, offset: 256)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !2026, file: !597, line: 712, baseType: !866, size: 64, offset: 320)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !685, file: !597, line: 760, baseType: !2032, size: 320)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !597, line: 718, size: 320, elements: !2033)
!2033 = !{!2034, !2035}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2032, file: !597, line: 720, baseType: !688, size: 256)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2032, file: !597, line: 723, baseType: !866, size: 64, offset: 256)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !685)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "matrix_info", file: !3, line: 256, size: 896, elements: !2041)
!2041 = !{!2042, !2043, !2044, !2045, !2046, !2048, !2049, !2050, !2051, !2057, !2058, !2059, !2061, !2062, !2064, !2088}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2040, file: !3, line: 259, baseType: !866, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "num_dims", scope: !2040, file: !3, line: 262, baseType: !677, size: 32, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "min_indirect_level_escape", scope: !2040, file: !3, line: 267, baseType: !677, size: 32, offset: 96)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "min_indirect_level_escape_stmt", scope: !2040, file: !3, line: 269, baseType: !744, size: 64, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_for_level", scope: !2040, file: !3, line: 275, baseType: !2047, size: 64, offset: 192)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "max_malloced_level", scope: !2040, file: !3, line: 277, baseType: !677, size: 32, offset: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "is_transposed_p", scope: !2040, file: !3, line: 280, baseType: !676, size: 8, offset: 288)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "allocation_function_decl", scope: !2040, file: !3, line: 284, baseType: !866, size: 64, offset: 320)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "free_stmts", scope: !2040, file: !3, line: 287, baseType: !2052, size: 64, offset: 384)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "free_info", file: !3, line: 249, size: 128, elements: !2054)
!2054 = !{!2055, !2056}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2053, file: !3, line: 251, baseType: !744, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2053, file: !3, line: 252, baseType: !866, size: 64, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "dimension_size", scope: !2040, file: !3, line: 292, baseType: !1277, size: 64, offset: 448)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "dimension_size_orig", scope: !2040, file: !3, line: 296, baseType: !1277, size: 64, offset: 512)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "dimension_type_size", scope: !2040, file: !3, line: 300, baseType: !2060, size: 64, offset: 576)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "dimension_type_size_len", scope: !2040, file: !3, line: 302, baseType: !677, size: 32, offset: 640)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "dim_hot_level", scope: !2040, file: !3, line: 305, baseType: !2063, size: 64, offset: 704)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "access_l", scope: !2040, file: !3, line: 309, baseType: !2065, size: 64, offset: 768)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_access_site_info_p_heap", file: !3, line: 245, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_access_site_info_p_heap", file: !3, line: 245, size: 128, elements: !2068)
!2068 = !{!2069}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2067, file: !3, line: 245, baseType: !2070, size: 128)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_access_site_info_p_base", file: !3, line: 244, baseType: !2071)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_access_site_info_p_base", file: !3, line: 244, size: 128, elements: !2072)
!2072 = !{!2073, !2074, !2075}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2071, file: !3, line: 244, baseType: !7, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2071, file: !3, line: 244, baseType: !7, size: 32, offset: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2071, file: !3, line: 244, baseType: !2076, size: 64, offset: 64)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2077, size: 64, elements: !785)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "access_site_info_p", file: !3, line: 243, baseType: !2078)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "access_site_info", file: !3, line: 219, size: 384, elements: !2080)
!2080 = !{!2081, !2082, !2083, !2084, !2085, !2086, !2087}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2079, file: !3, line: 222, baseType: !744, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2079, file: !3, line: 225, baseType: !866, size: 64, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2079, file: !3, line: 228, baseType: !866, size: 64, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2079, file: !3, line: 231, baseType: !677, size: 32, offset: 192)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "is_alloc", scope: !2079, file: !3, line: 234, baseType: !676, size: 8, offset: 224)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !2079, file: !3, line: 237, baseType: !866, size: 64, offset: 256)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "iterated_by_inner_most_loop_p", scope: !2079, file: !3, line: 240, baseType: !676, size: 8, offset: 320)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "dim_map", scope: !2040, file: !3, line: 313, baseType: !2089, size: 64, offset: 832)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2093)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "matrix_access_phi_node", file: !3, line: 323, size: 128, elements: !2094)
!2094 = !{!2095, !2096}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "phi", scope: !2093, file: !3, line: 325, baseType: !744, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "indirection_level", scope: !2093, file: !3, line: 326, baseType: !677, size: 32, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !668, line: 30, baseType: !2098)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !318, line: 1893, baseType: !1284)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "check_var_data", file: !3, line: 1405, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 1401, size: 128, elements: !2105)
!2105 = !{!2106, !2107}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2104, file: !3, line: 1403, baseType: !866, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2104, file: !3, line: 1404, baseType: !744, size: 64, offset: 64)
!2108 = !{!0, !2109, !2111, !2113}
!2109 = !DIGlobalVariableExpression(var: !2110, expr: !DIExpression())
!2110 = distinct !DIGlobalVariable(name: "check_transpose_p", scope: !2, file: !3, line: 353, type: !676, isLocal: true, isDefinition: true)
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "matrices_to_reorg", scope: !2, file: !3, line: 388, type: !1160, isLocal: true, isDefinition: true)
!2113 = !DIGlobalVariableExpression(var: !2114, expr: !DIExpression())
!2114 = distinct !DIGlobalVariable(name: "htab_mat_acc_phi_nodes", scope: !2, file: !3, line: 384, type: !1160, isLocal: true, isDefinition: true)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_ipa_opt_pass", file: !6, line: 202, size: 640, elements: !2116)
!2116 = !{!2117}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2115, file: !6, line: 204, baseType: !2118, size: 640)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !6, line: 114, size: 640, elements: !2119)
!2119 = !{!2120, !2121, !2122, !2126, !2130, !2132, !2133, !2134, !2136, !2137, !2138, !2139, !2140}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2118, file: !6, line: 117, baseType: !5, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2118, file: !6, line: 121, baseType: !682, size: 64, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2118, file: !6, line: 125, baseType: !2123, size: 64, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!676}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2118, file: !6, line: 130, baseType: !2127, size: 64, offset: 192)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{!7}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2118, file: !6, line: 133, baseType: !2131, size: 64, offset: 256)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2118, file: !6, line: 136, baseType: !2131, size: 64, offset: 320)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2118, file: !6, line: 139, baseType: !677, size: 32, offset: 384)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2118, file: !6, line: 143, baseType: !2135, size: 32, offset: 416)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !14, line: 80, baseType: !13)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2118, file: !6, line: 146, baseType: !7, size: 32, offset: 448)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2118, file: !6, line: 147, baseType: !7, size: 32, offset: 480)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2118, file: !6, line: 148, baseType: !7, size: 32, offset: 512)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2118, file: !6, line: 151, baseType: !7, size: 32, offset: 544)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2118, file: !6, line: 152, baseType: !7, size: 32, offset: 576)
!2141 = !{i32 2, !"Dwarf Version", i32 4}
!2142 = !{i32 2, !"Debug Info Version", i32 3}
!2143 = !{i32 1, !"wchar_size", i32 4}
!2144 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2145 = distinct !DISubprogram(name: "vprintf", scope: !2146, file: !2146, line: 39, type: !2147, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2157)
!2146 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!677, !2149, !2150}
!2149 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !682)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2152)
!2152 = !{!2153, !2154, !2155, !2156}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2151, file: !3, baseType: !7, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2151, file: !3, baseType: !7, size: 32, offset: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2151, file: !3, baseType: !681, size: 64, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2151, file: !3, baseType: !681, size: 64, offset: 128)
!2157 = !{!2158, !2159}
!2158 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2145, file: !2146, line: 39, type: !2149)
!2159 = !DILocalVariable(name: "__arg", arg: 2, scope: !2145, file: !2146, line: 39, type: !2150)
!2160 = !DILocation(line: 0, scope: !2145)
!2161 = !DILocation(line: 41, column: 20, scope: !2145)
!2162 = !DILocation(line: 41, column: 10, scope: !2145)
!2163 = !DILocation(line: 41, column: 3, scope: !2145)
!2164 = distinct !DISubprogram(name: "getchar", scope: !2146, file: !2146, line: 47, type: !2165, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2167)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{!677}
!2167 = !{}
!2168 = !DILocation(line: 49, column: 16, scope: !2164)
!2169 = !DILocation(line: 49, column: 10, scope: !2164)
!2170 = !DILocation(line: 49, column: 3, scope: !2164)
!2171 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2146, file: !2146, line: 56, type: !2172, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2225)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!677, !2174}
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2176, line: 7, baseType: !2177)
!2176 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2178, line: 49, size: 1728, elements: !2179)
!2178 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2179 = !{!2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2195, !2197, !2198, !2199, !2202, !2204, !2205, !2206, !2209, !2211, !2214, !2217, !2218, !2219, !2220, !2221}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2177, file: !2178, line: 51, baseType: !677, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2177, file: !2178, line: 54, baseType: !679, size: 64, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2177, file: !2178, line: 55, baseType: !679, size: 64, offset: 128)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2177, file: !2178, line: 56, baseType: !679, size: 64, offset: 192)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2177, file: !2178, line: 57, baseType: !679, size: 64, offset: 256)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2177, file: !2178, line: 58, baseType: !679, size: 64, offset: 320)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2177, file: !2178, line: 59, baseType: !679, size: 64, offset: 384)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2177, file: !2178, line: 60, baseType: !679, size: 64, offset: 448)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2177, file: !2178, line: 61, baseType: !679, size: 64, offset: 512)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2177, file: !2178, line: 64, baseType: !679, size: 64, offset: 576)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2177, file: !2178, line: 65, baseType: !679, size: 64, offset: 640)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2177, file: !2178, line: 66, baseType: !679, size: 64, offset: 704)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2177, file: !2178, line: 68, baseType: !2193, size: 64, offset: 768)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2178, line: 36, flags: DIFlagFwdDecl)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2177, file: !2178, line: 70, baseType: !2196, size: 64, offset: 832)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2177, file: !2178, line: 72, baseType: !677, size: 32, offset: 896)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2177, file: !2178, line: 73, baseType: !677, size: 32, offset: 928)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2177, file: !2178, line: 74, baseType: !2200, size: 64, offset: 960)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2201, line: 152, baseType: !837)
!2201 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2177, file: !2178, line: 77, baseType: !2203, size: 16, offset: 1024)
!2203 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2177, file: !2178, line: 78, baseType: !1613, size: 8, offset: 1040)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2177, file: !2178, line: 79, baseType: !961, size: 8, offset: 1048)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2177, file: !2178, line: 81, baseType: !2207, size: 64, offset: 1088)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2178, line: 43, baseType: null)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2177, file: !2178, line: 89, baseType: !2210, size: 64, offset: 1152)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2201, line: 153, baseType: !837)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2177, file: !2178, line: 91, baseType: !2212, size: 64, offset: 1216)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2178, line: 37, flags: DIFlagFwdDecl)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2177, file: !2178, line: 92, baseType: !2215, size: 64, offset: 1280)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 64)
!2216 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2178, line: 38, flags: DIFlagFwdDecl)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2177, file: !2178, line: 93, baseType: !2196, size: 64, offset: 1344)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2177, file: !2178, line: 94, baseType: !681, size: 64, offset: 1408)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2177, file: !2178, line: 95, baseType: !1186, size: 64, offset: 1472)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2177, file: !2178, line: 96, baseType: !677, size: 32, offset: 1536)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2177, file: !2178, line: 98, baseType: !2222, size: 160, offset: 1568)
!2222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 160, elements: !2223)
!2223 = !{!2224}
!2224 = !DISubrange(count: 20)
!2225 = !{!2226}
!2226 = !DILocalVariable(name: "__fp", arg: 1, scope: !2171, file: !2146, line: 56, type: !2174)
!2227 = !DILocation(line: 0, scope: !2171)
!2228 = !DILocation(line: 58, column: 10, scope: !2171)
!2229 = !DILocation(line: 58, column: 3, scope: !2171)
!2230 = distinct !DISubprogram(name: "getc_unlocked", scope: !2146, file: !2146, line: 66, type: !2172, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2231)
!2231 = !{!2232}
!2232 = !DILocalVariable(name: "__fp", arg: 1, scope: !2230, file: !2146, line: 66, type: !2174)
!2233 = !DILocation(line: 0, scope: !2230)
!2234 = !DILocation(line: 68, column: 10, scope: !2230)
!2235 = !DILocation(line: 68, column: 3, scope: !2230)
!2236 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2146, file: !2146, line: 73, type: !2165, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2167)
!2237 = !DILocation(line: 75, column: 10, scope: !2236)
!2238 = !DILocation(line: 75, column: 3, scope: !2236)
!2239 = distinct !DISubprogram(name: "putchar", scope: !2146, file: !2146, line: 82, type: !2240, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2242)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!677, !677}
!2242 = !{!2243}
!2243 = !DILocalVariable(name: "__c", arg: 1, scope: !2239, file: !2146, line: 82, type: !677)
!2244 = !DILocation(line: 0, scope: !2239)
!2245 = !DILocation(line: 84, column: 21, scope: !2239)
!2246 = !DILocation(line: 84, column: 10, scope: !2239)
!2247 = !DILocation(line: 84, column: 3, scope: !2239)
!2248 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2146, file: !2146, line: 91, type: !2249, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2251)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!677, !677, !2174}
!2251 = !{!2252, !2253}
!2252 = !DILocalVariable(name: "__c", arg: 1, scope: !2248, file: !2146, line: 91, type: !677)
!2253 = !DILocalVariable(name: "__stream", arg: 2, scope: !2248, file: !2146, line: 91, type: !2174)
!2254 = !DILocation(line: 0, scope: !2248)
!2255 = !DILocation(line: 93, column: 10, scope: !2248)
!2256 = !DILocation(line: 93, column: 3, scope: !2248)
!2257 = distinct !DISubprogram(name: "putc_unlocked", scope: !2146, file: !2146, line: 101, type: !2249, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!2258 = !{!2259, !2260}
!2259 = !DILocalVariable(name: "__c", arg: 1, scope: !2257, file: !2146, line: 101, type: !677)
!2260 = !DILocalVariable(name: "__stream", arg: 2, scope: !2257, file: !2146, line: 101, type: !2174)
!2261 = !DILocation(line: 0, scope: !2257)
!2262 = !DILocation(line: 103, column: 10, scope: !2257)
!2263 = !DILocation(line: 103, column: 3, scope: !2257)
!2264 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2146, file: !2146, line: 108, type: !2240, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2265)
!2265 = !{!2266}
!2266 = !DILocalVariable(name: "__c", arg: 1, scope: !2264, file: !2146, line: 108, type: !677)
!2267 = !DILocation(line: 0, scope: !2264)
!2268 = !DILocation(line: 110, column: 10, scope: !2264)
!2269 = !DILocation(line: 110, column: 3, scope: !2264)
!2270 = distinct !DISubprogram(name: "getline", scope: !2146, file: !2146, line: 118, type: !2271, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2275)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!2273, !678, !2274, !2174}
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2201, line: 193, baseType: !837)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!2275 = !{!2276, !2277, !2278}
!2276 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2270, file: !2146, line: 118, type: !678)
!2277 = !DILocalVariable(name: "__n", arg: 2, scope: !2270, file: !2146, line: 118, type: !2274)
!2278 = !DILocalVariable(name: "__stream", arg: 3, scope: !2270, file: !2146, line: 118, type: !2174)
!2279 = !DILocation(line: 0, scope: !2270)
!2280 = !DILocation(line: 120, column: 10, scope: !2270)
!2281 = !DILocation(line: 120, column: 3, scope: !2270)
!2282 = distinct !DISubprogram(name: "feof_unlocked", scope: !2146, file: !2146, line: 128, type: !2172, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2283)
!2283 = !{!2284}
!2284 = !DILocalVariable(name: "__stream", arg: 1, scope: !2282, file: !2146, line: 128, type: !2174)
!2285 = !DILocation(line: 0, scope: !2282)
!2286 = !DILocation(line: 130, column: 10, scope: !2282)
!2287 = !DILocation(line: 130, column: 3, scope: !2282)
!2288 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2146, file: !2146, line: 135, type: !2172, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2289)
!2289 = !{!2290}
!2290 = !DILocalVariable(name: "__stream", arg: 1, scope: !2288, file: !2146, line: 135, type: !2174)
!2291 = !DILocation(line: 0, scope: !2288)
!2292 = !DILocation(line: 137, column: 10, scope: !2288)
!2293 = !DILocation(line: 137, column: 3, scope: !2288)
!2294 = distinct !DISubprogram(name: "tolower", scope: !2295, file: !2295, line: 207, type: !2240, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2296)
!2295 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2296 = !{!2297}
!2297 = !DILocalVariable(name: "__c", arg: 1, scope: !2294, file: !2295, line: 207, type: !677)
!2298 = !DILocation(line: 0, scope: !2294)
!2299 = !DILocation(line: 209, column: 22, scope: !2294)
!2300 = !DILocation(line: 209, column: 39, scope: !2294)
!2301 = !DILocation(line: 209, column: 38, scope: !2294)
!2302 = !DILocation(line: 209, column: 37, scope: !2294)
!2303 = !DILocation(line: 209, column: 10, scope: !2294)
!2304 = !DILocation(line: 209, column: 3, scope: !2294)
!2305 = distinct !DISubprogram(name: "toupper", scope: !2295, file: !2295, line: 213, type: !2240, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!2306 = !{!2307}
!2307 = !DILocalVariable(name: "__c", arg: 1, scope: !2305, file: !2295, line: 213, type: !677)
!2308 = !DILocation(line: 0, scope: !2305)
!2309 = !DILocation(line: 215, column: 22, scope: !2305)
!2310 = !DILocation(line: 215, column: 39, scope: !2305)
!2311 = !DILocation(line: 215, column: 38, scope: !2305)
!2312 = !DILocation(line: 215, column: 37, scope: !2305)
!2313 = !DILocation(line: 215, column: 10, scope: !2305)
!2314 = !DILocation(line: 215, column: 3, scope: !2305)
!2315 = distinct !DISubprogram(name: "atoi", scope: !2316, file: !2316, line: 361, type: !2317, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2319)
!2316 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!677, !682}
!2319 = !{!2320}
!2320 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2315, file: !2316, line: 361, type: !682)
!2321 = !DILocation(line: 0, scope: !2315)
!2322 = !DILocation(line: 363, column: 16, scope: !2315)
!2323 = !DILocation(line: 363, column: 10, scope: !2315)
!2324 = !DILocation(line: 363, column: 3, scope: !2315)
!2325 = distinct !DISubprogram(name: "atol", scope: !2316, file: !2316, line: 366, type: !2326, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2328)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{!837, !682}
!2328 = !{!2329}
!2329 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2325, file: !2316, line: 366, type: !682)
!2330 = !DILocation(line: 0, scope: !2325)
!2331 = !DILocation(line: 368, column: 10, scope: !2325)
!2332 = !DILocation(line: 368, column: 3, scope: !2325)
!2333 = distinct !DISubprogram(name: "atoll", scope: !2316, file: !2316, line: 373, type: !2334, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2337)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{!2336, !682}
!2336 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2337 = !{!2338}
!2338 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2333, file: !2316, line: 373, type: !682)
!2339 = !DILocation(line: 0, scope: !2333)
!2340 = !DILocation(line: 375, column: 10, scope: !2333)
!2341 = !DILocation(line: 375, column: 3, scope: !2333)
!2342 = distinct !DISubprogram(name: "bsearch", scope: !2343, file: !2343, line: 20, type: !2344, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2347)
!2343 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!681, !1171, !1171, !1186, !1186, !2346}
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2316, line: 808, baseType: !1175)
!2347 = !{!2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357}
!2348 = !DILocalVariable(name: "__key", arg: 1, scope: !2342, file: !2343, line: 20, type: !1171)
!2349 = !DILocalVariable(name: "__base", arg: 2, scope: !2342, file: !2343, line: 20, type: !1171)
!2350 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2342, file: !2343, line: 20, type: !1186)
!2351 = !DILocalVariable(name: "__size", arg: 4, scope: !2342, file: !2343, line: 20, type: !1186)
!2352 = !DILocalVariable(name: "__compar", arg: 5, scope: !2342, file: !2343, line: 21, type: !2346)
!2353 = !DILocalVariable(name: "__l", scope: !2342, file: !2343, line: 23, type: !1186)
!2354 = !DILocalVariable(name: "__u", scope: !2342, file: !2343, line: 23, type: !1186)
!2355 = !DILocalVariable(name: "__idx", scope: !2342, file: !2343, line: 23, type: !1186)
!2356 = !DILocalVariable(name: "__p", scope: !2342, file: !2343, line: 24, type: !1171)
!2357 = !DILocalVariable(name: "__comparison", scope: !2342, file: !2343, line: 25, type: !677)
!2358 = !DILocation(line: 0, scope: !2342)
!2359 = !DILocation(line: 29, column: 3, scope: !2342)
!2360 = !DILocation(line: 27, column: 7, scope: !2342)
!2361 = !DILocation(line: 29, column: 14, scope: !2342)
!2362 = !DILocation(line: 31, column: 20, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2342, file: !2343, line: 30, column: 5)
!2364 = !DILocation(line: 31, column: 27, scope: !2363)
!2365 = !DILocation(line: 32, column: 56, scope: !2363)
!2366 = !DILocation(line: 32, column: 47, scope: !2363)
!2367 = !DILocation(line: 33, column: 22, scope: !2363)
!2368 = !DILocation(line: 34, column: 24, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2363, file: !2343, line: 34, column: 11)
!2370 = !DILocation(line: 34, column: 11, scope: !2363)
!2371 = !DILocation(line: 36, column: 29, scope: !2372)
!2372 = distinct !DILexicalBlock(scope: !2369, file: !2343, line: 36, column: 16)
!2373 = !DILocation(line: 36, column: 16, scope: !2369)
!2374 = !DILocation(line: 37, column: 14, scope: !2372)
!2375 = distinct !{!2375, !2359, !2376}
!2376 = !DILocation(line: 40, column: 5, scope: !2342)
!2377 = !DILocation(line: 43, column: 1, scope: !2342)
!2378 = distinct !DISubprogram(name: "atof", scope: !2379, file: !2379, line: 25, type: !2380, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2383)
!2379 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!2382, !682}
!2382 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2383 = !{!2384}
!2384 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2378, file: !2379, line: 25, type: !682)
!2385 = !DILocation(line: 0, scope: !2378)
!2386 = !DILocation(line: 27, column: 10, scope: !2378)
!2387 = !DILocation(line: 27, column: 3, scope: !2378)
!2388 = distinct !DISubprogram(name: "strtoimax", scope: !2389, file: !2389, line: 324, type: !2390, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2396)
!2389 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!2392, !2149, !2395, !677}
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2393, line: 101, baseType: !2394)
!2393 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2201, line: 72, baseType: !837)
!2395 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !678)
!2396 = !{!2397, !2398, !2399}
!2397 = !DILocalVariable(name: "nptr", arg: 1, scope: !2388, file: !2389, line: 324, type: !2149)
!2398 = !DILocalVariable(name: "endptr", arg: 2, scope: !2388, file: !2389, line: 324, type: !2395)
!2399 = !DILocalVariable(name: "base", arg: 3, scope: !2388, file: !2389, line: 324, type: !677)
!2400 = !DILocation(line: 0, scope: !2388)
!2401 = !DILocation(line: 327, column: 10, scope: !2388)
!2402 = !DILocation(line: 327, column: 3, scope: !2388)
!2403 = distinct !DISubprogram(name: "strtoumax", scope: !2389, file: !2389, line: 336, type: !2404, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2408)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{!2406, !2149, !2395, !677}
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2393, line: 102, baseType: !2407)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2201, line: 73, baseType: !820)
!2408 = !{!2409, !2410, !2411}
!2409 = !DILocalVariable(name: "nptr", arg: 1, scope: !2403, file: !2389, line: 336, type: !2149)
!2410 = !DILocalVariable(name: "endptr", arg: 2, scope: !2403, file: !2389, line: 336, type: !2395)
!2411 = !DILocalVariable(name: "base", arg: 3, scope: !2403, file: !2389, line: 336, type: !677)
!2412 = !DILocation(line: 0, scope: !2403)
!2413 = !DILocation(line: 339, column: 10, scope: !2403)
!2414 = !DILocation(line: 339, column: 3, scope: !2403)
!2415 = distinct !DISubprogram(name: "wcstoimax", scope: !2389, file: !2389, line: 348, type: !2416, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2425)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!2392, !2418, !2422, !677}
!2418 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2419)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2421)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2389, line: 34, baseType: !677)
!2422 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2423)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2425 = !{!2426, !2427, !2428}
!2426 = !DILocalVariable(name: "nptr", arg: 1, scope: !2415, file: !2389, line: 348, type: !2418)
!2427 = !DILocalVariable(name: "endptr", arg: 2, scope: !2415, file: !2389, line: 348, type: !2422)
!2428 = !DILocalVariable(name: "base", arg: 3, scope: !2415, file: !2389, line: 348, type: !677)
!2429 = !DILocation(line: 0, scope: !2415)
!2430 = !DILocation(line: 351, column: 10, scope: !2415)
!2431 = !DILocation(line: 351, column: 3, scope: !2415)
!2432 = distinct !DISubprogram(name: "wcstoumax", scope: !2389, file: !2389, line: 362, type: !2433, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2435)
!2433 = !DISubroutineType(types: !2434)
!2434 = !{!2406, !2418, !2422, !677}
!2435 = !{!2436, !2437, !2438}
!2436 = !DILocalVariable(name: "nptr", arg: 1, scope: !2432, file: !2389, line: 362, type: !2418)
!2437 = !DILocalVariable(name: "endptr", arg: 2, scope: !2432, file: !2389, line: 362, type: !2422)
!2438 = !DILocalVariable(name: "base", arg: 3, scope: !2432, file: !2389, line: 362, type: !677)
!2439 = !DILocation(line: 0, scope: !2432)
!2440 = !DILocation(line: 365, column: 10, scope: !2432)
!2441 = !DILocation(line: 365, column: 3, scope: !2432)
!2442 = distinct !DISubprogram(name: "stat", scope: !2443, file: !2443, line: 453, type: !2444, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2481)
!2443 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2444 = !DISubroutineType(types: !2445)
!2445 = !{!677, !682, !2446}
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2448, line: 46, size: 1152, elements: !2449)
!2448 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2449 = !{!2450, !2452, !2454, !2456, !2458, !2460, !2462, !2463, !2464, !2465, !2467, !2469, !2477, !2478, !2479}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2447, file: !2448, line: 48, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2201, line: 145, baseType: !820)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2447, file: !2448, line: 53, baseType: !2453, size: 64, offset: 64)
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2201, line: 148, baseType: !820)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2447, file: !2448, line: 61, baseType: !2455, size: 64, offset: 128)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2201, line: 151, baseType: !820)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2447, file: !2448, line: 62, baseType: !2457, size: 32, offset: 192)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2201, line: 150, baseType: !7)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2447, file: !2448, line: 64, baseType: !2459, size: 32, offset: 224)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2201, line: 146, baseType: !7)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2447, file: !2448, line: 65, baseType: !2461, size: 32, offset: 256)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2201, line: 147, baseType: !7)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2447, file: !2448, line: 67, baseType: !677, size: 32, offset: 288)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2447, file: !2448, line: 69, baseType: !2451, size: 64, offset: 320)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2447, file: !2448, line: 74, baseType: !2200, size: 64, offset: 384)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2447, file: !2448, line: 78, baseType: !2466, size: 64, offset: 448)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2201, line: 174, baseType: !837)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2447, file: !2448, line: 80, baseType: !2468, size: 64, offset: 512)
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2201, line: 179, baseType: !837)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2447, file: !2448, line: 91, baseType: !2470, size: 128, offset: 576)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2471, line: 10, size: 128, elements: !2472)
!2471 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2472 = !{!2473, !2475}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2470, file: !2471, line: 12, baseType: !2474, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2201, line: 160, baseType: !837)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2470, file: !2471, line: 16, baseType: !2476, size: 64, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2201, line: 196, baseType: !837)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2447, file: !2448, line: 92, baseType: !2470, size: 128, offset: 704)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2447, file: !2448, line: 93, baseType: !2470, size: 128, offset: 832)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2447, file: !2448, line: 106, baseType: !2480, size: 192, offset: 960)
!2480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2476, size: 192, elements: !937)
!2481 = !{!2482, !2483}
!2482 = !DILocalVariable(name: "__path", arg: 1, scope: !2442, file: !2443, line: 453, type: !682)
!2483 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2442, file: !2443, line: 453, type: !2446)
!2484 = !DILocation(line: 0, scope: !2442)
!2485 = !DILocation(line: 455, column: 10, scope: !2442)
!2486 = !DILocation(line: 455, column: 3, scope: !2442)
!2487 = distinct !DISubprogram(name: "lstat", scope: !2443, file: !2443, line: 460, type: !2444, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2488)
!2488 = !{!2489, !2490}
!2489 = !DILocalVariable(name: "__path", arg: 1, scope: !2487, file: !2443, line: 460, type: !682)
!2490 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2487, file: !2443, line: 460, type: !2446)
!2491 = !DILocation(line: 0, scope: !2487)
!2492 = !DILocation(line: 462, column: 10, scope: !2487)
!2493 = !DILocation(line: 462, column: 3, scope: !2487)
!2494 = distinct !DISubprogram(name: "fstat", scope: !2443, file: !2443, line: 467, type: !2495, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2497)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!677, !677, !2446}
!2497 = !{!2498, !2499}
!2498 = !DILocalVariable(name: "__fd", arg: 1, scope: !2494, file: !2443, line: 467, type: !677)
!2499 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2494, file: !2443, line: 467, type: !2446)
!2500 = !DILocation(line: 0, scope: !2494)
!2501 = !DILocation(line: 469, column: 10, scope: !2494)
!2502 = !DILocation(line: 469, column: 3, scope: !2494)
!2503 = distinct !DISubprogram(name: "fstatat", scope: !2443, file: !2443, line: 474, type: !2504, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2506)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{!677, !677, !682, !2446, !677}
!2506 = !{!2507, !2508, !2509, !2510}
!2507 = !DILocalVariable(name: "__fd", arg: 1, scope: !2503, file: !2443, line: 474, type: !677)
!2508 = !DILocalVariable(name: "__filename", arg: 2, scope: !2503, file: !2443, line: 474, type: !682)
!2509 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2503, file: !2443, line: 474, type: !2446)
!2510 = !DILocalVariable(name: "__flag", arg: 4, scope: !2503, file: !2443, line: 474, type: !677)
!2511 = !DILocation(line: 0, scope: !2503)
!2512 = !DILocation(line: 477, column: 10, scope: !2503)
!2513 = !DILocation(line: 477, column: 3, scope: !2503)
!2514 = distinct !DISubprogram(name: "mknod", scope: !2443, file: !2443, line: 483, type: !2515, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2517)
!2515 = !DISubroutineType(types: !2516)
!2516 = !{!677, !682, !2457, !2451}
!2517 = !{!2518, !2519, !2520}
!2518 = !DILocalVariable(name: "__path", arg: 1, scope: !2514, file: !2443, line: 483, type: !682)
!2519 = !DILocalVariable(name: "__mode", arg: 2, scope: !2514, file: !2443, line: 483, type: !2457)
!2520 = !DILocalVariable(name: "__dev", arg: 3, scope: !2514, file: !2443, line: 483, type: !2451)
!2521 = !DILocation(line: 0, scope: !2514)
!2522 = !DILocation(line: 485, column: 10, scope: !2514)
!2523 = !DILocation(line: 485, column: 3, scope: !2514)
!2524 = distinct !DISubprogram(name: "mknodat", scope: !2443, file: !2443, line: 491, type: !2525, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2527)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{!677, !677, !682, !2457, !2451}
!2527 = !{!2528, !2529, !2530, !2531}
!2528 = !DILocalVariable(name: "__fd", arg: 1, scope: !2524, file: !2443, line: 491, type: !677)
!2529 = !DILocalVariable(name: "__path", arg: 2, scope: !2524, file: !2443, line: 491, type: !682)
!2530 = !DILocalVariable(name: "__mode", arg: 3, scope: !2524, file: !2443, line: 491, type: !2457)
!2531 = !DILocalVariable(name: "__dev", arg: 4, scope: !2524, file: !2443, line: 491, type: !2451)
!2532 = !DILocation(line: 0, scope: !2524)
!2533 = !DILocation(line: 494, column: 10, scope: !2524)
!2534 = !DILocation(line: 494, column: 3, scope: !2524)
!2535 = distinct !DISubprogram(name: "stat64", scope: !2443, file: !2443, line: 502, type: !2536, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2558)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{!677, !682, !2538}
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2448, line: 119, size: 1152, elements: !2540)
!2540 = !{!2541, !2542, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2554, !2555, !2556, !2557}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2539, file: !2448, line: 121, baseType: !2451, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2539, file: !2448, line: 123, baseType: !2543, size: 64, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2201, line: 149, baseType: !820)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2539, file: !2448, line: 124, baseType: !2455, size: 64, offset: 128)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2539, file: !2448, line: 125, baseType: !2457, size: 32, offset: 192)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2539, file: !2448, line: 132, baseType: !2459, size: 32, offset: 224)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2539, file: !2448, line: 133, baseType: !2461, size: 32, offset: 256)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2539, file: !2448, line: 135, baseType: !677, size: 32, offset: 288)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2539, file: !2448, line: 136, baseType: !2451, size: 64, offset: 320)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2539, file: !2448, line: 137, baseType: !2200, size: 64, offset: 384)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2539, file: !2448, line: 143, baseType: !2466, size: 64, offset: 448)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2539, file: !2448, line: 144, baseType: !2553, size: 64, offset: 512)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2201, line: 180, baseType: !837)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2539, file: !2448, line: 152, baseType: !2470, size: 128, offset: 576)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2539, file: !2448, line: 153, baseType: !2470, size: 128, offset: 704)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2539, file: !2448, line: 154, baseType: !2470, size: 128, offset: 832)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2539, file: !2448, line: 164, baseType: !2480, size: 192, offset: 960)
!2558 = !{!2559, !2560}
!2559 = !DILocalVariable(name: "__path", arg: 1, scope: !2535, file: !2443, line: 502, type: !682)
!2560 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2535, file: !2443, line: 502, type: !2538)
!2561 = !DILocation(line: 0, scope: !2535)
!2562 = !DILocation(line: 504, column: 10, scope: !2535)
!2563 = !DILocation(line: 504, column: 3, scope: !2535)
!2564 = distinct !DISubprogram(name: "lstat64", scope: !2443, file: !2443, line: 509, type: !2536, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2565)
!2565 = !{!2566, !2567}
!2566 = !DILocalVariable(name: "__path", arg: 1, scope: !2564, file: !2443, line: 509, type: !682)
!2567 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2564, file: !2443, line: 509, type: !2538)
!2568 = !DILocation(line: 0, scope: !2564)
!2569 = !DILocation(line: 511, column: 10, scope: !2564)
!2570 = !DILocation(line: 511, column: 3, scope: !2564)
!2571 = distinct !DISubprogram(name: "fstat64", scope: !2443, file: !2443, line: 516, type: !2572, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2574)
!2572 = !DISubroutineType(types: !2573)
!2573 = !{!677, !677, !2538}
!2574 = !{!2575, !2576}
!2575 = !DILocalVariable(name: "__fd", arg: 1, scope: !2571, file: !2443, line: 516, type: !677)
!2576 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2571, file: !2443, line: 516, type: !2538)
!2577 = !DILocation(line: 0, scope: !2571)
!2578 = !DILocation(line: 518, column: 10, scope: !2571)
!2579 = !DILocation(line: 518, column: 3, scope: !2571)
!2580 = distinct !DISubprogram(name: "fstatat64", scope: !2443, file: !2443, line: 523, type: !2581, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2583)
!2581 = !DISubroutineType(types: !2582)
!2582 = !{!677, !677, !682, !2538, !677}
!2583 = !{!2584, !2585, !2586, !2587}
!2584 = !DILocalVariable(name: "__fd", arg: 1, scope: !2580, file: !2443, line: 523, type: !677)
!2585 = !DILocalVariable(name: "__filename", arg: 2, scope: !2580, file: !2443, line: 523, type: !682)
!2586 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2580, file: !2443, line: 523, type: !2538)
!2587 = !DILocalVariable(name: "__flag", arg: 4, scope: !2580, file: !2443, line: 523, type: !677)
!2588 = !DILocation(line: 0, scope: !2580)
!2589 = !DILocation(line: 526, column: 10, scope: !2580)
!2590 = !DILocation(line: 526, column: 3, scope: !2580)
!2591 = distinct !DISubprogram(name: "gate_matrix_reorg", scope: !3, file: !3, line: 2400, type: !2124, scopeLine: 2401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2167)
!2592 = !DILocation(line: 2402, column: 10, scope: !2591)
!2593 = !DILocation(line: 2402, column: 32, scope: !2591)
!2594 = !DILocation(line: 2402, column: 3, scope: !2591)
!2595 = distinct !DISubprogram(name: "matrix_reorg", scope: !3, file: !3, line: 2287, type: !2128, scopeLine: 2288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2596)
!2596 = !{!2597, !2802, !2807}
!2597 = !DILocalVariable(name: "node", scope: !2595, file: !3, line: 2289, type: !2598)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !574, line: 181, size: 2496, elements: !2600)
!2600 = !{!2601, !2602, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2717, !2739, !2749, !2753, !2779, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2599, file: !574, line: 182, baseType: !866, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !2599, file: !574, line: 183, baseType: !2603, size: 64, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !574, line: 314, size: 768, elements: !2605)
!2605 = !{!2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2617, !2618, !2619, !2620, !2621, !2622, !2623}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2604, file: !574, line: 316, baseType: !1848, size: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2604, file: !574, line: 317, baseType: !2598, size: 64, offset: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !2604, file: !574, line: 318, baseType: !2598, size: 64, offset: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !2604, file: !574, line: 319, baseType: !2603, size: 64, offset: 192)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !2604, file: !574, line: 320, baseType: !2603, size: 64, offset: 256)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !2604, file: !574, line: 321, baseType: !2603, size: 64, offset: 320)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !2604, file: !574, line: 322, baseType: !2603, size: 64, offset: 384)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !2604, file: !574, line: 323, baseType: !744, size: 64, offset: 448)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2604, file: !574, line: 324, baseType: !681, size: 64, offset: 512)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !2604, file: !574, line: 327, baseType: !2616, size: 32, offset: 576)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !574, line: 312, baseType: !573)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !2604, file: !574, line: 330, baseType: !7, size: 32, offset: 608)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2604, file: !574, line: 334, baseType: !677, size: 32, offset: 640)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2604, file: !574, line: 336, baseType: !677, size: 32, offset: 672)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !2604, file: !574, line: 338, baseType: !2203, size: 16, offset: 704)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !2604, file: !574, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !2604, file: !574, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !2604, file: !574, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !2599, file: !574, line: 184, baseType: !2603, size: 64, offset: 128)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2599, file: !574, line: 185, baseType: !2598, size: 64, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !2599, file: !574, line: 186, baseType: !2598, size: 64, offset: 256)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !2599, file: !574, line: 188, baseType: !2598, size: 64, offset: 320)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2599, file: !574, line: 190, baseType: !2598, size: 64, offset: 384)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !2599, file: !574, line: 192, baseType: !2598, size: 64, offset: 448)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2599, file: !574, line: 194, baseType: !2598, size: 64, offset: 512)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !2599, file: !574, line: 196, baseType: !2598, size: 64, offset: 576)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !2599, file: !574, line: 197, baseType: !2598, size: 64, offset: 640)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !2599, file: !574, line: 198, baseType: !2598, size: 64, offset: 704)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !2599, file: !574, line: 199, baseType: !2598, size: 64, offset: 768)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !2599, file: !574, line: 202, baseType: !2598, size: 64, offset: 832)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !2599, file: !574, line: 204, baseType: !2598, size: 64, offset: 896)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !2599, file: !574, line: 207, baseType: !1160, size: 64, offset: 960)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2599, file: !574, line: 209, baseType: !681, size: 64, offset: 1024)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !2599, file: !574, line: 214, baseType: !2640, size: 64, offset: 1088)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1118, line: 177, baseType: !2642)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1118, line: 177, size: 128, elements: !2643)
!2643 = !{!2644}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2642, file: !1118, line: 177, baseType: !2645, size: 128)
!2645 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1118, line: 176, baseType: !2646)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1118, line: 176, size: 128, elements: !2647)
!2647 = !{!2648, !2649, !2650}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2646, file: !1118, line: 176, baseType: !7, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2646, file: !1118, line: 176, baseType: !7, size: 32, offset: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2646, file: !1118, line: 176, baseType: !2651, size: 64, offset: 64)
!2651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2652, size: 64, elements: !785)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1118, line: 174, baseType: !2653)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !6, line: 173, size: 1152, elements: !2655)
!2655 = !{!2656, !2657, !2661, !2684, !2685, !2689, !2693, !2694, !2698}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2654, file: !6, line: 175, baseType: !2118, size: 640)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !2654, file: !6, line: 179, baseType: !2658, size: 64, offset: 640)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{null}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !2654, file: !6, line: 182, baseType: !2662, size: 64, offset: 704)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{null, !2665}
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !574, line: 276, size: 192, elements: !2667)
!2667 = !{!2668, !2669, !2683}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !2666, file: !574, line: 278, baseType: !1160, size: 64)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2666, file: !574, line: 279, baseType: !2670, size: 64, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !574, line: 272, baseType: !2672)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !574, line: 272, size: 128, elements: !2673)
!2673 = !{!2674}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2672, file: !574, line: 272, baseType: !2675, size: 128)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !574, line: 270, baseType: !2676)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !574, line: 270, size: 128, elements: !2677)
!2677 = !{!2678, !2679, !2680}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2676, file: !574, line: 270, baseType: !7, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2676, file: !574, line: 270, baseType: !7, size: 32, offset: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2676, file: !574, line: 270, baseType: !2681, size: 64, offset: 64)
!2681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2682, size: 64, elements: !785)
!2682 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !574, line: 268, baseType: !2598)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2666, file: !574, line: 280, baseType: !681, size: 64, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !2654, file: !6, line: 187, baseType: !2658, size: 64, offset: 768)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !2654, file: !6, line: 188, baseType: !2686, size: 64, offset: 832)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DISubroutineType(types: !2688)
!2688 = !{null, !2598}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !2654, file: !6, line: 191, baseType: !2690, size: 64, offset: 896)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{null, !2598, !2047}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !2654, file: !6, line: 195, baseType: !7, size: 32, offset: 960)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !2654, file: !6, line: 196, baseType: !2695, size: 64, offset: 1024)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DISubroutineType(types: !2697)
!2697 = !{!7, !2598}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !2654, file: !6, line: 197, baseType: !2699, size: 64, offset: 1088)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = !DISubroutineType(types: !2701)
!2701 = !{null, !2702}
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !574, line: 358, size: 320, elements: !2704)
!2704 = !{!2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2703, file: !574, line: 359, baseType: !866, size: 64)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2703, file: !574, line: 361, baseType: !2702, size: 64, offset: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2703, file: !574, line: 363, baseType: !2702, size: 64, offset: 128)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !2703, file: !574, line: 366, baseType: !2702, size: 64, offset: 192)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2703, file: !574, line: 368, baseType: !677, size: 32, offset: 256)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2703, file: !574, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !2703, file: !574, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2703, file: !574, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !2703, file: !574, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2703, file: !574, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !2703, file: !574, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2703, file: !574, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2599, file: !574, line: 216, baseType: !2718, size: 320, offset: 1152)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !574, line: 88, size: 320, elements: !2719)
!2719 = !{!2720, !2723, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !2718, file: !574, line: 90, baseType: !2721, size: 64)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !574, line: 51, flags: DIFlagFwdDecl)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !2718, file: !574, line: 92, baseType: !2724, size: 192, offset: 64)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !574, line: 57, size: 192, elements: !2725)
!2725 = !{!2726, !2727, !2728, !2729, !2730}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !2724, file: !574, line: 60, baseType: !837, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !2724, file: !574, line: 63, baseType: !677, size: 32, offset: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !2724, file: !574, line: 65, baseType: !677, size: 32, offset: 96)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !2724, file: !574, line: 67, baseType: !677, size: 32, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !2724, file: !574, line: 69, baseType: !677, size: 32, offset: 160)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2718, file: !574, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !2718, file: !574, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !2718, file: !574, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !2718, file: !574, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2718, file: !574, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !2718, file: !574, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !2718, file: !574, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !2718, file: !574, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !2599, file: !574, line: 217, baseType: !2740, size: 320, offset: 1472)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !574, line: 126, size: 320, elements: !2741)
!2741 = !{!2742, !2743, !2744, !2745, !2746, !2747, !2748}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !2740, file: !574, line: 128, baseType: !837, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !2740, file: !574, line: 130, baseType: !837, size: 64, offset: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !2740, file: !574, line: 134, baseType: !2598, size: 64, offset: 128)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2740, file: !574, line: 137, baseType: !677, size: 32, offset: 192)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2740, file: !574, line: 138, baseType: !677, size: 32, offset: 224)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !2740, file: !574, line: 141, baseType: !677, size: 32, offset: 256)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !2740, file: !574, line: 144, baseType: !676, size: 8, offset: 288)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2599, file: !574, line: 218, baseType: !2750, size: 32, offset: 1792)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !574, line: 150, size: 32, elements: !2751)
!2751 = !{!2752}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !2750, file: !574, line: 151, baseType: !7, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2599, file: !574, line: 219, baseType: !2754, size: 192, offset: 1856)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !574, line: 171, size: 192, elements: !2755)
!2755 = !{!2756, !2777, !2778}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !2754, file: !574, line: 173, baseType: !2757, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !574, line: 169, baseType: !2759)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !574, line: 169, size: 128, elements: !2760)
!2760 = !{!2761}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2759, file: !574, line: 169, baseType: !2762, size: 128)
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !574, line: 168, baseType: !2763)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !574, line: 168, size: 128, elements: !2764)
!2764 = !{!2765, !2766, !2767}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2763, file: !574, line: 168, baseType: !7, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2763, file: !574, line: 168, baseType: !7, size: 32, offset: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2763, file: !574, line: 168, baseType: !2768, size: 64, offset: 64)
!2768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2769, size: 64, elements: !785)
!2769 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !574, line: 167, baseType: !2770)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !574, line: 156, size: 192, elements: !2772)
!2772 = !{!2773, !2774, !2775, !2776}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !2771, file: !574, line: 159, baseType: !866, size: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !2771, file: !574, line: 161, baseType: !866, size: 64, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !2771, file: !574, line: 163, baseType: !676, size: 8, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !2771, file: !574, line: 165, baseType: !676, size: 8, offset: 136)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !2754, file: !574, line: 174, baseType: !1249, size: 64, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !2754, file: !574, line: 175, baseType: !1249, size: 64, offset: 128)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !2599, file: !574, line: 220, baseType: !2780, size: 256, offset: 2048)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !574, line: 74, size: 256, elements: !2781)
!2781 = !{!2782, !2783, !2784, !2785, !2786, !2787}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !2780, file: !574, line: 76, baseType: !837, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !2780, file: !574, line: 77, baseType: !837, size: 64, offset: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2780, file: !574, line: 78, baseType: !866, size: 64, offset: 128)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !2780, file: !574, line: 79, baseType: !676, size: 8, offset: 192)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !2780, file: !574, line: 80, baseType: !676, size: 8, offset: 200)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !2780, file: !574, line: 82, baseType: !676, size: 8, offset: 208)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2599, file: !574, line: 223, baseType: !1848, size: 64, offset: 2304)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2599, file: !574, line: 225, baseType: !677, size: 32, offset: 2368)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2599, file: !574, line: 227, baseType: !677, size: 32, offset: 2400)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2599, file: !574, line: 231, baseType: !677, size: 32, offset: 2432)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2599, file: !574, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !2599, file: !574, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !2599, file: !574, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !2599, file: !574, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !2599, file: !574, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2599, file: !574, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !2599, file: !574, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2599, file: !574, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !2599, file: !574, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !2599, file: !574, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!2802 = !DILocalVariable(name: "temp_fn", scope: !2803, file: !3, line: 2306, type: !866)
!2803 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 2305, column: 7)
!2804 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 2304, column: 9)
!2805 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 2303, column: 3)
!2806 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 2303, column: 3)
!2807 = !DILocalVariable(name: "temp_fn", scope: !2808, file: !3, line: 2374, type: !866)
!2808 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 2372, column: 7)
!2809 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 2371, column: 9)
!2810 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 2370, column: 3)
!2811 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 2370, column: 3)
!2812 = !DILocation(line: 2291, column: 7, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 2291, column: 7)
!2814 = !DILocation(line: 2291, column: 7, scope: !2595)
!2815 = !DILocation(line: 2292, column: 5, scope: !2813)
!2816 = !DILocation(line: 0, scope: !2813)
!2817 = !DILocation(line: 2296, column: 8, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 2296, column: 3)
!2819 = !DILocation(line: 0, scope: !2818)
!2820 = !DILocation(line: 0, scope: !2595)
!2821 = !DILocation(line: 2296, column: 3, scope: !2818)
!2822 = !DILocation(line: 2297, column: 10, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2824, file: !3, line: 2297, column: 9)
!2824 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 2296, column: 3)
!2825 = !DILocation(line: 2297, column: 9, scope: !2824)
!2826 = !DILocation(line: 2296, column: 48, scope: !2824)
!2827 = !DILocation(line: 2296, column: 3, scope: !2824)
!2828 = distinct !{!2828, !2821, !2829}
!2829 = !DILocation(line: 2298, column: 14, scope: !2818)
!2830 = !DILocation(line: 2299, column: 23, scope: !2595)
!2831 = !DILocation(line: 2299, column: 21, scope: !2595)
!2832 = !DILocation(line: 2301, column: 3, scope: !2595)
!2833 = !DILocation(line: 2303, column: 8, scope: !2806)
!2834 = !DILocation(line: 0, scope: !2806)
!2835 = !DILocation(line: 2303, column: 3, scope: !2806)
!2836 = !DILocation(line: 2304, column: 15, scope: !2804)
!2837 = !DILocation(line: 2304, column: 9, scope: !2804)
!2838 = !DILocation(line: 2304, column: 9, scope: !2805)
!2839 = !DILocation(line: 2308, column: 12, scope: !2803)
!2840 = !DILocation(line: 2309, column: 32, scope: !2803)
!2841 = !DILocation(line: 2309, column: 24, scope: !2803)
!2842 = !DILocation(line: 2310, column: 13, scope: !2803)
!2843 = !DILocation(line: 2310, column: 2, scope: !2803)
!2844 = !DILocation(line: 2311, column: 2, scope: !2803)
!2845 = !DILocation(line: 2312, column: 2, scope: !2803)
!2846 = !DILocation(line: 2314, column: 24, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 2314, column: 6)
!2848 = !DILocation(line: 2314, column: 7, scope: !2847)
!2849 = !DILocation(line: 2314, column: 6, scope: !2803)
!2850 = !DILocation(line: 2316, column: 6, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 2315, column: 4)
!2852 = !DILocation(line: 2317, column: 6, scope: !2851)
!2853 = !DILocation(line: 2318, column: 6, scope: !2851)
!2854 = !DILocation(line: 2319, column: 28, scope: !2851)
!2855 = !DILocation(line: 2320, column: 6, scope: !2851)
!2856 = !DILocation(line: 2322, column: 6, scope: !2851)
!2857 = !DILocation(line: 2329, column: 7, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 2329, column: 6)
!2859 = !DILocation(line: 2329, column: 6, scope: !2803)
!2860 = !DILocation(line: 2331, column: 6, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 2330, column: 4)
!2862 = !DILocation(line: 2332, column: 6, scope: !2861)
!2863 = !DILocation(line: 2333, column: 6, scope: !2861)
!2864 = !DILocation(line: 2334, column: 28, scope: !2861)
!2865 = !DILocation(line: 2335, column: 6, scope: !2861)
!2866 = !DILocation(line: 2337, column: 6, scope: !2861)
!2867 = !DILocation(line: 2341, column: 27, scope: !2803)
!2868 = !DILocation(line: 2341, column: 25, scope: !2803)
!2869 = !DILocation(line: 2343, column: 7, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 2343, column: 6)
!2871 = !DILocation(line: 2343, column: 6, scope: !2803)
!2872 = !DILocation(line: 2344, column: 4, scope: !2870)
!2873 = !DILocation(line: 2347, column: 6, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2870, file: !3, line: 2346, column: 4)
!2875 = !DILocation(line: 2348, column: 6, scope: !2874)
!2876 = !DILocation(line: 2349, column: 10, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2874, file: !3, line: 2349, column: 10)
!2878 = !DILocation(line: 2349, column: 10, scope: !2874)
!2879 = !DILocation(line: 2350, column: 8, scope: !2877)
!2880 = !DILocation(line: 2351, column: 21, scope: !2874)
!2881 = !DILocation(line: 2351, column: 6, scope: !2874)
!2882 = !DILocation(line: 2352, column: 10, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2874, file: !3, line: 2352, column: 10)
!2884 = !DILocation(line: 2352, column: 10, scope: !2874)
!2885 = !DILocation(line: 2354, column: 3, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 2353, column: 8)
!2887 = !DILocation(line: 2355, column: 3, scope: !2886)
!2888 = !DILocation(line: 2356, column: 3, scope: !2886)
!2889 = !DILocation(line: 2356, column: 17, scope: !2886)
!2890 = !DILocation(line: 2357, column: 8, scope: !2886)
!2891 = !DILocation(line: 2361, column: 17, scope: !2803)
!2892 = !DILocation(line: 2361, column: 2, scope: !2803)
!2893 = !DILocation(line: 2362, column: 2, scope: !2803)
!2894 = !DILocation(line: 2363, column: 2, scope: !2803)
!2895 = !DILocation(line: 2364, column: 2, scope: !2803)
!2896 = !DILocation(line: 2365, column: 24, scope: !2803)
!2897 = !DILocation(line: 2366, column: 2, scope: !2803)
!2898 = !DILocation(line: 2367, column: 7, scope: !2804)
!2899 = !DILocation(line: 2303, column: 48, scope: !2805)
!2900 = !DILocation(line: 2303, column: 3, scope: !2805)
!2901 = distinct !{!2901, !2835, !2902}
!2902 = !DILocation(line: 2367, column: 7, scope: !2806)
!2903 = !DILocation(line: 2368, column: 18, scope: !2595)
!2904 = !DILocation(line: 2368, column: 3, scope: !2595)
!2905 = !DILocation(line: 2370, column: 8, scope: !2811)
!2906 = !DILocation(line: 0, scope: !2811)
!2907 = !DILocation(line: 2370, column: 3, scope: !2811)
!2908 = !DILocation(line: 2371, column: 15, scope: !2809)
!2909 = !DILocation(line: 2371, column: 9, scope: !2809)
!2910 = !DILocation(line: 2371, column: 9, scope: !2810)
!2911 = !DILocation(line: 2376, column: 12, scope: !2808)
!2912 = !DILocation(line: 2377, column: 32, scope: !2808)
!2913 = !DILocation(line: 2377, column: 24, scope: !2808)
!2914 = !DILocation(line: 2378, column: 13, scope: !2808)
!2915 = !DILocation(line: 2378, column: 2, scope: !2808)
!2916 = !DILocation(line: 2379, column: 2, scope: !2808)
!2917 = !DILocation(line: 2380, column: 2, scope: !2808)
!2918 = !DILocation(line: 2381, column: 2, scope: !2808)
!2919 = !DILocation(line: 2382, column: 17, scope: !2808)
!2920 = !DILocation(line: 2382, column: 2, scope: !2808)
!2921 = !DILocation(line: 2383, column: 2, scope: !2808)
!2922 = !DILocation(line: 2384, column: 2, scope: !2808)
!2923 = !DILocation(line: 2385, column: 2, scope: !2808)
!2924 = !DILocation(line: 2386, column: 24, scope: !2808)
!2925 = !DILocation(line: 2387, column: 2, scope: !2808)
!2926 = !DILocation(line: 2388, column: 7, scope: !2808)
!2927 = !DILocation(line: 2370, column: 48, scope: !2810)
!2928 = !DILocation(line: 2370, column: 3, scope: !2810)
!2929 = distinct !{!2929, !2907, !2930}
!2930 = !DILocation(line: 2388, column: 7, scope: !2811)
!2931 = !DILocation(line: 2389, column: 18, scope: !2595)
!2932 = !DILocation(line: 2389, column: 3, scope: !2595)
!2933 = !DILocation(line: 2391, column: 25, scope: !2595)
!2934 = !DILocation(line: 2392, column: 3, scope: !2595)
!2935 = !DILocation(line: 2393, column: 21, scope: !2595)
!2936 = !DILocation(line: 2394, column: 3, scope: !2595)
!2937 = !DILocation(line: 2395, column: 1, scope: !2595)
!2938 = distinct !DISubprogram(name: "may_flatten_matrices", scope: !3, file: !3, line: 458, type: !2939, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2941)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{!676, !2598}
!2941 = !{!2942, !2943, !2944, !2945, !2946}
!2942 = !DILocalVariable(name: "node", arg: 1, scope: !2938, file: !3, line: 458, type: !2598)
!2943 = !DILocalVariable(name: "decl", scope: !2938, file: !3, line: 460, type: !866)
!2944 = !DILocalVariable(name: "func", scope: !2938, file: !3, line: 461, type: !1116)
!2945 = !DILocalVariable(name: "bb", scope: !2938, file: !3, line: 462, type: !1128)
!2946 = !DILocalVariable(name: "gsi", scope: !2938, file: !3, line: 463, type: !2947)
!2947 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !597, line: 265, baseType: !2948)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !597, line: 254, size: 192, elements: !2949)
!2949 = !{!2950, !2951, !2952}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2948, file: !597, line: 257, baseType: !739, size: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2948, file: !597, line: 263, baseType: !734, size: 64, offset: 64)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2948, file: !597, line: 264, baseType: !1128, size: 64, offset: 128)
!2953 = !DILocation(line: 0, scope: !2938)
!2954 = !DILocation(line: 463, column: 3, scope: !2938)
!2955 = !DILocation(line: 466, column: 13, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2938, file: !3, line: 466, column: 7)
!2957 = !DILocation(line: 466, column: 7, scope: !2956)
!2958 = !DILocation(line: 466, column: 7, scope: !2938)
!2959 = !DILocation(line: 465, column: 16, scope: !2938)
!2960 = !DILocation(line: 468, column: 14, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 467, column: 5)
!2962 = !DILocation(line: 469, column: 7, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 469, column: 7)
!2964 = !DILocation(line: 0, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 470, column: 2)
!2966 = distinct !DILexicalBlock(scope: !2963, file: !3, line: 469, column: 7)
!2967 = !DILocation(line: 469, column: 7, scope: !2966)
!2968 = !DILocation(line: 0, scope: !2963)
!2969 = !DILocation(line: 470, column: 13, scope: !2965)
!2970 = !DILocation(line: 470, column: 7, scope: !2965)
!2971 = !DILocation(line: 470, column: 33, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 470, column: 2)
!2973 = !DILocation(line: 470, column: 32, scope: !2972)
!2974 = !DILocation(line: 470, column: 2, scope: !2965)
!2975 = !DILocation(line: 471, column: 31, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 471, column: 6)
!2977 = !DILocation(line: 471, column: 7, scope: !2976)
!2978 = !DILocation(line: 471, column: 6, scope: !2972)
!2979 = !DILocation(line: 470, column: 50, scope: !2972)
!2980 = !DILocation(line: 470, column: 2, scope: !2972)
!2981 = distinct !{!2981, !2974, !2982}
!2982 = !DILocation(line: 472, column: 11, scope: !2965)
!2983 = distinct !{!2983, !2962, !2984}
!2984 = !DILocation(line: 472, column: 11, scope: !2963)
!2985 = !DILocation(line: 475, column: 1, scope: !2938)
!2986 = distinct !DISubprogram(name: "mtt_info_hash", scope: !3, file: !3, line: 392, type: !1168, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2987)
!2987 = !{!2988}
!2988 = !DILocalVariable(name: "mtt", arg: 1, scope: !2986, file: !3, line: 392, type: !1171)
!2989 = !DILocation(line: 0, scope: !2986)
!2990 = !DILocation(line: 394, column: 10, scope: !2986)
!2991 = !DILocation(line: 394, column: 65, scope: !2986)
!2992 = !DILocation(line: 394, column: 3, scope: !2986)
!2993 = distinct !DISubprogram(name: "mtt_info_eq", scope: !3, file: !3, line: 400, type: !1176, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2994)
!2994 = !{!2995, !2996, !2997, !2999}
!2995 = !DILocalVariable(name: "mtt1", arg: 1, scope: !2993, file: !3, line: 400, type: !1171)
!2996 = !DILocalVariable(name: "mtt2", arg: 2, scope: !2993, file: !3, line: 400, type: !1171)
!2997 = !DILocalVariable(name: "i1", scope: !2993, file: !3, line: 402, type: !2998)
!2998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2038)
!2999 = !DILocalVariable(name: "i2", scope: !2993, file: !3, line: 403, type: !2998)
!3000 = !DILocation(line: 0, scope: !2993)
!3001 = !DILocation(line: 405, column: 11, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 405, column: 7)
!3003 = !DILocation(line: 405, column: 23, scope: !3002)
!3004 = !DILocation(line: 405, column: 16, scope: !3002)
!3005 = !DILocation(line: 409, column: 1, scope: !2993)
!3006 = distinct !DISubprogram(name: "mat_free", scope: !3, file: !3, line: 541, type: !1181, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3007)
!3007 = !{!3008, !3009}
!3008 = !DILocalVariable(name: "e", arg: 1, scope: !3006, file: !3, line: 541, type: !681)
!3009 = !DILocalVariable(name: "mat", scope: !3006, file: !3, line: 543, type: !2090)
!3010 = !DILocation(line: 0, scope: !3006)
!3011 = !DILocation(line: 545, column: 8, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 545, column: 7)
!3013 = !DILocation(line: 545, column: 7, scope: !3006)
!3014 = !DILocation(line: 548, column: 12, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 548, column: 7)
!3016 = !DILocation(line: 548, column: 7, scope: !3015)
!3017 = !DILocation(line: 548, column: 7, scope: !3006)
!3018 = !DILocation(line: 549, column: 5, scope: !3015)
!3019 = !DILocation(line: 550, column: 12, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 550, column: 7)
!3021 = !DILocation(line: 550, column: 7, scope: !3020)
!3022 = !DILocation(line: 550, column: 7, scope: !3006)
!3023 = !DILocation(line: 551, column: 5, scope: !3020)
!3024 = !DILocation(line: 552, column: 12, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 552, column: 7)
!3026 = !DILocation(line: 552, column: 7, scope: !3025)
!3027 = !DILocation(line: 552, column: 7, scope: !3006)
!3028 = !DILocation(line: 553, column: 5, scope: !3025)
!3029 = !DILocation(line: 554, column: 1, scope: !3006)
!3030 = distinct !DISubprogram(name: "find_matrices_decl", scope: !3, file: !3, line: 560, type: !2659, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3031)
!3031 = !{!3032, !3033, !3034, !3035}
!3032 = !DILocalVariable(name: "tmp", scope: !3030, file: !3, line: 562, type: !2090)
!3033 = !DILocalVariable(name: "slot", scope: !3030, file: !3, line: 563, type: !1184)
!3034 = !DILocalVariable(name: "vnode", scope: !3030, file: !3, line: 564, type: !2702)
!3035 = !DILocalVariable(name: "var_decl", scope: !3036, file: !3, line: 572, type: !866)
!3036 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 571, column: 5)
!3037 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 570, column: 3)
!3038 = distinct !DILexicalBlock(scope: !3030, file: !3, line: 570, column: 3)
!3039 = !DILocation(line: 566, column: 3, scope: !3030)
!3040 = !DILocation(line: 570, column: 8, scope: !3038)
!3041 = !DILocation(line: 0, scope: !3038)
!3042 = !DILocation(line: 0, scope: !3030)
!3043 = !DILocation(line: 570, column: 3, scope: !3038)
!3044 = !DILocation(line: 572, column: 30, scope: !3036)
!3045 = !DILocation(line: 0, scope: !3036)
!3046 = !DILocation(line: 574, column: 12, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 574, column: 11)
!3048 = !DILocation(line: 574, column: 21, scope: !3047)
!3049 = !DILocation(line: 574, column: 24, scope: !3047)
!3050 = !DILocation(line: 574, column: 45, scope: !3047)
!3051 = !DILocation(line: 574, column: 11, scope: !3036)
!3052 = !DILocation(line: 577, column: 11, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 577, column: 11)
!3054 = !DILocation(line: 577, column: 11, scope: !3036)
!3055 = !DILocation(line: 578, column: 13, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3053, file: !3, line: 578, column: 6)
!3057 = !DILocation(line: 578, column: 11, scope: !3056)
!3058 = !DILocation(line: 578, column: 6, scope: !3053)
!3059 = !DILocation(line: 580, column: 11, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 580, column: 10)
!3061 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 579, column: 4)
!3062 = !DILocation(line: 580, column: 10, scope: !3061)
!3063 = !DILocation(line: 582, column: 26, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 581, column: 8)
!3065 = !DILocation(line: 582, column: 45, scope: !3064)
!3066 = !DILocation(line: 582, column: 10, scope: !3064)
!3067 = !DILocation(line: 583, column: 9, scope: !3064)
!3068 = !DILocation(line: 584, column: 8, scope: !3064)
!3069 = !DILocation(line: 570, column: 59, scope: !3037)
!3070 = !DILocation(line: 570, column: 3, scope: !3037)
!3071 = distinct !{!3071, !3043, !3072}
!3072 = !DILocation(line: 586, column: 5, scope: !3038)
!3073 = !DILocation(line: 588, column: 1, scope: !3030)
!3074 = distinct !DISubprogram(name: "gimple_in_ssa_p", scope: !3075, file: !3075, line: 33, type: !3076, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3080)
!3075 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!676, !3078}
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!3080 = !{!3081}
!3081 = !DILocalVariable(name: "fun", arg: 1, scope: !3074, file: !3075, line: 33, type: !3078)
!3082 = !DILocation(line: 0, scope: !3074)
!3083 = !DILocation(line: 35, column: 10, scope: !3074)
!3084 = !DILocation(line: 35, column: 14, scope: !3074)
!3085 = !DILocation(line: 35, column: 22, scope: !3074)
!3086 = !DILocation(line: 35, column: 17, scope: !3074)
!3087 = !DILocation(line: 35, column: 32, scope: !3074)
!3088 = !DILocation(line: 35, column: 51, scope: !3074)
!3089 = !DILocation(line: 35, column: 3, scope: !3074)
!3090 = distinct !DISubprogram(name: "mat_acc_phi_hash", scope: !3, file: !3, line: 358, type: !1168, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3091)
!3091 = !{!3092, !3093}
!3092 = !DILocalVariable(name: "p", arg: 1, scope: !3090, file: !3, line: 358, type: !1171)
!3093 = !DILocalVariable(name: "ma_phi", scope: !3090, file: !3, line: 360, type: !3094)
!3094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2091)
!3095 = !DILocation(line: 0, scope: !3090)
!3096 = !DILocation(line: 363, column: 10, scope: !3090)
!3097 = !DILocation(line: 363, column: 37, scope: !3090)
!3098 = !DILocation(line: 363, column: 3, scope: !3090)
!3099 = distinct !DISubprogram(name: "mat_acc_phi_eq", scope: !3, file: !3, line: 369, type: !1176, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3100)
!3100 = !{!3101, !3102, !3103, !3104}
!3101 = !DILocalVariable(name: "p1", arg: 1, scope: !3099, file: !3, line: 369, type: !1171)
!3102 = !DILocalVariable(name: "p2", arg: 2, scope: !3099, file: !3, line: 369, type: !1171)
!3103 = !DILocalVariable(name: "phi1", scope: !3099, file: !3, line: 371, type: !3094)
!3104 = !DILocalVariable(name: "phi2", scope: !3099, file: !3, line: 373, type: !3094)
!3105 = !DILocation(line: 0, scope: !3099)
!3106 = !DILocation(line: 376, column: 13, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3099, file: !3, line: 376, column: 7)
!3108 = !DILocation(line: 376, column: 26, scope: !3107)
!3109 = !DILocation(line: 376, column: 17, scope: !3107)
!3110 = !DILocation(line: 380, column: 1, scope: !3099)
!3111 = distinct !DISubprogram(name: "find_sites_in_func", scope: !3, file: !3, line: 1656, type: !3112, scopeLine: 1657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3114)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{null, !676}
!3114 = !{!3115, !3116, !3127, !3128, !3129, !3130, !3131, !3132}
!3115 = !DILocalVariable(name: "record", arg: 1, scope: !3111, file: !3, line: 1656, type: !676)
!3116 = !DILocalVariable(name: "visited_stmts_1", scope: !3111, file: !3, line: 1658, type: !3117)
!3117 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !3118, line: 45, baseType: !3119)
!3118 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !3118, line: 39, size: 192, elements: !3121)
!3121 = !{!3122, !3123, !3124, !3125}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !3120, file: !3118, line: 41, baseType: !675, size: 64)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !3120, file: !3118, line: 42, baseType: !7, size: 32, offset: 64)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3120, file: !3118, line: 43, baseType: !7, size: 32, offset: 96)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !3120, file: !3118, line: 44, baseType: !3126, size: 64, offset: 128)
!3126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !820, size: 64, elements: !785)
!3127 = !DILocalVariable(name: "gsi", scope: !3111, file: !3, line: 1660, type: !2947)
!3128 = !DILocalVariable(name: "stmt", scope: !3111, file: !3, line: 1661, type: !744)
!3129 = !DILocalVariable(name: "bb", scope: !3111, file: !3, line: 1662, type: !1128)
!3130 = !DILocalVariable(name: "tmpmi", scope: !3111, file: !3, line: 1663, type: !2040)
!3131 = !DILocalVariable(name: "mi", scope: !3111, file: !3, line: 1663, type: !2090)
!3132 = !DILocalVariable(name: "lhs", scope: !3133, file: !3, line: 1671, type: !866)
!3133 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 1670, column: 7)
!3134 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 1669, column: 5)
!3135 = distinct !DILexicalBlock(scope: !3136, file: !3, line: 1669, column: 5)
!3136 = distinct !DILexicalBlock(scope: !3137, file: !3, line: 1668, column: 3)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 1667, column: 3)
!3138 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 1667, column: 3)
!3139 = !DILocation(line: 0, scope: !3111)
!3140 = !DILocation(line: 1660, column: 3, scope: !3111)
!3141 = !DILocation(line: 1663, column: 3, scope: !3111)
!3142 = !DILocation(line: 1665, column: 36, scope: !3111)
!3143 = !DILocation(line: 1665, column: 21, scope: !3111)
!3144 = !DILocation(line: 1667, column: 3, scope: !3138)
!3145 = !DILocation(line: 0, scope: !3135)
!3146 = !DILocation(line: 0, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3148, file: !3, line: 1677, column: 4)
!3148 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 1675, column: 6)
!3149 = !DILocation(line: 1667, column: 3, scope: !3137)
!3150 = !DILocation(line: 0, scope: !3138)
!3151 = !DILocation(line: 1669, column: 16, scope: !3135)
!3152 = !DILocation(line: 1669, column: 10, scope: !3135)
!3153 = !DILocation(line: 1669, column: 36, scope: !3134)
!3154 = !DILocation(line: 1669, column: 35, scope: !3134)
!3155 = !DILocation(line: 1669, column: 5, scope: !3135)
!3156 = !DILocation(line: 1673, column: 9, scope: !3133)
!3157 = !DILocation(line: 1674, column: 8, scope: !3133)
!3158 = !DILocation(line: 0, scope: !3133)
!3159 = !DILocation(line: 1675, column: 10, scope: !3148)
!3160 = !DILocation(line: 1676, column: 6, scope: !3148)
!3161 = !DILocation(line: 1676, column: 9, scope: !3148)
!3162 = !DILocation(line: 1676, column: 25, scope: !3148)
!3163 = !DILocation(line: 1675, column: 6, scope: !3133)
!3164 = !DILocation(line: 1678, column: 17, scope: !3147)
!3165 = !DILocation(line: 1679, column: 50, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 1679, column: 10)
!3167 = !DILocation(line: 1679, column: 39, scope: !3166)
!3168 = !DILocation(line: 1679, column: 14, scope: !3166)
!3169 = !DILocation(line: 1679, column: 10, scope: !3147)
!3170 = !DILocation(line: 1679, column: 16, scope: !3166)
!3171 = !DILocation(line: 1682, column: 3, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 1681, column: 8)
!3173 = !DILocation(line: 1683, column: 3, scope: !3172)
!3174 = !DILocation(line: 1684, column: 8, scope: !3172)
!3175 = !DILocation(line: 1686, column: 6, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 1686, column: 6)
!3177 = !DILocation(line: 1687, column: 6, scope: !3176)
!3178 = !DILocation(line: 1687, column: 9, scope: !3176)
!3179 = !DILocation(line: 1688, column: 6, scope: !3176)
!3180 = !DILocation(line: 1688, column: 9, scope: !3176)
!3181 = !DILocation(line: 1688, column: 25, scope: !3176)
!3182 = !DILocation(line: 1689, column: 6, scope: !3176)
!3183 = !DILocation(line: 1689, column: 9, scope: !3176)
!3184 = !DILocation(line: 1689, column: 47, scope: !3176)
!3185 = !DILocation(line: 1686, column: 6, scope: !3133)
!3186 = !DILocation(line: 1691, column: 19, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3176, file: !3, line: 1690, column: 4)
!3188 = !DILocation(line: 1691, column: 17, scope: !3187)
!3189 = !DILocation(line: 1692, column: 50, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3187, file: !3, line: 1692, column: 10)
!3191 = !DILocation(line: 1692, column: 39, scope: !3190)
!3192 = !DILocation(line: 1692, column: 14, scope: !3190)
!3193 = !DILocation(line: 1692, column: 10, scope: !3187)
!3194 = !DILocation(line: 1692, column: 16, scope: !3190)
!3195 = !DILocation(line: 1695, column: 3, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3190, file: !3, line: 1694, column: 8)
!3197 = !DILocation(line: 1696, column: 3, scope: !3196)
!3198 = !DILocation(line: 1698, column: 8, scope: !3196)
!3199 = !DILocation(line: 1669, column: 53, scope: !3134)
!3200 = !DILocation(line: 1669, column: 5, scope: !3134)
!3201 = distinct !{!3201, !3155, !3202}
!3202 = !DILocation(line: 1700, column: 7, scope: !3135)
!3203 = !DILocation(line: 0, scope: !3137)
!3204 = distinct !{!3204, !3144, !3205}
!3205 = !DILocation(line: 1701, column: 3, scope: !3138)
!3206 = !DILocation(line: 1702, column: 3, scope: !3111)
!3207 = !DILocation(line: 1703, column: 1, scope: !3111)
!3208 = distinct !DISubprogram(name: "analyze_transpose", scope: !3, file: !3, line: 895, type: !3209, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3211)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!677, !1184, !681}
!3211 = !{!3212, !3213, !3214, !3215, !3216, !3217, !3224, !3225, !3226}
!3212 = !DILocalVariable(name: "slot", arg: 1, scope: !3208, file: !3, line: 895, type: !1184)
!3213 = !DILocalVariable(name: "data", arg: 2, scope: !3208, file: !3, line: 895, type: !681)
!3214 = !DILocalVariable(name: "mi", scope: !3208, file: !3, line: 897, type: !2090)
!3215 = !DILocalVariable(name: "min_escape_l", scope: !3208, file: !3, line: 898, type: !677)
!3216 = !DILocalVariable(name: "loop", scope: !3208, file: !3, line: 899, type: !1314)
!3217 = !DILocalVariable(name: "iv", scope: !3208, file: !3, line: 900, type: !3218)
!3218 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_iv", file: !1068, line: 651, baseType: !3219)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1068, line: 644, size: 192, elements: !3220)
!3220 = !{!3221, !3222, !3223}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3219, file: !1068, line: 647, baseType: !866, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3219, file: !1068, line: 647, baseType: !866, size: 64, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "no_overflow", scope: !3219, file: !1068, line: 650, baseType: !676, size: 8, offset: 128)
!3224 = !DILocalVariable(name: "acc_info", scope: !3208, file: !3, line: 901, type: !2078)
!3225 = !DILocalVariable(name: "i", scope: !3208, file: !3, line: 902, type: !677)
!3226 = !DILocalVariable(name: "istep", scope: !3227, file: !3, line: 938, type: !837)
!3227 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 937, column: 3)
!3228 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 936, column: 12)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !3, line: 935, column: 6)
!3230 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 934, column: 8)
!3231 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 927, column: 2)
!3232 = distinct !DILexicalBlock(scope: !3233, file: !3, line: 925, column: 11)
!3233 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 924, column: 5)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 922, column: 3)
!3235 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 922, column: 3)
!3236 = !DILocation(line: 0, scope: !3208)
!3237 = !DILocation(line: 897, column: 51, scope: !3208)
!3238 = !DILocation(line: 898, column: 26, scope: !3208)
!3239 = !DILocation(line: 900, column: 3, scope: !3208)
!3240 = !DILocation(line: 901, column: 3, scope: !3208)
!3241 = !DILocation(line: 904, column: 20, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 904, column: 7)
!3243 = !DILocation(line: 904, column: 24, scope: !3242)
!3244 = !DILocation(line: 0, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 906, column: 11)
!3246 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 905, column: 5)
!3247 = !DILocation(line: 906, column: 15, scope: !3245)
!3248 = !DILocation(line: 904, column: 32, scope: !3242)
!3249 = !DILocation(line: 904, column: 28, scope: !3242)
!3250 = !DILocation(line: 904, column: 7, scope: !3208)
!3251 = !DILocation(line: 906, column: 11, scope: !3245)
!3252 = !DILocation(line: 906, column: 11, scope: !3246)
!3253 = !DILocation(line: 0, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3255, file: !3, line: 908, column: 4)
!3255 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 908, column: 4)
!3256 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 907, column: 2)
!3257 = !DILocation(line: 908, column: 4, scope: !3255)
!3258 = !DILocation(line: 909, column: 9, scope: !3254)
!3259 = !DILocation(line: 0, scope: !3255)
!3260 = !DILocation(line: 911, column: 12, scope: !3254)
!3261 = !DILocation(line: 911, column: 6, scope: !3254)
!3262 = !DILocation(line: 910, column: 10, scope: !3254)
!3263 = !DILocation(line: 908, column: 4, scope: !3254)
!3264 = distinct !{!3264, !3257, !3265}
!3265 = !DILocation(line: 911, column: 20, scope: !3255)
!3266 = !DILocation(line: 912, column: 4, scope: !3256)
!3267 = !DILocation(line: 914, column: 2, scope: !3256)
!3268 = !DILocation(line: 917, column: 12, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 917, column: 7)
!3270 = !DILocation(line: 917, column: 8, scope: !3269)
!3271 = !DILocation(line: 917, column: 7, scope: !3208)
!3272 = !DILocation(line: 919, column: 30, scope: !3269)
!3273 = !DILocation(line: 919, column: 21, scope: !3269)
!3274 = !DILocation(line: 918, column: 23, scope: !3269)
!3275 = !DILocation(line: 918, column: 5, scope: !3269)
!3276 = !DILocation(line: 0, scope: !3228)
!3277 = !DILocation(line: 0, scope: !3233)
!3278 = !DILocation(line: 922, column: 8, scope: !3235)
!3279 = !DILocation(line: 0, scope: !3235)
!3280 = !DILocation(line: 922, column: 15, scope: !3234)
!3281 = !DILocation(line: 922, column: 3, scope: !3235)
!3282 = !DILocation(line: 925, column: 35, scope: !3232)
!3283 = !DILocation(line: 925, column: 45, scope: !3232)
!3284 = !DILocation(line: 925, column: 11, scope: !3232)
!3285 = !DILocation(line: 925, column: 51, scope: !3232)
!3286 = !DILocation(line: 926, column: 4, scope: !3232)
!3287 = !DILocation(line: 926, column: 7, scope: !3232)
!3288 = !DILocation(line: 926, column: 17, scope: !3232)
!3289 = !DILocation(line: 926, column: 23, scope: !3232)
!3290 = !DILocation(line: 925, column: 11, scope: !3233)
!3291 = !DILocation(line: 928, column: 43, scope: !3231)
!3292 = !DILocation(line: 928, column: 11, scope: !3231)
!3293 = !DILocation(line: 929, column: 9, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 929, column: 8)
!3295 = !DILocation(line: 929, column: 14, scope: !3294)
!3296 = !DILocation(line: 929, column: 23, scope: !3294)
!3297 = !DILocation(line: 929, column: 17, scope: !3294)
!3298 = !DILocation(line: 929, column: 8, scope: !3231)
!3299 = !DILocation(line: 931, column: 14, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 930, column: 6)
!3301 = !DILocation(line: 931, column: 8, scope: !3300)
!3302 = !DILocation(line: 932, column: 8, scope: !3300)
!3303 = !DILocation(line: 934, column: 31, scope: !3230)
!3304 = !DILocation(line: 934, column: 41, scope: !3230)
!3305 = !DILocation(line: 934, column: 8, scope: !3230)
!3306 = !DILocation(line: 934, column: 8, scope: !3231)
!3307 = !DILocation(line: 936, column: 15, scope: !3228)
!3308 = !DILocation(line: 936, column: 20, scope: !3228)
!3309 = !DILocation(line: 936, column: 12, scope: !3229)
!3310 = !DILocation(line: 940, column: 13, scope: !3227)
!3311 = !DILocation(line: 0, scope: !3227)
!3312 = !DILocation(line: 941, column: 15, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 941, column: 9)
!3314 = !DILocation(line: 941, column: 9, scope: !3227)
!3315 = !DILocation(line: 943, column: 9, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 942, column: 7)
!3317 = !DILocation(line: 943, column: 19, scope: !3316)
!3318 = !DILocation(line: 943, column: 49, scope: !3316)
!3319 = !DILocation(line: 945, column: 25, scope: !3316)
!3320 = !DILocation(line: 945, column: 4, scope: !3316)
!3321 = !DILocation(line: 945, column: 32, scope: !3316)
!3322 = !DILocation(line: 944, column: 13, scope: !3316)
!3323 = !DILocation(line: 944, column: 27, scope: !3316)
!3324 = !DILocation(line: 944, column: 37, scope: !3316)
!3325 = !DILocation(line: 944, column: 9, scope: !3316)
!3326 = !DILocation(line: 944, column: 44, scope: !3316)
!3327 = !DILocation(line: 946, column: 7, scope: !3316)
!3328 = !DILocation(line: 951, column: 13, scope: !3233)
!3329 = !DILocation(line: 951, column: 7, scope: !3233)
!3330 = !DILocation(line: 952, column: 5, scope: !3233)
!3331 = !DILocation(line: 923, column: 9, scope: !3234)
!3332 = !DILocation(line: 922, column: 3, scope: !3234)
!3333 = distinct !{!3333, !3281, !3334}
!3334 = !DILocation(line: 952, column: 5, scope: !3235)
!3335 = !DILocation(line: 953, column: 3, scope: !3208)
!3336 = !DILocation(line: 955, column: 3, scope: !3208)
!3337 = !DILocation(line: 956, column: 1, scope: !3208)
!3338 = distinct !DISubprogram(name: "check_allocation_function", scope: !3, file: !3, line: 1570, type: !3209, scopeLine: 1571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3339)
!3339 = !{!3340, !3341, !3342, !3343, !3344, !3345, !3349, !3350}
!3340 = !DILocalVariable(name: "slot", arg: 1, scope: !3338, file: !3, line: 1570, type: !1184)
!3341 = !DILocalVariable(name: "data", arg: 2, scope: !3338, file: !3, line: 1570, type: !681)
!3342 = !DILocalVariable(name: "level", scope: !3338, file: !3, line: 1572, type: !677)
!3343 = !DILocalVariable(name: "mi", scope: !3338, file: !3, line: 1573, type: !2090)
!3344 = !DILocalVariable(name: "visited", scope: !3338, file: !3, line: 1574, type: !3117)
!3345 = !DILocalVariable(name: "call_stmt", scope: !3346, file: !3, line: 1598, type: !744)
!3346 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 1597, column: 5)
!3347 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 1596, column: 3)
!3348 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1596, column: 3)
!3349 = !DILocalVariable(name: "size", scope: !3346, file: !3, line: 1599, type: !866)
!3350 = !DILocalVariable(name: "mcd", scope: !3346, file: !3, line: 1600, type: !3351)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "malloc_call_data", file: !3, line: 161, size: 192, elements: !3352)
!3352 = !{!3353, !3354, !3355}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !3351, file: !3, line: 163, baseType: !744, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "size_var", scope: !3351, file: !3, line: 164, baseType: !866, size: 64, offset: 64)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_size", scope: !3351, file: !3, line: 165, baseType: !866, size: 64, offset: 128)
!3356 = !DILocation(line: 0, scope: !3338)
!3357 = !DILocation(line: 1573, column: 51, scope: !3338)
!3358 = !DILocation(line: 1576, column: 12, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1576, column: 7)
!3360 = !DILocation(line: 1576, column: 8, scope: !3359)
!3361 = !DILocation(line: 1576, column: 7, scope: !3338)
!3362 = !DILocation(line: 1579, column: 28, scope: !3338)
!3363 = !DILocation(line: 1579, column: 13, scope: !3338)
!3364 = !DILocation(line: 1583, column: 11, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1583, column: 7)
!3366 = !DILocation(line: 1583, column: 39, scope: !3365)
!3367 = !DILocation(line: 1583, column: 36, scope: !3365)
!3368 = !DILocation(line: 1585, column: 7, scope: !3365)
!3369 = !DILocation(line: 1585, column: 15, scope: !3365)
!3370 = !DILocation(line: 1585, column: 11, scope: !3365)
!3371 = !DILocation(line: 1583, column: 7, scope: !3338)
!3372 = !DILocation(line: 0, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 1588, column: 3)
!3374 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1588, column: 3)
!3375 = !DILocation(line: 1588, column: 3, scope: !3374)
!3376 = !DILocation(line: 0, scope: !3374)
!3377 = !DILocation(line: 1588, column: 25, scope: !3373)
!3378 = !DILocation(line: 1589, column: 10, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 1589, column: 9)
!3380 = !DILocation(line: 1589, column: 9, scope: !3373)
!3381 = !DILocation(line: 1588, column: 56, scope: !3373)
!3382 = !DILocation(line: 1588, column: 3, scope: !3373)
!3383 = distinct !{!3383, !3375, !3384}
!3384 = !DILocation(line: 1590, column: 7, scope: !3374)
!3385 = !DILocation(line: 1592, column: 3, scope: !3338)
!3386 = !DILocation(line: 0, scope: !3347)
!3387 = !DILocation(line: 0, scope: !3346)
!3388 = !DILocation(line: 0, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 1608, column: 11)
!3390 = !DILocation(line: 0, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 1636, column: 11)
!3392 = !DILocation(line: 0, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 1637, column: 2)
!3394 = !DILocation(line: 0, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 1630, column: 8)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 1628, column: 2)
!3397 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 1627, column: 11)
!3398 = !DILocation(line: 0, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 1609, column: 2)
!3400 = !DILocation(line: 1596, column: 8, scope: !3348)
!3401 = !DILocation(line: 0, scope: !3348)
!3402 = !DILocation(line: 1596, column: 31, scope: !3347)
!3403 = !DILocation(line: 1596, column: 25, scope: !3347)
!3404 = !DILocation(line: 1596, column: 3, scope: !3348)
!3405 = !DILocation(line: 1600, column: 7, scope: !3346)
!3406 = !DILocation(line: 1600, column: 31, scope: !3346)
!3407 = !DILocation(line: 1602, column: 23, scope: !3346)
!3408 = !DILocation(line: 1602, column: 19, scope: !3346)
!3409 = !DILocation(line: 1605, column: 7, scope: !3346)
!3410 = !DILocation(line: 1608, column: 11, scope: !3389)
!3411 = !DILocation(line: 1608, column: 36, scope: !3389)
!3412 = !DILocation(line: 1608, column: 11, scope: !3346)
!3413 = !DILocation(line: 1610, column: 13, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 1610, column: 8)
!3415 = !DILocation(line: 1610, column: 9, scope: !3414)
!3416 = !DILocation(line: 1610, column: 8, scope: !3399)
!3417 = !DILocation(line: 1613, column: 25, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1611, column: 6)
!3419 = !DILocation(line: 1613, column: 21, scope: !3418)
!3420 = !DILocation(line: 1613, column: 12, scope: !3418)
!3421 = !DILocation(line: 1612, column: 27, scope: !3418)
!3422 = !DILocation(line: 1616, column: 25, scope: !3418)
!3423 = !DILocation(line: 1616, column: 21, scope: !3418)
!3424 = !DILocation(line: 1616, column: 12, scope: !3418)
!3425 = !DILocation(line: 1615, column: 32, scope: !3418)
!3426 = !DILocation(line: 1619, column: 36, scope: !3399)
!3427 = !DILocation(line: 1619, column: 8, scope: !3399)
!3428 = !DILocation(line: 1618, column: 6, scope: !3418)
!3429 = !DILocation(line: 1619, column: 4, scope: !3399)
!3430 = !DILocation(line: 1619, column: 30, scope: !3399)
!3431 = !DILocation(line: 1620, column: 41, scope: !3399)
!3432 = !DILocation(line: 1620, column: 8, scope: !3399)
!3433 = !DILocation(line: 1620, column: 4, scope: !3399)
!3434 = !DILocation(line: 1620, column: 35, scope: !3399)
!3435 = !DILocation(line: 1621, column: 4, scope: !3399)
!3436 = !DILocation(line: 1625, column: 7, scope: !3346)
!3437 = !DILocation(line: 1626, column: 50, scope: !3346)
!3438 = !DILocation(line: 1626, column: 14, scope: !3346)
!3439 = !DILocation(line: 1627, column: 16, scope: !3397)
!3440 = !DILocation(line: 1627, column: 11, scope: !3346)
!3441 = !DILocation(line: 1629, column: 4, scope: !3396)
!3442 = !DILocation(line: 1630, column: 8, scope: !3395)
!3443 = !DILocation(line: 1630, column: 8, scope: !3396)
!3444 = !DILocation(line: 1633, column: 22, scope: !3395)
!3445 = !DILocation(line: 1633, column: 8, scope: !3395)
!3446 = !DILocation(line: 1631, column: 6, scope: !3395)
!3447 = !DILocation(line: 1636, column: 16, scope: !3391)
!3448 = !DILocation(line: 1636, column: 12, scope: !3391)
!3449 = !DILocation(line: 1636, column: 11, scope: !3346)
!3450 = !DILocation(line: 1639, column: 28, scope: !3393)
!3451 = !DILocation(line: 1639, column: 24, scope: !3393)
!3452 = !DILocation(line: 1639, column: 15, scope: !3393)
!3453 = !DILocation(line: 1638, column: 23, scope: !3393)
!3454 = !DILocation(line: 1641, column: 28, scope: !3393)
!3455 = !DILocation(line: 1641, column: 24, scope: !3393)
!3456 = !DILocation(line: 1641, column: 15, scope: !3393)
!3457 = !DILocation(line: 1640, column: 28, scope: !3393)
!3458 = !DILocation(line: 1643, column: 11, scope: !3346)
!3459 = !DILocation(line: 1642, column: 2, scope: !3393)
!3460 = !DILocation(line: 1643, column: 7, scope: !3346)
!3461 = !DILocation(line: 1643, column: 33, scope: !3346)
!3462 = !DILocation(line: 1644, column: 11, scope: !3346)
!3463 = !DILocation(line: 1644, column: 7, scope: !3346)
!3464 = !DILocation(line: 1644, column: 38, scope: !3346)
!3465 = !DILocation(line: 1645, column: 5, scope: !3347)
!3466 = !DILocation(line: 1648, column: 20, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1648, column: 3)
!3468 = !DILocation(line: 1596, column: 63, scope: !3347)
!3469 = !DILocation(line: 1596, column: 3, scope: !3347)
!3470 = distinct !{!3470, !3404, !3471}
!3471 = !DILocation(line: 1645, column: 5, scope: !3348)
!3472 = !DILocation(line: 1648, column: 8, scope: !3467)
!3473 = !DILocation(line: 0, scope: !3467)
!3474 = !DILocation(line: 1649, column: 20, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 1648, column: 3)
!3476 = !DILocation(line: 1649, column: 14, scope: !3475)
!3477 = !DILocation(line: 1648, column: 3, scope: !3467)
!3478 = !DILocation(line: 1650, column: 9, scope: !3475)
!3479 = !DILocation(line: 1650, column: 5, scope: !3475)
!3480 = !DILocation(line: 1650, column: 33, scope: !3475)
!3481 = !DILocation(line: 1649, column: 45, scope: !3475)
!3482 = !DILocation(line: 1648, column: 3, scope: !3475)
!3483 = distinct !{!3483, !3477, !3484}
!3484 = !DILocation(line: 1650, column: 35, scope: !3467)
!3485 = !DILocation(line: 1652, column: 1, scope: !3338)
!3486 = distinct !DISubprogram(name: "transform_allocation_sites", scope: !3, file: !3, line: 2013, type: !3209, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3487)
!3487 = !{!3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3510, !3511, !3512, !3513, !3514, !3515, !3518, !3522, !3523, !3527, !3528, !3529, !3530, !3534, !3535, !3536}
!3488 = !DILocalVariable(name: "slot", arg: 1, scope: !3486, file: !3, line: 2013, type: !1184)
!3489 = !DILocalVariable(name: "data", arg: 2, scope: !3486, file: !3, line: 2013, type: !681)
!3490 = !DILocalVariable(name: "i", scope: !3486, file: !3, line: 2015, type: !677)
!3491 = !DILocalVariable(name: "mi", scope: !3486, file: !3, line: 2016, type: !2090)
!3492 = !DILocalVariable(name: "type", scope: !3486, file: !3, line: 2017, type: !866)
!3493 = !DILocalVariable(name: "oldfn", scope: !3486, file: !3, line: 2017, type: !866)
!3494 = !DILocalVariable(name: "prev_dim_size", scope: !3486, file: !3, line: 2017, type: !866)
!3495 = !DILocalVariable(name: "call_stmt_0", scope: !3486, file: !3, line: 2018, type: !744)
!3496 = !DILocalVariable(name: "use_stmt", scope: !3486, file: !3, line: 2018, type: !744)
!3497 = !DILocalVariable(name: "c_node", scope: !3486, file: !3, line: 2019, type: !2598)
!3498 = !DILocalVariable(name: "e", scope: !3486, file: !3, line: 2020, type: !2603)
!3499 = !DILocalVariable(name: "gsi", scope: !3486, file: !3, line: 2021, type: !2947)
!3500 = !DILocalVariable(name: "mcd", scope: !3486, file: !3, line: 2022, type: !3351)
!3501 = !DILocalVariable(name: "element_size", scope: !3486, file: !3, line: 2023, type: !837)
!3502 = !DILocalVariable(name: "imm_iter", scope: !3486, file: !3, line: 2025, type: !3503)
!3503 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1068, line: 249, baseType: !3504)
!3504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1068, line: 238, size: 448, elements: !3505)
!3505 = !{!3506, !3507, !3508, !3509}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !3504, file: !1068, line: 241, baseType: !2098, size: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !3504, file: !1068, line: 243, baseType: !2098, size: 64, offset: 64)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !3504, file: !1068, line: 245, baseType: !2099, size: 256, offset: 128)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !3504, file: !1068, line: 248, baseType: !2098, size: 64, offset: 384)
!3510 = !DILocalVariable(name: "use_p", scope: !3486, file: !3, line: 2026, type: !2097)
!3511 = !DILocalVariable(name: "old_size_0", scope: !3486, file: !3, line: 2027, type: !866)
!3512 = !DILocalVariable(name: "tmp", scope: !3486, file: !3, line: 2027, type: !866)
!3513 = !DILocalVariable(name: "min_escape_l", scope: !3486, file: !3, line: 2028, type: !677)
!3514 = !DILocalVariable(name: "id", scope: !3486, file: !3, line: 2029, type: !677)
!3515 = !DILocalVariable(name: "i", scope: !3516, file: !3, line: 2046, type: !677)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 2045, column: 5)
!3517 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2044, column: 7)
!3518 = !DILocalVariable(name: "t", scope: !3519, file: !3, line: 2103, type: !866)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 2102, column: 5)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2101, column: 3)
!3521 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2101, column: 3)
!3522 = !DILocalVariable(name: "data", scope: !3519, file: !3, line: 2104, type: !2103)
!3523 = !DILocalVariable(name: "dim_size", scope: !3524, file: !3, line: 2146, type: !866)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !3, line: 2145, column: 5)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 2144, column: 3)
!3526 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2144, column: 3)
!3527 = !DILocalVariable(name: "dim_var", scope: !3524, file: !3, line: 2146, type: !866)
!3528 = !DILocalVariable(name: "stmt", scope: !3524, file: !3, line: 2147, type: !744)
!3529 = !DILocalVariable(name: "d_type_size", scope: !3524, file: !3, line: 2148, type: !866)
!3530 = !DILocalVariable(name: "gsi", scope: !3531, file: !3, line: 2208, type: !2947)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 2207, column: 5)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 2206, column: 3)
!3533 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2206, column: 3)
!3534 = !DILocalVariable(name: "use_stmt1", scope: !3531, file: !3, line: 2209, type: !744)
!3535 = !DILocalVariable(name: "call_stmt", scope: !3531, file: !3, line: 2211, type: !744)
!3536 = !DILocalVariable(name: "gsi", scope: !3537, file: !3, line: 2242, type: !2947)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 2241, column: 5)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 2240, column: 3)
!3539 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2240, column: 3)
!3540 = !DILocation(line: 0, scope: !3486)
!3541 = !DILocation(line: 2021, column: 3, scope: !3486)
!3542 = !DILocation(line: 2022, column: 3, scope: !3486)
!3543 = !DILocation(line: 2022, column: 27, scope: !3486)
!3544 = !DILocation(line: 2025, column: 3, scope: !3486)
!3545 = !DILocation(line: 2031, column: 31, scope: !3486)
!3546 = !DILocation(line: 2033, column: 22, scope: !3486)
!3547 = !DILocation(line: 2035, column: 12, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2035, column: 7)
!3549 = !DILocation(line: 2035, column: 8, scope: !3548)
!3550 = !DILocation(line: 2035, column: 7, scope: !3486)
!3551 = !DILocation(line: 2036, column: 35, scope: !3548)
!3552 = !DILocation(line: 2036, column: 5, scope: !3548)
!3553 = !DILocation(line: 2038, column: 11, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2038, column: 7)
!3555 = !DILocation(line: 2038, column: 37, scope: !3554)
!3556 = !DILocation(line: 2038, column: 7, scope: !3486)
!3557 = !DILocation(line: 2041, column: 34, scope: !3486)
!3558 = !DILocation(line: 2041, column: 25, scope: !3486)
!3559 = !DILocation(line: 2041, column: 7, scope: !3486)
!3560 = !DILocation(line: 2041, column: 15, scope: !3486)
!3561 = !DILocation(line: 2042, column: 8, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2042, column: 3)
!3563 = !DILocation(line: 0, scope: !3562)
!3564 = !DILocation(line: 2042, column: 23, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 2042, column: 3)
!3566 = !DILocation(line: 2042, column: 17, scope: !3565)
!3567 = !DILocation(line: 2042, column: 3, scope: !3562)
!3568 = !DILocation(line: 2043, column: 9, scope: !3565)
!3569 = !DILocation(line: 2043, column: 5, scope: !3565)
!3570 = !DILocation(line: 2043, column: 20, scope: !3565)
!3571 = !DILocation(line: 2042, column: 51, scope: !3565)
!3572 = !DILocation(line: 2042, column: 3, scope: !3565)
!3573 = distinct !{!3573, !3567, !3574}
!3574 = !DILocation(line: 2043, column: 22, scope: !3562)
!3575 = !DILocation(line: 2044, column: 7, scope: !3517)
!3576 = !DILocation(line: 2044, column: 7, scope: !3486)
!3577 = !DILocation(line: 2087, column: 7, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2087, column: 7)
!3579 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 2086, column: 5)
!3580 = !DILocation(line: 2048, column: 11, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 2048, column: 11)
!3582 = !DILocation(line: 2048, column: 11, scope: !3516)
!3583 = !DILocation(line: 2050, column: 54, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 2049, column: 2)
!3585 = !DILocation(line: 2050, column: 40, scope: !3584)
!3586 = !DILocation(line: 2050, column: 4, scope: !3584)
!3587 = !DILocation(line: 0, scope: !3516)
!3588 = !DILocation(line: 0, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !3, line: 2054, column: 12)
!3590 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 2052, column: 6)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 2051, column: 4)
!3592 = distinct !DILexicalBlock(scope: !3584, file: !3, line: 2051, column: 4)
!3593 = !DILocation(line: 2051, column: 9, scope: !3592)
!3594 = !DILocation(line: 0, scope: !3592)
!3595 = !DILocation(line: 2051, column: 18, scope: !3591)
!3596 = !DILocation(line: 2051, column: 4, scope: !3592)
!3597 = !DILocation(line: 2053, column: 17, scope: !3590)
!3598 = !DILocation(line: 2053, column: 8, scope: !3590)
!3599 = !DILocation(line: 2054, column: 16, scope: !3589)
!3600 = !DILocation(line: 2054, column: 12, scope: !3589)
!3601 = !DILocation(line: 2054, column: 12, scope: !3590)
!3602 = !DILocation(line: 2055, column: 12, scope: !3589)
!3603 = !DILocation(line: 2057, column: 5, scope: !3589)
!3604 = !DILocation(line: 2055, column: 3, scope: !3589)
!3605 = !DILocation(line: 2051, column: 35, scope: !3591)
!3606 = !DILocation(line: 2051, column: 4, scope: !3591)
!3607 = distinct !{!3607, !3596, !3608}
!3608 = !DILocation(line: 2058, column: 6, scope: !3592)
!3609 = !DILocation(line: 2061, column: 10, scope: !3516)
!3610 = !DILocation(line: 2060, column: 31, scope: !3516)
!3611 = !DILocation(line: 2060, column: 50, scope: !3516)
!3612 = !DILocation(line: 2060, column: 7, scope: !3516)
!3613 = !DILocation(line: 2062, column: 11, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 2062, column: 11)
!3615 = !DILocation(line: 2062, column: 11, scope: !3516)
!3616 = !DILocation(line: 2063, column: 2, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 2063, column: 2)
!3618 = !DILocation(line: 0, scope: !3617)
!3619 = !DILocation(line: 2063, column: 16, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 2063, column: 2)
!3621 = !DILocation(line: 2065, column: 15, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 2064, column: 4)
!3623 = !DILocation(line: 2065, column: 6, scope: !3622)
!3624 = !DILocation(line: 2066, column: 14, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 2066, column: 10)
!3626 = !DILocation(line: 2066, column: 10, scope: !3625)
!3627 = !DILocation(line: 2066, column: 10, scope: !3622)
!3628 = !DILocation(line: 2067, column: 17, scope: !3625)
!3629 = !DILocation(line: 2068, column: 34, scope: !3625)
!3630 = !DILocation(line: 2067, column: 8, scope: !3625)
!3631 = !DILocation(line: 2063, column: 33, scope: !3620)
!3632 = !DILocation(line: 2063, column: 2, scope: !3620)
!3633 = distinct !{!3633, !3616, !3634}
!3634 = !DILocation(line: 2069, column: 4, scope: !3617)
!3635 = !DILocation(line: 2070, column: 12, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 2070, column: 7)
!3637 = !DILocation(line: 0, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 2076, column: 6)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 2075, column: 8)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 2071, column: 2)
!3641 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 2070, column: 7)
!3642 = !DILocation(line: 0, scope: !3636)
!3643 = !DILocation(line: 2070, column: 27, scope: !3641)
!3644 = !DILocation(line: 2070, column: 21, scope: !3641)
!3645 = !DILocation(line: 2070, column: 7, scope: !3636)
!3646 = !DILocation(line: 2072, column: 8, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 2072, column: 8)
!3648 = !DILocation(line: 2072, column: 8, scope: !3640)
!3649 = !DILocation(line: 2074, column: 12, scope: !3647)
!3650 = !DILocation(line: 2074, column: 8, scope: !3647)
!3651 = !DILocation(line: 2073, column: 6, scope: !3647)
!3652 = !DILocation(line: 2075, column: 12, scope: !3639)
!3653 = !DILocation(line: 2075, column: 8, scope: !3639)
!3654 = !DILocation(line: 2075, column: 23, scope: !3639)
!3655 = !DILocation(line: 2075, column: 8, scope: !3640)
!3656 = !DILocation(line: 2077, column: 12, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 2077, column: 12)
!3658 = !DILocation(line: 2077, column: 12, scope: !3638)
!3659 = !DILocation(line: 2078, column: 3, scope: !3657)
!3660 = !DILocation(line: 2081, column: 28, scope: !3638)
!3661 = !DILocation(line: 2082, column: 6, scope: !3638)
!3662 = !DILocation(line: 2070, column: 55, scope: !3641)
!3663 = !DILocation(line: 2070, column: 7, scope: !3641)
!3664 = distinct !{!3664, !3645, !3665}
!3665 = !DILocation(line: 2083, column: 2, scope: !3636)
!3666 = !DILocation(line: 2087, column: 27, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 2087, column: 7)
!3668 = !DILocation(line: 2087, column: 21, scope: !3667)
!3669 = !DILocation(line: 2088, column: 6, scope: !3667)
!3670 = !DILocation(line: 2088, column: 2, scope: !3667)
!3671 = !DILocation(line: 2088, column: 17, scope: !3667)
!3672 = !DILocation(line: 2087, column: 55, scope: !3667)
!3673 = !DILocation(line: 2087, column: 7, scope: !3667)
!3674 = distinct !{!3674, !3577, !3675}
!3675 = !DILocation(line: 2088, column: 19, scope: !3578)
!3676 = !DILocation(line: 2091, column: 21, scope: !3486)
!3677 = !DILocation(line: 2091, column: 17, scope: !3486)
!3678 = !DILocation(line: 2094, column: 3, scope: !3486)
!3679 = !DILocation(line: 2096, column: 31, scope: !3486)
!3680 = !DILocation(line: 2096, column: 7, scope: !3486)
!3681 = !DILocation(line: 2096, column: 25, scope: !3486)
!3682 = !DILocation(line: 2097, column: 36, scope: !3486)
!3683 = !DILocation(line: 2097, column: 7, scope: !3486)
!3684 = !DILocation(line: 2097, column: 30, scope: !3486)
!3685 = !DILocation(line: 0, scope: !3519)
!3686 = !DILocation(line: 2101, column: 8, scope: !3521)
!3687 = !DILocation(line: 0, scope: !3521)
!3688 = !DILocation(line: 2101, column: 23, scope: !3520)
!3689 = !DILocation(line: 2101, column: 17, scope: !3520)
!3690 = !DILocation(line: 2101, column: 3, scope: !3521)
!3691 = !DILocation(line: 2104, column: 7, scope: !3519)
!3692 = !DILocation(line: 2108, column: 7, scope: !3519)
!3693 = !DILocation(line: 2112, column: 11, scope: !3519)
!3694 = !DILocation(line: 2110, column: 21, scope: !3519)
!3695 = !DILocation(line: 2110, column: 15, scope: !3519)
!3696 = !DILocation(line: 2111, column: 17, scope: !3519)
!3697 = !DILocation(line: 2115, column: 13, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3519, file: !3, line: 2115, column: 11)
!3699 = !DILocation(line: 2115, column: 11, scope: !3519)
!3700 = !DILocation(line: 2117, column: 46, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3698, file: !3, line: 2116, column: 2)
!3702 = !DILocation(line: 2117, column: 4, scope: !3701)
!3703 = !DILocation(line: 2118, column: 4, scope: !3701)
!3704 = !DILocation(line: 2120, column: 5, scope: !3520)
!3705 = !DILocation(line: 2122, column: 11, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2122, column: 7)
!3707 = !DILocation(line: 2101, column: 51, scope: !3520)
!3708 = !DILocation(line: 2101, column: 3, scope: !3520)
!3709 = distinct !{!3709, !3690, !3710}
!3710 = !DILocation(line: 2120, column: 5, scope: !3521)
!3711 = !DILocation(line: 2122, column: 37, scope: !3706)
!3712 = !DILocation(line: 2122, column: 7, scope: !3486)
!3713 = !DILocation(line: 2127, column: 9, scope: !3486)
!3714 = !DILocation(line: 2134, column: 11, scope: !3486)
!3715 = !DILocation(line: 2135, column: 31, scope: !3486)
!3716 = !DILocation(line: 2135, column: 25, scope: !3486)
!3717 = !DILocation(line: 2136, column: 14, scope: !3486)
!3718 = !DILocation(line: 2136, column: 3, scope: !3486)
!3719 = !DILocation(line: 2141, column: 22, scope: !3486)
!3720 = !DILocation(line: 2141, column: 46, scope: !3486)
!3721 = !DILocation(line: 2141, column: 18, scope: !3486)
!3722 = !DILocation(line: 2144, column: 8, scope: !3526)
!3723 = !DILocation(line: 0, scope: !3526)
!3724 = !DILocation(line: 2144, column: 49, scope: !3525)
!3725 = !DILocation(line: 2144, column: 3, scope: !3526)
!3726 = !DILocation(line: 2153, column: 22, scope: !3524)
!3727 = !DILocation(line: 2153, column: 2, scope: !3524)
!3728 = !DILocation(line: 0, scope: !3524)
!3729 = !DILocation(line: 2155, column: 14, scope: !3524)
!3730 = !DILocation(line: 0, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3732, file: !3, line: 2159, column: 7)
!3732 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 2159, column: 7)
!3733 = !DILocation(line: 2159, column: 12, scope: !3732)
!3734 = !DILocation(line: 0, scope: !3732)
!3735 = !DILocation(line: 2159, column: 23, scope: !3731)
!3736 = !DILocation(line: 2159, column: 7, scope: !3732)
!3737 = !DILocation(line: 2160, column: 6, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 2160, column: 6)
!3739 = !DILocation(line: 2160, column: 22, scope: !3738)
!3740 = !DILocation(line: 2160, column: 6, scope: !3731)
!3741 = !DILocation(line: 2159, column: 58, scope: !3731)
!3742 = !DILocation(line: 2159, column: 7, scope: !3731)
!3743 = distinct !{!3743, !3736, !3744}
!3744 = !DILocation(line: 2161, column: 4, scope: !3732)
!3745 = !DILocation(line: 2163, column: 34, scope: !3524)
!3746 = !DILocation(line: 2163, column: 57, scope: !3524)
!3747 = !DILocation(line: 2163, column: 30, scope: !3524)
!3748 = !DILocation(line: 2163, column: 9, scope: !3524)
!3749 = !DILocation(line: 2164, column: 12, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 2164, column: 11)
!3751 = !DILocation(line: 2164, column: 11, scope: !3524)
!3752 = !DILocation(line: 2165, column: 18, scope: !3750)
!3753 = !DILocation(line: 2165, column: 2, scope: !3750)
!3754 = !DILocation(line: 2166, column: 12, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 2166, column: 11)
!3756 = !DILocation(line: 2166, column: 30, scope: !3755)
!3757 = !DILocation(line: 2166, column: 42, scope: !3755)
!3758 = !DILocation(line: 2166, column: 35, scope: !3755)
!3759 = !DILocation(line: 2166, column: 11, scope: !3524)
!3760 = !DILocation(line: 2168, column: 19, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 2167, column: 2)
!3762 = !DILocation(line: 2168, column: 15, scope: !3761)
!3763 = !DILocation(line: 2169, column: 2, scope: !3761)
!3764 = !DILocation(line: 2173, column: 6, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 2171, column: 2)
!3766 = !DILocation(line: 2176, column: 15, scope: !3765)
!3767 = !DILocation(line: 0, scope: !3755)
!3768 = !DILocation(line: 2178, column: 18, scope: !3524)
!3769 = !DILocation(line: 2181, column: 14, scope: !3524)
!3770 = !DILocation(line: 2182, column: 7, scope: !3524)
!3771 = !DILocation(line: 2183, column: 7, scope: !3524)
!3772 = !DILocation(line: 2185, column: 27, scope: !3524)
!3773 = !DILocation(line: 2185, column: 23, scope: !3524)
!3774 = !DILocation(line: 2185, column: 45, scope: !3524)
!3775 = !DILocation(line: 2144, column: 3, scope: !3525)
!3776 = distinct !{!3776, !3725, !3777}
!3777 = !DILocation(line: 2186, column: 5, scope: !3526)
!3778 = !DILocation(line: 2187, column: 3, scope: !3486)
!3779 = !DILocation(line: 2190, column: 29, scope: !3486)
!3780 = !DILocation(line: 2190, column: 12, scope: !3486)
!3781 = !DILocation(line: 2191, column: 16, scope: !3486)
!3782 = !DILocation(line: 2192, column: 45, scope: !3486)
!3783 = !DILocation(line: 2192, column: 41, scope: !3486)
!3784 = !DILocation(line: 2192, column: 9, scope: !3486)
!3785 = !DILocation(line: 2194, column: 7, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2194, column: 7)
!3787 = !DILocation(line: 2194, column: 30, scope: !3786)
!3788 = !DILocation(line: 2194, column: 7, scope: !3486)
!3789 = !DILocation(line: 2196, column: 7, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 2196, column: 7)
!3791 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 2195, column: 5)
!3792 = !DILocation(line: 0, scope: !3790)
!3793 = !DILocation(line: 2196, column: 7, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 2196, column: 7)
!3795 = !DILocation(line: 2197, column: 2, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 2197, column: 2)
!3797 = !DILocation(line: 0, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 2198, column: 6)
!3799 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 2197, column: 2)
!3800 = !DILocation(line: 0, scope: !3796)
!3801 = !DILocation(line: 2197, column: 2, scope: !3799)
!3802 = !DILocation(line: 2199, column: 2, scope: !3798)
!3803 = distinct !{!3803, !3795, !3804}
!3804 = !DILocation(line: 2199, column: 2, scope: !3796)
!3805 = distinct !{!3805, !3789, !3806}
!3806 = !DILocation(line: 2199, column: 2, scope: !3790)
!3807 = !DILocation(line: 2206, column: 8, scope: !3533)
!3808 = !DILocation(line: 0, scope: !3531)
!3809 = !DILocation(line: 0, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 2222, column: 7)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 2220, column: 7)
!3812 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 2220, column: 7)
!3813 = !DILocation(line: 0, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 2230, column: 7)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 2228, column: 7)
!3816 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 2228, column: 7)
!3817 = !DILocation(line: 0, scope: !3533)
!3818 = !DILocation(line: 2206, column: 23, scope: !3532)
!3819 = !DILocation(line: 2206, column: 17, scope: !3532)
!3820 = !DILocation(line: 2206, column: 3, scope: !3533)
!3821 = !DILocation(line: 2208, column: 7, scope: !3531)
!3822 = !DILocation(line: 2211, column: 30, scope: !3531)
!3823 = !DILocation(line: 2211, column: 26, scope: !3531)
!3824 = !DILocation(line: 2212, column: 7, scope: !3531)
!3825 = !DILocation(line: 2213, column: 11, scope: !3531)
!3826 = !DILocation(line: 2214, column: 7, scope: !3531)
!3827 = !DILocation(line: 2215, column: 7, scope: !3531)
!3828 = !DILocation(line: 2216, column: 13, scope: !3531)
!3829 = !DILocation(line: 2218, column: 7, scope: !3531)
!3830 = !DILocation(line: 2220, column: 7, scope: !3812)
!3831 = !DILocation(line: 0, scope: !3812)
!3832 = !DILocation(line: 2220, column: 7, scope: !3811)
!3833 = !DILocation(line: 2224, column: 8, scope: !3810)
!3834 = !DILocation(line: 2225, column: 2, scope: !3810)
!3835 = distinct !{!3835, !3830, !3836}
!3836 = !DILocation(line: 2226, column: 7, scope: !3812)
!3837 = !DILocation(line: 2228, column: 7, scope: !3816)
!3838 = !DILocation(line: 0, scope: !3816)
!3839 = !DILocation(line: 2228, column: 7, scope: !3815)
!3840 = !DILocation(line: 2231, column: 8, scope: !3814)
!3841 = !DILocation(line: 2232, column: 2, scope: !3814)
!3842 = distinct !{!3842, !3837, !3843}
!3843 = !DILocation(line: 2233, column: 7, scope: !3816)
!3844 = !DILocation(line: 2234, column: 5, scope: !3532)
!3845 = !DILocation(line: 2206, column: 51, scope: !3532)
!3846 = !DILocation(line: 2206, column: 3, scope: !3532)
!3847 = distinct !{!3847, !3820, !3848}
!3848 = !DILocation(line: 2234, column: 5, scope: !3533)
!3849 = !DILocation(line: 2235, column: 3, scope: !3486)
!3850 = !DILocation(line: 0, scope: !3537)
!3851 = !DILocation(line: 0, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 2245, column: 11)
!3853 = !DILocation(line: 2240, column: 8, scope: !3539)
!3854 = !DILocation(line: 0, scope: !3539)
!3855 = !DILocation(line: 2240, column: 23, scope: !3538)
!3856 = !DILocation(line: 2240, column: 17, scope: !3538)
!3857 = !DILocation(line: 2240, column: 3, scope: !3539)
!3858 = !DILocation(line: 2242, column: 7, scope: !3537)
!3859 = !DILocation(line: 2245, column: 16, scope: !3852)
!3860 = !DILocation(line: 2245, column: 30, scope: !3852)
!3861 = !DILocation(line: 2245, column: 12, scope: !3852)
!3862 = !DILocation(line: 2245, column: 11, scope: !3537)
!3863 = !DILocation(line: 2248, column: 47, scope: !3537)
!3864 = !DILocation(line: 2248, column: 16, scope: !3537)
!3865 = !DILocation(line: 2249, column: 7, scope: !3537)
!3866 = !DILocation(line: 2250, column: 36, scope: !3537)
!3867 = !DILocation(line: 2250, column: 50, scope: !3537)
!3868 = !DILocation(line: 2250, column: 11, scope: !3537)
!3869 = !DILocation(line: 2251, column: 7, scope: !3537)
!3870 = !DILocation(line: 2252, column: 7, scope: !3537)
!3871 = !DILocation(line: 2253, column: 35, scope: !3537)
!3872 = !DILocation(line: 2253, column: 49, scope: !3537)
!3873 = !DILocation(line: 2253, column: 29, scope: !3537)
!3874 = !DILocation(line: 2254, column: 17, scope: !3537)
!3875 = !DILocation(line: 2254, column: 7, scope: !3537)
!3876 = !DILocation(line: 2255, column: 13, scope: !3537)
!3877 = !DILocation(line: 2255, column: 31, scope: !3537)
!3878 = !DILocation(line: 2255, column: 45, scope: !3537)
!3879 = !DILocation(line: 2256, column: 7, scope: !3537)
!3880 = !DILocation(line: 2257, column: 5, scope: !3538)
!3881 = !DILocation(line: 2240, column: 51, scope: !3538)
!3882 = !DILocation(line: 2240, column: 3, scope: !3538)
!3883 = distinct !{!3883, !3857, !3884}
!3884 = !DILocation(line: 2257, column: 5, scope: !3539)
!3885 = !DILocation(line: 2259, column: 25, scope: !3486)
!3886 = !DILocation(line: 2260, column: 3, scope: !3486)
!3887 = !DILocation(line: 2261, column: 3, scope: !3486)
!3888 = !DILocation(line: 2263, column: 1, scope: !3486)
!3889 = distinct !DISubprogram(name: "record_all_accesses_in_func", scope: !3, file: !3, line: 1714, type: !2659, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3890)
!3890 = !{!3891, !3892, !3893, !3897, !3898, !3899, !3900}
!3891 = !DILocalVariable(name: "i", scope: !3889, file: !3, line: 1716, type: !7)
!3892 = !DILocalVariable(name: "visited_stmts_1", scope: !3889, file: !3, line: 1717, type: !3117)
!3893 = !DILocalVariable(name: "tmpmi", scope: !3894, file: !3, line: 1723, type: !2040)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 1722, column: 5)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !3, line: 1721, column: 3)
!3896 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 1721, column: 3)
!3897 = !DILocalVariable(name: "mi", scope: !3894, file: !3, line: 1723, type: !2090)
!3898 = !DILocalVariable(name: "ssa_var", scope: !3894, file: !3, line: 1724, type: !866)
!3899 = !DILocalVariable(name: "rhs", scope: !3894, file: !3, line: 1725, type: !866)
!3900 = !DILocalVariable(name: "lhs", scope: !3894, file: !3, line: 1725, type: !866)
!3901 = !DILocation(line: 1719, column: 36, scope: !3889)
!3902 = !DILocation(line: 1719, column: 21, scope: !3889)
!3903 = !DILocation(line: 0, scope: !3889)
!3904 = !DILocation(line: 0, scope: !3894)
!3905 = !DILocation(line: 1721, column: 8, scope: !3896)
!3906 = !DILocation(line: 0, scope: !3896)
!3907 = !DILocation(line: 1721, column: 19, scope: !3895)
!3908 = !DILocation(line: 1721, column: 17, scope: !3895)
!3909 = !DILocation(line: 1721, column: 3, scope: !3896)
!3910 = !DILocation(line: 1723, column: 7, scope: !3894)
!3911 = !DILocation(line: 1724, column: 22, scope: !3894)
!3912 = !DILocation(line: 1727, column: 12, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 1727, column: 11)
!3914 = !DILocation(line: 1728, column: 4, scope: !3913)
!3915 = !DILocation(line: 1728, column: 26, scope: !3913)
!3916 = !DILocation(line: 1728, column: 8, scope: !3913)
!3917 = !DILocation(line: 1729, column: 4, scope: !3913)
!3918 = !DILocation(line: 1729, column: 32, scope: !3913)
!3919 = !DILocation(line: 1729, column: 8, scope: !3913)
!3920 = !DILocation(line: 1727, column: 11, scope: !3894)
!3921 = !DILocation(line: 1731, column: 33, scope: !3894)
!3922 = !DILocation(line: 1731, column: 13, scope: !3894)
!3923 = !DILocation(line: 1732, column: 32, scope: !3894)
!3924 = !DILocation(line: 1732, column: 13, scope: !3894)
!3925 = !DILocation(line: 1733, column: 11, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 1733, column: 11)
!3927 = !DILocation(line: 1733, column: 27, scope: !3926)
!3928 = !DILocation(line: 1733, column: 39, scope: !3926)
!3929 = !DILocation(line: 1733, column: 42, scope: !3926)
!3930 = !DILocation(line: 1733, column: 58, scope: !3926)
!3931 = !DILocation(line: 1733, column: 11, scope: !3894)
!3932 = !DILocation(line: 1739, column: 18, scope: !3894)
!3933 = !DILocation(line: 1740, column: 51, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 1740, column: 11)
!3935 = !DILocation(line: 1740, column: 40, scope: !3934)
!3936 = !DILocation(line: 1740, column: 15, scope: !3934)
!3937 = !DILocation(line: 1740, column: 11, scope: !3894)
!3938 = !DILocation(line: 1740, column: 17, scope: !3934)
!3939 = !DILocation(line: 1744, column: 4, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 1741, column: 2)
!3941 = !DILocation(line: 1745, column: 4, scope: !3940)
!3942 = !DILocation(line: 1748, column: 2, scope: !3940)
!3943 = !DILocation(line: 1749, column: 5, scope: !3895)
!3944 = !DILocation(line: 1721, column: 35, scope: !3895)
!3945 = !DILocation(line: 1721, column: 3, scope: !3895)
!3946 = distinct !{!3946, !3909, !3947}
!3947 = !DILocation(line: 1749, column: 5, scope: !3896)
!3948 = !DILocation(line: 1750, column: 3, scope: !3889)
!3949 = !DILocation(line: 1751, column: 1, scope: !3889)
!3950 = distinct !DISubprogram(name: "transform_access_sites", scope: !3, file: !3, line: 1810, type: !3209, scopeLine: 1811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3951)
!3951 = !{!3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3980, !3981, !3982, !3983, !3986, !3987, !3988, !3994, !3995, !3996, !3999, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4014}
!3952 = !DILocalVariable(name: "slot", arg: 1, scope: !3950, file: !3, line: 1810, type: !1184)
!3953 = !DILocalVariable(name: "data", arg: 2, scope: !3950, file: !3, line: 1810, type: !681)
!3954 = !DILocalVariable(name: "gsi", scope: !3950, file: !3, line: 1812, type: !2947)
!3955 = !DILocalVariable(name: "mi", scope: !3950, file: !3, line: 1813, type: !2090)
!3956 = !DILocalVariable(name: "min_escape_l", scope: !3950, file: !3, line: 1814, type: !677)
!3957 = !DILocalVariable(name: "acc_info", scope: !3950, file: !3, line: 1815, type: !2078)
!3958 = !DILocalVariable(name: "code", scope: !3950, file: !3, line: 1816, type: !317)
!3959 = !DILocalVariable(name: "i", scope: !3950, file: !3, line: 1817, type: !677)
!3960 = !DILocalVariable(name: "iter", scope: !3961, file: !3, line: 1835, type: !3968)
!3961 = distinct !DILexicalBlock(scope: !3962, file: !3, line: 1834, column: 6)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 1833, column: 8)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 1832, column: 2)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 1831, column: 11)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 1823, column: 5)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1821, column: 3)
!3967 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 1821, column: 3)
!3968 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !668, line: 140, baseType: !3969)
!3969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !668, line: 131, size: 320, elements: !3970)
!3970 = !{!3971, !3972, !3973, !3975, !3977, !3978, !3979}
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3969, file: !668, line: 133, baseType: !676, size: 8)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !3969, file: !668, line: 134, baseType: !667, size: 32, offset: 32)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !3969, file: !668, line: 135, baseType: !3974, size: 64, offset: 64)
!3974 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !668, line: 42, baseType: !1272)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !3969, file: !668, line: 136, baseType: !3976, size: 64, offset: 128)
!3976 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !668, line: 50, baseType: !1279)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !3969, file: !668, line: 137, baseType: !677, size: 32, offset: 192)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !3969, file: !668, line: 138, baseType: !677, size: 32, offset: 224)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !3969, file: !668, line: 139, baseType: !744, size: 64, offset: 256)
!3980 = !DILocalVariable(name: "def", scope: !3961, file: !3, line: 1836, type: !866)
!3981 = !DILocalVariable(name: "stmt", scope: !3961, file: !3, line: 1837, type: !744)
!3982 = !DILocalVariable(name: "lhs", scope: !3961, file: !3, line: 1838, type: !866)
!3983 = !DILocalVariable(name: "imm_iter", scope: !3984, file: !3, line: 1848, type: !3503)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 1847, column: 3)
!3985 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 1845, column: 12)
!3986 = !DILocalVariable(name: "use_p", scope: !3984, file: !3, line: 1849, type: !2097)
!3987 = !DILocalVariable(name: "use_stmt", scope: !3984, file: !3, line: 1850, type: !744)
!3988 = !DILocalVariable(name: "rhs", scope: !3989, file: !3, line: 1855, type: !866)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 1854, column: 5)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 1853, column: 7)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1853, column: 7)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !3, line: 1852, column: 5)
!3993 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 1852, column: 5)
!3994 = !DILocalVariable(name: "tmp", scope: !3989, file: !3, line: 1855, type: !866)
!3995 = !DILocalVariable(name: "new_stmt", scope: !3989, file: !3, line: 1856, type: !744)
!3996 = !DILocalVariable(name: "t", scope: !3997, file: !3, line: 1886, type: !866)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 1883, column: 2)
!3998 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 1881, column: 11)
!3999 = !DILocalVariable(name: "imm_iter", scope: !4000, file: !3, line: 1895, type: !3503)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 1894, column: 2)
!4001 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 1892, column: 16)
!4002 = !DILocalVariable(name: "use_p", scope: !4000, file: !3, line: 1896, type: !2097)
!4003 = !DILocalVariable(name: "offset", scope: !4000, file: !3, line: 1898, type: !866)
!4004 = !DILocalVariable(name: "k", scope: !4000, file: !3, line: 1899, type: !677)
!4005 = !DILocalVariable(name: "num_elements", scope: !4000, file: !3, line: 1900, type: !866)
!4006 = !DILocalVariable(name: "total_elements", scope: !4000, file: !3, line: 1900, type: !866)
!4007 = !DILocalVariable(name: "tmp1", scope: !4000, file: !3, line: 1901, type: !866)
!4008 = !DILocalVariable(name: "d_size", scope: !4000, file: !3, line: 1902, type: !866)
!4009 = !DILocalVariable(name: "new_offset", scope: !4010, file: !3, line: 1913, type: !866)
!4010 = distinct !DILexicalBlock(scope: !4011, file: !3, line: 1912, column: 3)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 1909, column: 12)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 1908, column: 6)
!4013 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 1907, column: 8)
!4014 = !DILocalVariable(name: "use_stmt", scope: !4015, file: !3, line: 1947, type: !744)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 1946, column: 3)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 1945, column: 12)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !3, line: 1944, column: 6)
!4018 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 1943, column: 8)
!4019 = !DILocation(line: 0, scope: !3950)
!4020 = !DILocation(line: 1812, column: 3, scope: !3950)
!4021 = !DILocation(line: 1813, column: 51, scope: !3950)
!4022 = !DILocation(line: 1814, column: 26, scope: !3950)
!4023 = !DILocation(line: 1815, column: 3, scope: !3950)
!4024 = !DILocation(line: 1819, column: 20, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 1819, column: 7)
!4026 = !DILocation(line: 1819, column: 24, scope: !4025)
!4027 = !DILocation(line: 1819, column: 32, scope: !4025)
!4028 = !DILocation(line: 1819, column: 28, scope: !4025)
!4029 = !DILocation(line: 1819, column: 7, scope: !3950)
!4030 = !DILocation(line: 0, scope: !3961)
!4031 = !DILocation(line: 0, scope: !3985)
!4032 = !DILocation(line: 0, scope: !3984)
!4033 = !DILocation(line: 0, scope: !3989)
!4034 = !DILocation(line: 0, scope: !3963)
!4035 = !DILocation(line: 0, scope: !4000)
!4036 = !DILocation(line: 0, scope: !4013)
!4037 = !DILocation(line: 0, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 1932, column: 6)
!4039 = !DILocation(line: 0, scope: !4011)
!4040 = !DILocation(line: 0, scope: !4010)
!4041 = !DILocation(line: 0, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1921, column: 7)
!4043 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 1920, column: 9)
!4044 = !DILocation(line: 1821, column: 3, scope: !3967)
!4045 = !DILocation(line: 1821, column: 15, scope: !3966)
!4046 = !DILocation(line: 0, scope: !3967)
!4047 = !DILocation(line: 1826, column: 11, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 1826, column: 11)
!4049 = !DILocation(line: 1826, column: 21, scope: !4048)
!4050 = !DILocation(line: 1826, column: 27, scope: !4048)
!4051 = !DILocation(line: 1826, column: 11, scope: !3965)
!4052 = !DILocation(line: 1828, column: 10, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 1827, column: 2)
!4054 = !DILocation(line: 1828, column: 4, scope: !4053)
!4055 = !DILocation(line: 1829, column: 4, scope: !4053)
!4056 = !DILocation(line: 1831, column: 21, scope: !3964)
!4057 = !DILocation(line: 1831, column: 11, scope: !3964)
!4058 = !DILocation(line: 1831, column: 11, scope: !3965)
!4059 = !DILocation(line: 1833, column: 24, scope: !3962)
!4060 = !DILocation(line: 1833, column: 29, scope: !3962)
!4061 = !DILocation(line: 1833, column: 53, scope: !3962)
!4062 = !DILocation(line: 1833, column: 32, scope: !3962)
!4063 = !DILocation(line: 1833, column: 8, scope: !3963)
!4064 = !DILocation(line: 1835, column: 8, scope: !3961)
!4065 = !DILocation(line: 1837, column: 22, scope: !3961)
!4066 = !DILocation(line: 1837, column: 32, scope: !3961)
!4067 = !DILocation(line: 1840, column: 8, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 1840, column: 8)
!4069 = !DILocation(line: 0, scope: !4068)
!4070 = !DILocation(line: 1840, column: 8, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 1840, column: 8)
!4072 = !DILocation(line: 1841, column: 26, scope: !4071)
!4073 = !DILocation(line: 1841, column: 3, scope: !4071)
!4074 = distinct !{!4074, !4067, !4075}
!4075 = !DILocation(line: 1841, column: 44, scope: !4068)
!4076 = !DILocation(line: 1842, column: 14, scope: !3961)
!4077 = !DILocation(line: 1843, column: 8, scope: !3961)
!4078 = !DILocation(line: 1844, column: 33, scope: !3961)
!4079 = !DILocation(line: 1844, column: 43, scope: !3961)
!4080 = !DILocation(line: 1844, column: 14, scope: !3961)
!4081 = !DILocation(line: 1845, column: 12, scope: !3985)
!4082 = !DILocation(line: 1845, column: 28, scope: !3985)
!4083 = !DILocation(line: 1846, column: 5, scope: !3985)
!4084 = !DILocation(line: 1846, column: 8, scope: !3985)
!4085 = !DILocation(line: 1846, column: 18, scope: !3985)
!4086 = !DILocation(line: 1846, column: 24, scope: !3985)
!4087 = !DILocation(line: 1845, column: 12, scope: !3961)
!4088 = !DILocation(line: 1848, column: 5, scope: !3984)
!4089 = !DILocation(line: 1852, column: 5, scope: !3993)
!4090 = !DILocation(line: 1852, column: 5, scope: !3992)
!4091 = !DILocation(line: 1853, column: 7, scope: !3991)
!4092 = !DILocation(line: 0, scope: !3991)
!4093 = !DILocation(line: 1853, column: 7, scope: !3990)
!4094 = !DILocation(line: 1858, column: 7, scope: !3989)
!4095 = !DILocation(line: 1861, column: 29, scope: !3989)
!4096 = !DILocation(line: 1861, column: 13, scope: !3989)
!4097 = !DILocation(line: 1862, column: 7, scope: !3989)
!4098 = !DILocation(line: 1863, column: 33, scope: !3989)
!4099 = !DILocation(line: 1863, column: 43, scope: !3989)
!4100 = !DILocation(line: 1863, column: 13, scope: !3989)
!4101 = !DILocation(line: 1864, column: 13, scope: !3989)
!4102 = !DILocation(line: 1866, column: 18, scope: !3989)
!4103 = !DILocation(line: 1867, column: 13, scope: !3989)
!4104 = !DILocation(line: 1868, column: 7, scope: !3989)
!4105 = !DILocation(line: 1869, column: 13, scope: !3989)
!4106 = !DILocation(line: 1869, column: 27, scope: !3989)
!4107 = !DILocation(line: 1869, column: 37, scope: !3989)
!4108 = !DILocation(line: 1870, column: 7, scope: !3989)
!4109 = !DILocation(line: 1871, column: 7, scope: !3989)
!4110 = distinct !{!4110, !4091, !4111}
!4111 = !DILocation(line: 1872, column: 5, scope: !3991)
!4112 = distinct !{!4112, !4089, !4113}
!4113 = !DILocation(line: 1872, column: 5, scope: !3993)
!4114 = !DILocation(line: 1873, column: 3, scope: !3985)
!4115 = !DILocation(line: 1873, column: 3, scope: !3984)
!4116 = !DILocation(line: 1874, column: 12, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 1874, column: 12)
!4118 = !DILocation(line: 1874, column: 22, scope: !4117)
!4119 = !DILocation(line: 1874, column: 28, scope: !4117)
!4120 = !DILocation(line: 1874, column: 12, scope: !3961)
!4121 = !DILocation(line: 1875, column: 3, scope: !4117)
!4122 = !DILocation(line: 1876, column: 6, scope: !3962)
!4123 = !DILocation(line: 1876, column: 6, scope: !3961)
!4124 = !DILocation(line: 1877, column: 10, scope: !3963)
!4125 = !DILocation(line: 1877, column: 4, scope: !3963)
!4126 = !DILocation(line: 1878, column: 4, scope: !3963)
!4127 = !DILocation(line: 1880, column: 48, scope: !3965)
!4128 = !DILocation(line: 1880, column: 14, scope: !3965)
!4129 = !DILocation(line: 1882, column: 4, scope: !3998)
!4130 = !DILocation(line: 1893, column: 12, scope: !4001)
!4131 = !DILocation(line: 0, scope: !4001)
!4132 = !DILocation(line: 1893, column: 22, scope: !4001)
!4133 = !DILocation(line: 1882, column: 7, scope: !3998)
!4134 = !DILocation(line: 1882, column: 17, scope: !3998)
!4135 = !DILocation(line: 1882, column: 23, scope: !3998)
!4136 = !DILocation(line: 1881, column: 11, scope: !3965)
!4137 = !DILocation(line: 1887, column: 6, scope: !3997)
!4138 = !DILocation(line: 0, scope: !3997)
!4139 = !DILocation(line: 1889, column: 32, scope: !3997)
!4140 = !DILocation(line: 1889, column: 42, scope: !3997)
!4141 = !DILocation(line: 1889, column: 4, scope: !3997)
!4142 = !DILocation(line: 1890, column: 28, scope: !3997)
!4143 = !DILocation(line: 1890, column: 38, scope: !3997)
!4144 = !DILocation(line: 1890, column: 4, scope: !3997)
!4145 = !DILocation(line: 1891, column: 2, scope: !3997)
!4146 = !DILocation(line: 1893, column: 9, scope: !4001)
!4147 = !DILocation(line: 1893, column: 28, scope: !4001)
!4148 = !DILocation(line: 1892, column: 16, scope: !3998)
!4149 = !DILocation(line: 1895, column: 4, scope: !4000)
!4150 = !DILocation(line: 1906, column: 23, scope: !4000)
!4151 = !DILocation(line: 1907, column: 12, scope: !4013)
!4152 = !DILocation(line: 1907, column: 8, scope: !4013)
!4153 = !DILocation(line: 1907, column: 23, scope: !4013)
!4154 = !DILocation(line: 1907, column: 8, scope: !4000)
!4155 = !DILocation(line: 1909, column: 13, scope: !4011)
!4156 = !DILocation(line: 1909, column: 31, scope: !4011)
!4157 = !DILocation(line: 1909, column: 38, scope: !4011)
!4158 = !DILocation(line: 1909, column: 54, scope: !4011)
!4159 = !DILocation(line: 1909, column: 12, scope: !4012)
!4160 = !DILocation(line: 1916, column: 27, scope: !4010)
!4161 = !DILocation(line: 1916, column: 23, scope: !4010)
!4162 = !DILocation(line: 1917, column: 35, scope: !4010)
!4163 = !DILocation(line: 1917, column: 9, scope: !4010)
!4164 = !DILocation(line: 1916, column: 7, scope: !4010)
!4165 = !DILocation(line: 1920, column: 20, scope: !4043)
!4166 = !DILocation(line: 1920, column: 9, scope: !4010)
!4167 = !DILocation(line: 1922, column: 15, scope: !4042)
!4168 = !DILocation(line: 1922, column: 29, scope: !4042)
!4169 = !DILocation(line: 1922, column: 39, scope: !4042)
!4170 = !DILocation(line: 1923, column: 16, scope: !4042)
!4171 = !DILocation(line: 1926, column: 7, scope: !4042)
!4172 = !DILocation(line: 1933, column: 21, scope: !4038)
!4173 = !DILocation(line: 1933, column: 51, scope: !4038)
!4174 = !DILocation(line: 1933, column: 17, scope: !4038)
!4175 = !DILocation(line: 1935, column: 3, scope: !4038)
!4176 = !DILocation(line: 1937, column: 8, scope: !4038)
!4177 = !DILocation(line: 1938, column: 14, scope: !4038)
!4178 = !DILocation(line: 1938, column: 28, scope: !4038)
!4179 = !DILocation(line: 1938, column: 38, scope: !4038)
!4180 = !DILocation(line: 1939, column: 15, scope: !4038)
!4181 = !DILocation(line: 1943, column: 13, scope: !4018)
!4182 = !DILocation(line: 1943, column: 8, scope: !4000)
!4183 = !DILocation(line: 1945, column: 12, scope: !4016)
!4184 = !DILocation(line: 1945, column: 31, scope: !4016)
!4185 = !DILocation(line: 1945, column: 12, scope: !4017)
!4186 = !DILocation(line: 1949, column: 5, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4015, file: !3, line: 1949, column: 5)
!4188 = !DILocation(line: 0, scope: !4015)
!4189 = !DILocation(line: 0, scope: !4187)
!4190 = !DILocation(line: 1949, column: 5, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4187, file: !3, line: 1949, column: 5)
!4192 = !DILocation(line: 1950, column: 7, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 1950, column: 7)
!4194 = !DILocation(line: 0, scope: !4193)
!4195 = !DILocation(line: 1950, column: 7, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 1950, column: 7)
!4197 = !DILocation(line: 1951, column: 25, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 1951, column: 13)
!4199 = !DILocation(line: 1951, column: 35, scope: !4198)
!4200 = !DILocation(line: 1951, column: 22, scope: !4198)
!4201 = !DILocation(line: 1951, column: 13, scope: !4196)
!4202 = !DILocation(line: 1952, column: 11, scope: !4198)
!4203 = distinct !{!4203, !4192, !4204}
!4204 = !DILocation(line: 1952, column: 11, scope: !4193)
!4205 = distinct !{!4205, !4186, !4206}
!4206 = !DILocation(line: 1952, column: 11, scope: !4187)
!4207 = !DILocation(line: 1956, column: 5, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 1955, column: 3)
!4209 = !DILocation(line: 1957, column: 29, scope: !4208)
!4210 = !DILocation(line: 1957, column: 39, scope: !4208)
!4211 = !DILocation(line: 1957, column: 5, scope: !4208)
!4212 = !DILocation(line: 1958, column: 18, scope: !4208)
!4213 = !DILocation(line: 1958, column: 28, scope: !4208)
!4214 = !DILocation(line: 1958, column: 5, scope: !4208)
!4215 = !DILocation(line: 1961, column: 2, scope: !4001)
!4216 = !DILocation(line: 1961, column: 2, scope: !4000)
!4217 = !DILocation(line: 1968, column: 13, scope: !3965)
!4218 = !DILocation(line: 1968, column: 7, scope: !3965)
!4219 = !DILocation(line: 1969, column: 5, scope: !3965)
!4220 = !DILocation(line: 1822, column: 9, scope: !3966)
!4221 = !DILocation(line: 1821, column: 3, scope: !3966)
!4222 = distinct !{!4222, !4044, !4223}
!4223 = !DILocation(line: 1969, column: 5, scope: !3967)
!4224 = !DILocation(line: 1970, column: 3, scope: !3950)
!4225 = !DILocation(line: 1972, column: 3, scope: !3950)
!4226 = !DILocation(line: 1976, column: 3, scope: !3950)
!4227 = !DILocation(line: 1977, column: 1, scope: !3950)
!4228 = distinct !DISubprogram(name: "dump_matrix_reorg_analysis", scope: !3, file: !3, line: 2268, type: !3209, scopeLine: 2269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4229)
!4229 = !{!4230, !4231, !4232}
!4230 = !DILocalVariable(name: "slot", arg: 1, scope: !4228, file: !3, line: 2268, type: !1184)
!4231 = !DILocalVariable(name: "data", arg: 2, scope: !4228, file: !3, line: 2268, type: !681)
!4232 = !DILocalVariable(name: "mi", scope: !4228, file: !3, line: 2270, type: !2090)
!4233 = !DILocation(line: 0, scope: !4228)
!4234 = !DILocation(line: 2270, column: 51, scope: !4228)
!4235 = !DILocation(line: 2272, column: 8, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 2272, column: 7)
!4237 = !DILocation(line: 2272, column: 7, scope: !4228)
!4238 = !DILocation(line: 2275, column: 19, scope: !4228)
!4239 = !DILocation(line: 2275, column: 5, scope: !4228)
!4240 = !DILocation(line: 2275, column: 30, scope: !4228)
!4241 = !DILocation(line: 2275, column: 61, scope: !4228)
!4242 = !DILocation(line: 2274, column: 3, scope: !4228)
!4243 = !DILocation(line: 2276, column: 12, scope: !4228)
!4244 = !DILocation(line: 2276, column: 49, scope: !4228)
!4245 = !DILocation(line: 2276, column: 3, scope: !4228)
!4246 = !DILocation(line: 2277, column: 12, scope: !4228)
!4247 = !DILocation(line: 2277, column: 3, scope: !4228)
!4248 = !DILocation(line: 2278, column: 11, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 2278, column: 7)
!4250 = !DILocation(line: 2278, column: 37, scope: !4249)
!4251 = !DILocation(line: 2278, column: 7, scope: !4228)
!4252 = !DILocation(line: 2279, column: 14, scope: !4249)
!4253 = !DILocation(line: 2279, column: 5, scope: !4249)
!4254 = !DILocation(line: 2282, column: 1, scope: !4228)
!4255 = distinct !DISubprogram(name: "gsi_start_bb", scope: !597, file: !597, line: 4418, type: !4256, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4258)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{!2947, !1128}
!4258 = !{!4259, !4260, !4261}
!4259 = !DILocalVariable(name: "bb", arg: 1, scope: !4255, file: !597, line: 4418, type: !1128)
!4260 = !DILocalVariable(name: "i", scope: !4255, file: !597, line: 4420, type: !2947)
!4261 = !DILocalVariable(name: "seq", scope: !4255, file: !597, line: 4421, type: !734)
!4262 = !DILocation(line: 0, scope: !4255)
!4263 = !DILocation(line: 4420, column: 24, scope: !4255)
!4264 = !DILocation(line: 4423, column: 9, scope: !4255)
!4265 = !DILocation(line: 4424, column: 11, scope: !4255)
!4266 = !DILocation(line: 4424, column: 5, scope: !4255)
!4267 = !DILocation(line: 4424, column: 9, scope: !4255)
!4268 = !DILocation(line: 4425, column: 5, scope: !4255)
!4269 = !DILocation(line: 4425, column: 9, scope: !4255)
!4270 = !DILocation(line: 4426, column: 5, scope: !4255)
!4271 = !DILocation(line: 4426, column: 8, scope: !4255)
!4272 = !DILocation(line: 4429, column: 1, scope: !4255)
!4273 = distinct !DISubprogram(name: "gsi_end_p", scope: !597, file: !597, line: 4467, type: !4274, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4276)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!676, !2947}
!4276 = !{!4277}
!4277 = !DILocalVariable(name: "i", arg: 1, scope: !4273, file: !597, line: 4467, type: !2947)
!4278 = !DILocation(line: 4467, column: 33, scope: !4273)
!4279 = !DILocation(line: 4469, column: 12, scope: !4273)
!4280 = !DILocation(line: 4469, column: 16, scope: !4273)
!4281 = !DILocation(line: 4469, column: 10, scope: !4273)
!4282 = !DILocation(line: 4469, column: 3, scope: !4273)
!4283 = distinct !DISubprogram(name: "may_flatten_matrices_1", scope: !3, file: !3, line: 414, type: !4284, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4286)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!676, !744}
!4286 = !{!4287, !4288, !4289}
!4287 = !DILocalVariable(name: "stmt", arg: 1, scope: !4283, file: !3, line: 414, type: !744)
!4288 = !DILocalVariable(name: "t", scope: !4283, file: !3, line: 416, type: !866)
!4289 = !DILocalVariable(name: "pointee", scope: !4290, file: !3, line: 429, type: !866)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !3, line: 428, column: 6)
!4291 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 427, column: 8)
!4292 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 426, column: 2)
!4293 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 419, column: 5)
!4294 = !DILocation(line: 0, scope: !4283)
!4295 = !DILocation(line: 418, column: 11, scope: !4283)
!4296 = !DILocation(line: 418, column: 3, scope: !4283)
!4297 = !DILocation(line: 421, column: 12, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 421, column: 11)
!4299 = !DILocation(line: 421, column: 11, scope: !4293)
!4300 = !DILocation(line: 424, column: 11, scope: !4293)
!4301 = !DILocation(line: 425, column: 7, scope: !4293)
!4302 = !DILocation(line: 0, scope: !4293)
!4303 = !DILocation(line: 425, column: 14, scope: !4293)
!4304 = !DILocation(line: 427, column: 8, scope: !4291)
!4305 = !DILocation(line: 427, column: 22, scope: !4291)
!4306 = !DILocation(line: 427, column: 25, scope: !4291)
!4307 = !DILocation(line: 427, column: 8, scope: !4292)
!4308 = !DILocation(line: 432, column: 8, scope: !4290)
!4309 = !DILocation(line: 0, scope: !4290)
!4310 = !DILocation(line: 432, column: 15, scope: !4290)
!4311 = distinct !{!4311, !4308, !4312}
!4312 = !DILocation(line: 433, column: 13, scope: !4290)
!4313 = !DILocation(line: 434, column: 32, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4290, file: !3, line: 434, column: 12)
!4315 = !DILocation(line: 434, column: 12, scope: !4290)
!4316 = !DILocation(line: 436, column: 9, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 436, column: 9)
!4318 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 435, column: 3)
!4319 = !DILocation(line: 436, column: 9, scope: !4318)
!4320 = !DILocation(line: 437, column: 7, scope: !4317)
!4321 = !DILocation(line: 442, column: 8, scope: !4292)
!4322 = distinct !{!4322, !4301, !4323}
!4323 = !DILocation(line: 443, column: 2, scope: !4293)
!4324 = !DILocation(line: 452, column: 3, scope: !4283)
!4325 = !DILocation(line: 453, column: 1, scope: !4283)
!4326 = distinct !DISubprogram(name: "gsi_stmt", scope: !597, file: !597, line: 4501, type: !4327, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4329)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!744, !2947}
!4329 = !{!4330}
!4330 = !DILocalVariable(name: "i", arg: 1, scope: !4326, file: !597, line: 4501, type: !2947)
!4331 = !DILocation(line: 4501, column: 32, scope: !4326)
!4332 = !DILocation(line: 4503, column: 12, scope: !4326)
!4333 = !DILocation(line: 4503, column: 17, scope: !4326)
!4334 = !DILocation(line: 4503, column: 3, scope: !4326)
!4335 = distinct !DISubprogram(name: "gsi_next", scope: !597, file: !597, line: 4485, type: !4336, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4339)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{null, !4338}
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!4339 = !{!4340}
!4340 = !DILocalVariable(name: "i", arg: 1, scope: !4335, file: !597, line: 4485, type: !4338)
!4341 = !DILocation(line: 0, scope: !4335)
!4342 = !DILocation(line: 4487, column: 15, scope: !4335)
!4343 = !DILocation(line: 4487, column: 20, scope: !4335)
!4344 = !DILocation(line: 4487, column: 10, scope: !4335)
!4345 = !DILocation(line: 4488, column: 1, scope: !4335)
!4346 = distinct !DISubprogram(name: "bb_seq", scope: !597, file: !597, line: 237, type: !4347, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4352)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!734, !4349}
!4349 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !724, line: 112, baseType: !4350)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !708)
!4352 = !{!4353}
!4353 = !DILocalVariable(name: "bb", arg: 1, scope: !4346, file: !597, line: 237, type: !4349)
!4354 = !DILocation(line: 0, scope: !4346)
!4355 = !DILocation(line: 239, column: 17, scope: !4346)
!4356 = !DILocation(line: 239, column: 23, scope: !4346)
!4357 = !DILocation(line: 239, column: 33, scope: !4346)
!4358 = !DILocation(line: 239, column: 43, scope: !4346)
!4359 = !DILocation(line: 239, column: 36, scope: !4346)
!4360 = !DILocation(line: 239, column: 10, scope: !4346)
!4361 = !DILocation(line: 239, column: 68, scope: !4346)
!4362 = !DILocation(line: 239, column: 3, scope: !4346)
!4363 = distinct !DISubprogram(name: "gimple_seq_first", scope: !597, file: !597, line: 159, type: !4364, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4369)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{!739, !4366}
!4366 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !724, line: 67, baseType: !4367)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !736)
!4369 = !{!4370}
!4370 = !DILocalVariable(name: "s", arg: 1, scope: !4363, file: !597, line: 159, type: !4366)
!4371 = !DILocation(line: 0, scope: !4363)
!4372 = !DILocation(line: 161, column: 10, scope: !4363)
!4373 = !DILocation(line: 161, column: 17, scope: !4363)
!4374 = !DILocation(line: 161, column: 3, scope: !4363)
!4375 = distinct !DISubprogram(name: "gimple_code", scope: !597, file: !597, line: 1052, type: !4376, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4379)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!596, !4378}
!4378 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !724, line: 60, baseType: !2036)
!4379 = !{!4380}
!4380 = !DILocalVariable(name: "g", arg: 1, scope: !4375, file: !597, line: 1052, type: !4378)
!4381 = !DILocation(line: 0, scope: !4375)
!4382 = !DILocation(line: 1054, column: 20, scope: !4375)
!4383 = !DILocation(line: 1054, column: 3, scope: !4375)
!4384 = distinct !DISubprogram(name: "gimple_assign_cast_p", scope: !597, file: !597, line: 1853, type: !4284, scopeLine: 1854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4385)
!4385 = !{!4386, !4387}
!4386 = !DILocalVariable(name: "s", arg: 1, scope: !4384, file: !597, line: 1853, type: !744)
!4387 = !DILocalVariable(name: "sc", scope: !4388, file: !597, line: 1857, type: !317)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !597, line: 1856, column: 5)
!4389 = distinct !DILexicalBlock(scope: !4384, file: !597, line: 1855, column: 7)
!4390 = !DILocation(line: 0, scope: !4384)
!4391 = !DILocation(line: 1855, column: 7, scope: !4389)
!4392 = !DILocation(line: 1855, column: 7, scope: !4384)
!4393 = !DILocation(line: 1857, column: 27, scope: !4388)
!4394 = !DILocation(line: 0, scope: !4388)
!4395 = !DILocation(line: 1858, column: 14, scope: !4388)
!4396 = !DILocation(line: 1860, column: 7, scope: !4388)
!4397 = !DILocation(line: 1864, column: 1, scope: !4384)
!4398 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !597, file: !597, line: 1727, type: !4399, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4401)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{!866, !4378}
!4401 = !{!4402}
!4402 = !DILocalVariable(name: "gs", arg: 1, scope: !4398, file: !597, line: 1727, type: !4378)
!4403 = !DILocation(line: 0, scope: !4398)
!4404 = !DILocation(line: 1730, column: 10, scope: !4398)
!4405 = !DILocation(line: 1730, column: 3, scope: !4398)
!4406 = distinct !DISubprogram(name: "is_gimple_assign", scope: !597, file: !597, line: 1677, type: !4407, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4409)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{!676, !4378}
!4409 = !{!4410}
!4410 = !DILocalVariable(name: "gs", arg: 1, scope: !4406, file: !597, line: 1677, type: !4378)
!4411 = !DILocation(line: 0, scope: !4406)
!4412 = !DILocation(line: 1679, column: 10, scope: !4406)
!4413 = !DILocation(line: 1679, column: 27, scope: !4406)
!4414 = !DILocation(line: 1679, column: 3, scope: !4406)
!4415 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !597, file: !597, line: 1815, type: !4416, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!317, !4378}
!4418 = !{!4419, !4420}
!4419 = !DILocalVariable(name: "gs", arg: 1, scope: !4415, file: !597, line: 1815, type: !4378)
!4420 = !DILocalVariable(name: "code", scope: !4415, file: !597, line: 1817, type: !317)
!4421 = !DILocation(line: 0, scope: !4415)
!4422 = !DILocation(line: 1820, column: 10, scope: !4415)
!4423 = !DILocation(line: 1821, column: 7, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4415, file: !597, line: 1821, column: 7)
!4425 = !DILocation(line: 1821, column: 35, scope: !4424)
!4426 = !DILocation(line: 1821, column: 7, scope: !4415)
!4427 = !DILocation(line: 1822, column: 12, scope: !4424)
!4428 = !DILocation(line: 1822, column: 5, scope: !4424)
!4429 = !DILocation(line: 1824, column: 3, scope: !4415)
!4430 = distinct !DISubprogram(name: "gimple_expr_code", scope: !597, file: !597, line: 1438, type: !4416, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4431)
!4431 = !{!4432, !4433}
!4432 = !DILocalVariable(name: "stmt", arg: 1, scope: !4430, file: !597, line: 1438, type: !4378)
!4433 = !DILocalVariable(name: "code", scope: !4430, file: !597, line: 1440, type: !596)
!4434 = !DILocation(line: 0, scope: !4430)
!4435 = !DILocation(line: 1440, column: 27, scope: !4430)
!4436 = !DILocation(line: 1441, column: 29, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4430, file: !597, line: 1441, column: 7)
!4438 = !DILocation(line: 1442, column: 42, scope: !4437)
!4439 = !DILocation(line: 1442, column: 5, scope: !4437)
!4440 = !DILocation(line: 1446, column: 5, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4437, file: !597, line: 1443, column: 12)
!4442 = !DILocation(line: 1448, column: 5, scope: !4430)
!4443 = !DILocation(line: 1450, column: 1, scope: !4430)
!4444 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !597, file: !597, line: 1686, type: !4445, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4447)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!635, !317}
!4447 = !{!4448}
!4448 = !DILocalVariable(name: "code", arg: 1, scope: !4444, file: !597, line: 1686, type: !317)
!4449 = !DILocation(line: 0, scope: !4444)
!4450 = !DILocation(line: 1688, column: 34, scope: !4444)
!4451 = !DILocation(line: 1688, column: 10, scope: !4444)
!4452 = !DILocation(line: 1688, column: 3, scope: !4444)
!4453 = distinct !DISubprogram(name: "gimple_op", scope: !597, file: !597, line: 1631, type: !4454, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4456)
!4454 = !DISubroutineType(types: !4455)
!4455 = !{!866, !4378, !7}
!4456 = !{!4457, !4458}
!4457 = !DILocalVariable(name: "gs", arg: 1, scope: !4453, file: !597, line: 1631, type: !4378)
!4458 = !DILocalVariable(name: "i", arg: 2, scope: !4453, file: !597, line: 1631, type: !7)
!4459 = !DILocation(line: 0, scope: !4453)
!4460 = !DILocation(line: 1633, column: 7, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4453, file: !597, line: 1633, column: 7)
!4462 = !DILocation(line: 1633, column: 7, scope: !4453)
!4463 = !DILocation(line: 1638, column: 14, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4461, file: !597, line: 1634, column: 5)
!4465 = !DILocation(line: 1638, column: 7, scope: !4464)
!4466 = !DILocation(line: 0, scope: !4461)
!4467 = !DILocation(line: 1642, column: 1, scope: !4453)
!4468 = distinct !DISubprogram(name: "gimple_has_ops", scope: !597, file: !597, line: 1274, type: !4407, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4469)
!4469 = !{!4470}
!4470 = !DILocalVariable(name: "g", arg: 1, scope: !4468, file: !597, line: 1274, type: !4378)
!4471 = !DILocation(line: 0, scope: !4468)
!4472 = !DILocation(line: 1276, column: 10, scope: !4468)
!4473 = !DILocation(line: 1276, column: 26, scope: !4468)
!4474 = !DILocation(line: 1276, column: 41, scope: !4468)
!4475 = !DILocation(line: 1276, column: 44, scope: !4468)
!4476 = !DILocation(line: 1276, column: 60, scope: !4468)
!4477 = !DILocation(line: 1276, column: 3, scope: !4468)
!4478 = distinct !DISubprogram(name: "gimple_ops", scope: !597, file: !597, line: 1614, type: !4479, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4481)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{!1277, !744}
!4481 = !{!4482, !4483}
!4482 = !DILocalVariable(name: "gs", arg: 1, scope: !4478, file: !597, line: 1614, type: !744)
!4483 = !DILocalVariable(name: "off", scope: !4478, file: !597, line: 1616, type: !1186)
!4484 = !DILocation(line: 0, scope: !4478)
!4485 = !DILocation(line: 1621, column: 28, scope: !4478)
!4486 = !DILocation(line: 1621, column: 9, scope: !4478)
!4487 = !DILocation(line: 1622, column: 3, scope: !4478)
!4488 = !DILocation(line: 1624, column: 20, scope: !4478)
!4489 = !DILocation(line: 1624, column: 32, scope: !4478)
!4490 = !DILocation(line: 1624, column: 10, scope: !4478)
!4491 = !DILocation(line: 1624, column: 3, scope: !4478)
!4492 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !597, file: !597, line: 1073, type: !4493, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4495)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{!641, !744}
!4495 = !{!4496}
!4496 = !DILocalVariable(name: "gs", arg: 1, scope: !4492, file: !597, line: 1073, type: !744)
!4497 = !DILocation(line: 0, scope: !4492)
!4498 = !DILocation(line: 1075, column: 24, scope: !4492)
!4499 = !DILocation(line: 1075, column: 10, scope: !4492)
!4500 = !DILocation(line: 1075, column: 3, scope: !4492)
!4501 = distinct !DISubprogram(name: "gss_for_code", scope: !597, file: !597, line: 1061, type: !4502, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4504)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{!641, !596}
!4504 = !{!4505}
!4505 = !DILocalVariable(name: "code", arg: 1, scope: !4501, file: !597, line: 1061, type: !596)
!4506 = !DILocation(line: 0, scope: !4501)
!4507 = !DILocation(line: 1066, column: 10, scope: !4501)
!4508 = !DILocation(line: 1066, column: 3, scope: !4501)
!4509 = distinct !DISubprogram(name: "analyze_matrix_decl", scope: !3, file: !3, line: 485, type: !4510, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4512)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{!2090, !866}
!4512 = !{!4513, !4514, !4515, !4516, !4517, !4518}
!4513 = !DILocalVariable(name: "var_decl", arg: 1, scope: !4509, file: !3, line: 485, type: !866)
!4514 = !DILocalVariable(name: "m_node", scope: !4509, file: !3, line: 487, type: !2090)
!4515 = !DILocalVariable(name: "tmpmi", scope: !4509, file: !3, line: 487, type: !2040)
!4516 = !DILocalVariable(name: "mi", scope: !4509, file: !3, line: 487, type: !2090)
!4517 = !DILocalVariable(name: "var_type", scope: !4509, file: !3, line: 488, type: !866)
!4518 = !DILocalVariable(name: "dim_num", scope: !4509, file: !3, line: 489, type: !677)
!4519 = !DILocation(line: 0, scope: !4509)
!4520 = !DILocation(line: 487, column: 3, scope: !4509)
!4521 = !DILocation(line: 491, column: 3, scope: !4509)
!4522 = !DILocation(line: 493, column: 7, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 493, column: 7)
!4524 = !DILocation(line: 493, column: 28, scope: !4523)
!4525 = !DILocation(line: 493, column: 7, scope: !4509)
!4526 = !DILocation(line: 494, column: 16, scope: !4523)
!4527 = !DILocation(line: 494, column: 5, scope: !4523)
!4528 = !DILocation(line: 495, column: 33, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 495, column: 12)
!4530 = !DILocation(line: 495, column: 12, scope: !4523)
!4531 = !DILocation(line: 496, column: 16, scope: !4529)
!4532 = !DILocation(line: 0, scope: !4523)
!4533 = !DILocation(line: 500, column: 8, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 500, column: 7)
!4535 = !DILocation(line: 500, column: 7, scope: !4509)
!4536 = !DILocation(line: 503, column: 3, scope: !4509)
!4537 = !DILocation(line: 503, column: 10, scope: !4509)
!4538 = !DILocation(line: 505, column: 18, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 504, column: 5)
!4540 = !DILocation(line: 506, column: 14, scope: !4539)
!4541 = distinct !{!4541, !4536, !4542}
!4542 = !DILocation(line: 507, column: 5, scope: !4509)
!4543 = !DILocation(line: 509, column: 15, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 509, column: 7)
!4545 = !DILocation(line: 509, column: 7, scope: !4509)
!4546 = !DILocation(line: 512, column: 8, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 512, column: 7)
!4548 = !DILocation(line: 513, column: 7, scope: !4547)
!4549 = !DILocation(line: 513, column: 10, scope: !4547)
!4550 = !DILocation(line: 513, column: 48, scope: !4547)
!4551 = !DILocation(line: 512, column: 7, scope: !4509)
!4552 = !DILocation(line: 517, column: 9, scope: !4509)
!4553 = !DILocation(line: 517, column: 14, scope: !4509)
!4554 = !DILocation(line: 518, column: 42, scope: !4509)
!4555 = !DILocation(line: 518, column: 31, scope: !4509)
!4556 = !DILocation(line: 520, column: 7, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 520, column: 7)
!4558 = !DILocation(line: 520, column: 7, scope: !4509)
!4559 = !DILocation(line: 525, column: 35, scope: !4509)
!4560 = !DILocation(line: 525, column: 12, scope: !4509)
!4561 = !DILocation(line: 526, column: 11, scope: !4509)
!4562 = !DILocation(line: 526, column: 16, scope: !4509)
!4563 = !DILocation(line: 527, column: 11, scope: !4509)
!4564 = !DILocation(line: 527, column: 20, scope: !4509)
!4565 = !DILocation(line: 529, column: 37, scope: !4509)
!4566 = !DILocation(line: 529, column: 28, scope: !4509)
!4567 = !DILocation(line: 528, column: 11, scope: !4509)
!4568 = !DILocation(line: 529, column: 5, scope: !4509)
!4569 = !DILocation(line: 533, column: 11, scope: !4509)
!4570 = !DILocation(line: 533, column: 37, scope: !4509)
!4571 = !DILocation(line: 534, column: 11, scope: !4509)
!4572 = !DILocation(line: 534, column: 27, scope: !4509)
!4573 = !DILocation(line: 536, column: 3, scope: !4509)
!4574 = !DILocation(line: 537, column: 1, scope: !4509)
!4575 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !318, file: !318, line: 182, type: !4576, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4580)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!7, !4578}
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1230)
!4580 = !{!4581}
!4581 = !DILocalVariable(name: "vec_", arg: 1, scope: !4575, file: !318, line: 182, type: !4578)
!4582 = !DILocation(line: 0, scope: !4575)
!4583 = !DILocation(line: 182, column: 1, scope: !4575)
!4584 = distinct !DISubprogram(name: "analyze_matrix_allocation_site", scope: !3, file: !3, line: 792, type: !4585, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4587)
!4585 = !DISubroutineType(types: !4586)
!4586 = !{null, !2090, !744, !677, !3117}
!4587 = !{!4588, !4589, !4590, !4591, !4592, !4595, !4598, !4601}
!4588 = !DILocalVariable(name: "mi", arg: 1, scope: !4584, file: !3, line: 792, type: !2090)
!4589 = !DILocalVariable(name: "stmt", arg: 2, scope: !4584, file: !3, line: 792, type: !744)
!4590 = !DILocalVariable(name: "level", arg: 3, scope: !4584, file: !3, line: 793, type: !677)
!4591 = !DILocalVariable(name: "visited", arg: 4, scope: !4584, file: !3, line: 793, type: !3117)
!4592 = !DILocalVariable(name: "rhs", scope: !4593, file: !3, line: 797, type: !866)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 796, column: 5)
!4594 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 795, column: 7)
!4595 = !DILocalVariable(name: "def", scope: !4596, file: !3, line: 801, type: !744)
!4596 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 800, column: 2)
!4597 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 799, column: 11)
!4598 = !DILocalVariable(name: "call_flags", scope: !4599, file: !3, line: 814, type: !677)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 813, column: 5)
!4600 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 812, column: 12)
!4601 = !DILocalVariable(name: "malloc_fn_decl", scope: !4602, file: !3, line: 823, type: !866)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 822, column: 2)
!4603 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 816, column: 11)
!4604 = !DILocation(line: 0, scope: !4584)
!4605 = !DILocation(line: 795, column: 7, scope: !4594)
!4606 = !DILocation(line: 795, column: 35, scope: !4594)
!4607 = !DILocation(line: 795, column: 38, scope: !4594)
!4608 = !DILocation(line: 795, column: 7, scope: !4584)
!4609 = !DILocation(line: 797, column: 18, scope: !4593)
!4610 = !DILocation(line: 0, scope: !4593)
!4611 = !DILocation(line: 799, column: 11, scope: !4597)
!4612 = !DILocation(line: 799, column: 27, scope: !4597)
!4613 = !DILocation(line: 799, column: 11, scope: !4593)
!4614 = !DILocation(line: 801, column: 17, scope: !4596)
!4615 = !DILocation(line: 0, scope: !4596)
!4616 = !DILocation(line: 803, column: 4, scope: !4596)
!4617 = !DILocation(line: 808, column: 27, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 808, column: 16)
!4619 = !DILocation(line: 808, column: 20, scope: !4618)
!4620 = !DILocation(line: 808, column: 16, scope: !4597)
!4621 = !DILocation(line: 812, column: 12, scope: !4600)
!4622 = !DILocation(line: 812, column: 12, scope: !4594)
!4623 = !DILocation(line: 814, column: 24, scope: !4599)
!4624 = !DILocation(line: 0, scope: !4599)
!4625 = !DILocation(line: 816, column: 24, scope: !4603)
!4626 = !DILocation(line: 816, column: 11, scope: !4599)
!4627 = !DILocation(line: 818, column: 4, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 817, column: 2)
!4629 = !DILocation(line: 819, column: 4, scope: !4628)
!4630 = !DILocation(line: 825, column: 21, scope: !4602)
!4631 = !DILocation(line: 0, scope: !4602)
!4632 = !DILocation(line: 826, column: 23, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 826, column: 8)
!4634 = !DILocation(line: 826, column: 8, scope: !4602)
!4635 = !DILocation(line: 828, column: 8, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 827, column: 6)
!4637 = !DILocation(line: 829, column: 8, scope: !4636)
!4638 = !DILocation(line: 831, column: 8, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 831, column: 8)
!4640 = !DILocation(line: 831, column: 44, scope: !4639)
!4641 = !DILocation(line: 831, column: 8, scope: !4602)
!4642 = !DILocation(line: 833, column: 12, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 833, column: 12)
!4644 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 832, column: 6)
!4645 = !DILocation(line: 833, column: 12, scope: !4644)
!4646 = !DILocation(line: 836, column: 19, scope: !4643)
!4647 = !DILocation(line: 836, column: 5, scope: !4643)
!4648 = !DILocation(line: 836, column: 26, scope: !4643)
!4649 = !DILocation(line: 834, column: 3, scope: !4643)
!4650 = !DILocation(line: 837, column: 8, scope: !4644)
!4651 = !DILocation(line: 838, column: 8, scope: !4644)
!4652 = !DILocation(line: 848, column: 15, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 848, column: 11)
!4654 = !DILocation(line: 848, column: 11, scope: !4653)
!4655 = !DILocation(line: 849, column: 4, scope: !4653)
!4656 = !DILocation(line: 849, column: 11, scope: !4653)
!4657 = !DILocation(line: 849, column: 29, scope: !4653)
!4658 = !DILocation(line: 849, column: 32, scope: !4653)
!4659 = !DILocation(line: 850, column: 4, scope: !4653)
!4660 = !DILocation(line: 850, column: 7, scope: !4653)
!4661 = !DILocation(line: 850, column: 35, scope: !4653)
!4662 = !DILocation(line: 848, column: 11, scope: !4599)
!4663 = !DILocation(line: 852, column: 4, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 851, column: 2)
!4665 = !DILocation(line: 853, column: 4, scope: !4664)
!4666 = !DILocation(line: 856, column: 2, scope: !4653)
!4667 = !DILocation(line: 857, column: 7, scope: !4599)
!4668 = !DILocation(line: 861, column: 3, scope: !4584)
!4669 = !DILocation(line: 862, column: 1, scope: !4584)
!4670 = distinct !DISubprogram(name: "analyze_matrix_accesses", scope: !3, file: !3, line: 1354, type: !4671, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4673)
!4671 = !DISubroutineType(types: !4672)
!4672 = !{null, !2090, !866, !677, !676, !3117, !676}
!4673 = !{!4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682}
!4674 = !DILocalVariable(name: "mi", arg: 1, scope: !4670, file: !3, line: 1354, type: !2090)
!4675 = !DILocalVariable(name: "ssa_var", arg: 2, scope: !4670, file: !3, line: 1354, type: !866)
!4676 = !DILocalVariable(name: "current_indirect_level", arg: 3, scope: !4670, file: !3, line: 1355, type: !677)
!4677 = !DILocalVariable(name: "last_op", arg: 4, scope: !4670, file: !3, line: 1355, type: !676)
!4678 = !DILocalVariable(name: "visited", arg: 5, scope: !4670, file: !3, line: 1356, type: !3117)
!4679 = !DILocalVariable(name: "record_accesses", arg: 6, scope: !4670, file: !3, line: 1356, type: !676)
!4680 = !DILocalVariable(name: "imm_iter", scope: !4670, file: !3, line: 1358, type: !3503)
!4681 = !DILocalVariable(name: "use_p", scope: !4670, file: !3, line: 1359, type: !2097)
!4682 = !DILocalVariable(name: "use_stmt", scope: !4683, file: !3, line: 1379, type: !744)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 1378, column: 3)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 1377, column: 3)
!4685 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 1377, column: 3)
!4686 = !DILocation(line: 0, scope: !4670)
!4687 = !DILocation(line: 1358, column: 3, scope: !4670)
!4688 = !DILocation(line: 1361, column: 25, scope: !4670)
!4689 = !DILocation(line: 1361, column: 3, scope: !4670)
!4690 = !DILocation(line: 1367, column: 11, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 1367, column: 7)
!4692 = !DILocation(line: 1367, column: 37, scope: !4691)
!4693 = !DILocation(line: 1368, column: 7, scope: !4691)
!4694 = !DILocation(line: 1368, column: 40, scope: !4691)
!4695 = !DILocation(line: 1367, column: 7, scope: !4670)
!4696 = !DILocation(line: 1375, column: 3, scope: !4670)
!4697 = !DILocation(line: 1377, column: 3, scope: !4685)
!4698 = !DILocation(line: 0, scope: !4685)
!4699 = !DILocation(line: 1377, column: 3, scope: !4684)
!4700 = !DILocation(line: 1379, column: 23, scope: !4683)
!4701 = !DILocation(line: 0, scope: !4683)
!4702 = !DILocation(line: 1380, column: 9, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 1380, column: 9)
!4704 = !DILocation(line: 1380, column: 32, scope: !4703)
!4705 = !DILocation(line: 1380, column: 9, scope: !4683)
!4706 = !DILocation(line: 1387, column: 7, scope: !4703)
!4707 = !DILocation(line: 1390, column: 14, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 1390, column: 14)
!4709 = !DILocation(line: 1390, column: 14, scope: !4703)
!4710 = !DILocation(line: 1391, column: 7, scope: !4708)
!4711 = !DILocation(line: 1393, column: 14, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1393, column: 14)
!4713 = !DILocation(line: 1393, column: 14, scope: !4708)
!4714 = !DILocation(line: 1395, column: 2, scope: !4712)
!4715 = !DILocation(line: 1394, column: 7, scope: !4712)
!4716 = distinct !{!4716, !4697, !4717}
!4717 = !DILocation(line: 1398, column: 3, scope: !4685)
!4718 = !DILocation(line: 1399, column: 1, scope: !4670)
!4719 = distinct !DISubprogram(name: "is_gimple_call", scope: !597, file: !597, line: 1870, type: !4407, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4720)
!4720 = !{!4721}
!4721 = !DILocalVariable(name: "gs", arg: 1, scope: !4719, file: !597, line: 1870, type: !4378)
!4722 = !DILocation(line: 0, scope: !4719)
!4723 = !DILocation(line: 1872, column: 10, scope: !4719)
!4724 = !DILocation(line: 1872, column: 27, scope: !4719)
!4725 = !DILocation(line: 1872, column: 3, scope: !4719)
!4726 = distinct !DISubprogram(name: "mark_min_matrix_escape_level", scope: !3, file: !3, line: 592, type: !4727, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4729)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{null, !2090, !677, !744}
!4729 = !{!4730, !4731, !4732}
!4730 = !DILocalVariable(name: "mi", arg: 1, scope: !4726, file: !3, line: 592, type: !2090)
!4731 = !DILocalVariable(name: "l", arg: 2, scope: !4726, file: !3, line: 592, type: !677)
!4732 = !DILocalVariable(name: "s", arg: 3, scope: !4726, file: !3, line: 592, type: !744)
!4733 = !DILocation(line: 0, scope: !4726)
!4734 = !DILocation(line: 594, column: 11, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4726, file: !3, line: 594, column: 7)
!4736 = !DILocation(line: 594, column: 37, scope: !4735)
!4737 = !DILocation(line: 595, column: 7, scope: !4735)
!4738 = !DILocation(line: 595, column: 41, scope: !4735)
!4739 = !DILocation(line: 594, column: 7, scope: !4726)
!4740 = !DILocation(line: 597, column: 37, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 596, column: 5)
!4742 = !DILocation(line: 598, column: 11, scope: !4741)
!4743 = !DILocation(line: 598, column: 42, scope: !4741)
!4744 = !DILocation(line: 599, column: 5, scope: !4741)
!4745 = !DILocation(line: 600, column: 1, scope: !4726)
!4746 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !597, file: !597, line: 1954, type: !4399, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4747)
!4747 = !{!4748, !4749}
!4748 = !DILocalVariable(name: "gs", arg: 1, scope: !4746, file: !597, line: 1954, type: !4378)
!4749 = !DILocalVariable(name: "addr", scope: !4746, file: !597, line: 1956, type: !866)
!4750 = !DILocation(line: 0, scope: !4746)
!4751 = !DILocation(line: 1956, column: 15, scope: !4746)
!4752 = !DILocation(line: 1957, column: 7, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4746, file: !597, line: 1957, column: 7)
!4754 = !DILocation(line: 1957, column: 24, scope: !4753)
!4755 = !DILocation(line: 1957, column: 7, scope: !4746)
!4756 = !DILocation(line: 1958, column: 12, scope: !4753)
!4757 = !DILocation(line: 1958, column: 5, scope: !4753)
!4758 = !DILocation(line: 1960, column: 1, scope: !4746)
!4759 = distinct !DISubprogram(name: "add_allocation_site", scope: !3, file: !3, line: 720, type: !4760, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4762)
!4760 = !DISubroutineType(types: !4761)
!4761 = !{null, !2090, !744, !677}
!4762 = !{!4763, !4764, !4765, !4766, !4767}
!4763 = !DILocalVariable(name: "mi", arg: 1, scope: !4759, file: !3, line: 720, type: !2090)
!4764 = !DILocalVariable(name: "stmt", arg: 2, scope: !4759, file: !3, line: 720, type: !744)
!4765 = !DILocalVariable(name: "level", arg: 3, scope: !4759, file: !3, line: 720, type: !677)
!4766 = !DILocalVariable(name: "mcd", scope: !4759, file: !3, line: 722, type: !3351)
!4767 = !DILocalVariable(name: "min_malloc_level", scope: !4768, file: !3, line: 729, type: !677)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 728, column: 5)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 727, column: 12)
!4770 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 725, column: 7)
!4771 = !DILocation(line: 0, scope: !4759)
!4772 = !DILocation(line: 722, column: 3, scope: !4759)
!4773 = !DILocation(line: 725, column: 12, scope: !4770)
!4774 = !DILocation(line: 725, column: 8, scope: !4770)
!4775 = !DILocation(line: 725, column: 7, scope: !4759)
!4776 = !DILocation(line: 726, column: 36, scope: !4770)
!4777 = !DILocation(line: 726, column: 34, scope: !4770)
!4778 = !DILocation(line: 726, column: 5, scope: !4770)
!4779 = !DILocation(line: 727, column: 44, scope: !4769)
!4780 = !DILocation(line: 727, column: 41, scope: !4769)
!4781 = !DILocation(line: 727, column: 12, scope: !4770)
!4782 = !DILocation(line: 731, column: 7, scope: !4768)
!4783 = !DILocation(line: 0, scope: !4768)
!4784 = !DILocation(line: 0, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 739, column: 7)
!4786 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 739, column: 7)
!4787 = !DILocation(line: 739, column: 12, scope: !4786)
!4788 = !DILocation(line: 0, scope: !4786)
!4789 = !DILocation(line: 740, column: 22, scope: !4785)
!4790 = !DILocation(line: 741, column: 5, scope: !4785)
!4791 = !DILocation(line: 741, column: 12, scope: !4785)
!4792 = !DILocation(line: 741, column: 8, scope: !4785)
!4793 = !DILocation(line: 739, column: 7, scope: !4786)
!4794 = !DILocation(line: 741, column: 64, scope: !4785)
!4795 = !DILocation(line: 739, column: 7, scope: !4785)
!4796 = distinct !{!4796, !4793, !4797}
!4797 = !DILocation(line: 741, column: 67, scope: !4786)
!4798 = !DILocation(line: 742, column: 17, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 742, column: 11)
!4800 = !DILocation(line: 742, column: 11, scope: !4768)
!4801 = !DILocation(line: 744, column: 35, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 743, column: 2)
!4803 = !DILocation(line: 744, column: 33, scope: !4802)
!4804 = !DILocation(line: 745, column: 4, scope: !4802)
!4805 = !DILocation(line: 754, column: 5, scope: !4769)
!4806 = !DILocation(line: 749, column: 4, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 748, column: 2)
!4808 = !DILocation(line: 752, column: 4, scope: !4807)
!4809 = !DILocation(line: 757, column: 3, scope: !4759)
!4810 = !DILocation(line: 761, column: 12, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 761, column: 7)
!4812 = !DILocation(line: 761, column: 8, scope: !4811)
!4813 = !DILocation(line: 761, column: 7, scope: !4759)
!4814 = !DILocation(line: 763, column: 30, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 762, column: 5)
!4816 = !DILocation(line: 763, column: 28, scope: !4815)
!4817 = !DILocation(line: 764, column: 11, scope: !4815)
!4818 = !DILocation(line: 764, column: 30, scope: !4815)
!4819 = !DILocation(line: 765, column: 5, scope: !4815)
!4820 = !DILocation(line: 766, column: 16, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 766, column: 12)
!4822 = !DILocation(line: 766, column: 35, scope: !4821)
!4823 = !DILocation(line: 766, column: 12, scope: !4811)
!4824 = !DILocation(line: 769, column: 4, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 767, column: 5)
!4826 = !DILocation(line: 769, column: 2, scope: !4825)
!4827 = !DILocation(line: 772, column: 21, scope: !4825)
!4828 = !DILocation(line: 772, column: 42, scope: !4825)
!4829 = !DILocation(line: 772, column: 61, scope: !4825)
!4830 = !DILocation(line: 772, column: 17, scope: !4825)
!4831 = !DILocation(line: 772, column: 15, scope: !4825)
!4832 = !DILocation(line: 773, column: 18, scope: !4825)
!4833 = !DILocation(line: 773, column: 11, scope: !4825)
!4834 = !DILocation(line: 773, column: 44, scope: !4825)
!4835 = !DILocation(line: 772, column: 7, scope: !4825)
!4836 = !DILocation(line: 775, column: 30, scope: !4825)
!4837 = !DILocation(line: 777, column: 7, scope: !4759)
!4838 = !DILocation(line: 776, column: 5, scope: !4825)
!4839 = !DILocation(line: 777, column: 3, scope: !4759)
!4840 = !DILocation(line: 777, column: 31, scope: !4759)
!4841 = !DILocation(line: 778, column: 1, scope: !4759)
!4842 = distinct !DISubprogram(name: "gimple_call_fn", scope: !597, file: !597, line: 1911, type: !4399, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4843)
!4843 = !{!4844}
!4844 = !DILocalVariable(name: "gs", arg: 1, scope: !4842, file: !597, line: 1911, type: !4378)
!4845 = !DILocation(line: 0, scope: !4842)
!4846 = !DILocation(line: 1914, column: 10, scope: !4842)
!4847 = !DILocation(line: 1914, column: 3, scope: !4842)
!4848 = distinct !DISubprogram(name: "collect_data_for_malloc_call", scope: !3, file: !3, line: 190, type: !4849, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4852)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{null, !744, !4851}
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!4852 = !{!4853, !4854, !4855, !4856, !4857}
!4853 = !DILocalVariable(name: "stmt", arg: 1, scope: !4848, file: !3, line: 190, type: !744)
!4854 = !DILocalVariable(name: "m_data", arg: 2, scope: !4848, file: !3, line: 190, type: !4851)
!4855 = !DILocalVariable(name: "size_var", scope: !4848, file: !3, line: 192, type: !866)
!4856 = !DILocalVariable(name: "malloc_fn_decl", scope: !4848, file: !3, line: 193, type: !866)
!4857 = !DILocalVariable(name: "arg1", scope: !4848, file: !3, line: 194, type: !866)
!4858 = !DILocation(line: 0, scope: !4848)
!4859 = !DILocation(line: 196, column: 3, scope: !4848)
!4860 = !DILocation(line: 198, column: 20, scope: !4848)
!4861 = !DILocation(line: 199, column: 22, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 199, column: 7)
!4863 = !DILocation(line: 200, column: 7, scope: !4862)
!4864 = !DILocation(line: 200, column: 10, scope: !4862)
!4865 = !DILocation(line: 200, column: 46, scope: !4862)
!4866 = !DILocation(line: 199, column: 7, scope: !4848)
!4867 = !DILocation(line: 203, column: 10, scope: !4848)
!4868 = !DILocation(line: 206, column: 11, scope: !4848)
!4869 = !DILocation(line: 206, column: 21, scope: !4848)
!4870 = !DILocation(line: 207, column: 11, scope: !4848)
!4871 = !DILocation(line: 207, column: 20, scope: !4848)
!4872 = !DILocation(line: 208, column: 7, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 208, column: 7)
!4874 = !DILocation(line: 208, column: 28, scope: !4873)
!4875 = !DILocation(line: 0, scope: !4873)
!4876 = !DILocation(line: 208, column: 7, scope: !4848)
!4877 = !DILocation(line: 209, column: 25, scope: !4873)
!4878 = !DILocation(line: 209, column: 5, scope: !4873)
!4879 = !DILocation(line: 211, column: 25, scope: !4873)
!4880 = !DILocation(line: 212, column: 1, scope: !4848)
!4881 = distinct !DISubprogram(name: "gimple_call_arg", scope: !597, file: !597, line: 2025, type: !4454, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4882)
!4882 = !{!4883, !4884}
!4883 = !DILocalVariable(name: "gs", arg: 1, scope: !4881, file: !597, line: 2025, type: !4378)
!4884 = !DILocalVariable(name: "index", arg: 2, scope: !4881, file: !597, line: 2025, type: !7)
!4885 = !DILocation(line: 0, scope: !4881)
!4886 = !DILocation(line: 2028, column: 31, scope: !4881)
!4887 = !DILocation(line: 2028, column: 10, scope: !4881)
!4888 = !DILocation(line: 2028, column: 3, scope: !4881)
!4889 = distinct !DISubprogram(name: "update_type_size", scope: !3, file: !3, line: 989, type: !4890, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4892)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{null, !2090, !744, !866, !677}
!4892 = !{!4893, !4894, !4895, !4896, !4897, !4898, !4899}
!4893 = !DILocalVariable(name: "mi", arg: 1, scope: !4889, file: !3, line: 989, type: !2090)
!4894 = !DILocalVariable(name: "stmt", arg: 2, scope: !4889, file: !3, line: 989, type: !744)
!4895 = !DILocalVariable(name: "ssa_var", arg: 3, scope: !4889, file: !3, line: 989, type: !866)
!4896 = !DILocalVariable(name: "current_indirect_level", arg: 4, scope: !4889, file: !3, line: 990, type: !677)
!4897 = !DILocalVariable(name: "lhs", scope: !4889, file: !3, line: 992, type: !866)
!4898 = !DILocalVariable(name: "type_size", scope: !4889, file: !3, line: 993, type: !837)
!4899 = !DILocalVariable(name: "l", scope: !4900, file: !3, line: 1017, type: !677)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 1016, column: 5)
!4901 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 1013, column: 7)
!4902 = !DILocation(line: 0, scope: !4889)
!4903 = !DILocation(line: 996, column: 7, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 996, column: 7)
!4905 = !DILocation(line: 997, column: 7, scope: !4904)
!4906 = !DILocation(line: 997, column: 10, scope: !4904)
!4907 = !DILocation(line: 997, column: 47, scope: !4904)
!4908 = !DILocation(line: 996, column: 7, scope: !4889)
!4909 = !DILocation(line: 999, column: 13, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 998, column: 5)
!4911 = !DILocation(line: 1000, column: 7, scope: !4910)
!4912 = !DILocation(line: 1003, column: 21, scope: !4910)
!4913 = !DILocation(line: 0, scope: !4910)
!4914 = !DILocation(line: 1003, column: 2, scope: !4910)
!4915 = !DILocation(line: 1006, column: 5, scope: !4910)
!4916 = !DILocation(line: 1008, column: 36, scope: !4904)
!4917 = !DILocation(line: 1008, column: 17, scope: !4904)
!4918 = !DILocation(line: 0, scope: !4904)
!4919 = !DILocation(line: 1013, column: 17, scope: !4901)
!4920 = !DILocation(line: 1013, column: 7, scope: !4889)
!4921 = !DILocation(line: 1014, column: 5, scope: !4901)
!4922 = !DILocation(line: 0, scope: !4900)
!4923 = !DILocation(line: 1019, column: 16, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 1019, column: 11)
!4925 = !DILocation(line: 1019, column: 12, scope: !4924)
!4926 = !DILocation(line: 1019, column: 11, scope: !4900)
!4927 = !DILocation(line: 1022, column: 37, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 1020, column: 2)
!4929 = !DILocation(line: 1022, column: 35, scope: !4928)
!4930 = !DILocation(line: 1022, column: 26, scope: !4928)
!4931 = !DILocation(line: 1022, column: 6, scope: !4928)
!4932 = !DILocation(line: 1023, column: 8, scope: !4928)
!4933 = !DILocation(line: 1023, column: 32, scope: !4928)
!4934 = !DILocation(line: 1024, column: 2, scope: !4928)
!4935 = !DILocation(line: 1025, column: 20, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 1025, column: 16)
!4937 = !DILocation(line: 1025, column: 44, scope: !4936)
!4938 = !DILocation(line: 1025, column: 16, scope: !4924)
!4939 = !DILocation(line: 1028, column: 40, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1026, column: 2)
!4941 = !DILocation(line: 1029, column: 11, scope: !4940)
!4942 = !DILocation(line: 1029, column: 8, scope: !4940)
!4943 = !DILocation(line: 1029, column: 16, scope: !4940)
!4944 = !DILocation(line: 1028, column: 26, scope: !4940)
!4945 = !DILocation(line: 1028, column: 6, scope: !4940)
!4946 = !DILocation(line: 1030, column: 17, scope: !4940)
!4947 = !DILocation(line: 1030, column: 41, scope: !4940)
!4948 = !DILocation(line: 1030, column: 13, scope: !4940)
!4949 = !DILocation(line: 1030, column: 12, scope: !4940)
!4950 = !DILocation(line: 1031, column: 15, scope: !4940)
!4951 = !DILocation(line: 1031, column: 8, scope: !4940)
!4952 = !DILocation(line: 1032, column: 5, scope: !4940)
!4953 = !DILocation(line: 1030, column: 4, scope: !4940)
!4954 = !DILocation(line: 1033, column: 32, scope: !4940)
!4955 = !DILocation(line: 1037, column: 16, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 1037, column: 11)
!4957 = !DILocation(line: 1034, column: 2, scope: !4940)
!4958 = !DILocation(line: 1037, column: 12, scope: !4956)
!4959 = !DILocation(line: 1037, column: 11, scope: !4900)
!4960 = !DILocation(line: 1038, column: 29, scope: !4956)
!4961 = !DILocation(line: 1038, column: 2, scope: !4956)
!4962 = !DILocation(line: 1039, column: 43, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 1039, column: 16)
!4964 = !DILocation(line: 1039, column: 16, scope: !4956)
!4965 = !DILocation(line: 1040, column: 2, scope: !4963)
!4966 = !DILocation(line: 1042, column: 1, scope: !4889)
!4967 = distinct !DISubprogram(name: "first_readonly_imm_use", scope: !3075, file: !3075, line: 292, type: !4968, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4971)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{!2097, !4970, !866}
!4970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!4971 = !{!4972, !4973}
!4972 = !DILocalVariable(name: "imm", arg: 1, scope: !4967, file: !3075, line: 292, type: !4970)
!4973 = !DILocalVariable(name: "var", arg: 2, scope: !4967, file: !3075, line: 292, type: !866)
!4974 = !DILocation(line: 0, scope: !4967)
!4975 = !DILocation(line: 294, column: 18, scope: !4967)
!4976 = !DILocation(line: 294, column: 8, scope: !4967)
!4977 = !DILocation(line: 294, column: 14, scope: !4967)
!4978 = !DILocation(line: 295, column: 30, scope: !4967)
!4979 = !DILocation(line: 295, column: 16, scope: !4967)
!4980 = !DILocation(line: 299, column: 7, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4967, file: !3075, line: 299, column: 7)
!4982 = !DILocation(line: 299, column: 7, scope: !4967)
!4983 = !DILocation(line: 301, column: 15, scope: !4967)
!4984 = !DILocation(line: 301, column: 3, scope: !4967)
!4985 = !DILocation(line: 302, column: 1, scope: !4967)
!4986 = distinct !DISubprogram(name: "end_readonly_imm_use_p", scope: !3075, file: !3075, line: 285, type: !4987, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4991)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!676, !4989}
!4989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4990, size: 64)
!4990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3503)
!4991 = !{!4992}
!4992 = !DILocalVariable(name: "imm", arg: 1, scope: !4986, file: !3075, line: 285, type: !4989)
!4993 = !DILocation(line: 0, scope: !4986)
!4994 = !DILocation(line: 287, column: 16, scope: !4986)
!4995 = !DILocation(line: 287, column: 32, scope: !4986)
!4996 = !DILocation(line: 287, column: 24, scope: !4986)
!4997 = !DILocation(line: 287, column: 10, scope: !4986)
!4998 = !DILocation(line: 287, column: 3, scope: !4986)
!4999 = distinct !DISubprogram(name: "analyze_accesses_for_phi_node", scope: !3, file: !3, line: 1134, type: !5000, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5002)
!5000 = !DISubroutineType(types: !5001)
!5001 = !{null, !2090, !744, !677, !3117, !676}
!5002 = !{!5003, !5004, !5005, !5006, !5007, !5008, !5009, !5010, !5011, !5016, !5017, !5018}
!5003 = !DILocalVariable(name: "mi", arg: 1, scope: !4999, file: !3, line: 1134, type: !2090)
!5004 = !DILocalVariable(name: "use_stmt", arg: 2, scope: !4999, file: !3, line: 1134, type: !744)
!5005 = !DILocalVariable(name: "current_indirect_level", arg: 3, scope: !4999, file: !3, line: 1135, type: !677)
!5006 = !DILocalVariable(name: "visited", arg: 4, scope: !4999, file: !3, line: 1135, type: !3117)
!5007 = !DILocalVariable(name: "record_accesses", arg: 5, scope: !4999, file: !3, line: 1136, type: !676)
!5008 = !DILocalVariable(name: "tmp_maphi", scope: !4999, file: !3, line: 1139, type: !2093)
!5009 = !DILocalVariable(name: "maphi", scope: !4999, file: !3, line: 1139, type: !2100)
!5010 = !DILocalVariable(name: "pmaphi", scope: !4999, file: !3, line: 1139, type: !2101)
!5011 = !DILocalVariable(name: "level", scope: !5012, file: !3, line: 1149, type: !677)
!5012 = distinct !DILexicalBlock(scope: !5013, file: !3, line: 1148, column: 2)
!5013 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 1145, column: 11)
!5014 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 1144, column: 5)
!5015 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1142, column: 7)
!5016 = !DILocalVariable(name: "j", scope: !5012, file: !3, line: 1151, type: !1186)
!5017 = !DILocalVariable(name: "stmt", scope: !5012, file: !3, line: 1152, type: !744)
!5018 = !DILocalVariable(name: "def", scope: !5019, file: !3, line: 1157, type: !866)
!5019 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 1156, column: 6)
!5020 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 1155, column: 4)
!5021 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 1155, column: 4)
!5022 = !DILocation(line: 0, scope: !4999)
!5023 = !DILocation(line: 1139, column: 3, scope: !4999)
!5024 = !DILocation(line: 1141, column: 13, scope: !4999)
!5025 = !DILocation(line: 1141, column: 17, scope: !4999)
!5026 = !DILocation(line: 1143, column: 19, scope: !5015)
!5027 = !DILocation(line: 1143, column: 8, scope: !5015)
!5028 = !DILocation(line: 1142, column: 14, scope: !5015)
!5029 = !DILocation(line: 1142, column: 7, scope: !4999)
!5030 = !DILocation(line: 1145, column: 18, scope: !5013)
!5031 = !DILocation(line: 1145, column: 36, scope: !5013)
!5032 = !DILocation(line: 1145, column: 11, scope: !5014)
!5033 = !DILocation(line: 1149, column: 16, scope: !5012)
!5034 = !DILocation(line: 0, scope: !5012)
!5035 = !DILocation(line: 1154, column: 29, scope: !5012)
!5036 = !DILocation(line: 1155, column: 9, scope: !5021)
!5037 = !DILocation(line: 0, scope: !5021)
!5038 = !DILocation(line: 1155, column: 20, scope: !5020)
!5039 = !DILocation(line: 1155, column: 18, scope: !5020)
!5040 = !DILocation(line: 1155, column: 4, scope: !5021)
!5041 = !DILocation(line: 1157, column: 19, scope: !5019)
!5042 = !DILocation(line: 0, scope: !5019)
!5043 = !DILocation(line: 1159, column: 25, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 1159, column: 12)
!5045 = !DILocation(line: 1159, column: 12, scope: !5044)
!5046 = !DILocation(line: 1159, column: 50, scope: !5044)
!5047 = !DILocation(line: 1159, column: 12, scope: !5019)
!5048 = !DILocation(line: 1160, column: 10, scope: !5044)
!5049 = !DILocation(line: 1160, column: 3, scope: !5044)
!5050 = !DILocation(line: 1155, column: 53, scope: !5020)
!5051 = !DILocation(line: 1155, column: 4, scope: !5020)
!5052 = distinct !{!5052, !5040, !5053}
!5053 = !DILocation(line: 1161, column: 6, scope: !5021)
!5054 = !DILocation(line: 1162, column: 4, scope: !5012)
!5055 = !DILocation(line: 1164, column: 7, scope: !5014)
!5056 = !DILocation(line: 1167, column: 5, scope: !4999)
!5057 = !DILocation(line: 1168, column: 10, scope: !4999)
!5058 = !DILocation(line: 1168, column: 14, scope: !4999)
!5059 = !DILocation(line: 1169, column: 10, scope: !4999)
!5060 = !DILocation(line: 1169, column: 28, scope: !4999)
!5061 = !DILocation(line: 1173, column: 21, scope: !4999)
!5062 = !DILocation(line: 1173, column: 5, scope: !4999)
!5063 = !DILocation(line: 1174, column: 3, scope: !4999)
!5064 = !DILocation(line: 1175, column: 11, scope: !4999)
!5065 = !DILocation(line: 1177, column: 8, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1177, column: 7)
!5067 = !DILocation(line: 1177, column: 7, scope: !4999)
!5068 = !DILocation(line: 1179, column: 25, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 1178, column: 5)
!5070 = !DILocation(line: 1179, column: 7, scope: !5069)
!5071 = !DILocation(line: 1180, column: 36, scope: !5069)
!5072 = !DILocation(line: 1180, column: 7, scope: !5069)
!5073 = !DILocation(line: 1183, column: 27, scope: !5069)
!5074 = !DILocation(line: 1183, column: 7, scope: !5069)
!5075 = !DILocation(line: 1184, column: 5, scope: !5069)
!5076 = !DILocation(line: 1185, column: 1, scope: !4999)
!5077 = distinct !DISubprogram(name: "analyze_accesses_for_call_stmt", scope: !3, file: !3, line: 1050, type: !5078, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5080)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{!677, !2090, !866, !744, !677}
!5080 = !{!5081, !5082, !5083, !5084, !5085, !5086, !5089, !5098, !5099, !5102}
!5081 = !DILocalVariable(name: "mi", arg: 1, scope: !5077, file: !3, line: 1050, type: !2090)
!5082 = !DILocalVariable(name: "ssa_var", arg: 2, scope: !5077, file: !3, line: 1050, type: !866)
!5083 = !DILocalVariable(name: "use_stmt", arg: 3, scope: !5077, file: !3, line: 1051, type: !744)
!5084 = !DILocalVariable(name: "current_indirect_level", arg: 4, scope: !5077, file: !3, line: 1051, type: !677)
!5085 = !DILocalVariable(name: "fndecl", scope: !5077, file: !3, line: 1053, type: !866)
!5086 = !DILocalVariable(name: "lhs", scope: !5087, file: !3, line: 1057, type: !866)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1056, column: 5)
!5088 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 1055, column: 7)
!5089 = !DILocalVariable(name: "lhs_acc", scope: !5087, file: !3, line: 1058, type: !5090)
!5090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_acc_in_tree", file: !3, line: 332, size: 384, elements: !5091)
!5091 = !{!5092, !5093, !5094, !5095, !5096, !5097}
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_var", scope: !5090, file: !3, line: 335, baseType: !866, size: 64)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "t_code", scope: !5090, file: !3, line: 338, baseType: !317, size: 32, offset: 64)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "t_tree", scope: !5090, file: !3, line: 339, baseType: !866, size: 64, offset: 128)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "tp", scope: !5090, file: !3, line: 341, baseType: !1277, size: 64, offset: 192)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "second_op", scope: !5090, file: !3, line: 342, baseType: !866, size: 64, offset: 256)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "var_found", scope: !5090, file: !3, line: 343, baseType: !676, size: 8, offset: 320)
!5098 = !DILocalVariable(name: "rhs_acc", scope: !5087, file: !3, line: 1058, type: !5090)
!5099 = !DILocalVariable(name: "l", scope: !5100, file: !3, line: 1088, type: !677)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1087, column: 2)
!5101 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 1086, column: 11)
!5102 = !DILocalVariable(name: "l", scope: !5103, file: !3, line: 1114, type: !677)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 1111, column: 2)
!5104 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1107, column: 16)
!5105 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 1098, column: 11)
!5106 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 1097, column: 5)
!5107 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 1096, column: 7)
!5108 = !DILocation(line: 0, scope: !5077)
!5109 = !DILocation(line: 1053, column: 17, scope: !5077)
!5110 = !DILocation(line: 1055, column: 7, scope: !5088)
!5111 = !DILocation(line: 1055, column: 7, scope: !5077)
!5112 = !DILocation(line: 1057, column: 18, scope: !5087)
!5113 = !DILocation(line: 0, scope: !5087)
!5114 = !DILocation(line: 1058, column: 7, scope: !5087)
!5115 = !DILocation(line: 1060, column: 7, scope: !5087)
!5116 = !DILocation(line: 1061, column: 7, scope: !5087)
!5117 = !DILocation(line: 1063, column: 15, scope: !5087)
!5118 = !DILocation(line: 1063, column: 23, scope: !5087)
!5119 = !DILocation(line: 1064, column: 15, scope: !5087)
!5120 = !DILocation(line: 1064, column: 22, scope: !5087)
!5121 = !DILocation(line: 1065, column: 7, scope: !5087)
!5122 = !DILocation(line: 1066, column: 15, scope: !5087)
!5123 = !DILocation(line: 1066, column: 23, scope: !5087)
!5124 = !DILocation(line: 1067, column: 15, scope: !5087)
!5125 = !DILocation(line: 1067, column: 22, scope: !5087)
!5126 = !DILocation(line: 1068, column: 7, scope: !5087)
!5127 = !DILocation(line: 1075, column: 20, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 1075, column: 11)
!5129 = !DILocation(line: 1075, column: 12, scope: !5128)
!5130 = !DILocation(line: 1075, column: 30, scope: !5128)
!5131 = !DILocation(line: 0, scope: !5128)
!5132 = !DILocation(line: 1077, column: 17, scope: !5128)
!5133 = !DILocation(line: 1075, column: 41, scope: !5128)
!5134 = !DILocation(line: 1075, column: 33, scope: !5128)
!5135 = !DILocation(line: 1076, column: 5, scope: !5128)
!5136 = !DILocation(line: 1076, column: 16, scope: !5128)
!5137 = !DILocation(line: 1076, column: 23, scope: !5128)
!5138 = !DILocation(line: 1077, column: 4, scope: !5128)
!5139 = !DILocation(line: 1077, column: 9, scope: !5128)
!5140 = !DILocation(line: 1077, column: 27, scope: !5128)
!5141 = !DILocation(line: 1075, column: 11, scope: !5087)
!5142 = !DILocation(line: 1079, column: 4, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 1078, column: 2)
!5144 = !DILocation(line: 1080, column: 4, scope: !5143)
!5145 = !DILocation(line: 1082, column: 7, scope: !5087)
!5146 = !DILocation(line: 1086, column: 19, scope: !5101)
!5147 = !DILocation(line: 1086, column: 11, scope: !5101)
!5148 = !DILocation(line: 1086, column: 11, scope: !5087)
!5149 = !DILocation(line: 1088, column: 35, scope: !5100)
!5150 = !DILocation(line: 0, scope: !5100)
!5151 = !DILocation(line: 1090, column: 4, scope: !5100)
!5152 = !DILocation(line: 1091, column: 4, scope: !5100)
!5153 = !DILocation(line: 1094, column: 5, scope: !5088)
!5154 = !DILocation(line: 1096, column: 7, scope: !5107)
!5155 = !DILocation(line: 1096, column: 7, scope: !5077)
!5156 = !DILocation(line: 1098, column: 11, scope: !5105)
!5157 = !DILocation(line: 1098, column: 39, scope: !5105)
!5158 = !DILocation(line: 1098, column: 11, scope: !5106)
!5159 = !DILocation(line: 1100, column: 8, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 1100, column: 8)
!5161 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1099, column: 2)
!5162 = !DILocation(line: 1100, column: 8, scope: !5161)
!5163 = !DILocation(line: 1103, column: 22, scope: !5160)
!5164 = !DILocation(line: 1103, column: 8, scope: !5160)
!5165 = !DILocation(line: 1103, column: 29, scope: !5160)
!5166 = !DILocation(line: 1101, column: 6, scope: !5160)
!5167 = !DILocation(line: 1105, column: 4, scope: !5161)
!5168 = !DILocation(line: 1106, column: 2, scope: !5161)
!5169 = !DILocation(line: 1107, column: 20, scope: !5104)
!5170 = !DILocation(line: 1107, column: 16, scope: !5104)
!5171 = !DILocation(line: 1107, column: 55, scope: !5104)
!5172 = !DILocation(line: 1107, column: 60, scope: !5104)
!5173 = !DILocation(line: 1108, column: 9, scope: !5104)
!5174 = !DILocation(line: 1108, column: 56, scope: !5104)
!5175 = !DILocation(line: 1107, column: 16, scope: !5105)
!5176 = !DILocation(line: 1109, column: 2, scope: !5104)
!5177 = !DILocation(line: 0, scope: !5103)
!5178 = !DILocation(line: 1116, column: 27, scope: !5103)
!5179 = !DILocation(line: 1117, column: 29, scope: !5103)
!5180 = !DILocation(line: 1117, column: 8, scope: !5103)
!5181 = !DILocation(line: 1117, column: 22, scope: !5103)
!5182 = !DILocation(line: 1117, column: 27, scope: !5103)
!5183 = !DILocation(line: 1121, column: 1, scope: !5077)
!5184 = distinct !DISubprogram(name: "analyze_accesses_for_assign_stmt", scope: !3, file: !3, line: 1192, type: !5185, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5187)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!677, !2090, !866, !744, !677, !676, !3117, !676}
!5187 = !{!5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5201, !5204, !5212, !5213, !5214}
!5188 = !DILocalVariable(name: "mi", arg: 1, scope: !5184, file: !3, line: 1192, type: !2090)
!5189 = !DILocalVariable(name: "ssa_var", arg: 2, scope: !5184, file: !3, line: 1192, type: !866)
!5190 = !DILocalVariable(name: "use_stmt", arg: 3, scope: !5184, file: !3, line: 1193, type: !744)
!5191 = !DILocalVariable(name: "current_indirect_level", arg: 4, scope: !5184, file: !3, line: 1193, type: !677)
!5192 = !DILocalVariable(name: "last_op", arg: 5, scope: !5184, file: !3, line: 1194, type: !676)
!5193 = !DILocalVariable(name: "visited", arg: 6, scope: !5184, file: !3, line: 1194, type: !3117)
!5194 = !DILocalVariable(name: "record_accesses", arg: 7, scope: !5184, file: !3, line: 1195, type: !676)
!5195 = !DILocalVariable(name: "lhs", scope: !5184, file: !3, line: 1197, type: !866)
!5196 = !DILocalVariable(name: "lhs_acc", scope: !5184, file: !3, line: 1198, type: !5090)
!5197 = !DILocalVariable(name: "rhs_acc", scope: !5184, file: !3, line: 1198, type: !5090)
!5198 = !DILocalVariable(name: "l", scope: !5199, file: !3, line: 1228, type: !677)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 1227, column: 5)
!5200 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 1226, column: 7)
!5201 = !DILocalVariable(name: "def_stmt", scope: !5202, file: !3, line: 1238, type: !744)
!5202 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 1237, column: 2)
!5203 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 1232, column: 11)
!5204 = !DILocalVariable(name: "index", scope: !5205, file: !3, line: 1280, type: !866)
!5205 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 1279, column: 6)
!5206 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 1270, column: 8)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 1268, column: 2)
!5208 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1267, column: 16)
!5209 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 1259, column: 11)
!5210 = distinct !DILexicalBlock(scope: !5211, file: !3, line: 1250, column: 5)
!5211 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 1249, column: 7)
!5212 = !DILocalVariable(name: "op1", scope: !5205, file: !3, line: 1281, type: !866)
!5213 = !DILocalVariable(name: "op2", scope: !5205, file: !3, line: 1281, type: !866)
!5214 = !DILocalVariable(name: "l", scope: !5215, file: !3, line: 1314, type: !677)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 1313, column: 2)
!5216 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 1312, column: 11)
!5217 = !DILocation(line: 0, scope: !5184)
!5218 = !DILocation(line: 1197, column: 14, scope: !5184)
!5219 = !DILocation(line: 1198, column: 3, scope: !5184)
!5220 = !DILocation(line: 1200, column: 3, scope: !5184)
!5221 = !DILocation(line: 1201, column: 3, scope: !5184)
!5222 = !DILocation(line: 1203, column: 11, scope: !5184)
!5223 = !DILocation(line: 1203, column: 19, scope: !5184)
!5224 = !DILocation(line: 1204, column: 11, scope: !5184)
!5225 = !DILocation(line: 1204, column: 18, scope: !5184)
!5226 = !DILocation(line: 1205, column: 3, scope: !5184)
!5227 = !DILocation(line: 1206, column: 11, scope: !5184)
!5228 = !DILocation(line: 1206, column: 19, scope: !5184)
!5229 = !DILocation(line: 1207, column: 11, scope: !5184)
!5230 = !DILocation(line: 1207, column: 18, scope: !5184)
!5231 = !DILocation(line: 1208, column: 3, scope: !5184)
!5232 = !DILocation(line: 1215, column: 16, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 1215, column: 7)
!5234 = !DILocation(line: 1215, column: 8, scope: !5233)
!5235 = !DILocation(line: 1215, column: 26, scope: !5233)
!5236 = !DILocation(line: 0, scope: !5233)
!5237 = !DILocation(line: 1217, column: 20, scope: !5233)
!5238 = !DILocation(line: 1215, column: 37, scope: !5233)
!5239 = !DILocation(line: 1215, column: 29, scope: !5233)
!5240 = !DILocation(line: 1216, column: 8, scope: !5233)
!5241 = !DILocation(line: 1216, column: 19, scope: !5233)
!5242 = !DILocation(line: 1216, column: 26, scope: !5233)
!5243 = !DILocation(line: 1217, column: 7, scope: !5233)
!5244 = !DILocation(line: 1217, column: 12, scope: !5233)
!5245 = !DILocation(line: 1217, column: 30, scope: !5233)
!5246 = !DILocation(line: 1215, column: 7, scope: !5184)
!5247 = !DILocation(line: 1219, column: 7, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 1218, column: 5)
!5249 = !DILocation(line: 1220, column: 7, scope: !5248)
!5250 = !DILocation(line: 1222, column: 3, scope: !5184)
!5251 = !DILocation(line: 1226, column: 15, scope: !5200)
!5252 = !DILocation(line: 1226, column: 7, scope: !5200)
!5253 = !DILocation(line: 1226, column: 7, scope: !5184)
!5254 = !DILocation(line: 1228, column: 38, scope: !5199)
!5255 = !DILocation(line: 0, scope: !5199)
!5256 = !DILocation(line: 1230, column: 7, scope: !5199)
!5257 = !DILocation(line: 1232, column: 13, scope: !5203)
!5258 = !DILocation(line: 1233, column: 6, scope: !5203)
!5259 = !DILocation(line: 1233, column: 9, scope: !5203)
!5260 = !DILocation(line: 1234, column: 4, scope: !5203)
!5261 = !DILocation(line: 1234, column: 8, scope: !5203)
!5262 = !DILocation(line: 1234, column: 50, scope: !5203)
!5263 = !DILocation(line: 1232, column: 11, scope: !5199)
!5264 = !DILocation(line: 1235, column: 2, scope: !5203)
!5265 = !DILocation(line: 1238, column: 22, scope: !5202)
!5266 = !DILocation(line: 0, scope: !5202)
!5267 = !DILocation(line: 1239, column: 4, scope: !5202)
!5268 = !DILocation(line: 1240, column: 8, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 1240, column: 8)
!5270 = !DILocation(line: 1240, column: 8, scope: !5202)
!5271 = !DILocation(line: 1241, column: 6, scope: !5269)
!5272 = !DILocation(line: 1243, column: 4, scope: !5202)
!5273 = !DILocation(line: 1249, column: 15, scope: !5211)
!5274 = !DILocation(line: 1249, column: 7, scope: !5211)
!5275 = !DILocation(line: 1249, column: 7, scope: !5184)
!5276 = !DILocation(line: 1251, column: 19, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 1251, column: 11)
!5278 = !DILocation(line: 1251, column: 26, scope: !5277)
!5279 = !DILocation(line: 1252, column: 4, scope: !5277)
!5280 = !DILocation(line: 1252, column: 22, scope: !5277)
!5281 = !DILocation(line: 1252, column: 43, scope: !5277)
!5282 = !DILocation(line: 1252, column: 61, scope: !5277)
!5283 = !DILocation(line: 1251, column: 11, scope: !5210)
!5284 = !DILocation(line: 1254, column: 4, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 1253, column: 2)
!5286 = !DILocation(line: 1255, column: 4, scope: !5285)
!5287 = !DILocation(line: 1259, column: 11, scope: !5210)
!5288 = !DILocation(line: 1261, column: 8, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 1261, column: 8)
!5290 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1260, column: 2)
!5291 = !DILocation(line: 1261, column: 8, scope: !5290)
!5292 = !DILocation(line: 1262, column: 6, scope: !5289)
!5293 = !DILocation(line: 1265, column: 27, scope: !5290)
!5294 = !DILocation(line: 1266, column: 2, scope: !5290)
!5295 = !DILocation(line: 1267, column: 31, scope: !5208)
!5296 = !DILocation(line: 1267, column: 16, scope: !5209)
!5297 = !DILocation(line: 1269, column: 4, scope: !5207)
!5298 = !DILocation(line: 1270, column: 8, scope: !5206)
!5299 = !DILocation(line: 1270, column: 8, scope: !5207)
!5300 = !DILocation(line: 1276, column: 6, scope: !5206)
!5301 = !DILocation(line: 1283, column: 14, scope: !5205)
!5302 = !DILocation(line: 0, scope: !5205)
!5303 = !DILocation(line: 1284, column: 14, scope: !5205)
!5304 = !DILocation(line: 1286, column: 19, scope: !5205)
!5305 = !DILocation(line: 1286, column: 14, scope: !5205)
!5306 = !DILocation(line: 1287, column: 12, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 1287, column: 12)
!5308 = !DILocation(line: 1287, column: 28, scope: !5307)
!5309 = !DILocation(line: 1287, column: 12, scope: !5205)
!5310 = !DILocation(line: 1289, column: 20, scope: !5307)
!5311 = !DILocation(line: 1290, column: 6, scope: !5307)
!5312 = !DILocation(line: 1291, column: 6, scope: !5307)
!5313 = !DILocation(line: 1290, column: 29, scope: !5307)
!5314 = !DILocation(line: 1289, column: 5, scope: !5307)
!5315 = !DILocation(line: 1288, column: 3, scope: !5307)
!5316 = !DILocation(line: 1295, column: 35, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 1293, column: 3)
!5318 = !DILocation(line: 1295, column: 7, scope: !5317)
!5319 = !DILocation(line: 1296, column: 15, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1296, column: 9)
!5321 = !DILocation(line: 1296, column: 9, scope: !5317)
!5322 = !DILocation(line: 1298, column: 9, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1297, column: 7)
!5324 = !DILocation(line: 1301, column: 9, scope: !5323)
!5325 = !DILocation(line: 0, scope: !5307)
!5326 = !DILocation(line: 1304, column: 12, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 1304, column: 12)
!5328 = !DILocation(line: 1304, column: 12, scope: !5205)
!5329 = !DILocation(line: 1305, column: 3, scope: !5327)
!5330 = !DILocation(line: 1312, column: 19, scope: !5216)
!5331 = !DILocation(line: 1312, column: 26, scope: !5216)
!5332 = !DILocation(line: 1312, column: 42, scope: !5216)
!5333 = !DILocation(line: 0, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 1321, column: 8)
!5335 = !DILocation(line: 1321, column: 8, scope: !5334)
!5336 = !DILocation(line: 1312, column: 45, scope: !5216)
!5337 = !DILocation(line: 1312, column: 61, scope: !5216)
!5338 = !DILocation(line: 1312, column: 11, scope: !5210)
!5339 = !DILocation(line: 0, scope: !5215)
!5340 = !DILocation(line: 1321, column: 24, scope: !5334)
!5341 = !DILocation(line: 1321, column: 36, scope: !5334)
!5342 = !DILocation(line: 1321, column: 50, scope: !5334)
!5343 = !DILocation(line: 1321, column: 43, scope: !5334)
!5344 = !DILocation(line: 1321, column: 8, scope: !5215)
!5345 = !DILocation(line: 1322, column: 6, scope: !5334)
!5346 = !DILocation(line: 1327, column: 8, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 1325, column: 6)
!5348 = !DILocation(line: 1328, column: 12, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 1328, column: 12)
!5350 = !DILocation(line: 1328, column: 12, scope: !5347)
!5351 = !DILocation(line: 1329, column: 3, scope: !5349)
!5352 = !DILocation(line: 1338, column: 16, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 1334, column: 2)
!5354 = !DILocation(line: 1338, column: 23, scope: !5353)
!5355 = !DILocation(line: 1338, column: 8, scope: !5353)
!5356 = !DILocation(line: 1336, column: 4, scope: !5353)
!5357 = !DILocation(line: 1343, column: 1, scope: !5184)
!5358 = distinct !DISubprogram(name: "next_readonly_imm_use", scope: !3075, file: !3075, line: 306, type: !5359, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5361)
!5359 = !DISubroutineType(types: !5360)
!5360 = !{!2097, !4970}
!5361 = !{!5362, !5363}
!5362 = !DILocalVariable(name: "imm", arg: 1, scope: !5358, file: !3075, line: 306, type: !4970)
!5363 = !DILocalVariable(name: "old", scope: !5358, file: !3075, line: 308, type: !2097)
!5364 = !DILocation(line: 0, scope: !5358)
!5365 = !DILocation(line: 308, column: 28, scope: !5358)
!5366 = !DILocation(line: 319, column: 23, scope: !5358)
!5367 = !DILocation(line: 319, column: 16, scope: !5358)
!5368 = !DILocation(line: 320, column: 7, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5358, file: !3075, line: 320, column: 7)
!5370 = !DILocation(line: 320, column: 7, scope: !5358)
!5371 = !DILocation(line: 322, column: 15, scope: !5358)
!5372 = !DILocation(line: 322, column: 3, scope: !5358)
!5373 = !DILocation(line: 323, column: 1, scope: !5358)
!5374 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !597, file: !597, line: 1694, type: !4399, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5375)
!5375 = !{!5376}
!5376 = !DILocalVariable(name: "gs", arg: 1, scope: !5374, file: !597, line: 1694, type: !4378)
!5377 = !DILocation(line: 0, scope: !5374)
!5378 = !DILocation(line: 1697, column: 10, scope: !5374)
!5379 = !DILocation(line: 1697, column: 3, scope: !5374)
!5380 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !597, file: !597, line: 3061, type: !5381, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5383)
!5381 = !DISubroutineType(types: !5382)
!5382 = !{!7, !4378}
!5383 = !{!5384}
!5384 = !DILocalVariable(name: "gs", arg: 1, scope: !5380, file: !597, line: 3061, type: !4378)
!5385 = !DILocation(line: 0, scope: !5380)
!5386 = !DILocation(line: 3064, column: 25, scope: !5380)
!5387 = !DILocation(line: 3064, column: 3, scope: !5380)
!5388 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !3075, file: !3075, line: 427, type: !5389, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5391)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!866, !2097}
!5391 = !{!5392}
!5392 = !DILocalVariable(name: "use", arg: 1, scope: !5388, file: !3075, line: 427, type: !2097)
!5393 = !DILocation(line: 0, scope: !5388)
!5394 = !DILocation(line: 429, column: 17, scope: !5388)
!5395 = !DILocation(line: 429, column: 10, scope: !5388)
!5396 = !DILocation(line: 429, column: 3, scope: !5388)
!5397 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !3075, file: !3075, line: 442, type: !5398, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5400)
!5398 = !DISubroutineType(types: !5399)
!5399 = !{!2097, !744, !677}
!5400 = !{!5401, !5402}
!5401 = !DILocalVariable(name: "gs", arg: 1, scope: !5397, file: !3075, line: 442, type: !744)
!5402 = !DILocalVariable(name: "i", arg: 2, scope: !5397, file: !3075, line: 442, type: !677)
!5403 = !DILocation(line: 0, scope: !5397)
!5404 = !DILocation(line: 444, column: 11, scope: !5397)
!5405 = !DILocation(line: 444, column: 35, scope: !5397)
!5406 = !DILocation(line: 444, column: 3, scope: !5397)
!5407 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !3075, file: !3075, line: 434, type: !5408, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5411)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{!866, !5410}
!5410 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !668, line: 27, baseType: !1277)
!5411 = !{!5412}
!5412 = !DILocalVariable(name: "def", arg: 1, scope: !5407, file: !3075, line: 434, type: !5410)
!5413 = !DILocation(line: 0, scope: !5407)
!5414 = !DILocation(line: 436, column: 10, scope: !5407)
!5415 = !DILocation(line: 436, column: 3, scope: !5407)
!5416 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !597, file: !597, line: 3080, type: !4479, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5417)
!5417 = !{!5418}
!5418 = !DILocalVariable(name: "gs", arg: 1, scope: !5416, file: !597, line: 3080, type: !744)
!5419 = !DILocation(line: 0, scope: !5416)
!5420 = !DILocation(line: 3083, column: 26, scope: !5416)
!5421 = !DILocation(line: 3083, column: 3, scope: !5416)
!5422 = distinct !DISubprogram(name: "SET_BIT", scope: !3118, file: !3118, line: 63, type: !5423, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5425)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{null, !3117, !7}
!5425 = !{!5426, !5427, !5428}
!5426 = !DILocalVariable(name: "map", arg: 1, scope: !5422, file: !3118, line: 63, type: !3117)
!5427 = !DILocalVariable(name: "bitno", arg: 2, scope: !5422, file: !3118, line: 63, type: !7)
!5428 = !DILocalVariable(name: "oldbit", scope: !5429, file: !3118, line: 67, type: !676)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !3118, line: 66, column: 5)
!5430 = distinct !DILexicalBlock(scope: !5422, file: !3118, line: 65, column: 7)
!5431 = !DILocation(line: 0, scope: !5422)
!5432 = !DILocation(line: 65, column: 12, scope: !5430)
!5433 = !DILocation(line: 65, column: 7, scope: !5430)
!5434 = !DILocation(line: 65, column: 7, scope: !5422)
!5435 = !DILocation(line: 73, column: 40, scope: !5422)
!5436 = !DILocation(line: 73, column: 29, scope: !5422)
!5437 = !DILocation(line: 72, column: 19, scope: !5422)
!5438 = !DILocation(line: 72, column: 3, scope: !5422)
!5439 = !DILocation(line: 68, column: 16, scope: !5429)
!5440 = !DILocation(line: 69, column: 12, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5429, file: !3118, line: 69, column: 11)
!5442 = !DILocation(line: 69, column: 11, scope: !5429)
!5443 = !DILocation(line: 70, column: 2, scope: !5441)
!5444 = !DILocation(line: 70, column: 41, scope: !5441)
!5445 = !DILocation(line: 73, column: 5, scope: !5422)
!5446 = !DILocation(line: 74, column: 1, scope: !5422)
!5447 = distinct !DISubprogram(name: "RESET_BIT", scope: !3118, file: !3118, line: 82, type: !5423, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5448)
!5448 = !{!5449, !5450, !5451}
!5449 = !DILocalVariable(name: "map", arg: 1, scope: !5447, file: !3118, line: 82, type: !3117)
!5450 = !DILocalVariable(name: "bitno", arg: 2, scope: !5447, file: !3118, line: 82, type: !7)
!5451 = !DILocalVariable(name: "oldbit", scope: !5452, file: !3118, line: 86, type: !676)
!5452 = distinct !DILexicalBlock(scope: !5453, file: !3118, line: 85, column: 5)
!5453 = distinct !DILexicalBlock(scope: !5447, file: !3118, line: 84, column: 7)
!5454 = !DILocation(line: 0, scope: !5447)
!5455 = !DILocation(line: 84, column: 12, scope: !5453)
!5456 = !DILocation(line: 84, column: 7, scope: !5453)
!5457 = !DILocation(line: 84, column: 7, scope: !5447)
!5458 = !DILocation(line: 92, column: 42, scope: !5447)
!5459 = !DILocation(line: 92, column: 31, scope: !5447)
!5460 = !DILocation(line: 91, column: 19, scope: !5447)
!5461 = !DILocation(line: 91, column: 3, scope: !5447)
!5462 = !DILocation(line: 87, column: 16, scope: !5452)
!5463 = !DILocation(line: 88, column: 11, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5452, file: !3118, line: 88, column: 11)
!5465 = !DILocation(line: 88, column: 11, scope: !5452)
!5466 = !DILocation(line: 89, column: 2, scope: !5464)
!5467 = !DILocation(line: 89, column: 41, scope: !5464)
!5468 = !DILocation(line: 92, column: 8, scope: !5447)
!5469 = !DILocation(line: 92, column: 5, scope: !5447)
!5470 = !DILocation(line: 93, column: 1, scope: !5447)
!5471 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !597, file: !597, line: 3100, type: !5472, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5475)
!5472 = !DISubroutineType(types: !5473)
!5473 = !{!5474, !744, !7}
!5474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!5475 = !{!5476, !5477}
!5476 = !DILocalVariable(name: "gs", arg: 1, scope: !5471, file: !597, line: 3100, type: !744)
!5477 = !DILocalVariable(name: "index", arg: 2, scope: !5471, file: !597, line: 3100, type: !7)
!5478 = !DILocation(line: 0, scope: !5471)
!5479 = !DILocation(line: 3103, column: 3, scope: !5471)
!5480 = !DILocation(line: 3104, column: 12, scope: !5471)
!5481 = !DILocation(line: 3104, column: 3, scope: !5471)
!5482 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !597, file: !597, line: 1878, type: !4399, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5483)
!5483 = !{!5484}
!5484 = !DILocalVariable(name: "gs", arg: 1, scope: !5482, file: !597, line: 1878, type: !4378)
!5485 = !DILocation(line: 0, scope: !5482)
!5486 = !DILocation(line: 1881, column: 10, scope: !5482)
!5487 = !DILocation(line: 1881, column: 3, scope: !5482)
!5488 = distinct !DISubprogram(name: "ssa_accessed_in_tree", scope: !3, file: !3, line: 607, type: !5489, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5492)
!5489 = !DISubroutineType(types: !5490)
!5490 = !{null, !866, !5491}
!5491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5090, size: 64)
!5492 = !{!5493, !5494}
!5493 = !DILocalVariable(name: "t", arg: 1, scope: !5488, file: !3, line: 607, type: !866)
!5494 = !DILocalVariable(name: "a", arg: 2, scope: !5488, file: !3, line: 607, type: !5491)
!5495 = !DILocation(line: 0, scope: !5488)
!5496 = !DILocation(line: 609, column: 15, scope: !5488)
!5497 = !DILocation(line: 609, column: 6, scope: !5488)
!5498 = !DILocation(line: 609, column: 13, scope: !5488)
!5499 = !DILocation(line: 610, column: 3, scope: !5488)
!5500 = !DILocation(line: 613, column: 19, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 613, column: 11)
!5502 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 611, column: 5)
!5503 = !DILocation(line: 613, column: 13, scope: !5501)
!5504 = !DILocation(line: 613, column: 11, scope: !5502)
!5505 = !DILocation(line: 614, column: 5, scope: !5501)
!5506 = !DILocation(line: 614, column: 15, scope: !5501)
!5507 = !DILocation(line: 614, column: 2, scope: !5501)
!5508 = !DILocation(line: 617, column: 11, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 617, column: 11)
!5510 = !DILocation(line: 618, column: 4, scope: !5509)
!5511 = !DILocation(line: 618, column: 33, scope: !5509)
!5512 = !DILocation(line: 618, column: 27, scope: !5509)
!5513 = !DILocation(line: 617, column: 11, scope: !5502)
!5514 = !DILocation(line: 619, column: 5, scope: !5509)
!5515 = !DILocation(line: 619, column: 15, scope: !5509)
!5516 = !DILocation(line: 619, column: 2, scope: !5509)
!5517 = !DILocation(line: 624, column: 1, scope: !5488)
!5518 = distinct !DISubprogram(name: "ssa_accessed_in_call_rhs", scope: !3, file: !3, line: 630, type: !5519, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5521)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{null, !744, !5491}
!5521 = !{!5522, !5523, !5524, !5525, !5526}
!5522 = !DILocalVariable(name: "stmt", arg: 1, scope: !5518, file: !3, line: 630, type: !744)
!5523 = !DILocalVariable(name: "a", arg: 2, scope: !5518, file: !3, line: 630, type: !5491)
!5524 = !DILocalVariable(name: "decl", scope: !5518, file: !3, line: 632, type: !866)
!5525 = !DILocalVariable(name: "arg", scope: !5518, file: !3, line: 633, type: !866)
!5526 = !DILocalVariable(name: "i", scope: !5518, file: !3, line: 634, type: !1186)
!5527 = !DILocation(line: 0, scope: !5518)
!5528 = !DILocation(line: 636, column: 6, scope: !5518)
!5529 = !DILocation(line: 636, column: 13, scope: !5518)
!5530 = !DILocation(line: 0, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 640, column: 11)
!5532 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 638, column: 5)
!5533 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 637, column: 3)
!5534 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 637, column: 3)
!5535 = !DILocation(line: 637, column: 8, scope: !5534)
!5536 = !DILocation(line: 0, scope: !5534)
!5537 = !DILocation(line: 637, column: 19, scope: !5533)
!5538 = !DILocation(line: 637, column: 17, scope: !5533)
!5539 = !DILocation(line: 637, column: 3, scope: !5534)
!5540 = !DILocation(line: 639, column: 36, scope: !5532)
!5541 = !DILocation(line: 639, column: 13, scope: !5532)
!5542 = !DILocation(line: 640, column: 21, scope: !5531)
!5543 = !DILocation(line: 640, column: 15, scope: !5531)
!5544 = !DILocation(line: 640, column: 11, scope: !5532)
!5545 = !DILocation(line: 642, column: 7, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 641, column: 2)
!5547 = !DILocation(line: 642, column: 17, scope: !5546)
!5548 = !DILocation(line: 643, column: 11, scope: !5546)
!5549 = !DILocation(line: 644, column: 7, scope: !5546)
!5550 = !DILocation(line: 644, column: 14, scope: !5546)
!5551 = !DILocation(line: 645, column: 4, scope: !5546)
!5552 = !DILocation(line: 637, column: 49, scope: !5533)
!5553 = !DILocation(line: 637, column: 3, scope: !5533)
!5554 = distinct !{!5554, !5539, !5555}
!5555 = !DILocation(line: 647, column: 5, scope: !5534)
!5556 = !DILocation(line: 648, column: 1, scope: !5518)
!5557 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !597, file: !597, line: 2013, type: !5381, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5558)
!5558 = !{!5559, !5560}
!5559 = !DILocalVariable(name: "gs", arg: 1, scope: !5557, file: !597, line: 2013, type: !4378)
!5560 = !DILocalVariable(name: "num_ops", scope: !5557, file: !597, line: 2015, type: !7)
!5561 = !DILocation(line: 0, scope: !5557)
!5562 = !DILocation(line: 2017, column: 13, scope: !5557)
!5563 = !DILocation(line: 2018, column: 18, scope: !5557)
!5564 = !DILocation(line: 2018, column: 3, scope: !5557)
!5565 = distinct !DISubprogram(name: "gimple_num_ops", scope: !597, file: !597, line: 1596, type: !5381, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5566)
!5566 = !{!5567}
!5567 = !DILocalVariable(name: "gs", arg: 1, scope: !5565, file: !597, line: 1596, type: !4378)
!5568 = !DILocation(line: 0, scope: !5565)
!5569 = !DILocation(line: 1598, column: 21, scope: !5565)
!5570 = !DILocation(line: 1598, column: 3, scope: !5565)
!5571 = distinct !DISubprogram(name: "ssa_accessed_in_assign_rhs", scope: !3, file: !3, line: 654, type: !5519, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5572)
!5572 = !{!5573, !5574}
!5573 = !DILocalVariable(name: "stmt", arg: 1, scope: !5571, file: !3, line: 654, type: !744)
!5574 = !DILocalVariable(name: "a", arg: 2, scope: !5571, file: !3, line: 654, type: !5491)
!5575 = !DILocation(line: 0, scope: !5571)
!5576 = !DILocation(line: 657, column: 15, scope: !5571)
!5577 = !DILocation(line: 657, column: 6, scope: !5571)
!5578 = !DILocation(line: 657, column: 13, scope: !5571)
!5579 = !DILocation(line: 658, column: 3, scope: !5571)
!5580 = !DILocation(line: 666, column: 29, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 659, column: 5)
!5582 = !DILocation(line: 666, column: 7, scope: !5581)
!5583 = !DILocation(line: 667, column: 7, scope: !5581)
!5584 = !DILocation(line: 671, column: 13, scope: !5581)
!5585 = !DILocation(line: 672, column: 13, scope: !5581)
!5586 = !DILocation(line: 674, column: 21, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 674, column: 11)
!5588 = !DILocation(line: 674, column: 15, scope: !5587)
!5589 = !DILocation(line: 674, column: 11, scope: !5581)
!5590 = !DILocation(line: 676, column: 7, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 675, column: 2)
!5592 = !DILocation(line: 676, column: 17, scope: !5591)
!5593 = !DILocation(line: 677, column: 7, scope: !5591)
!5594 = !DILocation(line: 677, column: 17, scope: !5591)
!5595 = !DILocation(line: 678, column: 2, scope: !5591)
!5596 = !DILocation(line: 679, column: 20, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 679, column: 16)
!5598 = !DILocation(line: 679, column: 16, scope: !5587)
!5599 = !DILocation(line: 681, column: 7, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 680, column: 2)
!5601 = !DILocation(line: 681, column: 17, scope: !5600)
!5602 = !DILocation(line: 682, column: 7, scope: !5600)
!5603 = !DILocation(line: 682, column: 17, scope: !5600)
!5604 = !DILocation(line: 683, column: 2, scope: !5600)
!5605 = !DILocation(line: 688, column: 1, scope: !5571)
!5606 = distinct !DISubprogram(name: "record_access_alloc_site_info", scope: !3, file: !3, line: 693, type: !5607, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5609)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{null, !2090, !744, !866, !866, !677, !676}
!5609 = !{!5610, !5611, !5612, !5613, !5614, !5615, !5616}
!5610 = !DILocalVariable(name: "mi", arg: 1, scope: !5606, file: !3, line: 693, type: !2090)
!5611 = !DILocalVariable(name: "stmt", arg: 2, scope: !5606, file: !3, line: 693, type: !744)
!5612 = !DILocalVariable(name: "offset", arg: 3, scope: !5606, file: !3, line: 693, type: !866)
!5613 = !DILocalVariable(name: "index", arg: 4, scope: !5606, file: !3, line: 694, type: !866)
!5614 = !DILocalVariable(name: "level", arg: 5, scope: !5606, file: !3, line: 694, type: !677)
!5615 = !DILocalVariable(name: "is_alloc", arg: 6, scope: !5606, file: !3, line: 694, type: !676)
!5616 = !DILocalVariable(name: "acc_info", scope: !5606, file: !3, line: 696, type: !2078)
!5617 = !DILocation(line: 0, scope: !5606)
!5618 = !DILocation(line: 698, column: 12, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 698, column: 7)
!5620 = !DILocation(line: 698, column: 8, scope: !5619)
!5621 = !DILocation(line: 698, column: 7, scope: !5606)
!5622 = !DILocation(line: 699, column: 20, scope: !5619)
!5623 = !DILocation(line: 699, column: 18, scope: !5619)
!5624 = !DILocation(line: 699, column: 5, scope: !5619)
!5625 = !DILocation(line: 703, column: 5, scope: !5606)
!5626 = !DILocation(line: 702, column: 7, scope: !5606)
!5627 = !DILocation(line: 704, column: 13, scope: !5606)
!5628 = !DILocation(line: 704, column: 18, scope: !5606)
!5629 = !DILocation(line: 705, column: 13, scope: !5606)
!5630 = !DILocation(line: 705, column: 20, scope: !5606)
!5631 = !DILocation(line: 706, column: 13, scope: !5606)
!5632 = !DILocation(line: 706, column: 19, scope: !5606)
!5633 = !DILocation(line: 707, column: 29, scope: !5606)
!5634 = !DILocation(line: 707, column: 13, scope: !5606)
!5635 = !DILocation(line: 707, column: 27, scope: !5606)
!5636 = !DILocation(line: 708, column: 13, scope: !5606)
!5637 = !DILocation(line: 708, column: 19, scope: !5606)
!5638 = !DILocation(line: 709, column: 13, scope: !5606)
!5639 = !DILocation(line: 709, column: 22, scope: !5606)
!5640 = !DILocation(line: 711, column: 3, scope: !5606)
!5641 = !DILocation(line: 713, column: 1, scope: !5606)
!5642 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !597, file: !597, line: 1759, type: !4399, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5643)
!5643 = !{!5644}
!5644 = !DILocalVariable(name: "gs", arg: 1, scope: !5642, file: !597, line: 1759, type: !4378)
!5645 = !DILocation(line: 0, scope: !5642)
!5646 = !DILocation(line: 1763, column: 7, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5642, file: !597, line: 1763, column: 7)
!5648 = !DILocation(line: 1763, column: 27, scope: !5647)
!5649 = !DILocation(line: 1763, column: 7, scope: !5642)
!5650 = !DILocation(line: 1764, column: 12, scope: !5647)
!5651 = !DILocation(line: 1764, column: 5, scope: !5647)
!5652 = !DILocation(line: 0, scope: !5647)
!5653 = !DILocation(line: 1767, column: 1, scope: !5642)
!5654 = distinct !DISubprogram(name: "get_index_from_offset", scope: !3, file: !3, line: 961, type: !5655, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5657)
!5655 = !DISubroutineType(types: !5656)
!5656 = !{!866, !866, !744}
!5657 = !{!5658, !5659, !5660, !5661, !5662}
!5658 = !DILocalVariable(name: "offset", arg: 1, scope: !5654, file: !3, line: 961, type: !866)
!5659 = !DILocalVariable(name: "def_stmt", arg: 2, scope: !5654, file: !3, line: 961, type: !744)
!5660 = !DILocalVariable(name: "op1", scope: !5654, file: !3, line: 963, type: !866)
!5661 = !DILocalVariable(name: "op2", scope: !5654, file: !3, line: 963, type: !866)
!5662 = !DILocalVariable(name: "index", scope: !5654, file: !3, line: 963, type: !866)
!5663 = !DILocation(line: 969, column: 12, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 967, column: 7)
!5665 = !DILocation(line: 0, scope: !5654)
!5666 = !DILocation(line: 965, column: 7, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 965, column: 7)
!5668 = !DILocation(line: 965, column: 30, scope: !5667)
!5669 = !DILocation(line: 965, column: 7, scope: !5654)
!5670 = !DILocation(line: 967, column: 8, scope: !5664)
!5671 = !DILocation(line: 967, column: 40, scope: !5664)
!5672 = !DILocation(line: 967, column: 43, scope: !5664)
!5673 = !DILocation(line: 968, column: 7, scope: !5664)
!5674 = !DILocation(line: 968, column: 10, scope: !5664)
!5675 = !DILocation(line: 968, column: 52, scope: !5664)
!5676 = !DILocation(line: 967, column: 7, scope: !5654)
!5677 = !DILocation(line: 970, column: 7, scope: !5664)
!5678 = !DILocation(line: 971, column: 12, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 971, column: 12)
!5680 = !DILocation(line: 972, column: 5, scope: !5679)
!5681 = !DILocation(line: 972, column: 8, scope: !5679)
!5682 = !DILocation(line: 972, column: 42, scope: !5679)
!5683 = !DILocation(line: 971, column: 12, scope: !5664)
!5684 = !DILocation(line: 974, column: 13, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 973, column: 5)
!5686 = !DILocation(line: 975, column: 13, scope: !5685)
!5687 = !DILocation(line: 976, column: 11, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 976, column: 11)
!5689 = !DILocation(line: 976, column: 27, scope: !5688)
!5690 = !DILocation(line: 976, column: 42, scope: !5688)
!5691 = !DILocation(line: 976, column: 45, scope: !5688)
!5692 = !DILocation(line: 976, column: 61, scope: !5688)
!5693 = !DILocation(line: 976, column: 11, scope: !5685)
!5694 = !DILocation(line: 978, column: 15, scope: !5685)
!5695 = !DILocation(line: 979, column: 7, scope: !5685)
!5696 = !DILocation(line: 983, column: 1, scope: !5654)
!5697 = distinct !DISubprogram(name: "VEC_access_site_info_p_heap_alloc", scope: !3, file: !3, line: 245, type: !5698, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5700)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!2065, !677}
!5700 = !{!5701}
!5701 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5697, file: !3, line: 245, type: !677)
!5702 = !DILocation(line: 0, scope: !5697)
!5703 = !DILocation(line: 245, column: 1, scope: !5697)
!5704 = distinct !DISubprogram(name: "VEC_access_site_info_p_heap_safe_push", scope: !3, file: !3, line: 245, type: !5705, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5709)
!5705 = !DISubroutineType(types: !5706)
!5706 = !{!5707, !5708, !2077}
!5707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!5708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!5709 = !{!5710, !5711}
!5710 = !DILocalVariable(name: "vec_", arg: 1, scope: !5704, file: !3, line: 245, type: !5708)
!5711 = !DILocalVariable(name: "obj_", arg: 2, scope: !5704, file: !3, line: 245, type: !2077)
!5712 = !DILocation(line: 0, scope: !5704)
!5713 = !DILocation(line: 245, column: 1, scope: !5704)
!5714 = distinct !DISubprogram(name: "VEC_access_site_info_p_heap_reserve", scope: !3, file: !3, line: 245, type: !5715, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5717)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{!677, !5708, !677}
!5717 = !{!5718, !5719, !5720}
!5718 = !DILocalVariable(name: "vec_", arg: 1, scope: !5714, file: !3, line: 245, type: !5708)
!5719 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5714, file: !3, line: 245, type: !677)
!5720 = !DILocalVariable(name: "extend", scope: !5714, file: !3, line: 245, type: !677)
!5721 = !DILocation(line: 0, scope: !5714)
!5722 = !DILocation(line: 245, column: 1, scope: !5714)
!5723 = !DILocation(line: 245, column: 1, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 245, column: 1)
!5725 = distinct !DISubprogram(name: "VEC_access_site_info_p_base_quick_push", scope: !3, file: !3, line: 244, type: !5726, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5729)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!5707, !5728, !2077}
!5728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!5729 = !{!5730, !5731, !5732}
!5730 = !DILocalVariable(name: "vec_", arg: 1, scope: !5725, file: !3, line: 244, type: !5728)
!5731 = !DILocalVariable(name: "obj_", arg: 2, scope: !5725, file: !3, line: 244, type: !2077)
!5732 = !DILocalVariable(name: "slot_", scope: !5725, file: !3, line: 244, type: !5707)
!5733 = !DILocation(line: 0, scope: !5725)
!5734 = !DILocation(line: 244, column: 1, scope: !5725)
!5735 = distinct !DISubprogram(name: "VEC_access_site_info_p_base_space", scope: !3, file: !3, line: 244, type: !5736, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5738)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{!677, !5728, !677}
!5738 = !{!5739, !5740}
!5739 = !DILocalVariable(name: "vec_", arg: 1, scope: !5735, file: !3, line: 244, type: !5728)
!5740 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5735, file: !3, line: 244, type: !677)
!5741 = !DILocation(line: 0, scope: !5735)
!5742 = !DILocation(line: 244, column: 1, scope: !5735)
!5743 = distinct !DISubprogram(name: "VEC_access_site_info_p_base_iterate", scope: !3, file: !3, line: 244, type: !5744, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5748)
!5744 = !DISubroutineType(types: !5745)
!5745 = !{!677, !5746, !7, !5707}
!5746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5747, size: 64)
!5747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2070)
!5748 = !{!5749, !5750, !5751}
!5749 = !DILocalVariable(name: "vec_", arg: 1, scope: !5743, file: !3, line: 244, type: !5746)
!5750 = !DILocalVariable(name: "ix_", arg: 2, scope: !5743, file: !3, line: 244, type: !7)
!5751 = !DILocalVariable(name: "ptr", arg: 3, scope: !5743, file: !3, line: 244, type: !5707)
!5752 = !DILocation(line: 0, scope: !5743)
!5753 = !DILocation(line: 244, column: 1, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 244, column: 1)
!5755 = !DILocation(line: 244, column: 1, scope: !5743)
!5756 = !DILocation(line: 244, column: 1, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 244, column: 1)
!5758 = !DILocation(line: 244, column: 1, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 244, column: 1)
!5760 = !DILocation(line: 0, scope: !5754)
!5761 = distinct !DISubprogram(name: "VEC_access_site_info_p_heap_free", scope: !3, file: !3, line: 245, type: !5762, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5764)
!5762 = !DISubroutineType(types: !5763)
!5763 = !{null, !5708}
!5764 = !{!5765}
!5765 = !DILocalVariable(name: "vec_", arg: 1, scope: !5761, file: !3, line: 245, type: !5708)
!5766 = !DILocation(line: 0, scope: !5761)
!5767 = !DILocation(line: 245, column: 1, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 245, column: 1)
!5769 = !DILocation(line: 245, column: 1, scope: !5761)
!5770 = distinct !DISubprogram(name: "loop_containing_stmt", scope: !3075, file: !3075, line: 617, type: !5771, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5773)
!5771 = !DISubroutineType(types: !5772)
!5772 = !{!1314, !744}
!5773 = !{!5774, !5775}
!5774 = !DILocalVariable(name: "stmt", arg: 1, scope: !5770, file: !3075, line: 617, type: !744)
!5775 = !DILocalVariable(name: "bb", scope: !5770, file: !3075, line: 619, type: !1128)
!5776 = !DILocation(line: 0, scope: !5770)
!5777 = !DILocation(line: 619, column: 20, scope: !5770)
!5778 = !DILocation(line: 620, column: 8, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5770, file: !3075, line: 620, column: 7)
!5780 = !DILocation(line: 620, column: 7, scope: !5770)
!5781 = !DILocation(line: 623, column: 14, scope: !5770)
!5782 = !DILocation(line: 623, column: 3, scope: !5770)
!5783 = !DILocation(line: 624, column: 1, scope: !5770)
!5784 = distinct !DISubprogram(name: "gimple_bb", scope: !597, file: !597, line: 1112, type: !5785, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5787)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{!707, !4378}
!5787 = !{!5788}
!5788 = !DILocalVariable(name: "g", arg: 1, scope: !5784, file: !597, line: 1112, type: !4378)
!5789 = !DILocation(line: 0, scope: !5784)
!5790 = !DILocation(line: 1114, column: 20, scope: !5784)
!5791 = !DILocation(line: 1114, column: 3, scope: !5784)
!5792 = distinct !DISubprogram(name: "can_calculate_expr_before_stmt", scope: !3, file: !3, line: 1520, type: !5793, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5795)
!5793 = !DISubroutineType(types: !5794)
!5794 = !{!866, !866, !3117}
!5795 = !{!5796, !5797, !5798, !5799}
!5796 = !DILocalVariable(name: "expr", arg: 1, scope: !5792, file: !3, line: 1520, type: !866)
!5797 = !DILocalVariable(name: "visited", arg: 2, scope: !5792, file: !3, line: 1520, type: !3117)
!5798 = !DILocalVariable(name: "def_stmt", scope: !5792, file: !3, line: 1522, type: !744)
!5799 = !DILocalVariable(name: "res", scope: !5792, file: !3, line: 1523, type: !866)
!5800 = !DILocation(line: 0, scope: !5792)
!5801 = !DILocation(line: 1525, column: 11, scope: !5792)
!5802 = !DILocation(line: 1525, column: 3, scope: !5792)
!5803 = !DILocation(line: 1529, column: 11, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1529, column: 11)
!5805 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1526, column: 5)
!5806 = !DILocation(line: 1529, column: 11, scope: !5805)
!5807 = !DILocation(line: 1532, column: 7, scope: !5805)
!5808 = !DILocation(line: 1533, column: 18, scope: !5805)
!5809 = !DILocation(line: 1534, column: 13, scope: !5805)
!5810 = !DILocation(line: 1535, column: 27, scope: !5805)
!5811 = !DILocation(line: 1535, column: 7, scope: !5805)
!5812 = !DILocation(line: 1536, column: 7, scope: !5805)
!5813 = !DILocation(line: 1543, column: 7, scope: !5805)
!5814 = !DILocation(line: 0, scope: !5805)
!5815 = !DILocation(line: 1545, column: 1, scope: !5792)
!5816 = distinct !DISubprogram(name: "can_calculate_stmt_before_stmt", scope: !3, file: !3, line: 1448, type: !5817, scopeLine: 1449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5819)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{!866, !744, !3117}
!5819 = !{!5820, !5821, !5822, !5823, !5824, !5825, !5826, !5829, !5833}
!5820 = !DILocalVariable(name: "stmt", arg: 1, scope: !5816, file: !3, line: 1448, type: !744)
!5821 = !DILocalVariable(name: "visited", arg: 2, scope: !5816, file: !3, line: 1448, type: !3117)
!5822 = !DILocalVariable(name: "op1", scope: !5816, file: !3, line: 1450, type: !866)
!5823 = !DILocalVariable(name: "op2", scope: !5816, file: !3, line: 1450, type: !866)
!5824 = !DILocalVariable(name: "res", scope: !5816, file: !3, line: 1450, type: !866)
!5825 = !DILocalVariable(name: "code", scope: !5816, file: !3, line: 1451, type: !317)
!5826 = !DILocalVariable(name: "j", scope: !5827, file: !3, line: 1491, type: !1186)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1490, column: 7)
!5828 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 1454, column: 5)
!5829 = !DILocalVariable(name: "new_res", scope: !5830, file: !3, line: 1497, type: !866)
!5830 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 1496, column: 4)
!5831 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 1495, column: 2)
!5832 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 1495, column: 2)
!5833 = !DILocalVariable(name: "def", scope: !5830, file: !3, line: 1498, type: !866)
!5834 = !DILocation(line: 0, scope: !5816)
!5835 = !DILocation(line: 1453, column: 11, scope: !5816)
!5836 = !DILocation(line: 1453, column: 3, scope: !5816)
!5837 = !DILocation(line: 1495, column: 2, scope: !5832)
!5838 = !DILocation(line: 1456, column: 14, scope: !5828)
!5839 = !DILocation(line: 1457, column: 13, scope: !5828)
!5840 = !DILocation(line: 1459, column: 7, scope: !5828)
!5841 = !DILocation(line: 1466, column: 10, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1460, column: 2)
!5843 = !DILocation(line: 1467, column: 10, scope: !5842)
!5844 = !DILocation(line: 1468, column: 9, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1468, column: 8)
!5846 = !DILocation(line: 1468, column: 8, scope: !5842)
!5847 = !DILocation(line: 1470, column: 10, scope: !5842)
!5848 = !DILocation(line: 1471, column: 8, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1471, column: 8)
!5850 = !DILocation(line: 1471, column: 8, scope: !5842)
!5851 = !DILocation(line: 1472, column: 13, scope: !5849)
!5852 = !DILocation(line: 1472, column: 6, scope: !5849)
!5853 = !DILocation(line: 1476, column: 10, scope: !5842)
!5854 = !DILocation(line: 1477, column: 12, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1477, column: 8)
!5856 = !DILocation(line: 1477, column: 8, scope: !5842)
!5857 = !DILocation(line: 1478, column: 13, scope: !5855)
!5858 = !DILocation(line: 1478, column: 6, scope: !5855)
!5859 = !DILocation(line: 1483, column: 8, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1483, column: 8)
!5861 = !DILocation(line: 1483, column: 8, scope: !5842)
!5862 = !DILocation(line: 1484, column: 13, scope: !5860)
!5863 = !DILocation(line: 1484, column: 6, scope: !5860)
!5864 = !DILocation(line: 0, scope: !5827)
!5865 = !DILocation(line: 0, scope: !5832)
!5866 = !DILocation(line: 1495, column: 18, scope: !5831)
!5867 = !DILocation(line: 1495, column: 16, scope: !5831)
!5868 = !DILocation(line: 1498, column: 17, scope: !5830)
!5869 = !DILocation(line: 0, scope: !5830)
!5870 = !DILocation(line: 1500, column: 16, scope: !5830)
!5871 = !DILocation(line: 1501, column: 14, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1501, column: 10)
!5873 = !DILocation(line: 1501, column: 10, scope: !5830)
!5874 = !DILocation(line: 1503, column: 16, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 1503, column: 15)
!5876 = !DILocation(line: 1503, column: 24, scope: !5875)
!5877 = !DILocation(line: 1503, column: 28, scope: !5875)
!5878 = !DILocation(line: 1503, column: 15, scope: !5872)
!5879 = !DILocation(line: 1505, column: 4, scope: !5831)
!5880 = !DILocation(line: 1495, column: 47, scope: !5831)
!5881 = !DILocation(line: 1495, column: 2, scope: !5831)
!5882 = distinct !{!5882, !5837, !5883}
!5883 = !DILocation(line: 1505, column: 4, scope: !5832)
!5884 = !DILocation(line: 1512, column: 1, scope: !5816)
!5885 = distinct !DISubprogram(name: "gimple_expr_type", scope: !597, file: !597, line: 4366, type: !4399, scopeLine: 4367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5886)
!5886 = !{!5887, !5888, !5889}
!5887 = !DILocalVariable(name: "stmt", arg: 1, scope: !5885, file: !597, line: 4366, type: !4378)
!5888 = !DILocalVariable(name: "code", scope: !5885, file: !597, line: 4368, type: !596)
!5889 = !DILocalVariable(name: "type", scope: !5890, file: !597, line: 4372, type: !866)
!5890 = distinct !DILexicalBlock(scope: !5891, file: !597, line: 4371, column: 5)
!5891 = distinct !DILexicalBlock(scope: !5885, file: !597, line: 4370, column: 7)
!5892 = !DILocation(line: 0, scope: !5885)
!5893 = !DILocation(line: 4368, column: 27, scope: !5885)
!5894 = !DILocation(line: 4370, column: 29, scope: !5891)
!5895 = !DILocation(line: 4378, column: 9, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5890, file: !597, line: 4377, column: 11)
!5897 = !DILocation(line: 0, scope: !5890)
!5898 = !DILocation(line: 4378, column: 2, scope: !5896)
!5899 = !DILocation(line: 4380, column: 10, scope: !5896)
!5900 = !DILocation(line: 4380, column: 2, scope: !5896)
!5901 = !DILocation(line: 4383, column: 13, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5896, file: !597, line: 4381, column: 4)
!5903 = !DILocation(line: 4384, column: 6, scope: !5902)
!5904 = !DILocation(line: 4388, column: 13, scope: !5902)
!5905 = !DILocation(line: 4389, column: 6, scope: !5902)
!5906 = !DILocation(line: 4394, column: 12, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5891, file: !597, line: 4393, column: 12)
!5908 = !DILocation(line: 4394, column: 5, scope: !5907)
!5909 = !DILocation(line: 4396, column: 12, scope: !5907)
!5910 = !DILocation(line: 4396, column: 5, scope: !5907)
!5911 = !DILocation(line: 0, scope: !5891)
!5912 = !DILocation(line: 4397, column: 1, scope: !5885)
!5913 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !597, file: !597, line: 1966, type: !4399, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5914)
!5914 = !{!5915, !5916, !5917}
!5915 = !DILocalVariable(name: "gs", arg: 1, scope: !5913, file: !597, line: 1966, type: !4378)
!5916 = !DILocalVariable(name: "fn", scope: !5913, file: !597, line: 1968, type: !866)
!5917 = !DILocalVariable(name: "type", scope: !5913, file: !597, line: 1969, type: !866)
!5918 = !DILocation(line: 0, scope: !5913)
!5919 = !DILocation(line: 1968, column: 13, scope: !5913)
!5920 = !DILocation(line: 1969, column: 15, scope: !5913)
!5921 = !DILocation(line: 1972, column: 10, scope: !5913)
!5922 = !DILocation(line: 1976, column: 10, scope: !5913)
!5923 = !DILocation(line: 1976, column: 3, scope: !5913)
!5924 = distinct !DISubprogram(name: "sort_dim_hot_level", scope: !3, file: !3, line: 1982, type: !5925, scopeLine: 1983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5927)
!5925 = !DISubroutineType(types: !5926)
!5926 = !{null, !2063, !2089, !677}
!5927 = !{!5928, !5929, !5930, !5931, !5932, !5933, !5934}
!5928 = !DILocalVariable(name: "a", arg: 1, scope: !5924, file: !3, line: 1982, type: !2063)
!5929 = !DILocalVariable(name: "dim_map", arg: 2, scope: !5924, file: !3, line: 1982, type: !2089)
!5930 = !DILocalVariable(name: "n", arg: 3, scope: !5924, file: !3, line: 1982, type: !677)
!5931 = !DILocalVariable(name: "i", scope: !5924, file: !3, line: 1984, type: !677)
!5932 = !DILocalVariable(name: "j", scope: !5924, file: !3, line: 1984, type: !677)
!5933 = !DILocalVariable(name: "tmp1", scope: !5924, file: !3, line: 1984, type: !677)
!5934 = !DILocalVariable(name: "tmp", scope: !5924, file: !3, line: 1985, type: !1848)
!5935 = !DILocation(line: 0, scope: !5924)
!5936 = !DILocation(line: 0, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 1987, column: 3)
!5938 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1987, column: 3)
!5939 = !DILocation(line: 1987, column: 8, scope: !5938)
!5940 = !DILocation(line: 0, scope: !5938)
!5941 = !DILocation(line: 1987, column: 17, scope: !5937)
!5942 = !DILocation(line: 1987, column: 3, scope: !5938)
!5943 = !DILocation(line: 0, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 1989, column: 7)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 1989, column: 7)
!5946 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1988, column: 5)
!5947 = !DILocation(line: 1989, column: 7, scope: !5945)
!5948 = !DILocation(line: 0, scope: !5945)
!5949 = !DILocation(line: 1989, column: 21, scope: !5944)
!5950 = !DILocation(line: 1991, column: 12, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 1991, column: 8)
!5952 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 1990, column: 2)
!5953 = !DILocation(line: 1991, column: 8, scope: !5951)
!5954 = !DILocation(line: 1991, column: 19, scope: !5951)
!5955 = !DILocation(line: 1991, column: 17, scope: !5951)
!5956 = !DILocation(line: 1991, column: 8, scope: !5952)
!5957 = !DILocation(line: 1994, column: 13, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1992, column: 6)
!5959 = !DILocation(line: 1995, column: 17, scope: !5958)
!5960 = !DILocation(line: 1996, column: 15, scope: !5958)
!5961 = !DILocation(line: 1997, column: 21, scope: !5958)
!5962 = !DILocation(line: 1997, column: 19, scope: !5958)
!5963 = !DILocation(line: 1998, column: 23, scope: !5958)
!5964 = !DILocation(line: 1999, column: 6, scope: !5958)
!5965 = !DILocation(line: 1989, column: 7, scope: !5944)
!5966 = distinct !{!5966, !5947, !5967}
!5967 = !DILocation(line: 2000, column: 2, scope: !5945)
!5968 = !DILocation(line: 1987, column: 27, scope: !5937)
!5969 = !DILocation(line: 1987, column: 3, scope: !5937)
!5970 = distinct !{!5970, !5942, !5971}
!5971 = !DILocation(line: 2001, column: 5, scope: !5938)
!5972 = !DILocation(line: 2002, column: 1, scope: !5924)
!5973 = distinct !DISubprogram(name: "check_var_notmodified_p", scope: !3, file: !3, line: 1411, type: !5974, scopeLine: 1412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5976)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{!866, !1277, !2089, !681}
!5976 = !{!5977, !5978, !5979, !5980, !5981, !5982, !5983, !5984, !5985}
!5977 = !DILocalVariable(name: "tp", arg: 1, scope: !5973, file: !3, line: 1411, type: !1277)
!5978 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !5973, file: !3, line: 1411, type: !2089)
!5979 = !DILocalVariable(name: "data", arg: 3, scope: !5973, file: !3, line: 1411, type: !681)
!5980 = !DILocalVariable(name: "bb", scope: !5973, file: !3, line: 1413, type: !1128)
!5981 = !DILocalVariable(name: "t", scope: !5973, file: !3, line: 1414, type: !866)
!5982 = !DILocalVariable(name: "callback_data", scope: !5973, file: !3, line: 1415, type: !2102)
!5983 = !DILocalVariable(name: "fn", scope: !5973, file: !3, line: 1416, type: !866)
!5984 = !DILocalVariable(name: "gsi", scope: !5973, file: !3, line: 1417, type: !2947)
!5985 = !DILocalVariable(name: "stmt", scope: !5973, file: !3, line: 1418, type: !744)
!5986 = !DILocation(line: 0, scope: !5973)
!5987 = !DILocation(line: 1414, column: 12, scope: !5973)
!5988 = !DILocation(line: 1416, column: 28, scope: !5973)
!5989 = !DILocation(line: 1417, column: 3, scope: !5973)
!5990 = !DILocation(line: 1420, column: 7, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1420, column: 7)
!5992 = !DILocation(line: 1420, column: 21, scope: !5991)
!5993 = !DILocation(line: 1420, column: 33, scope: !5991)
!5994 = !DILocation(line: 1420, column: 50, scope: !5991)
!5995 = !DILocation(line: 1420, column: 7, scope: !5973)
!5996 = !DILocation(line: 1423, column: 3, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1423, column: 3)
!5998 = !DILocation(line: 0, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 1425, column: 5)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1424, column: 3)
!6001 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 1423, column: 3)
!6002 = !DILocation(line: 1423, column: 3, scope: !6001)
!6003 = !DILocation(line: 0, scope: !5997)
!6004 = !DILocation(line: 1425, column: 16, scope: !5999)
!6005 = !DILocation(line: 1425, column: 10, scope: !5999)
!6006 = !DILocation(line: 1425, column: 36, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 1425, column: 5)
!6008 = !DILocation(line: 1425, column: 35, scope: !6007)
!6009 = !DILocation(line: 1425, column: 5, scope: !5999)
!6010 = !DILocation(line: 1427, column: 9, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1426, column: 7)
!6012 = !DILocation(line: 1428, column: 7, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 1428, column: 6)
!6014 = !DILocation(line: 1428, column: 31, scope: !6013)
!6015 = !DILocation(line: 1428, column: 35, scope: !6013)
!6016 = !DILocation(line: 1428, column: 6, scope: !6011)
!6017 = !DILocation(line: 1430, column: 6, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 1430, column: 6)
!6019 = !DILocation(line: 1430, column: 28, scope: !6018)
!6020 = !DILocation(line: 1430, column: 6, scope: !6011)
!6021 = !DILocation(line: 1432, column: 21, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 1431, column: 4)
!6023 = !DILocation(line: 1432, column: 26, scope: !6022)
!6024 = !DILocation(line: 1433, column: 6, scope: !6022)
!6025 = !DILocation(line: 1425, column: 53, scope: !6007)
!6026 = !DILocation(line: 1425, column: 5, scope: !6007)
!6027 = distinct !{!6027, !6009, !6028}
!6028 = !DILocation(line: 1435, column: 7, scope: !5999)
!6029 = !DILocation(line: 0, scope: !6001)
!6030 = distinct !{!6030, !5996, !6031}
!6031 = !DILocation(line: 1436, column: 3, scope: !5997)
!6032 = !DILocation(line: 1437, column: 18, scope: !5973)
!6033 = !DILocation(line: 1438, column: 3, scope: !5973)
!6034 = !DILocation(line: 1439, column: 1, scope: !5973)
!6035 = distinct !DISubprogram(name: "first_imm_use_stmt", scope: !3075, file: !3075, line: 1058, type: !6036, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6038)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{!744, !4970, !866}
!6038 = !{!6039, !6040}
!6039 = !DILocalVariable(name: "imm", arg: 1, scope: !6035, file: !3075, line: 1058, type: !4970)
!6040 = !DILocalVariable(name: "var", arg: 2, scope: !6035, file: !3075, line: 1058, type: !866)
!6041 = !DILocation(line: 0, scope: !6035)
!6042 = !DILocation(line: 1060, column: 18, scope: !6035)
!6043 = !DILocation(line: 1060, column: 8, scope: !6035)
!6044 = !DILocation(line: 1060, column: 14, scope: !6035)
!6045 = !DILocation(line: 1061, column: 30, scope: !6035)
!6046 = !DILocation(line: 1061, column: 16, scope: !6035)
!6047 = !DILocation(line: 1062, column: 8, scope: !6035)
!6048 = !DILocation(line: 1062, column: 22, scope: !6035)
!6049 = !DILocation(line: 1067, column: 18, scope: !6035)
!6050 = !DILocation(line: 1067, column: 23, scope: !6035)
!6051 = !DILocation(line: 1068, column: 18, scope: !6035)
!6052 = !DILocation(line: 1068, column: 23, scope: !6035)
!6053 = !DILocation(line: 1069, column: 22, scope: !6035)
!6054 = !DILocation(line: 1069, column: 27, scope: !6035)
!6055 = !DILocation(line: 1070, column: 18, scope: !6035)
!6056 = !DILocation(line: 1070, column: 22, scope: !6035)
!6057 = !DILocation(line: 1072, column: 7, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6035, file: !3075, line: 1072, column: 7)
!6059 = !DILocation(line: 1072, column: 7, scope: !6035)
!6060 = !DILocation(line: 1075, column: 30, scope: !6035)
!6061 = !DILocation(line: 1075, column: 3, scope: !6035)
!6062 = !DILocation(line: 1077, column: 10, scope: !6035)
!6063 = !DILocation(line: 1077, column: 3, scope: !6035)
!6064 = !DILocation(line: 1078, column: 1, scope: !6035)
!6065 = distinct !DISubprogram(name: "end_imm_use_stmt_p", scope: !3075, file: !3075, line: 969, type: !4987, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6066)
!6066 = !{!6067}
!6067 = !DILocalVariable(name: "imm", arg: 1, scope: !6065, file: !3075, line: 969, type: !4989)
!6068 = !DILocation(line: 0, scope: !6065)
!6069 = !DILocation(line: 971, column: 16, scope: !6065)
!6070 = !DILocation(line: 971, column: 32, scope: !6065)
!6071 = !DILocation(line: 971, column: 24, scope: !6065)
!6072 = !DILocation(line: 971, column: 10, scope: !6065)
!6073 = !DILocation(line: 971, column: 3, scope: !6065)
!6074 = distinct !DISubprogram(name: "first_imm_use_on_stmt", scope: !3075, file: !3075, line: 1101, type: !5359, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6075)
!6075 = !{!6076}
!6076 = !DILocalVariable(name: "imm", arg: 1, scope: !6074, file: !3075, line: 1101, type: !4970)
!6077 = !DILocation(line: 0, scope: !6074)
!6078 = !DILocation(line: 1103, column: 29, scope: !6074)
!6079 = !DILocation(line: 1103, column: 38, scope: !6074)
!6080 = !DILocation(line: 1103, column: 8, scope: !6074)
!6081 = !DILocation(line: 1103, column: 22, scope: !6074)
!6082 = !DILocation(line: 1104, column: 3, scope: !6074)
!6083 = distinct !DISubprogram(name: "end_imm_use_on_stmt_p", scope: !3075, file: !3075, line: 1110, type: !4987, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6084)
!6084 = !{!6085}
!6085 = !DILocalVariable(name: "imm", arg: 1, scope: !6083, file: !3075, line: 1110, type: !4989)
!6086 = !DILocation(line: 0, scope: !6083)
!6087 = !DILocation(line: 1112, column: 16, scope: !6083)
!6088 = !DILocation(line: 1112, column: 34, scope: !6083)
!6089 = !DILocation(line: 1112, column: 24, scope: !6083)
!6090 = !DILocation(line: 1112, column: 10, scope: !6083)
!6091 = !DILocation(line: 1112, column: 3, scope: !6083)
!6092 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !3075, file: !3075, line: 233, type: !6093, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6095)
!6093 = !DISubroutineType(types: !6094)
!6094 = !{null, !2097, !866}
!6095 = !{!6096, !6097}
!6096 = !DILocalVariable(name: "use", arg: 1, scope: !6092, file: !3075, line: 233, type: !2097)
!6097 = !DILocalVariable(name: "val", arg: 2, scope: !6092, file: !3075, line: 233, type: !866)
!6098 = !DILocation(line: 0, scope: !6092)
!6099 = !DILocation(line: 235, column: 3, scope: !6092)
!6100 = !DILocation(line: 236, column: 10, scope: !6092)
!6101 = !DILocation(line: 236, column: 15, scope: !6092)
!6102 = !DILocation(line: 237, column: 3, scope: !6092)
!6103 = !DILocation(line: 238, column: 1, scope: !6092)
!6104 = distinct !DISubprogram(name: "next_imm_use_on_stmt", scope: !3075, file: !3075, line: 1118, type: !5359, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6105)
!6105 = !{!6106}
!6106 = !DILocalVariable(name: "imm", arg: 1, scope: !6104, file: !3075, line: 1118, type: !4970)
!6107 = !DILocation(line: 0, scope: !6104)
!6108 = !DILocation(line: 1120, column: 23, scope: !6104)
!6109 = !DILocation(line: 1120, column: 16, scope: !6104)
!6110 = !DILocation(line: 1121, column: 7, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6104, file: !3075, line: 1121, column: 7)
!6112 = !DILocation(line: 1121, column: 7, scope: !6104)
!6113 = !DILocation(line: 1125, column: 33, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6111, file: !3075, line: 1124, column: 5)
!6115 = !DILocation(line: 1125, column: 42, scope: !6114)
!6116 = !DILocation(line: 1125, column: 26, scope: !6114)
!6117 = !DILocation(line: 1126, column: 7, scope: !6114)
!6118 = !DILocation(line: 0, scope: !6111)
!6119 = !DILocation(line: 1128, column: 1, scope: !6104)
!6120 = distinct !DISubprogram(name: "next_imm_use_stmt", scope: !3075, file: !3075, line: 1083, type: !6121, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6123)
!6121 = !DISubroutineType(types: !6122)
!6122 = !{!744, !4970}
!6123 = !{!6124}
!6124 = !DILocalVariable(name: "imm", arg: 1, scope: !6120, file: !3075, line: 1083, type: !4970)
!6125 = !DILocation(line: 0, scope: !6120)
!6126 = !DILocation(line: 1085, column: 33, scope: !6120)
!6127 = !DILocation(line: 1085, column: 16, scope: !6120)
!6128 = !DILocation(line: 1086, column: 7, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6120, file: !3075, line: 1086, column: 7)
!6130 = !DILocation(line: 1086, column: 7, scope: !6120)
!6131 = !DILocation(line: 1088, column: 26, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !3075, line: 1088, column: 11)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !3075, line: 1087, column: 5)
!6134 = !DILocation(line: 1088, column: 31, scope: !6132)
!6135 = !DILocation(line: 1088, column: 11, scope: !6133)
!6136 = !DILocation(line: 1089, column: 24, scope: !6132)
!6137 = !DILocation(line: 1089, column: 2, scope: !6132)
!6138 = !DILocation(line: 1093, column: 30, scope: !6120)
!6139 = !DILocation(line: 1093, column: 3, scope: !6120)
!6140 = !DILocation(line: 1094, column: 10, scope: !6120)
!6141 = !DILocation(line: 1094, column: 3, scope: !6120)
!6142 = !DILocation(line: 1095, column: 1, scope: !6120)
!6143 = distinct !DISubprogram(name: "link_use_stmts_after", scope: !3075, file: !3075, line: 1018, type: !6144, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6146)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{null, !2097, !4970}
!6146 = !{!6147, !6148, !6149, !6150, !6151, !6152, !6153, !6154}
!6147 = !DILocalVariable(name: "head", arg: 1, scope: !6143, file: !3075, line: 1018, type: !2097)
!6148 = !DILocalVariable(name: "imm", arg: 2, scope: !6143, file: !3075, line: 1018, type: !4970)
!6149 = !DILocalVariable(name: "use_p", scope: !6143, file: !3075, line: 1020, type: !2097)
!6150 = !DILocalVariable(name: "last_p", scope: !6143, file: !3075, line: 1021, type: !2097)
!6151 = !DILocalVariable(name: "head_stmt", scope: !6143, file: !3075, line: 1022, type: !744)
!6152 = !DILocalVariable(name: "use", scope: !6143, file: !3075, line: 1023, type: !866)
!6153 = !DILocalVariable(name: "op_iter", scope: !6143, file: !3075, line: 1024, type: !3968)
!6154 = !DILocalVariable(name: "flag", scope: !6143, file: !3075, line: 1025, type: !677)
!6155 = !DILocation(line: 0, scope: !6143)
!6156 = !DILocation(line: 1022, column: 22, scope: !6143)
!6157 = !DILocation(line: 1023, column: 14, scope: !6143)
!6158 = !DILocation(line: 1024, column: 3, scope: !6143)
!6159 = !DILocation(line: 1028, column: 11, scope: !6143)
!6160 = !DILocation(line: 1030, column: 7, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6143, file: !3075, line: 1030, column: 7)
!6162 = !DILocation(line: 1030, column: 31, scope: !6161)
!6163 = !DILocation(line: 1030, column: 7, scope: !6143)
!6164 = !DILocation(line: 1032, column: 7, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !3075, line: 1032, column: 7)
!6166 = distinct !DILexicalBlock(scope: !6161, file: !3075, line: 1031, column: 5)
!6167 = !DILocation(line: 0, scope: !6165)
!6168 = !DILocation(line: 1032, column: 7, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6165, file: !3075, line: 1032, column: 7)
!6170 = !DILocation(line: 1033, column: 6, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6169, file: !3075, line: 1033, column: 6)
!6172 = !DILocation(line: 1033, column: 27, scope: !6171)
!6173 = !DILocation(line: 1033, column: 6, scope: !6169)
!6174 = !DILocation(line: 1034, column: 13, scope: !6171)
!6175 = !DILocation(line: 1034, column: 4, scope: !6171)
!6176 = distinct !{!6176, !6164, !6177}
!6177 = !DILocation(line: 1034, column: 53, scope: !6165)
!6178 = !DILocation(line: 1038, column: 11, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6161, file: !3075, line: 1037, column: 5)
!6180 = !DILocation(line: 1040, column: 4, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !3075, line: 1040, column: 4)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !3075, line: 1039, column: 2)
!6183 = distinct !DILexicalBlock(scope: !6179, file: !3075, line: 1038, column: 11)
!6184 = !DILocation(line: 0, scope: !6181)
!6185 = !DILocation(line: 1040, column: 4, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6181, file: !3075, line: 1040, column: 4)
!6187 = !DILocation(line: 1041, column: 10, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6186, file: !3075, line: 1041, column: 10)
!6189 = !DILocation(line: 1041, column: 31, scope: !6188)
!6190 = !DILocation(line: 1041, column: 10, scope: !6186)
!6191 = !DILocation(line: 1042, column: 17, scope: !6188)
!6192 = !DILocation(line: 1042, column: 8, scope: !6188)
!6193 = distinct !{!6193, !6180, !6194}
!6194 = !DILocation(line: 1042, column: 57, scope: !6181)
!6195 = !DILocation(line: 1044, column: 25, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6183, file: !3075, line: 1044, column: 16)
!6197 = !DILocation(line: 1044, column: 53, scope: !6196)
!6198 = !DILocation(line: 1044, column: 16, scope: !6183)
!6199 = !DILocation(line: 1046, column: 8, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !3075, line: 1046, column: 8)
!6201 = distinct !DILexicalBlock(scope: !6196, file: !3075, line: 1045, column: 2)
!6202 = !DILocation(line: 1046, column: 29, scope: !6200)
!6203 = !DILocation(line: 1046, column: 8, scope: !6201)
!6204 = !DILocation(line: 1047, column: 15, scope: !6200)
!6205 = !DILocation(line: 1047, column: 6, scope: !6200)
!6206 = !DILocation(line: 1051, column: 22, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6143, file: !3075, line: 1051, column: 7)
!6208 = !DILocation(line: 1021, column: 17, scope: !6143)
!6209 = !DILocation(line: 1051, column: 27, scope: !6207)
!6210 = !DILocation(line: 1051, column: 7, scope: !6143)
!6211 = !DILocation(line: 1052, column: 27, scope: !6207)
!6212 = !DILocation(line: 1052, column: 5, scope: !6207)
!6213 = !DILocation(line: 1053, column: 32, scope: !6143)
!6214 = !DILocation(line: 1053, column: 3, scope: !6143)
!6215 = !DILocation(line: 1054, column: 1, scope: !6143)
!6216 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !3075, file: !3075, line: 910, type: !6217, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6220)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!2097, !6219, !744, !677}
!6219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!6220 = !{!6221, !6222, !6223, !6224, !6225}
!6221 = !DILocalVariable(name: "ptr", arg: 1, scope: !6216, file: !3075, line: 910, type: !6219)
!6222 = !DILocalVariable(name: "phi", arg: 2, scope: !6216, file: !3075, line: 910, type: !744)
!6223 = !DILocalVariable(name: "flags", arg: 3, scope: !6216, file: !3075, line: 910, type: !677)
!6224 = !DILocalVariable(name: "phi_def", scope: !6216, file: !3075, line: 912, type: !866)
!6225 = !DILocalVariable(name: "comp", scope: !6216, file: !3075, line: 913, type: !677)
!6226 = !DILocation(line: 0, scope: !6216)
!6227 = !DILocation(line: 912, column: 18, scope: !6216)
!6228 = !DILocation(line: 915, column: 3, scope: !6216)
!6229 = !DILocation(line: 916, column: 8, scope: !6216)
!6230 = !DILocation(line: 916, column: 13, scope: !6216)
!6231 = !DILocation(line: 918, column: 3, scope: !6216)
!6232 = !DILocation(line: 920, column: 11, scope: !6216)
!6233 = !DILocation(line: 923, column: 14, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6216, file: !3075, line: 923, column: 7)
!6235 = !DILocation(line: 923, column: 22, scope: !6234)
!6236 = !DILocation(line: 923, column: 7, scope: !6216)
!6237 = !DILocation(line: 925, column: 17, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6234, file: !3075, line: 924, column: 5)
!6239 = !DILocation(line: 926, column: 7, scope: !6238)
!6240 = !DILocation(line: 929, column: 8, scope: !6216)
!6241 = !DILocation(line: 929, column: 17, scope: !6216)
!6242 = !DILocation(line: 930, column: 18, scope: !6216)
!6243 = !DILocation(line: 930, column: 8, scope: !6216)
!6244 = !DILocation(line: 930, column: 16, scope: !6216)
!6245 = !DILocation(line: 931, column: 8, scope: !6216)
!6246 = !DILocation(line: 931, column: 18, scope: !6216)
!6247 = !DILocation(line: 932, column: 10, scope: !6216)
!6248 = !DILocation(line: 932, column: 3, scope: !6216)
!6249 = !DILocation(line: 933, column: 1, scope: !6216)
!6250 = distinct !DISubprogram(name: "op_iter_done", scope: !3075, file: !3075, line: 652, type: !6251, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6255)
!6251 = !DISubroutineType(types: !6252)
!6252 = !{!676, !6253}
!6253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6254, size: 64)
!6254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3968)
!6255 = !{!6256}
!6256 = !DILocalVariable(name: "ptr", arg: 1, scope: !6250, file: !3075, line: 652, type: !6253)
!6257 = !DILocation(line: 0, scope: !6250)
!6258 = !DILocation(line: 654, column: 15, scope: !6250)
!6259 = !DILocation(line: 654, column: 3, scope: !6250)
!6260 = distinct !DISubprogram(name: "move_use_after_head", scope: !3075, file: !3075, line: 990, type: !6261, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6263)
!6261 = !DISubroutineType(types: !6262)
!6262 = !{!2097, !2097, !2097, !2097}
!6263 = !{!6264, !6265, !6266}
!6264 = !DILocalVariable(name: "use_p", arg: 1, scope: !6260, file: !3075, line: 990, type: !2097)
!6265 = !DILocalVariable(name: "head", arg: 2, scope: !6260, file: !3075, line: 990, type: !2097)
!6266 = !DILocalVariable(name: "last_p", arg: 3, scope: !6260, file: !3075, line: 991, type: !2097)
!6267 = !DILocation(line: 0, scope: !6260)
!6268 = !DILocation(line: 997, column: 13, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6260, file: !3075, line: 997, column: 7)
!6270 = !DILocation(line: 997, column: 7, scope: !6260)
!6271 = !DILocation(line: 1000, column: 19, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6273, file: !3075, line: 1000, column: 11)
!6273 = distinct !DILexicalBlock(scope: !6269, file: !3075, line: 998, column: 5)
!6274 = !DILocation(line: 1000, column: 24, scope: !6272)
!6275 = !DILocation(line: 1000, column: 11, scope: !6273)
!6276 = !DILocation(line: 1005, column: 4, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6272, file: !3075, line: 1003, column: 2)
!6278 = !DILocation(line: 1006, column: 4, scope: !6277)
!6279 = !DILocation(line: 1010, column: 3, scope: !6260)
!6280 = distinct !DISubprogram(name: "op_iter_next_use", scope: !3075, file: !3075, line: 659, type: !6281, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6283)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!2097, !6219}
!6283 = !{!6284, !6285}
!6284 = !DILocalVariable(name: "ptr", arg: 1, scope: !6280, file: !3075, line: 659, type: !6219)
!6285 = !DILocalVariable(name: "use_p", scope: !6280, file: !3075, line: 661, type: !2097)
!6286 = !DILocation(line: 0, scope: !6280)
!6287 = !DILocation(line: 665, column: 12, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6280, file: !3075, line: 665, column: 7)
!6289 = !DILocation(line: 665, column: 7, scope: !6288)
!6290 = !DILocation(line: 665, column: 7, scope: !6280)
!6291 = !DILocation(line: 667, column: 15, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6288, file: !3075, line: 666, column: 5)
!6293 = !DILocation(line: 668, column: 30, scope: !6292)
!6294 = !DILocation(line: 668, column: 17, scope: !6292)
!6295 = !DILocation(line: 669, column: 7, scope: !6292)
!6296 = !DILocation(line: 671, column: 12, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6280, file: !3075, line: 671, column: 7)
!6298 = !DILocation(line: 671, column: 25, scope: !6297)
!6299 = !DILocation(line: 671, column: 18, scope: !6297)
!6300 = !DILocation(line: 671, column: 7, scope: !6280)
!6301 = !DILocation(line: 673, column: 14, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6297, file: !3075, line: 672, column: 5)
!6303 = !DILocation(line: 673, column: 7, scope: !6302)
!6304 = !DILocation(line: 675, column: 8, scope: !6280)
!6305 = !DILocation(line: 675, column: 13, scope: !6280)
!6306 = !DILocation(line: 676, column: 3, scope: !6280)
!6307 = !DILocation(line: 677, column: 1, scope: !6280)
!6308 = distinct !DISubprogram(name: "op_iter_init_use", scope: !3075, file: !3075, line: 768, type: !6217, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6309)
!6309 = !{!6310, !6311, !6312}
!6310 = !DILocalVariable(name: "ptr", arg: 1, scope: !6308, file: !3075, line: 768, type: !6219)
!6311 = !DILocalVariable(name: "stmt", arg: 2, scope: !6308, file: !3075, line: 768, type: !744)
!6312 = !DILocalVariable(name: "flags", arg: 3, scope: !6308, file: !3075, line: 768, type: !677)
!6313 = !DILocation(line: 0, scope: !6308)
!6314 = !DILocation(line: 770, column: 3, scope: !6308)
!6315 = !DILocation(line: 772, column: 3, scope: !6308)
!6316 = !DILocation(line: 773, column: 8, scope: !6308)
!6317 = !DILocation(line: 773, column: 18, scope: !6308)
!6318 = !DILocation(line: 774, column: 10, scope: !6308)
!6319 = !DILocation(line: 774, column: 3, scope: !6308)
!6320 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !597, file: !597, line: 1334, type: !6321, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6323)
!6321 = !DISubroutineType(types: !6322)
!6322 = !{!2097, !4378}
!6323 = !{!6324, !6325}
!6324 = !DILocalVariable(name: "g", arg: 1, scope: !6320, file: !597, line: 1334, type: !4378)
!6325 = !DILocalVariable(name: "ops", scope: !6320, file: !597, line: 1336, type: !1279)
!6326 = !DILocation(line: 0, scope: !6320)
!6327 = !DILocation(line: 1337, column: 8, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6320, file: !597, line: 1337, column: 7)
!6329 = !DILocation(line: 1337, column: 7, scope: !6320)
!6330 = !DILocation(line: 1339, column: 25, scope: !6320)
!6331 = !DILocation(line: 1340, column: 7, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6320, file: !597, line: 1340, column: 7)
!6333 = !DILocation(line: 1341, column: 7, scope: !6332)
!6334 = !DILocation(line: 1341, column: 28, scope: !6332)
!6335 = !DILocation(line: 1341, column: 49, scope: !6332)
!6336 = !DILocation(line: 1341, column: 32, scope: !6332)
!6337 = !DILocation(line: 1342, column: 12, scope: !6332)
!6338 = !DILocation(line: 1340, column: 7, scope: !6320)
!6339 = !DILocation(line: 1344, column: 1, scope: !6320)
!6340 = distinct !DISubprogram(name: "delink_imm_use", scope: !3075, file: !3075, line: 188, type: !6341, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6343)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{null, !2098}
!6343 = !{!6344}
!6344 = !DILocalVariable(name: "linknode", arg: 1, scope: !6340, file: !3075, line: 188, type: !2098)
!6345 = !DILocation(line: 0, scope: !6340)
!6346 = !DILocation(line: 191, column: 17, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6340, file: !3075, line: 191, column: 7)
!6348 = !DILocation(line: 191, column: 22, scope: !6347)
!6349 = !DILocation(line: 191, column: 7, scope: !6340)
!6350 = !DILocation(line: 194, column: 36, scope: !6340)
!6351 = !DILocation(line: 194, column: 19, scope: !6340)
!6352 = !DILocation(line: 194, column: 24, scope: !6340)
!6353 = !DILocation(line: 195, column: 36, scope: !6340)
!6354 = !DILocation(line: 195, column: 13, scope: !6340)
!6355 = !DILocation(line: 195, column: 24, scope: !6340)
!6356 = !DILocation(line: 196, column: 18, scope: !6340)
!6357 = !DILocation(line: 197, column: 18, scope: !6340)
!6358 = !DILocation(line: 198, column: 1, scope: !6340)
!6359 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !3075, file: !3075, line: 202, type: !6360, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6362)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{null, !2098, !2098}
!6362 = !{!6363, !6364}
!6363 = !DILocalVariable(name: "linknode", arg: 1, scope: !6359, file: !3075, line: 202, type: !2098)
!6364 = !DILocalVariable(name: "list", arg: 2, scope: !6359, file: !3075, line: 202, type: !2098)
!6365 = !DILocation(line: 0, scope: !6359)
!6366 = !DILocation(line: 206, column: 13, scope: !6359)
!6367 = !DILocation(line: 206, column: 18, scope: !6359)
!6368 = !DILocation(line: 207, column: 26, scope: !6359)
!6369 = !DILocation(line: 207, column: 13, scope: !6359)
!6370 = !DILocation(line: 207, column: 18, scope: !6359)
!6371 = !DILocation(line: 208, column: 9, scope: !6359)
!6372 = !DILocation(line: 208, column: 15, scope: !6359)
!6373 = !DILocation(line: 208, column: 20, scope: !6359)
!6374 = !DILocation(line: 209, column: 14, scope: !6359)
!6375 = !DILocation(line: 210, column: 1, scope: !6359)
!6376 = distinct !DISubprogram(name: "gimple_phi_result", scope: !597, file: !597, line: 3071, type: !4399, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6377)
!6377 = !{!6378}
!6378 = !DILocalVariable(name: "gs", arg: 1, scope: !6376, file: !597, line: 3071, type: !4378)
!6379 = !DILocation(line: 0, scope: !6376)
!6380 = !DILocation(line: 3074, column: 25, scope: !6376)
!6381 = !DILocation(line: 3074, column: 3, scope: !6376)
!6382 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !3075, file: !3075, line: 729, type: !6383, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6385)
!6383 = !DISubroutineType(types: !6384)
!6384 = !{null, !6219}
!6385 = !{!6386}
!6386 = !DILocalVariable(name: "ptr", arg: 1, scope: !6382, file: !3075, line: 729, type: !6219)
!6387 = !DILocation(line: 0, scope: !6382)
!6388 = !DILocation(line: 731, column: 8, scope: !6382)
!6389 = !DILocation(line: 731, column: 13, scope: !6382)
!6390 = !DILocation(line: 732, column: 8, scope: !6382)
!6391 = !DILocation(line: 732, column: 13, scope: !6382)
!6392 = !DILocation(line: 733, column: 8, scope: !6382)
!6393 = !DILocation(line: 733, column: 18, scope: !6382)
!6394 = !DILocation(line: 734, column: 8, scope: !6382)
!6395 = !DILocation(line: 734, column: 14, scope: !6382)
!6396 = !DILocation(line: 735, column: 8, scope: !6382)
!6397 = !DILocation(line: 735, column: 16, scope: !6382)
!6398 = !DILocation(line: 736, column: 8, scope: !6382)
!6399 = !DILocation(line: 736, column: 17, scope: !6382)
!6400 = !DILocation(line: 737, column: 8, scope: !6382)
!6401 = !DILocation(line: 737, column: 13, scope: !6382)
!6402 = !DILocation(line: 738, column: 1, scope: !6382)
!6403 = distinct !DISubprogram(name: "op_iter_init", scope: !3075, file: !3075, line: 742, type: !6404, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6406)
!6404 = !DISubroutineType(types: !6405)
!6405 = !{null, !6219, !744, !677}
!6406 = !{!6407, !6408, !6409}
!6407 = !DILocalVariable(name: "ptr", arg: 1, scope: !6403, file: !3075, line: 742, type: !6219)
!6408 = !DILocalVariable(name: "stmt", arg: 2, scope: !6403, file: !3075, line: 742, type: !744)
!6409 = !DILocalVariable(name: "flags", arg: 3, scope: !6403, file: !3075, line: 742, type: !677)
!6410 = !DILocation(line: 0, scope: !6403)
!6411 = !DILocation(line: 746, column: 3, scope: !6403)
!6412 = !DILocation(line: 748, column: 22, scope: !6403)
!6413 = !DILocation(line: 748, column: 15, scope: !6403)
!6414 = !DILocation(line: 748, column: 52, scope: !6403)
!6415 = !DILocation(line: 748, column: 8, scope: !6403)
!6416 = !DILocation(line: 748, column: 13, scope: !6403)
!6417 = !DILocation(line: 749, column: 15, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6403, file: !3075, line: 749, column: 7)
!6419 = !DILocation(line: 750, column: 7, scope: !6418)
!6420 = !DILocation(line: 750, column: 10, scope: !6418)
!6421 = !DILocation(line: 751, column: 7, scope: !6418)
!6422 = !DILocation(line: 751, column: 10, scope: !6418)
!6423 = !DILocation(line: 751, column: 29, scope: !6418)
!6424 = !DILocation(line: 749, column: 7, scope: !6403)
!6425 = !DILocation(line: 752, column: 22, scope: !6418)
!6426 = !DILocation(line: 752, column: 28, scope: !6418)
!6427 = !DILocation(line: 752, column: 15, scope: !6418)
!6428 = !DILocation(line: 752, column: 5, scope: !6418)
!6429 = !DILocation(line: 753, column: 22, scope: !6403)
!6430 = !DILocation(line: 753, column: 15, scope: !6403)
!6431 = !DILocation(line: 753, column: 52, scope: !6403)
!6432 = !DILocation(line: 753, column: 8, scope: !6403)
!6433 = !DILocation(line: 753, column: 13, scope: !6403)
!6434 = !DILocation(line: 754, column: 15, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6403, file: !3075, line: 754, column: 7)
!6436 = !DILocation(line: 755, column: 7, scope: !6435)
!6437 = !DILocation(line: 755, column: 10, scope: !6435)
!6438 = !DILocation(line: 756, column: 7, scope: !6435)
!6439 = !DILocation(line: 756, column: 10, scope: !6435)
!6440 = !DILocation(line: 756, column: 29, scope: !6435)
!6441 = !DILocation(line: 754, column: 7, scope: !6403)
!6442 = !DILocation(line: 757, column: 22, scope: !6435)
!6443 = !DILocation(line: 757, column: 28, scope: !6435)
!6444 = !DILocation(line: 757, column: 15, scope: !6435)
!6445 = !DILocation(line: 757, column: 5, scope: !6435)
!6446 = !DILocation(line: 758, column: 8, scope: !6403)
!6447 = !DILocation(line: 758, column: 13, scope: !6403)
!6448 = !DILocation(line: 760, column: 8, scope: !6403)
!6449 = !DILocation(line: 760, column: 14, scope: !6403)
!6450 = !DILocation(line: 761, column: 8, scope: !6403)
!6451 = !DILocation(line: 761, column: 16, scope: !6403)
!6452 = !DILocation(line: 762, column: 8, scope: !6403)
!6453 = !DILocation(line: 762, column: 17, scope: !6403)
!6454 = !DILocation(line: 763, column: 1, scope: !6403)
!6455 = distinct !DISubprogram(name: "gimple_def_ops", scope: !597, file: !597, line: 1292, type: !6456, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6458)
!6456 = !DISubroutineType(types: !6457)
!6457 = !{!1272, !4378}
!6458 = !{!6459}
!6459 = !DILocalVariable(name: "g", arg: 1, scope: !6455, file: !597, line: 1292, type: !4378)
!6460 = !DILocation(line: 0, scope: !6455)
!6461 = !DILocation(line: 1294, column: 8, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6455, file: !597, line: 1294, column: 7)
!6463 = !DILocation(line: 1294, column: 7, scope: !6455)
!6464 = !DILocation(line: 1296, column: 26, scope: !6455)
!6465 = !DILocation(line: 1296, column: 3, scope: !6455)
!6466 = !DILocation(line: 1297, column: 1, scope: !6455)
!6467 = distinct !DISubprogram(name: "gimple_vdef", scope: !597, file: !597, line: 1375, type: !4399, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6468)
!6468 = !{!6469}
!6469 = !DILocalVariable(name: "g", arg: 1, scope: !6467, file: !597, line: 1375, type: !4378)
!6470 = !DILocation(line: 0, scope: !6467)
!6471 = !DILocation(line: 1377, column: 8, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6467, file: !597, line: 1377, column: 7)
!6473 = !DILocation(line: 1377, column: 7, scope: !6467)
!6474 = !DILocation(line: 1379, column: 23, scope: !6467)
!6475 = !DILocation(line: 1379, column: 3, scope: !6467)
!6476 = !DILocation(line: 1380, column: 1, scope: !6467)
!6477 = distinct !DISubprogram(name: "gimple_use_ops", scope: !597, file: !597, line: 1313, type: !6478, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6480)
!6478 = !DISubroutineType(types: !6479)
!6479 = !{!1279, !4378}
!6480 = !{!6481}
!6481 = !DILocalVariable(name: "g", arg: 1, scope: !6477, file: !597, line: 1313, type: !4378)
!6482 = !DILocation(line: 0, scope: !6477)
!6483 = !DILocation(line: 1315, column: 8, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6477, file: !597, line: 1315, column: 7)
!6485 = !DILocation(line: 1315, column: 7, scope: !6477)
!6486 = !DILocation(line: 1317, column: 26, scope: !6477)
!6487 = !DILocation(line: 1317, column: 3, scope: !6477)
!6488 = !DILocation(line: 1318, column: 1, scope: !6477)
!6489 = distinct !DISubprogram(name: "gimple_vuse", scope: !597, file: !597, line: 1365, type: !4399, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6490)
!6490 = !{!6491}
!6491 = !DILocalVariable(name: "g", arg: 1, scope: !6489, file: !597, line: 1365, type: !4378)
!6492 = !DILocation(line: 0, scope: !6489)
!6493 = !DILocation(line: 1367, column: 8, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6489, file: !597, line: 1367, column: 7)
!6495 = !DILocation(line: 1367, column: 7, scope: !6489)
!6496 = !DILocation(line: 1369, column: 23, scope: !6489)
!6497 = !DILocation(line: 1369, column: 3, scope: !6489)
!6498 = !DILocation(line: 1370, column: 1, scope: !6489)
!6499 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !597, file: !597, line: 1283, type: !4407, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6500)
!6500 = !{!6501}
!6501 = !DILocalVariable(name: "g", arg: 1, scope: !6499, file: !597, line: 1283, type: !4378)
!6502 = !DILocation(line: 0, scope: !6499)
!6503 = !DILocation(line: 1285, column: 10, scope: !6499)
!6504 = !DILocation(line: 1285, column: 26, scope: !6499)
!6505 = !DILocation(line: 1285, column: 43, scope: !6499)
!6506 = !DILocation(line: 1285, column: 46, scope: !6499)
!6507 = !DILocation(line: 1285, column: 62, scope: !6499)
!6508 = !DILocation(line: 1285, column: 3, scope: !6499)
!6509 = distinct !DISubprogram(name: "link_imm_use", scope: !3075, file: !3075, line: 214, type: !6510, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6512)
!6510 = !DISubroutineType(types: !6511)
!6511 = !{null, !2098, !866}
!6512 = !{!6513, !6514, !6515}
!6513 = !DILocalVariable(name: "linknode", arg: 1, scope: !6509, file: !3075, line: 214, type: !2098)
!6514 = !DILocalVariable(name: "def", arg: 2, scope: !6509, file: !3075, line: 214, type: !866)
!6515 = !DILocalVariable(name: "root", scope: !6509, file: !3075, line: 216, type: !2098)
!6516 = !DILocation(line: 0, scope: !6509)
!6517 = !DILocation(line: 218, column: 8, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6509, file: !3075, line: 218, column: 7)
!6519 = !DILocation(line: 218, column: 12, scope: !6518)
!6520 = !DILocation(line: 218, column: 15, scope: !6518)
!6521 = !DILocation(line: 218, column: 31, scope: !6518)
!6522 = !DILocation(line: 218, column: 7, scope: !6509)
!6523 = !DILocation(line: 219, column: 15, scope: !6518)
!6524 = !DILocation(line: 219, column: 20, scope: !6518)
!6525 = !DILocation(line: 219, column: 5, scope: !6518)
!6526 = !DILocation(line: 222, column: 16, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6518, file: !3075, line: 221, column: 5)
!6528 = !DILocation(line: 227, column: 7, scope: !6527)
!6529 = !DILocation(line: 229, column: 1, scope: !6509)
!6530 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !318, file: !318, line: 182, type: !6531, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6533)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{!866, !4578, !7}
!6533 = !{!6534, !6535}
!6534 = !DILocalVariable(name: "vec_", arg: 1, scope: !6530, file: !318, line: 182, type: !4578)
!6535 = !DILocalVariable(name: "ix_", arg: 2, scope: !6530, file: !318, line: 182, type: !7)
!6536 = !DILocation(line: 0, scope: !6530)
!6537 = !DILocation(line: 182, column: 1, scope: !6530)
!6538 = distinct !DISubprogram(name: "op_iter_init_tree", scope: !3075, file: !3075, line: 792, type: !6539, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6541)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!866, !6219, !744, !677}
!6541 = !{!6542, !6543, !6544}
!6542 = !DILocalVariable(name: "ptr", arg: 1, scope: !6538, file: !3075, line: 792, type: !6219)
!6543 = !DILocalVariable(name: "stmt", arg: 2, scope: !6538, file: !3075, line: 792, type: !744)
!6544 = !DILocalVariable(name: "flags", arg: 3, scope: !6538, file: !3075, line: 792, type: !677)
!6545 = !DILocation(line: 0, scope: !6538)
!6546 = !DILocation(line: 794, column: 3, scope: !6538)
!6547 = !DILocation(line: 795, column: 8, scope: !6538)
!6548 = !DILocation(line: 795, column: 18, scope: !6538)
!6549 = !DILocation(line: 796, column: 10, scope: !6538)
!6550 = !DILocation(line: 796, column: 3, scope: !6538)
!6551 = distinct !DISubprogram(name: "op_iter_next_tree", scope: !3075, file: !3075, line: 699, type: !6552, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6554)
!6552 = !DISubroutineType(types: !6553)
!6553 = !{!866, !6219}
!6554 = !{!6555, !6556}
!6555 = !DILocalVariable(name: "ptr", arg: 1, scope: !6551, file: !3075, line: 699, type: !6219)
!6556 = !DILocalVariable(name: "val", scope: !6551, file: !3075, line: 701, type: !866)
!6557 = !DILocation(line: 0, scope: !6551)
!6558 = !DILocation(line: 705, column: 12, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6551, file: !3075, line: 705, column: 7)
!6560 = !DILocation(line: 705, column: 7, scope: !6559)
!6561 = !DILocation(line: 705, column: 7, scope: !6551)
!6562 = !DILocation(line: 707, column: 13, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6559, file: !3075, line: 706, column: 5)
!6564 = !DILocation(line: 708, column: 24, scope: !6563)
!6565 = !DILocation(line: 708, column: 30, scope: !6563)
!6566 = !DILocation(line: 708, column: 17, scope: !6563)
!6567 = !DILocation(line: 709, column: 7, scope: !6563)
!6568 = !DILocation(line: 711, column: 12, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6551, file: !3075, line: 711, column: 7)
!6570 = !DILocation(line: 711, column: 7, scope: !6569)
!6571 = !DILocation(line: 711, column: 7, scope: !6551)
!6572 = !DILocation(line: 713, column: 13, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6569, file: !3075, line: 712, column: 5)
!6574 = !DILocation(line: 714, column: 24, scope: !6573)
!6575 = !DILocation(line: 714, column: 30, scope: !6573)
!6576 = !DILocation(line: 714, column: 17, scope: !6573)
!6577 = !DILocation(line: 715, column: 7, scope: !6573)
!6578 = !DILocation(line: 718, column: 8, scope: !6551)
!6579 = !DILocation(line: 718, column: 13, scope: !6551)
!6580 = !DILocation(line: 719, column: 3, scope: !6551)
!6581 = !DILocation(line: 721, column: 1, scope: !6551)
!6582 = distinct !DISubprogram(name: "make_ssa_name", scope: !3075, file: !3075, line: 1245, type: !5655, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6583)
!6583 = !{!6584, !6585}
!6584 = !DILocalVariable(name: "var", arg: 1, scope: !6582, file: !3075, line: 1245, type: !866)
!6585 = !DILocalVariable(name: "stmt", arg: 2, scope: !6582, file: !3075, line: 1245, type: !744)
!6586 = !DILocation(line: 0, scope: !6582)
!6587 = !DILocation(line: 1247, column: 28, scope: !6582)
!6588 = !DILocation(line: 1247, column: 10, scope: !6582)
!6589 = !DILocation(line: 1247, column: 3, scope: !6582)
!6590 = distinct !DISubprogram(name: "gimple_assign_set_lhs", scope: !597, file: !597, line: 1714, type: !6591, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6593)
!6591 = !DISubroutineType(types: !6592)
!6592 = !{null, !744, !866}
!6593 = !{!6594, !6595}
!6594 = !DILocalVariable(name: "gs", arg: 1, scope: !6590, file: !597, line: 1714, type: !744)
!6595 = !DILocalVariable(name: "lhs", arg: 2, scope: !6590, file: !597, line: 1714, type: !866)
!6596 = !DILocation(line: 0, scope: !6590)
!6597 = !DILocation(line: 1717, column: 3, scope: !6590)
!6598 = !DILocation(line: 1719, column: 7, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6590, file: !597, line: 1719, column: 7)
!6600 = !DILocation(line: 1719, column: 11, scope: !6599)
!6601 = !DILocation(line: 1719, column: 14, scope: !6599)
!6602 = !DILocation(line: 1719, column: 30, scope: !6599)
!6603 = !DILocation(line: 1719, column: 7, scope: !6590)
!6604 = !DILocation(line: 1720, column: 5, scope: !6599)
!6605 = !DILocation(line: 1720, column: 29, scope: !6599)
!6606 = !DILocation(line: 1721, column: 1, scope: !6590)
!6607 = distinct !DISubprogram(name: "gimple_assign_set_rhs_code", scope: !597, file: !597, line: 1832, type: !6608, scopeLine: 1833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6610)
!6608 = !DISubroutineType(types: !6609)
!6609 = !{null, !744, !317}
!6610 = !{!6611, !6612}
!6611 = !DILocalVariable(name: "s", arg: 1, scope: !6607, file: !597, line: 1832, type: !744)
!6612 = !DILocalVariable(name: "code", arg: 2, scope: !6607, file: !597, line: 1832, type: !317)
!6613 = !DILocation(line: 0, scope: !6607)
!6614 = !DILocation(line: 1835, column: 13, scope: !6607)
!6615 = !DILocation(line: 1835, column: 21, scope: !6607)
!6616 = !DILocation(line: 1836, column: 1, scope: !6607)
!6617 = distinct !DISubprogram(name: "gimple_assign_set_rhs1", scope: !597, file: !597, line: 1747, type: !6591, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6618)
!6618 = !{!6619, !6620}
!6619 = !DILocalVariable(name: "gs", arg: 1, scope: !6617, file: !597, line: 1747, type: !744)
!6620 = !DILocalVariable(name: "rhs", arg: 2, scope: !6617, file: !597, line: 1747, type: !866)
!6621 = !DILocation(line: 0, scope: !6617)
!6622 = !DILocation(line: 1751, column: 3, scope: !6617)
!6623 = !DILocation(line: 1752, column: 1, scope: !6617)
!6624 = distinct !DISubprogram(name: "compute_offset", scope: !3, file: !3, line: 1759, type: !6625, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6627)
!6625 = !DISubroutineType(types: !6626)
!6626 = !{!866, !837, !837, !866}
!6627 = !{!6628, !6629, !6630, !6631, !6632, !6633, !6634, !6635, !6636, !6637}
!6628 = !DILocalVariable(name: "orig", arg: 1, scope: !6624, file: !3, line: 1759, type: !837)
!6629 = !DILocalVariable(name: "new_val", arg: 2, scope: !6624, file: !3, line: 1759, type: !837)
!6630 = !DILocalVariable(name: "result", arg: 3, scope: !6624, file: !3, line: 1759, type: !866)
!6631 = !DILocalVariable(name: "x", scope: !6624, file: !3, line: 1762, type: !677)
!6632 = !DILocalVariable(name: "y", scope: !6624, file: !3, line: 1762, type: !677)
!6633 = !DILocalVariable(name: "result1", scope: !6624, file: !3, line: 1763, type: !866)
!6634 = !DILocalVariable(name: "ratio", scope: !6624, file: !3, line: 1763, type: !866)
!6635 = !DILocalVariable(name: "log", scope: !6624, file: !3, line: 1763, type: !866)
!6636 = !DILocalVariable(name: "orig_tree", scope: !6624, file: !3, line: 1763, type: !866)
!6637 = !DILocalVariable(name: "new_tree", scope: !6624, file: !3, line: 1763, type: !866)
!6638 = !DILocation(line: 0, scope: !6624)
!6639 = !DILocation(line: 1765, column: 7, scope: !6624)
!6640 = !DILocation(line: 1766, column: 7, scope: !6624)
!6641 = !DILocation(line: 1768, column: 9, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 1768, column: 7)
!6643 = !DILocation(line: 1768, column: 20, scope: !6642)
!6644 = !DILocation(line: 1768, column: 15, scope: !6642)
!6645 = !DILocation(line: 1770, column: 13, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1770, column: 11)
!6647 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 1769, column: 5)
!6648 = !DILocation(line: 1770, column: 11, scope: !6647)
!6649 = !DILocation(line: 1772, column: 18, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 1772, column: 16)
!6651 = !DILocation(line: 0, scope: !6647)
!6652 = !DILocation(line: 1772, column: 16, scope: !6646)
!6653 = !DILocation(line: 1774, column: 54, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 1773, column: 9)
!6655 = !DILocation(line: 1774, column: 52, scope: !6654)
!6656 = !DILocation(line: 1774, column: 17, scope: !6654)
!6657 = !DILocation(line: 1776, column: 13, scope: !6654)
!6658 = !DILocation(line: 1777, column: 11, scope: !6654)
!6659 = !DILocation(line: 1779, column: 50, scope: !6647)
!6660 = !DILocation(line: 1779, column: 48, scope: !6647)
!6661 = !DILocation(line: 1779, column: 13, scope: !6647)
!6662 = !DILocation(line: 1780, column: 17, scope: !6647)
!6663 = !DILocation(line: 1782, column: 7, scope: !6647)
!6664 = !DILocation(line: 1784, column: 30, scope: !6624)
!6665 = !DILocation(line: 1784, column: 15, scope: !6624)
!6666 = !DILocation(line: 1785, column: 29, scope: !6624)
!6667 = !DILocation(line: 1785, column: 14, scope: !6624)
!6668 = !DILocation(line: 1786, column: 11, scope: !6624)
!6669 = !DILocation(line: 1787, column: 13, scope: !6624)
!6670 = !DILocation(line: 1789, column: 3, scope: !6624)
!6671 = !DILocation(line: 1790, column: 1, scope: !6624)
!6672 = distinct !DISubprogram(name: "gimple_assign_set_rhs2", scope: !597, file: !597, line: 1784, type: !6591, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6673)
!6673 = !{!6674, !6675}
!6674 = !DILocalVariable(name: "gs", arg: 1, scope: !6672, file: !597, line: 1784, type: !744)
!6675 = !DILocalVariable(name: "rhs", arg: 2, scope: !6672, file: !597, line: 1784, type: !866)
!6676 = !DILocation(line: 0, scope: !6672)
!6677 = !DILocation(line: 1788, column: 3, scope: !6672)
!6678 = !DILocation(line: 1789, column: 1, scope: !6672)
!6679 = distinct !DISubprogram(name: "update_stmt", scope: !597, file: !597, line: 1456, type: !6680, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6682)
!6680 = !DISubroutineType(types: !6681)
!6681 = !{null, !744}
!6682 = !{!6683}
!6683 = !DILocalVariable(name: "s", arg: 1, scope: !6679, file: !597, line: 1456, type: !744)
!6684 = !DILocation(line: 0, scope: !6679)
!6685 = !DILocation(line: 1458, column: 7, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6679, file: !597, line: 1458, column: 7)
!6687 = !DILocation(line: 1458, column: 7, scope: !6679)
!6688 = !DILocation(line: 1460, column: 7, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6686, file: !597, line: 1459, column: 5)
!6690 = !DILocation(line: 1461, column: 7, scope: !6689)
!6691 = !DILocation(line: 1462, column: 5, scope: !6689)
!6692 = !DILocation(line: 1463, column: 1, scope: !6679)
!6693 = distinct !DISubprogram(name: "gimple_set_op", scope: !597, file: !597, line: 1663, type: !6694, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6696)
!6694 = !DISubroutineType(types: !6695)
!6695 = !{null, !744, !7, !866}
!6696 = !{!6697, !6698, !6699}
!6697 = !DILocalVariable(name: "gs", arg: 1, scope: !6693, file: !597, line: 1663, type: !744)
!6698 = !DILocalVariable(name: "i", arg: 2, scope: !6693, file: !597, line: 1663, type: !7)
!6699 = !DILocalVariable(name: "op", arg: 3, scope: !6693, file: !597, line: 1663, type: !866)
!6700 = !DILocation(line: 0, scope: !6693)
!6701 = !DILocation(line: 1665, column: 3, scope: !6693)
!6702 = !DILocation(line: 1671, column: 3, scope: !6693)
!6703 = !DILocation(line: 1671, column: 22, scope: !6693)
!6704 = !DILocation(line: 1672, column: 1, scope: !6693)
