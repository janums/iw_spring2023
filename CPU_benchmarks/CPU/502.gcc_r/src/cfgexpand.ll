; ModuleID = 'cfgexpand.bc'
source_filename = "cfgexpand.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.ssaexpand = type { %struct._var_map*, %struct.bitmap_head_def*, %struct.rtx_def**, %struct.bitmap_head_def* }
%struct._var_map = type { %struct.partition_def*, i32*, i32*, i32, i32, i32, i32*, %struct.VEC_tree_heap* }
%struct.partition_def = type { i32, [1 x %struct.partition_elem] }
%struct.partition_elem = type { i32, %struct.partition_elem*, i32 }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.stack_var = type { %union.tree_node*, i64, i64, i32, i64, i64, %struct.bitmap_head_def* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void ()*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i8 (%union.tree_node*)*, void (i32, i8*, i32, i8)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)*, void (i32)*, void (%struct.rtx_def*)*, void ()*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void (i32)*, void (%union.tree_node*, %union.tree_node*)*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.walk_stmt_info = type { %struct.gimple_stmt_iterator, i8*, %struct.pointer_set_t*, i8, i8, i8, i8, %union.tree_node* }
%struct.pointer_set_t = type opaque
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.separate_ops = type { i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@currently_expanding_to_rtl = external dso_local local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [12 x i8] c"cfgexpand.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@stack_vars_num = internal unnamed_addr global i64 0, align 8, !dbg !0
@stack_vars_sorted = internal unnamed_addr global i64* null, align 8, !dbg !2316
@.str.2 = private unnamed_addr constant [7 x i8] c"expand\00", align 1
@pass_expand = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8 ()* null, i32 ()* @gimple_expand_cfg, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 116, i32 1068, i32 128, i32 295, i32 28, i32 3 } }, align 8, !dbg !2244
@SA = common dso_local global %struct.ssaexpand zeroinitializer, align 8, !dbg !2272
@currently_expanding_gimple_stmt = common dso_local local_unnamed_addr global %union.gimple_statement_d* null, align 8, !dbg !2314
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@has_protected_decls = internal unnamed_addr global i1 false, align 1, !dbg !2330
@has_short_buffer = internal unnamed_addr global i1 false, align 1, !dbg !2331
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@.str.4 = private unnamed_addr constant [35 x i8] c"size of variable %q+D is too large\00", align 1
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@.str.5 = private unnamed_addr constant [18 x i8] c"./tree-ssa-live.h\00", align 1
@flag_stack_protect = external dso_local local_unnamed_addr global i32, align 4
@optimize = external dso_local local_unnamed_addr global i32, align 4
@stack_vars_alloc = internal unnamed_addr global i64 0, align 8, !dbg !2322
@stack_vars = internal unnamed_addr global %struct.stack_var* null, align 8, !dbg !2324
@prologue_locator = external dso_local local_unnamed_addr global i32, align 4
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@warn_stack_protect = external dso_local local_unnamed_addr global i32, align 4
@.str.6 = private unnamed_addr constant [55 x i8] c"not protecting local variables: variable length buffer\00", align 1
@.str.7 = private unnamed_addr constant [58 x i8] c"not protecting function: no buffer at least %d bytes long\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@lab_rtx_for_bb = internal unnamed_addr global %struct.pointer_map_t* null, align 8, !dbg !2328
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@generating_concat_p = external dso_local local_unnamed_addr global i32, align 4
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.8 = private unnamed_addr constant [50 x i8] c"\0A\0A;;\0A;; Full RTL generated for this function:\0A;;\0A\00", align 1
@debug_hooks = external dso_local local_unnamed_addr global %struct.gcc_debug_hooks*, align 8
@ix86_preferred_stack_boundary = external dso_local local_unnamed_addr global i32, align 4
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.9 = private unnamed_addr constant [34 x i8] c"Partition %lu: size %ld align %u\0A\00", align 1
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.10 = private unnamed_addr constant [14 x i8] c", offset %ld\0A\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.12 = private unnamed_addr constant [46 x i8] c"\0A;; Generating RTL for gimple basic block %d\0A\00", align 1
@input_location = external dso_local local_unnamed_addr global i32, align 4
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@.str.13 = private unnamed_addr constant [5 x i8] c"\0A;; \00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@ix86_branch_cost = external dso_local local_unnamed_addr global i32, align 4
@flag_strict_aliasing = external dso_local local_unnamed_addr global i32, align 4
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@const_true_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@ix86_incoming_stack_boundary = external dso_local local_unnamed_addr global i32, align 4
@flag_non_call_exceptions = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2336 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2349, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2350, metadata !DIExpression()), !dbg !2351
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2352
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2353
  ret i32 %call, !dbg !2354
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2355 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2359
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2360
  ret i32 %call, !dbg !2361
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2362 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2416, metadata !DIExpression()), !dbg !2417
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2418
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2418
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2418
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2418
  %cmp = icmp uge i8* %0, %1, !dbg !2418
  %conv1 = zext i1 %cmp to i64, !dbg !2418
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2418
  %tobool = icmp eq i64 %expval, 0, !dbg !2418
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2418

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2418
  br label %cond.end, !dbg !2418

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2418
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2418
  %2 = load i8, i8* %0, align 1, !dbg !2418
  %conv3 = zext i8 %2 to i32, !dbg !2418
  br label %cond.end, !dbg !2418

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2418
  ret i32 %cond, !dbg !2419
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2420 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2422, metadata !DIExpression()), !dbg !2423
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2424
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2424
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2424
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2424
  %cmp = icmp uge i8* %0, %1, !dbg !2424
  %conv1 = zext i1 %cmp to i64, !dbg !2424
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2424
  %tobool = icmp eq i64 %expval, 0, !dbg !2424
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2424

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2424
  br label %cond.end, !dbg !2424

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2424
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2424
  %2 = load i8, i8* %0, align 1, !dbg !2424
  %conv3 = zext i8 %2 to i32, !dbg !2424
  br label %cond.end, !dbg !2424

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2424
  ret i32 %cond, !dbg !2425
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2426 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2427
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2427
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2427
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2427
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2427
  %cmp = icmp uge i8* %1, %2, !dbg !2427
  %conv1 = zext i1 %cmp to i64, !dbg !2427
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2427
  %tobool = icmp eq i64 %expval, 0, !dbg !2427
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2427

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2427
  br label %cond.end, !dbg !2427

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2427
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2427
  %3 = load i8, i8* %1, align 1, !dbg !2427
  %conv3 = zext i8 %3 to i32, !dbg !2427
  br label %cond.end, !dbg !2427

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2427
  ret i32 %cond, !dbg !2428
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2429 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2433, metadata !DIExpression()), !dbg !2434
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2435
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2436
  ret i32 %call, !dbg !2437
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2438 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2442, metadata !DIExpression()), !dbg !2444
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2443, metadata !DIExpression()), !dbg !2444
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2445
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2445
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2445
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2445
  %cmp = icmp uge i8* %0, %1, !dbg !2445
  %conv1 = zext i1 %cmp to i64, !dbg !2445
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2445
  %tobool = icmp eq i64 %expval, 0, !dbg !2445
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2445

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2445
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2445
  br label %cond.end, !dbg !2445

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2445
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2445
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2445
  store i8 %conv2, i8* %0, align 1, !dbg !2445
  %conv6 = and i32 %__c, 255, !dbg !2445
  br label %cond.end, !dbg !2445

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2445
  ret i32 %cond, !dbg !2446
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2447 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2449, metadata !DIExpression()), !dbg !2451
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2450, metadata !DIExpression()), !dbg !2451
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2452
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2452
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2452
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2452
  %cmp = icmp uge i8* %0, %1, !dbg !2452
  %conv1 = zext i1 %cmp to i64, !dbg !2452
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2452
  %tobool = icmp eq i64 %expval, 0, !dbg !2452
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2452

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2452
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2452
  br label %cond.end, !dbg !2452

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2452
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2452
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2452
  store i8 %conv2, i8* %0, align 1, !dbg !2452
  %conv6 = and i32 %__c, 255, !dbg !2452
  br label %cond.end, !dbg !2452

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2452
  ret i32 %cond, !dbg !2453
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2454 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2456, metadata !DIExpression()), !dbg !2457
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2458
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2458
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2458
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2458
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2458
  %cmp = icmp uge i8* %1, %2, !dbg !2458
  %conv1 = zext i1 %cmp to i64, !dbg !2458
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2458
  %tobool = icmp eq i64 %expval, 0, !dbg !2458
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2458

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2458
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2458
  br label %cond.end, !dbg !2458

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2458
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2458
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2458
  store i8 %conv4, i8* %1, align 1, !dbg !2458
  %conv6 = and i32 %__c, 255, !dbg !2458
  br label %cond.end, !dbg !2458

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2458
  ret i32 %cond, !dbg !2459
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2460 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2465, metadata !DIExpression()), !dbg !2468
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2466, metadata !DIExpression()), !dbg !2468
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2467, metadata !DIExpression()), !dbg !2468
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2469
  ret i64 %call, !dbg !2470
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2471 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2473, metadata !DIExpression()), !dbg !2474
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2475
  %0 = load i32, i32* %_flags, align 8, !dbg !2475
  %and = lshr i32 %0, 4, !dbg !2475
  %and.lobit = and i32 %and, 1, !dbg !2475
  ret i32 %and.lobit, !dbg !2476
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2477 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2479, metadata !DIExpression()), !dbg !2480
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2481
  %0 = load i32, i32* %_flags, align 8, !dbg !2481
  %and = lshr i32 %0, 5, !dbg !2481
  %and.lobit = and i32 %and, 1, !dbg !2481
  ret i32 %and.lobit, !dbg !2482
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2483 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2486, metadata !DIExpression()), !dbg !2487
  %__c.off = add i32 %__c, 128, !dbg !2488
  %0 = icmp ult i32 %__c.off, 384, !dbg !2488
  br i1 %0, label %cond.true, label %cond.end, !dbg !2488

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2489
  %1 = load i32*, i32** %call, align 8, !dbg !2490
  %idxprom = sext i32 %__c to i64, !dbg !2491
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2491
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2491
  br label %cond.end, !dbg !2492

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2492
  ret i32 %cond, !dbg !2493
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2494 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2496, metadata !DIExpression()), !dbg !2497
  %__c.off = add i32 %__c, 128, !dbg !2498
  %0 = icmp ult i32 %__c.off, 384, !dbg !2498
  br i1 %0, label %cond.true, label %cond.end, !dbg !2498

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2499
  %1 = load i32*, i32** %call, align 8, !dbg !2500
  %idxprom = sext i32 %__c to i64, !dbg !2501
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2501
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2501
  br label %cond.end, !dbg !2502

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2502
  ret i32 %cond, !dbg !2503
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2504 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2509, metadata !DIExpression()), !dbg !2510
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2511
  %conv = trunc i64 %call to i32, !dbg !2512
  ret i32 %conv, !dbg !2513
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2514 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2518, metadata !DIExpression()), !dbg !2519
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2520
  ret i64 %call, !dbg !2521
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2522 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2527, metadata !DIExpression()), !dbg !2528
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2529
  ret i64 %call, !dbg !2530
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2531 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2537, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2538, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2539, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2540, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2541, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata i64 0, metadata !2542, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2543, metadata !DIExpression()), !dbg !2547
  br label %while.cond, !dbg !2548

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2549
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2547
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2543, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2542, metadata !DIExpression()), !dbg !2547
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2550
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2548

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2551
  %div = lshr i64 %add, 1, !dbg !2553
  call void @llvm.dbg.value(metadata i64 %div, metadata !2544, metadata !DIExpression()), !dbg !2547
  %mul = mul i64 %div, %__size, !dbg !2554
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2555
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2545, metadata !DIExpression()), !dbg !2547
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2556
  call void @llvm.dbg.value(metadata i32 %call, metadata !2546, metadata !DIExpression()), !dbg !2547
  %cmp1 = icmp slt i32 %call, 0, !dbg !2557
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2559

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2560
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2562

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2563
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2542, metadata !DIExpression()), !dbg !2547
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2547
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2547
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2543, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2542, metadata !DIExpression()), !dbg !2547
  br label %while.cond, !dbg !2548, !llvm.loop !2564

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2547
  ret i8* %retval.0, !dbg !2566
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2567 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2573, metadata !DIExpression()), !dbg !2574
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2575
  ret double %call, !dbg !2576
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2577 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2586, metadata !DIExpression()), !dbg !2589
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2587, metadata !DIExpression()), !dbg !2589
  call void @llvm.dbg.value(metadata i32 %base, metadata !2588, metadata !DIExpression()), !dbg !2589
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2590
  ret i64 %call, !dbg !2591
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2592 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2598, metadata !DIExpression()), !dbg !2601
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2599, metadata !DIExpression()), !dbg !2601
  call void @llvm.dbg.value(metadata i32 %base, metadata !2600, metadata !DIExpression()), !dbg !2601
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2602
  ret i64 %call, !dbg !2603
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2604 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2615, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2616, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.value(metadata i32 %base, metadata !2617, metadata !DIExpression()), !dbg !2618
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2619
  ret i64 %call, !dbg !2620
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2621 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2625, metadata !DIExpression()), !dbg !2628
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2626, metadata !DIExpression()), !dbg !2628
  call void @llvm.dbg.value(metadata i32 %base, metadata !2627, metadata !DIExpression()), !dbg !2628
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2629
  ret i64 %call, !dbg !2630
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2631 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2671, metadata !DIExpression()), !dbg !2673
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2672, metadata !DIExpression()), !dbg !2673
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2674
  ret i32 %call, !dbg !2675
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2676 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2678, metadata !DIExpression()), !dbg !2680
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2679, metadata !DIExpression()), !dbg !2680
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2681
  ret i32 %call, !dbg !2682
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2683 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2687, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2688, metadata !DIExpression()), !dbg !2689
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2690
  ret i32 %call, !dbg !2691
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2692 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2696, metadata !DIExpression()), !dbg !2700
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2697, metadata !DIExpression()), !dbg !2700
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2698, metadata !DIExpression()), !dbg !2700
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2699, metadata !DIExpression()), !dbg !2700
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2701
  ret i32 %call, !dbg !2702
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2703 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2707, metadata !DIExpression()), !dbg !2710
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2708, metadata !DIExpression()), !dbg !2710
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2709, metadata !DIExpression()), !dbg !2710
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2709, metadata !DIExpression(DW_OP_deref)), !dbg !2710
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2711
  ret i32 %call, !dbg !2712
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2713 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2717, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2718, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2719, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2720, metadata !DIExpression()), !dbg !2721
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2720, metadata !DIExpression(DW_OP_deref)), !dbg !2721
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2722
  ret i32 %call, !dbg !2723
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2724 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2748, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2749, metadata !DIExpression()), !dbg !2750
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2751
  ret i32 %call, !dbg !2752
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2753 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2755, metadata !DIExpression()), !dbg !2757
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2756, metadata !DIExpression()), !dbg !2757
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2758
  ret i32 %call, !dbg !2759
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2760 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2764, metadata !DIExpression()), !dbg !2766
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2765, metadata !DIExpression()), !dbg !2766
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2767
  ret i32 %call, !dbg !2768
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2769 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2773, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2774, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2775, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2776, metadata !DIExpression()), !dbg !2777
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2778
  ret i32 %call, !dbg !2779
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @gimple_assign_rhs_to_tree(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !2780 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2784, metadata !DIExpression()), !dbg !2787
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) #7, !dbg !2788
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !2789
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2786, metadata !DIExpression()), !dbg !2787
  switch i32 %call1, label %if.else83 [
    i32 1, label %if.then
    i32 2, label %if.then8
    i32 3, label %if.then17
  ], !dbg !2790

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !2791
  %call3 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !2791
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2791
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2791
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !2791
  %call5 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !2791
  %call6 = tail call %union.tree_node* @build2_stat(i32 %call2, %union.tree_node* %0, %union.tree_node* %call4, %union.tree_node* %call5) #6, !dbg !2791
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !2785, metadata !DIExpression()), !dbg !2787
  br label %if.end86, !dbg !2793

if.then8:                                         ; preds = %entry
  %call9 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !2794
  %call10 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !2794
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2794
  %1 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !2794
  %call13 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !2794
  %call14 = tail call %union.tree_node* @build1_stat(i32 %call9, %union.tree_node* %1, %union.tree_node* %call13) #6, !dbg !2794
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !2785, metadata !DIExpression()), !dbg !2787
  br label %if.end86, !dbg !2796

if.then17:                                        ; preds = %entry
  %call18 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !2797
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !2785, metadata !DIExpression()), !dbg !2787
  %call19 = tail call fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %stmt) #7, !dbg !2800
  %tobool = icmp ne i8 %call19, 0, !dbg !2800
  %tobool20 = icmp ne %union.tree_node* %call18, null, !dbg !2802
  %or.cond = and i1 %tobool, %tobool20, !dbg !2803
  br i1 %or.cond, label %land.lhs.true21, label %lor.lhs.false, !dbg !2803

land.lhs.true21:                                  ; preds = %if.then17
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2802
  %bf.load = load i64, i64* %2, align 8, !dbg !2802
  %bf.cast = and i64 %bf.load, 65535, !dbg !2802
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !2802
  %3 = load i32, i32* %arrayidx, align 4, !dbg !2802
  %cmp22 = icmp ugt i32 %3, 3, !dbg !2802
  br i1 %cmp22, label %land.lhs.true24, label %lor.lhs.false, !dbg !2802

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %cmp31 = icmp ult i32 %3, 11, !dbg !2802
  br i1 %cmp31, label %land.lhs.true33, label %lor.lhs.false, !dbg !2804

land.lhs.true33:                                  ; preds = %land.lhs.true24
  %call34 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !2805
  %bf.load36 = load i64, i64* %2, align 8, !dbg !2806
  %bf.cast38 = and i64 %bf.load36, 65535, !dbg !2806
  %arrayidx40 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast38, !dbg !2806
  %4 = load i32, i32* %arrayidx40, align 4, !dbg !2806
  %cmp41 = icmp ugt i32 %4, 3, !dbg !2806
  br i1 %cmp41, label %land.lhs.true43, label %cond.end, !dbg !2806

land.lhs.true43:                                  ; preds = %land.lhs.true33
  %cmp50 = icmp ult i32 %4, 11, !dbg !2806
  br i1 %cmp50, label %cond.true, label %cond.end, !dbg !2806

cond.true:                                        ; preds = %land.lhs.true43
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2806
  %6 = load i32, i32* %5, align 8, !dbg !2806
  br label %cond.end, !dbg !2806

cond.end:                                         ; preds = %land.lhs.true33, %land.lhs.true43, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ 0, %land.lhs.true43 ], [ 0, %land.lhs.true33 ], !dbg !2806
  %cmp52 = icmp eq i32 %call34, %cond, !dbg !2807
  br i1 %cmp52, label %lor.lhs.false, label %if.then81, !dbg !2808

lor.lhs.false:                                    ; preds = %cond.end, %land.lhs.true24, %land.lhs.true21, %if.then17
  %call54 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %stmt) #7, !dbg !2809
  %tobool55 = icmp ne %union.tree_node* %call54, null, !dbg !2809
  %7 = load i32, i32* @currently_expanding_to_rtl, align 4, !dbg !2810
  %tobool57 = icmp ne i32 %7, 0, !dbg !2810
  %or.cond1 = and i1 %tobool55, %tobool57, !dbg !2811
  br i1 %or.cond1, label %land.lhs.true58, label %if.end86, !dbg !2811

land.lhs.true58:                                  ; preds = %lor.lhs.false
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2812
  %bf.load60 = load i64, i64* %8, align 8, !dbg !2812
  %bf.cast62 = and i64 %bf.load60, 65535, !dbg !2812
  %arrayidx64 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast62, !dbg !2812
  %9 = load i32, i32* %arrayidx64, align 4, !dbg !2812
  %cmp65 = icmp ugt i32 %9, 3, !dbg !2812
  br i1 %cmp65, label %land.lhs.true67, label %if.end86, !dbg !2812

land.lhs.true67:                                  ; preds = %land.lhs.true58
  %cmp74 = icmp ult i32 %9, 11, !dbg !2812
  br i1 %cmp74, label %land.lhs.true76, label %if.end86, !dbg !2813

land.lhs.true76:                                  ; preds = %land.lhs.true67
  %call77 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %stmt) #7, !dbg !2814
  %call78 = tail call %union.tree_node** @tree_block(%union.tree_node* %call18) #6, !dbg !2815
  %10 = load %union.tree_node*, %union.tree_node** %call78, align 8, !dbg !2815
  %cmp79 = icmp eq %union.tree_node* %call77, %10, !dbg !2816
  br i1 %cmp79, label %if.end86, label %if.then81, !dbg !2817

if.then81:                                        ; preds = %cond.end, %land.lhs.true76
  %call82 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %call18) #6, !dbg !2818
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !2785, metadata !DIExpression()), !dbg !2787
  br label %if.end86, !dbg !2819

if.else83:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2820
  br label %if.end86

if.end86:                                         ; preds = %land.lhs.true76, %if.then8, %lor.lhs.false, %land.lhs.true58, %land.lhs.true67, %if.then81, %if.else83, %if.then
  %t.3 = phi %union.tree_node* [ %call6, %if.then ], [ %call14, %if.then8 ], [ undef, %if.else83 ], [ %call82, %if.then81 ], [ %call18, %land.lhs.true76 ], [ %call18, %land.lhs.true67 ], [ %call18, %land.lhs.true58 ], [ %call18, %lor.lhs.false ], !dbg !2821
  call void @llvm.dbg.value(metadata %union.tree_node* %t.3, metadata !2785, metadata !DIExpression()), !dbg !2787
  %call87 = tail call fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %stmt) #7, !dbg !2822
  %tobool89 = icmp ne i8 %call87, 0, !dbg !2822
  %tobool91 = icmp ne %union.tree_node* %t.3, null, !dbg !2824
  %or.cond2 = and i1 %tobool89, %tobool91, !dbg !2825
  br i1 %or.cond2, label %land.lhs.true92, label %if.end114, !dbg !2825

land.lhs.true92:                                  ; preds = %if.end86
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2824
  %bf.load94 = load i64, i64* %11, align 8, !dbg !2824
  %bf.cast96 = and i64 %bf.load94, 65535, !dbg !2824
  %arrayidx98 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast96, !dbg !2824
  %12 = load i32, i32* %arrayidx98, align 4, !dbg !2824
  %cmp99 = icmp ugt i32 %12, 3, !dbg !2824
  br i1 %cmp99, label %land.lhs.true101, label %if.end114, !dbg !2824

land.lhs.true101:                                 ; preds = %land.lhs.true92
  %cmp108 = icmp ult i32 %12, 11, !dbg !2824
  br i1 %cmp108, label %if.then110, label %if.end114, !dbg !2826

if.then110:                                       ; preds = %land.lhs.true101
  %call111 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !2827
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2827
  store i32 %call111, i32* %13, align 8, !dbg !2827
  br label %if.end114, !dbg !2827

if.end114:                                        ; preds = %if.then110, %land.lhs.true101, %land.lhs.true92, %if.end86
  %call115 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %stmt) #7, !dbg !2828
  %tobool116 = icmp ne %union.tree_node* %call115, null, !dbg !2828
  %14 = load i32, i32* @currently_expanding_to_rtl, align 4, !dbg !2830
  %tobool118 = icmp ne i32 %14, 0, !dbg !2830
  %or.cond3 = and i1 %tobool116, %tobool118, !dbg !2831
  br i1 %or.cond3, label %land.lhs.true119, label %if.end140, !dbg !2831

land.lhs.true119:                                 ; preds = %if.end114
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2832
  %bf.load121 = load i64, i64* %15, align 8, !dbg !2832
  %bf.cast123 = and i64 %bf.load121, 65535, !dbg !2832
  %arrayidx125 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast123, !dbg !2832
  %16 = load i32, i32* %arrayidx125, align 4, !dbg !2832
  %cmp126 = icmp ugt i32 %16, 3, !dbg !2832
  br i1 %cmp126, label %land.lhs.true128, label %if.end140, !dbg !2832

land.lhs.true128:                                 ; preds = %land.lhs.true119
  %cmp135 = icmp ult i32 %16, 11, !dbg !2832
  br i1 %cmp135, label %if.then137, label %if.end140, !dbg !2833

if.then137:                                       ; preds = %land.lhs.true128
  %call138 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %stmt) #7, !dbg !2834
  %call139 = tail call %union.tree_node** @tree_block(%union.tree_node* %t.3) #6, !dbg !2835
  store %union.tree_node* %call138, %union.tree_node** %call139, align 8, !dbg !2836
  br label %if.end140, !dbg !2835

if.end140:                                        ; preds = %if.then137, %land.lhs.true128, %land.lhs.true119, %if.end114
  ret %union.tree_node* %t.3, !dbg !2837
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !2838 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !2842, metadata !DIExpression()), !dbg !2843
  %idxprom = sext i32 %code to i64, !dbg !2844
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !2844
  %0 = load i8, i8* %arrayidx, align 1, !dbg !2844
  %conv = zext i8 %0 to i32, !dbg !2845
  ret i32 %conv, !dbg !2846
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !2847 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2852, metadata !DIExpression()), !dbg !2854
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !2855
  call void @llvm.dbg.value(metadata i32 %call, metadata !2853, metadata !DIExpression()), !dbg !2854
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !2856

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !2858
  %bf.load = load i32, i32* %0, align 8, !dbg !2858
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !2858
  br label %cleanup, !dbg !2859

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2860
  br label %cleanup, !dbg !2862

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !2854
  ret i32 %retval.0, !dbg !2863
}

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2864 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2866, metadata !DIExpression()), !dbg !2868
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !2869
  call void @llvm.dbg.value(metadata i32 %call, metadata !2867, metadata !DIExpression()), !dbg !2868
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !2870
  %cmp = icmp eq i32 %call1, 3, !dbg !2872
  br i1 %cmp, label %if.then, label %if.end, !dbg !2873

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !2874
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2874
  %bf.load = load i64, i64* %0, align 8, !dbg !2874
  %1 = trunc i64 %bf.load to i32, !dbg !2874
  %bf.cast = and i32 %1, 65535, !dbg !2874
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !2867, metadata !DIExpression()), !dbg !2868
  br label %if.end, !dbg !2875

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !2868
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !2867, metadata !DIExpression()), !dbg !2868
  ret i32 %code.0, !dbg !2876
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2877 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2881, metadata !DIExpression()), !dbg !2882
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !2883
  ret %union.tree_node* %call, !dbg !2884
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2885 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2887, metadata !DIExpression()), !dbg !2888
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !2889
  ret %union.tree_node* %call, !dbg !2890
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2891 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2893, metadata !DIExpression()), !dbg !2894
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !2895
  %cmp = icmp ugt i32 %call, 2, !dbg !2897
  br i1 %cmp, label %if.then, label %return, !dbg !2898

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !2899
  br label %return, !dbg !2900

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !2901
  ret %union.tree_node* %retval.0, !dbg !2902
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2903 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2907, metadata !DIExpression()), !dbg !2908
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %g) #7, !dbg !2909
  %cmp = icmp ne i32 %call, 0, !dbg !2910
  %conv1 = zext i1 %cmp to i8, !dbg !2909
  ret i8 %conv1, !dbg !2911
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2912 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2916, metadata !DIExpression()), !dbg !2917
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !2918
  %0 = load i32, i32* %location, align 8, !dbg !2918
  ret i32 %0, !dbg !2919
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2920 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2922, metadata !DIExpression()), !dbg !2923
  %block = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 5, !dbg !2924
  %0 = load %union.tree_node*, %union.tree_node** %block, align 8, !dbg !2924
  ret %union.tree_node* %0, !dbg !2925
}

declare dso_local %union.tree_node** @tree_block(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i64 @estimated_stack_frame_size() local_unnamed_addr #5 !dbg !2926 {
entry:
  call void @llvm.dbg.value(metadata i64 0, metadata !2930, metadata !DIExpression()), !dbg !2938
  %0 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !2939
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %0, i64 0, i32 5, !dbg !2939
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !2939
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !2933, metadata !DIExpression()), !dbg !2938
  tail call fastcc void @init_vars_expansion() #7, !dbg !2940
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2941
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 9, !dbg !2942
  br label %for.cond, !dbg !2943

for.cond:                                         ; preds = %if.end, %entry
  %t.0.in = phi %union.tree_node** [ %local_decls, %entry ], [ %chain, %if.end ]
  %size.0 = phi i64 [ 0, %entry ], [ %size.1, %if.end ], !dbg !2938
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !2944
  call void @llvm.dbg.value(metadata i64 %size.0, metadata !2930, metadata !DIExpression()), !dbg !2938
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !2932, metadata !DIExpression()), !dbg !2938
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !2945
  br i1 %tobool, label %for.end, label %for.body, !dbg !2945

for.body:                                         ; preds = %for.cond
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2946
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !2946
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !2934, metadata !DIExpression()), !dbg !2947
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2948
  %bf.load = load i64, i64* %5, align 8, !dbg !2948
  %bf.cast1 = and i64 %bf.load, 16777216, !dbg !2948
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !2948
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2950

if.then:                                          ; preds = %for.body
  %call = tail call fastcc i64 @expand_one_var(%union.tree_node* %4, i8 zeroext 1, i8 zeroext 0) #7, !dbg !2951
  %add = add nsw i64 %size.0, %call, !dbg !2952
  call void @llvm.dbg.value(metadata i64 %add, metadata !2930, metadata !DIExpression()), !dbg !2938
  %bf.load3.pre = load i64, i64* %5, align 8, !dbg !2953
  br label %if.end, !dbg !2954

if.end:                                           ; preds = %for.body, %if.then
  %bf.load3 = phi i64 [ %bf.load3.pre, %if.then ], [ %bf.load, %for.body ], !dbg !2953
  %size.1 = phi i64 [ %add, %if.then ], [ %size.0, %for.body ], !dbg !2938
  call void @llvm.dbg.value(metadata i64 %size.1, metadata !2930, metadata !DIExpression()), !dbg !2938
  %bf.set = or i64 %bf.load3, 16777216, !dbg !2953
  store i64 %bf.set, i64* %5, align 8, !dbg !2953
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2955
  br label %for.cond, !dbg !2956, !llvm.loop !2957

for.end:                                          ; preds = %for.cond
  %size.0.lcssa = phi i64 [ %size.0, %for.cond ], !dbg !2938
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !2930, metadata !DIExpression()), !dbg !2938
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !2930, metadata !DIExpression()), !dbg !2938
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !2930, metadata !DIExpression()), !dbg !2938
  %call5 = tail call fastcc i64 @account_used_vars_for_block(%union.tree_node* %1, i8 zeroext 1) #7, !dbg !2959
  %add6 = add nsw i64 %size.0.lcssa, %call5, !dbg !2960
  call void @llvm.dbg.value(metadata i64 %add6, metadata !2930, metadata !DIExpression()), !dbg !2938
  %6 = load i64, i64* @stack_vars_num, align 8, !dbg !2961
  %cmp = icmp eq i64 %6, 0, !dbg !2963
  br i1 %cmp, label %if.end16, label %if.then7, !dbg !2964

if.then7:                                         ; preds = %for.end
  %mul = shl i64 %6, 3, !dbg !2965
  %call8 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !2965
  store i8* %call8, i8** bitcast (i64** @stack_vars_sorted to i8**), align 8, !dbg !2967
  call void @llvm.dbg.value(metadata i64 0, metadata !2931, metadata !DIExpression()), !dbg !2938
  br label %for.cond9, !dbg !2968

for.cond9:                                        ; preds = %for.body11, %if.then7
  %i.0 = phi i64 [ 0, %if.then7 ], [ %inc, %for.body11 ], !dbg !2970
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !2931, metadata !DIExpression()), !dbg !2938
  %7 = load i64, i64* @stack_vars_num, align 8, !dbg !2971
  %cmp10 = icmp ult i64 %i.0, %7, !dbg !2973
  br i1 %cmp10, label %for.body11, label %for.end13, !dbg !2974

for.body11:                                       ; preds = %for.cond9
  %8 = load i64*, i64** @stack_vars_sorted, align 8, !dbg !2975
  %arrayidx = getelementptr inbounds i64, i64* %8, i64 %i.0, !dbg !2975
  store i64 %i.0, i64* %arrayidx, align 8, !dbg !2976
  %inc = add i64 %i.0, 1, !dbg !2977
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2931, metadata !DIExpression()), !dbg !2938
  br label %for.cond9, !dbg !2978, !llvm.loop !2979

for.end13:                                        ; preds = %for.cond9
  %call14 = tail call fastcc i64 @account_stack_vars() #7, !dbg !2981
  %add15 = add nsw i64 %add6, %call14, !dbg !2982
  call void @llvm.dbg.value(metadata i64 %add15, metadata !2930, metadata !DIExpression()), !dbg !2938
  tail call fastcc void @fini_vars_expansion() #7, !dbg !2983
  br label %if.end16, !dbg !2984

if.end16:                                         ; preds = %for.end, %for.end13
  %size.2 = phi i64 [ %add15, %for.end13 ], [ %add6, %for.end ], !dbg !2938
  call void @llvm.dbg.value(metadata i64 %size.2, metadata !2930, metadata !DIExpression()), !dbg !2938
  ret i64 %size.2, !dbg !2985
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_vars_expansion() unnamed_addr #5 !dbg !2986 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2991
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 9, !dbg !2993
  br label %for.cond, !dbg !2994

for.cond:                                         ; preds = %for.body, %entry
  %t.0.in = phi %union.tree_node** [ %local_decls, %entry ], [ %chain, %for.body ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !2995
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !2990, metadata !DIExpression()), !dbg !2996
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !2997
  br i1 %tobool, label %for.end, label %for.body, !dbg !2997

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2998
  %2 = bitcast %union.tree_node** %1 to i64**, !dbg !2998
  %3 = load i64*, i64** %2, align 8, !dbg !2998
  %bf.load = load i64, i64* %3, align 8, !dbg !3000
  %bf.set = or i64 %bf.load, 16777216, !dbg !3000
  store i64 %bf.set, i64* %3, align 8, !dbg !3000
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3001
  br label %for.cond, !dbg !3002, !llvm.loop !3003

for.end:                                          ; preds = %for.cond
  %4 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !3005
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %4, i64 0, i32 5, !dbg !3005
  %5 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3005
  tail call fastcc void @clear_tree_used(%union.tree_node* %5) #7, !dbg !3006
  store i1 false, i1* @has_protected_decls, align 1, !dbg !3007
  store i1 false, i1* @has_short_buffer, align 1, !dbg !3008
  ret void, !dbg !3009
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @expand_one_var(%union.tree_node* %var, i8 zeroext %toplevel, i8 zeroext %really_expand) unnamed_addr #5 !dbg !3010 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3014, metadata !DIExpression()), !dbg !3021
  call void @llvm.dbg.value(metadata i8 %toplevel, metadata !3015, metadata !DIExpression()), !dbg !3021
  call void @llvm.dbg.value(metadata i8 %really_expand, metadata !3016, metadata !DIExpression()), !dbg !3021
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3017, metadata !DIExpression()), !dbg !3021
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3022
  %bf.load = load i64, i64* %0, align 8, !dbg !3022
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3022
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !3022
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3022

cond.true:                                        ; preds = %entry
  %var1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3022
  %1 = bitcast i32* %var1 to %union.tree_node**, !dbg !3022
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3022
  br label %cond.end, !dbg !3022

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %2, %cond.true ], [ %var, %entry ], !dbg !3022
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !3014, metadata !DIExpression()), !dbg !3021
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3023
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3023
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3024
  %cmp2 = icmp eq %union.tree_node* %3, %4, !dbg !3025
  %5 = bitcast %union.tree_node* %3 to %struct.tree_type*, !dbg !3026
  br i1 %cmp2, label %if.end60, label %land.lhs.true, !dbg !3026

land.lhs.true:                                    ; preds = %cond.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3027
  %bf.load4 = load i64, i64* %6, align 8, !dbg !3027
  %bf.cast614 = and i64 %bf.load4, 65535, !dbg !3028
  %cmp7 = icmp eq i64 %bf.cast614, 32, !dbg !3028
  br i1 %cmp7, label %if.then, label %if.end60, !dbg !3029

if.then:                                          ; preds = %land.lhs.true
  %bf.cast1115 = and i64 %bf.load4, 67108864, !dbg !3030
  %tobool = icmp eq i64 %bf.cast1115, 0, !dbg !3030
  br i1 %tobool, label %lor.lhs.false, label %if.then17, !dbg !3032

lor.lhs.false:                                    ; preds = %if.then
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3033
  %7 = bitcast i40* %decl_flag_1 to i64*, !dbg !3033
  %bf.load12 = load i64, i64* %7, align 8, !dbg !3033
  %bf.cast1516 = and i64 %bf.load12, 33554432, !dbg !3033
  %tobool16 = icmp eq i64 %bf.cast1516, 0, !dbg !3033
  br i1 %tobool16, label %if.else, label %if.then17, !dbg !3034

if.then17:                                        ; preds = %lor.lhs.false, %if.then
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3035
  %bf.load23 = load i64, i64* %.cast, align 8, !dbg !3035
  %bf.cast2517 = and i64 %bf.load23, 65535, !dbg !3035
  %cmp26 = icmp eq i64 %bf.cast2517, 14, !dbg !3035
  br i1 %cmp26, label %cond.true27, label %cond.false30, !dbg !3035

cond.true27:                                      ; preds = %if.then17
  %call = tail call i32 @vector_type_mode(%union.tree_node* %3) #6, !dbg !3035
  %.phi.trans.insert = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !3036
  %.pre = load %struct.tree_type*, %struct.tree_type** %.phi.trans.insert, align 8, !dbg !3035
  br label %cond.end37, !dbg !3035

cond.false30:                                     ; preds = %if.then17
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 6, !dbg !3035
  %bf.load34 = load i32, i32* %mode, align 4, !dbg !3035
  %bf.lshr35 = lshr i32 %bf.load34, 16, !dbg !3035
  %bf.clear36 = and i32 %bf.lshr35, 255, !dbg !3035
  br label %cond.end37, !dbg !3035

cond.end37:                                       ; preds = %cond.false30, %cond.true27
  %8 = phi %struct.tree_type* [ %.pre, %cond.true27 ], [ %5, %cond.false30 ], !dbg !3035
  %cond38 = phi i32 [ %call, %cond.true27 ], [ %bf.clear36, %cond.false30 ], !dbg !3035
  %align42 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 7, !dbg !3035
  %9 = load i32, i32* %align42, align 8, !dbg !3035
  %call43 = tail call i32 @ix86_minimum_alignment(%union.tree_node* %3, i32 %cond38, i32 %9) #6, !dbg !3035
  call void @llvm.dbg.value(metadata i32 %call43, metadata !3018, metadata !DIExpression()), !dbg !3037
  br label %if.end, !dbg !3038

if.else:                                          ; preds = %lor.lhs.false
  %10 = trunc i64 %bf.load12 to i32, !dbg !3039
  %bf.cast48 = and i32 %10, 255, !dbg !3039
  %align50 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3039
  %11 = load i32, i32* %align50, align 8, !dbg !3039
  %call51 = tail call i32 @ix86_minimum_alignment(%union.tree_node* %cond, i32 %bf.cast48, i32 %11) #6, !dbg !3039
  call void @llvm.dbg.value(metadata i32 %call51, metadata !3018, metadata !DIExpression()), !dbg !3037
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end37
  %align.0 = phi i32 [ %call43, %cond.end37 ], [ %call51, %if.else ], !dbg !3036
  call void @llvm.dbg.value(metadata i32 %align.0, metadata !3018, metadata !DIExpression()), !dbg !3037
  %12 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !3040
  %cmp52 = icmp ult i32 %12, %align.0, !dbg !3042
  br i1 %cmp52, label %if.then53, label %if.end60, !dbg !3043

if.then53:                                        ; preds = %if.end
  %13 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 46), align 2, !dbg !3044
  %tobool54 = icmp eq i8 %13, 0, !dbg !3044
  br i1 %tobool54, label %cond.end57, label %cond.true55, !dbg !3044

cond.true55:                                      ; preds = %if.then53
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 944, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3044
  br label %cond.end57, !dbg !3044

cond.end57:                                       ; preds = %if.then53, %cond.true55
  store i32 %align.0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !3046
  br label %if.end60, !dbg !3047

if.end60:                                         ; preds = %cond.end, %if.end, %cond.end57, %land.lhs.true
  %bf.load62 = load i64, i64* %0, align 8, !dbg !3048
  %bf.cast642 = and i64 %bf.load62, 65535, !dbg !3050
  %cmp65 = icmp eq i64 %bf.cast642, 141, !dbg !3050
  br i1 %cmp65, label %if.then66, label %if.end109, !dbg !3051

if.then66:                                        ; preds = %if.end60
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3052
  %bf.load68 = load i64, i64* %14, align 8, !dbg !3052
  %bf.cast7010 = and i64 %bf.load68, 65535, !dbg !3052
  %cmp71 = icmp eq i64 %bf.cast7010, 32, !dbg !3052
  br i1 %cmp71, label %lor.lhs.false72, label %if.end109, !dbg !3052

lor.lhs.false72:                                  ; preds = %if.then66
  %decl_flag_174 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3052
  %15 = bitcast i40* %decl_flag_174 to i64*, !dbg !3052
  %bf.load75 = load i64, i64* %15, align 8, !dbg !3052
  %bf.cast7811 = and i64 %bf.load75, 33554432, !dbg !3052
  %tobool79 = icmp eq i64 %bf.cast7811, 0, !dbg !3052
  br i1 %tobool79, label %land.lhs.true80, label %cond.true105, !dbg !3052

land.lhs.true80:                                  ; preds = %lor.lhs.false72
  %bf.cast8512 = and i64 %bf.load75, 67108864, !dbg !3052
  %tobool86 = icmp eq i64 %bf.cast8512, 0, !dbg !3052
  br i1 %tobool86, label %land.lhs.true87, label %cond.true105, !dbg !3052

land.lhs.true87:                                  ; preds = %land.lhs.true80
  %bf.cast9213 = and i64 %bf.load68, 67108864, !dbg !3052
  %tobool93 = icmp eq i64 %bf.cast9213, 0, !dbg !3052
  br i1 %tobool93, label %land.lhs.true94, label %cond.true105, !dbg !3052

land.lhs.true94:                                  ; preds = %land.lhs.true87
  %16 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3052
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3052
  %cmp97 = icmp eq %union.tree_node* %16, %17, !dbg !3052
  br i1 %cmp97, label %cond.true105, label %land.lhs.true98, !dbg !3052

land.lhs.true98:                                  ; preds = %land.lhs.true94
  %hard_register = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3052
  %18 = bitcast i24* %hard_register to i32*, !dbg !3052
  %bf.load99 = load i32, i32* %18, align 8, !dbg !3052
  %bf.clear101 = and i32 %bf.load99, 2, !dbg !3052
  %tobool102 = icmp eq i32 %bf.clear101, 0, !dbg !3052
  %tobool104 = icmp ne i8 %really_expand, 0, !dbg !3052
  %or.cond = and i1 %tobool102, %tobool104, !dbg !3052
  br i1 %or.cond, label %if.end109, label %cond.true105, !dbg !3052

cond.true105:                                     ; preds = %land.lhs.true94, %land.lhs.true87, %land.lhs.true80, %lor.lhs.false72, %land.lhs.true98
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 957, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3052
  br label %if.end109, !dbg !3052

if.end109:                                        ; preds = %if.then66, %cond.true105, %land.lhs.true98, %if.end60
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3054
  %bf.load111 = load i64, i64* %19, align 8, !dbg !3054
  %bf.cast1133 = and i64 %bf.load111, 65535, !dbg !3056
  %cmp114 = icmp eq i64 %bf.cast1133, 32, !dbg !3056
  br i1 %cmp114, label %if.else124, label %land.lhs.true116, !dbg !3057

land.lhs.true116:                                 ; preds = %if.end109
  %bf.load118 = load i64, i64* %0, align 8, !dbg !3058
  %bf.cast1209 = and i64 %bf.load118, 65535, !dbg !3059
  %cmp121 = icmp eq i64 %bf.cast1209, 141, !dbg !3059
  br i1 %cmp121, label %if.else124, label %cleanup, !dbg !3060

if.else124:                                       ; preds = %land.lhs.true116, %if.end109
  %decl_flag_1126 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3061
  %20 = bitcast i40* %decl_flag_1126 to i64*, !dbg !3061
  %bf.load127 = load i64, i64* %20, align 8, !dbg !3061
  %bf.cast1304 = and i64 %bf.load127, 33554432, !dbg !3061
  %tobool131 = icmp eq i64 %bf.cast1304, 0, !dbg !3061
  br i1 %tobool131, label %if.else133, label %cleanup, !dbg !3063

if.else133:                                       ; preds = %if.else124
  %bf.cast1395 = and i64 %bf.load127, 67108864, !dbg !3064
  %tobool140 = icmp eq i64 %bf.cast1395, 0, !dbg !3064
  br i1 %tobool140, label %if.else142, label %cleanup, !dbg !3066

if.else142:                                       ; preds = %if.else133
  %bf.cast1476 = and i64 %bf.load111, 67108864, !dbg !3067
  %tobool148 = icmp eq i64 %bf.cast1476, 0, !dbg !3067
  br i1 %tobool148, label %if.else150, label %cleanup, !dbg !3069

if.else150:                                       ; preds = %if.else142
  %bf.load152 = load i64, i64* %0, align 8, !dbg !3070
  %bf.cast1547 = and i64 %bf.load152, 65535, !dbg !3072
  %cmp155 = icmp eq i64 %bf.cast1547, 141, !dbg !3072
  br i1 %cmp155, label %if.else169, label %land.lhs.true157, !dbg !3073

land.lhs.true157:                                 ; preds = %if.else150
  %arrayidx162 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast1133, i64 11, !dbg !3074
  %21 = load i8, i8* %arrayidx162, align 1, !dbg !3074
  %tobool164 = icmp eq i8 %21, 0, !dbg !3074
  br i1 %tobool164, label %if.else169, label %land.lhs.true165, !dbg !3074

land.lhs.true165:                                 ; preds = %land.lhs.true157
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3074
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3074
  %cmp166 = icmp eq %struct.rtx_def* %22, null, !dbg !3074
  br i1 %cmp166, label %if.else169, label %cleanup, !dbg !3075

if.else169:                                       ; preds = %land.lhs.true165, %land.lhs.true157, %if.else150
  %23 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3076
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3078
  %cmp172 = icmp eq %union.tree_node* %23, %24, !dbg !3079
  br i1 %cmp172, label %if.then174, label %if.else178, !dbg !3080

if.then174:                                       ; preds = %if.else169
  %tobool175 = icmp eq i8 %really_expand, 0, !dbg !3081
  br i1 %tobool175, label %cleanup, label %if.then176, !dbg !3084

if.then176:                                       ; preds = %if.then174
  tail call fastcc void @expand_one_error_var(%union.tree_node* %cond) #7, !dbg !3085
  br label %cleanup, !dbg !3085

if.else178:                                       ; preds = %if.else169
  br i1 %cmp114, label %land.lhs.true185, label %if.else196, !dbg !3086

land.lhs.true185:                                 ; preds = %if.else178
  %hard_register187 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3088
  %25 = bitcast i24* %hard_register187 to i32*, !dbg !3088
  %bf.load188 = load i32, i32* %25, align 8, !dbg !3088
  %bf.clear190 = and i32 %bf.load188, 2, !dbg !3088
  %tobool191 = icmp eq i32 %bf.clear190, 0, !dbg !3088
  br i1 %tobool191, label %if.else196, label %if.then192, !dbg !3089

if.then192:                                       ; preds = %land.lhs.true185
  %tobool193 = icmp eq i8 %really_expand, 0, !dbg !3090
  br i1 %tobool193, label %cleanup, label %if.then194, !dbg !3093

if.then194:                                       ; preds = %if.then192
  tail call fastcc void @expand_one_hard_reg_var(%union.tree_node* %cond) #7, !dbg !3094
  br label %cleanup, !dbg !3094

if.else196:                                       ; preds = %land.lhs.true185, %if.else178
  %call197 = tail call zeroext i8 @use_register_for_decl(%union.tree_node* %cond) #6, !dbg !3095
  %tobool198 = icmp eq i8 %call197, 0, !dbg !3095
  br i1 %tobool198, label %if.else203, label %if.then199, !dbg !3097

if.then199:                                       ; preds = %if.else196
  %tobool200 = icmp eq i8 %really_expand, 0, !dbg !3098
  br i1 %tobool200, label %cleanup, label %if.then201, !dbg !3101

if.then201:                                       ; preds = %if.then199
  tail call fastcc void @expand_one_register_var(%union.tree_node* %var) #7, !dbg !3102
  br label %cleanup, !dbg !3102

if.else203:                                       ; preds = %if.else196
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3103
  %26 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !3103
  %call205 = tail call i32 @host_integerp(%union.tree_node* %26, i32 1) #6, !dbg !3105
  %tobool206 = icmp eq i32 %call205, 0, !dbg !3105
  br i1 %tobool206, label %if.then207, label %if.else211, !dbg !3106

if.then207:                                       ; preds = %if.else203
  %tobool208 = icmp eq i8 %really_expand, 0, !dbg !3107
  br i1 %tobool208, label %cleanup, label %if.then209, !dbg !3110

if.then209:                                       ; preds = %if.then207
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0), %union.tree_node* %cond) #6, !dbg !3111
  tail call fastcc void @expand_one_error_var(%union.tree_node* %cond) #7, !dbg !3113
  br label %cleanup, !dbg !3114

if.else211:                                       ; preds = %if.else203
  %call212 = tail call fastcc zeroext i8 @defer_stack_allocation(%union.tree_node* %cond, i8 zeroext %toplevel) #7, !dbg !3115
  %tobool213 = icmp eq i8 %call212, 0, !dbg !3115
  br i1 %tobool213, label %if.else215, label %if.then214, !dbg !3117

if.then214:                                       ; preds = %if.else211
  tail call fastcc void @add_stack_var(%union.tree_node* %var) #7, !dbg !3118
  br label %cleanup

if.else215:                                       ; preds = %if.else211
  %tobool216 = icmp eq i8 %really_expand, 0, !dbg !3119
  br i1 %tobool216, label %if.end218, label %if.then217, !dbg !3122

if.then217:                                       ; preds = %if.else215
  tail call fastcc void @expand_one_stack_var(%union.tree_node* %var) #7, !dbg !3123
  br label %if.end218, !dbg !3123

if.end218:                                        ; preds = %if.else215, %if.then217
  %27 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !3124
  %call221 = tail call i64 @tree_low_cst(%union.tree_node* %27, i32 1) #6, !dbg !3125
  br label %cleanup, !dbg !3126

cleanup:                                          ; preds = %land.lhs.true116, %land.lhs.true165, %if.then174, %if.then192, %if.then199, %if.then207, %if.else142, %if.else133, %if.else124, %if.then194, %if.then214, %if.then209, %if.then201, %if.then176, %if.end218
  %retval.0 = phi i64 [ %call221, %if.end218 ], [ 0, %if.else124 ], [ 0, %if.else142 ], [ 0, %if.then176 ], [ 0, %if.then174 ], [ 0, %if.then201 ], [ 0, %if.then199 ], [ 0, %if.then207 ], [ 0, %if.then209 ], [ 0, %if.then214 ], [ 0, %if.then192 ], [ 0, %if.then194 ], [ 0, %land.lhs.true165 ], [ 0, %if.else133 ], [ 0, %land.lhs.true116 ], !dbg !3021
  ret i64 %retval.0, !dbg !3127
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @account_used_vars_for_block(%union.tree_node* %block, i8 zeroext %toplevel) unnamed_addr #5 !dbg !3128 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !3132, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i8 %toplevel, metadata !3133, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i64 0, metadata !3135, metadata !DIExpression()), !dbg !3136
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3137
  br label %for.cond, !dbg !3139

for.cond:                                         ; preds = %for.inc, %entry
  %t.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ]
  %size.0 = phi i64 [ 0, %entry ], [ %size.1, %for.inc ], !dbg !3136
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !3140
  call void @llvm.dbg.value(metadata i64 %size.0, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3134, metadata !DIExpression()), !dbg !3136
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !3141
  br i1 %tobool, label %for.end, label %for.body, !dbg !3141

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3142
  %bf.load = load i64, i64* %1, align 8, !dbg !3142
  %bf.cast1 = and i64 %bf.load, 16777216, !dbg !3142
  %tobool2 = icmp eq i64 %bf.cast1, 0, !dbg !3142
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !3145

if.then:                                          ; preds = %for.body
  %call = tail call fastcc i64 @expand_one_var(%union.tree_node* nonnull %t.0, i8 zeroext %toplevel, i8 zeroext 0) #7, !dbg !3146
  %add = add nsw i64 %size.0, %call, !dbg !3147
  call void @llvm.dbg.value(metadata i64 %add, metadata !3135, metadata !DIExpression()), !dbg !3136
  br label %for.inc, !dbg !3148

for.inc:                                          ; preds = %for.body, %if.then
  %size.1 = phi i64 [ %add, %if.then ], [ %size.0, %for.body ], !dbg !3136
  call void @llvm.dbg.value(metadata i64 %size.1, metadata !3135, metadata !DIExpression()), !dbg !3136
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3149
  br label %for.cond, !dbg !3150, !llvm.loop !3151

for.end:                                          ; preds = %for.cond
  %size.0.lcssa = phi i64 [ %size.0, %for.cond ], !dbg !3136
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !3135, metadata !DIExpression()), !dbg !3136
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3153
  br label %for.cond4, !dbg !3155

for.cond4:                                        ; preds = %for.body6, %for.end
  %t.1.in = phi %union.tree_node** [ %2, %for.end ], [ %chain11, %for.body6 ]
  %size.2 = phi i64 [ %size.0.lcssa, %for.end ], [ %add8, %for.body6 ], !dbg !3136
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !3156
  call void @llvm.dbg.value(metadata i64 %size.2, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !3134, metadata !DIExpression()), !dbg !3136
  %tobool5 = icmp eq %union.tree_node* %t.1, null, !dbg !3157
  br i1 %tobool5, label %for.end12, label %for.body6, !dbg !3157

for.body6:                                        ; preds = %for.cond4
  %call7 = tail call fastcc i64 @account_used_vars_for_block(%union.tree_node* nonnull %t.1, i8 zeroext 0) #7, !dbg !3158
  %add8 = add nsw i64 %size.2, %call7, !dbg !3160
  call void @llvm.dbg.value(metadata i64 %add8, metadata !3135, metadata !DIExpression()), !dbg !3136
  %chain11 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3161
  br label %for.cond4, !dbg !3162, !llvm.loop !3163

for.end12:                                        ; preds = %for.cond4
  %size.2.lcssa = phi i64 [ %size.2, %for.cond4 ], !dbg !3136
  call void @llvm.dbg.value(metadata i64 %size.2.lcssa, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i64 %size.2.lcssa, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i64 %size.2.lcssa, metadata !3135, metadata !DIExpression()), !dbg !3136
  ret i64 %size.2.lcssa, !dbg !3165
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @account_stack_vars() unnamed_addr #5 !dbg !3166 {
entry:
  %0 = load i64, i64* @stack_vars_num, align 8, !dbg !3173
  call void @llvm.dbg.value(metadata i64 %0, metadata !3171, metadata !DIExpression()), !dbg !3174
  call void @llvm.dbg.value(metadata i64 0, metadata !3172, metadata !DIExpression()), !dbg !3174
  call void @llvm.dbg.value(metadata i64 0, metadata !3168, metadata !DIExpression()), !dbg !3174
  br label %for.cond, !dbg !3175

for.cond:                                         ; preds = %for.inc10, %entry
  %size.0 = phi i64 [ 0, %entry ], [ %size.1, %for.inc10 ], !dbg !3177
  %si.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc10 ], !dbg !3178
  call void @llvm.dbg.value(metadata i64 %si.0, metadata !3168, metadata !DIExpression()), !dbg !3174
  call void @llvm.dbg.value(metadata i64 %size.0, metadata !3172, metadata !DIExpression()), !dbg !3174
  %exitcond = icmp eq i64 %si.0, %0, !dbg !3179
  br i1 %exitcond, label %for.end11, label %for.body, !dbg !3181

for.body:                                         ; preds = %for.cond
  %1 = load i64*, i64** @stack_vars_sorted, align 8, !dbg !3182
  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %si.0, !dbg !3182
  %2 = load i64, i64* %arrayidx, align 8, !dbg !3182
  call void @llvm.dbg.value(metadata i64 %2, metadata !3170, metadata !DIExpression()), !dbg !3174
  %3 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3184
  %representative = getelementptr inbounds %struct.stack_var, %struct.stack_var* %3, i64 %2, i32 4, !dbg !3186
  %4 = load i64, i64* %representative, align 8, !dbg !3186
  %cmp2 = icmp eq i64 %4, %2, !dbg !3187
  br i1 %cmp2, label %if.end, label %for.inc10, !dbg !3188

if.end:                                           ; preds = %for.body
  %size4 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %3, i64 %2, i32 2, !dbg !3189
  %5 = load i64, i64* %size4, align 8, !dbg !3189
  call void @llvm.dbg.value(metadata i64 %add, metadata !3172, metadata !DIExpression()), !dbg !3174
  call void @llvm.dbg.value(metadata i64 %2, metadata !3169, metadata !DIExpression()), !dbg !3174
  br label %for.cond5, !dbg !3190

for.cond5:                                        ; preds = %for.body7, %if.end
  %6 = phi %struct.stack_var* [ %3, %if.end ], [ %8, %for.body7 ]
  %j.0 = phi i64 [ %2, %if.end ], [ %9, %for.body7 ], !dbg !3192
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !3169, metadata !DIExpression()), !dbg !3174
  %cmp6 = icmp eq i64 %j.0, -1, !dbg !3193
  br i1 %cmp6, label %for.inc10.loopexit, label %for.body7, !dbg !3195

for.body7:                                        ; preds = %for.cond5
  %decl = getelementptr inbounds %struct.stack_var, %struct.stack_var* %6, i64 %j.0, i32 0, !dbg !3196
  %7 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3196
  tail call fastcc void @set_rtl(%union.tree_node* %7, %struct.rtx_def* null) #7, !dbg !3197
  %8 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3198
  %next = getelementptr inbounds %struct.stack_var, %struct.stack_var* %8, i64 %j.0, i32 5, !dbg !3199
  %9 = load i64, i64* %next, align 8, !dbg !3199
  call void @llvm.dbg.value(metadata i64 %9, metadata !3169, metadata !DIExpression()), !dbg !3174
  br label %for.cond5, !dbg !3200, !llvm.loop !3201

for.inc10.loopexit:                               ; preds = %for.cond5
  %add = add nsw i64 %size.0, %5, !dbg !3203
  br label %for.inc10, !dbg !3204

for.inc10:                                        ; preds = %for.inc10.loopexit, %for.body
  %size.1 = phi i64 [ %size.0, %for.body ], [ %add, %for.inc10.loopexit ], !dbg !3174
  call void @llvm.dbg.value(metadata i64 %size.1, metadata !3172, metadata !DIExpression()), !dbg !3174
  %inc = add i64 %si.0, 1, !dbg !3204
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3168, metadata !DIExpression()), !dbg !3174
  br label %for.cond, !dbg !3205, !llvm.loop !3206

for.end11:                                        ; preds = %for.cond
  %size.0.lcssa = phi i64 [ %size.0, %for.cond ], !dbg !3177
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !3172, metadata !DIExpression()), !dbg !3174
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !3172, metadata !DIExpression()), !dbg !3174
  call void @llvm.dbg.value(metadata i64 %size.0.lcssa, metadata !3172, metadata !DIExpression()), !dbg !3174
  ret i64 %size.0.lcssa, !dbg !3208
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fini_vars_expansion() unnamed_addr #5 !dbg !3209 {
entry:
  %0 = load i64, i64* @stack_vars_num, align 8, !dbg !3213
  call void @llvm.dbg.value(metadata i64 %0, metadata !3212, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.value(metadata i64 0, metadata !3211, metadata !DIExpression()), !dbg !3214
  br label %for.cond, !dbg !3215

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !3217
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3211, metadata !DIExpression()), !dbg !3214
  %1 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3214
  %exitcond = icmp eq i64 %i.0, %0, !dbg !3218
  br i1 %exitcond, label %for.end, label %for.body, !dbg !3220

for.body:                                         ; preds = %for.cond
  %conflicts = getelementptr inbounds %struct.stack_var, %struct.stack_var* %1, i64 %i.0, i32 6, !dbg !3221
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %conflicts, align 8, !dbg !3221
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !3221
  %3 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3221
  %conflicts2 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %3, i64 %i.0, i32 6, !dbg !3221
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %conflicts2, align 8, !dbg !3221
  %inc = add i64 %i.0, 1, !dbg !3222
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3211, metadata !DIExpression()), !dbg !3214
  br label %for.cond, !dbg !3223, !llvm.loop !3224

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.stack_var* [ %1, %for.cond ], !dbg !3214
  %4 = bitcast %struct.stack_var* %.lcssa to i8*, !dbg !3226
  tail call void @free(i8* %4) #6, !dbg !3226
  %5 = load i8*, i8** bitcast (i64** @stack_vars_sorted to i8**), align 8, !dbg !3227
  tail call void @free(i8* %5) #6, !dbg !3227
  store %struct.stack_var* null, %struct.stack_var** @stack_vars, align 8, !dbg !3228
  store i64 0, i64* @stack_vars_num, align 8, !dbg !3229
  store i64 0, i64* @stack_vars_alloc, align 8, !dbg !3230
  ret void, !dbg !3231
}

; Function Attrs: nounwind uwtable
define internal i32 @gimple_expand_cfg() #5 !dbg !3232 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %ei201 = alloca %struct.edge_iterator, align 8
  %tmp202 = alloca %struct.edge_iterator, align 8
  %ei229 = alloca %struct.edge_iterator, align 8
  %tmp230 = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3272
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3272
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !3273
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3273
  %call = tail call i32 @rewrite_out_of_ssa(%struct.ssaexpand* nonnull @SA) #6, !dbg !3274
  %2 = load %struct._var_map*, %struct._var_map** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 0), align 8, !dbg !3275
  %num_partitions = getelementptr inbounds %struct._var_map, %struct._var_map* %2, i64 0, i32 3, !dbg !3276
  %3 = load i32, i32* %num_partitions, align 8, !dbg !3276
  %conv = zext i32 %3 to i64, !dbg !3277
  %call1 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !3278
  store i8* %call1, i8** bitcast (%struct.rtx_def*** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 2) to i8**), align 8, !dbg !3279
  store i32 1, i32* @currently_expanding_to_rtl, align 4, !dbg !3280
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3281
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !3281
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3281
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !3281
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3281
  tail call void @rtl_profile_for_bb(%struct.basic_block_def* %6) #6, !dbg !3282
  tail call void @insn_locators_alloc() #6, !dbg !3283
  %7 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_minimal**), align 8, !dbg !3284
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %7, i64 0, i32 1, !dbg !3284
  %8 = load i32, i32* %locus, align 8, !dbg !3284
  %cmp = icmp ult i32 %8, 2, !dbg !3284
  br i1 %cmp, label %if.end11, label %if.then, !dbg !3286

if.then:                                          ; preds = %entry
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3287
  %function_start_locus = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 15, !dbg !3290
  %10 = load i32, i32* %function_start_locus, align 8, !dbg !3290
  %cmp4 = icmp eq i32 %10, 0, !dbg !3291
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !3292

if.then6:                                         ; preds = %if.then
  tail call void @set_curr_insn_source_location(i32 %8) #6, !dbg !3293
  br label %if.end11, !dbg !3293

if.else:                                          ; preds = %if.then
  tail call void @set_curr_insn_source_location(i32 %10) #6, !dbg !3294
  br label %if.end11

if.end11:                                         ; preds = %if.then6, %if.else, %entry
  %11 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !3295
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %11, i64 0, i32 5, !dbg !3295
  %12 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3295
  tail call void @set_curr_insn_block(%union.tree_node* %12) #6, !dbg !3296
  %call12 = tail call i32 @curr_insn_locator() #6, !dbg !3297
  store i32 %call12, i32* @prologue_locator, align 4, !dbg !3298
  %call13 = tail call %struct.rtx_def* @emit_note(i32 0) #6, !dbg !3299
  tail call fastcc void @discover_nonconstant_array_refs() #7, !dbg !3300
  %13 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 98), align 8, !dbg !3301
  tail call void %13() #6, !dbg !3302
  store i32 32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 22), align 4, !dbg !3303
  store i32 32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 25), align 8, !dbg !3304
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !3305
  store i32 32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 23), align 8, !dbg !3306
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3307
  %cfg15 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !3308
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg15, align 8, !dbg !3308
  %max_jumptable_ents = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 10, !dbg !3309
  store i32 0, i32* %max_jumptable_ents, align 4, !dbg !3310
  tail call fastcc void @expand_used_vars() #7, !dbg !3311
  %16 = load i32, i32* @warn_stack_protect, align 4, !dbg !3312
  %tobool = icmp eq i32 %16, 0, !dbg !3312
  br i1 %tobool, label %if.end28, label %if.then16, !dbg !3314

if.then16:                                        ; preds = %if.end11
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3315
  %calls_alloca = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 20, !dbg !3318
  %bf.load = load i32, i32* %calls_alloca, align 8, !dbg !3318
  %bf.clear = and i32 %bf.load, 524288, !dbg !3318
  %tobool18 = icmp eq i32 %bf.clear, 0, !dbg !3315
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !3319

if.then19:                                        ; preds = %if.then16
  %call20 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 181, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3320
  br label %if.end21, !dbg !3320

if.end21:                                         ; preds = %if.then16, %if.then19
  %.b = load i1, i1* @has_short_buffer, align 1, !dbg !3321
  %tobool23 = xor i1 %.b, true, !dbg !3321
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 9), align 8, !dbg !3323
  %tobool24 = icmp ne %union.tree_node* %18, null, !dbg !3324
  %or.cond = or i1 %tobool24, %tobool23, !dbg !3325
  br i1 %or.cond, label %if.end28, label %if.then25, !dbg !3325

if.then25:                                        ; preds = %if.end21
  %19 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3326
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %19, i64 93, i32 1, !dbg !3326
  %20 = load i32, i32* %value, align 8, !dbg !3326
  %call26 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 181, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.7, i64 0, i64 0), i32 %20) #6, !dbg !3327
  br label %if.end28, !dbg !3327

if.end28:                                         ; preds = %if.end11, %if.then25, %if.end21
  %21 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3328
  tail call void @expand_function_start(%union.tree_node* %21) #6, !dbg !3329
  call void @llvm.dbg.value(metadata i32 0, metadata !3255, metadata !DIExpression()), !dbg !3330
  br label %for.cond, !dbg !3331

for.cond:                                         ; preds = %for.inc, %if.end28
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end28 ], !dbg !3332
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3255, metadata !DIExpression()), !dbg !3330
  %22 = load %struct._var_map*, %struct._var_map** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 0), align 8, !dbg !3333
  %num_partitions29 = getelementptr inbounds %struct._var_map, %struct._var_map* %22, i64 0, i32 3, !dbg !3334
  %23 = load i32, i32* %num_partitions29, align 8, !dbg !3334
  %24 = zext i32 %23 to i64, !dbg !3335
  %cmp30 = icmp ult i64 %indvars.iv, %24, !dbg !3335
  br i1 %cmp30, label %for.body, label %for.end, !dbg !3336

for.body:                                         ; preds = %for.cond
  %25 = trunc i64 %indvars.iv to i32, !dbg !3337
  %call32 = tail call fastcc %union.tree_node* @partition_to_var(%struct._var_map* %22, i32 %25) #7, !dbg !3337
  %var33 = getelementptr inbounds %union.tree_node, %union.tree_node* %call32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3337
  %26 = bitcast i32* %var33 to %union.tree_node**, !dbg !3337
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !3337
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !3256, metadata !DIExpression()), !dbg !3338
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3339
  %bf.load34 = load i64, i64* %28, align 8, !dbg !3339
  %bf.cast3 = and i64 %bf.load34, 65535, !dbg !3341
  %cmp36 = icmp eq i64 %bf.cast3, 32, !dbg !3341
  br i1 %cmp36, label %for.body.if.end67_crit_edge, label %land.lhs.true38, !dbg !3342

for.body.if.end67_crit_edge:                      ; preds = %for.body
  br label %if.end67, !dbg !3342

land.lhs.true38:                                  ; preds = %for.body
  %29 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 2), align 8, !dbg !3343
  %arrayidx39 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %29, i64 %indvars.iv, !dbg !3344
  %30 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx39, align 8, !dbg !3344
  %tobool40 = icmp eq %struct.rtx_def* %30, null, !dbg !3344
  br i1 %tobool40, label %if.then41, label %if.end67, !dbg !3345

if.then41:                                        ; preds = %land.lhs.true38
  %arrayidx48 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast3, i64 11, !dbg !3346
  %31 = load i8, i8* %arrayidx48, align 1, !dbg !3346
  %tobool50 = icmp eq i8 %31, 0, !dbg !3346
  br i1 %tobool50, label %cond.end63, label %land.lhs.true51, !dbg !3346

land.lhs.true51:                                  ; preds = %if.then41
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3346
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3346
  %cmp52 = icmp eq %struct.rtx_def* %32, null, !dbg !3346
  br i1 %cmp52, label %cond.end63, label %cond.true, !dbg !3346

cond.true:                                        ; preds = %land.lhs.true51
  br i1 false, label %cond.false, label %cond.true57, !dbg !3346

cond.true57:                                      ; preds = %cond.true
  br label %cond.end63, !dbg !3346

cond.false:                                       ; preds = %cond.true
  br label %cond.end63, !dbg !3346

cond.end63:                                       ; preds = %land.lhs.true51, %if.then41, %cond.true57, %cond.false
  %cond64 = phi %struct.rtx_def* [ %32, %cond.true57 ], [ undef, %cond.false ], [ null, %land.lhs.true51 ], [ null, %if.then41 ], !dbg !3346
  store %struct.rtx_def* %cond64, %struct.rtx_def** %arrayidx39, align 8, !dbg !3347
  br label %if.end67, !dbg !3348

if.end67:                                         ; preds = %for.body.if.end67_crit_edge, %land.lhs.true38, %cond.end63
  %33 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 2), align 8, !dbg !3349
  %arrayidx69 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %33, i64 %indvars.iv, !dbg !3349
  %34 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx69, align 8, !dbg !3349
  %tobool70 = icmp eq %struct.rtx_def* %34, null, !dbg !3349
  br i1 %tobool70, label %cond.true71, label %cond.end73, !dbg !3349

cond.true71:                                      ; preds = %if.end67
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3792, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3349
  br label %cond.end73, !dbg !3349

cond.end73:                                       ; preds = %if.end67, %cond.true71
  %bf.load76 = load i64, i64* %28, align 8, !dbg !3350
  %bf.cast78 = and i64 %bf.load76, 65535, !dbg !3350
  %arrayidx81 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast78, i64 11, !dbg !3350
  %35 = load i8, i8* %arrayidx81, align 1, !dbg !3350
  %tobool83 = icmp eq i8 %35, 0, !dbg !3350
  br i1 %tobool83, label %cond.end102, label %land.lhs.true84, !dbg !3350

land.lhs.true84:                                  ; preds = %cond.end73
  %rtl86 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3350
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtl86, align 8, !dbg !3350
  %cmp87 = icmp eq %struct.rtx_def* %36, null, !dbg !3350
  br i1 %cmp87, label %cond.end102, label %cond.true89, !dbg !3350

cond.true89:                                      ; preds = %land.lhs.true84
  br i1 false, label %cond.false96, label %cond.true93, !dbg !3350

cond.true93:                                      ; preds = %cond.true89
  br label %cond.end102, !dbg !3350

cond.false96:                                     ; preds = %cond.true89
  br label %cond.end102, !dbg !3350

cond.end102:                                      ; preds = %land.lhs.true84, %cond.end73, %cond.true93, %cond.false96
  %37 = phi i8 [ %35, %cond.true93 ], [ undef, %cond.false96 ], [ %35, %land.lhs.true84 ], [ 0, %cond.end73 ]
  %cond103 = phi %struct.rtx_def* [ %36, %cond.true93 ], [ undef, %cond.false96 ], [ null, %land.lhs.true84 ], [ null, %cond.end73 ], !dbg !3350
  %38 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !3352
  %cmp104 = icmp eq %struct.rtx_def* %cond103, %38, !dbg !3353
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !3354

if.then106:                                       ; preds = %cond.end102
  tail call void @set_decl_rtl(%union.tree_node* %27, %struct.rtx_def* null) #6, !dbg !3355
  %bf.load109.pre = load i64, i64* %28, align 8, !dbg !3356
  %.pre11 = and i64 %bf.load109.pre, 65535, !dbg !3356
  %arrayidx114.phi.trans.insert = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %.pre11, i64 11, !dbg !3358
  %.pre12 = load i8, i8* %arrayidx114.phi.trans.insert, align 1, !dbg !3356
  br label %if.end107, !dbg !3355

if.end107:                                        ; preds = %if.then106, %cond.end102
  %39 = phi i8 [ %.pre12, %if.then106 ], [ %37, %cond.end102 ], !dbg !3356
  %tobool116 = icmp eq i8 %39, 0, !dbg !3356
  br i1 %tobool116, label %if.then122, label %land.lhs.true117, !dbg !3356

land.lhs.true117:                                 ; preds = %if.end107
  %rtl119 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3356
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtl119, align 8, !dbg !3356
  %cmp120 = icmp eq %struct.rtx_def* %40, null, !dbg !3356
  br i1 %cmp120, label %if.then122, label %for.inc, !dbg !3359

if.then122:                                       ; preds = %land.lhs.true117, %if.end107
  %41 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 2), align 8, !dbg !3360
  %arrayidx124 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %41, i64 %indvars.iv, !dbg !3360
  %42 = bitcast %struct.rtx_def** %arrayidx124 to i32**, !dbg !3360
  %43 = load i32*, i32** %42, align 8, !dbg !3360
  %bf.load125 = load i32, i32* %43, align 8, !dbg !3360
  %bf.clear126 = and i32 %bf.load125, 65535, !dbg !3360
  %cmp127 = icmp eq i32 %bf.clear126, 43, !dbg !3360
  br i1 %cmp127, label %if.then129, label %for.inc, !dbg !3363

if.then129:                                       ; preds = %if.then122
  %44 = bitcast i32* %43 to %struct.rtx_def*, !dbg !3363
  tail call void @set_mem_expr(%struct.rtx_def* %44, %union.tree_node* null) #6, !dbg !3364
  br label %for.inc, !dbg !3364

for.inc:                                          ; preds = %land.lhs.true117, %if.then129, %if.then122
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3365
  br label %for.cond, !dbg !3366, !llvm.loop !3367

for.end:                                          ; preds = %for.cond
  %45 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_minimal**), align 8, !dbg !3369
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %45, i64 0, i32 3, !dbg !3369
  %46 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !3369
  %tobool135 = icmp eq %union.tree_node* %46, null, !dbg !3369
  br i1 %tobool135, label %if.end153, label %land.lhs.true136, !dbg !3371

land.lhs.true136:                                 ; preds = %for.end
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 56), align 16, !dbg !3372
  %cmp139 = icmp eq %union.tree_node* %46, %47, !dbg !3372
  br i1 %cmp139, label %land.lhs.true141, label %if.end153, !dbg !3373

land.lhs.true141:                                 ; preds = %land.lhs.true136
  %context = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %45, i64 0, i32 4, !dbg !3374
  %48 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3374
  %tobool143 = icmp eq %union.tree_node* %48, null, !dbg !3374
  br i1 %tobool143, label %if.then152, label %lor.lhs.false, !dbg !3374

lor.lhs.false:                                    ; preds = %land.lhs.true141
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3374
  %bf.load147 = load i64, i64* %49, align 8, !dbg !3374
  %bf.cast1492 = and i64 %bf.load147, 65535, !dbg !3374
  %cmp150 = icmp eq i64 %bf.cast1492, 40, !dbg !3374
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !3375

if.then152:                                       ; preds = %land.lhs.true141, %lor.lhs.false
  tail call void @expand_main_function() #6, !dbg !3376
  br label %if.end153, !dbg !3376

if.end153:                                        ; preds = %for.end, %if.then152, %lor.lhs.false, %land.lhs.true136
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 9), align 8, !dbg !3377
  %tobool154 = icmp eq %union.tree_node* %50, null, !dbg !3379
  br i1 %tobool154, label %if.end156, label %if.then155, !dbg !3380

if.then155:                                       ; preds = %if.end153
  tail call void @stack_protect_prologue() #6, !dbg !3381
  br label %if.end156, !dbg !3381

if.end156:                                        ; preds = %if.end153, %if.then155
  tail call void @expand_phi_nodes(%struct.ssaexpand* nonnull @SA) #6, !dbg !3382
  tail call void @rtl_register_cfg_hooks() #6, !dbg !3383
  %call157 = tail call fastcc %struct.basic_block_def* @construct_init_block() #7, !dbg !3384
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call157, metadata !3235, metadata !DIExpression()), !dbg !3330
  %51 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3385
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8, !dbg !3385
  %52 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3385
  %cfg159 = getelementptr inbounds %struct.function, %struct.function* %52, i64 0, i32 1, !dbg !3385
  %53 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg159, align 8, !dbg !3385
  %x_entry_block_ptr160 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %53, i64 0, i32 0, !dbg !3385
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr160, align 8, !dbg !3385
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %54, i64 0, i32 1, !dbg !3385
  %call161 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3385
  %55 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3385
  %56 = extractvalue { i32, %struct.VEC_edge_gc** } %call161, 0, !dbg !3385
  store i32 %56, i32* %55, align 8, !dbg !3385
  %57 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3385
  %58 = extractvalue { i32, %struct.VEC_edge_gc** } %call161, 1, !dbg !3385
  store %struct.VEC_edge_gc** %58, %struct.VEC_edge_gc*** %57, align 8, !dbg !3385
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %51, i64 16, i1 false), !dbg !3385
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8, !dbg !3385
  %59 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3387
  %60 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3387
  br label %for.cond162, !dbg !3385

for.cond162:                                      ; preds = %for.body165, %if.end156
  %61 = load i32, i32* %59, align 8, !dbg !3389
  %62 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %60, align 8, !dbg !3389
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3254, metadata !DIExpression(DW_OP_deref)), !dbg !3330
  %call163 = call fastcc zeroext i8 @ei_cond(i32 %61, %struct.VEC_edge_gc** %62, %struct.edge_def** nonnull %e) #7, !dbg !3389
  %tobool164 = icmp eq i8 %call163, 0, !dbg !3385
  br i1 %tobool164, label %for.end167, label %for.body165, !dbg !3385

for.body165:                                      ; preds = %for.cond162
  %63 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3390
  call void @llvm.dbg.value(metadata %struct.edge_def* %63, metadata !3254, metadata !DIExpression()), !dbg !3330
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %63, i64 0, i32 7, !dbg !3391
  %64 = load i32, i32* %flags, align 8, !dbg !3392
  %and = and i32 %64, -4097, !dbg !3392
  store i32 %and, i32* %flags, align 8, !dbg !3392
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3330
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3389
  br label %for.cond162, !dbg !3389, !llvm.loop !3393

for.end167:                                       ; preds = %for.cond162
  %call168 = call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !3395
  store %struct.pointer_map_t* %call168, %struct.pointer_map_t** @lab_rtx_for_bb, align 8, !dbg !3396
  br label %for.cond169, !dbg !3397

for.cond169:                                      ; preds = %for.body174, %for.end167
  %call157.pn = phi %struct.basic_block_def* [ %call157, %for.end167 ], [ %call175, %for.body174 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call157.pn, i64 0, i32 6, !dbg !3399
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3399
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3234, metadata !DIExpression()), !dbg !3330
  %65 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3400
  %cfg171 = getelementptr inbounds %struct.function, %struct.function* %65, i64 0, i32 1, !dbg !3400
  %66 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg171, align 8, !dbg !3400
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %66, i64 0, i32 1, !dbg !3400
  %67 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3400
  %cmp172 = icmp eq %struct.basic_block_def* %bb.0, %67, !dbg !3400
  br i1 %cmp172, label %for.end178, label %for.body174, !dbg !3397

for.body174:                                      ; preds = %for.cond169
  %call175 = call fastcc %struct.basic_block_def* @expand_gimple_basic_block(%struct.basic_block_def* %bb.0) #7, !dbg !3402
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call175, metadata !3234, metadata !DIExpression()), !dbg !3330
  br label %for.cond169, !dbg !3400, !llvm.loop !3403

for.end178:                                       ; preds = %for.cond169
  %68 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3405
  %tobool179 = icmp eq i32 %68, 0, !dbg !3405
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !3407

if.then180:                                       ; preds = %for.end178
  call fastcc void @expand_debug_locations() #7, !dbg !3408
  br label %if.end181, !dbg !3408

if.end181:                                        ; preds = %for.end178, %if.then180
  %call182 = call i32 @execute_free_datastructures() #6, !dbg !3409
  call void @finish_out_of_ssa(%struct.ssaexpand* nonnull @SA) #6, !dbg !3410
  %69 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3411
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %69, i64 0, i32 3, !dbg !3412
  %70 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3412
  %in_ssa_p = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %70, i64 0, i32 10, !dbg !3413
  %bf.load184 = load i8, i8* %in_ssa_p, align 8, !dbg !3414
  %bf.clear185 = and i8 %bf.load184, -2, !dbg !3414
  store i8 %bf.clear185, i8* %in_ssa_p, align 8, !dbg !3414
  %71 = load %struct.pointer_map_t*, %struct.pointer_map_t** @lab_rtx_for_bb, align 8, !dbg !3415
  call void @pointer_map_destroy(%struct.pointer_map_t* %71) #6, !dbg !3416
  call void @free_histograms() #6, !dbg !3417
  call fastcc void @construct_exit_block() #7, !dbg !3418
  %72 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !3419
  %initial187 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %72, i64 0, i32 5, !dbg !3419
  %73 = load %union.tree_node*, %union.tree_node** %initial187, align 8, !dbg !3419
  call void @set_curr_insn_block(%union.tree_node* %73) #6, !dbg !3420
  call void @insn_locators_finalize() #6, !dbg !3421
  %74 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3422
  call void @set_eh_throw_stmt_table(%struct.function* %74, %struct.htab* null) #6, !dbg !3423
  %call189 = call %struct.rtx_def* @get_insns() #6, !dbg !3424
  call void @rebuild_jump_labels(%struct.rtx_def* %call189) #6, !dbg !3425
  %75 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3426
  %cfg191 = getelementptr inbounds %struct.function, %struct.function* %75, i64 0, i32 1, !dbg !3426
  %76 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg191, align 8, !dbg !3426
  %x_entry_block_ptr192 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %76, i64 0, i32 0, !dbg !3426
  %77 = bitcast %struct.edge_iterator* %ei201 to i8*, !dbg !3427
  %78 = bitcast %struct.edge_iterator* %tmp202 to i8*, !dbg !3428
  %79 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp202, i64 0, i32 0, !dbg !3428
  %80 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp202, i64 0, i32 1, !dbg !3428
  %81 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei201, i64 0, i32 0, !dbg !3430
  %82 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei201, i64 0, i32 1, !dbg !3430
  br label %for.cond193, !dbg !3426

for.cond193:                                      ; preds = %for.end213, %if.end181
  %83 = phi %struct.control_flow_graph* [ %76, %if.end181 ], [ %.pre4, %for.end213 ], !dbg !3432
  %bb.1.in = phi %struct.basic_block_def** [ %x_entry_block_ptr192, %if.end181 ], [ %next_bb215, %for.end213 ]
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !3433
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !3234, metadata !DIExpression()), !dbg !3330
  %x_exit_block_ptr196 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %83, i64 0, i32 1, !dbg !3432
  %84 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr196, align 8, !dbg !3432
  %cmp197 = icmp eq %struct.basic_block_def* %bb.1, %84, !dbg !3432
  br i1 %cmp197, label %for.end216, label %for.body199, !dbg !3426

for.body199:                                      ; preds = %for.cond193
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #8, !dbg !3434
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #8, !dbg !3435
  %succs203 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 1, !dbg !3435
  %call204 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs203) #7, !dbg !3435
  %85 = extractvalue { i32, %struct.VEC_edge_gc** } %call204, 0, !dbg !3435
  store i32 %85, i32* %79, align 8, !dbg !3435
  %86 = extractvalue { i32, %struct.VEC_edge_gc** } %call204, 1, !dbg !3435
  store %struct.VEC_edge_gc** %86, %struct.VEC_edge_gc*** %80, align 8, !dbg !3435
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* nonnull align 8 %78, i64 16, i1 false), !dbg !3435
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #8, !dbg !3435
  br label %for.cond205, !dbg !3436

for.cond205:                                      ; preds = %if.end212, %for.body199
  %87 = load i32, i32* %81, align 8, !dbg !3437
  %88 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %82, align 8, !dbg !3437
  %call206 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %87, %struct.VEC_edge_gc** %88) #7, !dbg !3437
  call void @llvm.dbg.value(metadata %struct.edge_def* %call206, metadata !3260, metadata !DIExpression()), !dbg !3427
  %tobool207 = icmp eq %struct.edge_def* %call206, null, !dbg !3438
  br i1 %tobool207, label %for.end213, label %for.body208, !dbg !3438

for.body208:                                      ; preds = %for.cond205
  %insns = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call206, i64 0, i32 2, !dbg !3439
  %r = bitcast %union.edge_def_insns* %insns to %struct.rtx_def**, !dbg !3442
  %89 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !3442
  %tobool209 = icmp eq %struct.rtx_def* %89, null, !dbg !3443
  br i1 %tobool209, label %if.else211, label %if.then210, !dbg !3444

if.then210:                                       ; preds = %for.body208
  call void @commit_one_edge_insertion(%struct.edge_def* nonnull %call206) #6, !dbg !3445
  br label %if.end212, !dbg !3445

if.else211:                                       ; preds = %for.body208
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei201, metadata !3264, metadata !DIExpression(DW_OP_deref)), !dbg !3427
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei201) #7, !dbg !3446
  br label %if.end212

if.end212:                                        ; preds = %if.else211, %if.then210
  br label %for.cond205, !dbg !3447, !llvm.loop !3448

for.end213:                                       ; preds = %for.cond205
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #8, !dbg !3450
  %next_bb215 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 6, !dbg !3432
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3432
  %cfg195.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3451
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg195.phi.trans.insert, align 8, !dbg !3432
  br label %for.cond193, !dbg !3432, !llvm.loop !3452

for.end216:                                       ; preds = %for.cond193
  %.lcssa15 = phi %struct.control_flow_graph* [ %83, %for.cond193 ], !dbg !3432
  %bb.1.lcssa = phi %struct.basic_block_def* [ %bb.1, %for.cond193 ], !dbg !3433
  store i32 0, i32* @currently_expanding_to_rtl, align 4, !dbg !3454
  %x_entry_block_ptr219 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa15, i64 0, i32 0, !dbg !3455
  %90 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr219, align 8, !dbg !3455
  %91 = bitcast %struct.edge_iterator* %ei229 to i8*, !dbg !3456
  %92 = bitcast %struct.edge_iterator* %tmp230 to i8*, !dbg !3457
  %93 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp230, i64 0, i32 0, !dbg !3457
  %94 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp230, i64 0, i32 1, !dbg !3457
  %95 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei229, i64 0, i32 0, !dbg !3459
  %96 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei229, i64 0, i32 1, !dbg !3459
  br label %for.cond221, !dbg !3455

for.cond221:                                      ; preds = %for.end249, %for.end216
  %97 = phi %struct.basic_block_def* [ %bb.1.lcssa, %for.end216 ], [ %.pre7, %for.end249 ], !dbg !3461
  %98 = phi %struct.control_flow_graph* [ %.lcssa15, %for.end216 ], [ %.pre6, %for.end249 ], !dbg !3461
  %.pn = phi %struct.basic_block_def* [ %90, %for.end216 ], [ %bb.2, %for.end249 ]
  %bb.2.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3462
  %bb.2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.2.in, align 8, !dbg !3462
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2, metadata !3234, metadata !DIExpression()), !dbg !3330
  %cmp225 = icmp eq %struct.basic_block_def* %bb.2, %97, !dbg !3461
  br i1 %cmp225, label %for.end252, label %for.body227, !dbg !3455

for.body227:                                      ; preds = %for.cond221
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #8, !dbg !3463
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #8, !dbg !3464
  %succs231 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 1, !dbg !3464
  %call232 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs231) #7, !dbg !3464
  %99 = extractvalue { i32, %struct.VEC_edge_gc** } %call232, 0, !dbg !3464
  store i32 %99, i32* %93, align 8, !dbg !3464
  %100 = extractvalue { i32, %struct.VEC_edge_gc** } %call232, 1, !dbg !3464
  store %struct.VEC_edge_gc** %100, %struct.VEC_edge_gc*** %94, align 8, !dbg !3464
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* nonnull align 8 %92, i64 16, i1 false), !dbg !3464
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #8, !dbg !3464
  br label %for.cond233, !dbg !3465

for.cond233:                                      ; preds = %if.end248, %for.body227
  %101 = load i32, i32* %95, align 8, !dbg !3466
  %102 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %96, align 8, !dbg !3466
  %call234 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %101, %struct.VEC_edge_gc** %102) #7, !dbg !3466
  call void @llvm.dbg.value(metadata %struct.edge_def* %call234, metadata !3265, metadata !DIExpression()), !dbg !3456
  %tobool235 = icmp eq %struct.edge_def* %call234, null, !dbg !3467
  br i1 %tobool235, label %for.end249, label %for.body236, !dbg !3467

for.body236:                                      ; preds = %for.cond233
  %flags237 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call234, i64 0, i32 7, !dbg !3468
  %103 = load i32, i32* %flags237, align 8, !dbg !3470
  %and238 = and i32 %103, -4097, !dbg !3470
  store i32 %and238, i32* %flags237, align 8, !dbg !3470
  %and240 = and i32 %103, 2, !dbg !3471
  %tobool241 = icmp eq i32 %and240, 0, !dbg !3471
  br i1 %tobool241, label %if.else247, label %land.lhs.true242, !dbg !3473

land.lhs.true242:                                 ; preds = %for.body236
  %and244 = and i32 %103, 256, !dbg !3474
  %tobool245 = icmp eq i32 %and244, 0, !dbg !3474
  br i1 %tobool245, label %if.then246, label %if.else247, !dbg !3475

if.then246:                                       ; preds = %land.lhs.true242
  call void @remove_edge(%struct.edge_def* nonnull %call234) #6, !dbg !3476
  br label %if.end248, !dbg !3476

if.else247:                                       ; preds = %land.lhs.true242, %for.body236
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei229, metadata !3269, metadata !DIExpression(DW_OP_deref)), !dbg !3456
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei229) #7, !dbg !3477
  br label %if.end248

if.end248:                                        ; preds = %if.else247, %if.then246
  br label %for.cond233, !dbg !3478, !llvm.loop !3479

for.end249:                                       ; preds = %for.cond233
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #8, !dbg !3481
  %.pre5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3461
  %cfg223.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre5, i64 0, i32 1, !dbg !3482
  %.pre6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg223.phi.trans.insert, align 8, !dbg !3461
  %x_exit_block_ptr224.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre6, i64 0, i32 1, !dbg !3482
  %.pre7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr224.phi.trans.insert, align 8, !dbg !3461
  br label %for.cond221, !dbg !3461, !llvm.loop !3483

for.end252:                                       ; preds = %for.cond221
  %.lcssa = phi %struct.control_flow_graph* [ %98, %for.cond221 ], !dbg !3461
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa, i64 0, i32 5, !dbg !3485
  %104 = load i32, i32* %x_last_basic_block, align 8, !dbg !3485
  %call255 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %104) #6, !dbg !3486
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call255, metadata !3236, metadata !DIExpression()), !dbg !3330
  call void @sbitmap_ones(%struct.simple_bitmap_def* %call255) #6, !dbg !3487
  call void @find_many_sub_basic_blocks(%struct.simple_bitmap_def* %call255) #6, !dbg !3488
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call255, i64 0, i32 0, !dbg !3489
  %105 = load i8*, i8** %popcount, align 8, !dbg !3489
  call void @free(i8* %105) #6, !dbg !3489
  %106 = bitcast %struct.simple_bitmap_def* %call255 to i8*, !dbg !3489
  call void @free(i8* %106) #6, !dbg !3489
  %call256 = call zeroext i8 @purge_all_dead_edges() #6, !dbg !3490
  call void @compact_blocks() #6, !dbg !3491
  call fastcc void @expand_stack_alignment() #7, !dbg !3492
  %107 = load %struct.tree_decl_with_vis*, %struct.tree_decl_with_vis** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_with_vis**), align 8, !dbg !3493
  %defer_output = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %107, i64 0, i32 4, !dbg !3493
  %108 = bitcast i24* %defer_output to i32*, !dbg !3493
  %bf.load257 = load i32, i32* %108, align 8, !dbg !3494
  %bf.clear258 = and i32 %bf.load257, -2, !dbg !3494
  store i32 %bf.clear258, i32* %108, align 8, !dbg !3494
  store i32 0, i32* @generating_concat_p, align 4, !dbg !3495
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3496
  %tobool259 = icmp eq %struct._IO_FILE* %109, null, !dbg !3496
  %110 = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %107, i64 0, i32 0, i32 0, i32 0, !dbg !3498
  br i1 %tobool259, label %if.end262, label %if.then260, !dbg !3498

if.then260:                                       ; preds = %for.end252
  %call261 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %109, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3499
  %.pre8 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_minimal**), align 8, !dbg !3501
  br label %if.end262, !dbg !3503

if.end262:                                        ; preds = %for.end252, %if.then260
  %111 = phi %struct.tree_decl_minimal* [ %110, %for.end252 ], [ %.pre8, %if.then260 ], !dbg !3501
  %context264 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %111, i64 0, i32 4, !dbg !3501
  %112 = load %union.tree_node*, %union.tree_node** %context264, align 8, !dbg !3501
  call void @llvm.dbg.value(metadata %union.tree_node* %112, metadata !3270, metadata !DIExpression()), !dbg !3504
  br label %for.cond265, !dbg !3505

for.cond265:                                      ; preds = %for.inc281, %if.end262
  %parent.0 = phi %union.tree_node* [ %112, %if.end262 ], [ %call282, %for.inc281 ], !dbg !3506
  call void @llvm.dbg.value(metadata %union.tree_node* %parent.0, metadata !3270, metadata !DIExpression()), !dbg !3504
  %cmp266 = icmp eq %union.tree_node* %parent.0, null, !dbg !3507
  br i1 %cmp266, label %for.end283, label %for.body268, !dbg !3509

for.body268:                                      ; preds = %for.cond265
  %113 = getelementptr inbounds %union.tree_node, %union.tree_node* %parent.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3510
  %bf.load270 = load i64, i64* %113, align 8, !dbg !3510
  %bf.cast2721 = and i64 %bf.load270, 65535, !dbg !3512
  %cmp273 = icmp eq i64 %bf.cast2721, 29, !dbg !3512
  br i1 %cmp273, label %if.then275, label %for.inc281, !dbg !3513

if.then275:                                       ; preds = %for.body268
  %call276 = call %union.tree_node* @decl_assembler_name(%union.tree_node* nonnull %parent.0) #6, !dbg !3514
  %114 = getelementptr inbounds %union.tree_node, %union.tree_node* %call276, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3514
  %bf.load278 = load i64, i64* %114, align 8, !dbg !3515
  %bf.set = or i64 %bf.load278, 67108864, !dbg !3515
  store i64 %bf.set, i64* %114, align 8, !dbg !3515
  br label %for.inc281, !dbg !3514

for.inc281:                                       ; preds = %for.body268, %if.then275
  %call282 = call %union.tree_node* @get_containing_scope(%union.tree_node* nonnull %parent.0) #6, !dbg !3516
  call void @llvm.dbg.value(metadata %union.tree_node* %call282, metadata !3270, metadata !DIExpression()), !dbg !3504
  br label %for.cond265, !dbg !3517, !llvm.loop !3518

for.end283:                                       ; preds = %for.cond265
  %115 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3520
  %call284 = call zeroext i8 @cgraph_function_possibly_inlined_p(%union.tree_node* %115) #6, !dbg !3522
  %tobool285 = icmp eq i8 %call284, 0, !dbg !3522
  br i1 %tobool285, label %if.end287, label %if.then286, !dbg !3523

if.then286:                                       ; preds = %for.end283
  %116 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8, !dbg !3524
  %outlining_inline_function = getelementptr inbounds %struct.gcc_debug_hooks, %struct.gcc_debug_hooks* %116, i64 0, i32 21, !dbg !3525
  %117 = load void (%union.tree_node*)*, void (%union.tree_node*)** %outlining_inline_function, align 8, !dbg !3525
  %118 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3526
  call void %117(%union.tree_node* %118) #6, !dbg !3527
  br label %if.end287, !dbg !3527

if.end287:                                        ; preds = %for.end283, %if.then286
  %119 = load i64*, i64** bitcast (%union.tree_node** @current_function_decl to i64**), align 8, !dbg !3528
  %bf.load289 = load i64, i64* %119, align 8, !dbg !3529
  %bf.set291 = or i64 %bf.load289, 4194304, !dbg !3529
  store i64 %bf.set291, i64* %119, align 8, !dbg !3529
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 11), align 8, !dbg !3530
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 12), align 8, !dbg !3531
  %120 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3532
  %decl = getelementptr inbounds %struct.function, %struct.function* %120, i64 0, i32 6, !dbg !3532
  %121 = bitcast %union.tree_node** %decl to %struct.tree_decl_common**, !dbg !3532
  %122 = load %struct.tree_decl_common*, %struct.tree_decl_common** %121, align 8, !dbg !3532
  %initial294 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %122, i64 0, i32 5, !dbg !3532
  %123 = load %union.tree_node*, %union.tree_node** %initial294, align 8, !dbg !3532
  call fastcc void @set_block_levels(%union.tree_node* %123, i32 0) #7, !dbg !3533
  call void @default_rtl_profile() #6, !dbg !3534
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3535
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3535
  ret i32 0, !dbg !3536
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3537 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3541, metadata !DIExpression()), !dbg !3542
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3543
  %bf.load = load i32, i32* %0, align 8, !dbg !3543
  %bf.clear = and i32 %bf.load, 255, !dbg !3543
  ret i32 %bf.clear, !dbg !3544
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !3545 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3549, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata i32 %i, metadata !3550, metadata !DIExpression()), !dbg !3551
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !3552
  %tobool = icmp eq i8 %call, 0, !dbg !3552
  br i1 %tobool, label %return, label %if.then, !dbg !3554

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !3555
  %idxprom = zext i32 %i to i64, !dbg !3555
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !3555
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3555
  br label %return, !dbg !3557

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !3558
  ret %union.tree_node* %retval.0, !dbg !3559
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3560 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3562, metadata !DIExpression()), !dbg !3563
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3564
  %cmp = icmp eq i32 %call, 0, !dbg !3565
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !3566

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3567
  %cmp2 = icmp ult i32 %call1, 10, !dbg !3568
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !3569
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3570 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3574, metadata !DIExpression()), !dbg !3576
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !3577
  %idxprom = zext i32 %call to i64, !dbg !3578
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !3578
  %0 = load i64, i64* %arrayidx, align 8, !dbg !3578
  call void @llvm.dbg.value(metadata i64 %0, metadata !3575, metadata !DIExpression()), !dbg !3576
  %cmp = icmp eq i64 %0, 0, !dbg !3579
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3579

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3579
  br label %cond.end, !dbg !3579

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !3580
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !3581
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !3582
  ret %union.tree_node** %2, !dbg !3583
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3584 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3588, metadata !DIExpression()), !dbg !3589
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !3590
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !3591
  ret i32 %call1, !dbg !3592
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !3593 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !3597, metadata !DIExpression()), !dbg !3598
  %idxprom = zext i32 %code to i64, !dbg !3599
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !3599
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3599
  ret i32 %0, !dbg !3600
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3601 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3605, metadata !DIExpression()), !dbg !3606
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !3607
  %0 = load i32, i32* %num_ops, align 4, !dbg !3607
  ret i32 %0, !dbg !3608
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_tree_used(%union.tree_node* %block) unnamed_addr #5 !dbg !3609 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !3613, metadata !DIExpression()), !dbg !3615
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3616
  br label %for.cond, !dbg !3618

for.cond:                                         ; preds = %for.body, %entry
  %t.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.body ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !3619
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3614, metadata !DIExpression()), !dbg !3615
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !3620
  br i1 %tobool, label %for.end, label %for.body, !dbg !3620

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3621
  %bf.load = load i64, i64* %1, align 8, !dbg !3623
  %bf.clear = and i64 %bf.load, -16777217, !dbg !3623
  store i64 %bf.clear, i64* %1, align 8, !dbg !3623
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3624
  br label %for.cond, !dbg !3625, !llvm.loop !3626

for.end:                                          ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3628
  br label %for.cond3, !dbg !3630

for.cond3:                                        ; preds = %for.body5, %for.end
  %t.1.in = phi %union.tree_node** [ %2, %for.end ], [ %chain8, %for.body5 ]
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !3631
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !3614, metadata !DIExpression()), !dbg !3615
  %tobool4 = icmp eq %union.tree_node* %t.1, null, !dbg !3632
  br i1 %tobool4, label %for.end9, label %for.body5, !dbg !3632

for.body5:                                        ; preds = %for.cond3
  tail call fastcc void @clear_tree_used(%union.tree_node* nonnull %t.1) #7, !dbg !3633
  %chain8 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3635
  br label %for.cond3, !dbg !3636, !llvm.loop !3637

for.end9:                                         ; preds = %for.cond3
  ret void, !dbg !3639
}

declare dso_local i32 @ix86_minimum_alignment(%union.tree_node*, i32, i32) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_one_error_var(%union.tree_node* %var) unnamed_addr #5 !dbg !3640 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3642, metadata !DIExpression()), !dbg !3645
  %mode1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3646
  %0 = bitcast i40* %mode1 to i64*, !dbg !3646
  %bf.load = load i64, i64* %0, align 8, !dbg !3646
  call void @llvm.dbg.value(metadata i32 undef, metadata !3643, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !3645
  %trunc = trunc i64 %bf.load to i8, !dbg !3647
  switch i8 %trunc, label %if.else4 [
    i8 1, label %if.then
    i8 0, label %if.then3
  ], !dbg !3647

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3648
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %1) #6, !dbg !3650
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3644, metadata !DIExpression()), !dbg !3645
  br label %if.end6, !dbg !3651

if.then3:                                         ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3652
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3644, metadata !DIExpression()), !dbg !3645
  br label %if.end6, !dbg !3654

if.else4:                                         ; preds = %entry
  %3 = trunc i64 %bf.load to i32, !dbg !3646
  call void @llvm.dbg.value(metadata i32 %3, metadata !3643, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !3645
  %bf.cast = and i32 %3, 255, !dbg !3646
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !3643, metadata !DIExpression()), !dbg !3645
  %call5 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #6, !dbg !3655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !3644, metadata !DIExpression()), !dbg !3645
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %if.else4, %if.then
  %x.1 = phi %struct.rtx_def* [ %call, %if.then ], [ %2, %if.then3 ], [ %call5, %if.else4 ], !dbg !3656
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1, metadata !3644, metadata !DIExpression()), !dbg !3645
  tail call void @set_decl_rtl(%union.tree_node* %var, %struct.rtx_def* %x.1) #6, !dbg !3657
  ret void, !dbg !3658
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_one_hard_reg_var(%union.tree_node* %var) unnamed_addr #5 !dbg !3659 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3661, metadata !DIExpression()), !dbg !3662
  tail call void @rest_of_decl_compilation(%union.tree_node* %var, i32 0, i32 0) #6, !dbg !3663
  ret void, !dbg !3664
}

declare dso_local zeroext i8 @use_register_for_decl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_one_register_var(%union.tree_node* %var) unnamed_addr #5 !dbg !3665 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3667, metadata !DIExpression()), !dbg !3672
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3673
  %bf.load = load i64, i64* %0, align 8, !dbg !3673
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3673
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !3673
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3673

cond.true:                                        ; preds = %entry
  %var1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3673
  %1 = bitcast i32* %var1 to %union.tree_node**, !dbg !3673
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3673
  br label %cond.end, !dbg !3673

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %2, %cond.true ], [ %var, %entry ], !dbg !3673
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !3668, metadata !DIExpression()), !dbg !3672
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3674
  %3 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !3674
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3669, metadata !DIExpression()), !dbg !3672
  %call = tail call i32 @promote_decl_mode(%union.tree_node* %cond, i32* null) #6, !dbg !3675
  call void @llvm.dbg.value(metadata i32 %call, metadata !3670, metadata !DIExpression()), !dbg !3672
  %call3 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call) #6, !dbg !3676
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !3671, metadata !DIExpression()), !dbg !3672
  tail call fastcc void @set_rtl(%union.tree_node* %var, %struct.rtx_def* %call3) #7, !dbg !3677
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3678
  %4 = bitcast i40* %artificial_flag to i64*, !dbg !3678
  %bf.load4 = load i64, i64* %4, align 8, !dbg !3678
  %bf.cast62 = and i64 %bf.load4, 4096, !dbg !3678
  %tobool = icmp eq i64 %bf.cast62, 0, !dbg !3678
  br i1 %tobool, label %if.then, label %if.end, !dbg !3680

if.then:                                          ; preds = %cond.end
  tail call void @mark_user_reg(%struct.rtx_def* %call3) #6, !dbg !3681
  br label %if.end, !dbg !3681

if.end:                                           ; preds = %cond.end, %if.then
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3682
  %bf.load8 = load i64, i64* %5, align 8, !dbg !3682
  %bf.cast103 = and i64 %bf.load8, 65535, !dbg !3682
  %cmp11 = icmp eq i64 %bf.cast103, 10, !dbg !3682
  br i1 %cmp11, label %if.then17, label %lor.lhs.false, !dbg !3682

lor.lhs.false:                                    ; preds = %if.end
  %cmp16 = icmp eq i64 %bf.cast103, 12, !dbg !3682
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !3684

if.then17:                                        ; preds = %lor.lhs.false, %if.end
  %type19 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3685
  %6 = bitcast %union.tree_node** %type19 to %struct.tree_type**, !dbg !3685
  %7 = load %struct.tree_type*, %struct.tree_type** %6, align 8, !dbg !3685
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 7, !dbg !3685
  %8 = load i32, i32* %align, align 8, !dbg !3685
  tail call void @mark_reg_pointer(%struct.rtx_def* %call3, i32 %8) #6, !dbg !3686
  br label %if.end21, !dbg !3686

if.end21:                                         ; preds = %if.then17, %lor.lhs.false
  ret void, !dbg !3687
}

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @defer_stack_allocation(%union.tree_node* %var, i8 zeroext %toplevel) unnamed_addr #5 !dbg !3688 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3692, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata i8 %toplevel, metadata !3693, metadata !DIExpression()), !dbg !3694
  %0 = load i32, i32* @flag_stack_protect, align 4, !dbg !3695
  %tobool = icmp eq i32 %0, 0, !dbg !3695
  br i1 %tobool, label %if.end, label %return, !dbg !3697

if.end:                                           ; preds = %entry
  %tobool1 = icmp ne i8 %toplevel, 0, !dbg !3698
  %1 = load i32, i32* @optimize, align 4, !dbg !3700
  %cmp = icmp slt i32 %1, 2, !dbg !3701
  %or.cond = and i1 %tobool1, %cmp, !dbg !3702
  br i1 %or.cond, label %return, label %if.end4, !dbg !3702

if.end4:                                          ; preds = %if.end
  %cmp5 = icmp eq i32 %1, 0, !dbg !3703
  br i1 %cmp5, label %land.lhs.true7, label %if.end11, !dbg !3705

land.lhs.true7:                                   ; preds = %if.end4
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3706
  %2 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !3706
  %call = tail call i64 @tree_low_cst(%union.tree_node* %2, i32 1) #6, !dbg !3707
  %cmp8 = icmp slt i64 %call, 32, !dbg !3708
  br i1 %cmp8, label %return, label %if.end11, !dbg !3709

if.end11:                                         ; preds = %land.lhs.true7, %if.end4
  br label %return, !dbg !3710

return:                                           ; preds = %entry, %land.lhs.true7, %if.end, %if.end11
  %retval.0 = phi i8 [ 1, %if.end11 ], [ 1, %entry ], [ 0, %if.end ], [ 0, %land.lhs.true7 ], !dbg !3694
  ret i8 %retval.0, !dbg !3711
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_stack_var(%union.tree_node* %decl) unnamed_addr #5 !dbg !3712 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3714, metadata !DIExpression()), !dbg !3715
  %0 = load i64, i64* @stack_vars_num, align 8, !dbg !3716
  %1 = load i64, i64* @stack_vars_alloc, align 8, !dbg !3718
  %cmp = icmp ult i64 %0, %1, !dbg !3719
  br i1 %cmp, label %entry.if.end3_crit_edge, label %if.then, !dbg !3720

entry.if.end3_crit_edge:                          ; preds = %entry
  %.pre = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3721
  br label %if.end3, !dbg !3720

if.then:                                          ; preds = %entry
  %tobool = icmp eq i64 %1, 0, !dbg !3722
  br i1 %tobool, label %if.else, label %if.then1, !dbg !3725

if.then1:                                         ; preds = %if.then
  %mul = mul i64 %1, 3, !dbg !3726
  %div = lshr i64 %mul, 1, !dbg !3727
  br label %if.end, !dbg !3728

if.else:                                          ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %storemerge = phi i64 [ 32, %if.else ], [ %div, %if.then1 ], !dbg !3729
  store i64 %storemerge, i64* @stack_vars_alloc, align 8, !dbg !3729
  %2 = load i8*, i8** bitcast (%struct.stack_var** @stack_vars to i8**), align 8, !dbg !3730
  %mul2 = mul i64 %storemerge, 56, !dbg !3730
  %call = tail call i8* @xrealloc(i8* %2, i64 %mul2) #6, !dbg !3730
  store i8* %call, i8** bitcast (%struct.stack_var** @stack_vars to i8**), align 8, !dbg !3731
  %3 = bitcast i8* %call to %struct.stack_var*, !dbg !3732
  %.pre3 = load i64, i64* @stack_vars_num, align 8, !dbg !3733
  br label %if.end3, !dbg !3732

if.end3:                                          ; preds = %entry.if.end3_crit_edge, %if.end
  %4 = phi i64 [ %0, %entry.if.end3_crit_edge ], [ %.pre3, %if.end ], !dbg !3733
  %5 = phi %struct.stack_var* [ %.pre, %entry.if.end3_crit_edge ], [ %3, %if.end ], !dbg !3721
  %decl4 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %5, i64 %4, i32 0, !dbg !3734
  store %union.tree_node* %decl, %union.tree_node** %decl4, align 8, !dbg !3735
  %6 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3736
  %7 = load i64, i64* @stack_vars_num, align 8, !dbg !3737
  %offset = getelementptr inbounds %struct.stack_var, %struct.stack_var* %6, i64 %7, i32 1, !dbg !3738
  store i64 0, i64* %offset, align 8, !dbg !3739
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3740
  %bf.load = load i64, i64* %8, align 8, !dbg !3740
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3740
  %cmp6 = icmp eq i64 %bf.cast1, 141, !dbg !3740
  br i1 %cmp6, label %cond.true, label %cond.end, !dbg !3740

cond.true:                                        ; preds = %if.end3
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3740
  %9 = bitcast i32* %var to %union.tree_node**, !dbg !3740
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !3740
  br label %cond.end, !dbg !3740

cond.end:                                         ; preds = %if.end3, %cond.true
  %cond = phi %union.tree_node* [ %10, %cond.true ], [ %decl, %if.end3 ], !dbg !3740
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3740
  %11 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !3740
  %call7 = tail call i64 @tree_low_cst(%union.tree_node* %11, i32 1) #6, !dbg !3741
  %12 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3742
  %13 = load i64, i64* @stack_vars_num, align 8, !dbg !3743
  %size = getelementptr inbounds %struct.stack_var, %struct.stack_var* %12, i64 %13, i32 2, !dbg !3744
  store i64 %call7, i64* %size, align 8, !dbg !3745
  %bf.load10 = load i64, i64* %8, align 8, !dbg !3746
  %bf.cast122 = and i64 %bf.load10, 65535, !dbg !3746
  %cmp13 = icmp eq i64 %bf.cast122, 141, !dbg !3746
  br i1 %cmp13, label %cond.true14, label %cond.end18, !dbg !3746

cond.true14:                                      ; preds = %cond.end
  %var16 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3746
  %14 = bitcast i32* %var16 to %union.tree_node**, !dbg !3746
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !3746
  br label %cond.end18, !dbg !3746

cond.end18:                                       ; preds = %cond.end, %cond.true14
  %cond19 = phi %union.tree_node* [ %15, %cond.true14 ], [ %decl, %cond.end ], !dbg !3746
  %call20 = tail call fastcc i32 @get_decl_align_unit(%union.tree_node* %cond19) #7, !dbg !3747
  %16 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3748
  %17 = load i64, i64* @stack_vars_num, align 8, !dbg !3749
  %alignb = getelementptr inbounds %struct.stack_var, %struct.stack_var* %16, i64 %17, i32 3, !dbg !3750
  store i32 %call20, i32* %alignb, align 8, !dbg !3751
  %18 = load i64, i64* @stack_vars_num, align 8, !dbg !3752
  %19 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3753
  %representative = getelementptr inbounds %struct.stack_var, %struct.stack_var* %19, i64 %18, i32 4, !dbg !3754
  store i64 %18, i64* %representative, align 8, !dbg !3755
  %20 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3756
  %21 = load i64, i64* @stack_vars_num, align 8, !dbg !3757
  %next = getelementptr inbounds %struct.stack_var, %struct.stack_var* %20, i64 %21, i32 5, !dbg !3758
  store i64 -1, i64* %next, align 8, !dbg !3759
  %22 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !3760
  %23 = load i64, i64* @stack_vars_num, align 8, !dbg !3761
  %conflicts = getelementptr inbounds %struct.stack_var, %struct.stack_var* %22, i64 %23, i32 6, !dbg !3762
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %conflicts, align 8, !dbg !3763
  %24 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !3764
  tail call fastcc void @set_rtl(%union.tree_node* %decl, %struct.rtx_def* %24) #7, !dbg !3765
  %25 = load i64, i64* @stack_vars_num, align 8, !dbg !3766
  %inc = add i64 %25, 1, !dbg !3766
  store i64 %inc, i64* @stack_vars_num, align 8, !dbg !3766
  ret void, !dbg !3767
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_one_stack_var(%union.tree_node* %var) unnamed_addr #5 !dbg !3768 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3770, metadata !DIExpression()), !dbg !3774
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3775
  %bf.load = load i64, i64* %0, align 8, !dbg !3775
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3775
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !3775
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3775

cond.true:                                        ; preds = %entry
  %var1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3775
  %1 = bitcast i32* %var1 to %union.tree_node**, !dbg !3775
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3775
  br label %cond.end, !dbg !3775

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %2, %cond.true ], [ %var, %entry ], !dbg !3775
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3775
  %3 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !3775
  %call = tail call i64 @tree_low_cst(%union.tree_node* %3, i32 1) #6, !dbg !3776
  call void @llvm.dbg.value(metadata i64 %call, metadata !3771, metadata !DIExpression()), !dbg !3774
  %bf.load3 = load i64, i64* %0, align 8, !dbg !3777
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !3777
  %cmp6 = icmp eq i64 %bf.cast52, 141, !dbg !3777
  br i1 %cmp6, label %cond.true7, label %cond.end11, !dbg !3777

cond.true7:                                       ; preds = %cond.end
  %var9 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3777
  %4 = bitcast i32* %var9 to %union.tree_node**, !dbg !3777
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !3777
  br label %cond.end11, !dbg !3777

cond.end11:                                       ; preds = %cond.end, %cond.true7
  %cond12 = phi %union.tree_node* [ %5, %cond.true7 ], [ %var, %cond.end ], !dbg !3777
  %call13 = tail call fastcc i32 @get_decl_align_unit(%union.tree_node* %cond12) #7, !dbg !3778
  %conv = zext i32 %call13 to i64, !dbg !3778
  call void @llvm.dbg.value(metadata i64 %conv, metadata !3773, metadata !DIExpression()), !dbg !3774
  %call14 = tail call fastcc i64 @alloc_stack_frame_space(i64 %call, i64 %conv) #7, !dbg !3779
  call void @llvm.dbg.value(metadata i64 %call14, metadata !3772, metadata !DIExpression()), !dbg !3774
  tail call fastcc void @expand_one_stack_var_at(%union.tree_node* %var, i64 %call14) #7, !dbg !3780
  ret void, !dbg !3781
}

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #2

declare dso_local void @set_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @rest_of_decl_compilation(%union.tree_node*, i32, i32) local_unnamed_addr #2

declare dso_local i32 @promote_decl_mode(%union.tree_node*, i32*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_rtl(%union.tree_node* %t, %struct.rtx_def* %x) unnamed_addr #0 !dbg !3782 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3786, metadata !DIExpression()), !dbg !3793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3787, metadata !DIExpression()), !dbg !3793
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3794
  %bf.load = load i64, i64* %0, align 8, !dbg !3794
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3795
  %cmp = icmp eq i64 %bf.cast2, 141, !dbg !3795
  br i1 %cmp, label %if.then, label %if.else61, !dbg !3796

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 2), align 8, !dbg !3797
  %2 = load %struct._var_map*, %struct._var_map** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 0), align 8, !dbg !3798
  %call = tail call fastcc i32 @var_to_partition(%struct._var_map* %2, %union.tree_node* %t) #7, !dbg !3799
  %idxprom = sext i32 %call to i64, !dbg !3800
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %idxprom, !dbg !3800
  store %struct.rtx_def* %x, %struct.rtx_def** %arrayidx, align 8, !dbg !3801
  %cond1 = icmp eq %struct.rtx_def* %x, null, !dbg !3802
  br i1 %cond1, label %if.end62, label %land.lhs.true, !dbg !3802

land.lhs.true:                                    ; preds = %if.then
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3804
  %bf.load1 = load i32, i32* %3, align 8, !dbg !3804
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3804
  %cmp3 = icmp eq i32 %bf.clear2, 43, !dbg !3804
  br i1 %cmp3, label %if.end, label %if.then4, !dbg !3805

if.then4:                                         ; preds = %land.lhs.true
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3806
  %4 = bitcast i32* %var to %union.tree_node**, !dbg !3806
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !3806
  tail call void @set_reg_attrs_for_decl_rtl(%union.tree_node* %5, %struct.rtx_def* nonnull %x) #6, !dbg !3807
  br label %if.end, !dbg !3807

if.end:                                           ; preds = %if.then4, %land.lhs.true
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !3808
  %cmp7 = icmp eq %struct.rtx_def* %6, %x, !dbg !3809
  br i1 %cmp7, label %if.end62, label %land.lhs.true8, !dbg !3810

land.lhs.true8:                                   ; preds = %if.end
  %var10 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3811
  %7 = bitcast i32* %var10 to i64**, !dbg !3811
  %8 = load i64*, i64** %7, align 8, !dbg !3811
  %bf.load12 = load i64, i64* %8, align 8, !dbg !3811
  %bf.cast143 = and i64 %bf.load12, 65535, !dbg !3812
  %cmp15 = icmp eq i64 %bf.cast143, 32, !dbg !3812
  %9 = bitcast i64* %8 to %union.tree_node*, !dbg !3813
  br i1 %cmp15, label %if.then16, label %if.end62, !dbg !3813

if.then16:                                        ; preds = %land.lhs.true8
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !3788, metadata !DIExpression()), !dbg !3814
  %10 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 32, i64 11), align 1, !dbg !3815
  %tobool27 = icmp eq i8 %10, 0, !dbg !3815
  br i1 %tobool27, label %if.then31, label %land.lhs.true28, !dbg !3815

land.lhs.true28:                                  ; preds = %if.then16
  %rtl = getelementptr inbounds i64, i64* %8, i64 14, !dbg !3815
  %11 = bitcast i64* %rtl to %struct.rtx_def**, !dbg !3815
  %12 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8, !dbg !3815
  %cmp29 = icmp eq %struct.rtx_def* %12, null, !dbg !3815
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !3817

if.then31:                                        ; preds = %land.lhs.true28, %if.then16
  tail call void @set_decl_rtl(%union.tree_node* %9, %struct.rtx_def* nonnull %x) #6, !dbg !3818
  br label %if.end62, !dbg !3818

if.else:                                          ; preds = %land.lhs.true28
  br i1 false, label %cond.false, label %cond.true, !dbg !3819

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !3819

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !3819

cond.end:                                         ; preds = %cond.false, %cond.true
  %cmp39 = icmp eq %struct.rtx_def* %12, %6, !dbg !3821
  br i1 %cmp39, label %if.end62, label %if.else42, !dbg !3822

if.else42:                                        ; preds = %cond.end
  br i1 false, label %cond.false49, label %cond.true46, !dbg !3823

cond.true46:                                      ; preds = %if.else42
  br label %cond.end52, !dbg !3823

cond.false49:                                     ; preds = %if.else42
  br label %cond.end52, !dbg !3823

cond.end52:                                       ; preds = %cond.false49, %cond.true46
  %cmp54 = icmp eq %struct.rtx_def* %12, %x, !dbg !3825
  br i1 %cmp54, label %if.end62, label %if.then56, !dbg !3826

if.then56:                                        ; preds = %cond.end52
  tail call void @set_decl_rtl(%union.tree_node* %9, %struct.rtx_def* %6) #6, !dbg !3827
  br label %if.end62, !dbg !3827

if.else61:                                        ; preds = %entry
  tail call void @set_decl_rtl(%union.tree_node* %t, %struct.rtx_def* %x) #6, !dbg !3828
  br label %if.end62

if.end62:                                         ; preds = %cond.end52, %if.end, %if.then, %land.lhs.true8, %cond.end, %if.then56, %if.then31, %if.else61
  ret void, !dbg !3829
}

declare dso_local void @mark_user_reg(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @mark_reg_pointer(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @var_to_partition(%struct._var_map* %map, %union.tree_node* %var) unnamed_addr #0 !dbg !3830 {
entry:
  call void @llvm.dbg.value(metadata %struct._var_map* %map, metadata !3834, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3835, metadata !DIExpression()), !dbg !3837
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3838
  %bf.load = load i64, i64* %0, align 8, !dbg !3838
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3838
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !3838
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3838

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 147, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3838
  br label %cond.end, !dbg !3838

cond.end:                                         ; preds = %entry, %cond.true
  %var_partition = getelementptr inbounds %struct._var_map, %struct._var_map* %map, i64 0, i32 0, !dbg !3839
  %1 = load %struct.partition_def*, %struct.partition_def** %var_partition, align 8, !dbg !3839
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3839
  %2 = bitcast %union.tree_node** %version to i32*, !dbg !3839
  %3 = load i32, i32* %2, align 8, !dbg !3839
  %idxprom = zext i32 %3 to i64, !dbg !3839
  %class_element = getelementptr inbounds %struct.partition_def, %struct.partition_def* %1, i64 0, i32 1, i64 %idxprom, i32 0, !dbg !3839
  %4 = load i32, i32* %class_element, align 8, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %4, metadata !3836, metadata !DIExpression()), !dbg !3837
  %partition_to_view = getelementptr inbounds %struct._var_map, %struct._var_map* %map, i64 0, i32 1, !dbg !3840
  %5 = load i32*, i32** %partition_to_view, align 8, !dbg !3840
  %tobool = icmp eq i32* %5, null, !dbg !3842
  br i1 %tobool, label %if.end, label %if.then, !dbg !3843

if.then:                                          ; preds = %cond.end
  %idxprom2 = sext i32 %4 to i64, !dbg !3844
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 %idxprom2, !dbg !3844
  %6 = load i32, i32* %arrayidx3, align 4, !dbg !3844
  call void @llvm.dbg.value(metadata i32 %6, metadata !3836, metadata !DIExpression()), !dbg !3837
  br label %if.end, !dbg !3845

if.end:                                           ; preds = %cond.end, %if.then
  %part.0 = phi i32 [ %6, %if.then ], [ %4, %cond.end ], !dbg !3837
  call void @llvm.dbg.value(metadata i32 %part.0, metadata !3836, metadata !DIExpression()), !dbg !3837
  ret i32 %part.0, !dbg !3846
}

declare dso_local void @set_reg_attrs_for_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_decl_align_unit(%union.tree_node* %decl) unnamed_addr #5 !dbg !3847 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3851, metadata !DIExpression()), !dbg !3853
  %align1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3854
  %0 = load i32, i32* %align1, align 8, !dbg !3854
  %call = tail call i32 @ix86_local_alignment(%union.tree_node* %decl, i32 0, i32 %0) #6, !dbg !3854
  call void @llvm.dbg.value(metadata i32 %call, metadata !3852, metadata !DIExpression()), !dbg !3853
  %1 = icmp ult i32 %call, -2147483648, !dbg !3855
  %spec.select = select i1 %1, i32 %call, i32 -2147483648, !dbg !3855
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3852, metadata !DIExpression()), !dbg !3853
  %2 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !3856
  %cmp2 = icmp ult i32 %2, %spec.select, !dbg !3860
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3861

if.then3:                                         ; preds = %entry
  %3 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 46), align 2, !dbg !3862
  %tobool = icmp eq i8 %3, 0, !dbg !3862
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3862

cond.true:                                        ; preds = %if.then3
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 215, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3862
  br label %cond.end, !dbg !3862

cond.end:                                         ; preds = %if.then3, %cond.true
  store i32 %spec.select, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !3864
  br label %if.end4, !dbg !3865

if.end4:                                          ; preds = %cond.end, %entry
  %4 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 22), align 4, !dbg !3866
  %cmp5 = icmp ult i32 %4, %spec.select, !dbg !3868
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3869

if.then6:                                         ; preds = %if.end4
  store i32 %spec.select, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 22), align 4, !dbg !3870
  br label %if.end7, !dbg !3871

if.end7:                                          ; preds = %if.then6, %if.end4
  %5 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 25), align 8, !dbg !3872
  %cmp8 = icmp ult i32 %5, %spec.select, !dbg !3874
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !3875

if.then9:                                         ; preds = %if.end7
  store i32 %spec.select, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 25), align 8, !dbg !3876
  br label %if.end10, !dbg !3877

if.end10:                                         ; preds = %if.then9, %if.end7
  %div = lshr i32 %spec.select, 3, !dbg !3878
  ret i32 %div, !dbg !3879
}

declare dso_local i32 @ix86_local_alignment(%union.tree_node*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @alloc_stack_frame_space(i64 %size, i64 %align) unnamed_addr #5 !dbg !3880 {
entry:
  call void @llvm.dbg.value(metadata i64 %size, metadata !3884, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.value(metadata i64 %align, metadata !3885, metadata !DIExpression()), !dbg !3888
  %0 = load i64, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3889
  call void @llvm.dbg.value(metadata i64 %0, metadata !3887, metadata !DIExpression()), !dbg !3888
  %sub = sub nsw i64 %0, %size, !dbg !3890
  call void @llvm.dbg.value(metadata i64 %sub, metadata !3887, metadata !DIExpression()), !dbg !3888
  %sub1 = sub nsw i64 0, %align, !dbg !3893
  %and = and i64 %sub, %sub1, !dbg !3894
  call void @llvm.dbg.value(metadata i64 %and, metadata !3887, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.value(metadata i64 %and, metadata !3887, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.value(metadata i64 %and, metadata !3886, metadata !DIExpression()), !dbg !3888
  store i64 %and, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3895
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3896
  %decl = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 6, !dbg !3898
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3898
  %call = tail call zeroext i8 @frame_offset_overflow(i64 %and, %union.tree_node* %2) #6, !dbg !3899
  %tobool = icmp eq i8 %call, 0, !dbg !3899
  br i1 %tobool, label %if.end, label %if.then, !dbg !3900

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !3886, metadata !DIExpression()), !dbg !3888
  store i64 0, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !3901
  br label %if.end, !dbg !3902

if.end:                                           ; preds = %entry, %if.then
  %offset.0 = phi i64 [ 0, %if.then ], [ %and, %entry ], !dbg !3888
  call void @llvm.dbg.value(metadata i64 %offset.0, metadata !3886, metadata !DIExpression()), !dbg !3888
  ret i64 %offset.0, !dbg !3903
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_one_stack_var_at(%union.tree_node* %decl, i64 %offset) unnamed_addr #5 !dbg !3904 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3908, metadata !DIExpression()), !dbg !3912
  call void @llvm.dbg.value(metadata i64 %offset, metadata !3909, metadata !DIExpression()), !dbg !3912
  %call = tail call i64 @trunc_int_for_mode(i64 %offset, i32 16) #6, !dbg !3913
  %cmp = icmp eq i64 %call, %offset, !dbg !3913
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3913

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 716, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3913
  br label %cond.end, !dbg !3913

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !dbg !3914
  %call1 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %0, i64 %offset) #6, !dbg !3915
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !3911, metadata !DIExpression()), !dbg !3912
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3916
  %bf.load = load i64, i64* %1, align 8, !dbg !3916
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3916
  %cmp2 = icmp eq i64 %bf.cast1, 141, !dbg !3916
  br i1 %cmp2, label %cond.true3, label %cond.end5, !dbg !3916

cond.true3:                                       ; preds = %cond.end
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3916
  %2 = bitcast i32* %var to %union.tree_node**, !dbg !3916
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !3916
  br label %cond.end5, !dbg !3916

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %cond6 = phi %union.tree_node* [ %3, %cond.true3 ], [ %decl, %cond.end ], !dbg !3916
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %cond6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3916
  %4 = bitcast i40* %mode to i64*, !dbg !3916
  %bf.load7 = load i64, i64* %4, align 8, !dbg !3916
  %5 = trunc i64 %bf.load7 to i32, !dbg !3916
  %bf.cast9 = and i32 %5, 255, !dbg !3916
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast9, %struct.rtx_def* %call1) #6, !dbg !3917
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !3911, metadata !DIExpression()), !dbg !3912
  %bf.load12 = load i64, i64* %1, align 8, !dbg !3918
  %bf.cast142 = and i64 %bf.load12, 65535, !dbg !3920
  %cmp15 = icmp eq i64 %bf.cast142, 141, !dbg !3920
  br i1 %cmp15, label %if.end30, label %if.then, !dbg !3921

if.then:                                          ; preds = %cond.end5
  call void @llvm.dbg.value(metadata i64 %offset, metadata !3909, metadata !DIExpression()), !dbg !3912
  %sub16 = sub nsw i64 0, %offset, !dbg !3922
  %and = and i64 %sub16, %offset, !dbg !3924
  call void @llvm.dbg.value(metadata i64 %and, metadata !3910, metadata !DIExpression()), !dbg !3912
  %mul = shl i64 %and, 3, !dbg !3925
  call void @llvm.dbg.value(metadata i64 %mul, metadata !3910, metadata !DIExpression()), !dbg !3912
  %cmp17 = icmp eq i64 %mul, 0, !dbg !3926
  %6 = icmp ult i64 %mul, 2147483648, !dbg !3928
  %spec.select = select i1 %6, i64 %mul, i64 2147483648, !dbg !3928
  %align.1 = select i1 %cmp17, i64 32, i64 %spec.select, !dbg !3928
  call void @llvm.dbg.value(metadata i64 %align.1, metadata !3910, metadata !DIExpression()), !dbg !3912
  %conv24 = trunc i64 %align.1 to i32, !dbg !3929
  %align26 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3930
  store i32 %conv24, i32* %align26, align 8, !dbg !3931
  %bf.clear29 = and i64 %bf.load12, -4398046511105, !dbg !3932
  store i64 %bf.clear29, i64* %1, align 8, !dbg !3932
  br label %if.end30, !dbg !3933

if.end30:                                         ; preds = %cond.end5, %if.then
  %bf.load32 = phi i64 [ %bf.load12, %cond.end5 ], [ %bf.clear29, %if.then ], !dbg !3934
  %bf.cast343 = and i64 %bf.load32, 65535, !dbg !3934
  %cmp35 = icmp eq i64 %bf.cast343, 141, !dbg !3934
  br i1 %cmp35, label %cond.true37, label %cond.end41, !dbg !3934

cond.true37:                                      ; preds = %if.end30
  %var39 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3934
  %7 = bitcast i32* %var39 to %union.tree_node**, !dbg !3934
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !3934
  br label %cond.end41, !dbg !3934

cond.end41:                                       ; preds = %if.end30, %cond.true37
  %cond42 = phi %union.tree_node* [ %8, %cond.true37 ], [ %decl, %if.end30 ], !dbg !3934
  tail call void @set_mem_attributes(%struct.rtx_def* %call10, %union.tree_node* %cond42, i32 1) #6, !dbg !3935
  tail call fastcc void @set_rtl(%union.tree_node* %decl, %struct.rtx_def* %call10) #7, !dbg !3936
  ret void, !dbg !3937
}

declare dso_local zeroext i8 @frame_offset_overflow(i64, %union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @trunc_int_for_mode(i64, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) local_unnamed_addr #2

declare dso_local void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local i32 @rewrite_out_of_ssa(%struct.ssaexpand*) local_unnamed_addr #2

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local void @rtl_profile_for_bb(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @insn_locators_alloc() local_unnamed_addr #2

declare dso_local void @set_curr_insn_source_location(i32) local_unnamed_addr #2

declare dso_local void @set_curr_insn_block(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @curr_insn_locator() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_note(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @discover_nonconstant_array_refs() unnamed_addr #5 !dbg !3938 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3954
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3954
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3955
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !3955
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3955
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !3955
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3955
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3956
  br label %for.cond, !dbg !3955

for.cond:                                         ; preds = %for.inc9, %entry
  %5 = phi %struct.control_flow_graph* [ %2, %entry ], [ %.pre1, %for.inc9 ], !dbg !3957
  %.pn = phi %struct.basic_block_def* [ %3, %entry ], [ %bb.0, %for.inc9 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3958
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3958
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3940, metadata !DIExpression()), !dbg !3959
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !3957
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3957
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %6, !dbg !3957
  br i1 %cmp, label %for.end11, label %for.body, !dbg !3955

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !3960
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !3960
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !3960
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !3960
  br label %for.cond3, !dbg !3961

for.cond3:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3941, metadata !DIExpression(DW_OP_deref)), !dbg !3959
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3962
  %tobool = icmp eq i8 %call, 0, !dbg !3963
  br i1 %tobool, label %for.body4, label %for.inc9, !dbg !3964

for.body4:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3941, metadata !DIExpression(DW_OP_deref)), !dbg !3959
  %call5 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3965
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !3948, metadata !DIExpression()), !dbg !3966
  %call6 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call5) #7, !dbg !3967
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3967
  br i1 %tobool7, label %if.then, label %for.inc, !dbg !3969

if.then:                                          ; preds = %for.body4
  %call8 = call %union.tree_node* @walk_gimple_op(%union.gimple_statement_d* %call5, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @discover_nonconstant_array_refs_r, %struct.walk_stmt_info* null) #6, !dbg !3970
  br label %for.inc, !dbg !3970

for.inc:                                          ; preds = %for.body4, %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3941, metadata !DIExpression(DW_OP_deref)), !dbg !3959
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3971
  br label %for.cond3, !dbg !3972, !llvm.loop !3973

for.inc9:                                         ; preds = %for.cond3
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3957
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3975
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3957
  br label %for.cond, !dbg !3957, !llvm.loop !3976

for.end11:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3978
  ret void, !dbg !3978
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_used_vars() unnamed_addr #5 !dbg !3979 {
entry:
  %0 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !4010
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %0, i64 0, i32 5, !dbg !4010
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4010
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3983, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3984, metadata !DIExpression()), !dbg !4011
  tail call fastcc void @init_vars_expansion() #7, !dbg !4012
  call void @llvm.dbg.value(metadata i32 0, metadata !3985, metadata !DIExpression()), !dbg !4011
  br label %for.cond, !dbg !4013

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !4014
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3985, metadata !DIExpression()), !dbg !4011
  %2 = load %struct._var_map*, %struct._var_map** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 0), align 8, !dbg !4015
  %num_partitions = getelementptr inbounds %struct._var_map, %struct._var_map* %2, i64 0, i32 3, !dbg !4016
  %3 = load i32, i32* %num_partitions, align 8, !dbg !4016
  %4 = zext i32 %3 to i64, !dbg !4017
  %cmp = icmp ult i64 %indvars.iv, %4, !dbg !4017
  br i1 %cmp, label %for.body, label %for.end, !dbg !4018

for.body:                                         ; preds = %for.cond
  %5 = trunc i64 %indvars.iv to i32, !dbg !4019
  %call = tail call fastcc %union.tree_node* @partition_to_var(%struct._var_map* %2, i32 %5) #7, !dbg !4019
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3989, metadata !DIExpression()), !dbg !4020
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !4021
  %tobool2 = icmp eq i8 %call1, 0, !dbg !4021
  br i1 %tobool2, label %cond.true3, label %cond.end5, !dbg !4021

cond.true3:                                       ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1312, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4021
  br label %cond.end5, !dbg !4021

cond.end5:                                        ; preds = %for.body, %cond.true3
  %var7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4022
  %6 = bitcast i32* %var7 to i64**, !dbg !4022
  %7 = load i64*, i64** %6, align 8, !dbg !4022
  %bf.load = load i64, i64* %7, align 8, !dbg !4022
  %bf.cast9 = and i64 %bf.load, 65535, !dbg !4024
  %cmp8 = icmp eq i64 %bf.cast9, 32, !dbg !4024
  br i1 %cmp8, label %if.then, label %if.else, !dbg !4025

if.then:                                          ; preds = %cond.end5
  %call9 = tail call fastcc i64 @expand_one_var(%union.tree_node* %call, i8 zeroext 1, i8 zeroext 1) #7, !dbg !4026
  br label %for.inc, !dbg !4026

if.else:                                          ; preds = %cond.end5
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 3), align 8, !dbg !4027
  %9 = trunc i64 %indvars.iv to i32, !dbg !4030
  %call10 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9) #6, !dbg !4030
  %tobool11 = icmp eq i32 %call10, 0, !dbg !4030
  br i1 %tobool11, label %if.then12, label %for.inc, !dbg !4031

if.then12:                                        ; preds = %if.else
  %call13 = tail call fastcc i64 @expand_one_var(%union.tree_node* %call, i8 zeroext 1, i8 zeroext 1) #7, !dbg !4032
  %10 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 2), align 8, !dbg !4034
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %10, i64 %indvars.iv, !dbg !4034
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !4034
  %tobool14 = icmp eq %struct.rtx_def* %11, null, !dbg !4034
  br i1 %tobool14, label %cond.true15, label %for.inc, !dbg !4034

cond.true15:                                      ; preds = %if.then12
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1325, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4034
  br label %for.inc, !dbg !4034

for.inc:                                          ; preds = %if.then12, %if.else, %if.then, %cond.true15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4035
  br label %for.cond, !dbg !4036, !llvm.loop !4037

for.end:                                          ; preds = %for.cond
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4039
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 9, !dbg !4040
  %13 = load %union.tree_node*, %union.tree_node** %local_decls, align 8, !dbg !4040
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !3981, metadata !DIExpression()), !dbg !4011
  store %union.tree_node* null, %union.tree_node** %local_decls, align 8, !dbg !4041
  br label %for.cond22, !dbg !4042

for.cond22:                                       ; preds = %cleanup131, %for.end
  %14 = phi %struct.tree_list* [ null, %for.end ], [ %35, %cleanup131 ], !dbg !4043
  %maybe_local_decls.0 = phi %union.tree_node* [ null, %for.end ], [ %maybe_local_decls.3, %cleanup131 ], !dbg !4043
  %.in = phi %union.tree_node* [ %13, %for.end ], [ %18, %cleanup131 ]
  %t.0 = phi %union.tree_node* [ %13, %for.end ], [ %18, %cleanup131 ], !dbg !4011
  %15 = bitcast %union.tree_node* %.in to %struct.tree_list*, !dbg !4011
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3981, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata %union.tree_node* %maybe_local_decls.0, metadata !3984, metadata !DIExpression()), !dbg !4011
  %tobool23 = icmp eq %union.tree_node* %t.0, null, !dbg !4044
  br i1 %tobool23, label %for.end136, label %for.body24, !dbg !4044

for.body24:                                       ; preds = %for.cond22
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4045
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !4045
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3993, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata i8 0, metadata !3997, metadata !DIExpression()), !dbg !4046
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4047
  %18 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4047
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !3982, metadata !DIExpression()), !dbg !4011
  %call26 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %17) #6, !dbg !4048
  %tobool27 = icmp eq i8 %call26, 0, !dbg !4048
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4050
  %bf.load30 = load i64, i64* %19, align 8, !dbg !4050
  br i1 %tobool27, label %if.else32, label %if.then28, !dbg !4051

if.then28:                                        ; preds = %for.body24
  %bf.clear31 = and i64 %bf.load30, -16777217, !dbg !4052
  store i64 %bf.clear31, i64* %19, align 8, !dbg !4052
  br label %next63, !dbg !4054

if.else32:                                        ; preds = %for.body24
  %bf.cast364 = and i64 %bf.load30, 67108864, !dbg !4055
  %tobool37 = icmp eq i64 %bf.cast364, 0, !dbg !4055
  br i1 %tobool37, label %lor.lhs.false, label %if.end55, !dbg !4057

lor.lhs.false:                                    ; preds = %if.else32
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4058
  %20 = bitcast i40* %decl_flag_1 to i64*, !dbg !4058
  %bf.load39 = load i64, i64* %20, align 8, !dbg !4058
  %bf.cast425 = and i64 %bf.load39, 33554432, !dbg !4058
  %tobool43 = icmp eq i64 %bf.cast425, 0, !dbg !4058
  br i1 %tobool43, label %if.else45, label %if.end55, !dbg !4059

if.else45:                                        ; preds = %lor.lhs.false
  %bf.cast506 = lshr i64 %bf.load30, 24, !dbg !4060
  %21 = trunc i64 %bf.cast506 to i8, !dbg !4060
  %22 = and i8 %21, 1, !dbg !4060
  call void @llvm.dbg.value(metadata i8 %22, metadata !3997, metadata !DIExpression()), !dbg !4046
  br label %if.end55

if.end55:                                         ; preds = %lor.lhs.false, %if.else32, %if.else45
  %expand_now.1 = phi i8 [ %22, %if.else45 ], [ 1, %lor.lhs.false ], [ 1, %if.else32 ], !dbg !4061
  call void @llvm.dbg.value(metadata i8 %expand_now.1, metadata !3997, metadata !DIExpression()), !dbg !4046
  %bf.set = or i64 %bf.load30, 16777216, !dbg !4062
  store i64 %bf.set, i64* %19, align 8, !dbg !4062
  %tobool59 = icmp eq i8 %expand_now.1, 0, !dbg !4063
  br i1 %tobool59, label %next63, label %if.then60, !dbg !4065

if.then60:                                        ; preds = %if.end55
  %call61 = tail call fastcc i64 @expand_one_var(%union.tree_node* %17, i8 zeroext 1, i8 zeroext 1) #7, !dbg !4066
  br label %next63, !dbg !4066

next63:                                           ; preds = %if.end55, %if.then60, %if.then28
  call void @llvm.dbg.label(metadata !4009), !dbg !4067
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4068
  %23 = bitcast i40* %artificial_flag to i64*, !dbg !4068
  %bf.load65 = load i64, i64* %23, align 8, !dbg !4068
  %bf.cast687 = and i64 %bf.load65, 4096, !dbg !4068
  %tobool69 = icmp eq i64 %bf.cast687, 0, !dbg !4068
  br i1 %tobool69, label %if.end130, label %land.lhs.true, !dbg !4069

land.lhs.true:                                    ; preds = %next63
  %bf.cast748 = and i64 %bf.load65, 1024, !dbg !4070
  %tobool75 = icmp eq i64 %bf.cast748, 0, !dbg !4070
  br i1 %tobool75, label %if.then76, label %if.end130, !dbg !4071

if.then76:                                        ; preds = %land.lhs.true
  %bf.load78 = load i64, i64* %19, align 8, !dbg !4072
  %bf.cast80 = and i64 %bf.load78, 65535, !dbg !4072
  %arrayidx83 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast80, i64 11, !dbg !4072
  %24 = load i8, i8* %arrayidx83, align 1, !dbg !4072
  %tobool84 = icmp eq i8 %24, 0, !dbg !4072
  br i1 %tobool84, label %cond.end102, label %land.lhs.true85, !dbg !4072

land.lhs.true85:                                  ; preds = %if.then76
  %rtl86 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4072
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtl86, align 8, !dbg !4072
  %cmp87 = icmp eq %struct.rtx_def* %25, null, !dbg !4072
  br i1 %cmp87, label %cond.end102, label %cond.true89, !dbg !4072

cond.true89:                                      ; preds = %land.lhs.true85
  br i1 false, label %cond.false96, label %cond.true93, !dbg !4072

cond.true93:                                      ; preds = %cond.true89
  br label %cond.end102, !dbg !4072

cond.false96:                                     ; preds = %cond.true89
  br label %cond.end102, !dbg !4072

cond.end102:                                      ; preds = %land.lhs.true85, %if.then76, %cond.true93, %cond.false96
  %cond103 = phi %struct.rtx_def* [ %25, %cond.true93 ], [ undef, %cond.false96 ], [ null, %land.lhs.true85 ], [ null, %if.then76 ], !dbg !4072
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond103, metadata !3998, metadata !DIExpression()), !dbg !4073
  %cond3 = icmp eq %struct.rtx_def* %cond103, null, !dbg !4074
  br i1 %cond3, label %if.then125, label %land.lhs.true105, !dbg !4074

land.lhs.true105:                                 ; preds = %cond.end102
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond103, i64 0, i32 0, !dbg !4076
  %bf.load106 = load i32, i32* %26, align 8, !dbg !4076
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !4076
  %cmp108 = icmp eq i32 %bf.clear107, 43, !dbg !4076
  br i1 %cmp108, label %if.then115, label %lor.lhs.false110, !dbg !4077

lor.lhs.false110:                                 ; preds = %land.lhs.true105
  %cmp113 = icmp eq i32 %bf.clear107, 41, !dbg !4078
  br i1 %cmp113, label %if.then115, label %if.else122, !dbg !4079

if.then115:                                       ; preds = %lor.lhs.false110, %land.lhs.true105
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4080
  %local_decls117 = getelementptr inbounds %struct.function, %struct.function* %27, i64 0, i32 9, !dbg !4082
  %28 = bitcast %union.tree_node** %local_decls117 to i64*, !dbg !4082
  %29 = load i64, i64* %28, align 8, !dbg !4082
  %30 = bitcast %union.tree_node** %chain to i64*, !dbg !4083
  store i64 %29, i64* %30, align 8, !dbg !4083
  store %union.tree_node* %.in, %union.tree_node** %local_decls117, align 8, !dbg !4084
  br label %cleanup, !dbg !4085

if.else122:                                       ; preds = %lor.lhs.false110
  br label %cleanup, !dbg !4086

if.then125:                                       ; preds = %cond.end102
  %31 = bitcast %union.tree_node** %chain to %struct.tree_list**, !dbg !4087
  store %struct.tree_list* %14, %struct.tree_list** %31, align 8, !dbg !4087
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3984, metadata !DIExpression()), !dbg !4011
  br label %cleanup, !dbg !4090

cleanup:                                          ; preds = %if.else122, %if.then125, %if.then115
  %32 = phi %struct.tree_list* [ %14, %if.then115 ], [ %15, %if.then125 ], [ %14, %if.else122 ], !dbg !4011
  %maybe_local_decls.1 = phi %union.tree_node* [ %maybe_local_decls.0, %if.then115 ], [ %t.0, %if.then125 ], [ %maybe_local_decls.0, %if.else122 ], !dbg !4011
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then115 ], [ false, %if.then125 ], [ true, %if.else122 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %maybe_local_decls.1, metadata !3984, metadata !DIExpression()), !dbg !4011
  br i1 %cleanup.dest.slot.0, label %if.end130, label %cleanup131

if.end130:                                        ; preds = %land.lhs.true, %next63, %cleanup
  %33 = phi %struct.tree_list* [ %14, %land.lhs.true ], [ %14, %next63 ], [ %32, %cleanup ], !dbg !4043
  %maybe_local_decls.2 = phi %union.tree_node* [ %maybe_local_decls.0, %land.lhs.true ], [ %maybe_local_decls.0, %next63 ], [ %maybe_local_decls.1, %cleanup ], !dbg !4043
  call void @llvm.dbg.value(metadata %union.tree_node* %maybe_local_decls.2, metadata !3984, metadata !DIExpression()), !dbg !4011
  %34 = bitcast %union.tree_node* %t.0 to i8*, !dbg !4091
  tail call void @ggc_free(i8* nonnull %34) #6, !dbg !4092
  br label %cleanup131, !dbg !4093

cleanup131:                                       ; preds = %cleanup, %if.end130
  %35 = phi %struct.tree_list* [ %33, %if.end130 ], [ %32, %cleanup ], !dbg !4043
  %maybe_local_decls.3 = phi %union.tree_node* [ %maybe_local_decls.2, %if.end130 ], [ %maybe_local_decls.1, %cleanup ], !dbg !4043
  call void @llvm.dbg.value(metadata %union.tree_node* %maybe_local_decls.3, metadata !3984, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !3981, metadata !DIExpression()), !dbg !4011
  br label %for.cond22, !dbg !4094, !llvm.loop !4095

for.end136:                                       ; preds = %for.cond22
  %.lcssa = phi %struct.tree_list* [ %14, %for.cond22 ], !dbg !4043
  %maybe_local_decls.0.lcssa = phi %union.tree_node* [ %maybe_local_decls.0, %for.cond22 ], !dbg !4043
  call void @llvm.dbg.value(metadata %union.tree_node* %maybe_local_decls.0.lcssa, metadata !3984, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata %union.tree_node* %maybe_local_decls.0.lcssa, metadata !3984, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata %union.tree_node* %maybe_local_decls.0.lcssa, metadata !3984, metadata !DIExpression()), !dbg !4011
  tail call fastcc void @expand_used_vars_for_block(%union.tree_node* %1, i8 zeroext 1) #7, !dbg !4097
  %36 = load i64, i64* @stack_vars_num, align 8, !dbg !4098
  %cmp137 = icmp eq i64 %36, 0, !dbg !4100
  br i1 %cmp137, label %if.end146, label %if.then139, !dbg !4101

if.then139:                                       ; preds = %for.end136
  tail call fastcc void @add_alias_set_conflicts() #7, !dbg !4102
  %37 = load i32, i32* @flag_stack_protect, align 4, !dbg !4104
  %tobool140 = icmp eq i32 %37, 0, !dbg !4104
  br i1 %tobool140, label %if.end142, label %if.then141, !dbg !4106

if.then141:                                       ; preds = %if.then139
  tail call fastcc void @add_stack_protection_conflicts() #7, !dbg !4107
  br label %if.end142, !dbg !4107

if.end142:                                        ; preds = %if.then139, %if.then141
  tail call fastcc void @partition_stack_vars() #7, !dbg !4108
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4109
  %tobool143 = icmp eq %struct._IO_FILE* %38, null, !dbg !4109
  br i1 %tobool143, label %if.end146, label %if.then144, !dbg !4111

if.then144:                                       ; preds = %if.end142
  tail call fastcc void @dump_stack_var_partition() #7, !dbg !4112
  br label %if.end146, !dbg !4112

if.end146:                                        ; preds = %if.end142, %for.end136, %if.then144
  %39 = load i32, i32* @flag_stack_protect, align 4, !dbg !4113
  %cmp147 = icmp eq i32 %39, 2, !dbg !4115
  br i1 %cmp147, label %if.then160, label %lor.lhs.false149, !dbg !4116

lor.lhs.false149:                                 ; preds = %if.end146
  %tobool150 = icmp eq i32 %39, 0, !dbg !4117
  br i1 %tobool150, label %if.end161, label %land.lhs.true151, !dbg !4118

land.lhs.true151:                                 ; preds = %lor.lhs.false149
  %40 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4119
  %calls_alloca = getelementptr inbounds %struct.function, %struct.function* %40, i64 0, i32 20, !dbg !4120
  %bf.load153 = load i32, i32* %calls_alloca, align 8, !dbg !4120
  %bf.clear155 = and i32 %bf.load153, 524288, !dbg !4120
  %tobool156 = icmp eq i32 %bf.clear155, 0, !dbg !4119
  br i1 %tobool156, label %lor.lhs.false157, label %if.then160, !dbg !4121

lor.lhs.false157:                                 ; preds = %land.lhs.true151
  %.b10 = load i1, i1* @has_protected_decls, align 1, !dbg !4122
  br i1 %.b10, label %if.then160, label %if.end161, !dbg !4123

if.then160:                                       ; preds = %lor.lhs.false157, %land.lhs.true151, %if.end146
  tail call fastcc void @create_stack_guard() #7, !dbg !4124
  br label %if.end161, !dbg !4124

if.end161:                                        ; preds = %lor.lhs.false157, %lor.lhs.false149, %if.then160
  %41 = load i64, i64* @stack_vars_num, align 8, !dbg !4125
  %cmp162 = icmp eq i64 %41, 0, !dbg !4127
  br i1 %cmp162, label %if.end172, label %if.then164, !dbg !4128

if.then164:                                       ; preds = %if.end161
  %.b = load i1, i1* @has_protected_decls, align 1, !dbg !4129
  br i1 %.b, label %if.then166, label %if.end171, !dbg !4132

if.then166:                                       ; preds = %if.then164
  tail call fastcc void @expand_stack_vars(i8 (%union.tree_node*)* nonnull @stack_protect_decl_phase_1) #7, !dbg !4133
  %42 = load i32, i32* @flag_stack_protect, align 4, !dbg !4135
  %cmp167 = icmp eq i32 %42, 2, !dbg !4137
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !4138

if.then169:                                       ; preds = %if.then166
  tail call fastcc void @expand_stack_vars(i8 (%union.tree_node*)* nonnull @stack_protect_decl_phase_2) #7, !dbg !4139
  br label %if.end171, !dbg !4139

if.end171:                                        ; preds = %if.then164, %if.then166, %if.then169
  tail call fastcc void @expand_stack_vars(i8 (%union.tree_node*)* null) #7, !dbg !4140
  tail call fastcc void @fini_vars_expansion() #7, !dbg !4141
  br label %if.end172, !dbg !4142

if.end172:                                        ; preds = %if.end161, %if.end171
  call void @llvm.dbg.value(metadata %union.tree_node* %maybe_local_decls.0.lcssa, metadata !3981, metadata !DIExpression()), !dbg !4011
  br label %for.cond173, !dbg !4143

for.cond173:                                      ; preds = %cleanup230, %if.end172
  %43 = phi %struct.tree_list* [ %.lcssa, %if.end172 ], [ %50, %cleanup230 ], !dbg !4144
  %t.1 = phi %union.tree_node* [ %maybe_local_decls.0.lcssa, %if.end172 ], [ %49, %cleanup230 ], !dbg !4144
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !3981, metadata !DIExpression()), !dbg !4011
  %tobool174 = icmp eq %union.tree_node* %t.1, null, !dbg !4145
  br i1 %tobool174, label %for.end235, label %for.body175, !dbg !4145

for.body175:                                      ; preds = %for.cond173
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4146
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8, !dbg !4146
  call void @llvm.dbg.value(metadata %union.tree_node* %45, metadata !4001, metadata !DIExpression()), !dbg !4147
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4148
  %bf.load181 = load i64, i64* %46, align 8, !dbg !4148
  %bf.cast183 = and i64 %bf.load181, 65535, !dbg !4148
  %arrayidx186 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast183, i64 11, !dbg !4148
  %47 = load i8, i8* %arrayidx186, align 1, !dbg !4148
  %tobool188 = icmp eq i8 %47, 0, !dbg !4148
  br i1 %tobool188, label %cond.end207, label %land.lhs.true189, !dbg !4148

land.lhs.true189:                                 ; preds = %for.body175
  %rtl191 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4148
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rtl191, align 8, !dbg !4148
  %cmp192 = icmp eq %struct.rtx_def* %48, null, !dbg !4148
  br i1 %cmp192, label %cond.end207, label %cond.true194, !dbg !4148

cond.true194:                                     ; preds = %land.lhs.true189
  br i1 false, label %cond.false201, label %cond.true198, !dbg !4148

cond.true198:                                     ; preds = %cond.true194
  br label %cond.end207, !dbg !4148

cond.false201:                                    ; preds = %cond.true194
  br label %cond.end207, !dbg !4148

cond.end207:                                      ; preds = %land.lhs.true189, %for.body175, %cond.true198, %cond.false201
  %cond208 = phi %struct.rtx_def* [ %48, %cond.true198 ], [ undef, %cond.false201 ], [ null, %land.lhs.true189 ], [ null, %for.body175 ], !dbg !4148
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond208, metadata !4005, metadata !DIExpression()), !dbg !4147
  %chain210 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4149
  %49 = load %union.tree_node*, %union.tree_node** %chain210, align 8, !dbg !4149
  %50 = bitcast %union.tree_node* %49 to %struct.tree_list*, !dbg !4011
  call void @llvm.dbg.value(metadata %union.tree_node* %49, metadata !3982, metadata !DIExpression()), !dbg !4011
  %tobool211 = icmp eq %struct.rtx_def* %cond208, null, !dbg !4150
  br i1 %tobool211, label %if.end229, label %land.lhs.true212, !dbg !4152

land.lhs.true212:                                 ; preds = %cond.end207
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond208, i64 0, i32 0, !dbg !4153
  %bf.load213 = load i32, i32* %51, align 8, !dbg !4153
  %bf.clear214 = and i32 %bf.load213, 65535, !dbg !4153
  %cmp215 = icmp eq i32 %bf.clear214, 43, !dbg !4153
  br i1 %cmp215, label %if.then222, label %lor.lhs.false217, !dbg !4154

lor.lhs.false217:                                 ; preds = %land.lhs.true212
  %cmp220 = icmp eq i32 %bf.clear214, 41, !dbg !4155
  br i1 %cmp220, label %if.then222, label %if.end229, !dbg !4156

if.then222:                                       ; preds = %lor.lhs.false217, %land.lhs.true212
  %52 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4157
  %local_decls224 = getelementptr inbounds %struct.function, %struct.function* %52, i64 0, i32 9, !dbg !4159
  %53 = bitcast %union.tree_node** %local_decls224 to i64*, !dbg !4159
  %54 = load i64, i64* %53, align 8, !dbg !4159
  %55 = bitcast %union.tree_node** %chain210 to i64*, !dbg !4160
  store i64 %54, i64* %55, align 8, !dbg !4160
  %56 = bitcast %union.tree_node** %local_decls224 to %struct.tree_list**, !dbg !4161
  store %struct.tree_list* %43, %struct.tree_list** %56, align 8, !dbg !4161
  br label %cleanup230, !dbg !4162

if.end229:                                        ; preds = %cond.end207, %lor.lhs.false217
  %57 = bitcast %union.tree_node* %t.1 to i8*, !dbg !4163
  tail call void @ggc_free(i8* nonnull %57) #6, !dbg !4164
  br label %cleanup230, !dbg !4165

cleanup230:                                       ; preds = %if.end229, %if.then222
  call void @llvm.dbg.value(metadata %union.tree_node* %49, metadata !3981, metadata !DIExpression()), !dbg !4011
  br label %for.cond173, !dbg !4166, !llvm.loop !4167

for.end235:                                       ; preds = %for.cond173
  %58 = load i32, i32* @ix86_preferred_stack_boundary, align 4, !dbg !4169
  %div237 = lshr i32 %58, 3, !dbg !4170
  %conv238 = zext i32 %div237 to i64, !dbg !4169
  call void @llvm.dbg.value(metadata i64 %conv238, metadata !4006, metadata !DIExpression()), !dbg !4171
  %sub239 = sub nsw i64 0, %conv238, !dbg !4172
  %59 = load i64, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !4173
  %and = and i64 %59, %sub239, !dbg !4173
  store i64 %and, i64* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 17), align 8, !dbg !4173
  ret void, !dbg !4174
}

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

declare dso_local void @expand_function_start(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @partition_to_var(%struct._var_map* %map, i32 %i) unnamed_addr #0 !dbg !4175 {
entry:
  call void @llvm.dbg.value(metadata %struct._var_map* %map, metadata !4179, metadata !DIExpression()), !dbg !4182
  call void @llvm.dbg.value(metadata i32 %i, metadata !4180, metadata !DIExpression()), !dbg !4182
  %view_to_partition = getelementptr inbounds %struct._var_map, %struct._var_map* %map, i64 0, i32 2, !dbg !4183
  %0 = load i32*, i32** %view_to_partition, align 8, !dbg !4183
  %tobool = icmp eq i32* %0, null, !dbg !4185
  br i1 %tobool, label %if.end, label %if.then, !dbg !4186

if.then:                                          ; preds = %entry
  %idxprom = sext i32 %i to i64, !dbg !4187
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !4187
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %1, metadata !4180, metadata !DIExpression()), !dbg !4182
  br label %if.end, !dbg !4188

if.end:                                           ; preds = %entry, %if.then
  %i.addr.0 = phi i32 [ %1, %if.then ], [ %i, %entry ]
  call void @llvm.dbg.value(metadata i32 %i.addr.0, metadata !4180, metadata !DIExpression()), !dbg !4182
  %var_partition = getelementptr inbounds %struct._var_map, %struct._var_map* %map, i64 0, i32 0, !dbg !4189
  %2 = load %struct.partition_def*, %struct.partition_def** %var_partition, align 8, !dbg !4189
  %idxprom2 = sext i32 %i.addr.0 to i64, !dbg !4189
  %class_element = getelementptr inbounds %struct.partition_def, %struct.partition_def* %2, i64 0, i32 1, i64 %idxprom2, i32 0, !dbg !4189
  %3 = load i32, i32* %class_element, align 8, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %3, metadata !4180, metadata !DIExpression()), !dbg !4182
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4190
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 3, !dbg !4190
  %5 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4190
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %5, i64 0, i32 2, !dbg !4190
  %6 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !4190
  %tobool4 = icmp eq %struct.VEC_tree_gc* %6, null, !dbg !4190
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !4190

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %6, i64 0, i32 0, !dbg !4190
  br label %cond.end, !dbg !4190

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !4190
  %call = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %3) #7, !dbg !4190
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4181, metadata !DIExpression()), !dbg !4182
  ret %union.tree_node* %call, !dbg !4191
}

declare dso_local void @set_mem_expr(%struct.rtx_def*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @expand_main_function() local_unnamed_addr #2

declare dso_local void @stack_protect_prologue() local_unnamed_addr #2

declare dso_local void @expand_phi_nodes(%struct.ssaexpand*) local_unnamed_addr #2

declare dso_local void @rtl_register_cfg_hooks() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @construct_init_block() unnamed_addr #5 !dbg !4192 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !4198, metadata !DIExpression()), !dbg !4203
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4204
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4204
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4204
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !4204
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4204
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 1, !dbg !4204
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4204
  %tobool = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !4204
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4204

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !4204
  br label %cond.end, !dbg !4204

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4204
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4204
  %cmp = icmp eq i32 %call, 1, !dbg !4204
  br i1 %cmp, label %cond.end7, label %cond.true5, !dbg !4204

cond.true5:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3452, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4204
  br label %cond.end7, !dbg !4204

cond.end7:                                        ; preds = %cond.end, %cond.true5
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4205
  %cfg10 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !4205
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg10, align 8, !dbg !4205
  %x_entry_block_ptr11 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !4205
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr11, align 8, !dbg !4205
  tail call void @init_rtl_bb_info(%struct.basic_block_def* %6) #6, !dbg !4206
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4207
  %cfg13 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !4207
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg13, align 8, !dbg !4207
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !4207
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4207
  tail call void @init_rtl_bb_info(%struct.basic_block_def* %9) #6, !dbg !4208
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4209
  %cfg15 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 1, !dbg !4209
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg15, align 8, !dbg !4209
  %x_entry_block_ptr16 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 0, !dbg !4209
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr16, align 8, !dbg !4209
  %flags17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 13, !dbg !4210
  %13 = load i32, i32* %flags17, align 8, !dbg !4211
  %or = or i32 %13, 512, !dbg !4211
  store i32 %or, i32* %flags17, align 8, !dbg !4211
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg15, align 8, !dbg !4212
  %x_exit_block_ptr20 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 1, !dbg !4212
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr20, align 8, !dbg !4212
  %flags21 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 13, !dbg !4213
  %16 = load i32, i32* %flags21, align 8, !dbg !4214
  %or22 = or i32 %16, 512, !dbg !4214
  store i32 %or22, i32* %flags21, align 8, !dbg !4214
  %17 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg15, align 8, !dbg !4215
  %x_entry_block_ptr25 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i64 0, i32 0, !dbg !4215
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr25, align 8, !dbg !4215
  %succs26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 1, !dbg !4215
  %19 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs26, align 8, !dbg !4215
  %tobool27 = icmp eq %struct.VEC_edge_gc* %19, null, !dbg !4215
  br i1 %tobool27, label %cond.end35, label %cond.true28, !dbg !4215

cond.true28:                                      ; preds = %cond.end7
  %base33 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %19, i64 0, i32 0, !dbg !4215
  br label %cond.end35, !dbg !4215

cond.end35:                                       ; preds = %cond.end7, %cond.true28
  %cond36 = phi %struct.VEC_edge_base* [ %base33, %cond.true28 ], [ null, %cond.end7 ], !dbg !4215
  %call37 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond36, i32 0) #7, !dbg !4215
  call void @llvm.dbg.value(metadata %struct.edge_def* %call37, metadata !4198, metadata !DIExpression()), !dbg !4203
  %tobool38 = icmp eq %struct.edge_def* %call37, null, !dbg !4216
  br i1 %tobool38, label %if.end, label %land.lhs.true, !dbg !4217

land.lhs.true:                                    ; preds = %cond.end35
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call37, i64 0, i32 1, !dbg !4218
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4218
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4219
  %cfg40 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 1, !dbg !4219
  %22 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg40, align 8, !dbg !4219
  %x_entry_block_ptr41 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %22, i64 0, i32 0, !dbg !4219
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr41, align 8, !dbg !4219
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 6, !dbg !4220
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !4220
  %cmp42 = icmp eq %struct.basic_block_def* %20, %24, !dbg !4221
  br i1 %cmp42, label %if.end, label %if.then, !dbg !4222

if.then:                                          ; preds = %land.lhs.true
  %call44 = tail call %union.tree_node* @gimple_block_label(%struct.basic_block_def* %20) #6, !dbg !4223
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !4200, metadata !DIExpression()), !dbg !4224
  %call45 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %call44) #6, !dbg !4225
  tail call void @emit_jump(%struct.rtx_def* %call45) #6, !dbg !4226
  call void @llvm.dbg.value(metadata i32 0, metadata !4199, metadata !DIExpression()), !dbg !4203
  br label %if.end, !dbg !4227

if.end:                                           ; preds = %land.lhs.true, %cond.end35, %if.then
  %flags.0 = phi i32 [ 0, %if.then ], [ 1, %land.lhs.true ], [ 1, %cond.end35 ], !dbg !4228
  call void @llvm.dbg.value(metadata i32 %flags.0, metadata !4199, metadata !DIExpression()), !dbg !4203
  %call46 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4229
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call46, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, !dbg !4229
  %26 = load i8*, i8** %25, align 8, !dbg !4229
  %call47 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !4230
  %27 = bitcast %struct.rtx_def* %call47 to i8*, !dbg !4230
  %28 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4231
  %cfg49 = getelementptr inbounds %struct.function, %struct.function* %28, i64 0, i32 1, !dbg !4231
  %29 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg49, align 8, !dbg !4231
  %x_entry_block_ptr50 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %29, i64 0, i32 0, !dbg !4231
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr50, align 8, !dbg !4231
  %call51 = tail call %struct.basic_block_def* @create_basic_block(i8* %26, i8* %27, %struct.basic_block_def* %30) #6, !dbg !4232
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call51, metadata !4196, metadata !DIExpression()), !dbg !4203
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4233
  %cfg53 = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 1, !dbg !4233
  %32 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg53, align 8, !dbg !4233
  %x_entry_block_ptr54 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %32, i64 0, i32 0, !dbg !4233
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr54, align 8, !dbg !4233
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i64 0, i32 11, !dbg !4234
  %34 = load i32, i32* %frequency, align 8, !dbg !4234
  %frequency55 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call51, i64 0, i32 11, !dbg !4235
  store i32 %34, i32* %frequency55, align 8, !dbg !4236
  %35 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg53, align 8, !dbg !4237
  %x_entry_block_ptr58 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %35, i64 0, i32 0, !dbg !4237
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr58, align 8, !dbg !4237
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i64 0, i32 8, !dbg !4238
  %37 = load i64, i64* %count, align 8, !dbg !4238
  %count59 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call51, i64 0, i32 8, !dbg !4239
  store i64 %37, i64* %count59, align 8, !dbg !4240
  br i1 %tobool38, label %if.else64, label %if.then61, !dbg !4241

if.then61:                                        ; preds = %if.end
  %dest62 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call37, i64 0, i32 1, !dbg !4242
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %dest62, align 8, !dbg !4242
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %38, metadata !4197, metadata !DIExpression()), !dbg !4203
  tail call void @redirect_edge_succ(%struct.edge_def* nonnull %call37, %struct.basic_block_def* %call51) #6, !dbg !4245
  %call63 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %call51, %struct.basic_block_def* %38, i32 %flags.0) #6, !dbg !4246
  call void @llvm.dbg.value(metadata %struct.edge_def* %call63, metadata !4198, metadata !DIExpression()), !dbg !4203
  br label %if.end69, !dbg !4247

if.else64:                                        ; preds = %if.end
  %39 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg53, align 8, !dbg !4248
  %x_exit_block_ptr67 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %39, i64 0, i32 1, !dbg !4248
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr67, align 8, !dbg !4248
  %call68 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %call51, %struct.basic_block_def* %40, i32 1) #6, !dbg !4249
  call void @llvm.dbg.value(metadata %struct.edge_def* %call68, metadata !4198, metadata !DIExpression()), !dbg !4203
  br label %if.end69

if.end69:                                         ; preds = %if.else64, %if.then61
  %e.0 = phi %struct.edge_def* [ %call63, %if.then61 ], [ %call68, %if.else64 ], !dbg !4250
  call void @llvm.dbg.value(metadata %struct.edge_def* %e.0, metadata !4198, metadata !DIExpression()), !dbg !4203
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e.0, i64 0, i32 8, !dbg !4251
  store i32 10000, i32* %probability, align 4, !dbg !4252
  %41 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4253
  %cfg71 = getelementptr inbounds %struct.function, %struct.function* %41, i64 0, i32 1, !dbg !4253
  %42 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg71, align 8, !dbg !4253
  %x_entry_block_ptr72 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %42, i64 0, i32 0, !dbg !4253
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr72, align 8, !dbg !4253
  %count73 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %43, i64 0, i32 8, !dbg !4254
  %44 = load i64, i64* %count73, align 8, !dbg !4254
  %count74 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e.0, i64 0, i32 9, !dbg !4255
  store i64 %44, i64* %count74, align 8, !dbg !4256
  tail call void @update_bb_for_insn(%struct.basic_block_def* %call51) #6, !dbg !4257
  ret %struct.basic_block_def* %call51, !dbg !4258
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !4259 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !4263, metadata !DIExpression()), !dbg !4265
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !4266
  store i32 0, i32* %index, align 8, !dbg !4267
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !4268
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !4269
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !4270
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !4270
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !4270
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !4271 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !4277, metadata !DIExpression()), !dbg !4278
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !4279
  %tobool = icmp eq i8 %call, 0, !dbg !4279
  br i1 %tobool, label %if.then, label %if.else, !dbg !4281

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !4282
  br label %return, !dbg !4284

if.else:                                          ; preds = %entry
  br label %return, !dbg !4285

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !4287
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !4287
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !4287
  ret i8 %retval.0, !dbg !4288
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !4289 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !4294, metadata !DIExpression()), !dbg !4295
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !4296
  %0 = load i32, i32* %index, align 8, !dbg !4296
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !4296
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4296
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !4296
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4296
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4296

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !4296
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4296
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !4296
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4296
  br label %cond.end, !dbg !4296

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4296
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4296
  %cmp = icmp ult i32 %0, %call2, !dbg !4296
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !4296

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4296
  br label %cond.end5, !dbg !4296

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !4297
  %inc = add i32 %5, 1, !dbg !4297
  store i32 %inc, i32* %index, align 8, !dbg !4297
  ret void, !dbg !4298
}

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @expand_gimple_basic_block(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !4299 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp29 = alloca %struct.gimple_stmt_iterator, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  %nsi = alloca %struct.gimple_stmt_iterator, align 8
  %can_fallthru = alloca i8, align 1
  %tmp336 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4303, metadata !DIExpression()), !dbg !4381
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4382
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4382
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !4306, metadata !DIExpression()), !dbg !4381
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !4383
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4383
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4384
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4384
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4385
  %tobool = icmp eq %struct._IO_FILE* %3, null, !dbg !4385
  br i1 %tobool, label %if.end, label %if.then, !dbg !4387

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4388
  %4 = load i32, i32* %index, align 8, !dbg !4388
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12, i64 0, i64 0), i32 %4) #6, !dbg !4389
  br label %if.end, !dbg !4389

if.end:                                           ; preds = %entry, %if.then
  %call1 = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !4390
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call1, metadata !4305, metadata !DIExpression()), !dbg !4381
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !4391
  store %struct.gimple_bb_info* null, %struct.gimple_bb_info** %gimple, align 8, !dbg !4392
  tail call void @rtl_profile_for_bb(%struct.basic_block_def* %bb) #6, !dbg !4393
  tail call void @init_rtl_bb_info(%struct.basic_block_def* %bb) #6, !dbg !4394
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !4395
  %5 = load i32, i32* %flags, align 8, !dbg !4396
  %or = or i32 %5, 512, !dbg !4396
  store i32 %or, i32* %flags, align 8, !dbg !4396
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4397
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !4397
  call fastcc void @gsi_last(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %call1) #7, !dbg !4397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !4397
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !4397
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  %call2 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4398
  %tobool3 = icmp eq i8 %call2, 0, !dbg !4398
  br i1 %tobool3, label %land.lhs.true, label %if.end28, !dbg !4399

land.lhs.true:                                    ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  %call4 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4400
  %call5 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call4) #7, !dbg !4401
  %cmp = icmp eq i32 %call5, 9, !dbg !4402
  br i1 %cmp, label %if.then6, label %if.end28, !dbg !4403

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4404
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !4312, metadata !DIExpression()), !dbg !4405
  %call8 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !4406
  %tobool9 = icmp eq i8 %call8, 0, !dbg !4406
  br i1 %tobool9, label %cond.true, label %cond.end, !dbg !4406

cond.true:                                        ; preds = %if.then6
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3137, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4406
  br label %cond.end, !dbg !4406

cond.end:                                         ; preds = %if.then6, %cond.true
  %call10 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) #7, !dbg !4407
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4407
  %cfg = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !4407
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4407
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !4407
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4407
  %cmp11 = icmp eq %struct.basic_block_def* %call10, %9, !dbg !4407
  br i1 %cmp11, label %cond.end14, label %cond.true12, !dbg !4407

cond.true12:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3138, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4407
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4408
  %cfg17.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4410
  %.pre9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17.phi.trans.insert, align 8, !dbg !4408
  %x_exit_block_ptr18.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre9, i64 0, i32 1, !dbg !4410
  %.pre10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr18.phi.trans.insert, align 8, !dbg !4408
  br label %cond.end14, !dbg !4407

cond.end14:                                       ; preds = %cond.end, %cond.true12
  %10 = phi %struct.basic_block_def* [ %call10, %cond.end ], [ %.pre10, %cond.true12 ], !dbg !4408
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 6, !dbg !4411
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !4411
  %cmp19 = icmp eq %struct.basic_block_def* %11, %10, !dbg !4412
  br i1 %cmp19, label %land.lhs.true20, label %if.end28, !dbg !4413

land.lhs.true20:                                  ; preds = %cond.end14
  %call21 = call fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %call7) #7, !dbg !4414
  %tobool22 = icmp eq %union.tree_node* %call21, null, !dbg !4414
  br i1 %tobool22, label %if.then23, label %if.end28, !dbg !4415

if.then23:                                        ; preds = %land.lhs.true20
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 0) #6, !dbg !4416
  %call24 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !4418
  %flags25 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call24, i64 0, i32 7, !dbg !4419
  %12 = load i32, i32* %flags25, align 8, !dbg !4420
  %or26 = or i32 %12, 1, !dbg !4420
  store i32 %or26, i32* %flags25, align 8, !dbg !4420
  br label %if.end28, !dbg !4421

if.end28:                                         ; preds = %land.lhs.true20, %if.end, %cond.end14, %if.then23, %land.lhs.true
  %13 = bitcast %struct.gimple_stmt_iterator* %tmp29 to i8*, !dbg !4422
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8, !dbg !4422
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp29, %struct.gimple_seq_d* %call1) #7, !dbg !4422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %13, i64 24, i1 false), !dbg !4422
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8, !dbg !4422
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  %call30 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4423
  %tobool31 = icmp eq i8 %call30, 0, !dbg !4423
  br i1 %tobool31, label %if.then32, label %if.end38, !dbg !4425

if.then32:                                        ; preds = %if.end28
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  %call33 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4426
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call33, metadata !4306, metadata !DIExpression()), !dbg !4381
  %call34 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call33) #7, !dbg !4428
  %cmp35 = icmp eq i32 %call34, 4, !dbg !4430
  %spec.select = select i1 %cmp35, %union.gimple_statement_d* %call33, %union.gimple_statement_d* null, !dbg !4431
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %spec.select, metadata !4306, metadata !DIExpression()), !dbg !4381
  br label %if.end38, !dbg !4432

if.end38:                                         ; preds = %if.end28, %if.then32
  %stmt.1 = phi %union.gimple_statement_d* [ null, %if.end28 ], [ %spec.select, %if.then32 ], !dbg !4381
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1, metadata !4306, metadata !DIExpression()), !dbg !4381
  %14 = load %struct.pointer_map_t*, %struct.pointer_map_t** @lab_rtx_for_bb, align 8, !dbg !4433
  %15 = bitcast %struct.basic_block_def* %bb to i8*, !dbg !4434
  %call39 = call i8** @pointer_map_contains(%struct.pointer_map_t* %14, i8* %15) #6, !dbg !4435
  call void @llvm.dbg.value(metadata i8** %call39, metadata !4311, metadata !DIExpression()), !dbg !4381
  %tobool40 = icmp ne %union.gimple_statement_d* %stmt.1, null, !dbg !4436
  %tobool41 = icmp ne i8** %call39, null, !dbg !4438
  %or.cond = or i1 %tobool40, %tobool41, !dbg !4439
  br i1 %or.cond, label %if.then42, label %if.else, !dbg !4439

if.then42:                                        ; preds = %if.end38
  %call43 = call %struct.rtx_def* @get_last_insn() #6, !dbg !4440
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call43, metadata !4308, metadata !DIExpression()), !dbg !4381
  %tobool44 = icmp eq %union.gimple_statement_d* %stmt.1, null, !dbg !4442
  br i1 %tobool44, label %if.end47, label %if.then45, !dbg !4444

if.then45:                                        ; preds = %if.then42
  %call46 = call fastcc %struct.rtx_def* @expand_gimple_stmt(%union.gimple_statement_d* nonnull %stmt.1) #7, !dbg !4445
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !4447
  br label %if.end47, !dbg !4448

if.end47:                                         ; preds = %if.then42, %if.then45
  %tobool48 = icmp eq i8** %call39, null, !dbg !4449
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !4451

if.then49:                                        ; preds = %if.end47
  %16 = bitcast i8** %call39 to %struct.rtx_def**, !dbg !4452
  %17 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8, !dbg !4452
  %call50 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %17) #6, !dbg !4453
  br label %if.end51, !dbg !4453

if.end51:                                         ; preds = %if.end47, %if.then49
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call43, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4454
  %19 = bitcast %union.rtunion_def* %18 to i64*, !dbg !4454
  %20 = load i64, i64* %19, align 8, !dbg !4454
  %il52 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !4455
  %21 = bitcast %union.basic_block_il_dependent* %il52 to i64**, !dbg !4455
  %22 = load i64*, i64** %21, align 8, !dbg !4455
  store i64 %20, i64* %22, align 8, !dbg !4456
  %23 = bitcast %union.basic_block_il_dependent* %il52 to i32***, !dbg !4457
  %24 = load i32**, i32*** %23, align 8, !dbg !4457
  %25 = load i32*, i32** %24, align 8, !dbg !4457
  %bf.load = load i32, i32* %25, align 8, !dbg !4457
  %bf.clear = and i32 %bf.load, 65535, !dbg !4457
  %cmp56 = icmp eq i32 %bf.clear, 13, !dbg !4457
  br i1 %cmp56, label %if.then57, label %if.end51.if.end68_crit_edge, !dbg !4459

if.end51.if.end68_crit_edge:                      ; preds = %if.end51
  %26 = bitcast i32* %25 to %struct.rtx_def*, !dbg !4459
  br label %if.end68, !dbg !4459

if.then57:                                        ; preds = %if.end51
  %27 = bitcast i32** %24 to i64*, !dbg !4459
  %rtl59 = bitcast %union.basic_block_il_dependent* %il52 to %struct.rtl_bb_info**, !dbg !4460
  %28 = getelementptr inbounds i32, i32* %25, i64 6, !dbg !4460
  %29 = bitcast i32* %28 to i64*, !dbg !4460
  %30 = load i64, i64* %29, align 8, !dbg !4460
  store i64 %30, i64* %27, align 8, !dbg !4461
  %.pre11 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl59, align 8, !dbg !4462
  %head_71.phi.trans.insert = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %.pre11, i64 0, i32 0, !dbg !4463
  %.pre14 = load %struct.rtx_def*, %struct.rtx_def** %head_71.phi.trans.insert, align 8, !dbg !4462
  br label %if.end68, !dbg !4464

if.end68:                                         ; preds = %if.end51.if.end68_crit_edge, %if.then57
  %31 = phi %struct.rtx_def* [ %.pre14, %if.then57 ], [ %26, %if.end51.if.end68_crit_edge ], !dbg !4462
  %call72 = call %struct.rtx_def* @emit_note_after(i32 10, %struct.rtx_def* %31) #6, !dbg !4465
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call72, metadata !4307, metadata !DIExpression()), !dbg !4381
  call fastcc void @maybe_dump_rtl_for_gimple_stmt(%union.gimple_statement_d* %stmt.1, %struct.rtx_def* %call43) #7, !dbg !4466
  br label %if.end77, !dbg !4467

if.else:                                          ; preds = %if.end38
  %call73 = call %struct.rtx_def* @emit_note(i32 10) #6, !dbg !4468
  %il74 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !4469
  %rtl75 = bitcast %union.basic_block_il_dependent* %il74 to %struct.rtl_bb_info**, !dbg !4469
  %32 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl75, align 8, !dbg !4469
  %head_76 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %32, i64 0, i32 0, !dbg !4469
  store %struct.rtx_def* %call73, %struct.rtx_def** %head_76, align 8, !dbg !4470
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call73, metadata !4307, metadata !DIExpression()), !dbg !4381
  br label %if.end77

if.end77:                                         ; preds = %if.else, %if.end68
  %note.0 = phi %struct.rtx_def* [ %call72, %if.end68 ], [ %call73, %if.else ], !dbg !4471
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !4307, metadata !DIExpression()), !dbg !4381
  %arrayidx80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 2, !dbg !4472
  %rt_bb = bitcast i64* %arrayidx80 to %struct.basic_block_def**, !dbg !4472
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %rt_bb, align 8, !dbg !4473
  %33 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !4474
  %34 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !4475
  %35 = bitcast %struct.gimple_stmt_iterator* %nsi to i8*, !dbg !4476
  br label %for.cond, !dbg !4477

for.cond:                                         ; preds = %for.inc334, %if.end77
  %bb.addr.0 = phi %struct.basic_block_def* [ %bb, %if.end77 ], [ %bb.addr.6, %for.inc334 ]
  %retval.0 = phi %struct.basic_block_def* [ undef, %if.end77 ], [ %retval.5, %for.inc334 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0, metadata !4303, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  %call81 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4478
  %tobool82 = icmp eq i8 %call81, 0, !dbg !4479
  br i1 %tobool82, label %for.body, label %for.end335, !dbg !4480

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  %call83 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4481
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call83, metadata !4306, metadata !DIExpression()), !dbg !4381
  %36 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !4482
  %tobool84 = icmp ne i32 %36, 0, !dbg !4482
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 1), align 8, !dbg !4483
  %tobool86 = icmp ne %struct.bitmap_head_def* %37, null, !dbg !4484
  %or.cond3 = and i1 %tobool84, %tobool86, !dbg !4485
  br i1 %or.cond3, label %land.lhs.true87, label %if.end190, !dbg !4485

land.lhs.true87:                                  ; preds = %for.body
  %call88 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call83) #7, !dbg !4486
  %tobool89 = icmp eq i8 %call88, 0, !dbg !4486
  br i1 %tobool89, label %if.then90, label %if.end190, !dbg !4487

if.then90:                                        ; preds = %land.lhs.true87
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #8, !dbg !4488
  %call91 = call i32 @get_curr_insn_source_location() #6, !dbg !4489
  call void @llvm.dbg.value(metadata i32 %call91, metadata !4336, metadata !DIExpression()), !dbg !4474
  %call92 = call %union.tree_node* @get_curr_insn_block() #6, !dbg !4490
  call void @llvm.dbg.value(metadata %union.tree_node* %call92, metadata !4337, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4319, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call93 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call83, i32 1) #7, !dbg !4491
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !4334, metadata !DIExpression()), !dbg !4474
  br label %for.cond94, !dbg !4491

for.cond94:                                       ; preds = %for.inc187, %if.then90
  %op.0 = phi %union.tree_node* [ %call93, %if.then90 ], [ %call188, %for.inc187 ], !dbg !4492
  call void @llvm.dbg.value(metadata %union.tree_node* %op.0, metadata !4334, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4319, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call95 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4493
  %tobool96 = icmp eq i8 %call95, 0, !dbg !4493
  br i1 %tobool96, label %for.body98, label %for.end189, !dbg !4491

for.body98:                                       ; preds = %for.cond94
  %call99 = call fastcc %union.gimple_statement_d* @get_gimple_for_ssa_name(%union.tree_node* %op.0) #7, !dbg !4494
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call99, metadata !4335, metadata !DIExpression()), !dbg !4474
  %tobool100 = icmp eq %union.gimple_statement_d* %call99, null, !dbg !4495
  br i1 %tobool100, label %for.inc187, label %if.then101, !dbg !4496

if.then101:                                       ; preds = %for.body98
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %34) #8, !dbg !4497
  call void @llvm.dbg.value(metadata i8 0, metadata !4351, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  %call102 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %op.0) #7, !dbg !4498
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call102, metadata !4350, metadata !DIExpression()), !dbg !4475
  br label %for.cond103, !dbg !4498

for.cond103:                                      ; preds = %for.inc, %if.then101
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call102, %if.then101 ], [ %call113, %for.inc ], !dbg !4500
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !4350, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  %call104 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4501
  %tobool105 = icmp eq i8 %call104, 0, !dbg !4501
  br i1 %tobool105, label %for.body107, label %for.end, !dbg !4498

for.body107:                                      ; preds = %for.cond103
  %stmt108 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !4503
  %38 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt108, align 8, !dbg !4503
  %call109 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %38) #7, !dbg !4506
  %tobool110 = icmp eq i8 %call109, 0, !dbg !4506
  br i1 %tobool110, label %for.inc, label %for.end, !dbg !4507

for.inc:                                          ; preds = %for.body107
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  %call113 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4501
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call113, metadata !4350, metadata !DIExpression()), !dbg !4475
  br label %for.cond103, !dbg !4501, !llvm.loop !4508

for.end:                                          ; preds = %for.body107, %for.cond103
  %have_debug_uses.0 = phi i1 [ false, %for.cond103 ], [ true, %for.body107 ]
  br i1 %have_debug_uses.0, label %if.then115, label %if.end185, !dbg !4510

if.then115:                                       ; preds = %for.end
  %call116 = call %union.tree_node* @gimple_assign_rhs_to_tree(%union.gimple_statement_d* nonnull %call99) #7, !dbg !4511
  call void @llvm.dbg.value(metadata %union.tree_node* %call116, metadata !4355, metadata !DIExpression()), !dbg !4512
  %call117 = call %union.tree_node* @make_node_stat(i32 37) #6, !dbg !4513
  call void @llvm.dbg.value(metadata %union.tree_node* %call117, metadata !4356, metadata !DIExpression()), !dbg !4512
  %call118 = call fastcc i32 @gimple_location(%union.gimple_statement_d* nonnull %call99) #7, !dbg !4514
  call void @set_curr_insn_source_location(i32 %call118) #6, !dbg !4515
  %call119 = call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* nonnull %call99) #7, !dbg !4516
  call void @set_curr_insn_block(%union.tree_node* %call119) #6, !dbg !4517
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4518
  %39 = bitcast i40* %artificial_flag to i64*, !dbg !4518
  %bf.load120 = load i64, i64* %39, align 8, !dbg !4519
  %bf.set = or i64 %bf.load120, 4096, !dbg !4519
  store i64 %bf.set, i64* %39, align 8, !dbg !4519
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4520
  %40 = bitcast %union.tree_node** %type to i64*, !dbg !4520
  %41 = load i64, i64* %40, align 8, !dbg !4520
  %type123 = getelementptr inbounds %union.tree_node, %union.tree_node* %call117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4521
  %42 = bitcast %union.tree_node** %type123 to i64*, !dbg !4522
  store i64 %41, i64* %42, align 8, !dbg !4522
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %call116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4523
  %bf.load124 = load i64, i64* %43, align 8, !dbg !4523
  %bf.cast = and i64 %bf.load124, 65535, !dbg !4523
  %arrayidx126 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4523
  %44 = load i32, i32* %arrayidx126, align 4, !dbg !4523
  %cmp127 = icmp eq i32 %44, 3, !dbg !4523
  br i1 %cmp127, label %if.then128, label %if.else134, !dbg !4525

if.then128:                                       ; preds = %if.then115
  %mode130 = getelementptr inbounds %union.tree_node, %union.tree_node* %call116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4526
  %45 = bitcast i40* %mode130 to i64*, !dbg !4526
  %bf.load131 = load i64, i64* %45, align 8, !dbg !4526
  %46 = trunc i64 %bf.load131 to i32, !dbg !4526
  %bf.cast133 = and i32 %46, 255, !dbg !4526
  call void @llvm.dbg.value(metadata i32 %bf.cast133, metadata !4358, metadata !DIExpression()), !dbg !4512
  br label %if.end155, !dbg !4527

if.else134:                                       ; preds = %if.then115
  %47 = bitcast %union.tree_node** %type to i64**, !dbg !4528
  %48 = load i64*, i64** %47, align 8, !dbg !4528
  %bf.load138 = load i64, i64* %48, align 8, !dbg !4528
  %bf.cast1406 = and i64 %bf.load138, 65535, !dbg !4528
  %cmp141 = icmp eq i64 %bf.cast1406, 14, !dbg !4528
  br i1 %cmp141, label %cond.true142, label %cond.false146, !dbg !4528

cond.true142:                                     ; preds = %if.else134
  %.cast7 = bitcast i64* %48 to %union.tree_node*, !dbg !4528
  %call145 = call i32 @vector_type_mode(%union.tree_node* %.cast7) #6, !dbg !4528
  %bf.load158.pre = load i64, i64* %39, align 8, !dbg !4529
  br label %if.end155, !dbg !4528

cond.false146:                                    ; preds = %if.else134
  %type149 = bitcast i64* %48 to %struct.tree_type*, !dbg !4528
  %mode150 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type149, i64 0, i32 6, !dbg !4528
  %bf.load151 = load i32, i32* %mode150, align 4, !dbg !4528
  %bf.lshr = lshr i32 %bf.load151, 16, !dbg !4528
  %bf.clear152 = and i32 %bf.lshr, 255, !dbg !4528
  br label %if.end155, !dbg !4528

if.end155:                                        ; preds = %cond.true142, %cond.false146, %if.then128
  %bf.load158 = phi i64 [ %bf.set, %if.then128 ], [ %bf.load158.pre, %cond.true142 ], [ %bf.set, %cond.false146 ], !dbg !4529
  %mode.0 = phi i32 [ %bf.cast133, %if.then128 ], [ %call145, %cond.true142 ], [ %bf.clear152, %cond.false146 ], !dbg !4530
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !4358, metadata !DIExpression()), !dbg !4512
  %49 = and i32 %mode.0, 255, !dbg !4529
  %bf.value = zext i32 %49 to i64, !dbg !4529
  %bf.clear159 = and i64 %bf.load158, -256, !dbg !4529
  %bf.set160 = or i64 %bf.clear159, %bf.value, !dbg !4529
  store i64 %bf.set160, i64* %39, align 8, !dbg !4529
  %50 = bitcast %union.tree_node* %call116 to %struct.rtx_def*, !dbg !4531
  %call161 = call %struct.rtx_def* @gen_rtx_fmt_tei_stat(i32 138, i32 %mode.0, %union.tree_node* %call117, %struct.rtx_def* %50, i32 2) #6, !dbg !4531
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call161, metadata !4357, metadata !DIExpression()), !dbg !4512
  %call162 = call %struct.rtx_def* @emit_debug_insn(%struct.rtx_def* %call161) #6, !dbg !4532
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call162, metadata !4357, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  %call163 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %op.0) #7, !dbg !4533
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call163, metadata !4352, metadata !DIExpression()), !dbg !4512
  br label %for.cond164, !dbg !4533

for.cond164:                                      ; preds = %for.inc182, %if.end155
  %debugstmt.0 = phi %union.gimple_statement_d* [ %call163, %if.end155 ], [ %call183, %for.inc182 ], !dbg !4535
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %debugstmt.0, metadata !4352, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  %call165 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4536
  %tobool166 = icmp eq i8 %call165, 0, !dbg !4536
  br i1 %tobool166, label %for.body168, label %if.end185.loopexit, !dbg !4533

for.body168:                                      ; preds = %for.cond164
  %call169 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %debugstmt.0) #7, !dbg !4538
  %tobool170 = icmp eq i8 %call169, 0, !dbg !4538
  br i1 %tobool170, label %for.inc182, label %if.end172, !dbg !4541

if.end172:                                        ; preds = %for.body168
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  %call173 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4542
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call173, metadata !4350, metadata !DIExpression()), !dbg !4475
  br label %for.cond174, !dbg !4542

for.cond174:                                      ; preds = %for.body178, %if.end172
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call173, %if.end172 ], [ %call180, %for.body178 ], !dbg !4544
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !4350, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  %call175 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4545
  %tobool176 = icmp eq i8 %call175, 0, !dbg !4545
  br i1 %tobool176, label %for.body178, label %for.end181, !dbg !4542

for.body178:                                      ; preds = %for.cond174
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1, %union.tree_node* %call117) #7, !dbg !4547
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  %call180 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4545
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call180, metadata !4350, metadata !DIExpression()), !dbg !4475
  br label %for.cond174, !dbg !4545, !llvm.loop !4548

for.end181:                                       ; preds = %for.cond174
  call fastcc void @update_stmt(%union.gimple_statement_d* %debugstmt.0) #7, !dbg !4550
  br label %for.inc182, !dbg !4551

for.inc182:                                       ; preds = %for.body168, %for.end181
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  %call183 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4536
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call183, metadata !4352, metadata !DIExpression()), !dbg !4512
  br label %for.cond164, !dbg !4536, !llvm.loop !4552

if.end185.loopexit:                               ; preds = %for.cond164
  br label %if.end185, !dbg !4554

if.end185:                                        ; preds = %if.end185.loopexit, %for.end
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %34) #8, !dbg !4554
  br label %for.inc187, !dbg !4555

for.inc187:                                       ; preds = %for.body98, %if.end185
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4319, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call188 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4493
  call void @llvm.dbg.value(metadata %union.tree_node* %call188, metadata !4334, metadata !DIExpression()), !dbg !4474
  br label %for.cond94, !dbg !4493, !llvm.loop !4556

for.end189:                                       ; preds = %for.cond94
  call void @set_curr_insn_source_location(i32 %call91) #6, !dbg !4558
  call void @set_curr_insn_block(%union.tree_node* %call92) #6, !dbg !4559
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #8, !dbg !4560
  br label %if.end190, !dbg !4561

if.end190:                                        ; preds = %land.lhs.true87, %for.end189, %for.body
  store %union.gimple_statement_d* %call83, %union.gimple_statement_d** @currently_expanding_gimple_stmt, align 8, !dbg !4562
  %call191 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call83) #7, !dbg !4563
  %cmp192 = icmp eq i32 %call191, 1, !dbg !4564
  br i1 %cmp192, label %if.then193, label %if.else198, !dbg !4565

if.then193:                                       ; preds = %if.end190
  %call194 = call fastcc %struct.basic_block_def* @expand_gimple_cond(%struct.basic_block_def* %bb.addr.0, %union.gimple_statement_d* %call83) #7, !dbg !4566
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call194, metadata !4315, metadata !DIExpression()), !dbg !4568
  %tobool195 = icmp eq %struct.basic_block_def* %call194, null, !dbg !4569
  br i1 %tobool195, label %if.end330, label %cleanup331, !dbg !4571

if.else198:                                       ; preds = %if.end190
  %call199 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %call83) #7, !dbg !4572
  %tobool200 = icmp eq i8 %call199, 0, !dbg !4572
  br i1 %tobool200, label %if.else292, label %if.then201, !dbg !4573

if.then201:                                       ; preds = %if.else198
  %call203 = call i32 @get_curr_insn_source_location() #6, !dbg !4574
  call void @llvm.dbg.value(metadata i32 %call203, metadata !4359, metadata !DIExpression()), !dbg !4476
  %call205 = call %union.tree_node* @get_curr_insn_block() #6, !dbg !4575
  call void @llvm.dbg.value(metadata %union.tree_node* %call205, metadata !4363, metadata !DIExpression()), !dbg !4476
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #8, !dbg !4576
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %0, i64 24, i1 false), !dbg !4577
  br label %for.cond206, !dbg !4578

for.cond206:                                      ; preds = %cleanup, %if.then201
  %stmt.2 = phi %union.gimple_statement_d* [ %call83, %if.then201 ], [ %stmt.3, %cleanup ], !dbg !4579
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.2, metadata !4306, metadata !DIExpression()), !dbg !4381
  %call207 = call fastcc %union.tree_node* @gimple_debug_bind_get_var(%union.gimple_statement_d* %stmt.2) #7, !dbg !4580
  call void @llvm.dbg.value(metadata %union.tree_node* %call207, metadata !4365, metadata !DIExpression()), !dbg !4581
  %call211 = call fastcc zeroext i8 @gimple_debug_bind_has_value_p(%union.gimple_statement_d* %stmt.2) #7, !dbg !4582
  %tobool212 = icmp eq i8 %call211, 0, !dbg !4582
  br i1 %tobool212, label %if.end216, label %if.then213, !dbg !4584

if.then213:                                       ; preds = %for.cond206
  %call214 = call fastcc %union.tree_node* @gimple_debug_bind_get_value(%union.gimple_statement_d* %stmt.2) #7, !dbg !4585
  call void @llvm.dbg.value(metadata %union.tree_node* %call214, metadata !4369, metadata !DIExpression()), !dbg !4581
  br label %if.end216, !dbg !4586

if.end216:                                        ; preds = %for.cond206, %if.then213
  %value208.0 = phi %union.tree_node* [ %call214, %if.then213 ], [ null, %for.cond206 ], !dbg !4587
  call void @llvm.dbg.value(metadata %union.tree_node* %value208.0, metadata !4369, metadata !DIExpression()), !dbg !4581
  %call217 = call %struct.rtx_def* @get_last_insn() #6, !dbg !4588
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call217, metadata !4308, metadata !DIExpression()), !dbg !4381
  %call218 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt.2) #7, !dbg !4589
  call void @set_curr_insn_source_location(i32 %call218) #6, !dbg !4590
  %call219 = call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %stmt.2) #7, !dbg !4591
  call void @set_curr_insn_block(%union.tree_node* %call219) #6, !dbg !4592
  %51 = getelementptr inbounds %union.tree_node, %union.tree_node* %call207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4593
  %bf.load221 = load i64, i64* %51, align 8, !dbg !4593
  %bf.cast223 = and i64 %bf.load221, 65535, !dbg !4593
  %arrayidx225 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast223, !dbg !4593
  %52 = load i32, i32* %arrayidx225, align 4, !dbg !4593
  %cmp226 = icmp eq i32 %52, 3, !dbg !4593
  br i1 %cmp226, label %if.then227, label %if.else233, !dbg !4595

if.then227:                                       ; preds = %if.end216
  %mode229 = getelementptr inbounds %union.tree_node, %union.tree_node* %call207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4596
  %53 = bitcast i40* %mode229 to i64*, !dbg !4596
  %bf.load230 = load i64, i64* %53, align 8, !dbg !4596
  %54 = trunc i64 %bf.load230 to i32, !dbg !4596
  %bf.cast232 = and i32 %54, 255, !dbg !4596
  call void @llvm.dbg.value(metadata i32 %bf.cast232, metadata !4371, metadata !DIExpression()), !dbg !4581
  br label %if.end255, !dbg !4597

if.else233:                                       ; preds = %if.end216
  %type235 = getelementptr inbounds %union.tree_node, %union.tree_node* %call207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4598
  %55 = bitcast %union.tree_node** %type235 to i64**, !dbg !4598
  %56 = load i64*, i64** %55, align 8, !dbg !4598
  %bf.load237 = load i64, i64* %56, align 8, !dbg !4598
  %bf.cast2395 = and i64 %bf.load237, 65535, !dbg !4598
  %cmp240 = icmp eq i64 %bf.cast2395, 14, !dbg !4598
  br i1 %cmp240, label %cond.true241, label %cond.false245, !dbg !4598

cond.true241:                                     ; preds = %if.else233
  %.cast = bitcast i64* %56 to %union.tree_node*, !dbg !4598
  %call244 = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !4598
  br label %if.end255, !dbg !4598

cond.false245:                                    ; preds = %if.else233
  %type248 = bitcast i64* %56 to %struct.tree_type*, !dbg !4598
  %mode249 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type248, i64 0, i32 6, !dbg !4598
  %bf.load250 = load i32, i32* %mode249, align 4, !dbg !4598
  %bf.lshr251 = lshr i32 %bf.load250, 16, !dbg !4598
  %bf.clear252 = and i32 %bf.lshr251, 255, !dbg !4598
  br label %if.end255, !dbg !4598

if.end255:                                        ; preds = %cond.true241, %cond.false245, %if.then227
  %mode210.0 = phi i32 [ %bf.cast232, %if.then227 ], [ %call244, %cond.true241 ], [ %bf.clear252, %cond.false245 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %mode210.0, metadata !4371, metadata !DIExpression()), !dbg !4581
  %57 = bitcast %union.tree_node* %value208.0 to %struct.rtx_def*, !dbg !4600
  %call256 = call %struct.rtx_def* @gen_rtx_fmt_tei_stat(i32 138, i32 %mode210.0, %union.tree_node* %call207, %struct.rtx_def* %57, i32 2) #6, !dbg !4600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call256, metadata !4370, metadata !DIExpression()), !dbg !4581
  %call257 = call %struct.rtx_def* @emit_debug_insn(%struct.rtx_def* %call256) #6, !dbg !4601
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call257, metadata !4370, metadata !DIExpression()), !dbg !4581
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4602
  %tobool258 = icmp eq %struct._IO_FILE* %58, null, !dbg !4602
  br i1 %tobool258, label %if.end278, label %land.lhs.true259, !dbg !4604

land.lhs.true259:                                 ; preds = %if.end255
  %59 = load i32, i32* @dump_flags, align 4, !dbg !4605
  %and = and i32 %59, 8, !dbg !4606
  %tobool260 = icmp eq i32 %and, 0, !dbg !4606
  br i1 %tobool260, label %if.end278, label %if.then261, !dbg !4607

if.then261:                                       ; preds = %land.lhs.true259
  %60 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !4608
  %u262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call257, i64 0, i32 1, !dbg !4610
  %61 = getelementptr inbounds %union.u, %union.u* %u262, i64 1, i32 0, i32 0, i64 0, !dbg !4610
  %rt_rtx265 = bitcast %union.rtunion_def* %61 to %struct.rtx_def**, !dbg !4610
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx265, align 8, !dbg !4610
  %63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4610
  %64 = bitcast %union.rtunion_def* %63 to i64*, !dbg !4611
  store i64 %60, i64* %64, align 8, !dbg !4611
  call fastcc void @maybe_dump_rtl_for_gimple_stmt(%union.gimple_statement_d* %stmt.2, %struct.rtx_def* %call217) #7, !dbg !4612
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx265, align 8, !dbg !4613
  %66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4613
  %67 = bitcast %union.rtunion_def* %66 to %union.tree_node**, !dbg !4614
  store %union.tree_node* %value208.0, %union.tree_node** %67, align 8, !dbg !4614
  br label %if.end278, !dbg !4615

if.end278:                                        ; preds = %land.lhs.true259, %if.end255, %if.then261
  call fastcc void @delink_stmt_imm_use(%union.gimple_statement_d* %stmt.2) #7, !dbg !4616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %35, i64 24, i1 false), !dbg !4617
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %nsi, metadata !4364, metadata !DIExpression(DW_OP_deref)), !dbg !4476
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %nsi) #7, !dbg !4618
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %nsi, metadata !4364, metadata !DIExpression(DW_OP_deref)), !dbg !4476
  %call279 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %nsi) #7, !dbg !4619
  %tobool280 = icmp eq i8 %call279, 0, !dbg !4619
  br i1 %tobool280, label %if.end282, label %cleanup, !dbg !4621

if.end282:                                        ; preds = %if.end278
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %nsi, metadata !4364, metadata !DIExpression(DW_OP_deref)), !dbg !4476
  %call283 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %nsi) #7, !dbg !4622
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call283, metadata !4306, metadata !DIExpression()), !dbg !4381
  %call284 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %call283) #7, !dbg !4623
  %tobool285 = icmp eq i8 %call284, 0, !dbg !4623
  %. = select i1 %tobool285, i32 17, i32 0, !dbg !4625
  br label %cleanup, !dbg !4625

cleanup:                                          ; preds = %if.end278, %if.end282
  %cleanup.dest.slot.0 = phi i32 [ 17, %if.end278 ], [ %., %if.end282 ]
  %stmt.3 = phi %union.gimple_statement_d* [ %stmt.2, %if.end278 ], [ %call283, %if.end282 ], !dbg !4568
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.3, metadata !4306, metadata !DIExpression()), !dbg !4381
  %switch = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %switch, label %for.cond206, label %for.end291, !llvm.loop !4626

for.end291:                                       ; preds = %cleanup
  call void @set_curr_insn_source_location(i32 %call203) #6, !dbg !4629
  call void @set_curr_insn_block(%union.tree_node* %call205) #6, !dbg !4630
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #8, !dbg !4631
  br label %if.end330, !dbg !4632

if.else292:                                       ; preds = %if.else198
  %call293 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call83) #7, !dbg !4633
  %tobool294 = icmp eq i8 %call293, 0, !dbg !4633
  br i1 %tobool294, label %if.else311, label %land.lhs.true295, !dbg !4634

land.lhs.true295:                                 ; preds = %if.else292
  %call296 = call fastcc zeroext i8 @gimple_call_tail_p(%union.gimple_statement_d* %call83) #7, !dbg !4635
  %tobool298 = icmp eq i8 %call296, 0, !dbg !4635
  br i1 %tobool298, label %if.else311, label %if.then299, !dbg !4636

if.then299:                                       ; preds = %land.lhs.true295
  call void @llvm.dbg.value(metadata i8* %can_fallthru, metadata !4372, metadata !DIExpression(DW_OP_deref)), !dbg !4637
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %can_fallthru) #8, !dbg !4638
  call void @llvm.dbg.value(metadata i8* %can_fallthru, metadata !4372, metadata !DIExpression(DW_OP_deref)), !dbg !4637
  %call300 = call fastcc %struct.basic_block_def* @expand_gimple_tailcall(%struct.basic_block_def* %bb.addr.0, %union.gimple_statement_d* %call83, i8* nonnull %can_fallthru) #7, !dbg !4639
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call300, metadata !4315, metadata !DIExpression()), !dbg !4568
  %tobool301 = icmp eq %struct.basic_block_def* %call300, null, !dbg !4640
  br i1 %tobool301, label %if.end307, label %if.then302, !dbg !4642

if.then302:                                       ; preds = %if.then299
  %68 = load i8, i8* %can_fallthru, align 1, !dbg !4643
  call void @llvm.dbg.value(metadata i8 %68, metadata !4372, metadata !DIExpression()), !dbg !4637
  %tobool303 = icmp eq i8 %68, 0, !dbg !4643
  br i1 %tobool303, label %cleanup308, label %if.end307, !dbg !4646

if.end307:                                        ; preds = %if.then302, %if.then299
  %bb.addr.1 = phi %struct.basic_block_def* [ %bb.addr.0, %if.then299 ], [ %call300, %if.then302 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.1, metadata !4303, metadata !DIExpression()), !dbg !4381
  br label %cleanup308, !dbg !4647

cleanup308:                                       ; preds = %if.then302, %if.end307
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end307 ], [ 1, %if.then302 ]
  %bb.addr.2 = phi %struct.basic_block_def* [ %bb.addr.1, %if.end307 ], [ %bb.addr.0, %if.then302 ]
  %retval.1 = phi %struct.basic_block_def* [ %retval.0, %if.end307 ], [ %call300, %if.then302 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.2, metadata !4303, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %can_fallthru, metadata !4372, metadata !DIExpression(DW_OP_deref)), !dbg !4637
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %can_fallthru) #8, !dbg !4647
  %cond2 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond2, label %if.end330, label %cleanup331

if.else311:                                       ; preds = %land.lhs.true295, %if.else292
  %call312 = call fastcc %union.tree_node** @single_ssa_def_operand(%union.gimple_statement_d* %call83, i32 2) #7, !dbg !4648
  call void @llvm.dbg.value(metadata %union.tree_node** %call312, metadata !4376, metadata !DIExpression()), !dbg !4649
  %cmp313 = icmp ne %union.tree_node** %call312, null, !dbg !4650
  %69 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 1), align 8, !dbg !4652
  %tobool316 = icmp ne %struct.bitmap_head_def* %69, null, !dbg !4655
  %or.cond4 = and i1 %cmp313, %tobool316, !dbg !4656
  br i1 %or.cond4, label %land.lhs.true317, label %if.end323, !dbg !4656

land.lhs.true317:                                 ; preds = %if.else311
  %call318 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** nonnull %call312) #7, !dbg !4657
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call318, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4657
  %70 = bitcast %union.tree_node** %version to i32*, !dbg !4657
  %71 = load i32, i32* %70, align 8, !dbg !4657
  %call319 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %69, i32 %71) #6, !dbg !4658
  %tobool320 = icmp eq i32 %call319, 0, !dbg !4658
  br i1 %tobool320, label %if.end323, label %cleanup325, !dbg !4659

if.end323:                                        ; preds = %land.lhs.true317, %if.else311
  %call324 = call fastcc %struct.rtx_def* @expand_gimple_stmt(%union.gimple_statement_d* %call83) #7, !dbg !4660
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call324, metadata !4308, metadata !DIExpression()), !dbg !4381
  call fastcc void @maybe_dump_rtl_for_gimple_stmt(%union.gimple_statement_d* %call83, %struct.rtx_def* %call324) #7, !dbg !4661
  br label %cleanup325, !dbg !4662

cleanup325:                                       ; preds = %land.lhs.true317, %if.end323
  %cleanup.dest.slot.2 = phi i32 [ 0, %if.end323 ], [ 4, %land.lhs.true317 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond1, label %if.end330, label %cleanup331

if.end330:                                        ; preds = %if.then193, %for.end291, %cleanup325, %cleanup308
  %bb.addr.5 = phi %struct.basic_block_def* [ %bb.addr.0, %if.then193 ], [ %bb.addr.0, %for.end291 ], [ %bb.addr.2, %cleanup308 ], [ %bb.addr.0, %cleanup325 ]
  %retval.4 = phi %struct.basic_block_def* [ %retval.0, %if.then193 ], [ %retval.0, %for.end291 ], [ %retval.1, %cleanup308 ], [ %retval.0, %cleanup325 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.5, metadata !4303, metadata !DIExpression()), !dbg !4381
  br label %cleanup331, !dbg !4663

cleanup331:                                       ; preds = %if.then193, %cleanup308, %cleanup325, %if.end330
  %cleanup.dest.slot.3 = phi i32 [ 0, %if.end330 ], [ %cleanup.dest.slot.1, %cleanup308 ], [ %cleanup.dest.slot.2, %cleanup325 ], [ 1, %if.then193 ]
  %bb.addr.6 = phi %struct.basic_block_def* [ %bb.addr.5, %if.end330 ], [ %bb.addr.2, %cleanup308 ], [ %bb.addr.0, %cleanup325 ], [ %bb.addr.0, %if.then193 ]
  %retval.5 = phi %struct.basic_block_def* [ %retval.4, %if.end330 ], [ %retval.1, %cleanup308 ], [ %retval.0, %cleanup325 ], [ %call194, %if.then193 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.6, metadata !4303, metadata !DIExpression()), !dbg !4381
  switch i32 %cleanup.dest.slot.3, label %cleanup433.loopexit [
    i32 0, label %for.inc334
    i32 4, label %for.inc334
  ]

for.inc334:                                       ; preds = %cleanup331, %cleanup331
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !4664
  br label %for.cond, !dbg !4665, !llvm.loop !4666

for.end335:                                       ; preds = %for.cond
  %bb.addr.0.lcssa = phi %struct.basic_block_def* [ %bb.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !4303, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !4303, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !4303, metadata !DIExpression()), !dbg !4381
  store %union.gimple_statement_d* null, %union.gimple_statement_d** @currently_expanding_gimple_stmt, align 8, !dbg !4668
  %72 = bitcast %struct.edge_iterator* %tmp336 to i8*, !dbg !4669
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #8, !dbg !4669
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.addr.0.lcssa, i64 0, i32 1, !dbg !4669
  %call337 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4669
  %73 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp336, i64 0, i32 0, !dbg !4669
  %74 = extractvalue { i32, %struct.VEC_edge_gc** } %call337, 0, !dbg !4669
  store i32 %74, i32* %73, align 8, !dbg !4669
  %75 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp336, i64 0, i32 1, !dbg !4669
  %76 = extractvalue { i32, %struct.VEC_edge_gc** } %call337, 1, !dbg !4669
  store %struct.VEC_edge_gc** %76, %struct.VEC_edge_gc*** %75, align 8, !dbg !4669
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %72, i64 16, i1 false), !dbg !4669
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #8, !dbg !4669
  %77 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4671
  %78 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4671
  %next_bb356 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.addr.0.lcssa, i64 0, i32 6, !dbg !4673
  br label %for.cond338, !dbg !4669

for.cond338:                                      ; preds = %for.inc365, %for.end335
  %79 = load i32, i32* %77, align 8, !dbg !4676
  %80 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %78, align 8, !dbg !4676
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4309, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  %call339 = call fastcc zeroext i8 @ei_cond(i32 %79, %struct.VEC_edge_gc** %80, %struct.edge_def** nonnull %e) #7, !dbg !4676
  %tobool340 = icmp eq i8 %call339, 0, !dbg !4669
  br i1 %tobool340, label %for.end366, label %for.body341, !dbg !4669

for.body341:                                      ; preds = %for.cond338
  %81 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4677
  call void @llvm.dbg.value(metadata %struct.edge_def* %81, metadata !4309, metadata !DIExpression()), !dbg !4381
  %goto_locus = getelementptr inbounds %struct.edge_def, %struct.edge_def* %81, i64 0, i32 5, !dbg !4679
  %82 = load i32, i32* %goto_locus, align 8, !dbg !4679
  %tobool342 = icmp eq i32 %82, 0, !dbg !4677
  br i1 %tobool342, label %if.end350, label %land.lhs.true343, !dbg !4680

land.lhs.true343:                                 ; preds = %for.body341
  call void @llvm.dbg.value(metadata %struct.edge_def* %81, metadata !4309, metadata !DIExpression()), !dbg !4381
  %goto_block = getelementptr inbounds %struct.edge_def, %struct.edge_def* %81, i64 0, i32 4, !dbg !4681
  %83 = load %union.tree_node*, %union.tree_node** %goto_block, align 8, !dbg !4681
  %tobool344 = icmp eq %union.tree_node* %83, null, !dbg !4682
  br i1 %tobool344, label %if.end350, label %if.then345, !dbg !4683

if.then345:                                       ; preds = %land.lhs.true343
  call void @llvm.dbg.value(metadata %struct.edge_def* %81, metadata !4309, metadata !DIExpression()), !dbg !4381
  call void @set_curr_insn_source_location(i32 %82) #6, !dbg !4684
  %84 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4686
  call void @llvm.dbg.value(metadata %struct.edge_def* %84, metadata !4309, metadata !DIExpression()), !dbg !4381
  %goto_block347 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %84, i64 0, i32 4, !dbg !4687
  %85 = load %union.tree_node*, %union.tree_node** %goto_block347, align 8, !dbg !4687
  call void @set_curr_insn_block(%union.tree_node* %85) #6, !dbg !4688
  %call348 = call i32 @curr_insn_locator() #6, !dbg !4689
  %86 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4690
  call void @llvm.dbg.value(metadata %struct.edge_def* %86, metadata !4309, metadata !DIExpression()), !dbg !4381
  %goto_locus349 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %86, i64 0, i32 5, !dbg !4691
  store i32 %call348, i32* %goto_locus349, align 8, !dbg !4692
  br label %if.end350, !dbg !4693

if.end350:                                        ; preds = %land.lhs.true343, %for.body341, %if.then345
  %87 = phi %struct.edge_def* [ %81, %land.lhs.true343 ], [ %81, %for.body341 ], [ %86, %if.then345 ], !dbg !4694
  call void @llvm.dbg.value(metadata %struct.edge_def* %87, metadata !4309, metadata !DIExpression()), !dbg !4381
  %goto_block351 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %87, i64 0, i32 4, !dbg !4695
  store %union.tree_node* null, %union.tree_node** %goto_block351, align 8, !dbg !4696
  call void @llvm.dbg.value(metadata %struct.edge_def* %87, metadata !4309, metadata !DIExpression()), !dbg !4381
  %flags352 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %87, i64 0, i32 7, !dbg !4697
  %88 = load i32, i32* %flags352, align 8, !dbg !4697
  %and353 = and i32 %88, 1, !dbg !4698
  %tobool354 = icmp eq i32 %and353, 0, !dbg !4698
  br i1 %tobool354, label %for.inc365, label %land.lhs.true355, !dbg !4699

land.lhs.true355:                                 ; preds = %if.end350
  call void @llvm.dbg.value(metadata %struct.edge_def* %87, metadata !4309, metadata !DIExpression()), !dbg !4381
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %87, i64 0, i32 1, !dbg !4700
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4700
  %90 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb356, align 8, !dbg !4701
  %cmp357 = icmp eq %struct.basic_block_def* %89, %90, !dbg !4702
  br i1 %cmp357, label %for.inc365, label %if.then359, !dbg !4703

if.then359:                                       ; preds = %land.lhs.true355
  call void @llvm.dbg.value(metadata %struct.edge_def* %87, metadata !4309, metadata !DIExpression()), !dbg !4381
  %call361 = call fastcc %struct.rtx_def* @label_rtx_for_bb(%struct.basic_block_def* %89) #7, !dbg !4704
  call void @emit_jump(%struct.rtx_def* %call361) #6, !dbg !4706
  %91 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4707
  call void @llvm.dbg.value(metadata %struct.edge_def* %91, metadata !4309, metadata !DIExpression()), !dbg !4381
  %flags362 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %91, i64 0, i32 7, !dbg !4708
  %92 = load i32, i32* %flags362, align 8, !dbg !4709
  %and363 = and i32 %92, -2, !dbg !4709
  store i32 %and363, i32* %flags362, align 8, !dbg !4709
  br label %for.inc365, !dbg !4710

for.inc365:                                       ; preds = %land.lhs.true355, %if.end350, %if.then359
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4310, metadata !DIExpression(DW_OP_deref)), !dbg !4381
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4676
  br label %for.cond338, !dbg !4676, !llvm.loop !4711

for.end366:                                       ; preds = %for.cond338
  %call367 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb.addr.0.lcssa) #7, !dbg !4713
  %tobool369 = icmp eq i8 %call367, 0, !dbg !4713
  br i1 %tobool369, label %if.end387, label %land.lhs.true370, !dbg !4714

land.lhs.true370:                                 ; preds = %for.end366
  %call371 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb.addr.0.lcssa) #7, !dbg !4715
  %flags372 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call371, i64 0, i32 7, !dbg !4716
  %93 = load i32, i32* %flags372, align 8, !dbg !4716
  %and373 = and i32 %93, 1, !dbg !4717
  %tobool374 = icmp eq i32 %and373, 0, !dbg !4717
  br i1 %tobool374, label %if.end387, label %land.lhs.true375, !dbg !4718

land.lhs.true375:                                 ; preds = %land.lhs.true370
  %call376 = call %struct.rtx_def* @get_last_insn() #6, !dbg !4719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call376, metadata !4308, metadata !DIExpression()), !dbg !4381
  %tobool377 = icmp eq %struct.rtx_def* %call376, null, !dbg !4720
  br i1 %tobool377, label %if.end387, label %land.lhs.true378, !dbg !4721

land.lhs.true378:                                 ; preds = %land.lhs.true375
  %94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call376, i64 0, i32 0, !dbg !4722
  %bf.load379 = load i32, i32* %94, align 8, !dbg !4722
  %bf.clear380 = and i32 %bf.load379, 65535, !dbg !4722
  %cmp381 = icmp eq i32 %bf.clear380, 9, !dbg !4722
  br i1 %cmp381, label %if.then383, label %if.end387, !dbg !4723

if.then383:                                       ; preds = %land.lhs.true378
  %call384 = call %struct.rtx_def* @gen_reg_rtx(i32 16) #6, !dbg !4724
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call384, metadata !4378, metadata !DIExpression()), !dbg !4725
  %call385 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call384, %struct.rtx_def* %call384) #6, !dbg !4726
  %call386 = call %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def* %call385, %struct.rtx_def* nonnull %call376, %struct.basic_block_def* null) #6, !dbg !4727
  br label %if.end387, !dbg !4728

if.end387:                                        ; preds = %land.lhs.true375, %land.lhs.true370, %for.end366, %if.then383, %land.lhs.true378
  call void @do_pending_stack_adjust() #6, !dbg !4729
  %call388 = call %struct.rtx_def* @get_last_insn() #6, !dbg !4730
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call388, metadata !4308, metadata !DIExpression()), !dbg !4381
  %95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call388, i64 0, i32 0, !dbg !4731
  %bf.load389 = load i32, i32* %95, align 8, !dbg !4731
  %bf.clear390 = and i32 %bf.load389, 65535, !dbg !4731
  %cmp391 = icmp eq i32 %bf.clear390, 11, !dbg !4731
  br i1 %cmp391, label %if.then393, label %if.end398, !dbg !4733

if.then393:                                       ; preds = %if.end387
  %96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call388, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4734
  %rt_rtx397 = bitcast %union.rtunion_def* %96 to %struct.rtx_def**, !dbg !4734
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx397, align 8, !dbg !4734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %97, metadata !4308, metadata !DIExpression()), !dbg !4381
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i64 0, i32 0, !dbg !4735
  %bf.load399.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4737
  br label %if.end398, !dbg !4738

if.end398:                                        ; preds = %if.then393, %if.end387
  %bf.load399 = phi i32 [ %bf.load399.pre, %if.then393 ], [ %bf.load389, %if.end387 ], !dbg !4737
  %last.0 = phi %struct.rtx_def* [ %97, %if.then393 ], [ %call388, %if.end387 ], !dbg !4381
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !4308, metadata !DIExpression()), !dbg !4381
  %bf.clear400 = and i32 %bf.load399, 65535, !dbg !4737
  %cmp401 = icmp eq i32 %bf.clear400, 9, !dbg !4737
  br i1 %cmp401, label %land.lhs.true403, label %if.end430, !dbg !4737

land.lhs.true403:                                 ; preds = %if.end398
  %u404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 1, !dbg !4737
  %98 = getelementptr inbounds %union.u, %union.u* %u404, i64 1, i32 0, i32 0, i64 0, !dbg !4737
  %99 = bitcast %union.rtunion_def* %98 to i32**, !dbg !4737
  %100 = load i32*, i32** %99, align 8, !dbg !4737
  %bf.load408 = load i32, i32* %100, align 8, !dbg !4737
  %bf.clear409 = and i32 %bf.load408, 65535, !dbg !4737
  %cmp410 = icmp eq i32 %bf.clear409, 20, !dbg !4737
  br i1 %cmp410, label %if.then421, label %lor.lhs.false412, !dbg !4737

lor.lhs.false412:                                 ; preds = %land.lhs.true403
  %cmp419 = icmp eq i32 %bf.clear409, 21, !dbg !4737
  br i1 %cmp419, label %if.then421, label %if.end430, !dbg !4739

if.then421:                                       ; preds = %lor.lhs.false412, %land.lhs.true403
  %101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4740
  %rt_rtx425 = bitcast %union.rtunion_def* %101 to %struct.rtx_def**, !dbg !4740
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx425, align 8, !dbg !4740
  %103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4740
  %rt_rtx429 = bitcast %union.rtunion_def* %103 to %struct.rtx_def**, !dbg !4740
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx429, align 8, !dbg !4740
  call void @llvm.dbg.value(metadata %struct.rtx_def* %104, metadata !4308, metadata !DIExpression()), !dbg !4381
  br label %if.end430, !dbg !4741

if.end430:                                        ; preds = %if.then421, %lor.lhs.false412, %if.end398
  %last.1 = phi %struct.rtx_def* [ %104, %if.then421 ], [ %last.0, %lor.lhs.false412 ], [ %last.0, %if.end398 ], !dbg !4381
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1, metadata !4308, metadata !DIExpression()), !dbg !4381
  %il431 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.addr.0.lcssa, i64 0, i32 7, !dbg !4742
  %rtl432 = bitcast %union.basic_block_il_dependent* %il431 to %struct.rtl_bb_info**, !dbg !4742
  %105 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl432, align 8, !dbg !4742
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %105, i64 0, i32 1, !dbg !4742
  store %struct.rtx_def* %last.1, %struct.rtx_def** %end_, align 8, !dbg !4743
  call void @update_bb_for_insn(%struct.basic_block_def* %bb.addr.0.lcssa) #6, !dbg !4744
  br label %cleanup433, !dbg !4745

cleanup433.loopexit:                              ; preds = %cleanup331
  %retval.5.lcssa = phi %struct.basic_block_def* [ %retval.5, %cleanup331 ]
  br label %cleanup433, !dbg !4746

cleanup433:                                       ; preds = %cleanup433.loopexit, %if.end430
  %retval.6 = phi %struct.basic_block_def* [ %bb.addr.0.lcssa, %if.end430 ], [ %retval.5.lcssa, %cleanup433.loopexit ], !dbg !4381
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4746
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4746
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4746
  ret %struct.basic_block_def* %retval.6, !dbg !4746
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_debug_locations() unnamed_addr #5 !dbg !4747 {
entry:
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !4759
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4750, metadata !DIExpression()), !dbg !4760
  %0 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !4761
  call void @llvm.dbg.value(metadata i32 %0, metadata !4751, metadata !DIExpression()), !dbg !4760
  store i32 0, i32* @flag_strict_aliasing, align 4, !dbg !4762
  %call1 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4763
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4749, metadata !DIExpression()), !dbg !4760
  br label %for.cond, !dbg !4764

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0 = phi %struct.rtx_def* [ %call1, %entry ], [ %15, %for.inc ], !dbg !4765
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4749, metadata !DIExpression()), !dbg !4760
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !4766
  br i1 %tobool, label %for.end, label %for.body, !dbg !4766

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4767
  %bf.load = load i32, i32* %1, align 8, !dbg !4767
  %bf.clear = and i32 %bf.load, 65535, !dbg !4767
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !4767
  br i1 %cmp, label %if.then, label %for.inc, !dbg !4768

if.then:                                          ; preds = %for.body
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !4769
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4769
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !4769
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4769
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4769
  %5 = bitcast %union.rtunion_def* %4 to %union.tree_node**, !dbg !4769
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4769
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4752, metadata !DIExpression()), !dbg !4770
  %cmp6 = icmp eq %union.tree_node* %6, null, !dbg !4771
  br i1 %cmp6, label %if.end, label %if.else, !dbg !4773

if.else:                                          ; preds = %if.then
  %call8 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* nonnull %6) #7, !dbg !4774
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !4757, metadata !DIExpression()), !dbg !4770
  %call9 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !4776
  %cmp10 = icmp eq %struct.rtx_def* %call, %call9, !dbg !4776
  br i1 %cmp10, label %if.end, label %cond.true, !dbg !4776

cond.true:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3079, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4776
  br label %if.end, !dbg !4776

if.end:                                           ; preds = %cond.true, %if.else, %if.then
  %val.0 = phi %struct.rtx_def* [ null, %if.then ], [ %call8, %if.else ], [ %call8, %cond.true ], !dbg !4777
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.0, metadata !4757, metadata !DIExpression()), !dbg !4770
  %tobool11 = icmp eq %struct.rtx_def* %val.0, null, !dbg !4778
  br i1 %tobool11, label %if.then12, label %if.else14, !dbg !4780

if.then12:                                        ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4781
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %7) #6, !dbg !4781
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !4757, metadata !DIExpression()), !dbg !4770
  br label %if.end48, !dbg !4782

if.else14:                                        ; preds = %if.end
  %8 = bitcast %union.rtunion_def* %2 to i32**, !dbg !4783
  %9 = load i32*, i32** %8, align 8, !dbg !4783
  %bf.load19 = load i32, i32* %9, align 8, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %bf.load19, metadata !4758, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !4770
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val.0, i64 0, i32 0, !dbg !4785
  %bf.load21 = load i32, i32* %10, align 8, !dbg !4785
  %bf.lshr1 = xor i32 %bf.load19, %bf.load21, !dbg !4785
  %11 = and i32 %bf.lshr1, 16711680, !dbg !4785
  %cmp24 = icmp eq i32 %11, 0, !dbg !4785
  br i1 %cmp24, label %if.end48, label %lor.lhs.false, !dbg !4785

lor.lhs.false:                                    ; preds = %if.else14
  %bf.clear27 = and i32 %bf.load21, 16711680, !dbg !4785
  %cmp28 = icmp eq i32 %bf.clear27, 0, !dbg !4785
  br i1 %cmp28, label %land.lhs.true, label %cond.true44, !dbg !4785

land.lhs.true:                                    ; preds = %lor.lhs.false
  %bf.clear30 = and i32 %bf.load21, 65535, !dbg !4785
  %cmp31 = icmp eq i32 %bf.clear30, 30, !dbg !4785
  br i1 %cmp31, label %if.end48, label %lor.lhs.false32, !dbg !4785

lor.lhs.false32:                                  ; preds = %land.lhs.true
  %cmp35 = icmp eq i32 %bf.clear30, 31, !dbg !4785
  br i1 %cmp35, label %if.end48, label %lor.lhs.false36, !dbg !4785

lor.lhs.false36:                                  ; preds = %lor.lhs.false32
  %cmp39 = icmp eq i32 %bf.clear30, 32, !dbg !4785
  br i1 %cmp39, label %if.end48, label %lor.lhs.false40, !dbg !4785

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %cmp43 = icmp eq i32 %bf.clear30, 44, !dbg !4785
  br i1 %cmp43, label %if.end48, label %cond.true44, !dbg !4785

cond.true44:                                      ; preds = %lor.lhs.false40, %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3093, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4785
  br label %if.end48, !dbg !4785

if.end48:                                         ; preds = %cond.true44, %lor.lhs.false40, %lor.lhs.false36, %lor.lhs.false32, %land.lhs.true, %if.else14, %if.then12
  %val.1 = phi %struct.rtx_def* [ %call13, %if.then12 ], [ %val.0, %if.else14 ], [ %val.0, %land.lhs.true ], [ %val.0, %lor.lhs.false32 ], [ %val.0, %lor.lhs.false36 ], [ %val.0, %lor.lhs.false40 ], [ %val.0, %cond.true44 ], !dbg !4770
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.1, metadata !4757, metadata !DIExpression()), !dbg !4770
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4786
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4786
  %rt_rtx56 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !4786
  store %struct.rtx_def* %val.1, %struct.rtx_def** %rt_rtx56, align 8, !dbg !4787
  br label %for.inc, !dbg !4788

for.inc:                                          ; preds = %for.body, %if.end48
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4789
  %rt_rtx61 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !4789
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !4789
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !4749, metadata !DIExpression()), !dbg !4760
  br label %for.cond, !dbg !4790, !llvm.loop !4791

for.end:                                          ; preds = %for.cond
  store i32 %0, i32* @flag_strict_aliasing, align 4, !dbg !4793
  ret void, !dbg !4794
}

declare dso_local i32 @execute_free_datastructures() local_unnamed_addr #2

declare dso_local void @finish_out_of_ssa(%struct.ssaexpand*) local_unnamed_addr #2

declare dso_local void @pointer_map_destroy(%struct.pointer_map_t*) local_unnamed_addr #2

declare dso_local void @free_histograms() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @construct_exit_block() unnamed_addr #5 !dbg !4795 {
entry:
  %e2 = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !4805
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4797, metadata !DIExpression()), !dbg !4806
  %0 = bitcast %struct.edge_def** %e2 to i8*, !dbg !4807
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4807
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4808
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4808
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4809
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !4809
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4809
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !4809
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4809
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 5, !dbg !4809
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !4809
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 7, !dbg !4809
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4809
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4809
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !4809
  %7 = bitcast %struct.rtx_def** %end_ to i64*, !dbg !4809
  %8 = load i64, i64* %7, align 8, !dbg !4809
  tail call void @rtl_profile_for_bb(%struct.basic_block_def* %4) #6, !dbg !4810
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4811
  %function_end_locus = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 16, !dbg !4813
  %10 = load i32, i32* %function_end_locus, align 4, !dbg !4813
  %cmp = icmp eq i32 %10, 0, !dbg !4814
  br i1 %cmp, label %if.end, label %if.then, !dbg !4815

if.then:                                          ; preds = %entry
  store i32 %10, i32* @input_location, align 4, !dbg !4816
  br label %if.end, !dbg !4817

if.end:                                           ; preds = %entry, %if.then
  %11 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !4818
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %11, i64 0, i32 5, !dbg !4818
  %12 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4818
  tail call void @set_curr_insn_block(%union.tree_node* %12) #6, !dbg !4819
  tail call void @expand_function_end() #6, !dbg !4820
  %call7 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !4821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !4798, metadata !DIExpression()), !dbg !4806
  %cmp8 = icmp eq %struct.rtx_def* %call, %call7, !dbg !4822
  br i1 %cmp8, label %cleanup, label %if.end10, !dbg !4824

if.end10:                                         ; preds = %if.end
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4825
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !4825
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !4825
  %x_exit_block_ptr13 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 1, !dbg !4825
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr13, align 8, !dbg !4825
  %prev_bb14 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 5, !dbg !4825
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb14, align 8, !dbg !4825
  %il15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 7, !dbg !4825
  %rtl16 = bitcast %union.basic_block_il_dependent* %il15 to %struct.rtl_bb_info**, !dbg !4825
  %17 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl16, align 8, !dbg !4825
  %end_17 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %17, i64 0, i32 1, !dbg !4825
  %18 = bitcast %struct.rtx_def** %end_17 to i64*, !dbg !4826
  store i64 %8, i64* %18, align 8, !dbg !4826
  br label %while.cond, !dbg !4827

while.cond:                                       ; preds = %land.end, %if.end10
  %head.0 = phi %struct.rtx_def* [ %call, %if.end10 ], [ %20, %land.end ], !dbg !4806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.0, metadata !4797, metadata !DIExpression()), !dbg !4806
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4828
  %rt_rtx = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !4828
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4828
  %tobool = icmp eq %struct.rtx_def* %20, null, !dbg !4828
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !4829

land.rhs:                                         ; preds = %while.cond
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 0, !dbg !4829
  %bf.load = load i32, i32* %21, align 8, !dbg !4830
  %bf.clear = and i32 %bf.load, 65535, !dbg !4830
  %cmp22 = icmp eq i32 %bf.clear, 13, !dbg !4830
  br label %land.end

land.end:                                         ; preds = %while.cond, %land.rhs
  %22 = phi i1 [ false, %while.cond ], [ %cmp22, %land.rhs ], !dbg !4806
  br i1 %22, label %while.cond, label %while.end, !dbg !4827, !llvm.loop !4831

while.end:                                        ; preds = %land.end
  %.lcssa3 = phi %struct.rtx_def* [ %20, %land.end ], !dbg !4828
  %23 = bitcast %struct.rtx_def* %.lcssa3 to i8*, !dbg !4833
  %24 = bitcast %struct.rtx_def* %call7 to i8*, !dbg !4834
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !4835
  %x_exit_block_ptr33 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 1, !dbg !4835
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr33, align 8, !dbg !4835
  %prev_bb34 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i64 0, i32 5, !dbg !4836
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb34, align 8, !dbg !4836
  %call35 = tail call %struct.basic_block_def* @create_basic_block(i8* %23, i8* %24, %struct.basic_block_def* %27) #6, !dbg !4837
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call35, metadata !4799, metadata !DIExpression()), !dbg !4806
  %28 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4838
  %cfg37 = getelementptr inbounds %struct.function, %struct.function* %28, i64 0, i32 1, !dbg !4838
  %29 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg37, align 8, !dbg !4838
  %x_exit_block_ptr38 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %29, i64 0, i32 1, !dbg !4838
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr38, align 8, !dbg !4838
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i64 0, i32 11, !dbg !4839
  %31 = load i32, i32* %frequency, align 8, !dbg !4839
  %frequency39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call35, i64 0, i32 11, !dbg !4840
  store i32 %31, i32* %frequency39, align 8, !dbg !4841
  %32 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg37, align 8, !dbg !4842
  %x_exit_block_ptr42 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %32, i64 0, i32 1, !dbg !4842
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr42, align 8, !dbg !4842
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i64 0, i32 8, !dbg !4843
  %34 = load i64, i64* %count, align 8, !dbg !4843
  %count43 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call35, i64 0, i32 8, !dbg !4844
  store i64 %34, i64* %count43, align 8, !dbg !4845
  call void @llvm.dbg.value(metadata i32 0, metadata !4802, metadata !DIExpression()), !dbg !4806
  br label %while.cond44, !dbg !4846

while.cond44:                                     ; preds = %if.end73, %while.end
  %35 = phi %struct.function* [ %28, %while.end ], [ %.pre, %if.end73 ], !dbg !4847
  %ix.0 = phi i32 [ 0, %while.end ], [ %ix.1, %if.end73 ], !dbg !4806
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !4802, metadata !DIExpression()), !dbg !4806
  %cfg46 = getelementptr inbounds %struct.function, %struct.function* %35, i64 0, i32 1, !dbg !4847
  %36 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg46, align 8, !dbg !4847
  %x_exit_block_ptr47 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %36, i64 0, i32 1, !dbg !4847
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr47, align 8, !dbg !4847
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i64 0, i32 0, !dbg !4847
  %38 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4847
  %tobool48 = icmp eq %struct.VEC_edge_gc* %38, null, !dbg !4847
  br i1 %tobool48, label %cond.end, label %cond.true, !dbg !4847

cond.true:                                        ; preds = %while.cond44
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %38, i64 0, i32 0, !dbg !4847
  br label %cond.end, !dbg !4847

cond.end:                                         ; preds = %while.cond44, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %while.cond44 ], !dbg !4847
  %call53 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4847
  %cmp54 = icmp ult i32 %ix.0, %call53, !dbg !4848
  %39 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4806
  %cfg57 = getelementptr inbounds %struct.function, %struct.function* %39, i64 0, i32 1, !dbg !4806
  %40 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg57, align 8, !dbg !4806
  %x_exit_block_ptr58 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %40, i64 0, i32 1, !dbg !4806
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr58, align 8, !dbg !4806
  br i1 %cmp54, label %while.body55, label %while.end74, !dbg !4846

while.body55:                                     ; preds = %cond.end
  %preds59 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i64 0, i32 0, !dbg !4849
  %42 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds59, align 8, !dbg !4849
  %tobool60 = icmp eq %struct.VEC_edge_gc* %42, null, !dbg !4849
  br i1 %tobool60, label %cond.end68, label %cond.true61, !dbg !4849

cond.true61:                                      ; preds = %while.body55
  %base66 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %42, i64 0, i32 0, !dbg !4849
  br label %cond.end68, !dbg !4849

cond.end68:                                       ; preds = %while.body55, %cond.true61
  %cond69 = phi %struct.VEC_edge_base* [ %base66, %cond.true61 ], [ null, %while.body55 ], !dbg !4849
  %call70 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond69, i32 %ix.0) #7, !dbg !4849
  call void @llvm.dbg.value(metadata %struct.edge_def* %call70, metadata !4800, metadata !DIExpression()), !dbg !4806
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call70, i64 0, i32 7, !dbg !4851
  %43 = load i32, i32* %flags, align 8, !dbg !4851
  %and = and i32 %43, 2, !dbg !4853
  %tobool71 = icmp eq i32 %and, 0, !dbg !4853
  br i1 %tobool71, label %if.then72, label %if.else, !dbg !4854

if.then72:                                        ; preds = %cond.end68
  tail call void @redirect_edge_succ(%struct.edge_def* %call70, %struct.basic_block_def* %call35) #6, !dbg !4855
  br label %if.end73, !dbg !4855

if.else:                                          ; preds = %cond.end68
  %inc = add i32 %ix.0, 1, !dbg !4856
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4802, metadata !DIExpression()), !dbg !4806
  br label %if.end73

if.end73:                                         ; preds = %if.else, %if.then72
  %ix.1 = phi i32 [ %inc, %if.else ], [ %ix.0, %if.then72 ], !dbg !4806
  call void @llvm.dbg.value(metadata i32 %ix.1, metadata !4802, metadata !DIExpression()), !dbg !4806
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4847
  br label %while.cond44, !dbg !4846, !llvm.loop !4857

while.end74:                                      ; preds = %cond.end
  %.lcssa = phi %struct.basic_block_def* [ %41, %cond.end ], !dbg !4806
  %call78 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %call35, %struct.basic_block_def* %.lcssa, i32 1) #6, !dbg !4859
  call void @llvm.dbg.value(metadata %struct.edge_def* %call78, metadata !4800, metadata !DIExpression()), !dbg !4806
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call78, i64 0, i32 8, !dbg !4860
  store i32 10000, i32* %probability, align 4, !dbg !4861
  %44 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4862
  %cfg80 = getelementptr inbounds %struct.function, %struct.function* %44, i64 0, i32 1, !dbg !4862
  %45 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg80, align 8, !dbg !4862
  %x_exit_block_ptr81 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %45, i64 0, i32 1, !dbg !4862
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr81, align 8, !dbg !4862
  %count82 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %46, i64 0, i32 8, !dbg !4863
  %47 = load i64, i64* %count82, align 8, !dbg !4863
  %count83 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call78, i64 0, i32 9, !dbg !4864
  store i64 %47, i64* %count83, align 8, !dbg !4865
  %48 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4866
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #8, !dbg !4866
  %49 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg80, align 8, !dbg !4866
  %x_exit_block_ptr86 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %49, i64 0, i32 1, !dbg !4866
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr86, align 8, !dbg !4866
  %preds87 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %50, i64 0, i32 0, !dbg !4866
  %call88 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds87) #7, !dbg !4866
  %51 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4866
  %52 = extractvalue { i32, %struct.VEC_edge_gc** } %call88, 0, !dbg !4866
  store i32 %52, i32* %51, align 8, !dbg !4866
  %53 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4866
  %54 = extractvalue { i32, %struct.VEC_edge_gc** } %call88, 1, !dbg !4866
  store %struct.VEC_edge_gc** %54, %struct.VEC_edge_gc*** %53, align 8, !dbg !4866
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %48, i64 16, i1 false), !dbg !4866
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #8, !dbg !4866
  %55 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4868
  %56 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4868
  br label %for.cond, !dbg !4866

for.cond:                                         ; preds = %for.inc, %while.end74
  %57 = load i32, i32* %55, align 8, !dbg !4870
  %58 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %56, align 8, !dbg !4870
  call void @llvm.dbg.value(metadata %struct.edge_def** %e2, metadata !4801, metadata !DIExpression(DW_OP_deref)), !dbg !4806
  %call89 = call fastcc zeroext i8 @ei_cond(i32 %57, %struct.VEC_edge_gc** %58, %struct.edge_def** nonnull %e2) #7, !dbg !4870
  %tobool90 = icmp eq i8 %call89, 0, !dbg !4866
  br i1 %tobool90, label %for.end, label %for.body, !dbg !4866

for.body:                                         ; preds = %for.cond
  %59 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !4871
  call void @llvm.dbg.value(metadata %struct.edge_def* %59, metadata !4801, metadata !DIExpression()), !dbg !4806
  %cmp91 = icmp eq %struct.edge_def* %59, %call78, !dbg !4873
  br i1 %cmp91, label %for.inc, label %if.then92, !dbg !4874

if.then92:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %59, metadata !4801, metadata !DIExpression()), !dbg !4806
  %count93 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %59, i64 0, i32 9, !dbg !4875
  %60 = load i64, i64* %count93, align 8, !dbg !4875
  %61 = load i64, i64* %count83, align 8, !dbg !4877
  %sub = sub nsw i64 %61, %60, !dbg !4877
  store i64 %sub, i64* %count83, align 8, !dbg !4877
  call void @llvm.dbg.value(metadata %struct.edge_def* %59, metadata !4801, metadata !DIExpression()), !dbg !4806
  %62 = load i64, i64* %count93, align 8, !dbg !4878
  %63 = load i64, i64* %count43, align 8, !dbg !4879
  %sub97 = sub nsw i64 %63, %62, !dbg !4879
  store i64 %sub97, i64* %count43, align 8, !dbg !4879
  call void @llvm.dbg.value(metadata %struct.edge_def* %59, metadata !4801, metadata !DIExpression()), !dbg !4806
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %59, i64 0, i32 0, !dbg !4880
  %64 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4880
  %frequency98 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %64, i64 0, i32 11, !dbg !4880
  %65 = load i32, i32* %frequency98, align 8, !dbg !4880
  call void @llvm.dbg.value(metadata %struct.edge_def* %59, metadata !4801, metadata !DIExpression()), !dbg !4806
  %probability99 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %59, i64 0, i32 8, !dbg !4880
  %66 = load i32, i32* %probability99, align 4, !dbg !4880
  %mul = mul nsw i32 %65, %66, !dbg !4880
  %add = add nsw i32 %mul, 5000, !dbg !4880
  %div = sdiv i32 %add, 10000, !dbg !4880
  %67 = load i32, i32* %frequency39, align 8, !dbg !4881
  %sub101 = sub nsw i32 %67, %div, !dbg !4881
  store i32 %sub101, i32* %frequency39, align 8, !dbg !4881
  br label %for.inc, !dbg !4882

for.inc:                                          ; preds = %for.body, %if.then92
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4803, metadata !DIExpression(DW_OP_deref)), !dbg !4806
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4870
  br label %for.cond, !dbg !4870, !llvm.loop !4883

for.end:                                          ; preds = %for.cond
  %68 = load i64, i64* %count83, align 8, !dbg !4885
  %cmp104 = icmp slt i64 %68, 0, !dbg !4887
  br i1 %cmp104, label %if.then105, label %if.end107, !dbg !4888

if.then105:                                       ; preds = %for.end
  store i64 0, i64* %count83, align 8, !dbg !4889
  br label %if.end107, !dbg !4890

if.end107:                                        ; preds = %if.then105, %for.end
  %69 = load i64, i64* %count43, align 8, !dbg !4891
  %cmp109 = icmp slt i64 %69, 0, !dbg !4893
  br i1 %cmp109, label %if.then110, label %if.end112, !dbg !4894

if.then110:                                       ; preds = %if.end107
  store i64 0, i64* %count43, align 8, !dbg !4895
  br label %if.end112, !dbg !4896

if.end112:                                        ; preds = %if.then110, %if.end107
  %70 = load i32, i32* %frequency39, align 8, !dbg !4897
  %cmp114 = icmp slt i32 %70, 0, !dbg !4899
  br i1 %cmp114, label %if.then115, label %if.end117, !dbg !4900

if.then115:                                       ; preds = %if.end112
  store i32 0, i32* %frequency39, align 8, !dbg !4901
  br label %if.end117, !dbg !4902

if.end117:                                        ; preds = %if.then115, %if.end112
  call void @update_bb_for_insn(%struct.basic_block_def* %call35) #6, !dbg !4903
  br label %cleanup, !dbg !4904

cleanup:                                          ; preds = %if.end, %if.end117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4904
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4904
  ret void, !dbg !4904
}

declare dso_local void @insn_locators_finalize() local_unnamed_addr #2

declare dso_local void @set_eh_throw_stmt_table(%struct.function*, %struct.htab*) local_unnamed_addr #2

declare dso_local void @rebuild_jump_labels(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_safe_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4905 {
entry:
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4910
  %tobool = icmp eq i8 %call, 0, !dbg !4910
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4911

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4912
  br label %cond.end, !dbg !4911

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call1, %cond.true ], [ null, %entry ], !dbg !4911
  ret %struct.edge_def* %cond, !dbg !4913
}

declare dso_local void @commit_one_edge_insertion(%struct.edge_def*) local_unnamed_addr #2

declare dso_local void @remove_edge(%struct.edge_def*) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) local_unnamed_addr #2

declare dso_local void @find_many_sub_basic_blocks(%struct.simple_bitmap_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @purge_all_dead_edges() local_unnamed_addr #2

declare dso_local void @compact_blocks() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_stack_alignment() unnamed_addr #5 !dbg !4914 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4918
  %calls_alloca = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 20, !dbg !4920
  %bf.load = load i32, i32* %calls_alloca, align 8, !dbg !4920
  %bf.clear = and i32 %bf.load, 524288, !dbg !4920
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !4918
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4921

lor.lhs.false:                                    ; preds = %entry
  %bf.clear4 = and i32 %bf.load, 1048576, !dbg !4922
  %tobool5 = icmp eq i32 %bf.clear4, 0, !dbg !4923
  br i1 %tobool5, label %lor.lhs.false6, label %if.then, !dbg !4924

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %1 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 31), align 1, !dbg !4925
  %tobool7 = icmp eq i8 %1, 0, !dbg !4926
  br i1 %tobool7, label %if.end, label %if.then, !dbg !4927

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 45), align 1, !dbg !4928
  br label %if.end, !dbg !4929

if.end:                                           ; preds = %lor.lhs.false6, %if.then
  %2 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 18), align 8, !dbg !4930
  %tobool8 = icmp eq void ()* %2, null, !dbg !4932
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !4933

if.then9:                                         ; preds = %if.end
  tail call void %2() #6, !dbg !4934
  br label %if.end10, !dbg !4934

if.end10:                                         ; preds = %if.end, %if.then9
  %3 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 24), align 4, !dbg !4935
  %4 = load i32, i32* @ix86_incoming_stack_boundary, align 4, !dbg !4935
  %cmp = icmp ugt i32 %3, %4, !dbg !4935
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4935

cond.true:                                        ; preds = %if.end10
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4935
  br label %cond.end, !dbg !4935

cond.end:                                         ; preds = %if.end10, %cond.true
  %5 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !4936
  %tobool12 = icmp eq i32 %5, 0, !dbg !4936
  br i1 %tobool12, label %if.else, label %land.lhs.true, !dbg !4938

land.lhs.true:                                    ; preds = %cond.end
  %6 = load i32, i32* @ix86_preferred_stack_boundary, align 4, !dbg !4939
  %7 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 23), align 8, !dbg !4940
  %cmp13 = icmp ugt i32 %6, %7, !dbg !4941
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !4942

if.then15:                                        ; preds = %land.lhs.true
  br label %if.end16, !dbg !4943

if.else:                                          ; preds = %cond.end, %land.lhs.true
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then15
  %preferred_stack_boundary.0.in = phi i32* [ @ix86_preferred_stack_boundary, %if.then15 ], [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 23), %if.else ]
  %preferred_stack_boundary.0 = load i32, i32* %preferred_stack_boundary.0.in, align 4, !dbg !4944
  call void @llvm.dbg.value(metadata i32 %preferred_stack_boundary.0, metadata !4917, metadata !DIExpression()), !dbg !4945
  %8 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !4946
  %cmp17 = icmp ugt i32 %preferred_stack_boundary.0, %8, !dbg !4948
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4949

if.then19:                                        ; preds = %if.end16
  store i32 %preferred_stack_boundary.0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !4950
  br label %if.end20, !dbg !4951

if.end20:                                         ; preds = %if.then19, %if.end16
  %9 = phi i32 [ %preferred_stack_boundary.0, %if.then19 ], [ %8, %if.end16 ]
  %10 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 22), align 4, !dbg !4952
  %cmp21 = icmp ugt i32 %preferred_stack_boundary.0, %10, !dbg !4954
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !4955

if.then23:                                        ; preds = %if.end20
  store i32 %preferred_stack_boundary.0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 22), align 4, !dbg !4956
  br label %if.end24, !dbg !4957

if.end24:                                         ; preds = %if.then23, %if.end20
  %11 = phi i32 [ %preferred_stack_boundary.0, %if.then23 ], [ %10, %if.end20 ], !dbg !4958
  %cmp25 = icmp ugt i32 %11, %9, !dbg !4958
  br i1 %cmp25, label %cond.true27, label %cond.end29, !dbg !4958

cond.true27:                                      ; preds = %if.end24
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3682, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4958
  %.pre = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !4959
  br label %cond.end29, !dbg !4958

cond.end29:                                       ; preds = %if.end24, %cond.true27
  %12 = phi i32 [ %9, %if.end24 ], [ %.pre, %cond.true27 ], !dbg !4959
  %13 = load i32, i32* @ix86_incoming_stack_boundary, align 4, !dbg !4960
  %cmp31 = icmp ult i32 %13, %12, !dbg !4961
  %conv33 = zext i1 %cmp31 to i8, !dbg !4960
  store i8 %conv33, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 43), align 1, !dbg !4962
  store i8 %conv33, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 44), align 8, !dbg !4963
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 46), align 2, !dbg !4964
  %14 = load %struct.rtx_def* ()*, %struct.rtx_def* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 19), align 8, !dbg !4965
  %cmp34 = icmp eq %struct.rtx_def* ()* %14, null, !dbg !4965
  br i1 %cmp34, label %cond.true36, label %cond.end38, !dbg !4965

cond.true36:                                      ; preds = %cond.end29
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3692, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4965
  %.pre1 = load %struct.rtx_def* ()*, %struct.rtx_def* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 19), align 8, !dbg !4966
  br label %cond.end38, !dbg !4965

cond.end38:                                       ; preds = %cond.end29, %cond.true36
  %15 = phi %struct.rtx_def* ()* [ %14, %cond.end29 ], [ %.pre1, %cond.true36 ], !dbg !4966
  %call = tail call %struct.rtx_def* %15() #6, !dbg !4967
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4916, metadata !DIExpression()), !dbg !4945
  %16 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 43), align 1, !dbg !4968
  %tobool41 = icmp ne i8 %16, 0, !dbg !4968
  %17 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 45), align 1, !dbg !4968
  %tobool43 = icmp ne i8 %17, 0, !dbg !4968
  %18 = and i1 %tobool43, %tobool41, !dbg !4968
  %cmp46 = icmp eq %struct.rtx_def* %call, null, !dbg !4968
  %cmp48 = xor i1 %18, %cmp46, !dbg !4968
  br i1 %cmp48, label %cond.end52, label %cond.true50, !dbg !4968

cond.true50:                                      ; preds = %cond.end38
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3696, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4968
  br label %cond.end52, !dbg !4968

cond.end52:                                       ; preds = %cond.end38, %cond.true50
  br i1 %cmp46, label %if.end57, label %if.then56, !dbg !4969

if.then56:                                        ; preds = %cond.end52
  store %struct.rtx_def* %call, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 5), align 8, !dbg !4970
  tail call void @fixup_tail_calls() #6, !dbg !4973
  br label %if.end57, !dbg !4974

if.end57:                                         ; preds = %cond.end52, %if.then56
  ret void, !dbg !4975
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_assembler_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_containing_scope(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @cgraph_function_possibly_inlined_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @set_block_levels(%union.tree_node* %block, i32 %level) unnamed_addr #5 !dbg !4976 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !4980, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %level, metadata !4981, metadata !DIExpression()), !dbg !4982
  %bf.shl = shl i32 %level, 1, !dbg !4983
  %add = add nsw i32 %level, 1, !dbg !4983
  br label %while.cond, !dbg !4985

while.cond:                                       ; preds = %while.body, %entry
  %block.addr.0 = phi %union.tree_node* [ %block, %entry ], [ %3, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %block.addr.0, metadata !4980, metadata !DIExpression()), !dbg !4982
  %tobool = icmp eq %union.tree_node* %block.addr.0, null, !dbg !4985
  br i1 %tobool, label %while.end, label %while.body, !dbg !4985

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4986
  %bf.load = load i32, i32* %0, align 8, !dbg !4987
  %bf.clear = and i32 %bf.load, 1, !dbg !4987
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !4987
  store i32 %bf.set, i32* %0, align 8, !dbg !4987
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4988
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4988
  tail call fastcc void @set_block_levels(%union.tree_node* %2, i32 %add) #7, !dbg !4989
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4990
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4990
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4980, metadata !DIExpression()), !dbg !4982
  br label %while.cond, !dbg !4985, !llvm.loop !4991

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4993
}

declare dso_local void @default_rtl_profile() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4994 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4998, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4999, metadata !DIExpression()), !dbg !5002
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !5003
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5000, metadata !DIExpression()), !dbg !5001
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !5004
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5005
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5006
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5007
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5008
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5009
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5010
  ret void, !dbg !5011
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5012 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5016, metadata !DIExpression()), !dbg !5017
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5018
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5018
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !5019
  %conv1 = zext i1 %cmp to i8, !dbg !5020
  ret i8 %conv1, !dbg !5021
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5022 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5026, metadata !DIExpression()), !dbg !5027
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5028
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5028
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !5029
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5029
  ret %union.gimple_statement_d* %1, !dbg !5030
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5031 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5033, metadata !DIExpression()), !dbg !5034
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5035
  %cmp = icmp eq i32 %call, 2, !dbg !5036
  %conv1 = zext i1 %cmp to i8, !dbg !5035
  ret i8 %conv1, !dbg !5037
}

declare dso_local %union.tree_node* @walk_gimple_op(%union.gimple_statement_d*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, %struct.walk_stmt_info*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @discover_nonconstant_array_refs_r(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !5038 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !5042, metadata !DIExpression()), !dbg !5046
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !5043, metadata !DIExpression()), !dbg !5046
  call void @llvm.dbg.value(metadata i8* %data, metadata !5044, metadata !DIExpression()), !dbg !5046
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !5047
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5045, metadata !DIExpression()), !dbg !5046
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5048
  %bf.load = load i64, i64* %1, align 8, !dbg !5048
  %bf.cast = and i64 %bf.load, 65535, !dbg !5048
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5048
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5048
  %cmp = icmp eq i32 %2, 2, !dbg !5048
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5048

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i32 %2, 3, !dbg !5048
  br i1 %cmp7, label %if.then, label %if.else, !dbg !5050

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %walk_subtrees, align 4, !dbg !5051
  br label %if.end145, !dbg !5052

if.else:                                          ; preds = %lor.lhs.false
  %cmp12 = icmp eq i64 %bf.cast, 45, !dbg !5053
  br i1 %cmp12, label %if.then19, label %lor.lhs.false13, !dbg !5055

lor.lhs.false13:                                  ; preds = %if.else
  %cmp18 = icmp eq i64 %bf.cast, 46, !dbg !5056
  br i1 %cmp18, label %if.then19, label %if.end145, !dbg !5057

if.then19:                                        ; preds = %lor.lhs.false13, %if.else
  br label %while.cond, !dbg !5058

while.cond:                                       ; preds = %while.body, %if.then19
  %bf.load27 = phi i64 [ %bf.load, %if.then19 ], [ %bf.load21.pre, %while.body ], !dbg !5060
  %t.0 = phi %union.tree_node* [ %0, %if.then19 ], [ %7, %while.body ], !dbg !5046
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5045, metadata !DIExpression()), !dbg !5046
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5060
  %bf.cast2311 = and i64 %bf.load27, 65535, !dbg !5061
  %cmp24 = icmp eq i64 %bf.cast2311, 45, !dbg !5061
  br i1 %cmp24, label %land.lhs.true, label %lor.lhs.false25, !dbg !5062

lor.lhs.false25:                                  ; preds = %while.cond
  %cmp30 = icmp eq i64 %bf.cast2311, 46, !dbg !5063
  br i1 %cmp30, label %land.lhs.true, label %lor.lhs.false44, !dbg !5064

land.lhs.true:                                    ; preds = %lor.lhs.false25, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5065
  %arrayidx31 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5065
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8, !dbg !5065
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %4) #6, !dbg !5066
  %tobool = icmp eq i8 %call, 0, !dbg !5066
  br i1 %tobool, label %lor.lhs.false44, label %land.lhs.true32, !dbg !5067

land.lhs.true32:                                  ; preds = %land.lhs.true
  %arrayidx35 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !5068
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx35, align 8, !dbg !5068
  %tobool36 = icmp eq %union.tree_node* %5, null, !dbg !5068
  br i1 %tobool36, label %while.body, label %lor.lhs.false37, !dbg !5069

lor.lhs.false37:                                  ; preds = %land.lhs.true32
  %call41 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %5) #6, !dbg !5070
  %tobool43 = icmp eq i8 %call41, 0, !dbg !5070
  br i1 %tobool43, label %lor.lhs.false44, label %while.body, !dbg !5071

lor.lhs.false44:                                  ; preds = %lor.lhs.false37, %land.lhs.true, %lor.lhs.false25
  %bf.load46 = load i64, i64* %3, align 8, !dbg !5072
  %bf.cast4813 = and i64 %bf.load46, 65535, !dbg !5073
  %cmp49 = icmp eq i64 %bf.cast4813, 41, !dbg !5073
  br i1 %cmp49, label %land.lhs.true51, label %lor.lhs.false63, !dbg !5074

land.lhs.true51:                                  ; preds = %lor.lhs.false44
  %operands53 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5075
  %arrayidx54 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands53, i64 2, !dbg !5075
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx54, align 8, !dbg !5075
  %tobool55 = icmp eq %union.tree_node* %6, null, !dbg !5075
  br i1 %tobool55, label %while.body, label %lor.lhs.false56, !dbg !5076

lor.lhs.false56:                                  ; preds = %land.lhs.true51
  %call60 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %6) #6, !dbg !5077
  %tobool62 = icmp eq i8 %call60, 0, !dbg !5077
  br i1 %tobool62, label %lor.lhs.false56.lor.lhs.false63_crit_edge, label %while.body, !dbg !5078

lor.lhs.false56.lor.lhs.false63_crit_edge:        ; preds = %lor.lhs.false56
  %bf.load65.pre = load i64, i64* %3, align 8, !dbg !5079
  %.pre = and i64 %bf.load65.pre, 65535, !dbg !5080
  br label %lor.lhs.false63, !dbg !5078

lor.lhs.false63:                                  ; preds = %lor.lhs.false56.lor.lhs.false63_crit_edge, %lor.lhs.false44
  %bf.cast6714.pre-phi = phi i64 [ %.pre, %lor.lhs.false56.lor.lhs.false63_crit_edge ], [ %bf.cast4813, %lor.lhs.false44 ], !dbg !5080
  %cmp68 = icmp eq i64 %bf.cast6714.pre-phi, 42, !dbg !5080
  br i1 %cmp68, label %while.body, label %lor.lhs.false70, !dbg !5081

lor.lhs.false70:                                  ; preds = %lor.lhs.false63
  %cmp75 = icmp eq i64 %bf.cast6714.pre-phi, 43, !dbg !5082
  br i1 %cmp75, label %while.body, label %lor.lhs.false77, !dbg !5083

lor.lhs.false77:                                  ; preds = %lor.lhs.false70
  %cmp82 = icmp eq i64 %bf.cast6714.pre-phi, 44, !dbg !5084
  br i1 %cmp82, label %while.body, label %lor.lhs.false84, !dbg !5085

lor.lhs.false84:                                  ; preds = %lor.lhs.false77
  %cmp89 = icmp eq i64 %bf.cast6714.pre-phi, 118, !dbg !5086
  br i1 %cmp89, label %while.body, label %lor.rhs, !dbg !5087

lor.rhs:                                          ; preds = %lor.lhs.false84
  %cmp95 = icmp eq i64 %bf.cast6714.pre-phi, 116, !dbg !5088
  %cmp102 = icmp eq i64 %bf.cast6714.pre-phi, 113, !dbg !5088
  %or.cond = or i1 %cmp95, %cmp102, !dbg !5088
  br i1 %or.cond, label %while.body, label %while.end, !dbg !5088

while.body:                                       ; preds = %lor.lhs.false37, %land.lhs.true32, %lor.lhs.false56, %land.lhs.true51, %lor.rhs, %lor.lhs.false63, %lor.lhs.false70, %lor.lhs.false77, %lor.lhs.false84
  %operands106 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5089
  %7 = load %union.tree_node*, %union.tree_node** %operands106, align 8, !dbg !5089
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5045, metadata !DIExpression()), !dbg !5046
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5090
  %bf.load21.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !5060
  br label %while.cond, !dbg !5058, !llvm.loop !5091

while.end:                                        ; preds = %lor.rhs
  %bf.cast6714.pre-phi.lcssa = phi i64 [ %bf.cast6714.pre-phi, %lor.rhs ], !dbg !5080
  %t.0.lcssa = phi %union.tree_node* [ %t.0, %lor.rhs ], !dbg !5046
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !5045, metadata !DIExpression()), !dbg !5046
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !5045, metadata !DIExpression()), !dbg !5046
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !5045, metadata !DIExpression()), !dbg !5046
  %cmp112 = icmp eq i64 %bf.cast6714.pre-phi.lcssa, 45, !dbg !5092
  br i1 %cmp112, label %if.then121, label %lor.lhs.false114, !dbg !5094

lor.lhs.false114:                                 ; preds = %while.end
  %cmp119 = icmp eq i64 %bf.cast6714.pre-phi.lcssa, 46, !dbg !5095
  br i1 %cmp119, label %if.then121, label %if.end143, !dbg !5096

if.then121:                                       ; preds = %lor.lhs.false114, %while.end
  %call122 = tail call %union.tree_node* @get_base_address(%union.tree_node* %t.0.lcssa) #6, !dbg !5097
  call void @llvm.dbg.value(metadata %union.tree_node* %call122, metadata !5045, metadata !DIExpression()), !dbg !5046
  %tobool123 = icmp eq %union.tree_node* %call122, null, !dbg !5099
  br i1 %tobool123, label %if.end143, label %land.lhs.true124, !dbg !5101

land.lhs.true124:                                 ; preds = %if.then121
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5102
  %bf.load126 = load i64, i64* %8, align 8, !dbg !5102
  %bf.cast128 = and i64 %bf.load126, 65535, !dbg !5102
  %arrayidx130 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast128, !dbg !5102
  %9 = load i32, i32* %arrayidx130, align 4, !dbg !5102
  %cmp131 = icmp eq i32 %9, 3, !dbg !5102
  br i1 %cmp131, label %land.lhs.true133, label %if.end143, !dbg !5103

land.lhs.true133:                                 ; preds = %land.lhs.true124
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %call122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5104
  %10 = bitcast i40* %mode to i64*, !dbg !5104
  %bf.load134 = load i64, i64* %10, align 8, !dbg !5104
  %bf.cast13622 = and i64 %bf.load134, 255, !dbg !5105
  %cmp137 = icmp eq i64 %bf.cast13622, 1, !dbg !5105
  br i1 %cmp137, label %if.end143, label %if.then139, !dbg !5106

if.then139:                                       ; preds = %land.lhs.true133
  %bf.set = or i64 %bf.load126, 262144, !dbg !5107
  store i64 %bf.set, i64* %8, align 8, !dbg !5107
  br label %if.end143, !dbg !5108

if.end143:                                        ; preds = %land.lhs.true133, %if.then121, %land.lhs.true124, %if.then139, %lor.lhs.false114
  store i32 0, i32* %walk_subtrees, align 4, !dbg !5109
  br label %if.end145, !dbg !5110

if.end145:                                        ; preds = %lor.lhs.false13, %if.end143, %if.then
  ret %union.tree_node* null, !dbg !5111
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5112 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5117, metadata !DIExpression()), !dbg !5118
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5119
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5119
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !5120
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !5120
  %2 = load i64, i64* %1, align 8, !dbg !5120
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5121
  store i64 %2, i64* %3, align 8, !dbg !5121
  ret void, !dbg !5122
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5123 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5130, metadata !DIExpression()), !dbg !5131
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !5132
  %0 = load i32, i32* %flags, align 8, !dbg !5132
  %and = and i32 %0, 512, !dbg !5133
  %tobool = icmp eq i32 %and, 0, !dbg !5133
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !5134

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !5135
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !5135
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !5136
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5137

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !5138
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5138
  br label %cond.end, !dbg !5137

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !5137
  ret %struct.gimple_seq_d* %cond, !dbg !5139
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !5140 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !5147, metadata !DIExpression()), !dbg !5148
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !5149
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5149

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !5150
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !5150
  br label %cond.end, !dbg !5149

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !5149
  ret %struct.gimple_seq_node_d* %cond, !dbg !5151
}

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @ggc_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_used_vars_for_block(%union.tree_node* %block, i8 zeroext %toplevel) unnamed_addr #5 !dbg !5152 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !5156, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.value(metadata i8 %toplevel, metadata !5157, metadata !DIExpression()), !dbg !5164
  %0 = load i64, i64* @stack_vars_num, align 8, !dbg !5165
  call void @llvm.dbg.value(metadata i64 %cond, metadata !5160, metadata !DIExpression()), !dbg !5164
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5166
  br label %for.cond, !dbg !5168

for.cond:                                         ; preds = %for.inc, %entry
  %t.0.in = phi %union.tree_node** [ %1, %entry ], [ %chain, %for.inc ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !5169
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5163, metadata !DIExpression()), !dbg !5164
  %tobool2 = icmp eq %union.tree_node* %t.0, null, !dbg !5170
  br i1 %tobool2, label %for.end, label %for.body, !dbg !5170

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5171
  %bf.load = load i64, i64* %2, align 8, !dbg !5171
  %bf.cast1 = and i64 %bf.load, 16777216, !dbg !5171
  %tobool3 = icmp eq i64 %bf.cast1, 0, !dbg !5171
  br i1 %tobool3, label %for.inc, label %if.then, !dbg !5174

if.then:                                          ; preds = %for.body
  %call = tail call fastcc i64 @expand_one_var(%union.tree_node* nonnull %t.0, i8 zeroext %toplevel, i8 zeroext 1) #7, !dbg !5175
  br label %for.inc, !dbg !5175

for.inc:                                          ; preds = %for.body, %if.then
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5176
  br label %for.cond, !dbg !5177, !llvm.loop !5178

for.end:                                          ; preds = %for.cond
  %tobool = icmp eq i8 %toplevel, 0, !dbg !5165
  %3 = load i64, i64* @stack_vars_num, align 8, !dbg !5180
  call void @llvm.dbg.value(metadata i64 %3, metadata !5161, metadata !DIExpression()), !dbg !5164
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5181
  br label %for.cond5, !dbg !5183

for.cond5:                                        ; preds = %for.body7, %for.end
  %t.1.in = phi %union.tree_node** [ %4, %for.end ], [ %chain10, %for.body7 ]
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !5184
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !5163, metadata !DIExpression()), !dbg !5164
  %tobool6 = icmp eq %union.tree_node* %t.1, null, !dbg !5185
  br i1 %tobool6, label %for.end11, label %for.body7, !dbg !5185

for.body7:                                        ; preds = %for.cond5
  tail call fastcc void @expand_used_vars_for_block(%union.tree_node* nonnull %t.1, i8 zeroext 0) #7, !dbg !5186
  %chain10 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5188
  br label %for.cond5, !dbg !5189, !llvm.loop !5190

for.end11:                                        ; preds = %for.cond5
  %cond = select i1 %tobool, i64 %0, i64 0, !dbg !5165
  %cmp = icmp ult i64 %cond, %3, !dbg !5192
  br i1 %cmp, label %if.then13, label %if.end31, !dbg !5194

if.then13:                                        ; preds = %for.end11
  %5 = load i64, i64* @stack_vars_num, align 8, !dbg !5195
  call void @llvm.dbg.value(metadata i64 %5, metadata !5162, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.value(metadata i64 %cond, metadata !5158, metadata !DIExpression()), !dbg !5164
  br label %for.cond14, !dbg !5197

for.cond14:                                       ; preds = %for.inc29, %if.then13
  %i.0 = phi i64 [ %cond, %if.then13 ], [ %inc, %for.inc29 ], !dbg !5199
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5158, metadata !DIExpression()), !dbg !5164
  %cmp15 = icmp ult i64 %i.0, %5, !dbg !5200
  br i1 %cmp15, label %for.body17, label %if.end31.loopexit, !dbg !5202

for.body17:                                       ; preds = %for.cond14
  %cmp18 = icmp ult i64 %i.0, %3, !dbg !5203
  %i.0. = select i1 %cmp18, i64 %i.0, i64 %3, !dbg !5205
  call void @llvm.dbg.value(metadata i64 %i.0., metadata !5159, metadata !DIExpression()), !dbg !5164
  br label %for.cond24, !dbg !5206

for.cond24:                                       ; preds = %for.body27, %for.body17
  %j.0 = phi i64 [ %i.0., %for.body17 ], [ %dec, %for.body27 ], !dbg !5207
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !5159, metadata !DIExpression()), !dbg !5164
  %dec = add i64 %j.0, -1, !dbg !5208
  call void @llvm.dbg.value(metadata i64 %dec, metadata !5159, metadata !DIExpression()), !dbg !5164
  %cmp25 = icmp ugt i64 %j.0, %cond, !dbg !5210
  br i1 %cmp25, label %for.body27, label %for.inc29, !dbg !5211

for.body27:                                       ; preds = %for.cond24
  tail call fastcc void @add_stack_var_conflict(i64 %i.0, i64 %dec) #7, !dbg !5212
  br label %for.cond24, !dbg !5213, !llvm.loop !5214

for.inc29:                                        ; preds = %for.cond24
  %inc = add i64 %i.0, 1, !dbg !5216
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5158, metadata !DIExpression()), !dbg !5164
  br label %for.cond14, !dbg !5217, !llvm.loop !5218

if.end31.loopexit:                                ; preds = %for.cond14
  br label %if.end31, !dbg !5220

if.end31:                                         ; preds = %if.end31.loopexit, %for.end11
  ret void, !dbg !5220
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_alias_set_conflicts() unnamed_addr #5 !dbg !5221 {
entry:
  %0 = load i64, i64* @stack_vars_num, align 8, !dbg !5237
  call void @llvm.dbg.value(metadata i64 %0, metadata !5225, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata i64 0, metadata !5223, metadata !DIExpression()), !dbg !5238
  br label %for.cond, !dbg !5239

for.cond:                                         ; preds = %for.inc68, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc69, %for.inc68 ], !dbg !5240
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5223, metadata !DIExpression()), !dbg !5238
  %exitcond10 = icmp eq i64 %i.0, %0, !dbg !5241
  br i1 %exitcond10, label %for.end70, label %for.body, !dbg !5242

for.body:                                         ; preds = %for.cond
  %1 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5243
  %decl = getelementptr inbounds %struct.stack_var, %struct.stack_var* %1, i64 %i.0, i32 0, !dbg !5243
  %2 = bitcast %union.tree_node** %decl to %struct.tree_common**, !dbg !5243
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !5243
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !5243
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5243
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5226, metadata !DIExpression()), !dbg !5244
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5245
  %bf.load = load i64, i64* %5, align 8, !dbg !5245
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5245
  %cmp1 = icmp eq i64 %bf.cast1, 15, !dbg !5245
  br i1 %cmp1, label %lor.end18, label %lor.rhs, !dbg !5245

lor.rhs:                                          ; preds = %for.body
  %cmp6 = icmp eq i64 %bf.cast1, 16, !dbg !5245
  br i1 %cmp6, label %lor.end18, label %lor.lhs.false, !dbg !5245

lor.lhs.false:                                    ; preds = %lor.rhs
  %cmp11 = icmp eq i64 %bf.cast1, 17, !dbg !5245
  br i1 %cmp11, label %lor.end18, label %lor.rhs12, !dbg !5245

lor.rhs12:                                        ; preds = %lor.lhs.false
  %cmp17 = icmp eq i64 %bf.cast1, 18, !dbg !5245
  br label %lor.end18, !dbg !5245

lor.end18:                                        ; preds = %lor.rhs, %lor.lhs.false, %lor.rhs12, %for.body
  %6 = phi i1 [ true, %for.body ], [ true, %lor.lhs.false ], [ true, %lor.rhs ], [ %cmp17, %lor.rhs12 ]
  call void @llvm.dbg.value(metadata i1 %6, metadata !5230, metadata !DIExpression()), !dbg !5244
  %call = tail call fastcc zeroext i8 @aggregate_contains_union_type(%union.tree_node* %4) #7, !dbg !5246
  call void @llvm.dbg.value(metadata i8 %call, metadata !5231, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i64 0, metadata !5224, metadata !DIExpression()), !dbg !5238
  %tobool67 = icmp eq i8 %call, 0, !dbg !5247
  br i1 %tobool67, label %lor.end18.lor.end18.split_crit_edge, label %lor.end18.split.us, !dbg !5249

lor.end18.lor.end18.split_crit_edge:              ; preds = %lor.end18
  br label %for.cond19, !dbg !5249

lor.end18.split.us:                               ; preds = %lor.end18
  br label %for.cond19.us, !dbg !5249

for.cond19.us:                                    ; preds = %if.then.us, %lor.end18.split.us
  %j.0.us = phi i64 [ 0, %lor.end18.split.us ], [ %inc.us, %if.then.us ], !dbg !5250
  call void @llvm.dbg.value(metadata i64 %j.0.us, metadata !5224, metadata !DIExpression()), !dbg !5238
  %exitcond = icmp eq i64 %j.0.us, %i.0, !dbg !5251
  br i1 %exitcond, label %for.inc68.us-lcssa.us, label %for.body22.us, !dbg !5252

for.body22.us:                                    ; preds = %for.cond19.us
  %7 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5253
  %decl24.us = getelementptr inbounds %struct.stack_var, %struct.stack_var* %7, i64 %j.0.us, i32 0, !dbg !5253
  %8 = bitcast %union.tree_node** %decl24.us to %struct.tree_common**, !dbg !5253
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !5253
  %type26.us = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !5253
  %10 = load %union.tree_node*, %union.tree_node** %type26.us, align 8, !dbg !5253
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !5232, metadata !DIExpression()), !dbg !5254
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5255
  %bf.load28.us = load i64, i64* %11, align 8, !dbg !5255
  %bf.cast305.us = and i64 %bf.load28.us, 65535, !dbg !5255
  %cmp31.us = icmp eq i64 %bf.cast305.us, 15, !dbg !5255
  br i1 %cmp31.us, label %lor.end56.us, label %lor.rhs33.us, !dbg !5255

lor.rhs33.us:                                     ; preds = %for.body22.us
  %cmp38.us = icmp eq i64 %bf.cast305.us, 16, !dbg !5255
  br i1 %cmp38.us, label %lor.end56.us, label %lor.lhs.false40.us, !dbg !5255

lor.lhs.false40.us:                               ; preds = %lor.rhs33.us
  %cmp45.us = icmp eq i64 %bf.cast305.us, 17, !dbg !5255
  br i1 %cmp45.us, label %lor.end56.us, label %lor.rhs47.us, !dbg !5255

lor.rhs47.us:                                     ; preds = %lor.lhs.false40.us
  %cmp52.us = icmp eq i64 %bf.cast305.us, 18, !dbg !5255
  br label %lor.end56.us, !dbg !5255

lor.end56.us:                                     ; preds = %lor.rhs47.us, %lor.lhs.false40.us, %lor.rhs33.us, %for.body22.us
  %12 = phi i1 [ true, %for.body22.us ], [ true, %lor.lhs.false40.us ], [ true, %lor.rhs33.us ], [ %cmp52.us, %lor.rhs47.us ]
  call void @llvm.dbg.value(metadata i1 %12, metadata !5236, metadata !DIExpression()), !dbg !5254
  %cmp61.us = xor i1 %6, %12, !dbg !5256
  br i1 %cmp61.us, label %if.then.us, label %lor.lhs.false63.us, !dbg !5257

lor.lhs.false63.us:                               ; preds = %lor.end56.us
  %call64.us = tail call i32 @objects_must_conflict_p(%union.tree_node* %4, %union.tree_node* %10) #6, !dbg !5258
  br label %if.then.us, !dbg !5259

if.then.us:                                       ; preds = %lor.lhs.false63.us, %lor.end56.us
  tail call fastcc void @add_stack_var_conflict(i64 %i.0, i64 %j.0.us) #7, !dbg !5260
  %inc.us = add i64 %j.0.us, 1, !dbg !5261
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !5224, metadata !DIExpression()), !dbg !5238
  br label %for.cond19.us, !dbg !5262, !llvm.loop !5263

for.inc68.us-lcssa.us:                            ; preds = %for.cond19.us
  br label %for.inc68, !dbg !5265

for.cond19:                                       ; preds = %for.inc, %lor.end18.lor.end18.split_crit_edge
  %j.0 = phi i64 [ 0, %lor.end18.lor.end18.split_crit_edge ], [ %inc, %for.inc ], !dbg !5250
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !5224, metadata !DIExpression()), !dbg !5238
  %exitcond9 = icmp eq i64 %j.0, %i.0, !dbg !5251
  br i1 %exitcond9, label %for.inc68.us-lcssa, label %for.body22, !dbg !5252

for.body22:                                       ; preds = %for.cond19
  %13 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5253
  %decl24 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %13, i64 %j.0, i32 0, !dbg !5253
  %14 = bitcast %union.tree_node** %decl24 to %struct.tree_common**, !dbg !5253
  %15 = load %struct.tree_common*, %struct.tree_common** %14, align 8, !dbg !5253
  %type26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %15, i64 0, i32 2, !dbg !5253
  %16 = load %union.tree_node*, %union.tree_node** %type26, align 8, !dbg !5253
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !5232, metadata !DIExpression()), !dbg !5254
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5255
  %bf.load28 = load i64, i64* %17, align 8, !dbg !5255
  %bf.cast305 = and i64 %bf.load28, 65535, !dbg !5255
  %cmp31 = icmp eq i64 %bf.cast305, 15, !dbg !5255
  br i1 %cmp31, label %lor.end56, label %lor.rhs33, !dbg !5255

lor.rhs33:                                        ; preds = %for.body22
  %cmp38 = icmp eq i64 %bf.cast305, 16, !dbg !5255
  br i1 %cmp38, label %lor.end56, label %lor.lhs.false40, !dbg !5255

lor.lhs.false40:                                  ; preds = %lor.rhs33
  %cmp45 = icmp eq i64 %bf.cast305, 17, !dbg !5255
  br i1 %cmp45, label %lor.end56, label %lor.rhs47, !dbg !5255

lor.rhs47:                                        ; preds = %lor.lhs.false40
  %cmp52 = icmp eq i64 %bf.cast305, 18, !dbg !5255
  br label %lor.end56, !dbg !5255

lor.end56:                                        ; preds = %lor.rhs33, %lor.lhs.false40, %lor.rhs47, %for.body22
  %18 = phi i1 [ true, %for.body22 ], [ true, %lor.lhs.false40 ], [ true, %lor.rhs33 ], [ %cmp52, %lor.rhs47 ]
  call void @llvm.dbg.value(metadata i1 %18, metadata !5236, metadata !DIExpression()), !dbg !5254
  %cmp61 = xor i1 %6, %18, !dbg !5256
  br i1 %cmp61, label %if.then, label %lor.lhs.false63, !dbg !5257

lor.lhs.false63:                                  ; preds = %lor.end56
  %call64 = tail call i32 @objects_must_conflict_p(%union.tree_node* %4, %union.tree_node* %16) #6, !dbg !5258
  %tobool = icmp eq i32 %call64, 0, !dbg !5258
  br i1 %tobool, label %if.then, label %for.inc, !dbg !5259

if.then:                                          ; preds = %lor.lhs.false63, %lor.end56
  tail call fastcc void @add_stack_var_conflict(i64 %i.0, i64 %j.0) #7, !dbg !5260
  br label %for.inc, !dbg !5260

for.inc:                                          ; preds = %if.then, %lor.lhs.false63
  %inc = add i64 %j.0, 1, !dbg !5261
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5224, metadata !DIExpression()), !dbg !5238
  br label %for.cond19, !dbg !5262, !llvm.loop !5263

for.inc68.us-lcssa:                               ; preds = %for.cond19
  br label %for.inc68, !dbg !5265

for.inc68:                                        ; preds = %for.inc68.us-lcssa.us, %for.inc68.us-lcssa
  %inc69 = add i64 %i.0, 1, !dbg !5265
  call void @llvm.dbg.value(metadata i64 %inc69, metadata !5223, metadata !DIExpression()), !dbg !5238
  br label %for.cond, !dbg !5266, !llvm.loop !5267

for.end70:                                        ; preds = %for.cond
  ret void, !dbg !5269
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_stack_protection_conflicts() unnamed_addr #5 !dbg !5270 {
entry:
  %0 = load i64, i64* @stack_vars_num, align 8, !dbg !5280
  call void @llvm.dbg.value(metadata i64 %0, metadata !5274, metadata !DIExpression()), !dbg !5281
  %call = tail call i8* @xmalloc(i64 %0) #6, !dbg !5282
  call void @llvm.dbg.value(metadata i8* %call, metadata !5275, metadata !DIExpression()), !dbg !5281
  call void @llvm.dbg.value(metadata i64 0, metadata !5272, metadata !DIExpression()), !dbg !5281
  br label %for.cond, !dbg !5283

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !5285
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5272, metadata !DIExpression()), !dbg !5281
  %exitcond2 = icmp eq i64 %i.0, %0, !dbg !5286
  br i1 %exitcond2, label %for.cond3.preheader, label %for.body, !dbg !5288

for.cond3.preheader:                              ; preds = %for.cond
  br label %for.cond3, !dbg !5289

for.body:                                         ; preds = %for.cond
  %1 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5290
  %decl = getelementptr inbounds %struct.stack_var, %struct.stack_var* %1, i64 %i.0, i32 0, !dbg !5291
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5291
  %call1 = tail call fastcc i32 @stack_protect_decl_phase(%union.tree_node* %2) #7, !dbg !5292
  %conv = trunc i32 %call1 to i8, !dbg !5292
  %arrayidx2 = getelementptr inbounds i8, i8* %call, i64 %i.0, !dbg !5293
  store i8 %conv, i8* %arrayidx2, align 1, !dbg !5294
  %inc = add i64 %i.0, 1, !dbg !5295
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5272, metadata !DIExpression()), !dbg !5281
  br label %for.cond, !dbg !5296, !llvm.loop !5297

for.cond3:                                        ; preds = %for.cond3.preheader, %for.inc20
  %i.1 = phi i64 [ %inc21, %for.inc20 ], [ 0, %for.cond3.preheader ], !dbg !5299
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !5272, metadata !DIExpression()), !dbg !5281
  %exitcond1 = icmp eq i64 %i.1, %0, !dbg !5300
  br i1 %exitcond1, label %for.end22, label %for.body6, !dbg !5289

for.body6:                                        ; preds = %for.cond3
  %arrayidx7 = getelementptr inbounds i8, i8* %call, i64 %i.1, !dbg !5301
  %3 = load i8, i8* %arrayidx7, align 1, !dbg !5301
  call void @llvm.dbg.value(metadata i8 %3, metadata !5276, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata i64 0, metadata !5273, metadata !DIExpression()), !dbg !5281
  br label %for.cond8, !dbg !5303

for.cond8:                                        ; preds = %for.inc17, %for.body6
  %j.0 = phi i64 [ 0, %for.body6 ], [ %inc18, %for.inc17 ], !dbg !5305
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !5273, metadata !DIExpression()), !dbg !5281
  %exitcond = icmp eq i64 %j.0, %i.1, !dbg !5306
  br i1 %exitcond, label %for.inc20, label %for.body11, !dbg !5308

for.body11:                                       ; preds = %for.cond8
  %arrayidx13 = getelementptr inbounds i8, i8* %call, i64 %j.0, !dbg !5309
  %4 = load i8, i8* %arrayidx13, align 1, !dbg !5309
  %cmp15 = icmp eq i8 %3, %4, !dbg !5311
  br i1 %cmp15, label %for.inc17, label %if.then, !dbg !5312

if.then:                                          ; preds = %for.body11
  tail call fastcc void @add_stack_var_conflict(i64 %i.1, i64 %j.0) #7, !dbg !5313
  br label %for.inc17, !dbg !5313

for.inc17:                                        ; preds = %for.body11, %if.then
  %inc18 = add i64 %j.0, 1, !dbg !5314
  call void @llvm.dbg.value(metadata i64 %inc18, metadata !5273, metadata !DIExpression()), !dbg !5281
  br label %for.cond8, !dbg !5315, !llvm.loop !5316

for.inc20:                                        ; preds = %for.cond8
  %inc21 = add i64 %i.1, 1, !dbg !5318
  call void @llvm.dbg.value(metadata i64 %inc21, metadata !5272, metadata !DIExpression()), !dbg !5281
  br label %for.cond3, !dbg !5319, !llvm.loop !5320

for.end22:                                        ; preds = %for.cond3
  tail call void @free(i8* %call) #6, !dbg !5322
  ret void, !dbg !5323
}

; Function Attrs: nounwind uwtable
define internal fastcc void @partition_stack_vars() unnamed_addr #5 !dbg !5324 {
entry:
  %0 = load i64, i64* @stack_vars_num, align 8, !dbg !5344
  call void @llvm.dbg.value(metadata i64 %0, metadata !5328, metadata !DIExpression()), !dbg !5345
  %mul = shl i64 %0, 3, !dbg !5346
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !5346
  store i8* %call, i8** bitcast (i64** @stack_vars_sorted to i8**), align 8, !dbg !5347
  call void @llvm.dbg.value(metadata i64 0, metadata !5326, metadata !DIExpression()), !dbg !5345
  br label %for.cond, !dbg !5348

for.cond:                                         ; preds = %for.body, %entry
  %si.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !5350
  call void @llvm.dbg.value(metadata i64 %si.0, metadata !5326, metadata !DIExpression()), !dbg !5345
  %exitcond4 = icmp eq i64 %si.0, %0, !dbg !5351
  br i1 %exitcond4, label %for.end, label %for.body, !dbg !5353

for.body:                                         ; preds = %for.cond
  %1 = load i64*, i64** @stack_vars_sorted, align 8, !dbg !5354
  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %si.0, !dbg !5354
  store i64 %si.0, i64* %arrayidx, align 8, !dbg !5355
  %inc = add i64 %si.0, 1, !dbg !5356
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5326, metadata !DIExpression()), !dbg !5345
  br label %for.cond, !dbg !5357, !llvm.loop !5358

for.end:                                          ; preds = %for.cond
  %cmp1 = icmp eq i64 %0, 1, !dbg !5360
  br i1 %cmp1, label %cleanup.cont61, label %if.end, !dbg !5362

if.end:                                           ; preds = %for.end
  %2 = load i8*, i8** bitcast (i64** @stack_vars_sorted to i8**), align 8, !dbg !5363
  tail call void @spec_qsort(i8* %2, i64 %0, i64 8, i32 (i8*, i8*)* nonnull @stack_var_size_cmp) #6, !dbg !5364
  call void @llvm.dbg.value(metadata i64 0, metadata !5326, metadata !DIExpression()), !dbg !5345
  br label %for.cond2, !dbg !5365

for.cond2:                                        ; preds = %for.inc51, %if.end
  %si.1 = phi i64 [ 0, %if.end ], [ %inc52, %for.inc51 ], !dbg !5366
  call void @llvm.dbg.value(metadata i64 %si.1, metadata !5326, metadata !DIExpression()), !dbg !5345
  %exitcond = icmp eq i64 %si.1, %0, !dbg !5367
  br i1 %exitcond, label %for.end53, label %for.body4, !dbg !5368

for.body4:                                        ; preds = %for.cond2
  %3 = load i64*, i64** @stack_vars_sorted, align 8, !dbg !5369
  %arrayidx5 = getelementptr inbounds i64, i64* %3, i64 %si.1, !dbg !5369
  %4 = load i64, i64* %arrayidx5, align 8, !dbg !5369
  call void @llvm.dbg.value(metadata i64 %4, metadata !5329, metadata !DIExpression()), !dbg !5370
  %5 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5371
  %size = getelementptr inbounds %struct.stack_var, %struct.stack_var* %5, i64 %4, i32 2, !dbg !5372
  %6 = load i64, i64* %size, align 8, !dbg !5372
  call void @llvm.dbg.value(metadata i64 %6, metadata !5333, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i64 0, metadata !5334, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i64 %si.1, metadata !5327, metadata !DIExpression()), !dbg !5345
  br label %for.cond7, !dbg !5373

for.cond7:                                        ; preds = %cleanup45, %for.body4
  %isize.0 = phi i64 [ %6, %for.body4 ], [ %isize.3, %cleanup45 ], !dbg !5374
  %sj.0 = phi i64 [ %si.1, %for.body4 ], [ %dec, %cleanup45 ], !dbg !5375
  call void @llvm.dbg.value(metadata i64 %sj.0, metadata !5327, metadata !DIExpression()), !dbg !5345
  call void @llvm.dbg.value(metadata i64 0, metadata !5334, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i64 %isize.0, metadata !5333, metadata !DIExpression()), !dbg !5370
  %dec = add i64 %sj.0, -1, !dbg !5376
  call void @llvm.dbg.value(metadata i64 %dec, metadata !5327, metadata !DIExpression()), !dbg !5345
  %cmp8 = icmp eq i64 %sj.0, 0, !dbg !5377
  br i1 %cmp8, label %for.inc51, label %for.body9, !dbg !5378

for.body9:                                        ; preds = %for.cond7
  %7 = load i64*, i64** @stack_vars_sorted, align 8, !dbg !5379
  %arrayidx10 = getelementptr inbounds i64, i64* %7, i64 %dec, !dbg !5379
  %8 = load i64, i64* %arrayidx10, align 8, !dbg !5379
  call void @llvm.dbg.value(metadata i64 %8, metadata !5335, metadata !DIExpression()), !dbg !5380
  %9 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5381
  %size12 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %9, i64 %8, i32 2, !dbg !5382
  %10 = load i64, i64* %size12, align 8, !dbg !5382
  call void @llvm.dbg.value(metadata i64 %10, metadata !5339, metadata !DIExpression()), !dbg !5380
  %representative = getelementptr inbounds %struct.stack_var, %struct.stack_var* %9, i64 %8, i32 4, !dbg !5383
  %11 = load i64, i64* %representative, align 8, !dbg !5383
  %cmp15 = icmp ne i64 %11, %8, !dbg !5385
  %cmp18 = icmp slt i64 %isize.0, %10, !dbg !5386
  %or.cond = or i1 %cmp15, %cmp18, !dbg !5388
  br i1 %or.cond, label %cleanup45, label %if.end20, !dbg !5388, !llvm.loop !5389

if.end20:                                         ; preds = %for.body9
  %call21 = tail call fastcc zeroext i8 @stack_var_conflict_p(i64 %4, i64 %8) #7, !dbg !5391
  %tobool = icmp eq i8 %call21, 0, !dbg !5391
  br i1 %tobool, label %if.end23, label %cleanup45, !dbg !5393, !llvm.loop !5389

if.end23:                                         ; preds = %if.end20
  call void @llvm.dbg.value(metadata i64 0, metadata !5334, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i64 %isize.0, metadata !5333, metadata !DIExpression()), !dbg !5370
  tail call fastcc void @union_stack_vars(i64 %4, i64 %8, i64 0) #7, !dbg !5394
  %sub40 = sub nsw i64 %isize.0, %10, !dbg !5395
  call void @llvm.dbg.value(metadata i64 %sub40, metadata !5333, metadata !DIExpression()), !dbg !5370
  %cmp41 = icmp eq i64 %sub40, 0, !dbg !5396
  %. = select i1 %cmp41, i32 8, i32 0, !dbg !5398
  br label %cleanup45, !dbg !5398

cleanup45:                                        ; preds = %if.end20, %if.end23, %for.body9
  %isize.3 = phi i64 [ %isize.0, %for.body9 ], [ %isize.0, %if.end20 ], [ %sub40, %if.end23 ], !dbg !5370
  %cleanup.dest.slot.1 = phi i32 [ 9, %for.body9 ], [ 9, %if.end20 ], [ %., %if.end23 ]
  call void @llvm.dbg.value(metadata i64 0, metadata !5334, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i64 %isize.3, metadata !5333, metadata !DIExpression()), !dbg !5370
  %switch = icmp eq i32 %cleanup.dest.slot.1, 8
  br i1 %switch, label %for.inc51, label %for.cond7

for.inc51:                                        ; preds = %for.cond7, %cleanup45
  %inc52 = add i64 %si.1, 1, !dbg !5399
  call void @llvm.dbg.value(metadata i64 %inc52, metadata !5326, metadata !DIExpression()), !dbg !5345
  br label %for.cond2, !dbg !5400, !llvm.loop !5401

for.end53:                                        ; preds = %for.cond2
  %12 = load i32, i32* @optimize, align 4, !dbg !5403
  %tobool54 = icmp eq i32 %12, 0, !dbg !5403
  br i1 %tobool54, label %cleanup.cont61, label %if.then55, !dbg !5405

if.then55:                                        ; preds = %for.end53
  tail call fastcc void @update_alias_info_with_stack_vars() #7, !dbg !5406
  br label %cleanup.cont61, !dbg !5406

cleanup.cont61:                                   ; preds = %for.end53, %for.end, %if.then55
  ret void, !dbg !5407
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_stack_var_partition() unnamed_addr #5 !dbg !5408 {
entry:
  %0 = load i64, i64* @stack_vars_num, align 8, !dbg !5414
  call void @llvm.dbg.value(metadata i64 %0, metadata !5413, metadata !DIExpression()), !dbg !5415
  call void @llvm.dbg.value(metadata i64 0, metadata !5410, metadata !DIExpression()), !dbg !5415
  br label %for.cond, !dbg !5416

for.cond:                                         ; preds = %for.inc13, %entry
  %si.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc13 ], !dbg !5418
  call void @llvm.dbg.value(metadata i64 %si.0, metadata !5410, metadata !DIExpression()), !dbg !5415
  %exitcond = icmp eq i64 %si.0, %0, !dbg !5419
  br i1 %exitcond, label %for.end14, label %for.body, !dbg !5421

for.body:                                         ; preds = %for.cond
  %1 = load i64*, i64** @stack_vars_sorted, align 8, !dbg !5422
  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %si.0, !dbg !5422
  %2 = load i64, i64* %arrayidx, align 8, !dbg !5422
  call void @llvm.dbg.value(metadata i64 %2, metadata !5411, metadata !DIExpression()), !dbg !5415
  %3 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5424
  %representative = getelementptr inbounds %struct.stack_var, %struct.stack_var* %3, i64 %2, i32 4, !dbg !5426
  %4 = load i64, i64* %representative, align 8, !dbg !5426
  %cmp2 = icmp eq i64 %4, %2, !dbg !5427
  br i1 %cmp2, label %if.end, label %for.inc13, !dbg !5428

if.end:                                           ; preds = %for.body
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5429
  %size = getelementptr inbounds %struct.stack_var, %struct.stack_var* %3, i64 %2, i32 2, !dbg !5430
  %6 = load i64, i64* %size, align 8, !dbg !5430
  %alignb = getelementptr inbounds %struct.stack_var, %struct.stack_var* %3, i64 %2, i32 3, !dbg !5431
  %7 = load i32, i32* %alignb, align 8, !dbg !5431
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i64 %2, i64 %6, i32 %7) #6, !dbg !5432
  call void @llvm.dbg.value(metadata i64 %2, metadata !5412, metadata !DIExpression()), !dbg !5415
  br label %for.cond5, !dbg !5433

for.cond5:                                        ; preds = %for.body7, %if.end
  %j.0 = phi i64 [ %2, %if.end ], [ %17, %for.body7 ], !dbg !5435
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !5412, metadata !DIExpression()), !dbg !5415
  %cmp6 = icmp eq i64 %j.0, -1, !dbg !5436
  br i1 %cmp6, label %for.inc13.loopexit, label %for.body7, !dbg !5438

for.body7:                                        ; preds = %for.cond5
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5439
  %call8 = tail call i32 @fputc(i32 9, %struct._IO_FILE* %8) #6, !dbg !5441
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5442
  %10 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5443
  %decl = getelementptr inbounds %struct.stack_var, %struct.stack_var* %10, i64 %j.0, i32 0, !dbg !5444
  %11 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5444
  %12 = load i32, i32* @dump_flags, align 4, !dbg !5445
  tail call void @print_generic_expr(%struct._IO_FILE* %9, %union.tree_node* %11, i32 %12) #6, !dbg !5446
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5447
  %14 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5448
  %offset = getelementptr inbounds %struct.stack_var, %struct.stack_var* %14, i64 %j.0, i32 1, !dbg !5449
  %15 = load i64, i64* %offset, align 8, !dbg !5449
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i64 %15) #6, !dbg !5450
  %16 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5451
  %next = getelementptr inbounds %struct.stack_var, %struct.stack_var* %16, i64 %j.0, i32 5, !dbg !5452
  %17 = load i64, i64* %next, align 8, !dbg !5452
  call void @llvm.dbg.value(metadata i64 %17, metadata !5412, metadata !DIExpression()), !dbg !5415
  br label %for.cond5, !dbg !5453, !llvm.loop !5454

for.inc13.loopexit:                               ; preds = %for.cond5
  br label %for.inc13, !dbg !5456

for.inc13:                                        ; preds = %for.inc13.loopexit, %for.body
  %inc = add i64 %si.0, 1, !dbg !5456
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5410, metadata !DIExpression()), !dbg !5415
  br label %for.cond, !dbg !5457, !llvm.loop !5458

for.end14:                                        ; preds = %for.cond
  ret void, !dbg !5460
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_stack_guard() unnamed_addr #5 !dbg !5461 {
entry:
  %0 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_minimal**), align 8, !dbg !5464
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %0, i64 0, i32 1, !dbg !5464
  %1 = load i32, i32* %locus, align 8, !dbg !5464
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !5464
  %call = tail call %union.tree_node* @build_decl_stat(i32 %1, i32 32, %union.tree_node* null, %union.tree_node* %2) #6, !dbg !5464
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5463, metadata !DIExpression()), !dbg !5465
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5466
  %bf.load = load i64, i64* %3, align 8, !dbg !5467
  %bf.set4 = or i64 %bf.load, 17301504, !dbg !5468
  store i64 %bf.set4, i64* %3, align 8, !dbg !5468
  tail call fastcc void @expand_one_stack_var(%union.tree_node* %call) #7, !dbg !5469
  store %union.tree_node* %call, %union.tree_node** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 9), align 8, !dbg !5470
  ret void, !dbg !5471
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_stack_vars(i8 (%union.tree_node*)* %pred) unnamed_addr #5 !dbg !5472 {
entry:
  call void @llvm.dbg.value(metadata i8 (%union.tree_node*)* %pred, metadata !5479, metadata !DIExpression()), !dbg !5488
  %0 = load i64, i64* @stack_vars_num, align 8, !dbg !5489
  call void @llvm.dbg.value(metadata i64 %0, metadata !5483, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.value(metadata i64 0, metadata !5480, metadata !DIExpression()), !dbg !5488
  %tobool27 = icmp eq i8 (%union.tree_node*)* %pred, null, !dbg !5490
  br i1 %tobool27, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !5492

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !5492

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !5492

for.cond.us:                                      ; preds = %cleanup.us, %entry.split.us
  %si.0.us = phi i64 [ 0, %entry.split.us ], [ %inc.us, %cleanup.us ], !dbg !5493
  call void @llvm.dbg.value(metadata i64 %si.0.us, metadata !5480, metadata !DIExpression()), !dbg !5488
  %exitcond = icmp eq i64 %si.0.us, %0, !dbg !5494
  br i1 %exitcond, label %for.end57.us-lcssa.us, label %for.body.us, !dbg !5495

for.body.us:                                      ; preds = %for.cond.us
  %1 = load i64*, i64** @stack_vars_sorted, align 8, !dbg !5496
  %arrayidx.us = getelementptr inbounds i64, i64* %1, i64 %si.0.us, !dbg !5496
  %2 = load i64, i64* %arrayidx.us, align 8, !dbg !5496
  call void @llvm.dbg.value(metadata i64 %2, metadata !5481, metadata !DIExpression()), !dbg !5488
  %3 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5497
  %representative.us = getelementptr inbounds %struct.stack_var, %struct.stack_var* %3, i64 %2, i32 4, !dbg !5499
  %4 = load i64, i64* %representative.us, align 8, !dbg !5499
  %cmp2.us = icmp eq i64 %4, %2, !dbg !5500
  br i1 %cmp2.us, label %if.end.us, label %cleanup.us, !dbg !5501

if.end.us:                                        ; preds = %for.body.us
  %decl.us = getelementptr inbounds %struct.stack_var, %struct.stack_var* %3, i64 %2, i32 0, !dbg !5502
  %5 = bitcast %union.tree_node** %decl.us to i64**, !dbg !5502
  %6 = load i64*, i64** %5, align 8, !dbg !5502
  %bf.load.us = load i64, i64* %6, align 8, !dbg !5502
  %bf.cast1.us = and i64 %bf.load.us, 65535, !dbg !5504
  %cmp4.us = icmp eq i64 %bf.cast1.us, 141, !dbg !5504
  %7 = bitcast i64* %6 to %union.tree_node*, !dbg !5502
  br i1 %cmp4.us, label %cond.true.us, label %cond.false.us, !dbg !5502

cond.false.us:                                    ; preds = %if.end.us
  %rtl.us = getelementptr inbounds i64, i64* %6, i64 14, !dbg !5505
  %8 = bitcast i64* %rtl.us to %struct.rtx_def**, !dbg !5505
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8, !dbg !5505
  %tobool.us = icmp eq %struct.rtx_def* %9, null, !dbg !5505
  br i1 %tobool.us, label %cond.false15.us, label %cond.true10.us, !dbg !5505

cond.true10.us:                                   ; preds = %cond.false.us
  %rtl14.us = getelementptr inbounds i64, i64* %6, i64 14, !dbg !5505
  %10 = bitcast i64* %rtl14.us to %struct.rtx_def**, !dbg !5505
  br label %cond.end22.us, !dbg !5505

cond.false15.us:                                  ; preds = %cond.false.us
  tail call void @make_decl_rtl(%union.tree_node* %7) #6, !dbg !5505
  %11 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5505
  %decl19.us = getelementptr inbounds %struct.stack_var, %struct.stack_var* %11, i64 %2, i32 0, !dbg !5505
  %12 = bitcast %union.tree_node** %decl19.us to %struct.tree_decl_with_rtl**, !dbg !5505
  %13 = load %struct.tree_decl_with_rtl*, %struct.tree_decl_with_rtl** %12, align 8, !dbg !5505
  %rtl21.us = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %13, i64 0, i32 1, !dbg !5505
  br label %cond.end22.us, !dbg !5505

cond.true.us:                                     ; preds = %if.end.us
  %14 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 2), align 8, !dbg !5506
  %15 = load %struct._var_map*, %struct._var_map** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 0), align 8, !dbg !5507
  %call.us = tail call fastcc i32 @var_to_partition(%struct._var_map* %15, %union.tree_node* %7) #7, !dbg !5508
  %idxprom.us = sext i32 %call.us to i64, !dbg !5509
  %arrayidx7.us = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %14, i64 %idxprom.us, !dbg !5509
  br label %cond.end22.us, !dbg !5502

cond.end22.us:                                    ; preds = %cond.true.us, %cond.false15.us, %cond.true10.us
  %cond23.in.us = phi %struct.rtx_def** [ %arrayidx7.us, %cond.true.us ], [ %10, %cond.true10.us ], [ %rtl21.us, %cond.false15.us ]
  %cond23.us = load %struct.rtx_def*, %struct.rtx_def** %cond23.in.us, align 8, !dbg !5502
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !5510
  %cmp24.us = icmp eq %struct.rtx_def* %cond23.us, %16, !dbg !5511
  br i1 %cmp24.us, label %if.end26.us, label %cleanup.us, !dbg !5512

if.end26.us:                                      ; preds = %cond.end22.us
  %17 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5513
  %size.us = getelementptr inbounds %struct.stack_var, %struct.stack_var* %17, i64 %2, i32 2, !dbg !5514
  %18 = load i64, i64* %size.us, align 8, !dbg !5514
  %alignb.us = getelementptr inbounds %struct.stack_var, %struct.stack_var* %17, i64 %2, i32 3, !dbg !5515
  %19 = load i32, i32* %alignb.us, align 8, !dbg !5515
  %conv.us = zext i32 %19 to i64, !dbg !5516
  %call36.us = tail call fastcc i64 @alloc_stack_frame_space(i64 %18, i64 %conv.us) #7, !dbg !5517
  call void @llvm.dbg.value(metadata i64 %call36.us, metadata !5484, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.value(metadata i64 %2, metadata !5482, metadata !DIExpression()), !dbg !5488
  br label %for.cond37.us, !dbg !5519

for.cond37.us:                                    ; preds = %cond.end49.us, %if.end26.us
  %j.0.us = phi i64 [ %2, %if.end26.us ], [ %27, %cond.end49.us ], !dbg !5521
  call void @llvm.dbg.value(metadata i64 %j.0.us, metadata !5482, metadata !DIExpression()), !dbg !5488
  %cmp38.us = icmp eq i64 %j.0.us, -1, !dbg !5522
  br i1 %cmp38.us, label %cleanup.loopexit.us, label %for.body40.us, !dbg !5524

for.body40.us:                                    ; preds = %for.cond37.us
  %20 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5525
  %offset42.us = getelementptr inbounds %struct.stack_var, %struct.stack_var* %20, i64 %j.0.us, i32 1, !dbg !5525
  %21 = load i64, i64* %offset42.us, align 8, !dbg !5525
  %size44.us = getelementptr inbounds %struct.stack_var, %struct.stack_var* %20, i64 %2, i32 2, !dbg !5525
  %22 = load i64, i64* %size44.us, align 8, !dbg !5525
  %cmp45.us = icmp sgt i64 %21, %22, !dbg !5525
  br i1 %cmp45.us, label %cond.true47.us, label %cond.end49.us, !dbg !5525

cond.true47.us:                                   ; preds = %for.body40.us
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 780, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5525
  %.pre4 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5527
  %offset54.us.phi.trans.insert = getelementptr inbounds %struct.stack_var, %struct.stack_var* %.pre4, i64 %j.0.us, i32 1, !dbg !5528
  %.pre5 = load i64, i64* %offset54.us.phi.trans.insert, align 8, !dbg !5529
  br label %cond.end49.us, !dbg !5525

cond.end49.us:                                    ; preds = %cond.true47.us, %for.body40.us
  %23 = phi i64 [ %.pre5, %cond.true47.us ], [ %21, %for.body40.us ], !dbg !5529
  %24 = phi %struct.stack_var* [ %.pre4, %cond.true47.us ], [ %20, %for.body40.us ], !dbg !5527
  %decl52.us = getelementptr inbounds %struct.stack_var, %struct.stack_var* %24, i64 %j.0.us, i32 0, !dbg !5530
  %25 = load %union.tree_node*, %union.tree_node** %decl52.us, align 8, !dbg !5530
  %add.us = add nsw i64 %23, %call36.us, !dbg !5531
  tail call fastcc void @expand_one_stack_var_at(%union.tree_node* %25, i64 %add.us) #7, !dbg !5532
  %26 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5533
  %next.us = getelementptr inbounds %struct.stack_var, %struct.stack_var* %26, i64 %j.0.us, i32 5, !dbg !5534
  %27 = load i64, i64* %next.us, align 8, !dbg !5534
  call void @llvm.dbg.value(metadata i64 %27, metadata !5482, metadata !DIExpression()), !dbg !5488
  br label %for.cond37.us, !dbg !5535, !llvm.loop !5536

cleanup.us:                                       ; preds = %cleanup.loopexit.us, %cond.end22.us, %for.body.us
  %inc.us = add i64 %si.0.us, 1, !dbg !5538
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !5480, metadata !DIExpression()), !dbg !5488
  br label %for.cond.us, !dbg !5539, !llvm.loop !5540

cleanup.loopexit.us:                              ; preds = %for.cond37.us
  br label %cleanup.us, !dbg !5538

for.end57.us-lcssa.us:                            ; preds = %for.cond.us
  br label %for.end57, !dbg !5542

for.cond:                                         ; preds = %cleanup, %entry.entry.split_crit_edge
  %si.0 = phi i64 [ 0, %entry.entry.split_crit_edge ], [ %inc, %cleanup ], !dbg !5493
  call void @llvm.dbg.value(metadata i64 %si.0, metadata !5480, metadata !DIExpression()), !dbg !5488
  %exitcond6 = icmp eq i64 %si.0, %0, !dbg !5494
  br i1 %exitcond6, label %for.end57.us-lcssa, label %for.body, !dbg !5495

for.body:                                         ; preds = %for.cond
  %28 = load i64*, i64** @stack_vars_sorted, align 8, !dbg !5496
  %arrayidx = getelementptr inbounds i64, i64* %28, i64 %si.0, !dbg !5496
  %29 = load i64, i64* %arrayidx, align 8, !dbg !5496
  call void @llvm.dbg.value(metadata i64 %29, metadata !5481, metadata !DIExpression()), !dbg !5488
  %30 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5497
  %representative = getelementptr inbounds %struct.stack_var, %struct.stack_var* %30, i64 %29, i32 4, !dbg !5499
  %31 = load i64, i64* %representative, align 8, !dbg !5499
  %cmp2 = icmp eq i64 %31, %29, !dbg !5500
  br i1 %cmp2, label %if.end, label %cleanup, !dbg !5501

if.end:                                           ; preds = %for.body
  %decl = getelementptr inbounds %struct.stack_var, %struct.stack_var* %30, i64 %29, i32 0, !dbg !5502
  %32 = bitcast %union.tree_node** %decl to i64**, !dbg !5502
  %33 = load i64*, i64** %32, align 8, !dbg !5502
  %bf.load = load i64, i64* %33, align 8, !dbg !5502
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5504
  %cmp4 = icmp eq i64 %bf.cast1, 141, !dbg !5504
  %34 = bitcast i64* %33 to %union.tree_node*, !dbg !5502
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !5502

cond.true:                                        ; preds = %if.end
  %35 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 2), align 8, !dbg !5506
  %36 = load %struct._var_map*, %struct._var_map** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 0), align 8, !dbg !5507
  %call = tail call fastcc i32 @var_to_partition(%struct._var_map* %36, %union.tree_node* %34) #7, !dbg !5508
  %idxprom = sext i32 %call to i64, !dbg !5509
  %arrayidx7 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %35, i64 %idxprom, !dbg !5509
  br label %cond.end22, !dbg !5502

cond.false:                                       ; preds = %if.end
  %rtl = getelementptr inbounds i64, i64* %33, i64 14, !dbg !5505
  %37 = bitcast i64* %rtl to %struct.rtx_def**, !dbg !5505
  %38 = load %struct.rtx_def*, %struct.rtx_def** %37, align 8, !dbg !5505
  %tobool = icmp eq %struct.rtx_def* %38, null, !dbg !5505
  br i1 %tobool, label %cond.false15, label %cond.true10, !dbg !5505

cond.true10:                                      ; preds = %cond.false
  %rtl14 = getelementptr inbounds i64, i64* %33, i64 14, !dbg !5505
  %39 = bitcast i64* %rtl14 to %struct.rtx_def**, !dbg !5505
  br label %cond.end22, !dbg !5505

cond.false15:                                     ; preds = %cond.false
  tail call void @make_decl_rtl(%union.tree_node* %34) #6, !dbg !5505
  %40 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5505
  %decl19 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %40, i64 %29, i32 0, !dbg !5505
  %41 = bitcast %union.tree_node** %decl19 to %struct.tree_decl_with_rtl**, !dbg !5505
  %42 = load %struct.tree_decl_with_rtl*, %struct.tree_decl_with_rtl** %41, align 8, !dbg !5505
  %rtl21 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %42, i64 0, i32 1, !dbg !5505
  br label %cond.end22, !dbg !5505

cond.end22:                                       ; preds = %cond.true10, %cond.false15, %cond.true
  %cond23.in = phi %struct.rtx_def** [ %arrayidx7, %cond.true ], [ %39, %cond.true10 ], [ %rtl21, %cond.false15 ]
  %cond23 = load %struct.rtx_def*, %struct.rtx_def** %cond23.in, align 8, !dbg !5502
  %43 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !5510
  %cmp24 = icmp eq %struct.rtx_def* %cond23, %43, !dbg !5511
  br i1 %cmp24, label %if.end26, label %cleanup, !dbg !5512

if.end26:                                         ; preds = %cond.end22
  %44 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5543
  %decl29 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %44, i64 %29, i32 0, !dbg !5544
  %45 = load %union.tree_node*, %union.tree_node** %decl29, align 8, !dbg !5544
  %call30 = tail call zeroext i8 %pred(%union.tree_node* %45) #6, !dbg !5545
  %tobool31 = icmp eq i8 %call30, 0, !dbg !5545
  br i1 %tobool31, label %cleanup, label %if.end33, !dbg !5546

if.end33:                                         ; preds = %if.end26
  %46 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5513
  %size = getelementptr inbounds %struct.stack_var, %struct.stack_var* %46, i64 %29, i32 2, !dbg !5514
  %47 = load i64, i64* %size, align 8, !dbg !5514
  %alignb = getelementptr inbounds %struct.stack_var, %struct.stack_var* %46, i64 %29, i32 3, !dbg !5515
  %48 = load i32, i32* %alignb, align 8, !dbg !5515
  %conv = zext i32 %48 to i64, !dbg !5516
  %call36 = tail call fastcc i64 @alloc_stack_frame_space(i64 %47, i64 %conv) #7, !dbg !5517
  call void @llvm.dbg.value(metadata i64 %call36, metadata !5484, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.value(metadata i64 %29, metadata !5482, metadata !DIExpression()), !dbg !5488
  br label %for.cond37, !dbg !5519

for.cond37:                                       ; preds = %cond.end49, %if.end33
  %j.0 = phi i64 [ %29, %if.end33 ], [ %56, %cond.end49 ], !dbg !5521
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !5482, metadata !DIExpression()), !dbg !5488
  %cmp38 = icmp eq i64 %j.0, -1, !dbg !5522
  br i1 %cmp38, label %cleanup.loopexit, label %for.body40, !dbg !5524

for.body40:                                       ; preds = %for.cond37
  %49 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5525
  %offset42 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %49, i64 %j.0, i32 1, !dbg !5525
  %50 = load i64, i64* %offset42, align 8, !dbg !5525
  %size44 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %49, i64 %29, i32 2, !dbg !5525
  %51 = load i64, i64* %size44, align 8, !dbg !5525
  %cmp45 = icmp sgt i64 %50, %51, !dbg !5525
  br i1 %cmp45, label %cond.true47, label %cond.end49, !dbg !5525

cond.true47:                                      ; preds = %for.body40
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 780, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5525
  %.pre = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5527
  %offset54.phi.trans.insert = getelementptr inbounds %struct.stack_var, %struct.stack_var* %.pre, i64 %j.0, i32 1, !dbg !5528
  %.pre3 = load i64, i64* %offset54.phi.trans.insert, align 8, !dbg !5529
  br label %cond.end49, !dbg !5525

cond.end49:                                       ; preds = %for.body40, %cond.true47
  %52 = phi i64 [ %50, %for.body40 ], [ %.pre3, %cond.true47 ], !dbg !5529
  %53 = phi %struct.stack_var* [ %49, %for.body40 ], [ %.pre, %cond.true47 ], !dbg !5527
  %decl52 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %53, i64 %j.0, i32 0, !dbg !5530
  %54 = load %union.tree_node*, %union.tree_node** %decl52, align 8, !dbg !5530
  %add = add nsw i64 %52, %call36, !dbg !5531
  tail call fastcc void @expand_one_stack_var_at(%union.tree_node* %54, i64 %add) #7, !dbg !5532
  %55 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5533
  %next = getelementptr inbounds %struct.stack_var, %struct.stack_var* %55, i64 %j.0, i32 5, !dbg !5534
  %56 = load i64, i64* %next, align 8, !dbg !5534
  call void @llvm.dbg.value(metadata i64 %56, metadata !5482, metadata !DIExpression()), !dbg !5488
  br label %for.cond37, !dbg !5535, !llvm.loop !5536

cleanup.loopexit:                                 ; preds = %for.cond37
  br label %cleanup, !dbg !5538

cleanup:                                          ; preds = %cleanup.loopexit, %if.end26, %cond.end22, %for.body
  %inc = add i64 %si.0, 1, !dbg !5538
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5480, metadata !DIExpression()), !dbg !5488
  br label %for.cond, !dbg !5539, !llvm.loop !5540

for.end57.us-lcssa:                               ; preds = %for.cond
  br label %for.end57, !dbg !5542

for.end57:                                        ; preds = %for.end57.us-lcssa.us, %for.end57.us-lcssa
  ret void, !dbg !5542
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @stack_protect_decl_phase_1(%union.tree_node* %decl) #5 !dbg !5547 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5549, metadata !DIExpression()), !dbg !5550
  %call = tail call fastcc i32 @stack_protect_decl_phase(%union.tree_node* %decl) #7, !dbg !5551
  %cmp = icmp eq i32 %call, 1, !dbg !5552
  %conv1 = zext i1 %cmp to i8, !dbg !5551
  ret i8 %conv1, !dbg !5553
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @stack_protect_decl_phase_2(%union.tree_node* %decl) #5 !dbg !5554 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5556, metadata !DIExpression()), !dbg !5557
  %call = tail call fastcc i32 @stack_protect_decl_phase(%union.tree_node* %decl) #7, !dbg !5558
  %cmp = icmp eq i32 %call, 2, !dbg !5559
  %conv1 = zext i1 %cmp to i8, !dbg !5558
  ret i8 %conv1, !dbg !5560
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_stack_var_conflict(i64 %x, i64 %y) unnamed_addr #5 !dbg !5561 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !5565, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.value(metadata i64 %y, metadata !5566, metadata !DIExpression()), !dbg !5569
  %0 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5570
  call void @llvm.dbg.value(metadata %struct.stack_var* undef, metadata !5567, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.value(metadata %struct.stack_var* undef, metadata !5568, metadata !DIExpression()), !dbg !5569
  %conflicts = getelementptr inbounds %struct.stack_var, %struct.stack_var* %0, i64 %x, i32 6, !dbg !5571
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %conflicts, align 8, !dbg !5571
  %tobool = icmp eq %struct.bitmap_head_def* %1, null, !dbg !5573
  br i1 %tobool, label %if.then, label %if.end, !dbg !5574

if.then:                                          ; preds = %entry
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5575
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %conflicts, align 8, !dbg !5576
  br label %if.end, !dbg !5577

if.end:                                           ; preds = %entry, %if.then
  %2 = phi %struct.bitmap_head_def* [ %1, %entry ], [ %call, %if.then ]
  %conflicts3 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %0, i64 %y, i32 6, !dbg !5578
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %conflicts3, align 8, !dbg !5578
  %tobool4 = icmp eq %struct.bitmap_head_def* %3, null, !dbg !5580
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !5581

if.then5:                                         ; preds = %if.end
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5582
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** %conflicts3, align 8, !dbg !5583
  %.pre = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %conflicts, align 8, !dbg !5584
  br label %if.end8, !dbg !5585

if.end8:                                          ; preds = %if.end, %if.then5
  %4 = phi %struct.bitmap_head_def* [ %2, %if.end ], [ %.pre, %if.then5 ], !dbg !5584
  %conv = trunc i64 %y to i32, !dbg !5586
  %call10 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %4, i32 %conv) #6, !dbg !5587
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %conflicts3, align 8, !dbg !5588
  %conv12 = trunc i64 %x to i32, !dbg !5589
  %call13 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %5, i32 %conv12) #6, !dbg !5590
  ret void, !dbg !5591
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @aggregate_contains_union_type(%union.tree_node* %type) unnamed_addr #5 !dbg !5592 {
entry:
  br label %tailrecurse, !dbg !5596

tailrecurse:                                      ; preds = %if.then11, %entry
  %type.tr = phi %union.tree_node* [ %type, %entry ], [ %1, %if.then11 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr, metadata !5594, metadata !DIExpression()), !dbg !5598
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5599
  %bf.load = load i64, i64* %0, align 8, !dbg !5599
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5601
  %cmp = icmp eq i64 %bf.cast1, 17, !dbg !5601
  br i1 %cmp, label %cleanup.loopexit6, label %lor.lhs.false, !dbg !5602

lor.lhs.false:                                    ; preds = %tailrecurse
  %cmp5 = icmp eq i64 %bf.cast1, 18, !dbg !5603
  br i1 %cmp5, label %cleanup.loopexit6, label %if.end, !dbg !5604

if.end:                                           ; preds = %lor.lhs.false
  %cmp10 = icmp eq i64 %bf.cast1, 15, !dbg !5605
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !5606

if.then11:                                        ; preds = %if.end
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5607
  %1 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !5607
  br label %tailrecurse, !dbg !5596

if.end13:                                         ; preds = %if.end
  %type.tr.lcssa11 = phi %union.tree_node* [ %type.tr, %if.end ]
  %bf.cast1.lcssa10 = phi i64 [ %bf.cast1, %if.end ], !dbg !5601
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa11, metadata !5594, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa11, metadata !5594, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa11, metadata !5594, metadata !DIExpression()), !dbg !5598
  %cmp18 = icmp eq i64 %bf.cast1.lcssa10, 16, !dbg !5608
  br i1 %cmp18, label %if.end20, label %cleanup, !dbg !5610

if.end20:                                         ; preds = %if.end13
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type.tr.lcssa11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5611
  %2 = bitcast i32* %values to %union.tree_node**, !dbg !5611
  br label %for.cond, !dbg !5613

for.cond:                                         ; preds = %for.inc, %if.end20
  %field.0.in = phi %union.tree_node** [ %2, %if.end20 ], [ %chain, %for.inc ]
  %field.0 = load %union.tree_node*, %union.tree_node** %field.0.in, align 8, !dbg !5614
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !5595, metadata !DIExpression()), !dbg !5598
  %tobool = icmp eq %union.tree_node* %field.0, null, !dbg !5615
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !5615

for.body:                                         ; preds = %for.cond
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5616
  %bf.load23 = load i64, i64* %3, align 8, !dbg !5616
  %bf.cast255 = and i64 %bf.load23, 65535, !dbg !5619
  %cmp26 = icmp eq i64 %bf.cast255, 31, !dbg !5619
  br i1 %cmp26, label %if.then27, label %for.inc, !dbg !5620

if.then27:                                        ; preds = %for.body
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5621
  %4 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !5621
  %call30 = tail call fastcc zeroext i8 @aggregate_contains_union_type(%union.tree_node* %4) #7, !dbg !5623
  %tobool31 = icmp eq i8 %call30, 0, !dbg !5623
  br i1 %tobool31, label %for.inc, label %cleanup.loopexit, !dbg !5624

for.inc:                                          ; preds = %if.then27, %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5625
  br label %for.cond, !dbg !5626, !llvm.loop !5627

cleanup.loopexit:                                 ; preds = %for.cond, %if.then27
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %if.then27 ]
  br label %cleanup, !dbg !5629

cleanup.loopexit6:                                ; preds = %lor.lhs.false, %tailrecurse
  br label %cleanup, !dbg !5629

cleanup:                                          ; preds = %cleanup.loopexit6, %cleanup.loopexit, %if.end13
  %retval.0 = phi i8 [ 0, %if.end13 ], [ %retval.0.ph, %cleanup.loopexit ], [ 1, %cleanup.loopexit6 ], !dbg !5598
  ret i8 %retval.0, !dbg !5629
}

declare dso_local i32 @objects_must_conflict_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @stack_protect_decl_phase(%union.tree_node* %decl) unnamed_addr #5 !dbg !5630 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5634, metadata !DIExpression()), !dbg !5637
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5638
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5638
  %call = tail call fastcc i32 @stack_protect_classify_type(%union.tree_node* %0) #7, !dbg !5639
  call void @llvm.dbg.value(metadata i32 %call, metadata !5635, metadata !DIExpression()), !dbg !5637
  call void @llvm.dbg.value(metadata i32 0, metadata !5636, metadata !DIExpression()), !dbg !5637
  %and = and i32 %call, 2, !dbg !5640
  %tobool = icmp eq i32 %and, 0, !dbg !5640
  br i1 %tobool, label %if.end, label %if.then, !dbg !5642

if.then:                                          ; preds = %entry
  store i1 true, i1* @has_short_buffer, align 1, !dbg !5643
  br label %if.end, !dbg !5644

if.end:                                           ; preds = %entry, %if.then
  %1 = load i32, i32* @flag_stack_protect, align 4, !dbg !5645
  %cmp = icmp eq i32 %1, 2, !dbg !5647
  br i1 %cmp, label %if.then1, label %if.else12, !dbg !5648

if.then1:                                         ; preds = %if.end
  %and2 = and i32 %call, 3, !dbg !5649
  %tobool3 = icmp eq i32 %and2, 0, !dbg !5649
  %and4 = and i32 %call, 8, !dbg !5652
  %tobool5 = icmp ne i32 %and4, 0, !dbg !5652
  %or.cond = or i1 %tobool3, %tobool5, !dbg !5653
  br i1 %or.cond, label %if.else, label %if.end15, !dbg !5653

if.else:                                          ; preds = %if.then1
  %and7 = lshr i32 %call, 1, !dbg !5654
  %2 = and i32 %and7, 2, !dbg !5654
  call void @llvm.dbg.value(metadata i32 %2, metadata !5636, metadata !DIExpression()), !dbg !5637
  br label %if.end15

if.else12:                                        ; preds = %if.end
  %and13 = and i32 %call, 1, !dbg !5655
  call void @llvm.dbg.value(metadata i32 %and13, metadata !5636, metadata !DIExpression()), !dbg !5637
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then1, %if.else12
  %ret.2 = phi i32 [ %and13, %if.else12 ], [ %2, %if.else ], [ 1, %if.then1 ], !dbg !5656
  call void @llvm.dbg.value(metadata i32 %ret.2, metadata !5636, metadata !DIExpression()), !dbg !5637
  %tobool16 = icmp eq i32 %ret.2, 0, !dbg !5657
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !5659

if.then17:                                        ; preds = %if.end15
  store i1 true, i1* @has_protected_decls, align 1, !dbg !5660
  br label %if.end18, !dbg !5661

if.end18:                                         ; preds = %if.end15, %if.then17
  ret i32 %ret.2, !dbg !5662
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @stack_protect_classify_type(%union.tree_node* %type) unnamed_addr #5 !dbg !5663 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5665, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i32 0, metadata !5666, metadata !DIExpression()), !dbg !5673
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5674
  %bf.load = load i64, i64* %0, align 8, !dbg !5674
  %1 = trunc i64 %bf.load to i16, !dbg !5674
  switch i16 %1, label %sw.epilog [
    i16 15, label %sw.bb
    i16 17, label %sw.bb22
    i16 18, label %sw.bb22
    i16 16, label %sw.bb22
  ], !dbg !5675

sw.bb:                                            ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5676
  %2 = bitcast %union.tree_node** %type1 to %struct.tree_type**, !dbg !5676
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !5676
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 16, !dbg !5676
  %4 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !5676
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5667, metadata !DIExpression()), !dbg !5673
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !5677
  %cmp = icmp eq %union.tree_node* %4, %5, !dbg !5678
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !5679
  %cmp3 = icmp eq %union.tree_node* %4, %6, !dbg !5680
  %or.cond = or i1 %cmp, %cmp3, !dbg !5681
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !5682
  %cmp5 = icmp eq %union.tree_node* %4, %7, !dbg !5683
  %or.cond1 = or i1 %or.cond, %cmp5, !dbg !5681
  br i1 %or.cond1, label %if.then, label %sw.epilog, !dbg !5681

if.then:                                          ; preds = %sw.bb
  %8 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !5684
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %8, i64 93, i32 1, !dbg !5684
  %9 = load i32, i32* %value, align 8, !dbg !5684
  %conv = sext i32 %9 to i64, !dbg !5684
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5668, metadata !DIExpression()), !dbg !5685
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5686
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !5686
  %tobool = icmp eq %union.tree_node* %11, null, !dbg !5686
  br i1 %tobool, label %if.end, label %lor.lhs.false7, !dbg !5688

lor.lhs.false7:                                   ; preds = %if.then
  %call = tail call i32 @host_integerp(%union.tree_node* nonnull %11, i32 1) #6, !dbg !5689
  %tobool10 = icmp eq i32 %call, 0, !dbg !5689
  br i1 %tobool10, label %if.end, label %if.else, !dbg !5690

if.else:                                          ; preds = %lor.lhs.false7
  %12 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !5691
  %call14 = tail call i64 @tree_low_cst(%union.tree_node* %12, i32 1) #6, !dbg !5692
  call void @llvm.dbg.value(metadata i64 %call14, metadata !5672, metadata !DIExpression()), !dbg !5685
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false7, %if.then, %if.else
  %len.0 = phi i64 [ %call14, %if.else ], [ %conv, %lor.lhs.false7 ], [ %conv, %if.then ], !dbg !5693
  call void @llvm.dbg.value(metadata i64 %len.0, metadata !5672, metadata !DIExpression()), !dbg !5685
  %cmp15 = icmp ult i64 %len.0, %conv, !dbg !5694
  %. = select i1 %cmp15, i32 6, i32 5
  call void @llvm.dbg.value(metadata i32 %., metadata !5666, metadata !DIExpression()), !dbg !5673
  br label %sw.epilog, !dbg !5696

sw.bb22:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 8, metadata !5666, metadata !DIExpression()), !dbg !5673
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5697
  %13 = bitcast i32* %values to %union.tree_node**, !dbg !5697
  br label %for.cond, !dbg !5699

for.cond:                                         ; preds = %for.inc, %sw.bb22
  %t.0.in = phi %union.tree_node** [ %13, %sw.bb22 ], [ %chain, %for.inc ]
  %ret.2 = phi i32 [ 8, %sw.bb22 ], [ %ret.3, %for.inc ], !dbg !5700
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !5701
  call void @llvm.dbg.value(metadata i32 %ret.2, metadata !5666, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5667, metadata !DIExpression()), !dbg !5673
  %tobool24 = icmp eq %union.tree_node* %t.0, null, !dbg !5702
  br i1 %tobool24, label %sw.epilog.loopexit, label %for.body, !dbg !5702

for.body:                                         ; preds = %for.cond
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5703
  %bf.load26 = load i64, i64* %14, align 8, !dbg !5703
  %bf.cast282 = and i64 %bf.load26, 65535, !dbg !5706
  %cmp29 = icmp eq i64 %bf.cast282, 31, !dbg !5706
  br i1 %cmp29, label %if.then31, label %for.inc, !dbg !5707

if.then31:                                        ; preds = %for.body
  %type33 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5708
  %15 = load %union.tree_node*, %union.tree_node** %type33, align 8, !dbg !5708
  %call34 = tail call fastcc i32 @stack_protect_classify_type(%union.tree_node* %15) #7, !dbg !5709
  %or = or i32 %ret.2, %call34, !dbg !5710
  call void @llvm.dbg.value(metadata i32 %or, metadata !5666, metadata !DIExpression()), !dbg !5673
  br label %for.inc, !dbg !5711

for.inc:                                          ; preds = %for.body, %if.then31
  %ret.3 = phi i32 [ %or, %if.then31 ], [ %ret.2, %for.body ], !dbg !5700
  call void @llvm.dbg.value(metadata i32 %ret.3, metadata !5666, metadata !DIExpression()), !dbg !5673
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5712
  br label %for.cond, !dbg !5713, !llvm.loop !5714

sw.epilog.loopexit:                               ; preds = %for.cond
  %ret.2.lcssa = phi i32 [ %ret.2, %for.cond ], !dbg !5700
  call void @llvm.dbg.value(metadata i32 %ret.2.lcssa, metadata !5666, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i32 %ret.2.lcssa, metadata !5666, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i32 %ret.2.lcssa, metadata !5666, metadata !DIExpression()), !dbg !5673
  br label %sw.epilog, !dbg !5716

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %entry, %if.end, %sw.bb
  %ret.4 = phi i32 [ %., %if.end ], [ 4, %sw.bb ], [ 0, %entry ], [ %ret.2.lcssa, %sw.epilog.loopexit ], !dbg !5673
  call void @llvm.dbg.value(metadata i32 %ret.4, metadata !5666, metadata !DIExpression()), !dbg !5673
  ret i32 %ret.4, !dbg !5716
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @stack_var_size_cmp(i8* %a, i8* %b) #5 !dbg !5717 {
entry:
  call void @llvm.dbg.value(metadata i8* %a, metadata !5719, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata i8* %b, metadata !5720, metadata !DIExpression()), !dbg !5727
  %0 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5728
  %1 = bitcast i8* %a to i64*, !dbg !5729
  %2 = load i64, i64* %1, align 8, !dbg !5730
  %size = getelementptr inbounds %struct.stack_var, %struct.stack_var* %0, i64 %2, i32 2, !dbg !5731
  %3 = load i64, i64* %size, align 8, !dbg !5731
  call void @llvm.dbg.value(metadata i64 %3, metadata !5721, metadata !DIExpression()), !dbg !5727
  %4 = bitcast i8* %b to i64*, !dbg !5732
  %5 = load i64, i64* %4, align 8, !dbg !5733
  %size2 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %0, i64 %5, i32 2, !dbg !5734
  %6 = load i64, i64* %size2, align 8, !dbg !5734
  call void @llvm.dbg.value(metadata i64 %6, metadata !5722, metadata !DIExpression()), !dbg !5727
  %cmp = icmp slt i64 %3, %6, !dbg !5735
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5737

if.end:                                           ; preds = %entry
  %cmp3 = icmp sgt i64 %3, %6, !dbg !5738
  br i1 %cmp3, label %cleanup, label %if.end5, !dbg !5740

if.end5:                                          ; preds = %if.end
  %decl = getelementptr inbounds %struct.stack_var, %struct.stack_var* %0, i64 %2, i32 0, !dbg !5741
  %7 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5741
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5723, metadata !DIExpression()), !dbg !5727
  %decl8 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %0, i64 %5, i32 0, !dbg !5742
  %8 = load %union.tree_node*, %union.tree_node** %decl8, align 8, !dbg !5742
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5724, metadata !DIExpression()), !dbg !5727
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5743
  %bf.load = load i64, i64* %9, align 8, !dbg !5743
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5745
  %cmp9 = icmp eq i64 %bf.cast1, 141, !dbg !5745
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5746
  %bf.load12 = load i64, i64* %10, align 8, !dbg !5746
  %bf.cast142 = and i64 %bf.load12, 65535, !dbg !5746
  %cmp15 = icmp eq i64 %bf.cast142, 141, !dbg !5746
  br i1 %cmp9, label %if.then10, label %if.else20, !dbg !5747

if.then10:                                        ; preds = %if.end5
  br i1 %cmp15, label %if.then16, label %cleanup, !dbg !5748

if.then16:                                        ; preds = %if.then10
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5750
  %11 = bitcast %union.tree_node** %version to i32*, !dbg !5750
  %version18 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5752
  %12 = bitcast %union.tree_node** %version18 to i32*, !dbg !5752
  br label %if.end31, !dbg !5753

if.else20:                                        ; preds = %if.end5
  br i1 %cmp15, label %cleanup, label %if.else27, !dbg !5754

if.else27:                                        ; preds = %if.else20
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5755
  %uid29 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5757
  br label %if.end31

if.end31:                                         ; preds = %if.else27, %if.then16
  %uida.0.in = phi i32* [ %11, %if.then16 ], [ %uid, %if.else27 ]
  %uidb.0.in = phi i32* [ %12, %if.then16 ], [ %uid29, %if.else27 ]
  %uidb.0 = load i32, i32* %uidb.0.in, align 4, !dbg !5746
  %uida.0 = load i32, i32* %uida.0.in, align 4, !dbg !5746
  call void @llvm.dbg.value(metadata i32 %uidb.0, metadata !5726, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata i32 %uida.0, metadata !5725, metadata !DIExpression()), !dbg !5727
  %cmp32 = icmp ult i32 %uida.0, %uidb.0, !dbg !5758
  br i1 %cmp32, label %cleanup, label %if.end34, !dbg !5760

if.end34:                                         ; preds = %if.end31
  %cmp35 = icmp ugt i32 %uida.0, %uidb.0, !dbg !5761
  %. = zext i1 %cmp35 to i32, !dbg !5727
  br label %cleanup, !dbg !5727

cleanup:                                          ; preds = %if.end34, %if.end31, %if.else20, %if.then10, %if.end, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ 1, %if.end ], [ -1, %if.then10 ], [ 1, %if.else20 ], [ -1, %if.end31 ], [ %., %if.end34 ], !dbg !5727
  ret i32 %retval.0, !dbg !5763
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @stack_var_conflict_p(i64 %x, i64 %y) unnamed_addr #5 !dbg !5764 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !5768, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.value(metadata i64 %y, metadata !5769, metadata !DIExpression()), !dbg !5772
  %0 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5773
  call void @llvm.dbg.value(metadata %struct.stack_var* undef, metadata !5770, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.value(metadata %struct.stack_var* undef, metadata !5771, metadata !DIExpression()), !dbg !5772
  %conflicts = getelementptr inbounds %struct.stack_var, %struct.stack_var* %0, i64 %x, i32 6, !dbg !5774
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %conflicts, align 8, !dbg !5774
  %tobool = icmp eq %struct.bitmap_head_def* %1, null, !dbg !5776
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !5777

lor.lhs.false:                                    ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.stack_var* undef, metadata !5771, metadata !DIExpression()), !dbg !5772
  %conflicts2 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %0, i64 %y, i32 6, !dbg !5778
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %conflicts2, align 8, !dbg !5778
  %tobool3 = icmp eq %struct.bitmap_head_def* %2, null, !dbg !5779
  br i1 %tobool3, label %cleanup, label %if.end, !dbg !5780

if.end:                                           ; preds = %lor.lhs.false
  %conv = trunc i64 %y to i32, !dbg !5781
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %1, i32 %conv) #6, !dbg !5782
  %conv5 = trunc i32 %call to i8, !dbg !5782
  br label %cleanup, !dbg !5783

cleanup:                                          ; preds = %lor.lhs.false, %entry, %if.end
  %retval.0 = phi i8 [ %conv5, %if.end ], [ 0, %lor.lhs.false ], [ 0, %entry ], !dbg !5772
  ret i8 %retval.0, !dbg !5784
}

; Function Attrs: nounwind uwtable
define internal fastcc void @union_stack_vars(i64 %a, i64 %b, i64 %offset) unnamed_addr #5 !dbg !5785 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %u = alloca i32, align 4
  call void @llvm.dbg.value(metadata i64 %a, metadata !5789, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i64 %b, metadata !5790, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i64 0, metadata !5791, metadata !DIExpression()), !dbg !5804
  %0 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5805
  call void @llvm.dbg.value(metadata %struct.stack_var* undef, metadata !5794, metadata !DIExpression()), !dbg !5804
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5806
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5806
  %2 = bitcast i32* %u to i8*, !dbg !5807
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !5807
  call void @llvm.dbg.value(metadata i64 %b, metadata !5792, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i64 %b, metadata !5793, metadata !DIExpression()), !dbg !5804
  br label %for.cond, !dbg !5808

for.cond:                                         ; preds = %for.body, %entry
  %3 = phi %struct.stack_var* [ %0, %entry ], [ %5, %for.body ], !dbg !5804
  %i.0 = phi i64 [ %b, %entry ], [ %6, %for.body ], !dbg !5810
  %last.0 = phi i64 [ %b, %entry ], [ %i.0, %for.body ], !dbg !5810
  call void @llvm.dbg.value(metadata i64 %last.0, metadata !5793, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5792, metadata !DIExpression()), !dbg !5804
  %cmp = icmp eq i64 %i.0, -1, !dbg !5811
  br i1 %cmp, label %for.end, label %for.body, !dbg !5813

for.body:                                         ; preds = %for.cond
  %4 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5814
  %representative = getelementptr inbounds %struct.stack_var, %struct.stack_var* %4, i64 %i.0, i32 4, !dbg !5816
  store i64 %a, i64* %representative, align 8, !dbg !5817
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5793, metadata !DIExpression()), !dbg !5804
  %5 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5818
  %next = getelementptr inbounds %struct.stack_var, %struct.stack_var* %5, i64 %i.0, i32 5, !dbg !5819
  %6 = load i64, i64* %next, align 8, !dbg !5819
  call void @llvm.dbg.value(metadata i64 %6, metadata !5792, metadata !DIExpression()), !dbg !5804
  br label %for.cond, !dbg !5820, !llvm.loop !5821

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.stack_var* [ %3, %for.cond ], !dbg !5804
  %last.0.lcssa = phi i64 [ %last.0, %for.cond ], !dbg !5810
  call void @llvm.dbg.value(metadata i64 %last.0.lcssa, metadata !5793, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i64 %last.0.lcssa, metadata !5793, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i64 %last.0.lcssa, metadata !5793, metadata !DIExpression()), !dbg !5804
  %next6 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %.lcssa, i64 %a, i32 5, !dbg !5823
  %7 = load i64, i64* %next6, align 8, !dbg !5823
  %next8 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %.lcssa, i64 %last.0.lcssa, i32 5, !dbg !5824
  store i64 %7, i64* %next8, align 8, !dbg !5825
  %8 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5826
  %next10 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %8, i64 %a, i32 5, !dbg !5827
  store i64 %b, i64* %next10, align 8, !dbg !5828
  %9 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5829
  %alignb = getelementptr inbounds %struct.stack_var, %struct.stack_var* %9, i64 %a, i32 3, !dbg !5831
  %10 = load i32, i32* %alignb, align 8, !dbg !5831
  %alignb13 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %9, i64 %b, i32 3, !dbg !5832
  %11 = load i32, i32* %alignb13, align 8, !dbg !5832
  %cmp14 = icmp ult i32 %10, %11, !dbg !5833
  br i1 %cmp14, label %if.then, label %if.end, !dbg !5834

if.then:                                          ; preds = %for.end
  store i32 %11, i32* %alignb, align 8, !dbg !5835
  br label %if.end, !dbg !5836

if.end:                                           ; preds = %if.then, %for.end
  %conflicts = getelementptr inbounds %struct.stack_var, %struct.stack_var* %0, i64 %b, i32 6, !dbg !5837
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %conflicts, align 8, !dbg !5837
  %tobool = icmp eq %struct.bitmap_head_def* %12, null, !dbg !5839
  br i1 %tobool, label %if.end30, label %if.then19, !dbg !5840

if.then19:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5795, metadata !DIExpression(DW_OP_deref)), !dbg !5804
  call void @llvm.dbg.value(metadata i32* %u, metadata !5803, metadata !DIExpression(DW_OP_deref)), !dbg !5804
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %12, i32 0, i32* nonnull %u) #7, !dbg !5841
  br label %for.cond21, !dbg !5841

for.cond21:                                       ; preds = %for.body23, %if.then19
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5795, metadata !DIExpression(DW_OP_deref)), !dbg !5804
  call void @llvm.dbg.value(metadata i32* %u, metadata !5803, metadata !DIExpression(DW_OP_deref)), !dbg !5804
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %u) #7, !dbg !5844
  %tobool22 = icmp eq i8 %call, 0, !dbg !5841
  br i1 %tobool22, label %for.end27, label %for.body23, !dbg !5841

for.body23:                                       ; preds = %for.cond21
  %13 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5846
  %14 = load i32, i32* %u, align 4, !dbg !5847
  call void @llvm.dbg.value(metadata i32 %14, metadata !5803, metadata !DIExpression()), !dbg !5804
  %idxprom = zext i32 %14 to i64, !dbg !5846
  %representative25 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %13, i64 %idxprom, i32 4, !dbg !5848
  %15 = load i64, i64* %representative25, align 8, !dbg !5848
  call fastcc void @add_stack_var_conflict(i64 %a, i64 %15) #7, !dbg !5849
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5795, metadata !DIExpression(DW_OP_deref)), !dbg !5804
  call void @llvm.dbg.value(metadata i32* %u, metadata !5803, metadata !DIExpression(DW_OP_deref)), !dbg !5804
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %u) #7, !dbg !5844
  br label %for.cond21, !dbg !5844, !llvm.loop !5850

for.end27:                                        ; preds = %for.cond21
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %conflicts, align 8, !dbg !5852
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %16) #6, !dbg !5852
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %conflicts, align 8, !dbg !5852
  br label %if.end30, !dbg !5853

if.end30:                                         ; preds = %if.end, %for.end27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !5854
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5854
  ret void, !dbg !5854
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_alias_info_with_stack_vars() unnamed_addr #5 !dbg !5855 {
entry:
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* null, metadata !5857, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5860, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata i64 0, metadata !5858, metadata !DIExpression()), !dbg !5884
  br label %for.cond, !dbg !5885

for.cond:                                         ; preds = %cleanup, %entry
  %var.0 = phi %union.tree_node* [ null, %entry ], [ %var.2, %cleanup ], !dbg !5886
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %cleanup ], !dbg !5887
  %decls_to_partitions.0 = phi %struct.pointer_map_t* [ null, %entry ], [ %decls_to_partitions.2, %cleanup ], !dbg !5888
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %decls_to_partitions.0, metadata !5857, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5858, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !5860, metadata !DIExpression()), !dbg !5884
  %0 = load i64, i64* @stack_vars_num, align 8, !dbg !5889
  %cmp = icmp ult i64 %i.0, %0, !dbg !5890
  br i1 %cmp, label %for.body, label %for.end35, !dbg !5891

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5861, metadata !DIExpression()), !dbg !5892
  %1 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5893
  %representative = getelementptr inbounds %struct.stack_var, %struct.stack_var* %1, i64 %i.0, i32 4, !dbg !5895
  %2 = load i64, i64* %representative, align 8, !dbg !5895
  %cmp1 = icmp eq i64 %2, %i.0, !dbg !5896
  br i1 %cmp1, label %lor.lhs.false, label %cleanup, !dbg !5897

lor.lhs.false:                                    ; preds = %for.body
  %next = getelementptr inbounds %struct.stack_var, %struct.stack_var* %1, i64 %i.0, i32 5, !dbg !5898
  %3 = load i64, i64* %next, align 8, !dbg !5898
  %cmp3 = icmp eq i64 %3, -1, !dbg !5899
  br i1 %cmp3, label %cleanup, label %if.end, !dbg !5900

if.end:                                           ; preds = %lor.lhs.false
  %tobool = icmp eq %struct.pointer_map_t* %decls_to_partitions.0, null, !dbg !5901
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !5903

if.then4:                                         ; preds = %if.end
  %call = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !5904
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %call, metadata !5857, metadata !DIExpression()), !dbg !5884
  %call5 = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !5906
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5907
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 3, !dbg !5908
  %5 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5908
  %decls_to_pointers = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %5, i64 0, i32 6, !dbg !5909
  store %struct.pointer_map_t* %call5, %struct.pointer_map_t** %decls_to_pointers, align 8, !dbg !5910
  br label %if.end6, !dbg !5911

if.end6:                                          ; preds = %if.end, %if.then4
  %decls_to_partitions.1 = phi %struct.pointer_map_t* [ %decls_to_partitions.0, %if.end ], [ %call, %if.then4 ], !dbg !5884
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %decls_to_partitions.1, metadata !5857, metadata !DIExpression()), !dbg !5884
  %cmp7 = icmp eq %union.tree_node* %var.0, null, !dbg !5912
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !5914

if.then8:                                         ; preds = %if.end6
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !5915
  %call9 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %6, i8* null) #6, !dbg !5916
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5860, metadata !DIExpression()), !dbg !5884
  br label %if.end10, !dbg !5917

if.end10:                                         ; preds = %if.then8, %if.end6
  %var.1 = phi %union.tree_node* [ %call9, %if.then8 ], [ %var.0, %if.end6 ], !dbg !5884
  call void @llvm.dbg.value(metadata %union.tree_node* %var.1, metadata !5860, metadata !DIExpression()), !dbg !5884
  %call11 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var.1, %union.gimple_statement_d* null) #7, !dbg !5918
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5865, metadata !DIExpression()), !dbg !5892
  %call12 = tail call %struct.bitmap_head_def* @bitmap_gc_alloc_stat() #6, !dbg !5919
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call12, metadata !5861, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5859, metadata !DIExpression()), !dbg !5884
  br label %for.cond13, !dbg !5920

for.cond13:                                       ; preds = %cond.end, %if.end10
  %j.0 = phi i64 [ %i.0, %if.end10 ], [ %20, %cond.end ], !dbg !5921
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !5859, metadata !DIExpression()), !dbg !5884
  %cmp14 = icmp eq i64 %j.0, -1, !dbg !5922
  br i1 %cmp14, label %for.end, label %for.body15, !dbg !5923

for.body15:                                       ; preds = %for.cond13
  %7 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5924
  %decl17 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %7, i64 %j.0, i32 0, !dbg !5925
  %8 = load %union.tree_node*, %union.tree_node** %decl17, align 8, !dbg !5925
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5867, metadata !DIExpression()), !dbg !5926
  %uid18 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5927
  %9 = load i32, i32* %uid18, align 4, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %9, metadata !5871, metadata !DIExpression()), !dbg !5926
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5928
  %bf.load = load i64, i64* %10, align 8, !dbg !5928
  %bf.cast = and i64 %bf.load, 65535, !dbg !5928
  %arrayidx19 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5928
  %11 = load i32, i32* %arrayidx19, align 4, !dbg !5928
  %cmp20 = icmp eq i32 %11, 3, !dbg !5928
  br i1 %cmp20, label %land.lhs.true, label %cond.true, !dbg !5928

land.lhs.true:                                    ; preds = %for.body15
  %call21 = tail call %union.tree_node* @referenced_var_lookup(i32 %9) #6, !dbg !5928
  %tobool22 = icmp eq %union.tree_node* %call21, null, !dbg !5928
  br i1 %tobool22, label %cond.true, label %cond.end, !dbg !5928

cond.true:                                        ; preds = %land.lhs.true, %for.body15
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 508, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5928
  br label %cond.end, !dbg !5928

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call23 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call12, i32 %9) #6, !dbg !5929
  %conv = zext i32 %9 to i64, !dbg !5930
  %12 = inttoptr i64 %conv to i8*, !dbg !5931
  %call24 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %decls_to_partitions.1, i8* %12) #6, !dbg !5932
  %13 = bitcast i8** %call24 to %struct.bitmap_head_def**, !dbg !5933
  store %struct.bitmap_head_def* %call12, %struct.bitmap_head_def** %13, align 8, !dbg !5934
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5935
  %gimple_df26 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 3, !dbg !5936
  %15 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df26, align 8, !dbg !5936
  %decls_to_pointers27 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %15, i64 0, i32 6, !dbg !5937
  %16 = load %struct.pointer_map_t*, %struct.pointer_map_t** %decls_to_pointers27, align 8, !dbg !5937
  %17 = bitcast %union.tree_node* %8 to i8*, !dbg !5938
  %call28 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %16, i8* %17) #6, !dbg !5939
  %18 = bitcast i8** %call28 to %union.tree_node**, !dbg !5940
  store %union.tree_node* %call11, %union.tree_node** %18, align 8, !dbg !5941
  %19 = load %struct.stack_var*, %struct.stack_var** @stack_vars, align 8, !dbg !5942
  %next30 = getelementptr inbounds %struct.stack_var, %struct.stack_var* %19, i64 %j.0, i32 5, !dbg !5943
  %20 = load i64, i64* %next30, align 8, !dbg !5943
  call void @llvm.dbg.value(metadata i64 %20, metadata !5859, metadata !DIExpression()), !dbg !5884
  br label %for.cond13, !dbg !5944, !llvm.loop !5945

for.end:                                          ; preds = %for.cond13
  %call31 = tail call %struct.ptr_info_def* @get_ptr_info(%union.tree_node* %call11) #6, !dbg !5947
  call void @llvm.dbg.value(metadata %struct.ptr_info_def* %call31, metadata !5866, metadata !DIExpression()), !dbg !5892
  %pt = getelementptr inbounds %struct.ptr_info_def, %struct.ptr_info_def* %call31, i64 0, i32 0, !dbg !5948
  tail call void @pt_solution_set(%struct.pt_solution* %pt, %struct.bitmap_head_def* %call12) #6, !dbg !5949
  br label %cleanup, !dbg !5950

cleanup:                                          ; preds = %for.body, %lor.lhs.false, %for.end
  %var.2 = phi %union.tree_node* [ %var.1, %for.end ], [ %var.0, %lor.lhs.false ], [ %var.0, %for.body ], !dbg !5884
  %decls_to_partitions.2 = phi %struct.pointer_map_t* [ %decls_to_partitions.1, %for.end ], [ %decls_to_partitions.0, %lor.lhs.false ], [ %decls_to_partitions.0, %for.body ], !dbg !5888
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %decls_to_partitions.2, metadata !5857, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %union.tree_node* %var.2, metadata !5860, metadata !DIExpression()), !dbg !5884
  %inc = add i64 %i.0, 1, !dbg !5951
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5858, metadata !DIExpression()), !dbg !5884
  br label %for.cond, !dbg !5952, !llvm.loop !5953

for.end35:                                        ; preds = %for.cond
  %decls_to_partitions.0.lcssa = phi %struct.pointer_map_t* [ %decls_to_partitions.0, %for.cond ], !dbg !5888
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %decls_to_partitions.0.lcssa, metadata !5857, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %decls_to_partitions.0.lcssa, metadata !5857, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %decls_to_partitions.0.lcssa, metadata !5857, metadata !DIExpression()), !dbg !5884
  %tobool36 = icmp eq %struct.pointer_map_t* %decls_to_partitions.0.lcssa, null, !dbg !5955
  br i1 %tobool36, label %if.end102, label %if.then37, !dbg !5956

if.then37:                                        ; preds = %for.end35
  %call39 = tail call %struct.pointer_set_t* @pointer_set_create() #6, !dbg !5957
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %call39, metadata !5875, metadata !DIExpression()), !dbg !5958
  %call40 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5959
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call40, metadata !5878, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.value(metadata i32 1, metadata !5872, metadata !DIExpression()), !dbg !5958
  br label %for.cond41, !dbg !5960

for.cond41:                                       ; preds = %for.inc95, %if.then37
  %i38.0 = phi i32 [ 1, %if.then37 ], [ %inc96, %for.inc95 ], !dbg !5961
  call void @llvm.dbg.value(metadata i32 %i38.0, metadata !5872, metadata !DIExpression()), !dbg !5958
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5962
  %gimple_df43 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 3, !dbg !5962
  %22 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df43, align 8, !dbg !5962
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %22, i64 0, i32 2, !dbg !5962
  %23 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !5962
  %tobool44 = icmp eq %struct.VEC_tree_gc* %23, null, !dbg !5962
  br i1 %tobool44, label %cond.end51, label %cond.true45, !dbg !5962

cond.true45:                                      ; preds = %for.cond41
  %base49 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %23, i64 0, i32 0, !dbg !5962
  br label %cond.end51, !dbg !5962

cond.end51:                                       ; preds = %for.cond41, %cond.true45
  %cond52 = phi %struct.VEC_tree_base* [ %base49, %cond.true45 ], [ null, %for.cond41 ], !dbg !5962
  %call53 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond52) #7, !dbg !5962
  %cmp54 = icmp ult i32 %i38.0, %call53, !dbg !5963
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5958
  %gimple_df59 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 3, !dbg !5958
  %25 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df59, align 8, !dbg !5958
  br i1 %cmp54, label %for.body56, label %for.end97, !dbg !5964

for.body56:                                       ; preds = %cond.end51
  %ssa_names60 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %25, i64 0, i32 2, !dbg !5965
  %26 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names60, align 8, !dbg !5965
  %tobool61 = icmp eq %struct.VEC_tree_gc* %26, null, !dbg !5965
  br i1 %tobool61, label %cond.end68, label %cond.true62, !dbg !5965

cond.true62:                                      ; preds = %for.body56
  %base66 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %26, i64 0, i32 0, !dbg !5965
  br label %cond.end68, !dbg !5965

cond.end68:                                       ; preds = %for.body56, %cond.true62
  %cond69 = phi %struct.VEC_tree_base* [ %base66, %cond.true62 ], [ null, %for.body56 ], !dbg !5965
  %call70 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond69, i32 %i38.0) #7, !dbg !5965
  call void @llvm.dbg.value(metadata %union.tree_node* %call70, metadata !5879, metadata !DIExpression()), !dbg !5966
  %tobool72 = icmp eq %union.tree_node* %call70, null, !dbg !5967
  br i1 %tobool72, label %for.inc95, label %land.lhs.true73, !dbg !5969

land.lhs.true73:                                  ; preds = %cond.end68
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5970
  %27 = bitcast %union.tree_node** %type to i64**, !dbg !5970
  %28 = load i64*, i64** %27, align 8, !dbg !5970
  %bf.load75 = load i64, i64* %28, align 8, !dbg !5970
  %bf.cast771 = and i64 %bf.load75, 65535, !dbg !5970
  %cmp78 = icmp eq i64 %bf.cast771, 10, !dbg !5970
  br i1 %cmp78, label %land.lhs.true89, label %lor.lhs.false80, !dbg !5970

lor.lhs.false80:                                  ; preds = %land.lhs.true73
  %cmp87 = icmp eq i64 %bf.cast771, 12, !dbg !5970
  br i1 %cmp87, label %land.lhs.true89, label %for.inc95, !dbg !5971

land.lhs.true89:                                  ; preds = %lor.lhs.false80, %land.lhs.true73
  %ptr_info = getelementptr inbounds %union.tree_node, %union.tree_node* %call70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5972
  %29 = bitcast %union.tree_node** %ptr_info to %struct.ptr_info_def**, !dbg !5972
  %30 = load %struct.ptr_info_def*, %struct.ptr_info_def** %29, align 8, !dbg !5972
  call void @llvm.dbg.value(metadata %struct.ptr_info_def* %30, metadata !5883, metadata !DIExpression()), !dbg !5966
  %cmp90 = icmp eq %struct.ptr_info_def* %30, null, !dbg !5973
  br i1 %cmp90, label %for.inc95, label %if.then92, !dbg !5974

if.then92:                                        ; preds = %land.lhs.true89
  %pt93 = getelementptr inbounds %struct.ptr_info_def, %struct.ptr_info_def* %30, i64 0, i32 0, !dbg !5975
  tail call fastcc void @add_partitioned_vars_to_ptset(%struct.pt_solution* nonnull %pt93, %struct.pointer_map_t* nonnull %decls_to_partitions.0.lcssa, %struct.pointer_set_t* %call39, %struct.bitmap_head_def* %call40) #7, !dbg !5976
  br label %for.inc95, !dbg !5976

for.inc95:                                        ; preds = %land.lhs.true89, %cond.end68, %lor.lhs.false80, %if.then92
  %inc96 = add i32 %i38.0, 1, !dbg !5977
  call void @llvm.dbg.value(metadata i32 %inc96, metadata !5872, metadata !DIExpression()), !dbg !5958
  br label %for.cond41, !dbg !5978, !llvm.loop !5979

for.end97:                                        ; preds = %cond.end51
  %.lcssa = phi %struct.gimple_df* [ %25, %cond.end51 ], !dbg !5958
  %escaped = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %.lcssa, i64 0, i32 4, !dbg !5981
  tail call fastcc void @add_partitioned_vars_to_ptset(%struct.pt_solution* nonnull %escaped, %struct.pointer_map_t* nonnull %decls_to_partitions.0.lcssa, %struct.pointer_set_t* %call39, %struct.bitmap_head_def* %call40) #7, !dbg !5982
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5983
  %gimple_df101 = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 3, !dbg !5984
  %32 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df101, align 8, !dbg !5984
  %callused = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %32, i64 0, i32 5, !dbg !5985
  tail call fastcc void @add_partitioned_vars_to_ptset(%struct.pt_solution* nonnull %callused, %struct.pointer_map_t* nonnull %decls_to_partitions.0.lcssa, %struct.pointer_set_t* %call39, %struct.bitmap_head_def* %call40) #7, !dbg !5986
  tail call void @pointer_set_destroy(%struct.pointer_set_t* %call39) #6, !dbg !5987
  tail call void @pointer_map_destroy(%struct.pointer_map_t* nonnull %decls_to_partitions.0.lcssa) #6, !dbg !5988
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call40) #6, !dbg !5989
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5878, metadata !DIExpression()), !dbg !5958
  br label %if.end102, !dbg !5990

if.end102:                                        ; preds = %for.end35, %for.end97
  ret void, !dbg !5991
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !5992 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6001, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !6002, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i32 0, metadata !6003, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6004, metadata !DIExpression()), !dbg !6005
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !6006
  %1 = load i64, i64* %0, align 8, !dbg !6006
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !6007
  store i64 %1, i64* %2, align 8, !dbg !6007
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !6008
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !6009
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !6010
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !6013
  br label %while.body, !dbg !6013

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !6014
  br i1 %tobool, label %if.then, label %if.end, !dbg !6015

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !6016
  br label %while.end, !dbg !6018

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !6019

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !6013, !llvm.loop !6020

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !6022

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !6022
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !6024
  %7 = load i32, i32* %indx9, align 8, !dbg !6024
  %cmp11 = icmp eq i32 %7, 0, !dbg !6025
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !6026

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !6027
  %8 = load i32, i32* %indx14, align 8, !dbg !6027
  %mul = shl i32 %8, 7, !dbg !6028
  call void @llvm.dbg.value(metadata i32 %mul, metadata !6003, metadata !DIExpression()), !dbg !6005
  br label %if.end15, !dbg !6029

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !6003, metadata !DIExpression()), !dbg !6005
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !6030
  store i32 0, i32* %word_no, align 8, !dbg !6031
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !6032
  %9 = load i64, i64* %arrayidx, align 8, !dbg !6032
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6033
  store i64 %9, i64* %bits21, align 8, !dbg !6034
  %tobool23 = icmp eq i64 %9, 0, !dbg !6035
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !6035
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !6036
  call void @llvm.dbg.value(metadata i32 %add, metadata !6003, metadata !DIExpression()), !dbg !6005
  store i32 %add, i32* %bit_no, align 4, !dbg !6037
  ret void, !dbg !6038
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !6039 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6043, metadata !DIExpression()), !dbg !6048
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6044, metadata !DIExpression()), !dbg !6048
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6049
  %0 = load i64, i64* %bits, align 8, !dbg !6049
  %tobool = icmp eq i64 %0, 0, !dbg !6050
  br i1 %tobool, label %if.end, label %next_bit, !dbg !6051

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !6052
  br label %next_bit, !dbg !6055

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !6045), !dbg !6056
  br label %while.cond, !dbg !6055

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !6057
  %and = and i64 %2, 1, !dbg !6058
  %tobool2 = icmp eq i64 %and, 0, !dbg !6059
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !6055

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !6060
  store i64 %shr, i64* %bits, align 8, !dbg !6060
  %3 = load i32, i32* %bit_no, align 4, !dbg !6062
  %add = add i32 %3, 1, !dbg !6062
  store i32 %add, i32* %bit_no, align 4, !dbg !6062
  %.pre = load i64, i64* %bits, align 8, !dbg !6057
  br label %while.cond, !dbg !6055, !llvm.loop !6063

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !6065
  %sub = add i32 %4, 63, !dbg !6066
  %div = and i32 %sub, -64, !dbg !6067
  store i32 %div, i32* %bit_no, align 4, !dbg !6068
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !6069
  %5 = load i32, i32* %word_no, align 8, !dbg !6070
  %inc = add i32 %5, 1, !dbg !6070
  store i32 %inc, i32* %word_no, align 8, !dbg !6070
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !6071
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !6071
  br label %while.body6, !dbg !6072

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !6073

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !6074
  %cmp = icmp eq i32 %8, 2, !dbg !6075
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !6071
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !6073

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !6052
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !6052
  %10 = load i64, i64* %arrayidx, align 8, !dbg !6052
  store i64 %10, i64* %bits, align 8, !dbg !6076
  %tobool14 = icmp eq i64 %10, 0, !dbg !6077
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !6079

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !6080
  %add17 = add i32 %11, 64, !dbg !6080
  store i32 %add17, i32* %bit_no, align 4, !dbg !6080
  %12 = load i32, i32* %word_no, align 8, !dbg !6081
  %inc19 = add i32 %12, 1, !dbg !6081
  store i32 %inc19, i32* %word_no, align 8, !dbg !6081
  br label %while.cond7, !dbg !6073, !llvm.loop !6082

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !6071
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !6084
  %14 = load i64, i64* %13, align 8, !dbg !6084
  store i64 %14, i64* %6, align 8, !dbg !6085
  %tobool24 = icmp eq i64 %14, 0, !dbg !6086
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !6088

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !6088
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !6089
  %16 = load i32, i32* %indx, align 8, !dbg !6089
  %mul28 = shl i32 %16, 7, !dbg !6090
  store i32 %mul28, i32* %bit_no, align 4, !dbg !6091
  store i32 0, i32* %word_no, align 8, !dbg !6092
  br label %while.body6, !dbg !6072, !llvm.loop !6093

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !6095

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !6095

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !6048
  ret i8 %retval.0, !dbg !6095
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !6096 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6100, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6101, metadata !DIExpression()), !dbg !6102
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6103
  %0 = load i64, i64* %bits, align 8, !dbg !6104
  %shr = lshr i64 %0, 1, !dbg !6104
  store i64 %shr, i64* %bits, align 8, !dbg !6104
  %1 = load i32, i32* %bit_no, align 4, !dbg !6105
  %add = add i32 %1, 1, !dbg !6105
  store i32 %add, i32* %bit_no, align 4, !dbg !6105
  ret void, !dbg !6106
}

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6107 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6112, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !6113, metadata !DIExpression()), !dbg !6114
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6115
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* null) #6, !dbg !6116
  ret %union.tree_node* %call, !dbg !6117
}

declare dso_local %struct.bitmap_head_def* @bitmap_gc_alloc_stat() local_unnamed_addr #2

declare dso_local %union.tree_node* @referenced_var_lookup(i32) local_unnamed_addr #2

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

declare dso_local %struct.ptr_info_def* @get_ptr_info(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @pt_solution_set(%struct.pt_solution*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local %struct.pointer_set_t* @pointer_set_create() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !6118 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6124, metadata !DIExpression()), !dbg !6125
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6126
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6126

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6126
  %0 = load i32, i32* %num, align 8, !dbg !6126
  br label %cond.end, !dbg !6126

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6126
  ret i32 %cond, !dbg !6126
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6127 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6131, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6132, metadata !DIExpression()), !dbg !6133
  br label %land.end, !dbg !6134

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6134
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6134
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6134
  ret %union.tree_node* %0, !dbg !6134
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_partitioned_vars_to_ptset(%struct.pt_solution* %pt, %struct.pointer_map_t* %decls_to_partitions, %struct.pointer_set_t* %visited, %struct.bitmap_head_def* %temp) unnamed_addr #5 !dbg !6135 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt, metadata !6140, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %decls_to_partitions, metadata !6141, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %visited, metadata !6142, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %temp, metadata !6143, metadata !DIExpression()), !dbg !6147
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6148
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6148
  %1 = bitcast i32* %i to i8*, !dbg !6149
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6149
  %2 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 0, !dbg !6150
  %bf.load = load i8, i8* %2, align 8, !dbg !6150
  %bf.clear = and i8 %bf.load, 1, !dbg !6150
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !6152
  br i1 %tobool, label %lor.lhs.false, label %cleanup, !dbg !6153

lor.lhs.false:                                    ; preds = %entry
  %vars = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 1, !dbg !6154
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars, align 8, !dbg !6154
  %cmp = icmp eq %struct.bitmap_head_def* %3, null, !dbg !6155
  br i1 %cmp, label %cleanup, label %lor.lhs.false1, !dbg !6156

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %4 = bitcast %struct.bitmap_head_def* %3 to i8*, !dbg !6156
  %call = tail call i32 @pointer_set_insert(%struct.pointer_set_t* %visited, i8* nonnull %4) #6, !dbg !6157
  %tobool3 = icmp eq i32 %call, 0, !dbg !6157
  br i1 %tobool3, label %if.end, label %cleanup, !dbg !6158

if.end:                                           ; preds = %lor.lhs.false1
  tail call void @bitmap_clear(%struct.bitmap_head_def* %temp) #6, !dbg !6159
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars, align 8, !dbg !6160
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6144, metadata !DIExpression(DW_OP_deref)), !dbg !6147
  call void @llvm.dbg.value(metadata i32* %i, metadata !6145, metadata !DIExpression(DW_OP_deref)), !dbg !6147
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %5, i32 0, i32* nonnull %i) #7, !dbg !6160
  %tobool7 = icmp eq %struct.bitmap_head_def* %temp, null, !dbg !6162
  br i1 %tobool7, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !6160

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %for.cond, !dbg !6160

if.end.split.us:                                  ; preds = %if.end
  br label %for.cond.us, !dbg !6160

for.cond.us:                                      ; preds = %for.inc.us, %if.end.split.us
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6144, metadata !DIExpression(DW_OP_deref)), !dbg !6147
  call void @llvm.dbg.value(metadata i32* %i, metadata !6145, metadata !DIExpression(DW_OP_deref)), !dbg !6147
  %call5.us = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6165
  %tobool6.us = icmp eq i8 %call5.us, 0, !dbg !6160
  br i1 %tobool6.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !6160

for.body.us:                                      ; preds = %for.cond.us
  %6 = load i32, i32* %i, align 4, !dbg !6166
  call void @llvm.dbg.value(metadata i32 %6, metadata !6145, metadata !DIExpression()), !dbg !6147
  %conv.us = zext i32 %6 to i64, !dbg !6167
  %7 = inttoptr i64 %conv.us to i8*, !dbg !6168
  %call11.us = call i8** @pointer_map_contains(%struct.pointer_map_t* %decls_to_partitions, i8* %7) #6, !dbg !6169
  call void @llvm.dbg.value(metadata i8** %call11.us, metadata !6146, metadata !DIExpression()), !dbg !6147
  %tobool12.us = icmp eq i8** %call11.us, null, !dbg !6170
  br i1 %tobool12.us, label %for.inc.us, label %if.then13.us, !dbg !6171

if.then13.us:                                     ; preds = %for.body.us
  %8 = bitcast i8** %call11.us to %struct.bitmap_head_def**, !dbg !6172
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %8, metadata !6146, metadata !DIExpression()), !dbg !6147
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %8, align 8, !dbg !6173
  %call14.us = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* null, %struct.bitmap_head_def* %9) #6, !dbg !6174
  br label %for.inc.us, !dbg !6174

for.inc.us:                                       ; preds = %if.then13.us, %for.body.us
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6144, metadata !DIExpression(DW_OP_deref)), !dbg !6147
  call void @llvm.dbg.value(metadata i32* %i, metadata !6145, metadata !DIExpression(DW_OP_deref)), !dbg !6147
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6165
  br label %for.cond.us, !dbg !6165, !llvm.loop !6175

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !6177

for.cond:                                         ; preds = %for.inc, %if.end.if.end.split_crit_edge
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6144, metadata !DIExpression(DW_OP_deref)), !dbg !6147
  call void @llvm.dbg.value(metadata i32* %i, metadata !6145, metadata !DIExpression(DW_OP_deref)), !dbg !6147
  %call5 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6165
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6160
  br i1 %tobool6, label %for.end.us-lcssa, label %for.body, !dbg !6160

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !6179
  call void @llvm.dbg.value(metadata i32 %10, metadata !6145, metadata !DIExpression()), !dbg !6147
  %call9 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %temp, i32 %10) #6, !dbg !6180
  %tobool10 = icmp eq i32 %call9, 0, !dbg !6180
  br i1 %tobool10, label %land.lhs.true, label %for.inc, !dbg !6181

land.lhs.true:                                    ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !6166
  call void @llvm.dbg.value(metadata i32 %11, metadata !6145, metadata !DIExpression()), !dbg !6147
  %conv = zext i32 %11 to i64, !dbg !6167
  %12 = inttoptr i64 %conv to i8*, !dbg !6168
  %call11 = call i8** @pointer_map_contains(%struct.pointer_map_t* %decls_to_partitions, i8* %12) #6, !dbg !6169
  call void @llvm.dbg.value(metadata i8** %call11, metadata !6146, metadata !DIExpression()), !dbg !6147
  %tobool12 = icmp eq i8** %call11, null, !dbg !6170
  br i1 %tobool12, label %for.inc, label %if.then13, !dbg !6171

if.then13:                                        ; preds = %land.lhs.true
  %13 = bitcast i8** %call11 to %struct.bitmap_head_def**, !dbg !6172
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %13, metadata !6146, metadata !DIExpression()), !dbg !6147
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %13, align 8, !dbg !6173
  %call14 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* nonnull %temp, %struct.bitmap_head_def* %14) #6, !dbg !6174
  br label %for.inc, !dbg !6174

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then13
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6144, metadata !DIExpression(DW_OP_deref)), !dbg !6147
  call void @llvm.dbg.value(metadata i32* %i, metadata !6145, metadata !DIExpression(DW_OP_deref)), !dbg !6147
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6165
  br label %for.cond, !dbg !6165, !llvm.loop !6175

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !6177

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %temp, i64 0, i32 0, !dbg !6177
  %15 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !6177
  %tobool16 = icmp eq %struct.bitmap_element_def* %15, null, !dbg !6177
  br i1 %tobool16, label %cleanup, label %if.then17, !dbg !6182

if.then17:                                        ; preds = %for.end
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars, align 8, !dbg !6183
  %call19 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %16, %struct.bitmap_head_def* %temp) #6, !dbg !6184
  br label %cleanup, !dbg !6184

cleanup:                                          ; preds = %for.end, %lor.lhs.false1, %entry, %if.then17, %lor.lhs.false
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6185
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6185
  ret void, !dbg !6185
}

declare dso_local void @pointer_set_destroy(%struct.pointer_set_t*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local i32 @pointer_set_insert(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6186 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6192, metadata !DIExpression()), !dbg !6193
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6194
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6194

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6194
  %0 = load i32, i32* %num, align 8, !dbg !6194
  br label %cond.end, !dbg !6194

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6194
  ret i32 %cond, !dbg !6194
}

declare dso_local void @init_rtl_bb_info(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6195 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6199, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6200, metadata !DIExpression()), !dbg !6201
  br label %land.end, !dbg !6202

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6202
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6202
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6202
  ret %struct.edge_def* %0, !dbg !6202
}

declare dso_local %union.tree_node* @gimple_block_label(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @emit_jump(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @label_rtx(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @create_basic_block(i8*, i8*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_last_insn() local_unnamed_addr #2

declare dso_local void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

declare dso_local void @update_bb_for_insn(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6203 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6208
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6208
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6208

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6208
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6208
  br label %cond.end, !dbg !6208

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6208
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6208
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !6209
  %conv3 = zext i1 %cmp to i8, !dbg !6210
  ret i8 %conv3, !dbg !6211
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6212 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6215
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6215
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6215

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6215
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6215
  br label %cond.end, !dbg !6215

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6215
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !6215
  ret %struct.edge_def* %call2, !dbg !6216
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6217 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !6222
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6222

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6222
  br label %cond.end, !dbg !6222

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !6223
  ret %struct.VEC_edge_gc* %0, !dbg !6224
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !6225 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !6229, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !6230, metadata !DIExpression()), !dbg !6232
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %seq) #7, !dbg !6233
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !6234
  store %struct.gimple_seq_node_d* %call, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !6235
  %seq1 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !6236
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !6237
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !6238
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !6239

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !6240
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6240
  %tobool4 = icmp eq %union.gimple_statement_d* %0, null, !dbg !6241
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !6242

cond.true:                                        ; preds = %land.lhs.true
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %0) #7, !dbg !6243
  br label %cond.end, !dbg !6242

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.basic_block_def* [ %call7, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !6242
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !6244
  store %struct.basic_block_def* %cond, %struct.basic_block_def** %bb, align 8, !dbg !6245
  ret void, !dbg !6246
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6247 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6251, metadata !DIExpression()), !dbg !6252
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6253
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6253
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6253
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6253

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6253
  br label %cond.end, !dbg !6253

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6253
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6253
  %cmp = icmp eq i32 %call, 1, !dbg !6254
  %conv2 = zext i1 %cmp to i8, !dbg !6253
  ret i8 %conv2, !dbg !6255
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6256 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6260, metadata !DIExpression()), !dbg !6261
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !6262
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !6263
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6263
  ret %struct.basic_block_def* %0, !dbg !6264
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6265 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6267, metadata !DIExpression()), !dbg !6268
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6269
  ret %union.tree_node* %call, !dbg !6270
}

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6271 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6275, metadata !DIExpression()), !dbg !6276
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !6277
  %tobool = icmp eq i8 %call, 0, !dbg !6277
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6277

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6277
  br label %cond.end, !dbg !6277

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6278
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6278
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6278
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6278

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6278
  br label %cond.end5, !dbg !6278

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6278
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !6278
  ret %struct.edge_def* %call7, !dbg !6279
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !6280 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !6282, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !6283, metadata !DIExpression()), !dbg !6285
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %seq) #7, !dbg !6286
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !6287
  store %struct.gimple_seq_node_d* %call, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !6288
  %seq1 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !6289
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !6290
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !6291
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !6292

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !6293
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6293
  %tobool4 = icmp eq %union.gimple_statement_d* %0, null, !dbg !6294
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !6295

cond.true:                                        ; preds = %land.lhs.true
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %0) #7, !dbg !6296
  br label %cond.end, !dbg !6295

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.basic_block_def* [ %call7, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !6295
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !6297
  store %struct.basic_block_def* %cond, %struct.basic_block_def** %bb, align 8, !dbg !6298
  ret void, !dbg !6299
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_gimple_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !6300 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6304, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 0, metadata !6305, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6306, metadata !DIExpression()), !dbg !6311
  %0 = load i32, i32* @input_location, align 4, !dbg !6312
  call void @llvm.dbg.value(metadata i32 %0, metadata !6307, metadata !DIExpression()), !dbg !6311
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6313
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6306, metadata !DIExpression()), !dbg !6311
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6314
  %tobool = icmp eq %struct.function* %1, null, !dbg !6314
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6314

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1971, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6314
  br label %cond.end, !dbg !6314

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %stmt) #7, !dbg !6315
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6315
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6317

if.then:                                          ; preds = %cond.end
  %call3 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !6318
  store i32 %call3, i32* @input_location, align 4, !dbg !6320
  tail call void @set_curr_insn_source_location(i32 %call3) #6, !dbg !6321
  %call4 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %stmt) #7, !dbg !6322
  tail call void @set_curr_insn_block(%union.tree_node* %call4) #6, !dbg !6323
  br label %if.end, !dbg !6324

if.end:                                           ; preds = %cond.end, %if.then
  tail call fastcc void @expand_gimple_stmt_1(%union.gimple_statement_d* %stmt) #7, !dbg !6325
  tail call void @free_temp_slots() #6, !dbg !6326
  store i32 %0, i32* @input_location, align 4, !dbg !6327
  %call5 = tail call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %stmt) #6, !dbg !6328
  call void @llvm.dbg.value(metadata i32 %call5, metadata !6305, metadata !DIExpression()), !dbg !6311
  %tobool6 = icmp eq i32 %call5, 0, !dbg !6329
  br i1 %tobool6, label %if.end26, label %if.then7, !dbg !6330

if.then7:                                         ; preds = %if.end
  %call8 = tail call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %call) #6, !dbg !6331
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !6308, metadata !DIExpression()), !dbg !6333
  br label %for.cond, !dbg !6334

for.cond:                                         ; preds = %for.inc, %if.then7
  %insn.0 = phi %struct.rtx_def* [ %call8, %if.then7 ], [ %call25, %for.inc ], !dbg !6335
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6308, metadata !DIExpression()), !dbg !6333
  %tobool9 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6336
  br i1 %tobool9, label %if.end26.loopexit, label %for.body, !dbg !6336

for.body:                                         ; preds = %for.cond
  %call10 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %insn.0, i32 25, %struct.rtx_def* null) #6, !dbg !6337
  %tobool11 = icmp eq %struct.rtx_def* %call10, null, !dbg !6337
  br i1 %tobool11, label %land.lhs.true, label %for.inc, !dbg !6341

land.lhs.true:                                    ; preds = %for.body
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !6342
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6342
  %3 = bitcast %union.rtunion_def* %2 to i32**, !dbg !6342
  %4 = load i32*, i32** %3, align 8, !dbg !6342
  %bf.load = load i32, i32* %4, align 8, !dbg !6342
  %bf.clear = and i32 %bf.load, 65535, !dbg !6342
  %cmp = icmp eq i32 %bf.clear, 25, !dbg !6343
  br i1 %cmp, label %for.inc, label %land.lhs.true12, !dbg !6344

land.lhs.true12:                                  ; preds = %land.lhs.true
  %cmp19 = icmp eq i32 %bf.clear, 24, !dbg !6345
  br i1 %cmp19, label %for.inc, label %land.lhs.true20, !dbg !6346

land.lhs.true20:                                  ; preds = %land.lhs.true12
  %call21 = tail call zeroext i8 @insn_could_throw_p(%struct.rtx_def* nonnull %insn.0) #6, !dbg !6347
  %tobool22 = icmp eq i8 %call21, 0, !dbg !6347
  br i1 %tobool22, label %for.inc, label %if.then23, !dbg !6348

if.then23:                                        ; preds = %land.lhs.true20
  tail call void @make_reg_eh_region_note(%struct.rtx_def* nonnull %insn.0, i32 0, i32 %call5) #6, !dbg !6349
  br label %for.inc, !dbg !6349

for.inc:                                          ; preds = %land.lhs.true20, %land.lhs.true12, %land.lhs.true, %for.body, %if.then23
  %call25 = tail call %struct.rtx_def* @next_real_insn(%struct.rtx_def* nonnull %insn.0) #6, !dbg !6350
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !6308, metadata !DIExpression()), !dbg !6333
  br label %for.cond, !dbg !6351, !llvm.loop !6352

if.end26.loopexit:                                ; preds = %for.cond
  br label %if.end26, !dbg !6354

if.end26:                                         ; preds = %if.end26.loopexit, %if.end
  ret %struct.rtx_def* %call, !dbg !6354
}

declare dso_local %struct.rtx_def* @emit_label(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_note_after(i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @maybe_dump_rtl_for_gimple_stmt(%union.gimple_statement_d* %stmt, %struct.rtx_def* %since) unnamed_addr #5 !dbg !6355 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6359, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata %struct.rtx_def* %since, metadata !6360, metadata !DIExpression()), !dbg !6361
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6362
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !6362
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6364

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !6365
  %and = and i32 %1, 8, !dbg !6366
  %tobool1 = icmp eq i32 %and, 0, !dbg !6366
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6367

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !6368
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6370
  %3 = load i32, i32* @dump_flags, align 4, !dbg !6371
  %and2 = and i32 %3, 128, !dbg !6372
  %or = or i32 %and2, 2, !dbg !6373
  tail call void @print_gimple_stmt(%struct._IO_FILE* %2, %union.gimple_statement_d* %stmt, i32 0, i32 %or) #6, !dbg !6374
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6375
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !6376
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6377
  %tobool4 = icmp eq %struct.rtx_def* %since, null, !dbg !6378
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !6378

cond.true:                                        ; preds = %if.then
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %since, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6379
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !6379
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6379
  br label %cond.end, !dbg !6378

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi %struct.rtx_def* [ %7, %cond.true ], [ null, %if.then ], !dbg !6378
  tail call void @print_rtl(%struct._IO_FILE* %5, %struct.rtx_def* %cond) #6, !dbg !6380
  br label %if.end, !dbg !6381

if.end:                                           ; preds = %land.lhs.true, %entry, %cond.end
  ret void, !dbg !6382
}

declare dso_local i32 @get_curr_insn_source_location() local_unnamed_addr #2

declare dso_local %union.tree_node* @get_curr_insn_block() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6383 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6388, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6389, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32 1, metadata !6390, metadata !DIExpression()), !dbg !6391
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !6392
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6393
  store i32 1, i32* %iter_type, align 4, !dbg !6394
  %call = tail call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6395
  ret %union.tree_node* %call, !dbg !6396
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6397 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6403, metadata !DIExpression()), !dbg !6404
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6405
  %0 = load i8, i8* %done, align 8, !dbg !6405
  ret i8 %0, !dbg !6406
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @get_gimple_for_ssa_name(%union.tree_node* %exp) unnamed_addr #0 !dbg !6407 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6411, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata i32 undef, metadata !6412, metadata !DIExpression()), !dbg !6413
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 1), align 8, !dbg !6414
  %tobool = icmp eq %struct.bitmap_head_def* %0, null, !dbg !6416
  br i1 %tobool, label %cleanup, label %land.lhs.true, !dbg !6417

land.lhs.true:                                    ; preds = %entry
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6418
  %1 = bitcast %union.tree_node** %version to i32*, !dbg !6418
  %2 = load i32, i32* %1, align 8, !dbg !6418
  call void @llvm.dbg.value(metadata i32 %2, metadata !6412, metadata !DIExpression()), !dbg !6413
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %0, i32 %2) #6, !dbg !6419
  %tobool1 = icmp eq i32 %call, 0, !dbg !6419
  br i1 %tobool1, label %cleanup, label %if.then, !dbg !6420

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6421
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6421
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !6421
  br label %cleanup, !dbg !6422

cleanup:                                          ; preds = %land.lhs.true, %entry, %if.then
  %retval.0 = phi %union.gimple_statement_d* [ %4, %if.then ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !6413
  ret %union.gimple_statement_d* %retval.0, !dbg !6423
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !6424 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6429, metadata !DIExpression()), !dbg !6431
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6430, metadata !DIExpression()), !dbg !6431
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6432
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6433
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !6434
  store i40* %imm_uses, i40** %0, align 8, !dbg !6434
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !6435
  %1 = bitcast i40* %next to i64*, !dbg !6435
  %2 = load i64, i64* %1, align 8, !dbg !6435
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6436
  store i64 %2, i64* %3, align 8, !dbg !6436
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6437
  %tobool = icmp eq i8 %call, 0, !dbg !6437
  br i1 %tobool, label %if.end, label %return, !dbg !6439

if.end:                                           ; preds = %entry
  %imm_use2 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6440
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use2, align 8, !dbg !6440
  br label %return, !dbg !6441

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !6431
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6442
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6443 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6449, metadata !DIExpression()), !dbg !6450
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6451
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6451
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6452
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !6452
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !6453
  %conv1 = zext i1 %cmp to i8, !dbg !6454
  ret i8 %conv1, !dbg !6455
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !6456 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !6458, metadata !DIExpression()), !dbg !6459
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %s) #7, !dbg !6460
  %tobool = icmp eq i8 %call, 0, !dbg !6460
  br i1 %tobool, label %return, label %if.then, !dbg !6462

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !6463
  %bf.load = load i32, i32* %0, align 8, !dbg !6463
  %cmp = icmp ult i32 %bf.load, 65536, !dbg !6464
  %conv1 = zext i1 %cmp to i8, !dbg !6465
  br label %return, !dbg !6466

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv1, %if.then ], [ 0, %entry ], !dbg !6459
  ret i8 %retval.0, !dbg !6467
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6468 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6472, metadata !DIExpression()), !dbg !6474
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6475
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6475
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !6473, metadata !DIExpression()), !dbg !6474
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !6476
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6476
  %2 = load i64, i64* %1, align 8, !dbg !6476
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6477
  store i64 %2, i64* %3, align 8, !dbg !6477
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6478
  %tobool = icmp eq i8 %call, 0, !dbg !6478
  br i1 %tobool, label %if.end, label %cleanup, !dbg !6480

if.end:                                           ; preds = %entry
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6481
  br label %cleanup, !dbg !6482

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !6474
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6483
}

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_tei_stat(i32, i32, %union.tree_node*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_debug_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !6484 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6488, metadata !DIExpression()), !dbg !6490
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6489, metadata !DIExpression()), !dbg !6490
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6491
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6492
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !6493
  store i40* %imm_uses, i40** %0, align 8, !dbg !6493
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !6494
  %1 = bitcast i40* %next to i64*, !dbg !6494
  %2 = load i64, i64* %1, align 8, !dbg !6494
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6495
  store i64 %2, i64* %3, align 8, !dbg !6495
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !6496
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next_imm_name, align 8, !dbg !6497
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6498
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6499
  %next3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !6500
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next3, align 8, !dbg !6501
  %stmt = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 2, i32 0, !dbg !6502
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !6503
  %use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 3, !dbg !6504
  store %union.tree_node** null, %union.tree_node*** %use, align 8, !dbg !6505
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6506
  %tobool = icmp eq i8 %call, 0, !dbg !6506
  br i1 %tobool, label %if.end, label %return, !dbg !6508

if.end:                                           ; preds = %entry
  %imm_use6 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6509
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !6509
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !6510
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !6511
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !6511
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !6511
  br label %return, !dbg !6512

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end ], [ null, %entry ], !dbg !6490
  ret %union.gimple_statement_d* %retval.0, !dbg !6513
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6514 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6516, metadata !DIExpression()), !dbg !6517
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6518
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6518
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6519
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !6519
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !6520
  %conv1 = zext i1 %cmp to i8, !dbg !6521
  ret i8 %conv1, !dbg !6522
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6523 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6525, metadata !DIExpression()), !dbg !6526
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6527
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6527
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !6528
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6528
  %2 = load i64, i64* %1, align 8, !dbg !6528
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !6529
  %3 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !6530
  store i64 %2, i64* %3, align 8, !dbg !6530
  ret %struct.ssa_use_operand_d* %0, !dbg !6531
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6532 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6534, metadata !DIExpression()), !dbg !6535
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6536
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6536
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6537
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %iter_node, !dbg !6538
  %conv1 = zext i1 %cmp to i8, !dbg !6539
  ret i8 %conv1, !dbg !6540
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !6541 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !6545, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !6546, metadata !DIExpression()), !dbg !6547
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #7, !dbg !6548
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !6549
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !6549
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !6550
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #7, !dbg !6551
  ret void, !dbg !6552
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6553 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6555, metadata !DIExpression()), !dbg !6556
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !6557
  %0 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !6557
  %1 = load i64, i64* %0, align 8, !dbg !6557
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6558
  store i64 %1, i64* %2, align 8, !dbg !6558
  %call = tail call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6559
  %tobool = icmp eq i8 %call, 0, !dbg !6559
  br i1 %tobool, label %if.else, label %return, !dbg !6561

if.else:                                          ; preds = %entry
  %imm_use1 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6562
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use1, align 8, !dbg !6562
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 1, !dbg !6564
  %4 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6564
  %5 = load i64, i64* %4, align 8, !dbg !6564
  store i64 %5, i64* %0, align 8, !dbg !6565
  br label %return, !dbg !6566

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %struct.ssa_use_operand_d* [ %3, %if.else ], [ null, %entry ], !dbg !6567
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6568
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !6569 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !6573, metadata !DIExpression()), !dbg !6574
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !6575
  %tobool = icmp eq i8 %call, 0, !dbg !6575
  br i1 %tobool, label %if.end, label %if.then, !dbg !6577

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !6578
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !6580
  br label %if.end, !dbg !6581

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6582
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6583 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6587, metadata !DIExpression()), !dbg !6588
  %next = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !6589
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6589
  %1 = load i64, i64* %0, align 8, !dbg !6589
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6590
  store i64 %1, i64* %2, align 8, !dbg !6590
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6591
  %tobool = icmp eq i8 %call, 0, !dbg !6591
  br i1 %tobool, label %if.end4, label %if.then, !dbg !6593

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6594
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6594
  %cmp = icmp eq %struct.ssa_use_operand_d* %3, null, !dbg !6597
  br i1 %cmp, label %return, label %if.then2, !dbg !6598

if.then2:                                         ; preds = %if.then
  %iter_node3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6599
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node3) #7, !dbg !6600
  br label %return, !dbg !6600

if.end4:                                          ; preds = %entry
  %imm_use5 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6601
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !6601
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !6602
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !6603
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !6603
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6603
  br label %return, !dbg !6604

return:                                           ; preds = %if.then, %if.then2, %if.end4
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end4 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !6588
  ret %union.gimple_statement_d* %retval.0, !dbg !6605
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6606 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6610, metadata !DIExpression()), !dbg !6612
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6613
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !6613
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !6615
  br i1 %tobool, label %if.end, label %if.then, !dbg !6616

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !6617
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %use_ptr) #7, !dbg !6617
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6611, metadata !DIExpression()), !dbg !6612
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !6619
  %2 = load i64*, i64** %1, align 8, !dbg !6619
  %3 = load i64, i64* %2, align 8, !dbg !6620
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6621
  store i64 %3, i64* %4, align 8, !dbg !6621
  br label %cleanup, !dbg !6622

if.end:                                           ; preds = %entry
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6623
  %5 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !6623
  %tobool4 = icmp eq %struct.def_optype_d* %5, null, !dbg !6625
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !6626

if.then5:                                         ; preds = %if.end
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %5, i64 0, i32 1, !dbg !6627
  %6 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !6627
  %call7 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %6) #7, !dbg !6627
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !6611, metadata !DIExpression()), !dbg !6612
  %7 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !6629
  %8 = load i64*, i64** %7, align 8, !dbg !6629
  %9 = load i64, i64* %8, align 8, !dbg !6630
  %10 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !6631
  store i64 %9, i64* %10, align 8, !dbg !6631
  br label %cleanup, !dbg !6632

if.end11:                                         ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6633
  store i8 1, i8* %done, align 8, !dbg !6634
  br label %cleanup, !dbg !6635

cleanup:                                          ; preds = %if.end11, %if.then5, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call7, %if.then5 ], [ null, %if.end11 ], !dbg !6612
  ret %union.tree_node* %retval.0, !dbg !6636
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @expand_gimple_cond(%struct.basic_block_def* %bb, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !6637 {
entry:
  %true_edge = alloca %struct.edge_def*, align 8
  %false_edge = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6641, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6642, metadata !DIExpression()), !dbg !6659
  %0 = bitcast %struct.edge_def** %true_edge to i8*, !dbg !6660
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6660
  %1 = bitcast %struct.edge_def** %false_edge to i8*, !dbg !6661
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6661
  %call = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %stmt) #7, !dbg !6662
  call void @llvm.dbg.value(metadata i32 %call, metadata !6650, metadata !DIExpression()), !dbg !6659
  %call1 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !6663
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6651, metadata !DIExpression()), !dbg !6659
  %call2 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %stmt) #7, !dbg !6664
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6652, metadata !DIExpression()), !dbg !6659
  %call3 = tail call fastcc zeroext i8 @gimple_cond_single_var_p(%union.gimple_statement_d* %stmt) #7, !dbg !6665
  %tobool = icmp ne i8 %call3, 0, !dbg !6665
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 1), align 8, !dbg !6666
  %tobool4 = icmp ne %struct.bitmap_head_def* %2, null, !dbg !6667
  %or.cond = and i1 %tobool, %tobool4, !dbg !6668
  br i1 %or.cond, label %land.lhs.true5, label %if.end60, !dbg !6668

land.lhs.true5:                                   ; preds = %entry
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6669
  %bf.load = load i64, i64* %3, align 8, !dbg !6669
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6670
  %cmp = icmp eq i64 %bf.cast2, 141, !dbg !6670
  br i1 %cmp, label %land.lhs.true7, label %if.end60, !dbg !6671

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6672
  %4 = bitcast %union.tree_node** %version to i32*, !dbg !6672
  %5 = load i32, i32* %4, align 8, !dbg !6672
  %call8 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %2, i32 %5) #6, !dbg !6673
  %tobool9 = icmp eq i32 %call8, 0, !dbg !6673
  br i1 %tobool9, label %if.end60, label %if.then, !dbg !6674

if.then:                                          ; preds = %land.lhs.true7
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6675
  %6 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6675
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %6, align 8, !dbg !6675
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %7, metadata !6653, metadata !DIExpression()), !dbg !6676
  %call11 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %7) #7, !dbg !6677
  %cmp12 = icmp eq i32 %call11, 6, !dbg !6678
  br i1 %cmp12, label %if.then14, label %if.end60, !dbg !6679

if.then14:                                        ; preds = %if.then
  %call15 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %7) #7, !dbg !6680
  call void @llvm.dbg.value(metadata i32 %call15, metadata !6656, metadata !DIExpression()), !dbg !6681
  %idxprom = sext i32 %call15 to i64, !dbg !6682
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !6682
  %8 = load i32, i32* %arrayidx, align 4, !dbg !6682
  %cmp16 = icmp eq i32 %8, 5, !dbg !6684
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !6685

if.then18:                                        ; preds = %if.then14
  call void @llvm.dbg.value(metadata i32 %call15, metadata !6650, metadata !DIExpression()), !dbg !6659
  %call19 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %7) #7, !dbg !6686
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !6651, metadata !DIExpression()), !dbg !6659
  %call20 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %7) #7, !dbg !6688
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !6652, metadata !DIExpression()), !dbg !6659
  br label %if.end60, !dbg !6689

if.else:                                          ; preds = %if.then14
  %call21 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !6690
  %tobool22 = icmp eq i8 %call21, 0, !dbg !6690
  %9 = load i32, i32* @ix86_branch_cost, align 4, !dbg !6690
  %cmp233 = icmp slt i32 %9, 4, !dbg !6692
  %cmp23 = or i1 %tobool22, %cmp233, !dbg !6692
  br i1 %cmp23, label %if.then25, label %if.end60, !dbg !6693

if.then25:                                        ; preds = %if.else
  switch i32 %call15, label %if.end60 [
    i32 89, label %land.lhs.true28
    i32 93, label %if.then44
    i32 87, label %if.then53
    i32 94, label %if.then53
  ], !dbg !6694

land.lhs.true28:                                  ; preds = %if.then25
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6697
  %10 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !6697
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !6697
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 6, !dbg !6697
  %bf.load30 = load i32, i32* %precision, align 4, !dbg !6697
  %bf.clear31 = and i32 %bf.load30, 1023, !dbg !6697
  %cmp32 = icmp eq i32 %bf.clear31, 1, !dbg !6698
  br i1 %cmp32, label %land.lhs.true34, label %lor.lhs.false, !dbg !6699

land.lhs.true34:                                  ; preds = %land.lhs.true28
  %call35 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %7) #7, !dbg !6700
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6700
  %bf.load37 = load i64, i64* %12, align 8, !dbg !6700
  %bf.cast394 = and i64 %bf.load37, 65535, !dbg !6701
  %cmp40 = icmp eq i64 %bf.cast394, 23, !dbg !6701
  br i1 %cmp40, label %if.else47, label %if.then44, !dbg !6702

lor.lhs.false:                                    ; preds = %land.lhs.true28
  switch i32 89, label %if.end60 [
    i32 93, label %if.then44
    i32 87, label %if.then53
    i32 94, label %if.then53
  ], !dbg !6703

if.then44:                                        ; preds = %land.lhs.true34, %if.then25, %lor.lhs.false
  call void @llvm.dbg.value(metadata i32 91, metadata !6650, metadata !DIExpression()), !dbg !6659
  %call45 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %7) #7, !dbg !6704
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !6651, metadata !DIExpression()), !dbg !6659
  %call46 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %7) #7, !dbg !6706
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !6652, metadata !DIExpression()), !dbg !6659
  br label %if.end60, !dbg !6707

if.else47:                                        ; preds = %land.lhs.true34
  switch i32 89, label %if.end60 [
    i32 87, label %if.then53
    i32 94, label %if.then53
  ], !dbg !6708

if.then53:                                        ; preds = %if.then25, %if.then25, %lor.lhs.false, %lor.lhs.false, %if.else47, %if.else47
  call void @llvm.dbg.value(metadata i32 92, metadata !6650, metadata !DIExpression()), !dbg !6659
  %call54 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %7) #7, !dbg !6710
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !6651, metadata !DIExpression()), !dbg !6659
  %call55 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %7) #7, !dbg !6712
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !6652, metadata !DIExpression()), !dbg !6659
  br label %if.end60, !dbg !6713

if.end60:                                         ; preds = %land.lhs.true7, %if.then, %if.else, %if.then53, %if.else47, %lor.lhs.false, %if.then25, %if.then44, %if.then18, %land.lhs.true5, %entry
  %code.5 = phi i32 [ %call, %land.lhs.true7 ], [ %call, %land.lhs.true5 ], [ %call, %entry ], [ %call, %if.then ], [ %call15, %if.then18 ], [ %call, %if.else ], [ 91, %if.then44 ], [ 92, %if.then53 ], [ %call, %if.else47 ], [ %call, %lor.lhs.false ], [ %call, %if.then25 ], !dbg !6659
  %op0.5 = phi %union.tree_node* [ %call1, %land.lhs.true7 ], [ %call1, %land.lhs.true5 ], [ %call1, %entry ], [ %call1, %if.then ], [ %call19, %if.then18 ], [ %call1, %if.else ], [ %call45, %if.then44 ], [ %call54, %if.then53 ], [ %call1, %if.else47 ], [ %call1, %lor.lhs.false ], [ %call1, %if.then25 ], !dbg !6659
  %op1.5 = phi %union.tree_node* [ %call2, %land.lhs.true7 ], [ %call2, %land.lhs.true5 ], [ %call2, %entry ], [ %call2, %if.then ], [ %call20, %if.then18 ], [ %call2, %if.else ], [ %call46, %if.then44 ], [ %call55, %if.then53 ], [ %call2, %if.else47 ], [ %call2, %lor.lhs.false ], [ %call2, %if.then25 ], !dbg !6659
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.5, metadata !6652, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.5, metadata !6651, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i32 %code.5, metadata !6650, metadata !DIExpression()), !dbg !6659
  %call61 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6714
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call61, metadata !6649, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call61, metadata !6648, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata %struct.edge_def** %true_edge, metadata !6646, metadata !DIExpression(DW_OP_deref)), !dbg !6659
  call void @llvm.dbg.value(metadata %struct.edge_def** %false_edge, metadata !6647, metadata !DIExpression(DW_OP_deref)), !dbg !6659
  call void @extract_true_false_edges_from_block(%struct.basic_block_def* %bb, %struct.edge_def** nonnull %true_edge, %struct.edge_def** nonnull %false_edge) #6, !dbg !6715
  %call62 = call fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %stmt) #7, !dbg !6716
  %tobool63 = icmp eq i8 %call62, 0, !dbg !6716
  br i1 %tobool63, label %if.end67, label %if.then64, !dbg !6718

if.then64:                                        ; preds = %if.end60
  %call65 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !6719
  call void @set_curr_insn_source_location(i32 %call65) #6, !dbg !6721
  %call66 = call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %stmt) #7, !dbg !6722
  call void @set_curr_insn_block(%union.tree_node* %call66) #6, !dbg !6723
  br label %if.end67, !dbg !6724

if.end67:                                         ; preds = %if.end60, %if.then64
  %13 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !6725
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !6646, metadata !DIExpression()), !dbg !6659
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i64 0, i32 7, !dbg !6726
  %14 = load i32, i32* %flags, align 8, !dbg !6727
  %and = and i32 %14, -1025, !dbg !6727
  store i32 %and, i32* %flags, align 8, !dbg !6727
  %15 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6728
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !6647, metadata !DIExpression()), !dbg !6659
  %flags68 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 7, !dbg !6729
  %16 = load i32, i32* %flags68, align 8, !dbg !6730
  %and69 = and i32 %16, -2049, !dbg !6730
  store i32 %and69, i32* %flags68, align 8, !dbg !6730
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !6647, metadata !DIExpression()), !dbg !6659
  %dest70 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 1, !dbg !6731
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest70, align 8, !dbg !6731
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 6, !dbg !6733
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !6733
  %cmp71 = icmp eq %struct.basic_block_def* %17, %18, !dbg !6734
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !6646, metadata !DIExpression()), !dbg !6659
  %dest74 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i64 0, i32 1, !dbg !6659
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest74, align 8, !dbg !6659
  br i1 %cmp71, label %if.then73, label %if.end84, !dbg !6735

if.then73:                                        ; preds = %if.end67
  %call75 = call fastcc %struct.rtx_def* @label_rtx_for_bb(%struct.basic_block_def* %19) #7, !dbg !6736
  %20 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !6738
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !6646, metadata !DIExpression()), !dbg !6659
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 8, !dbg !6739
  %21 = load i32, i32* %probability, align 4, !dbg !6739
  call void @jumpif_1(i32 %code.5, %union.tree_node* %op0.5, %union.tree_node* %op1.5, %struct.rtx_def* %call75, i32 %21) #6, !dbg !6740
  call fastcc void @maybe_dump_rtl_for_gimple_stmt(%union.gimple_statement_d* %stmt, %struct.rtx_def* %call61) #7, !dbg !6741
  %22 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !6742
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !6646, metadata !DIExpression()), !dbg !6659
  %goto_locus = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i64 0, i32 5, !dbg !6744
  %23 = load i32, i32* %goto_locus, align 8, !dbg !6744
  %tobool76 = icmp eq i32 %23, 0, !dbg !6742
  br i1 %tobool76, label %if.end81, label %if.then77, !dbg !6745

if.then77:                                        ; preds = %if.then73
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !6646, metadata !DIExpression()), !dbg !6659
  call void @set_curr_insn_source_location(i32 %23) #6, !dbg !6746
  %24 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !6748
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !6646, metadata !DIExpression()), !dbg !6659
  %goto_block = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i64 0, i32 4, !dbg !6749
  %25 = load %union.tree_node*, %union.tree_node** %goto_block, align 8, !dbg !6749
  call void @set_curr_insn_block(%union.tree_node* %25) #6, !dbg !6750
  %call79 = call i32 @curr_insn_locator() #6, !dbg !6751
  %26 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !6752
  call void @llvm.dbg.value(metadata %struct.edge_def* %26, metadata !6646, metadata !DIExpression()), !dbg !6659
  %goto_locus80 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %26, i64 0, i32 5, !dbg !6753
  store i32 %call79, i32* %goto_locus80, align 8, !dbg !6754
  br label %if.end81, !dbg !6755

if.end81:                                         ; preds = %if.then73, %if.then77
  %27 = phi %struct.edge_def* [ %22, %if.then73 ], [ %26, %if.then77 ], !dbg !6756
  call void @llvm.dbg.value(metadata %struct.edge_def* %27, metadata !6646, metadata !DIExpression()), !dbg !6659
  %goto_block82 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %27, i64 0, i32 4, !dbg !6757
  store %union.tree_node* null, %union.tree_node** %goto_block82, align 8, !dbg !6758
  %28 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6759
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !6647, metadata !DIExpression()), !dbg !6659
  %flags83 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i64 0, i32 7, !dbg !6760
  %29 = load i32, i32* %flags83, align 8, !dbg !6761
  %or = or i32 %29, 1, !dbg !6761
  store i32 %or, i32* %flags83, align 8, !dbg !6761
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !6647, metadata !DIExpression()), !dbg !6659
  call fastcc void @maybe_cleanup_end_of_block(%struct.edge_def* %28, %struct.rtx_def* %call61) #7, !dbg !6762
  br label %cleanup, !dbg !6763

if.end84:                                         ; preds = %if.end67
  %cmp87 = icmp eq %struct.basic_block_def* %19, %18, !dbg !6764
  br i1 %cmp87, label %if.then89, label %if.end104, !dbg !6766

if.then89:                                        ; preds = %if.end84
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !6647, metadata !DIExpression()), !dbg !6659
  %call91 = call fastcc %struct.rtx_def* @label_rtx_for_bb(%struct.basic_block_def* %17) #7, !dbg !6767
  %30 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6769
  call void @llvm.dbg.value(metadata %struct.edge_def* %30, metadata !6647, metadata !DIExpression()), !dbg !6659
  %probability92 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %30, i64 0, i32 8, !dbg !6770
  %31 = load i32, i32* %probability92, align 4, !dbg !6770
  call void @jumpifnot_1(i32 %code.5, %union.tree_node* %op0.5, %union.tree_node* %op1.5, %struct.rtx_def* %call91, i32 %31) #6, !dbg !6771
  call fastcc void @maybe_dump_rtl_for_gimple_stmt(%union.gimple_statement_d* %stmt, %struct.rtx_def* %call61) #7, !dbg !6772
  %32 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6773
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !6647, metadata !DIExpression()), !dbg !6659
  %goto_locus93 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 5, !dbg !6775
  %33 = load i32, i32* %goto_locus93, align 8, !dbg !6775
  %tobool94 = icmp eq i32 %33, 0, !dbg !6773
  br i1 %tobool94, label %if.end100, label %if.then95, !dbg !6776

if.then95:                                        ; preds = %if.then89
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !6647, metadata !DIExpression()), !dbg !6659
  call void @set_curr_insn_source_location(i32 %33) #6, !dbg !6777
  %34 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6779
  call void @llvm.dbg.value(metadata %struct.edge_def* %34, metadata !6647, metadata !DIExpression()), !dbg !6659
  %goto_block97 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %34, i64 0, i32 4, !dbg !6780
  %35 = load %union.tree_node*, %union.tree_node** %goto_block97, align 8, !dbg !6780
  call void @set_curr_insn_block(%union.tree_node* %35) #6, !dbg !6781
  %call98 = call i32 @curr_insn_locator() #6, !dbg !6782
  %36 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6783
  call void @llvm.dbg.value(metadata %struct.edge_def* %36, metadata !6647, metadata !DIExpression()), !dbg !6659
  %goto_locus99 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %36, i64 0, i32 5, !dbg !6784
  store i32 %call98, i32* %goto_locus99, align 8, !dbg !6785
  br label %if.end100, !dbg !6786

if.end100:                                        ; preds = %if.then89, %if.then95
  %37 = phi %struct.edge_def* [ %32, %if.then89 ], [ %36, %if.then95 ], !dbg !6787
  call void @llvm.dbg.value(metadata %struct.edge_def* %37, metadata !6647, metadata !DIExpression()), !dbg !6659
  %goto_block101 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %37, i64 0, i32 4, !dbg !6788
  store %union.tree_node* null, %union.tree_node** %goto_block101, align 8, !dbg !6789
  %38 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !6790
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !6646, metadata !DIExpression()), !dbg !6659
  %flags102 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 7, !dbg !6791
  %39 = load i32, i32* %flags102, align 8, !dbg !6792
  %or103 = or i32 %39, 1, !dbg !6792
  store i32 %or103, i32* %flags102, align 8, !dbg !6792
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !6646, metadata !DIExpression()), !dbg !6659
  call fastcc void @maybe_cleanup_end_of_block(%struct.edge_def* %38, %struct.rtx_def* %call61) #7, !dbg !6793
  br label %cleanup, !dbg !6794

if.end104:                                        ; preds = %if.end84
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !6646, metadata !DIExpression()), !dbg !6659
  %call106 = call fastcc %struct.rtx_def* @label_rtx_for_bb(%struct.basic_block_def* %19) #7, !dbg !6795
  %40 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !6796
  call void @llvm.dbg.value(metadata %struct.edge_def* %40, metadata !6646, metadata !DIExpression()), !dbg !6659
  %probability107 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %40, i64 0, i32 8, !dbg !6797
  %41 = load i32, i32* %probability107, align 4, !dbg !6797
  call void @jumpif_1(i32 %code.5, %union.tree_node* %op0.5, %union.tree_node* %op1.5, %struct.rtx_def* %call106, i32 %41) #6, !dbg !6798
  %call108 = call %struct.rtx_def* @get_last_insn() #6, !dbg !6799
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call108, metadata !6649, metadata !DIExpression()), !dbg !6659
  %42 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6800
  call void @llvm.dbg.value(metadata %struct.edge_def* %42, metadata !6647, metadata !DIExpression()), !dbg !6659
  %goto_locus109 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %42, i64 0, i32 5, !dbg !6802
  %43 = load i32, i32* %goto_locus109, align 8, !dbg !6802
  %tobool110 = icmp eq i32 %43, 0, !dbg !6800
  br i1 %tobool110, label %if.end116, label %if.then111, !dbg !6803

if.then111:                                       ; preds = %if.end104
  call void @llvm.dbg.value(metadata %struct.edge_def* %42, metadata !6647, metadata !DIExpression()), !dbg !6659
  call void @set_curr_insn_source_location(i32 %43) #6, !dbg !6804
  %44 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6806
  call void @llvm.dbg.value(metadata %struct.edge_def* %44, metadata !6647, metadata !DIExpression()), !dbg !6659
  %goto_block113 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %44, i64 0, i32 4, !dbg !6807
  %45 = load %union.tree_node*, %union.tree_node** %goto_block113, align 8, !dbg !6807
  call void @set_curr_insn_block(%union.tree_node* %45) #6, !dbg !6808
  %call114 = call i32 @curr_insn_locator() #6, !dbg !6809
  %46 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6810
  call void @llvm.dbg.value(metadata %struct.edge_def* %46, metadata !6647, metadata !DIExpression()), !dbg !6659
  %goto_locus115 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %46, i64 0, i32 5, !dbg !6811
  store i32 %call114, i32* %goto_locus115, align 8, !dbg !6812
  br label %if.end116, !dbg !6813

if.end116:                                        ; preds = %if.end104, %if.then111
  %47 = phi %struct.edge_def* [ %42, %if.end104 ], [ %46, %if.then111 ], !dbg !6814
  call void @llvm.dbg.value(metadata %struct.edge_def* %47, metadata !6647, metadata !DIExpression()), !dbg !6659
  %goto_block117 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %47, i64 0, i32 4, !dbg !6815
  store %union.tree_node* null, %union.tree_node** %goto_block117, align 8, !dbg !6816
  call void @llvm.dbg.value(metadata %struct.edge_def* %47, metadata !6647, metadata !DIExpression()), !dbg !6659
  %dest118 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %47, i64 0, i32 1, !dbg !6817
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %dest118, align 8, !dbg !6817
  %call119 = call fastcc %struct.rtx_def* @label_rtx_for_bb(%struct.basic_block_def* %48) #7, !dbg !6818
  call void @emit_jump(%struct.rtx_def* %call119) #6, !dbg !6819
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !6820
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6820
  %49 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6820
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %49, i64 0, i32 1, !dbg !6820
  store %struct.rtx_def* %call108, %struct.rtx_def** %end_, align 8, !dbg !6821
  %50 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6822
  %end_122 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %50, i64 0, i32 1, !dbg !6822
  %51 = bitcast %struct.rtx_def** %end_122 to i32**, !dbg !6822
  %52 = load i32*, i32** %51, align 8, !dbg !6822
  %bf.load123 = load i32, i32* %52, align 8, !dbg !6822
  %bf.clear124 = and i32 %bf.load123, 65535, !dbg !6822
  %cmp125 = icmp eq i32 %bf.clear124, 11, !dbg !6822
  br i1 %cmp125, label %if.then127, label %if.end135, !dbg !6824

if.then127:                                       ; preds = %if.end116
  %53 = getelementptr inbounds i32, i32* %52, i64 4, !dbg !6825
  %54 = bitcast i32* %53 to i64*, !dbg !6825
  %55 = load i64, i64* %54, align 8, !dbg !6825
  %56 = bitcast %struct.rtx_def** %end_122 to i64*, !dbg !6826
  store i64 %55, i64* %56, align 8, !dbg !6826
  br label %if.end135, !dbg !6827

if.end135:                                        ; preds = %if.then127, %if.end116
  call void @update_bb_for_insn(%struct.basic_block_def* %bb) #6, !dbg !6828
  %57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call108, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, !dbg !6829
  %58 = load i8*, i8** %57, align 8, !dbg !6829
  %call140 = call %struct.rtx_def* @get_last_insn() #6, !dbg !6830
  %59 = bitcast %struct.rtx_def* %call140 to i8*, !dbg !6830
  %call141 = call %struct.basic_block_def* @create_basic_block(i8* %58, i8* %59, %struct.basic_block_def* %bb) #6, !dbg !6831
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call141, metadata !6643, metadata !DIExpression()), !dbg !6659
  %60 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6832
  call void @llvm.dbg.value(metadata %struct.edge_def* %60, metadata !6647, metadata !DIExpression()), !dbg !6659
  %dest142 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %60, i64 0, i32 1, !dbg !6833
  %61 = load %struct.basic_block_def*, %struct.basic_block_def** %dest142, align 8, !dbg !6833
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %61, metadata !6644, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata %struct.edge_def* %60, metadata !6647, metadata !DIExpression()), !dbg !6659
  call void @redirect_edge_succ(%struct.edge_def* %60, %struct.basic_block_def* %call141) #6, !dbg !6834
  %62 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !6835
  call void @llvm.dbg.value(metadata %struct.edge_def* %62, metadata !6647, metadata !DIExpression()), !dbg !6659
  %flags143 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %62, i64 0, i32 7, !dbg !6836
  %63 = load i32, i32* %flags143, align 8, !dbg !6837
  %or144 = or i32 %63, 1, !dbg !6837
  store i32 %or144, i32* %flags143, align 8, !dbg !6837
  call void @llvm.dbg.value(metadata %struct.edge_def* %62, metadata !6647, metadata !DIExpression()), !dbg !6659
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %62, i64 0, i32 9, !dbg !6838
  %64 = load i64, i64* %count, align 8, !dbg !6838
  %count145 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call141, i64 0, i32 8, !dbg !6839
  store i64 %64, i64* %count145, align 8, !dbg !6840
  call void @llvm.dbg.value(metadata %struct.edge_def* %62, metadata !6647, metadata !DIExpression()), !dbg !6659
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %62, i64 0, i32 0, !dbg !6841
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6841
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %65, i64 0, i32 11, !dbg !6841
  %66 = load i32, i32* %frequency, align 8, !dbg !6841
  call void @llvm.dbg.value(metadata %struct.edge_def* %62, metadata !6647, metadata !DIExpression()), !dbg !6659
  %probability146 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %62, i64 0, i32 8, !dbg !6841
  %67 = load i32, i32* %probability146, align 4, !dbg !6841
  %mul = mul nsw i32 %66, %67, !dbg !6841
  %add = add nsw i32 %mul, 5000, !dbg !6841
  %div = sdiv i32 %add, 10000, !dbg !6841
  %frequency147 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call141, i64 0, i32 11, !dbg !6842
  store i32 %div, i32* %frequency147, align 8, !dbg !6843
  %call148 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %call141, %struct.basic_block_def* %61, i32 0) #6, !dbg !6844
  call void @llvm.dbg.value(metadata %struct.edge_def* %call148, metadata !6645, metadata !DIExpression()), !dbg !6659
  %probability149 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call148, i64 0, i32 8, !dbg !6845
  store i32 10000, i32* %probability149, align 4, !dbg !6846
  %68 = load i64, i64* %count145, align 8, !dbg !6847
  %count151 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call148, i64 0, i32 9, !dbg !6848
  store i64 %68, i64* %count151, align 8, !dbg !6849
  %il152 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call141, i64 0, i32 7, !dbg !6850
  %rtl153 = bitcast %union.basic_block_il_dependent* %il152 to %struct.rtl_bb_info**, !dbg !6850
  %69 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl153, align 8, !dbg !6850
  %end_154 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %69, i64 0, i32 1, !dbg !6850
  %70 = bitcast %struct.rtx_def** %end_154 to i32**, !dbg !6850
  %71 = load i32*, i32** %70, align 8, !dbg !6850
  %bf.load155 = load i32, i32* %71, align 8, !dbg !6850
  %bf.clear156 = and i32 %bf.load155, 65535, !dbg !6850
  %cmp157 = icmp eq i32 %bf.clear156, 11, !dbg !6850
  br i1 %cmp157, label %if.then159, label %if.end170, !dbg !6852

if.then159:                                       ; preds = %if.end135
  %72 = getelementptr inbounds i32, i32* %71, i64 4, !dbg !6853
  %73 = bitcast i32* %72 to i64*, !dbg !6853
  %74 = load i64, i64* %73, align 8, !dbg !6853
  %75 = bitcast %struct.rtx_def** %end_154 to i64*, !dbg !6854
  store i64 %74, i64* %75, align 8, !dbg !6854
  br label %if.end170, !dbg !6855

if.end170:                                        ; preds = %if.then159, %if.end135
  call void @update_bb_for_insn(%struct.basic_block_def* %call141) #6, !dbg !6856
  call fastcc void @maybe_dump_rtl_for_gimple_stmt(%union.gimple_statement_d* %stmt, %struct.rtx_def* %call61) #7, !dbg !6857
  %76 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !6858
  call void @llvm.dbg.value(metadata %struct.edge_def* %76, metadata !6646, metadata !DIExpression()), !dbg !6659
  %goto_locus171 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %76, i64 0, i32 5, !dbg !6860
  %77 = load i32, i32* %goto_locus171, align 8, !dbg !6860
  %tobool172 = icmp eq i32 %77, 0, !dbg !6858
  br i1 %tobool172, label %if.end178, label %if.then173, !dbg !6861

if.then173:                                       ; preds = %if.end170
  call void @llvm.dbg.value(metadata %struct.edge_def* %76, metadata !6646, metadata !DIExpression()), !dbg !6659
  call void @set_curr_insn_source_location(i32 %77) #6, !dbg !6862
  %78 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !6864
  call void @llvm.dbg.value(metadata %struct.edge_def* %78, metadata !6646, metadata !DIExpression()), !dbg !6659
  %goto_block175 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %78, i64 0, i32 4, !dbg !6865
  %79 = load %union.tree_node*, %union.tree_node** %goto_block175, align 8, !dbg !6865
  call void @set_curr_insn_block(%union.tree_node* %79) #6, !dbg !6866
  %call176 = call i32 @curr_insn_locator() #6, !dbg !6867
  %80 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !6868
  call void @llvm.dbg.value(metadata %struct.edge_def* %80, metadata !6646, metadata !DIExpression()), !dbg !6659
  %goto_locus177 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %80, i64 0, i32 5, !dbg !6869
  store i32 %call176, i32* %goto_locus177, align 8, !dbg !6870
  br label %if.end178, !dbg !6871

if.end178:                                        ; preds = %if.end170, %if.then173
  %81 = phi %struct.edge_def* [ %76, %if.end170 ], [ %80, %if.then173 ], !dbg !6872
  call void @llvm.dbg.value(metadata %struct.edge_def* %81, metadata !6646, metadata !DIExpression()), !dbg !6659
  %goto_block179 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %81, i64 0, i32 4, !dbg !6873
  store %union.tree_node* null, %union.tree_node** %goto_block179, align 8, !dbg !6874
  br label %cleanup, !dbg !6875

cleanup:                                          ; preds = %if.end178, %if.end100, %if.end81
  %retval.0 = phi %struct.basic_block_def* [ null, %if.end81 ], [ null, %if.end100 ], [ %call141, %if.end178 ], !dbg !6659
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6876
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6876
  ret %struct.basic_block_def* %retval.0, !dbg !6876
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_debug_bind_get_var(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !6877 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !6879, metadata !DIExpression()), !dbg !6880
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %dbg, i32 0) #7, !dbg !6881
  ret %union.tree_node* %call, !dbg !6882
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_debug_bind_has_value_p(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !6883 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !6887, metadata !DIExpression()), !dbg !6888
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %dbg, i32 1) #7, !dbg !6889
  %cmp = icmp ne %union.tree_node* %call, null, !dbg !6890
  %conv1 = zext i1 %cmp to i8, !dbg !6889
  ret i8 %conv1, !dbg !6891
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_debug_bind_get_value(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !6892 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !6894, metadata !DIExpression()), !dbg !6895
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %dbg, i32 1) #7, !dbg !6896
  ret %union.tree_node* %call, !dbg !6897
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_stmt_imm_use(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6898 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6900, metadata !DIExpression()), !dbg !6903
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !6904
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !6904
  %call = tail call zeroext i8 @ssa_operands_active() #6, !dbg !6905
  %tobool = icmp eq i8 %call, 0, !dbg !6905
  br i1 %tobool, label %if.end, label %if.then, !dbg !6907

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6901, metadata !DIExpression(DW_OP_deref)), !dbg !6903
  %call1 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 5) #7, !dbg !6908
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call1, metadata !6902, metadata !DIExpression()), !dbg !6903
  br label %for.cond, !dbg !6908

for.cond:                                         ; preds = %for.body, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call1, %if.then ], [ %call4, %for.body ], !dbg !6910
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !6902, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6901, metadata !DIExpression(DW_OP_deref)), !dbg !6903
  %call2 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !6911
  %tobool3 = icmp eq i8 %call2, 0, !dbg !6911
  br i1 %tobool3, label %for.body, label %if.end.loopexit, !dbg !6908

for.body:                                         ; preds = %for.cond
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !6913
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6901, metadata !DIExpression(DW_OP_deref)), !dbg !6903
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !6911
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !6902, metadata !DIExpression()), !dbg !6903
  br label %for.cond, !dbg !6911, !llvm.loop !6914

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !6916

if.end:                                           ; preds = %if.end.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !6916
  ret void, !dbg !6916
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6917 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6919, metadata !DIExpression()), !dbg !6920
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !6921
  %cmp = icmp eq i32 %call, 8, !dbg !6922
  %conv1 = zext i1 %cmp to i8, !dbg !6921
  ret i8 %conv1, !dbg !6923
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_tail_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !6924 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !6926, metadata !DIExpression()), !dbg !6927
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !6928
  %bf.load = load i32, i32* %0, align 8, !dbg !6928
  %and = lshr i32 %bf.load, 19, !dbg !6929
  %1 = trunc i32 %and to i8, !dbg !6929
  %2 = and i8 %1, 1, !dbg !6929
  ret i8 %2, !dbg !6930
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @expand_gimple_tailcall(%struct.basic_block_def* %bb, %union.gimple_statement_d* %stmt, i8* %can_fallthru) unnamed_addr #5 !dbg !6931 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6935, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6936, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i8* %can_fallthru, metadata !6937, metadata !DIExpression()), !dbg !6945
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6946
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6946
  %call = tail call fastcc %struct.rtx_def* @expand_gimple_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !6947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6939, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6938, metadata !DIExpression()), !dbg !6945
  br label %for.cond, !dbg !6948

for.cond:                                         ; preds = %for.inc, %entry
  %call.pn = phi %struct.rtx_def* [ %call, %entry ], [ %last.0, %for.inc ]
  %last.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6950
  %last.0.in = bitcast %union.rtunion_def* %last.0.in.in to %struct.rtx_def**, !dbg !6950
  %last.0 = load %struct.rtx_def*, %struct.rtx_def** %last.0.in, align 8, !dbg !6950
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6939, metadata !DIExpression()), !dbg !6945
  %tobool = icmp eq %struct.rtx_def* %last.0, null, !dbg !6951
  br i1 %tobool, label %for.end, label %for.body, !dbg !6951

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 0, !dbg !6952
  %bf.load = load i32, i32* %1, align 8, !dbg !6952
  %bf.clear = and i32 %bf.load, 65535, !dbg !6952
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !6952
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !6955

land.lhs.true:                                    ; preds = %for.body
  %bf.clear2 = and i32 %bf.load, 16777216, !dbg !6956
  %tobool3 = icmp eq i32 %bf.clear2, 0, !dbg !6956
  br i1 %tobool3, label %for.inc, label %found, !dbg !6957

for.inc:                                          ; preds = %land.lhs.true, %for.body
  br label %for.cond, !dbg !6958, !llvm.loop !6959

for.end:                                          ; preds = %for.cond
  tail call fastcc void @maybe_dump_rtl_for_gimple_stmt(%union.gimple_statement_d* %stmt, %struct.rtx_def* %call) #7, !dbg !6961
  store i8 1, i8* %can_fallthru, align 1, !dbg !6962
  br label %cleanup, !dbg !6963

found:                                            ; preds = %land.lhs.true
  %last.0.lcssa3 = phi %struct.rtx_def* [ %last.0, %land.lhs.true ], !dbg !6950
  call void @llvm.dbg.label(metadata !6944), !dbg !6964
  tail call void @do_pending_stack_adjust() #6, !dbg !6965
  call void @llvm.dbg.value(metadata i32 0, metadata !6942, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i64 0, metadata !6943, metadata !DIExpression()), !dbg !6945
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6966
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !6966
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6966
  %call8 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !6966
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6966
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call8, 0, !dbg !6966
  store i32 %4, i32* %3, align 8, !dbg !6966
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6966
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call8, 1, !dbg !6966
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !6966
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !6966
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !6966
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6968
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6968
  br label %for.cond9, !dbg !6970

for.cond9:                                        ; preds = %if.end43, %found
  %probability.0 = phi i32 [ 0, %found ], [ %probability.1, %if.end43 ], !dbg !6971
  %count.0 = phi i64 [ 0, %found ], [ %count.1, %if.end43 ], !dbg !6972
  call void @llvm.dbg.value(metadata i64 %count.0, metadata !6943, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32 %probability.0, metadata !6942, metadata !DIExpression()), !dbg !6945
  %9 = load i32, i32* %7, align 8, !dbg !6973
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !6973
  %call10 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %9, %struct.VEC_edge_gc** %10) #7, !dbg !6973
  call void @llvm.dbg.value(metadata %struct.edge_def* %call10, metadata !6940, metadata !DIExpression()), !dbg !6945
  %tobool11 = icmp eq %struct.edge_def* %call10, null, !dbg !6974
  br i1 %tobool11, label %for.end44, label %for.body12, !dbg !6974

for.body12:                                       ; preds = %for.cond9
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 7, !dbg !6975
  %11 = load i32, i32* %flags, align 8, !dbg !6975
  %and = and i32 %11, 10, !dbg !6978
  %tobool13 = icmp eq i32 %and, 0, !dbg !6978
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !6979

if.then14:                                        ; preds = %for.body12
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 1, !dbg !6980
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6980
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6983
  %cfg = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !6983
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6983
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 1, !dbg !6983
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6983
  %cmp15 = icmp eq %struct.basic_block_def* %12, %15, !dbg !6984
  br i1 %cmp15, label %if.end38, label %if.then16, !dbg !6985

if.then16:                                        ; preds = %if.then14
  %count17 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 9, !dbg !6986
  %16 = load i64, i64* %count17, align 8, !dbg !6986
  %count19 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 8, !dbg !6988
  %17 = load i64, i64* %count19, align 8, !dbg !6989
  %sub = sub nsw i64 %17, %16, !dbg !6989
  store i64 %sub, i64* %count19, align 8, !dbg !6989
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 0, !dbg !6990
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6990
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 11, !dbg !6990
  %19 = load i32, i32* %frequency, align 8, !dbg !6990
  %probability20 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 8, !dbg !6990
  %20 = load i32, i32* %probability20, align 4, !dbg !6990
  %mul = mul nsw i32 %19, %20, !dbg !6990
  %add = add nsw i32 %mul, 5000, !dbg !6990
  %div = sdiv i32 %add, 10000, !dbg !6990
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6991
  %frequency22 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i64 0, i32 11, !dbg !6992
  %22 = load i32, i32* %frequency22, align 8, !dbg !6993
  %sub23 = sub nsw i32 %22, %div, !dbg !6993
  store i32 %sub23, i32* %frequency22, align 8, !dbg !6993
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6994
  %count25 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 8, !dbg !6996
  %24 = load i64, i64* %count25, align 8, !dbg !6996
  %cmp26 = icmp slt i64 %24, 0, !dbg !6997
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !6998

if.then27:                                        ; preds = %if.then16
  store i64 0, i64* %count25, align 8, !dbg !6999
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7000
  br label %if.end30, !dbg !7002

if.end30:                                         ; preds = %if.then27, %if.then16
  %25 = phi %struct.basic_block_def* [ %.pre, %if.then27 ], [ %23, %if.then16 ], !dbg !7000
  %frequency32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i64 0, i32 11, !dbg !7003
  %26 = load i32, i32* %frequency32, align 8, !dbg !7003
  %cmp33 = icmp slt i32 %26, 0, !dbg !7004
  br i1 %cmp33, label %if.then34, label %if.end38, !dbg !7005

if.then34:                                        ; preds = %if.end30
  store i32 0, i32* %frequency32, align 8, !dbg !7006
  br label %if.end38, !dbg !7007

if.end38:                                         ; preds = %if.then14, %if.end30, %if.then34
  %count39 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 9, !dbg !7008
  %27 = load i64, i64* %count39, align 8, !dbg !7008
  %add40 = add nsw i64 %count.0, %27, !dbg !7009
  call void @llvm.dbg.value(metadata i64 %add40, metadata !6943, metadata !DIExpression()), !dbg !6945
  %probability41 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 8, !dbg !7010
  %28 = load i32, i32* %probability41, align 4, !dbg !7010
  %add42 = add nsw i32 %probability.0, %28, !dbg !7011
  call void @llvm.dbg.value(metadata i32 %add42, metadata !6942, metadata !DIExpression()), !dbg !6945
  call void @remove_edge(%struct.edge_def* nonnull %call10) #6, !dbg !7012
  br label %if.end43, !dbg !7013

if.else:                                          ; preds = %for.body12
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6941, metadata !DIExpression(DW_OP_deref)), !dbg !6945
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7014
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.end38
  %probability.1 = phi i32 [ %probability.0, %if.else ], [ %add42, %if.end38 ], !dbg !6945
  %count.1 = phi i64 [ %count.0, %if.else ], [ %add40, %if.end38 ], !dbg !6945
  call void @llvm.dbg.value(metadata i64 %count.1, metadata !6943, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32 %probability.1, metadata !6942, metadata !DIExpression()), !dbg !6945
  br label %for.cond9, !dbg !7015, !llvm.loop !7016

for.end44:                                        ; preds = %for.cond9
  %probability.0.lcssa = phi i32 [ %probability.0, %for.cond9 ], !dbg !6971
  %count.0.lcssa = phi i64 [ %count.0, %for.cond9 ], !dbg !6972
  call void @llvm.dbg.value(metadata i32 %probability.0.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i64 %count.0.lcssa, metadata !6943, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32 %probability.0.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i64 %count.0.lcssa, metadata !6943, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32 %probability.0.lcssa, metadata !6942, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i64 %count.0.lcssa, metadata !6943, metadata !DIExpression()), !dbg !6945
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0.lcssa3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7018
  %rt_rtx48 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !7018
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !7018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %30, metadata !6939, metadata !DIExpression()), !dbg !6945
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 0, !dbg !7019
  %bf.load49 = load i32, i32* %31, align 8, !dbg !7019
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !7019
  %cmp51 = icmp eq i32 %bf.clear50, 11, !dbg !7019
  br i1 %cmp51, label %cond.end, label %cond.true, !dbg !7019

cond.true:                                        ; preds = %for.end44
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2079, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7019
  br label %cond.end, !dbg !7019

cond.end:                                         ; preds = %for.end44, %cond.true
  store i8 0, i8* %can_fallthru, align 1, !dbg !7020
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6945
  %rt_rtx55 = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !6945
  br label %while.cond, !dbg !7021

while.cond:                                       ; preds = %if.end65, %cond.end
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !7022
  %tobool56 = icmp eq %struct.rtx_def* %33, null, !dbg !7021
  br i1 %tobool56, label %while.end.loopexit, label %while.body, !dbg !7021

while.body:                                       ; preds = %while.cond
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i64 0, i32 0, !dbg !7021
  %bf.load61 = load i32, i32* %34, align 8, !dbg !7023
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !7023
  %cmp63 = icmp eq i32 %bf.clear62, 12, !dbg !7023
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !7026

if.then64:                                        ; preds = %while.body
  store i8 1, i8* %can_fallthru, align 1, !dbg !7027
  br label %while.end, !dbg !7029

if.end65:                                         ; preds = %while.body
  %call70 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* nonnull %33) #6, !dbg !7030
  br label %while.cond, !dbg !7021, !llvm.loop !7031

while.end.loopexit:                               ; preds = %while.cond
  br label %while.end, !dbg !7033

while.end:                                        ; preds = %while.end.loopexit, %if.then64
  %35 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7033
  %cfg72 = getelementptr inbounds %struct.function, %struct.function* %35, i64 0, i32 1, !dbg !7033
  %36 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg72, align 8, !dbg !7033
  %x_exit_block_ptr73 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %36, i64 0, i32 1, !dbg !7033
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr73, align 8, !dbg !7033
  %call74 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %37, i32 258) #6, !dbg !7034
  call void @llvm.dbg.value(metadata %struct.edge_def* %call74, metadata !6940, metadata !DIExpression()), !dbg !6945
  %probability75 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call74, i64 0, i32 8, !dbg !7035
  %38 = load i32, i32* %probability75, align 4, !dbg !7036
  %add76 = add nsw i32 %38, %probability.0.lcssa, !dbg !7036
  store i32 %add76, i32* %probability75, align 4, !dbg !7036
  %count77 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call74, i64 0, i32 9, !dbg !7037
  %39 = load i64, i64* %count77, align 8, !dbg !7038
  %add78 = add nsw i64 %39, %count.0.lcssa, !dbg !7038
  store i64 %add78, i64* %count77, align 8, !dbg !7038
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !7039
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7039
  %40 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7039
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %40, i64 0, i32 1, !dbg !7039
  store %struct.rtx_def* %30, %struct.rtx_def** %end_, align 8, !dbg !7040
  call void @update_bb_for_insn(%struct.basic_block_def* %bb) #6, !dbg !7041
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !7042
  %tobool83 = icmp eq %struct.rtx_def* %41, null, !dbg !7042
  br i1 %tobool83, label %if.end106, label %if.then84, !dbg !7044

if.then84:                                        ; preds = %while.end
  %42 = bitcast %struct.rtx_def* %41 to i8*, !dbg !7044
  %call89 = call %struct.rtx_def* @get_last_insn() #6, !dbg !7045
  %43 = bitcast %struct.rtx_def* %call89 to i8*, !dbg !7045
  %call90 = call %struct.basic_block_def* @create_basic_block(i8* nonnull %42, i8* %43, %struct.basic_block_def* %bb) #6, !dbg !7047
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call90, metadata !6935, metadata !DIExpression()), !dbg !6945
  %il91 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call90, i64 0, i32 7, !dbg !7048
  %rtl92 = bitcast %union.basic_block_il_dependent* %il91 to %struct.rtl_bb_info**, !dbg !7048
  %44 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl92, align 8, !dbg !7048
  %end_93 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %44, i64 0, i32 1, !dbg !7048
  %45 = load %struct.rtx_def*, %struct.rtx_def** %end_93, align 8, !dbg !7048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %45, metadata !6939, metadata !DIExpression()), !dbg !6945
  %46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i64 0, i32 0, !dbg !7049
  %bf.load94 = load i32, i32* %46, align 8, !dbg !7049
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !7049
  %cmp96 = icmp eq i32 %bf.clear95, 11, !dbg !7049
  br i1 %cmp96, label %if.then97, label %if.end106, !dbg !7051

if.then97:                                        ; preds = %if.then84
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7052
  %48 = bitcast %union.rtunion_def* %47 to i64*, !dbg !7052
  %49 = load i64, i64* %48, align 8, !dbg !7052
  %50 = bitcast %struct.rtx_def** %end_93 to i64*, !dbg !7053
  store i64 %49, i64* %50, align 8, !dbg !7053
  br label %if.end106, !dbg !7054

if.end106:                                        ; preds = %while.end, %if.then84, %if.then97
  %bb.addr.0 = phi %struct.basic_block_def* [ %bb, %while.end ], [ %call90, %if.then97 ], [ %call90, %if.then84 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0, metadata !6935, metadata !DIExpression()), !dbg !6945
  call fastcc void @maybe_dump_rtl_for_gimple_stmt(%union.gimple_statement_d* %stmt, %struct.rtx_def* %call) #7, !dbg !7055
  br label %cleanup, !dbg !7056

cleanup:                                          ; preds = %if.end106, %for.end
  %retval.0 = phi %struct.basic_block_def* [ %bb.addr.0, %if.end106 ], [ null, %for.end ], !dbg !6945
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7057
  ret %struct.basic_block_def* %retval.0, !dbg !7057
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @single_ssa_def_operand(%union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !7058 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7062, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i32 2, metadata !7063, metadata !DIExpression()), !dbg !7066
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !7067
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !7067
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7065, metadata !DIExpression(DW_OP_deref)), !dbg !7066
  %call = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 2) #7, !dbg !7068
  call void @llvm.dbg.value(metadata %union.tree_node** %call, metadata !7064, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7065, metadata !DIExpression(DW_OP_deref)), !dbg !7066
  %call1 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7069
  %tobool = icmp eq i8 %call1, 0, !dbg !7069
  br i1 %tobool, label %if.end, label %cleanup, !dbg !7071

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7065, metadata !DIExpression(DW_OP_deref)), !dbg !7066
  %call2 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7072
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7065, metadata !DIExpression(DW_OP_deref)), !dbg !7066
  %call3 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7073
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7073
  %call. = select i1 %tobool4, %union.tree_node** null, %union.tree_node** %call, !dbg !7066
  br label %cleanup, !dbg !7066

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node** [ null, %entry ], [ %call., %if.end ], !dbg !7066
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !7075
  ret %union.tree_node** %retval.0, !dbg !7075
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !7076 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !7080, metadata !DIExpression()), !dbg !7081
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !7082
  ret %union.tree_node* %0, !dbg !7083
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @label_rtx_for_bb(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7084 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7088, metadata !DIExpression()), !dbg !7093
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !7094
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7094
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !7095
  %1 = load i32, i32* %flags, align 8, !dbg !7095
  %and = and i32 %1, 512, !dbg !7097
  %tobool = icmp eq i32 %and, 0, !dbg !7097
  br i1 %tobool, label %if.end, label %if.then, !dbg !7098

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %bb) #6, !dbg !7099
  br label %cleanup, !dbg !7100

if.end:                                           ; preds = %entry
  %2 = load %struct.pointer_map_t*, %struct.pointer_map_t** @lab_rtx_for_bb, align 8, !dbg !7101
  %3 = bitcast %struct.basic_block_def* %bb to i8*, !dbg !7102
  %call1 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %2, i8* %3) #6, !dbg !7103
  call void @llvm.dbg.value(metadata i8** %call1, metadata !7092, metadata !DIExpression()), !dbg !7093
  %tobool2 = icmp eq i8** %call1, null, !dbg !7104
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7106

if.then3:                                         ; preds = %if.end
  %4 = bitcast i8** %call1 to %struct.rtx_def**, !dbg !7107
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !7107
  br label %cleanup, !dbg !7108

if.end4:                                          ; preds = %if.end
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !7109
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !7109
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !7109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !7109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !7109
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7089, metadata !DIExpression(DW_OP_deref)), !dbg !7093
  %call5 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7111
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7113
  br i1 %tobool6, label %for.body, label %for.end, !dbg !7114

for.body:                                         ; preds = %if.end4
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7089, metadata !DIExpression(DW_OP_deref)), !dbg !7093
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7115
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !7091, metadata !DIExpression()), !dbg !7093
  %call8 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call7) #7, !dbg !7117
  %cmp = icmp eq i32 %call8, 4, !dbg !7119
  br i1 %cmp, label %if.end10, label %for.end, !dbg !7120

if.end10:                                         ; preds = %for.body
  %call11 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call7) #7, !dbg !7121
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !7090, metadata !DIExpression()), !dbg !7093
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7122
  %7 = bitcast i40* %nonlocal_flag to i64*, !dbg !7122
  %bf.load = load i64, i64* %7, align 8, !dbg !7122
  %bf.cast1 = and i64 %bf.load, 256, !dbg !7122
  %tobool12 = icmp eq i64 %bf.cast1, 0, !dbg !7122
  br i1 %tobool12, label %if.end14, label %for.end, !dbg !7124

if.end14:                                         ; preds = %if.end10
  %call15 = call %struct.rtx_def* @label_rtx(%union.tree_node* %call11) #6, !dbg !7125
  br label %cleanup, !dbg !7126

for.end:                                          ; preds = %if.end10, %for.body, %if.end4
  %8 = load %struct.pointer_map_t*, %struct.pointer_map_t** @lab_rtx_for_bb, align 8, !dbg !7127
  %call16 = call i8** @pointer_map_insert(%struct.pointer_map_t* %8, i8* %3) #6, !dbg !7128
  call void @llvm.dbg.value(metadata i8** %call16, metadata !7092, metadata !DIExpression()), !dbg !7093
  %call17 = call %struct.rtx_def* @gen_label_rtx() #6, !dbg !7129
  %9 = bitcast i8** %call16 to %struct.rtx_def**, !dbg !7130
  store %struct.rtx_def* %call17, %struct.rtx_def** %9, align 8, !dbg !7130
  br label %cleanup, !dbg !7131

cleanup:                                          ; preds = %for.end, %if.end14, %if.then3, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %5, %if.then3 ], [ %call17, %for.end ], [ %call15, %if.end14 ], !dbg !7093
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7132
  ret %struct.rtx_def* %retval.0, !dbg !7132
}

declare dso_local %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def*, %struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @do_pending_stack_adjust() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !7133 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !7135, metadata !DIExpression()), !dbg !7136
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !7137
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7137

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !7138
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !7138
  br label %cond.end, !dbg !7137

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !7137
  ret %struct.gimple_seq_node_d* %cond, !dbg !7139
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7140 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7144, metadata !DIExpression()), !dbg !7145
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !7146
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7146
  ret %struct.basic_block_def* %0, !dbg !7147
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_gimple_stmt_1(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !7148 {
entry:
  %ops = alloca %struct.separate_ops, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7150, metadata !DIExpression()), !dbg !7179
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !7180
  switch i32 %call, label %sw.default192 [
    i32 3, label %sw.bb
    i32 4, label %sw.bb2
    i32 18, label %sw.epilog193
    i32 33, label %sw.epilog193
    i32 5, label %sw.bb5
    i32 7, label %sw.bb6
    i32 8, label %sw.bb7
    i32 9, label %sw.bb8
    i32 6, label %sw.bb27
  ], !dbg !7181

sw.bb:                                            ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %stmt) #7, !dbg !7182
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7151, metadata !DIExpression()), !dbg !7179
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7183
  %bf.load = load i64, i64* %0, align 8, !dbg !7183
  %bf.cast6 = and i64 %bf.load, 65535, !dbg !7185
  %cmp = icmp eq i64 %bf.cast6, 30, !dbg !7185
  br i1 %cmp, label %if.then, label %if.else, !dbg !7186

if.then:                                          ; preds = %sw.bb
  tail call void @expand_goto(%union.tree_node* %call1) #6, !dbg !7187
  br label %sw.epilog193, !dbg !7187

if.else:                                          ; preds = %sw.bb
  tail call void @expand_computed_goto(%union.tree_node* %call1) #6, !dbg !7188
  br label %sw.epilog193

sw.bb2:                                           ; preds = %entry
  %call3 = tail call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %stmt) #7, !dbg !7189
  tail call void @expand_label(%union.tree_node* %call3) #6, !dbg !7190
  br label %sw.epilog193, !dbg !7191

sw.bb5:                                           ; preds = %entry
  tail call void @expand_case(%union.gimple_statement_d* %stmt) #6, !dbg !7192
  br label %sw.epilog193, !dbg !7193

sw.bb6:                                           ; preds = %entry
  tail call void @expand_asm_stmt(%union.gimple_statement_d* %stmt) #6, !dbg !7194
  br label %sw.epilog193, !dbg !7195

sw.bb7:                                           ; preds = %entry
  tail call fastcc void @expand_call_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !7196
  br label %sw.epilog193, !dbg !7197

sw.bb8:                                           ; preds = %entry
  %call9 = tail call fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %stmt) #7, !dbg !7198
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !7151, metadata !DIExpression()), !dbg !7179
  %tobool = icmp ne %union.tree_node* %call9, null, !dbg !7199
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7200
  %cmp10 = icmp ne %union.tree_node* %call9, %1, !dbg !7201
  %or.cond = and i1 %tobool, %cmp10, !dbg !7202
  br i1 %or.cond, label %if.then11, label %if.end22, !dbg !7202

if.then11:                                        ; preds = %sw.bb8
  %2 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !7203
  %result12 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %2, i64 0, i32 3, !dbg !7203
  %3 = load %union.tree_node*, %union.tree_node** %result12, align 8, !dbg !7203
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7152, metadata !DIExpression()), !dbg !7204
  %cmp13 = icmp eq %union.tree_node* %call9, %3, !dbg !7205
  br i1 %cmp13, label %if.end22, label %if.then14, !dbg !7207

if.then14:                                        ; preds = %if.then11
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7208
  %bf.load16 = load i64, i64* %4, align 8, !dbg !7208
  %bf.cast185 = and i64 %bf.load16, 65535, !dbg !7208
  %cmp19 = icmp eq i64 %bf.cast185, 36, !dbg !7208
  br i1 %cmp19, label %cond.true, label %cond.end, !dbg !7208

cond.true:                                        ; preds = %if.then14
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1841, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7208
  br label %cond.end, !dbg !7208

cond.end:                                         ; preds = %if.then14, %cond.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7210
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7210
  %call20 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %5, %union.tree_node* %3, %union.tree_node* nonnull %call9) #6, !dbg !7210
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !7151, metadata !DIExpression()), !dbg !7179
  br label %if.end22, !dbg !7211

if.end22:                                         ; preds = %if.then11, %cond.end, %sw.bb8
  %op0.1 = phi %union.tree_node* [ %call9, %sw.bb8 ], [ %call20, %cond.end ], [ %call9, %if.then11 ], !dbg !7212
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1, metadata !7151, metadata !DIExpression()), !dbg !7179
  %tobool23 = icmp eq %union.tree_node* %op0.1, null, !dbg !7213
  br i1 %tobool23, label %if.then24, label %if.else25, !dbg !7215

if.then24:                                        ; preds = %if.end22
  tail call void @expand_null_return() #6, !dbg !7216
  br label %sw.epilog193, !dbg !7216

if.else25:                                        ; preds = %if.end22
  tail call void @expand_return(%union.tree_node* nonnull %op0.1) #6, !dbg !7217
  br label %sw.epilog193

sw.bb27:                                          ; preds = %entry
  %call28 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7218
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !7156, metadata !DIExpression()), !dbg !7219
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7220
  %bf.load30 = load i64, i64* %6, align 8, !dbg !7220
  %bf.cast323 = and i64 %bf.load30, 65535, !dbg !7221
  %cmp33 = icmp eq i64 %bf.cast323, 141, !dbg !7221
  br i1 %cmp33, label %lor.lhs.false, label %if.then37, !dbg !7222

lor.lhs.false:                                    ; preds = %sw.bb27
  %call34 = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) #7, !dbg !7223
  %call35 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call34) #7, !dbg !7224
  %cmp36 = icmp eq i32 %call35, 3, !dbg !7225
  br i1 %cmp36, label %if.then37, label %if.else70, !dbg !7226

if.then37:                                        ; preds = %sw.bb27, %lor.lhs.false
  %call38 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7227
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !7158, metadata !DIExpression()), !dbg !7228
  %call39 = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) #7, !dbg !7229
  %call40 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call39) #7, !dbg !7229
  %cmp41 = icmp eq i32 %call40, 3, !dbg !7229
  br i1 %cmp41, label %cond.end44, label %cond.true42, !dbg !7229

cond.true42:                                      ; preds = %if.then37
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1873, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7229
  br label %cond.end44, !dbg !7229

cond.end44:                                       ; preds = %if.then37, %cond.true42
  %call46 = tail call fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %stmt) #7, !dbg !7230
  %tobool47 = icmp ne i8 %call46, 0, !dbg !7230
  %tobool49 = icmp ne %union.tree_node* %call38, null, !dbg !7232
  %or.cond1 = and i1 %tobool47, %tobool49, !dbg !7233
  br i1 %or.cond1, label %land.lhs.true50, label %if.end68, !dbg !7233

land.lhs.true50:                                  ; preds = %cond.end44
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7232
  %bf.load52 = load i64, i64* %7, align 8, !dbg !7232
  %bf.cast54 = and i64 %bf.load52, 65535, !dbg !7232
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast54, !dbg !7232
  %8 = load i32, i32* %arrayidx, align 4, !dbg !7232
  %cmp55 = icmp ugt i32 %8, 3, !dbg !7232
  br i1 %cmp55, label %land.lhs.true57, label %if.end68, !dbg !7232

land.lhs.true57:                                  ; preds = %land.lhs.true50
  %cmp64 = icmp ult i32 %8, 11, !dbg !7232
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !7234

if.then66:                                        ; preds = %land.lhs.true57
  %call67 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !7235
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7235
  store i32 %call67, i32* %9, align 8, !dbg !7235
  br label %if.end68, !dbg !7235

if.end68:                                         ; preds = %if.then66, %land.lhs.true57, %land.lhs.true50, %cond.end44
  %call69 = tail call fastcc zeroext i8 @gimple_assign_nontemporal_move_p(%union.gimple_statement_d* %stmt) #7, !dbg !7236
  tail call void @expand_assignment(%union.tree_node* %call28, %union.tree_node* %call38, i8 zeroext %call69) #6, !dbg !7237
  br label %sw.epilog193, !dbg !7238

if.else70:                                        ; preds = %lor.lhs.false
  %call71 = tail call fastcc zeroext i8 @gimple_assign_nontemporal_move_p(%union.gimple_statement_d* %stmt) #7, !dbg !7239
  call void @llvm.dbg.value(metadata i8 %call71, metadata !7164, metadata !DIExpression()), !dbg !7240
  %10 = bitcast %struct.separate_ops* %ops to i8*, !dbg !7241
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #8, !dbg !7241
  call void @llvm.dbg.value(metadata i8 0, metadata !7174, metadata !DIExpression()), !dbg !7240
  %call72 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call28, %struct.rtx_def* null, i32 0, i32 5) #7, !dbg !7242
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call72, metadata !7161, metadata !DIExpression()), !dbg !7240
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call72, i64 0, i32 0, !dbg !7243
  %bf.load73 = load i32, i32* %11, align 8, !dbg !7243
  %bf.clear74 = and i32 %bf.load73, 65535, !dbg !7243
  %cmp75 = icmp eq i32 %bf.clear74, 39, !dbg !7245
  br i1 %cmp75, label %land.lhs.true77, label %if.end82, !dbg !7246

land.lhs.true77:                                  ; preds = %if.else70
  %bf.clear79 = lshr i32 %bf.load73, 28, !dbg !7247
  %12 = trunc i32 %bf.clear79 to i8, !dbg !7247
  %13 = and i8 %12, 1, !dbg !7247
  br label %if.end82, !dbg !7247

if.end82:                                         ; preds = %land.lhs.true77, %if.else70
  %promoted.0 = phi i8 [ 0, %if.else70 ], [ %13, %land.lhs.true77 ], !dbg !7240
  call void @llvm.dbg.value(metadata i8 %promoted.0, metadata !7174, metadata !DIExpression()), !dbg !7240
  %call83 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7248
  %code = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 0, !dbg !7249
  store i32 %call83, i32* %code, align 8, !dbg !7250
  %type85 = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7251
  %14 = bitcast %union.tree_node** %type85 to i64*, !dbg !7251
  %15 = load i64, i64* %14, align 8, !dbg !7251
  %type86 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 1, !dbg !7252
  %16 = bitcast %union.tree_node** %type86 to i64*, !dbg !7253
  store i64 %15, i64* %16, align 8, !dbg !7253
  %call87 = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) #7, !dbg !7254
  %call88 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call87) #7, !dbg !7255
  switch i32 %call88, label %sw.default [
    i32 1, label %sw.bb89
    i32 2, label %sw.bb91
  ], !dbg !7256

sw.bb89:                                          ; preds = %if.end82
  %call90 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !7257
  %op1 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 3, !dbg !7259
  store %union.tree_node* %call90, %union.tree_node** %op1, align 8, !dbg !7260
  br label %sw.bb91, !dbg !7261

sw.bb91:                                          ; preds = %if.end82, %sw.bb89
  %call92 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7262
  %op093 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 2, !dbg !7263
  store %union.tree_node* %call92, %union.tree_node** %op093, align 8, !dbg !7264
  br label %sw.epilog, !dbg !7265

sw.default:                                       ; preds = %if.end82
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1901, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7266
  br label %sw.epilog, !dbg !7267

sw.epilog:                                        ; preds = %sw.default, %sw.bb91
  %call94 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !7268
  %location = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 5, !dbg !7269
  store i32 %call94, i32* %location, align 8, !dbg !7270
  %17 = or i8 %call71, %promoted.0, !dbg !7271
  %18 = icmp eq i8 %17, 0, !dbg !7271
  %cond103 = select i1 %18, %struct.rtx_def* %call72, %struct.rtx_def* null, !dbg !7271
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond103, metadata !7163, metadata !DIExpression()), !dbg !7240
  %bf.load104 = load i32, i32* %11, align 8, !dbg !7272
  %bf.lshr105 = lshr i32 %bf.load104, 16, !dbg !7272
  %bf.clear106 = and i32 %bf.lshr105, 255, !dbg !7272
  call void @llvm.dbg.value(metadata %struct.separate_ops* %ops, metadata !7165, metadata !DIExpression(DW_OP_deref)), !dbg !7240
  %call107 = call %struct.rtx_def* @expand_expr_real_2(%struct.separate_ops* nonnull %ops, %struct.rtx_def* %cond103, i32 %bf.clear106, i32 0) #6, !dbg !7273
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call107, metadata !7163, metadata !DIExpression()), !dbg !7240
  %cmp108 = icmp eq %struct.rtx_def* %call107, %call72, !dbg !7274
  br i1 %cmp108, label %if.end190, label %if.else111, !dbg !7275

if.else111:                                       ; preds = %sw.epilog
  %tobool112 = icmp eq i8 %promoted.0, 0, !dbg !7276
  br i1 %tobool112, label %if.else173, label %if.then113, !dbg !7277

if.then113:                                       ; preds = %if.else111
  %bf.load114 = load i32, i32* %11, align 8, !dbg !7278
  %bf.clear116 = and i32 %bf.load114, 134217728, !dbg !7278
  %tobool117 = icmp eq i32 %bf.clear116, 0, !dbg !7278
  br i1 %tobool117, label %cond.false119, label %cond.end123, !dbg !7278

cond.false119:                                    ; preds = %if.then113
  %bf.lshr121 = lshr i32 %bf.load114, 26, !dbg !7278
  %bf.clear122 = and i32 %bf.lshr121, 1, !dbg !7278
  br label %cond.end123, !dbg !7278

cond.end123:                                      ; preds = %if.then113, %cond.false119
  %cond124 = phi i32 [ %bf.clear122, %cond.false119 ], [ -1, %if.then113 ], !dbg !7278
  call void @llvm.dbg.value(metadata i32 %cond124, metadata !7175, metadata !DIExpression()), !dbg !7279
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call107, i64 0, i32 0, !dbg !7280
  %bf.load125 = load i32, i32* %19, align 8, !dbg !7280
  %bf.clear126 = and i32 %bf.load125, 65535, !dbg !7280
  %idxprom127 = zext i32 %bf.clear126 to i64, !dbg !7280
  %arrayidx128 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom127, !dbg !7280
  %20 = load i32, i32* %arrayidx128, align 4, !dbg !7280
  %cmp129 = icmp eq i32 %20, 9, !dbg !7280
  br i1 %cmp129, label %land.lhs.true131, label %if.end168, !dbg !7282

land.lhs.true131:                                 ; preds = %cond.end123
  %bf.clear134 = and i32 %bf.load125, 16711680, !dbg !7283
  %cmp135 = icmp eq i32 %bf.clear134, 0, !dbg !7284
  br i1 %cmp135, label %if.then137, label %if.end168, !dbg !7285

if.then137:                                       ; preds = %land.lhs.true131
  %bf.lshr139 = lshr i32 %bf.load114, 16, !dbg !7286
  %bf.clear140 = and i32 %bf.lshr139, 255, !dbg !7286
  %21 = bitcast %union.tree_node** %type86 to i64**, !dbg !7288
  %22 = load i64*, i64** %21, align 8, !dbg !7288
  %bf.load143 = load i64, i64* %22, align 8, !dbg !7288
  %bf.cast1454 = and i64 %bf.load143, 65535, !dbg !7288
  %cmp146 = icmp eq i64 %bf.cast1454, 14, !dbg !7288
  br i1 %cmp146, label %cond.true148, label %cond.false151, !dbg !7288

cond.true148:                                     ; preds = %if.then137
  %.cast = bitcast i64* %22 to %union.tree_node*, !dbg !7288
  %call150 = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !7288
  br label %cond.end157, !dbg !7288

cond.false151:                                    ; preds = %if.then137
  %type153 = bitcast i64* %22 to %struct.tree_type*, !dbg !7288
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type153, i64 0, i32 6, !dbg !7288
  %bf.load154 = load i32, i32* %mode, align 4, !dbg !7288
  %bf.lshr155 = lshr i32 %bf.load154, 16, !dbg !7288
  %bf.clear156 = and i32 %bf.lshr155, 255, !dbg !7288
  br label %cond.end157, !dbg !7288

cond.end157:                                      ; preds = %cond.false151, %cond.true148
  %cond158 = phi i32 [ %call150, %cond.true148 ], [ %bf.clear156, %cond.false151 ], !dbg !7288
  %call159 = call %struct.rtx_def* @convert_modes(i32 %bf.clear140, i32 %cond158, %struct.rtx_def* %call107, i32 %cond124) #6, !dbg !7289
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call159, metadata !7163, metadata !DIExpression()), !dbg !7240
  %arrayidx160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call72, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7290
  %23 = bitcast %union.rtunion_def* %arrayidx160 to i32**, !dbg !7290
  %24 = load i32*, i32** %23, align 8, !dbg !7290
  %bf.load161 = load i32, i32* %24, align 8, !dbg !7290
  %bf.lshr162 = lshr i32 %bf.load161, 16, !dbg !7290
  %bf.clear163 = and i32 %bf.lshr162, 255, !dbg !7290
  %bf.load164 = load i32, i32* %11, align 8, !dbg !7291
  %bf.lshr165 = lshr i32 %bf.load164, 16, !dbg !7291
  %bf.clear166 = and i32 %bf.lshr165, 255, !dbg !7291
  %call167 = call %struct.rtx_def* @convert_modes(i32 %bf.clear163, i32 %bf.clear166, %struct.rtx_def* %call159, i32 %cond124) #6, !dbg !7292
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call167, metadata !7163, metadata !DIExpression()), !dbg !7240
  br label %if.end168, !dbg !7293

if.end168:                                        ; preds = %cond.end157, %land.lhs.true131, %cond.end123
  %temp.0 = phi %struct.rtx_def* [ %call167, %cond.end157 ], [ %call107, %land.lhs.true131 ], [ %call107, %cond.end123 ], !dbg !7240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !7163, metadata !DIExpression()), !dbg !7240
  %arrayidx171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call72, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7294
  %rt_rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**, !dbg !7294
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !7294
  call void @convert_move(%struct.rtx_def* %25, %struct.rtx_def* %temp.0, i32 %cond124) #6, !dbg !7295
  br label %if.end190, !dbg !7296

if.else173:                                       ; preds = %if.else111
  %tobool175 = icmp eq i8 %call71, 0, !dbg !7297
  br i1 %tobool175, label %if.else181, label %land.lhs.true176, !dbg !7299

land.lhs.true176:                                 ; preds = %if.else173
  %call177 = call zeroext i8 @emit_storent_insn(%struct.rtx_def* %call72, %struct.rtx_def* %call107) #6, !dbg !7300
  %tobool179 = icmp eq i8 %call177, 0, !dbg !7300
  br i1 %tobool179, label %if.else181, label %if.end190, !dbg !7301

if.else181:                                       ; preds = %land.lhs.true176, %if.else173
  %call182 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call107, %struct.rtx_def* %call72) #6, !dbg !7302
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call182, metadata !7163, metadata !DIExpression()), !dbg !7240
  %cmp183 = icmp eq %struct.rtx_def* %call182, %call72, !dbg !7304
  br i1 %cmp183, label %if.end190, label %if.then185, !dbg !7306

if.then185:                                       ; preds = %if.else181
  %call186 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call72, %struct.rtx_def* %call182) #6, !dbg !7307
  br label %if.end190, !dbg !7307

if.end190:                                        ; preds = %land.lhs.true176, %if.else181, %if.end168, %if.then185, %sw.epilog
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #8, !dbg !7308
  br label %sw.epilog193

sw.default192:                                    ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1943, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7309
  br label %sw.epilog193, !dbg !7310

sw.epilog193:                                     ; preds = %if.end68, %if.end190, %if.then24, %if.else25, %entry, %entry, %if.then, %if.else, %sw.default192, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb2
  ret void, !dbg !7311
}

declare dso_local void @free_temp_slots() local_unnamed_addr #2

declare dso_local i32 @lookup_stmt_eh_lp(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @next_real_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @insn_could_throw_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @make_reg_eh_region_note(%struct.rtx_def*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7312 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7314, metadata !DIExpression()), !dbg !7315
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !7316
  ret %union.tree_node* %call, !dbg !7317
}

declare dso_local void @expand_goto(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @expand_computed_goto(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @expand_label(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7318 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7320, metadata !DIExpression()), !dbg !7321
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !7322
  ret %union.tree_node* %call, !dbg !7323
}

declare dso_local void @expand_case(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @expand_asm_stmt(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_call_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !7324 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7326, metadata !DIExpression()), !dbg !7337
  %call = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7338
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7328, metadata !DIExpression()), !dbg !7337
  %call1 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !7339
  %add = add i32 %call1, 3, !dbg !7339
  %call2 = tail call %union.tree_node* @build_vl_exp_stat(i32 59, i32 %add) #6, !dbg !7339
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7327, metadata !DIExpression()), !dbg !7337
  %call3 = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %stmt) #7, !dbg !7340
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7341
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7341
  store %union.tree_node* %call3, %union.tree_node** %arrayidx, align 8, !dbg !7342
  %call5 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #7, !dbg !7343
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !7331, metadata !DIExpression()), !dbg !7337
  %tobool = icmp eq %union.tree_node* %call5, null, !dbg !7344
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !7345

land.rhs:                                         ; preds = %entry
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 5, !dbg !7346
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !7346
  %bf.clear = and i32 %bf.load, 6144, !dbg !7346
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !7346
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i1 [ true, %entry ], [ %cmp, %land.rhs ]
  %call6 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #7, !dbg !7347
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7348
  store %union.tree_node* %call6, %union.tree_node** %type, align 8, !dbg !7349
  %call7 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !7350
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7351
  store %union.tree_node* %call7, %union.tree_node** %arrayidx10, align 8, !dbg !7352
  call void @llvm.dbg.value(metadata i64 0, metadata !7329, metadata !DIExpression()), !dbg !7337
  br i1 %0, label %land.end.split.us, label %land.end.land.end.split_crit_edge, !dbg !7353

land.end.land.end.split_crit_edge:                ; preds = %land.end
  br label %for.cond, !dbg !7353

land.end.split.us:                                ; preds = %land.end
  br label %for.cond.us, !dbg !7353

for.cond.us:                                      ; preds = %for.body.us, %land.end.split.us
  %i.0.us = phi i64 [ 0, %land.end.split.us ], [ %inc.us, %for.body.us ], !dbg !7354
  call void @llvm.dbg.value(metadata i64 %i.0.us, metadata !7329, metadata !DIExpression()), !dbg !7337
  %call11.us = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !7355
  %conv12.us = zext i32 %call11.us to i64, !dbg !7355
  %cmp13.us = icmp ult i64 %i.0.us, %conv12.us, !dbg !7356
  br i1 %cmp13.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !7357

for.body.us:                                      ; preds = %for.cond.us
  %conv15.us = trunc i64 %i.0.us to i32, !dbg !7358
  %call16.us = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %conv15.us) #7, !dbg !7359
  call void @llvm.dbg.value(metadata %union.tree_node* %call16.us, metadata !7332, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata %union.tree_node* %call16.us, metadata !7332, metadata !DIExpression()), !dbg !7360
  %add33.us = add nuw nsw i64 %i.0.us, 3, !dbg !7361
  %arrayidx34.us = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %add33.us, !dbg !7361
  store %union.tree_node* %call16.us, %union.tree_node** %arrayidx34.us, align 8, !dbg !7362
  %inc.us = add nuw nsw i64 %i.0.us, 1, !dbg !7363
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !7329, metadata !DIExpression()), !dbg !7337
  br label %for.cond.us, !dbg !7364, !llvm.loop !7365

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !7367

for.cond:                                         ; preds = %if.end, %land.end.land.end.split_crit_edge
  %i.0 = phi i64 [ 0, %land.end.land.end.split_crit_edge ], [ %inc, %if.end ], !dbg !7354
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !7329, metadata !DIExpression()), !dbg !7337
  %call11 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !7355
  %conv12 = zext i32 %call11 to i64, !dbg !7355
  %cmp13 = icmp ult i64 %i.0, %conv12, !dbg !7356
  br i1 %cmp13, label %for.body, label %for.end.us-lcssa, !dbg !7357

for.body:                                         ; preds = %for.cond
  %conv15 = trunc i64 %i.0 to i32, !dbg !7358
  %call16 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %conv15) #7, !dbg !7359
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !7332, metadata !DIExpression()), !dbg !7360
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7369
  %bf.load19 = load i64, i64* %1, align 8, !dbg !7369
  %bf.cast2 = and i64 %bf.load19, 65535, !dbg !7371
  %cmp21 = icmp eq i64 %bf.cast2, 141, !dbg !7371
  br i1 %cmp21, label %land.lhs.true23, label %if.end, !dbg !7372

land.lhs.true23:                                  ; preds = %for.body
  %call24 = tail call fastcc %union.gimple_statement_d* @get_gimple_for_ssa_name(%union.tree_node* %call16) #7, !dbg !7373
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call24, metadata !7336, metadata !DIExpression()), !dbg !7360
  %tobool25 = icmp eq %union.gimple_statement_d* %call24, null, !dbg !7374
  br i1 %tobool25, label %if.end, label %land.lhs.true26, !dbg !7375

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %call27 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* nonnull %call24) #7, !dbg !7376
  %cmp28 = icmp eq i32 %call27, 121, !dbg !7377
  br i1 %cmp28, label %if.then, label %if.end, !dbg !7378

if.then:                                          ; preds = %land.lhs.true26
  %call30 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call24) #7, !dbg !7379
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !7332, metadata !DIExpression()), !dbg !7360
  br label %if.end, !dbg !7380

if.end:                                           ; preds = %land.lhs.true23, %if.then, %land.lhs.true26, %for.body
  %arg.0 = phi %union.tree_node* [ %call30, %if.then ], [ %call16, %land.lhs.true26 ], [ %call16, %land.lhs.true23 ], [ %call16, %for.body ], !dbg !7360
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !7332, metadata !DIExpression()), !dbg !7360
  %add33 = add nuw nsw i64 %i.0, 3, !dbg !7361
  %arrayidx34 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %add33, !dbg !7361
  store %union.tree_node* %arg.0, %union.tree_node** %arrayidx34, align 8, !dbg !7362
  %inc = add nuw nsw i64 %i.0, 1, !dbg !7363
  call void @llvm.dbg.value(metadata i64 %inc, metadata !7329, metadata !DIExpression()), !dbg !7337
  br label %for.cond, !dbg !7364, !llvm.loop !7365

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !7367

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %call35 = tail call zeroext i8 @gimple_has_side_effects(%union.gimple_statement_d* %stmt) #6, !dbg !7367
  %tobool36 = icmp eq i8 %call35, 0, !dbg !7367
  br i1 %tobool36, label %if.end41, label %if.then37, !dbg !7381

if.then37:                                        ; preds = %for.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7382
  %bf.load39 = load i64, i64* %2, align 8, !dbg !7383
  %bf.set = or i64 %bf.load39, 65536, !dbg !7383
  store i64 %bf.set, i64* %2, align 8, !dbg !7383
  br label %if.end41, !dbg !7382

if.end41:                                         ; preds = %for.end, %if.then37
  %call42 = tail call fastcc zeroext i8 @gimple_call_nothrow_p(%union.gimple_statement_d* %stmt) #7, !dbg !7384
  %tobool43 = icmp eq i8 %call42, 0, !dbg !7384
  br i1 %tobool43, label %if.end49, label %if.then44, !dbg !7386

if.then44:                                        ; preds = %if.end41
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7387
  %bf.load46 = load i64, i64* %3, align 8, !dbg !7388
  %bf.set48 = or i64 %bf.load46, 33554432, !dbg !7388
  store i64 %bf.set48, i64* %3, align 8, !dbg !7388
  br label %if.end49, !dbg !7387

if.end49:                                         ; preds = %if.end41, %if.then44
  %call50 = tail call fastcc zeroext i8 @gimple_call_tail_p(%union.gimple_statement_d* %stmt) #7, !dbg !7389
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7390
  %bf.load53 = load i64, i64* %4, align 8, !dbg !7391
  %5 = and i8 %call50, 1, !dbg !7391
  %bf.value = zext i8 %5 to i64, !dbg !7391
  %bf.shl = shl nuw nsw i64 %bf.value, 18, !dbg !7391
  %bf.clear54 = and i64 %bf.load53, -262145, !dbg !7391
  %bf.set55 = or i64 %bf.clear54, %bf.shl, !dbg !7391
  store i64 %bf.set55, i64* %4, align 8, !dbg !7391
  %call56 = tail call fastcc zeroext i8 @gimple_call_return_slot_opt_p(%union.gimple_statement_d* %stmt) #7, !dbg !7392
  %bf.load59 = load i64, i64* %4, align 8, !dbg !7393
  %6 = and i8 %call56, 1, !dbg !7393
  %bf.value60 = zext i8 %6 to i64, !dbg !7393
  %bf.shl61 = shl nuw nsw i64 %bf.value60, 28, !dbg !7393
  %bf.clear62 = and i64 %bf.load59, -268435457, !dbg !7393
  %bf.set63 = or i64 %bf.clear62, %bf.shl61, !dbg !7393
  store i64 %bf.set63, i64* %4, align 8, !dbg !7393
  %call65 = tail call fastcc zeroext i8 @gimple_call_from_thunk_p(%union.gimple_statement_d* %stmt) #7, !dbg !7394
  %bf.load68 = load i64, i64* %4, align 8, !dbg !7395
  %7 = and i8 %call65, 1, !dbg !7395
  %bf.value69 = zext i8 %7 to i64, !dbg !7395
  %bf.shl70 = shl nuw nsw i64 %bf.value69, 29, !dbg !7395
  %bf.clear71 = and i64 %bf.load68, -536870913, !dbg !7395
  %bf.set72 = or i64 %bf.clear71, %bf.shl70, !dbg !7395
  store i64 %bf.set72, i64* %4, align 8, !dbg !7395
  %call74 = tail call fastcc zeroext i8 @gimple_call_cannot_inline_p(%union.gimple_statement_d* %stmt) #7, !dbg !7396
  %bf.load77 = load i64, i64* %4, align 8, !dbg !7397
  %8 = and i8 %call74, 1, !dbg !7397
  %bf.value78 = zext i8 %8 to i64, !dbg !7397
  %bf.shl79 = shl nuw nsw i64 %bf.value78, 26, !dbg !7397
  %bf.clear80 = and i64 %bf.load77, -67108865, !dbg !7397
  %bf.set81 = or i64 %bf.clear80, %bf.shl79, !dbg !7397
  store i64 %bf.set81, i64* %4, align 8, !dbg !7397
  %call83 = tail call fastcc zeroext i8 @gimple_call_va_arg_pack_p(%union.gimple_statement_d* %stmt) #7, !dbg !7398
  %bf.load86 = load i64, i64* %4, align 8, !dbg !7399
  %9 = and i8 %call83, 1, !dbg !7399
  %bf.value87 = zext i8 %9 to i64, !dbg !7399
  %bf.shl88 = shl nuw nsw i64 %bf.value87, 27, !dbg !7399
  %bf.clear89 = and i64 %bf.load86, -134217729, !dbg !7399
  %bf.set90 = or i64 %bf.clear89, %bf.shl88, !dbg !7399
  store i64 %bf.set90, i64* %4, align 8, !dbg !7399
  %call92 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !7400
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7400
  store i32 %call92, i32* %10, align 8, !dbg !7400
  %call94 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %stmt) #7, !dbg !7401
  %call95 = tail call %union.tree_node** @tree_block(%union.tree_node* %call2) #6, !dbg !7402
  store %union.tree_node* %call94, %union.tree_node** %call95, align 8, !dbg !7403
  %tobool96 = icmp eq %union.tree_node* %call, null, !dbg !7404
  br i1 %tobool96, label %if.else, label %if.then97, !dbg !7406

if.then97:                                        ; preds = %if.end49
  tail call void @expand_assignment(%union.tree_node* nonnull %call, %union.tree_node* %call2, i8 zeroext 0) #6, !dbg !7407
  br label %if.end99, !dbg !7407

if.else:                                          ; preds = %if.end49
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7408
  %call98 = tail call %struct.rtx_def* @expand_expr_real_1(%union.tree_node* %call2, %struct.rtx_def* %11, i32 0, i32 0, %struct.rtx_def** null) #6, !dbg !7409
  br label %if.end99

if.end99:                                         ; preds = %if.else, %if.then97
  ret void, !dbg !7410
}

declare dso_local void @expand_null_return() local_unnamed_addr #2

declare dso_local void @expand_return(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @expand_assignment(%union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_assign_nontemporal_move_p(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7411 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7413, metadata !DIExpression()), !dbg !7414
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !7415
  %bf.load = load i32, i32* %0, align 8, !dbg !7415
  %bf.lshr = lshr i32 %bf.load, 10, !dbg !7415
  %1 = trunc i32 %bf.lshr to i8, !dbg !7416
  %conv = and i8 %1, 1, !dbg !7416
  ret i8 %conv, !dbg !7417
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !7418 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !7422, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !7423, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7424, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !7425, metadata !DIExpression()), !dbg !7426
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 %mode, i32 %modifier, %struct.rtx_def** null) #6, !dbg !7427
  ret %struct.rtx_def* %call, !dbg !7428
}

declare dso_local %struct.rtx_def* @expand_expr_real_2(%struct.separate_ops*, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @convert_modes(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @convert_move(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @emit_storent_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7429 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7431, metadata !DIExpression()), !dbg !7432
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !7433
  ret %union.tree_node* %call, !dbg !7434
}

declare dso_local %union.tree_node* @build_vl_exp_stat(i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7435 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7437, metadata !DIExpression()), !dbg !7439
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !7440
  call void @llvm.dbg.value(metadata i32 %call, metadata !7438, metadata !DIExpression()), !dbg !7439
  %sub = add i32 %call, -3, !dbg !7441
  ret i32 %sub, !dbg !7442
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7443 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7445, metadata !DIExpression()), !dbg !7446
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !7447
  ret %union.tree_node* %call, !dbg !7448
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7449 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7451, metadata !DIExpression()), !dbg !7453
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !7454
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7452, metadata !DIExpression()), !dbg !7453
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7455
  %bf.load = load i64, i64* %0, align 8, !dbg !7455
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7457
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !7457
  br i1 %cmp, label %if.then, label %cleanup, !dbg !7458

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7459
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7459
  br label %cleanup, !dbg !7460

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !7453
  ret %union.tree_node* %retval.0, !dbg !7461
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7462 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7464, metadata !DIExpression()), !dbg !7467
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !7468
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7465, metadata !DIExpression()), !dbg !7467
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7469
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !7469
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !7469
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !7470
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !7470
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !7470
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !7471
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !7471
  ret %union.tree_node* %4, !dbg !7472
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7473 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7475, metadata !DIExpression()), !dbg !7476
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !7477
  ret %union.tree_node* %call, !dbg !7478
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !7479 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7481, metadata !DIExpression()), !dbg !7483
  call void @llvm.dbg.value(metadata i32 %index, metadata !7482, metadata !DIExpression()), !dbg !7483
  %add = add i32 %index, 3, !dbg !7484
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !7485
  ret %union.tree_node* %call, !dbg !7486
}

declare dso_local zeroext i8 @gimple_has_side_effects(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_nothrow_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7487 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7489, metadata !DIExpression()), !dbg !7490
  %call = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %s) #6, !dbg !7491
  %and = lshr i32 %call, 6, !dbg !7492
  %0 = trunc i32 %and to i8, !dbg !7492
  %1 = and i8 %0, 1, !dbg !7492
  ret i8 %1, !dbg !7493
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_return_slot_opt_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7494 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7496, metadata !DIExpression()), !dbg !7497
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !7498
  %bf.load = load i32, i32* %0, align 8, !dbg !7498
  %and = lshr i32 %bf.load, 18, !dbg !7499
  %1 = trunc i32 %and to i8, !dbg !7499
  %2 = and i8 %1, 1, !dbg !7499
  ret i8 %2, !dbg !7500
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_from_thunk_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7501 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7503, metadata !DIExpression()), !dbg !7504
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !7505
  %bf.load = load i32, i32* %0, align 8, !dbg !7505
  %and = lshr i32 %bf.load, 17, !dbg !7506
  %1 = trunc i32 %and to i8, !dbg !7506
  %2 = and i8 %1, 1, !dbg !7506
  ret i8 %2, !dbg !7507
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_cannot_inline_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7508 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7510, metadata !DIExpression()), !dbg !7511
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !7512
  %bf.load = load i32, i32* %0, align 8, !dbg !7512
  %and = lshr i32 %bf.load, 16, !dbg !7513
  %1 = trunc i32 %and to i8, !dbg !7513
  %2 = and i8 %1, 1, !dbg !7513
  ret i8 %2, !dbg !7514
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_va_arg_pack_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7515 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7517, metadata !DIExpression()), !dbg !7518
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !7519
  %bf.load = load i32, i32* %0, align 8, !dbg !7519
  %and = lshr i32 %bf.load, 20, !dbg !7520
  %1 = trunc i32 %and to i8, !dbg !7520
  %2 = and i8 %1, 1, !dbg !7520
  ret i8 %2, !dbg !7521
}

declare dso_local %struct.rtx_def* @expand_expr_real_1(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #2

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #2

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

declare dso_local void @print_rtl(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !7522 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7526, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7527, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7528, metadata !DIExpression()), !dbg !7529
  %0 = and i32 %flags, 10, !dbg !7530
  %1 = icmp eq i32 %0, 8, !dbg !7530
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !7530

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !7530
  %3 = icmp eq i32 %2, 4, !dbg !7530
  br i1 %3, label %cond.true, label %cond.end, !dbg !7530

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7530
  br label %cond.end, !dbg !7530

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !7531
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !7532

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !7533
  br label %cond.end12, !dbg !7532

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !7532
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !7534
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !7535
  %and14 = and i32 %flags, 8, !dbg !7536
  %tobool15 = icmp eq i32 %and14, 0, !dbg !7536
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !7538

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !7539
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !7540

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !7541
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !7542
  br i1 %cmp, label %if.end, label %if.then, !dbg !7543

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !7544
  %6 = load i64*, i64** %5, align 8, !dbg !7544
  %7 = load i64, i64* %6, align 8, !dbg !7545
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !7546
  store i64 %7, i64* %8, align 8, !dbg !7546
  br label %if.end, !dbg !7547

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !7548
  %tobool24 = icmp eq i32 %and23, 0, !dbg !7548
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !7549

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !7550
  br label %cond.end28, !dbg !7549

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !7549
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7551
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !7552
  %and30 = and i32 %flags, 4, !dbg !7553
  %tobool31 = icmp eq i32 %and30, 0, !dbg !7553
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !7555

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !7556
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !7557

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7558
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !7559
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !7560

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !7561
  %11 = load i64*, i64** %10, align 8, !dbg !7561
  %12 = load i64, i64* %11, align 8, !dbg !7562
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !7563
  store i64 %12, i64* %13, align 8, !dbg !7563
  br label %if.end42, !dbg !7564

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7565
  store i8 0, i8* %done, align 8, !dbg !7566
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !7567
  store i32 0, i32* %phi_i, align 8, !dbg !7568
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7569
  store i32 0, i32* %num_phi, align 4, !dbg !7570
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7571
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7572
  ret void, !dbg !7573
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7574 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7578, metadata !DIExpression()), !dbg !7579
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !7580
  %tobool = icmp eq i8 %call, 0, !dbg !7580
  br i1 %tobool, label %return, label %if.end, !dbg !7582

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !7583
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !7583
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !7583
  br label %return, !dbg !7584

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !7579
  ret %struct.def_optype_d* %retval.0, !dbg !7585
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7586 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7588, metadata !DIExpression()), !dbg !7589
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !7590
  %tobool = icmp eq i8 %call, 0, !dbg !7590
  br i1 %tobool, label %return, label %if.end, !dbg !7592

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !7593
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !7593
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !7593
  br label %return, !dbg !7594

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !7589
  ret %union.tree_node* %retval.0, !dbg !7595
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7596 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7600, metadata !DIExpression()), !dbg !7601
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !7602
  %tobool = icmp eq i8 %call, 0, !dbg !7602
  br i1 %tobool, label %return, label %if.end, !dbg !7604

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !7605
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !7605
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !7605
  br label %return, !dbg !7606

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !7601
  ret %struct.use_optype_d* %retval.0, !dbg !7607
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7608 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7610, metadata !DIExpression()), !dbg !7611
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !7612
  %tobool = icmp eq i8 %call, 0, !dbg !7612
  br i1 %tobool, label %return, label %if.end, !dbg !7614

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !7615
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !7615
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !7615
  br label %return, !dbg !7616

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !7611
  ret %union.tree_node* %retval.0, !dbg !7617
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7618 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7620, metadata !DIExpression()), !dbg !7621
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !7622
  %cmp = icmp ugt i32 %call, 5, !dbg !7623
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7624

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !7625
  %cmp2 = icmp ult i32 %call1, 10, !dbg !7626
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !7627
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %head, %struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7628 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7632, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7633, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7635, metadata !DIExpression()), !dbg !7640
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head, i64 0, i32 2, i32 0, !dbg !7641
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7641
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !7636, metadata !DIExpression()), !dbg !7640
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %head) #7, !dbg !7642
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7637, metadata !DIExpression()), !dbg !7640
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !7643
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !7643
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !7644
  %tobool = icmp eq i8 %call1, 0, !dbg !7644
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !7644
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7639, metadata !DIExpression()), !dbg !7640
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #7, !dbg !7645
  %cmp = icmp eq i32 %call2, 16, !dbg !7647
  br i1 %cmp, label %if.then, label %if.else, !dbg !7648

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7640
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !7649
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !7634, metadata !DIExpression()), !dbg !7640
  br label %for.cond, !dbg !7649

for.cond:                                         ; preds = %for.inc, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.then ], [ %call12, %for.inc ], !dbg !7652
  %last_p.0 = phi %struct.ssa_use_operand_d* [ %head, %if.then ], [ %last_p.1, %for.inc ], !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !7634, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7640
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7653
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7653
  br i1 %tobool6, label %for.body, label %if.end44.loopexit, !dbg !7649

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !7655
  %cmp8 = icmp eq %union.tree_node* %call7, %call, !dbg !7657
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !7658

if.then10:                                        ; preds = %for.body
  %call11 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.0, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.0) #7, !dbg !7659
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !7635, metadata !DIExpression()), !dbg !7640
  br label %for.inc, !dbg !7660

for.inc:                                          ; preds = %for.body, %if.then10
  %last_p.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.then10 ], [ %last_p.0, %for.body ], !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.1, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7640
  %call12 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7653
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call12, metadata !7634, metadata !DIExpression()), !dbg !7640
  br label %for.cond, !dbg !7653, !llvm.loop !7661

if.else:                                          ; preds = %entry
  br i1 %tobool, label %if.else31, label %if.then15, !dbg !7663

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7640
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !7665
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !7634, metadata !DIExpression()), !dbg !7640
  br label %for.cond17, !dbg !7665

for.cond17:                                       ; preds = %for.inc28, %if.then15
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call29, %for.inc28 ], !dbg !7669
  %last_p.2 = phi %struct.ssa_use_operand_d* [ %head, %if.then15 ], [ %last_p.3, %for.inc28 ], !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !7634, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7640
  %call18 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7670
  %tobool19 = icmp eq i8 %call18, 0, !dbg !7670
  br i1 %tobool19, label %for.body21, label %if.end44.loopexit1, !dbg !7665

for.body21:                                       ; preds = %for.cond17
  %call22 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1) #7, !dbg !7672
  %cmp23 = icmp eq %union.tree_node* %call22, %call, !dbg !7674
  br i1 %cmp23, label %if.then25, label %for.inc28, !dbg !7675

if.then25:                                        ; preds = %for.body21
  %call26 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.1, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.2) #7, !dbg !7676
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !7635, metadata !DIExpression()), !dbg !7640
  br label %for.inc28, !dbg !7677

for.inc28:                                        ; preds = %for.body21, %if.then25
  %last_p.3 = phi %struct.ssa_use_operand_d* [ %call26, %if.then25 ], [ %last_p.2, %for.body21 ], !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.3, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7640
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7670
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !7634, metadata !DIExpression()), !dbg !7640
  br label %for.cond17, !dbg !7670, !llvm.loop !7678

if.else31:                                        ; preds = %if.else
  %call32 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %0) #7, !dbg !7680
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call32, metadata !7634, metadata !DIExpression()), !dbg !7640
  %cmp33 = icmp eq %struct.ssa_use_operand_d* %call32, null, !dbg !7682
  br i1 %cmp33, label %if.end44, label %if.then35, !dbg !7683

if.then35:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call32) #7, !dbg !7684
  %cmp37 = icmp eq %union.tree_node* %call36, %call, !dbg !7687
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !7688

if.then39:                                        ; preds = %if.then35
  %call40 = tail call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* nonnull %call32, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %head) #7, !dbg !7689
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !7635, metadata !DIExpression()), !dbg !7640
  br label %if.end44, !dbg !7690

if.end44.loopexit:                                ; preds = %for.cond
  %last_p.0.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.0, %for.cond ], !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7635, metadata !DIExpression()), !dbg !7640
  br label %if.end44, !dbg !7691

if.end44.loopexit1:                               ; preds = %for.cond17
  %last_p.2.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.2, %for.cond17 ], !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7635, metadata !DIExpression()), !dbg !7640
  br label %if.end44, !dbg !7691

if.end44:                                         ; preds = %if.end44.loopexit1, %if.end44.loopexit, %if.else31, %if.then35, %if.then39
  %last_p.7 = phi %struct.ssa_use_operand_d* [ %head, %if.else31 ], [ %call40, %if.then39 ], [ %head, %if.then35 ], [ %last_p.0.lcssa, %if.end44.loopexit ], [ %last_p.2.lcssa, %if.end44.loopexit1 ], !dbg !7693
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.7, metadata !7635, metadata !DIExpression()), !dbg !7640
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !7691
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7691
  %cmp45 = icmp eq %struct.ssa_use_operand_d* %2, null, !dbg !7694
  br i1 %cmp45, label %if.end49, label %if.then47, !dbg !7695

if.then47:                                        ; preds = %if.end44
  %iter_node48 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7696
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node48) #7, !dbg !7697
  br label %if.end49, !dbg !7697

if.end49:                                         ; preds = %if.end44, %if.then47
  %iter_node50 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7698
  call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* nonnull %iter_node50, %struct.ssa_use_operand_d* %last_p.7) #7, !dbg !7699
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !7700
  ret void, !dbg !7700
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !7701 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !7705, metadata !DIExpression()), !dbg !7706
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !7707
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !7707
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !7708
  ret %union.tree_node* %1, !dbg !7709
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !7710 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7714, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !7715, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7716, metadata !DIExpression()), !dbg !7719
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !7720
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7717, metadata !DIExpression()), !dbg !7719
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7721
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7722
  store i8 0, i8* %done, align 8, !dbg !7723
  %and = and i32 %flags, 5, !dbg !7724
  %cmp = icmp eq i32 %and, 0, !dbg !7724
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7724

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7724
  br label %cond.end, !dbg !7724

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !7725
  %tobool = icmp eq i8 %call1, 0, !dbg !7725
  %cond2 = select i1 %tobool, i32 4, i32 1, !dbg !7725
  call void @llvm.dbg.value(metadata i32 %cond2, metadata !7718, metadata !DIExpression()), !dbg !7719
  %and3 = and i32 %cond2, %flags, !dbg !7726
  %cmp4 = icmp eq i32 %and3, 0, !dbg !7728
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7729

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %done, align 8, !dbg !7730
  br label %cleanup, !dbg !7732

if.end:                                           ; preds = %cond.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7733
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7734
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !7735
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7736
  store i32 %call7, i32* %num_phi, align 4, !dbg !7737
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7738
  store i32 2, i32* %iter_type, align 4, !dbg !7739
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7740
  br label %cleanup, !dbg !7741

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !7719
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7742
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p) unnamed_addr #0 !dbg !7743 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !7747, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7748, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p, metadata !7749, metadata !DIExpression()), !dbg !7750
  %cmp = icmp eq %struct.ssa_use_operand_d* %use_p, %head, !dbg !7751
  br i1 %cmp, label %if.end3, label %if.then, !dbg !7753

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %last_p, i64 0, i32 1, !dbg !7754
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !7754
  %cmp1 = icmp eq %struct.ssa_use_operand_d* %0, %use_p, !dbg !7757
  br i1 %cmp1, label %if.end3, label %if.else, !dbg !7758

if.else:                                          ; preds = %if.then
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p) #7, !dbg !7759
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %last_p) #7, !dbg !7761
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !7749, metadata !DIExpression()), !dbg !7750
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.else, %if.then
  %last_p.addr.1 = phi %struct.ssa_use_operand_d* [ %last_p, %entry ], [ %use_p, %if.then ], [ %use_p, %if.else ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.addr.1, metadata !7749, metadata !DIExpression()), !dbg !7750
  ret %struct.ssa_use_operand_d* %last_p.addr.1, !dbg !7762
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7763 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7767, metadata !DIExpression()), !dbg !7769
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7770
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !7770
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !7772
  br i1 %tobool, label %if.end, label %if.then, !dbg !7773

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !7774
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !7768, metadata !DIExpression()), !dbg !7769
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !7776
  %2 = load i64, i64* %1, align 8, !dbg !7776
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !7777
  store i64 %2, i64* %3, align 8, !dbg !7777
  br label %cleanup, !dbg !7778

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !7779
  %4 = load i32, i32* %phi_i, align 8, !dbg !7779
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7781
  %5 = load i32, i32* %num_phi, align 4, !dbg !7781
  %cmp = icmp slt i32 %4, %5, !dbg !7782
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !7783

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7784
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7784
  %inc = add nsw i32 %4, 1, !dbg !7784
  store i32 %inc, i32* %phi_i, align 8, !dbg !7784
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !7784
  br label %cleanup, !dbg !7786

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7787
  store i8 1, i8* %done, align 8, !dbg !7788
  br label %cleanup, !dbg !7789

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !7769
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7790
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !7791 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7793, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7794, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7795, metadata !DIExpression()), !dbg !7796
  %0 = and i32 %flags, 11, !dbg !7797
  %1 = icmp eq i32 %0, 1, !dbg !7797
  br i1 %1, label %cond.end, label %cond.true, !dbg !7797

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7797
  br label %cond.end, !dbg !7797

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !7798
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7799
  store i32 2, i32* %iter_type, align 4, !dbg !7800
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7801
  ret %struct.ssa_use_operand_d* %call, !dbg !7802
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7803 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7807, metadata !DIExpression()), !dbg !7809
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !7810
  %tobool = icmp eq i8 %call, 0, !dbg !7810
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7812

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !7813
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !7813
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !7813
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !7808, metadata !DIExpression()), !dbg !7809
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !7814
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !7816

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !7817
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !7817
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !7818
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !7818
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !7819
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !7820
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !7821
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !7821

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !7822
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !7823 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7827, metadata !DIExpression()), !dbg !7828
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7829
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7829
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !7831
  br i1 %cmp, label %return, label %if.end, !dbg !7832

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !7833
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7833
  %2 = load i64, i64* %1, align 8, !dbg !7833
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !7834
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !7835
  store i64 %2, i64* %3, align 8, !dbg !7835
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !7836
  %5 = load i64, i64* %4, align 8, !dbg !7836
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !7837
  %7 = load i64*, i64** %6, align 8, !dbg !7837
  store i64 %5, i64* %7, align 8, !dbg !7838
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7839
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !7840
  br label %return, !dbg !7841

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !7841
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !7842 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7846, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !7847, metadata !DIExpression()), !dbg !7848
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7849
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7850
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !7851
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7851
  %1 = load i64, i64* %0, align 8, !dbg !7851
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !7852
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !7853
  store i64 %1, i64* %2, align 8, !dbg !7853
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !7854
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !7855
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !7856
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !7857
  ret void, !dbg !7858
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7859 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7861, metadata !DIExpression()), !dbg !7862
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !7863
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !7863
  ret %union.tree_node* %0, !dbg !7864
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7865 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7869, metadata !DIExpression()), !dbg !7870
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !7871
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !7872
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7873
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !7874
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7875
  store i32 0, i32* %iter_type, align 4, !dbg !7876
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !7877
  store i32 0, i32* %phi_i, align 8, !dbg !7878
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7879
  store i32 0, i32* %num_phi, align 4, !dbg !7880
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7881
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7882
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7883
  store i8 1, i8* %done, align 8, !dbg !7884
  ret void, !dbg !7885
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7886 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7888, metadata !DIExpression()), !dbg !7889
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !7890
  %0 = load i32, i32* %nargs, align 4, !dbg !7890
  ret i32 %0, !dbg !7891
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !7892 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7896, metadata !DIExpression()), !dbg !7898
  call void @llvm.dbg.value(metadata i32 %i, metadata !7897, metadata !DIExpression()), !dbg !7898
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !7899
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !7900
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !7901
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !7902 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7907, metadata !DIExpression()), !dbg !7909
  call void @llvm.dbg.value(metadata i32 %index, metadata !7908, metadata !DIExpression()), !dbg !7909
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !7910
  %0 = load i32, i32* %capacity, align 8, !dbg !7910
  %cmp = icmp ult i32 %0, %index, !dbg !7910
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7910

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7910
  br label %cond.end, !dbg !7910

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !7911
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !7911
  ret %struct.phi_arg_d* %arrayidx, !dbg !7912
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !7913 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7917, metadata !DIExpression()), !dbg !7920
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !7918, metadata !DIExpression()), !dbg !7920
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !7921
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7923

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7924
  %bf.load = load i64, i64* %0, align 8, !dbg !7924
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7925
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !7925
  br i1 %cmp, label %if.else, label %if.then, !dbg !7926

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7927
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7928
  br label %if.end, !dbg !7929

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7930
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !7930
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !7919, metadata !DIExpression()), !dbg !7920
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #7, !dbg !7932
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7933
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7934 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7936, metadata !DIExpression()), !dbg !7937
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !7938
  %bf.load = load i32, i32* %0, align 8, !dbg !7938
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7938
  ret i32 %bf.lshr, !dbg !7939
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7940 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7942, metadata !DIExpression()), !dbg !7943
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !7944
  ret %union.tree_node* %call, !dbg !7945
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7946 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7948, metadata !DIExpression()), !dbg !7949
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !7950
  ret %union.tree_node* %call, !dbg !7951
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_cond_single_var_p(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7952 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7954, metadata !DIExpression()), !dbg !7955
  %call = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) #7, !dbg !7956
  %cmp = icmp eq i32 %call, 102, !dbg !7958
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7959

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) #7, !dbg !7960
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !7961
  %cmp2 = icmp eq %union.tree_node* %call1, %0, !dbg !7962
  br i1 %cmp2, label %return, label %if.end, !dbg !7963

if.end:                                           ; preds = %land.lhs.true, %entry
  %call3 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) #7, !dbg !7964
  %cmp4 = icmp eq i32 %call3, 101, !dbg !7966
  br i1 %cmp4, label %land.lhs.true5, label %if.end9, !dbg !7967

land.lhs.true5:                                   ; preds = %if.end
  %call6 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) #7, !dbg !7968
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !7969
  %cmp7 = icmp eq %union.tree_node* %call6, %1, !dbg !7970
  br i1 %cmp7, label %return, label %if.end9, !dbg !7971

if.end9:                                          ; preds = %land.lhs.true5, %if.end
  br label %return, !dbg !7972

return:                                           ; preds = %land.lhs.true5, %land.lhs.true, %if.end9
  %retval.0 = phi i8 [ 0, %if.end9 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true5 ], !dbg !7955
  ret i8 %retval.0, !dbg !7973
}

declare dso_local zeroext i8 @optimize_insn_for_speed_p() local_unnamed_addr #2

declare dso_local void @extract_true_false_edges_from_block(%struct.basic_block_def*, %struct.edge_def**, %struct.edge_def**) local_unnamed_addr #2

declare dso_local void @jumpif_1(i32, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @maybe_cleanup_end_of_block(%struct.edge_def* %e, %struct.rtx_def* %last) unnamed_addr #5 !dbg !7974 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !7978, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last, metadata !7979, metadata !DIExpression()), !dbg !7983
  %call = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !7984
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !7984
  %bf.load = load i32, i32* %0, align 8, !dbg !7984
  %bf.clear = and i32 %bf.load, 65535, !dbg !7984
  %cmp = icmp eq i32 %bf.clear, 11, !dbg !7984
  br i1 %cmp, label %if.then, label %if.end28, !dbg !7985

if.then:                                          ; preds = %entry
  tail call void @remove_edge(%struct.edge_def* %e) #6, !dbg !7986
  %call1 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !7987
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7987
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !7987
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7987
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7980, metadata !DIExpression()), !dbg !7988
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !7989
  %bf.load2 = load i32, i32* %3, align 8, !dbg !7989
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !7989
  %cmp4 = icmp eq i32 %bf.clear3, 9, !dbg !7989
  br i1 %cmp4, label %land.lhs.true, label %cond.true, !dbg !7989

land.lhs.true:                                    ; preds = %if.then
  %call5 = tail call i32 @any_condjump_p(%struct.rtx_def* %2) #6, !dbg !7989
  %tobool = icmp eq i32 %call5, 0, !dbg !7989
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7989

cond.true:                                        ; preds = %land.lhs.true, %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1576, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7989
  br label %cond.end, !dbg !7989

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7990
  %rt_rtx9 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !7990
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !7990
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !7980, metadata !DIExpression()), !dbg !7988
  br label %for.cond, !dbg !7992

for.cond:                                         ; preds = %if.end, %cond.end
  %insn.0 = phi %struct.rtx_def* [ %5, %cond.end ], [ %7, %if.end ], !dbg !7993
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7980, metadata !DIExpression()), !dbg !7988
  %cmp10 = icmp eq %struct.rtx_def* %insn.0, %last, !dbg !7994
  br i1 %cmp10, label %if.end28.loopexit, label %for.body, !dbg !7996

for.body:                                         ; preds = %for.cond
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7997
  %rt_rtx14 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !7997
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !7997
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !7980, metadata !DIExpression()), !dbg !7988
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7999
  %9 = bitcast %union.rtunion_def* %8 to i32**, !dbg !7999
  %10 = load i32*, i32** %9, align 8, !dbg !7999
  %bf.load19 = load i32, i32* %10, align 8, !dbg !7999
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !7999
  %cmp21 = icmp eq i32 %bf.clear20, 9, !dbg !7999
  br i1 %cmp21, label %if.then22, label %if.end, !dbg !8001

if.then22:                                        ; preds = %for.body
  %11 = bitcast i32* %10 to %struct.rtx_def*, !dbg !8001
  %call27 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %11) #6, !dbg !8002
  br label %if.end, !dbg !8002

if.end:                                           ; preds = %if.then22, %for.body
  br label %for.cond, !dbg !8003, !llvm.loop !8004

if.end28.loopexit:                                ; preds = %for.cond
  br label %if.end28, !dbg !8006

if.end28:                                         ; preds = %if.end28.loopexit, %entry
  ret void, !dbg !8006
}

declare dso_local void @jumpifnot_1(i32, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @ssa_operands_active() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !8007 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !8011, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8012, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata i32 2, metadata !8013, metadata !DIExpression()), !dbg !8014
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 2) #7, !dbg !8015
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !8016
  store i32 3, i32* %iter_type, align 4, !dbg !8017
  %call = tail call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !8018
  ret %union.tree_node** %call, !dbg !8019
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !8020 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !8024, metadata !DIExpression()), !dbg !8026
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !8027
  %0 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !8027
  %tobool = icmp eq %struct.def_optype_d* %0, null, !dbg !8029
  br i1 %tobool, label %if.end, label %if.then, !dbg !8030

if.then:                                          ; preds = %entry
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %0, i64 0, i32 1, !dbg !8031
  %1 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !8031
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !8025, metadata !DIExpression()), !dbg !8026
  %2 = bitcast %struct.def_optype_d* %0 to i64*, !dbg !8033
  %3 = load i64, i64* %2, align 8, !dbg !8033
  %4 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !8034
  store i64 %3, i64* %4, align 8, !dbg !8034
  br label %cleanup, !dbg !8035

if.end:                                           ; preds = %entry
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !8036
  store i8 1, i8* %done, align 8, !dbg !8037
  br label %cleanup, !dbg !8038

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ %1, %if.then ], [ null, %if.end ], !dbg !8026
  ret %union.tree_node** %retval.0, !dbg !8039
}

declare dso_local %struct.rtx_def* @block_label(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_label_rtx() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %exp) unnamed_addr #5 !dbg !8040 {
entry:
  %unsignedp = alloca i32, align 4
  %mode1 = alloca i32, align 4
  %bitsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %offset = alloca %union.tree_node*, align 8
  %volatilep = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !8044, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8045, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8046, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8047, metadata !DIExpression()), !dbg !8146
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8147
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !8147
  %1 = load i64*, i64** %0, align 8, !dbg !8147
  %bf.load = load i64, i64* %1, align 8, !dbg !8147
  %bf.cast8 = and i64 %bf.load, 65535, !dbg !8147
  %cmp = icmp eq i64 %bf.cast8, 14, !dbg !8147
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8147

cond.true:                                        ; preds = %entry
  %.cast = bitcast i64* %1 to %union.tree_node*, !dbg !8147
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !8147
  %.pre = load i64*, i64** %0, align 8, !dbg !8148
  %bf.load12.pre = load i64, i64* %.pre, align 8, !dbg !8148
  br label %cond.end, !dbg !8147

cond.false:                                       ; preds = %entry
  %type5 = bitcast i64* %1 to %struct.tree_type*, !dbg !8147
  %mode6 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i64 0, i32 6, !dbg !8147
  %bf.load7 = load i32, i32* %mode6, align 4, !dbg !8147
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !8147
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !8147
  br label %cond.end, !dbg !8147

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load12 = phi i64 [ %bf.load12.pre, %cond.true ], [ %bf.load, %cond.false ], !dbg !8148
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear8, %cond.false ], !dbg !8147
  call void @llvm.dbg.value(metadata i32 %cond, metadata !8048, metadata !DIExpression()), !dbg !8146
  %2 = bitcast i32* %unsignedp to i8*, !dbg !8149
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !8149
  %bf.lshr13 = lshr i64 %bf.load12, 21, !dbg !8148
  %3 = trunc i64 %bf.lshr13 to i32, !dbg !8148
  %bf.cast15 = and i32 %3, 1, !dbg !8148
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  store i32 %bf.cast15, i32* %unsignedp, align 4, !dbg !8150
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8151
  %bf.load17 = load i64, i64* %4, align 8, !dbg !8151
  %bf.cast19 = and i64 %bf.load17, 65535, !dbg !8151
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast19, !dbg !8151
  %5 = load i32, i32* %arrayidx, align 4, !dbg !8151
  switch i32 %5, label %sw.epilog48 [
    i32 10, label %sw.bb
    i32 7, label %sw.bb30
    i32 5, label %sw.bb30
    i32 6, label %sw.bb38
    i32 2, label %sw.bb46
    i32 8, label %sw.bb46
  ], !dbg !8152

sw.bb:                                            ; preds = %cond.end
  %6 = trunc i64 %bf.load17 to i16, !dbg !8153
  switch i16 %6, label %sw.epilog48 [
    i16 56, label %ternary
    i16 167, label %ternary
    i16 91, label %sw.bb30
    i16 92, label %sw.bb30
    i16 93, label %sw.bb30
    i16 94, label %sw.bb30
    i16 95, label %sw.bb30
    i16 96, label %sw.bb38
  ], !dbg !8154

ternary:                                          ; preds = %sw.bb, %sw.bb
  call void @llvm.dbg.label(metadata !8140), !dbg !8155
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8156
  %arrayidx28 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !8156
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx28, align 8, !dbg !8156
  %call29 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %7) #7, !dbg !8157
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !8047, metadata !DIExpression()), !dbg !8146
  %tobool = icmp eq %struct.rtx_def* %call29, null, !dbg !8158
  br i1 %tobool, label %cleanup1594, label %sw.bb30, !dbg !8160

sw.bb30:                                          ; preds = %ternary, %sw.bb, %sw.bb, %sw.bb, %sw.bb, %sw.bb, %cond.end, %cond.end
  %op2.1 = phi %struct.rtx_def* [ null, %cond.end ], [ null, %cond.end ], [ null, %sw.bb ], [ null, %sw.bb ], [ null, %sw.bb ], [ null, %sw.bb ], [ null, %sw.bb ], [ %call29, %ternary ], !dbg !8161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2.1, metadata !8047, metadata !DIExpression()), !dbg !8146
  %operands32 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8162
  %arrayidx33 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands32, i64 1, !dbg !8162
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx33, align 8, !dbg !8162
  %call34 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %8) #7, !dbg !8163
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !8046, metadata !DIExpression()), !dbg !8146
  %tobool35 = icmp eq %struct.rtx_def* %call34, null, !dbg !8164
  br i1 %tobool35, label %cleanup1594, label %sw.bb38, !dbg !8166

sw.bb38:                                          ; preds = %sw.bb30, %sw.bb, %cond.end
  %op2.3 = phi %struct.rtx_def* [ null, %cond.end ], [ null, %sw.bb ], [ %op2.1, %sw.bb30 ], !dbg !8161
  %op1.1 = phi %struct.rtx_def* [ null, %cond.end ], [ null, %sw.bb ], [ %call34, %sw.bb30 ], !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.1, metadata !8046, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2.3, metadata !8047, metadata !DIExpression()), !dbg !8146
  %operands40 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8167
  %9 = load %union.tree_node*, %union.tree_node** %operands40, align 8, !dbg !8167
  %call42 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %9) #7, !dbg !8168
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !8045, metadata !DIExpression()), !dbg !8146
  %tobool43 = icmp eq %struct.rtx_def* %call42, null, !dbg !8169
  br i1 %tobool43, label %cleanup1594, label %sw.epilog48, !dbg !8171

sw.bb46:                                          ; preds = %cond.end, %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2284, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8172
  br label %sw.epilog48, !dbg !8172

sw.epilog48:                                      ; preds = %sw.bb38, %sw.bb46, %sw.bb, %cond.end
  %op2.4 = phi %struct.rtx_def* [ null, %sw.bb ], [ %op2.3, %sw.bb38 ], [ null, %cond.end ], [ null, %sw.bb46 ], !dbg !8161
  %op1.2 = phi %struct.rtx_def* [ null, %sw.bb ], [ %op1.1, %sw.bb38 ], [ null, %cond.end ], [ null, %sw.bb46 ], !dbg !8173
  %op0.0 = phi %struct.rtx_def* [ null, %sw.bb ], [ %call42, %sw.bb38 ], [ null, %cond.end ], [ null, %sw.bb46 ], !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.0, metadata !8045, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.2, metadata !8046, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2.4, metadata !8047, metadata !DIExpression()), !dbg !8146
  %bf.load50 = load i64, i64* %4, align 8, !dbg !8174
  %10 = trunc i64 %bf.load50 to i16, !dbg !8174
  switch i16 %10, label %cleanup1594 [
    i16 28, label %sw.bb53
    i16 23, label %sw.bb69
    i16 24, label %sw.bb69
    i16 25, label %sw.bb69
    i16 26, label %sw.bb71
    i16 37, label %sw.bb90
    i16 32, label %sw.bb122
    i16 34, label %sw.bb122
    i16 29, label %sw.bb122
    i16 30, label %sw.bb122
    i16 33, label %sw.bb122
    i16 36, label %sw.bb122
    i16 112, label %sw.bb253
    i16 116, label %sw.bb253
    i16 113, label %sw.bb253
    i16 47, label %sw.bb539
    i16 48, label %sw.bb539
    i16 49, label %sw.bb539
    i16 152, label %sw.bb593
    i16 45, label %sw.bb637
    i16 46, label %sw.bb637
    i16 41, label %sw.bb637
    i16 42, label %sw.bb637
    i16 43, label %sw.bb637
    i16 44, label %sw.bb637
    i16 118, label %sw.bb637
    i16 82, label %sw.bb891
    i16 79, label %sw.bb893
    i16 90, label %sw.bb895
    i16 78, label %sw.bb897
    i16 77, label %sw.bb903
    i16 66, label %sw.bb909
    i16 63, label %sw.bb909
    i16 64, label %sw.bb911
    i16 65, label %sw.bb913
    i16 75, label %sw.bb915
    i16 67, label %sw.bb915
    i16 76, label %sw.bb915
    i16 71, label %sw.bb921
    i16 69, label %sw.bb927
    i16 73, label %sw.bb940
    i16 68, label %sw.bb954
    i16 72, label %sw.bb978
    i16 70, label %sw.bb1000
    i16 74, label %sw.bb1024
    i16 83, label %sw.bb1046
    i16 84, label %sw.bb1048
    i16 85, label %sw.bb1054
    i16 86, label %sw.bb1056
    i16 80, label %sw.bb1058
    i16 81, label %sw.bb1064
    i16 89, label %sw.bb1070
    i16 93, label %sw.bb1070
    i16 87, label %sw.bb1072
    i16 94, label %sw.bb1072
    i16 88, label %sw.bb1074
    i16 95, label %sw.bb1074
    i16 91, label %sw.bb1076
    i16 92, label %sw.bb1078
    i16 96, label %sw.bb1080
    i16 97, label %sw.bb1082
    i16 98, label %sw.bb1088
    i16 99, label %sw.bb1094
    i16 100, label %sw.bb1100
    i16 101, label %sw.bb1106
    i16 102, label %sw.bb1108
    i16 103, label %sw.bb1110
    i16 104, label %sw.bb1112
    i16 105, label %sw.bb1114
    i16 106, label %sw.bb1116
    i16 107, label %sw.bb1118
    i16 108, label %sw.bb1120
    i16 109, label %sw.bb1122
    i16 110, label %sw.bb1124
    i16 56, label %sw.bb1126
    i16 123, label %sw.bb1128
    i16 124, label %sw.bb1167
    i16 121, label %sw.bb1253
    i16 27, label %sw.bb1271
    i16 51, label %sw.bb1275
    i16 168, label %sw.bb1544
    i16 141, label %sw.bb1378
    i16 169, label %sw.bb1479
    i16 167, label %sw.bb1413
  ], !dbg !8175

sw.bb53:                                          ; preds = %sw.epilog48
  %call54 = tail call %struct.rtx_def* @lookup_constant_def(%union.tree_node* %exp) #6, !dbg !8176
  %tobool55 = icmp eq %struct.rtx_def* %call54, null, !dbg !8176
  br i1 %tobool55, label %if.then56, label %sw.bb69, !dbg !8178

if.then56:                                        ; preds = %sw.bb53
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8179
  %arraydecay = bitcast i32* %str to i8*, !dbg !8179
  %call57 = tail call i64 @strlen(i8* nonnull %arraydecay) #6, !dbg !8182
  %add = add i64 %call57, 1, !dbg !8183
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8184
  %12 = load i32, i32* %11, align 8, !dbg !8184
  %conv = sext i32 %12 to i64, !dbg !8185
  %cmp59 = icmp eq i64 %add, %conv, !dbg !8186
  br i1 %cmp59, label %if.end62, label %cleanup1594, !dbg !8187

if.end62:                                         ; preds = %if.then56
  %call66 = tail call %struct.rtx_def* @gen_rtx_fmt_s_stat(i32 34, i32 16, i8* nonnull %arraydecay) #6, !dbg !8188
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call66, metadata !8045, metadata !DIExpression()), !dbg !8146
  %call67 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %call66) #6, !dbg !8189
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call67, metadata !8045, metadata !DIExpression()), !dbg !8146
  tail call void @set_mem_attributes(%struct.rtx_def* %call67, %union.tree_node* %exp, i32 0) #6, !dbg !8190
  br label %cleanup1594, !dbg !8191

sw.bb69:                                          ; preds = %sw.bb53, %sw.epilog48, %sw.epilog48, %sw.epilog48
  %call70 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* null, i32 %cond, i32 4) #7, !dbg !8192
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call70, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594, !dbg !8193

sw.bb71:                                          ; preds = %sw.epilog48
  %idxprom72 = zext i32 %cond to i64, !dbg !8194
  %arrayidx73 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom72, !dbg !8194
  %13 = load i8, i8* %arrayidx73, align 1, !dbg !8194
  %cmp75 = icmp eq i8 %13, 10, !dbg !8194
  br i1 %cmp75, label %cond.end84, label %lor.lhs.false, !dbg !8194

lor.lhs.false:                                    ; preds = %sw.bb71
  %cmp80 = icmp eq i8 %13, 11, !dbg !8194
  br i1 %cmp80, label %cond.end84, label %cond.true82, !dbg !8194

cond.true82:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2316, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8194
  br label %cond.end84, !dbg !8194

cond.end84:                                       ; preds = %sw.bb71, %lor.lhs.false, %cond.true82
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8195
  %14 = bitcast i32* %real to %union.tree_node**, !dbg !8195
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !8195
  %call86 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %15) #7, !dbg !8196
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call86, metadata !8045, metadata !DIExpression()), !dbg !8146
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8197
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !8197
  %call88 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %17) #7, !dbg !8198
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call88, metadata !8046, metadata !DIExpression()), !dbg !8146
  %call89 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %cond, %struct.rtx_def* %call86, %struct.rtx_def* %call88) #6, !dbg !8199
  br label %cleanup1594, !dbg !8200

sw.bb90:                                          ; preds = %sw.epilog48
  %bf.cast94 = and i64 %bf.load50, 65535, !dbg !8201
  %arrayidx97 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast94, i64 11, !dbg !8201
  %18 = load i8, i8* %arrayidx97, align 1, !dbg !8201
  %tobool99 = icmp eq i8 %18, 0, !dbg !8201
  br i1 %tobool99, label %cond.end115, label %land.lhs.true, !dbg !8201

land.lhs.true:                                    ; preds = %sw.bb90
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8201
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8201
  %cmp100 = icmp eq %struct.rtx_def* %19, null, !dbg !8201
  br i1 %cmp100, label %cond.end115, label %cond.true102, !dbg !8201

cond.true102:                                     ; preds = %land.lhs.true
  br i1 false, label %cond.false109, label %cond.true106, !dbg !8201

cond.true106:                                     ; preds = %cond.true102
  br label %cond.end115, !dbg !8201

cond.false109:                                    ; preds = %cond.true102
  br label %cond.end115, !dbg !8201

cond.end115:                                      ; preds = %land.lhs.true, %sw.bb90, %cond.true106, %cond.false109
  %cond116 = phi %struct.rtx_def* [ %19, %cond.true106 ], [ undef, %cond.false109 ], [ null, %land.lhs.true ], [ null, %sw.bb90 ], !dbg !8201
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond116, metadata !8045, metadata !DIExpression()), !dbg !8146
  %tobool117 = icmp eq %struct.rtx_def* %cond116, null, !dbg !8202
  br i1 %tobool117, label %if.end119, label %cleanup1594, !dbg !8204

if.end119:                                        ; preds = %cond.end115
  %call120 = tail call %struct.rtx_def* @gen_rtx_fmt_0_stat(i32 2, i32 %cond) #6, !dbg !8205
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call120, metadata !8045, metadata !DIExpression()), !dbg !8146
  %arrayidx121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call120, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8206
  %rt_tree = bitcast %union.rtunion_def* %arrayidx121 to %union.tree_node**, !dbg !8206
  store %union.tree_node* %exp, %union.tree_node** %rt_tree, align 8, !dbg !8207
  tail call void @set_decl_rtl(%union.tree_node* %exp, %struct.rtx_def* %call120) #6, !dbg !8208
  br label %cleanup1594, !dbg !8209

sw.bb122:                                         ; preds = %sw.epilog48, %sw.epilog48, %sw.epilog48, %sw.epilog48, %sw.epilog48, %sw.epilog48
  %bf.cast126 = and i64 %bf.load50, 65535, !dbg !8210
  %arrayidx129 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast126, i64 11, !dbg !8210
  %20 = load i8, i8* %arrayidx129, align 1, !dbg !8210
  %tobool131 = icmp eq i8 %20, 0, !dbg !8210
  br i1 %tobool131, label %cond.end150, label %land.lhs.true132, !dbg !8210

land.lhs.true132:                                 ; preds = %sw.bb122
  %rtl134 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8210
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtl134, align 8, !dbg !8210
  %cmp135 = icmp eq %struct.rtx_def* %21, null, !dbg !8210
  br i1 %cmp135, label %cond.end150, label %cond.true137, !dbg !8210

cond.true137:                                     ; preds = %land.lhs.true132
  br i1 false, label %cond.false144, label %cond.true141, !dbg !8210

cond.true141:                                     ; preds = %cond.true137
  br label %cond.end150, !dbg !8210

cond.false144:                                    ; preds = %cond.true137
  br label %cond.end150, !dbg !8210

cond.end150:                                      ; preds = %land.lhs.true132, %sw.bb122, %cond.true141, %cond.false144
  %cond151 = phi %struct.rtx_def* [ %21, %cond.true141 ], [ undef, %cond.false144 ], [ null, %land.lhs.true132 ], [ null, %sw.bb122 ], !dbg !8210
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond151, metadata !8045, metadata !DIExpression()), !dbg !8146
  %tobool152 = icmp eq %struct.rtx_def* %cond151, null, !dbg !8211
  br i1 %tobool152, label %if.then153, label %if.else, !dbg !8213

if.then153:                                       ; preds = %cond.end150
  %cmp158 = icmp eq i64 %bf.cast126, 32, !dbg !8214
  br i1 %cmp158, label %lor.lhs.false160, label %cleanup1594, !dbg !8217

lor.lhs.false160:                                 ; preds = %if.then153
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8218
  %22 = bitcast i40* %decl_flag_1 to i64*, !dbg !8218
  %bf.load161 = load i64, i64* %22, align 8, !dbg !8218
  %bf.cast16428 = and i64 %bf.load161, 33554432, !dbg !8218
  %tobool165 = icmp eq i64 %bf.cast16428, 0, !dbg !8218
  br i1 %tobool165, label %lor.lhs.false166, label %cleanup1594, !dbg !8219

lor.lhs.false166:                                 ; preds = %lor.lhs.false160
  %bf.cast17129 = and i64 %bf.load50, 67108864, !dbg !8220
  %tobool172 = icmp eq i64 %bf.cast17129, 0, !dbg !8220
  br i1 %tobool172, label %cleanup1594, label %lor.lhs.false173, !dbg !8221

lor.lhs.false173:                                 ; preds = %lor.lhs.false166
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8222
  %23 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !8222
  %tobool174 = icmp eq %union.tree_node* %23, null, !dbg !8222
  br i1 %tobool174, label %cleanup1594, label %lor.lhs.false175, !dbg !8223

lor.lhs.false175:                                 ; preds = %lor.lhs.false173
  %hard_register = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !8224
  %24 = bitcast i24* %hard_register to i32*, !dbg !8224
  %bf.load176 = load i32, i32* %24, align 8, !dbg !8224
  %bf.clear178 = and i32 %bf.load176, 2, !dbg !8224
  %tobool179 = icmp ne i32 %bf.clear178, 0, !dbg !8224
  %cmp181 = icmp eq i32 %cond, 0, !dbg !8225
  %or.cond = or i1 %tobool179, %cmp181, !dbg !8226
  br i1 %or.cond, label %cleanup1594, label %if.end184, !dbg !8226

if.end184:                                        ; preds = %lor.lhs.false175
  %call185 = tail call %struct.rtx_def* @make_decl_rtl_for_debug(%union.tree_node* %exp) #6, !dbg !8227
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call185, metadata !8045, metadata !DIExpression()), !dbg !8146
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call185, i64 0, i32 0, !dbg !8228
  %bf.load186 = load i32, i32* %25, align 8, !dbg !8228
  %bf.clear187 = and i32 %bf.load186, 65535, !dbg !8228
  %cmp188 = icmp eq i32 %bf.clear187, 43, !dbg !8228
  br i1 %cmp188, label %lor.lhs.false190, label %cleanup1594, !dbg !8230

lor.lhs.false190:                                 ; preds = %if.end184
  %arrayidx193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call185, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8231
  %26 = bitcast %union.rtunion_def* %arrayidx193 to i32**, !dbg !8231
  %27 = load i32*, i32** %26, align 8, !dbg !8231
  %bf.load194 = load i32, i32* %27, align 8, !dbg !8231
  %bf.clear195 = and i32 %bf.load194, 65535, !dbg !8231
  %cmp196 = icmp eq i32 %bf.clear195, 45, !dbg !8232
  br i1 %cmp196, label %lor.lhs.false198, label %cleanup1594, !dbg !8233

lor.lhs.false198:                                 ; preds = %lor.lhs.false190
  %bf.clear205 = and i32 %bf.load194, 67108864, !dbg !8234
  %tobool206 = icmp eq i32 %bf.clear205, 0, !dbg !8234
  br i1 %tobool206, label %cond.false208, label %cond.end217, !dbg !8234

cond.false208:                                    ; preds = %lor.lhs.false198
  %28 = getelementptr inbounds i32, i32* %27, i64 6, !dbg !8234
  %rt_tree216 = bitcast i32* %28 to %union.tree_node**, !dbg !8234
  %29 = load %union.tree_node*, %union.tree_node** %rt_tree216, align 8, !dbg !8234
  br label %cond.end217, !dbg !8234

cond.end217:                                      ; preds = %lor.lhs.false198, %cond.false208
  %cond218 = phi %union.tree_node* [ %29, %cond.false208 ], [ null, %lor.lhs.false198 ], !dbg !8234
  %cmp219 = icmp eq %union.tree_node* %cond218, %exp, !dbg !8235
  br i1 %cmp219, label %if.end224, label %cleanup1594, !dbg !8236

if.else:                                          ; preds = %cond.end150
  %call223 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* nonnull %cond151) #6, !dbg !8237
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call223, metadata !8045, metadata !DIExpression()), !dbg !8146
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call223, i64 0, i32 0, !dbg !8238
  %bf.load225.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !8240
  br label %if.end224

if.end224:                                        ; preds = %cond.end217, %if.else
  %bf.load243 = phi i32 [ %bf.load225.pre, %if.else ], [ %bf.load186, %cond.end217 ], !dbg !8240
  %op0.1 = phi %struct.rtx_def* [ %call223, %if.else ], [ %call185, %cond.end217 ], !dbg !8241
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.1, metadata !8045, metadata !DIExpression()), !dbg !8146
  %bf.clear227 = and i32 %bf.load243, 16711680, !dbg !8240
  %cmp228 = icmp eq i32 %bf.clear227, 65536, !dbg !8242
  %cmp231 = icmp eq i32 %cond, 1, !dbg !8243
  %or.cond6 = or i1 %cmp228, %cmp231, !dbg !8244
  br i1 %or.cond6, label %if.then242, label %lor.lhs.false233, !dbg !8244

lor.lhs.false233:                                 ; preds = %if.end224
  %cmp234 = icmp eq i32 %cond, 0, !dbg !8245
  br i1 %cmp234, label %land.lhs.true236, label %sw.bb253, !dbg !8246

land.lhs.true236:                                 ; preds = %lor.lhs.false233
  %cmp240 = icmp eq i32 %bf.clear227, 0, !dbg !8247
  br i1 %cmp240, label %sw.bb253, label %if.then242, !dbg !8248

if.then242:                                       ; preds = %land.lhs.true236, %if.end224
  %bf.clear244 = and i32 %bf.load243, 65535, !dbg !8249
  %cmp245 = icmp eq i32 %bf.clear244, 43, !dbg !8249
  br i1 %cmp245, label %cond.end249, label %cond.true247, !dbg !8249

cond.true247:                                     ; preds = %if.then242
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2368, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8249
  br label %cond.end249, !dbg !8249

cond.end249:                                      ; preds = %if.then242, %cond.true247
  %call251 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.1, i32 %cond, i64 0, i32 0, i32 1) #6, !dbg !8251
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call251, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594, !dbg !8252

sw.bb253:                                         ; preds = %land.lhs.true236, %cleanup1408, %lor.lhs.false233, %sw.epilog48, %sw.epilog48, %sw.epilog48
  %op0.3 = phi %struct.rtx_def* [ %op0.0, %sw.epilog48 ], [ %op0.0, %sw.epilog48 ], [ %op0.0, %sw.epilog48 ], [ %op0.25, %cleanup1408 ], [ %op0.1, %land.lhs.true236 ], [ %op0.1, %lor.lhs.false233 ], !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.3, metadata !8045, metadata !DIExpression()), !dbg !8146
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.3, i64 0, i32 0, !dbg !8253
  %bf.load254 = load i32, i32* %30, align 8, !dbg !8253
  %bf.lshr255 = lshr i32 %bf.load254, 16, !dbg !8253
  %bf.clear256 = and i32 %bf.lshr255, 255, !dbg !8253
  call void @llvm.dbg.value(metadata i32 %bf.clear256, metadata !8053, metadata !DIExpression()), !dbg !8254
  %cmp257 = icmp eq i32 %cond, %bf.clear256, !dbg !8255
  br i1 %cmp257, label %cleanup1594, label %if.end260, !dbg !8257

if.end260:                                        ; preds = %sw.bb253
  %cmp261 = icmp eq i32 %bf.clear256, 0, !dbg !8258
  br i1 %cmp261, label %if.then263, label %if.end330, !dbg !8260

if.then263:                                       ; preds = %if.end260
  %bf.load265 = load i64, i64* %4, align 8, !dbg !8261
  %bf.cast26715 = and i64 %bf.load265, 65535, !dbg !8264
  %cmp268 = icmp eq i64 %bf.cast26715, 141, !dbg !8264
  br i1 %cmp268, label %if.then270, label %if.else293, !dbg !8265

if.then270:                                       ; preds = %if.then263
  %31 = load i64*, i64** %0, align 8, !dbg !8266
  %bf.load274 = load i64, i64* %31, align 8, !dbg !8266
  %bf.cast27617 = and i64 %bf.load274, 65535, !dbg !8266
  %cmp277 = icmp eq i64 %bf.cast27617, 14, !dbg !8266
  br i1 %cmp277, label %cond.true279, label %cond.false283, !dbg !8266

cond.true279:                                     ; preds = %if.then270
  %.cast18 = bitcast i64* %31 to %union.tree_node*, !dbg !8266
  %call282 = tail call i32 @vector_type_mode(%union.tree_node* %.cast18) #6, !dbg !8266
  br label %if.end325, !dbg !8266

cond.false283:                                    ; preds = %if.then270
  %type286 = bitcast i64* %31 to %struct.tree_type*, !dbg !8266
  %mode287 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type286, i64 0, i32 6, !dbg !8266
  %bf.load288 = load i32, i32* %mode287, align 4, !dbg !8266
  %bf.lshr289 = lshr i32 %bf.load288, 16, !dbg !8266
  %bf.clear290 = and i32 %bf.lshr289, 255, !dbg !8266
  br label %if.end325, !dbg !8266

if.else293:                                       ; preds = %if.then263
  %operands295 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8267
  %32 = bitcast %union.tree_node** %operands295 to %struct.tree_common**, !dbg !8267
  %33 = load %struct.tree_common*, %struct.tree_common** %32, align 8, !dbg !8267
  %type298 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %33, i64 0, i32 2, !dbg !8267
  %34 = bitcast %union.tree_node** %type298 to i64**, !dbg !8267
  %35 = load i64*, i64** %34, align 8, !dbg !8267
  %bf.load300 = load i64, i64* %35, align 8, !dbg !8267
  %bf.cast30216 = and i64 %bf.load300, 65535, !dbg !8267
  %cmp303 = icmp eq i64 %bf.cast30216, 14, !dbg !8267
  br i1 %cmp303, label %cond.true305, label %cond.false312, !dbg !8267

cond.true305:                                     ; preds = %if.else293
  %36 = bitcast i64* %35 to %union.tree_node*, !dbg !8267
  %call311 = tail call i32 @vector_type_mode(%union.tree_node* %36) #6, !dbg !8267
  br label %if.end325, !dbg !8267

cond.false312:                                    ; preds = %if.else293
  %type318 = bitcast i64* %35 to %struct.tree_type*, !dbg !8267
  %mode319 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type318, i64 0, i32 6, !dbg !8267
  %bf.load320 = load i32, i32* %mode319, align 4, !dbg !8267
  %bf.lshr321 = lshr i32 %bf.load320, 16, !dbg !8267
  %bf.clear322 = and i32 %bf.lshr321, 255, !dbg !8267
  br label %if.end325, !dbg !8267

if.end325:                                        ; preds = %cond.true305, %cond.false312, %cond.true279, %cond.false283
  %inner_mode.0 = phi i32 [ %call282, %cond.true279 ], [ %bf.clear290, %cond.false283 ], [ %call311, %cond.true305 ], [ %bf.clear322, %cond.false312 ], !dbg !8268
  call void @llvm.dbg.value(metadata i32 %inner_mode.0, metadata !8053, metadata !DIExpression()), !dbg !8254
  %cmp326 = icmp eq i32 %cond, %inner_mode.0, !dbg !8269
  br i1 %cmp326, label %cleanup1594, label %if.end330, !dbg !8271

if.end330:                                        ; preds = %if.end325, %if.end260
  %inner_mode.1 = phi i32 [ %bf.clear256, %if.end260 ], [ %inner_mode.0, %if.end325 ], !dbg !8254
  call void @llvm.dbg.value(metadata i32 %inner_mode.1, metadata !8053, metadata !DIExpression()), !dbg !8254
  %idxprom331 = zext i32 %cond to i64, !dbg !8272
  %arrayidx332 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom331, !dbg !8272
  %37 = load i8, i8* %arrayidx332, align 1, !dbg !8272
  %cmp334 = icmp eq i8 %37, 8, !dbg !8272
  br i1 %cmp334, label %land.lhs.true354, label %lor.lhs.false336, !dbg !8272

lor.lhs.false336:                                 ; preds = %if.end330
  %cmp340 = icmp eq i8 %37, 9, !dbg !8272
  br i1 %cmp340, label %land.lhs.true354, label %lor.lhs.false342, !dbg !8272

lor.lhs.false342:                                 ; preds = %lor.lhs.false336
  %cmp346 = icmp eq i8 %37, 11, !dbg !8272
  br i1 %cmp346, label %land.lhs.true354, label %lor.lhs.false348, !dbg !8272

lor.lhs.false348:                                 ; preds = %lor.lhs.false342
  %cmp352 = icmp eq i8 %37, 17, !dbg !8272
  br i1 %cmp352, label %land.lhs.true354, label %if.else419, !dbg !8274

land.lhs.true354:                                 ; preds = %lor.lhs.false348, %lor.lhs.false342, %lor.lhs.false336, %if.end330
  %idxprom355 = zext i32 %inner_mode.1 to i64, !dbg !8275
  %arrayidx356 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom355, !dbg !8275
  %38 = load i8, i8* %arrayidx356, align 1, !dbg !8275
  %cmp358 = icmp eq i8 %38, 8, !dbg !8275
  br i1 %cmp358, label %if.then378, label %lor.lhs.false360, !dbg !8275

lor.lhs.false360:                                 ; preds = %land.lhs.true354
  %cmp364 = icmp eq i8 %38, 9, !dbg !8275
  br i1 %cmp364, label %if.then378, label %lor.lhs.false366, !dbg !8275

lor.lhs.false366:                                 ; preds = %lor.lhs.false360
  %cmp370 = icmp eq i8 %38, 11, !dbg !8275
  br i1 %cmp370, label %if.then378, label %lor.lhs.false372, !dbg !8275

lor.lhs.false372:                                 ; preds = %lor.lhs.false366
  %cmp376 = icmp eq i8 %38, 17, !dbg !8275
  br i1 %cmp376, label %if.then378, label %if.else419, !dbg !8276

if.then378:                                       ; preds = %lor.lhs.false372, %lor.lhs.false366, %lor.lhs.false360, %land.lhs.true354
  %arrayidx380 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom331, !dbg !8277
  %39 = load i8, i8* %arrayidx380, align 1, !dbg !8277
  %arrayidx386 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom355, !dbg !8280
  %40 = load i8, i8* %arrayidx386, align 1, !dbg !8280
  %cmp392 = icmp eq i8 %39, %40, !dbg !8281
  br i1 %cmp392, label %if.then394, label %if.else396, !dbg !8282

if.then394:                                       ; preds = %if.then378
  %call395 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %cond, %struct.rtx_def* %op0.3, i32 %inner_mode.1, i32 0) #6, !dbg !8283
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call395, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594, !dbg !8284

if.else396:                                       ; preds = %if.then378
  %cmp411 = icmp ult i8 %39, %40, !dbg !8285
  br i1 %cmp411, label %if.then413, label %if.else415, !dbg !8287

if.then413:                                       ; preds = %if.else396
  %call414 = tail call %struct.rtx_def* @simplify_gen_unary(i32 102, i32 %cond, %struct.rtx_def* %op0.3, i32 %inner_mode.1) #6, !dbg !8288
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call414, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594, !dbg !8289

if.else415:                                       ; preds = %if.else396
  %call416 = tail call %struct.rtx_def* @simplify_gen_unary(i32 101, i32 %cond, %struct.rtx_def* %op0.3, i32 %inner_mode.1) #6, !dbg !8290
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call416, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594

if.else419:                                       ; preds = %lor.lhs.false372, %lor.lhs.false348
  br i1 %cmp334, label %if.then443, label %lor.lhs.false425, !dbg !8291

lor.lhs.false425:                                 ; preds = %if.else419
  %cmp429 = icmp eq i8 %37, 9, !dbg !8291
  br i1 %cmp429, label %if.then443, label %lor.lhs.false431, !dbg !8291

lor.lhs.false431:                                 ; preds = %lor.lhs.false425
  %cmp435 = icmp eq i8 %37, 11, !dbg !8291
  br i1 %cmp435, label %if.then443, label %lor.lhs.false437, !dbg !8291

lor.lhs.false437:                                 ; preds = %lor.lhs.false431
  %cmp441 = icmp eq i8 %37, 17, !dbg !8291
  br i1 %cmp441, label %if.then443, label %if.else470, !dbg !8293

if.then443:                                       ; preds = %lor.lhs.false437, %lor.lhs.false431, %lor.lhs.false425, %if.else419
  %bf.load445 = load i64, i64* %4, align 8, !dbg !8294
  %bf.cast44713 = and i64 %bf.load445, 65535, !dbg !8294
  %cmp448 = icmp eq i64 %bf.cast44713, 141, !dbg !8294
  br i1 %cmp448, label %cond.true450, label %cond.end452, !dbg !8294

cond.true450:                                     ; preds = %if.then443
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2406, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8294
  br label %cond.end452, !dbg !8294

cond.end452:                                      ; preds = %if.then443, %cond.true450
  %operands455 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8296
  %41 = bitcast %union.tree_node** %operands455 to %struct.tree_common**, !dbg !8296
  %42 = load %struct.tree_common*, %struct.tree_common** %41, align 8, !dbg !8296
  %type458 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %42, i64 0, i32 2, !dbg !8296
  %43 = bitcast %union.tree_node** %type458 to i64**, !dbg !8296
  %44 = load i64*, i64** %43, align 8, !dbg !8296
  %bf.load460 = load i64, i64* %44, align 8, !dbg !8296
  %bf.cast46314 = and i64 %bf.load460, 2097152, !dbg !8296
  %tobool464 = icmp eq i64 %bf.cast46314, 0, !dbg !8296
  br i1 %tobool464, label %if.else467, label %if.then465, !dbg !8298

if.then465:                                       ; preds = %cond.end452
  %call466 = tail call %struct.rtx_def* @simplify_gen_unary(i32 105, i32 %cond, %struct.rtx_def* %op0.3, i32 %inner_mode.1) #6, !dbg !8299
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call466, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594, !dbg !8300

if.else467:                                       ; preds = %cond.end452
  %call468 = tail call %struct.rtx_def* @simplify_gen_unary(i32 103, i32 %cond, %struct.rtx_def* %op0.3, i32 %inner_mode.1) #6, !dbg !8301
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call468, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594

if.else470:                                       ; preds = %lor.lhs.false437
  %idxprom471 = zext i32 %inner_mode.1 to i64, !dbg !8302
  %arrayidx472 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom471, !dbg !8302
  %45 = load i8, i8* %arrayidx472, align 1, !dbg !8302
  %cmp474 = icmp eq i8 %45, 8, !dbg !8302
  br i1 %cmp474, label %if.then494, label %lor.lhs.false476, !dbg !8302

lor.lhs.false476:                                 ; preds = %if.else470
  %cmp480 = icmp eq i8 %45, 9, !dbg !8302
  br i1 %cmp480, label %if.then494, label %lor.lhs.false482, !dbg !8302

lor.lhs.false482:                                 ; preds = %lor.lhs.false476
  %cmp486 = icmp eq i8 %45, 11, !dbg !8302
  br i1 %cmp486, label %if.then494, label %lor.lhs.false488, !dbg !8302

lor.lhs.false488:                                 ; preds = %lor.lhs.false482
  %cmp492 = icmp eq i8 %45, 17, !dbg !8302
  br i1 %cmp492, label %if.then494, label %if.else501, !dbg !8304

if.then494:                                       ; preds = %lor.lhs.false488, %lor.lhs.false482, %lor.lhs.false476, %if.else470
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool495 = icmp eq i32 %bf.cast15, 0, !dbg !8305
  br i1 %tobool495, label %if.else498, label %if.then496, !dbg !8308

if.then496:                                       ; preds = %if.then494
  %call497 = tail call %struct.rtx_def* @simplify_gen_unary(i32 106, i32 %cond, %struct.rtx_def* %op0.3, i32 %inner_mode.1) #6, !dbg !8309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call497, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594, !dbg !8310

if.else498:                                       ; preds = %if.then494
  %call499 = tail call %struct.rtx_def* @simplify_gen_unary(i32 104, i32 %cond, %struct.rtx_def* %op0.3, i32 %inner_mode.1) #6, !dbg !8311
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call499, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594

if.else501:                                       ; preds = %lor.lhs.false488
  %bf.load502 = load i32, i32* %30, align 8, !dbg !8312
  %bf.clear503 = and i32 %bf.load502, 65535, !dbg !8312
  %idxprom504 = zext i32 %bf.clear503 to i64, !dbg !8312
  %arrayidx505 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom504, !dbg !8312
  %46 = load i32, i32* %arrayidx505, align 4, !dbg !8312
  %cmp506 = icmp eq i32 %46, 9, !dbg !8312
  br i1 %cmp506, label %if.then525, label %lor.lhs.false508, !dbg !8314

lor.lhs.false508:                                 ; preds = %if.else501
  %arrayidx510 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom331, !dbg !8315
  %47 = load i8, i8* %arrayidx510, align 1, !dbg !8315
  %arrayidx517 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom471, !dbg !8316
  %48 = load i8, i8* %arrayidx517, align 1, !dbg !8316
  %cmp523 = icmp ugt i8 %47, %48, !dbg !8317
  br i1 %cmp523, label %if.else528, label %if.then525, !dbg !8318

if.then525:                                       ; preds = %lor.lhs.false508, %if.else501
  %call526 = tail call i32 @subreg_lowpart_offset(i32 %cond, i32 %inner_mode.1) #6, !dbg !8319
  %call527 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %cond, %struct.rtx_def* %op0.3, i32 %inner_mode.1, i32 %call526) #6, !dbg !8320
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call527, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594, !dbg !8321

if.else528:                                       ; preds = %lor.lhs.false508
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool529 = icmp eq i32 %bf.cast15, 0, !dbg !8322
  br i1 %tobool529, label %if.else532, label %if.then530, !dbg !8324

if.then530:                                       ; preds = %if.else528
  %call531 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 99, i32 %cond, %struct.rtx_def* %op0.3) #6, !dbg !8325
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call531, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594, !dbg !8326

if.else532:                                       ; preds = %if.else528
  %call533 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 98, i32 %cond, %struct.rtx_def* %op0.3) #6, !dbg !8327
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call533, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594

sw.bb539:                                         ; preds = %sw.epilog48, %sw.epilog48, %sw.epilog48
  %operands541 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8328
  %49 = load %union.tree_node*, %union.tree_node** %operands541, align 8, !dbg !8328
  %call543 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %49) #7, !dbg !8329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call543, metadata !8045, metadata !DIExpression()), !dbg !8146
  %tobool544 = icmp eq %struct.rtx_def* %call543, null, !dbg !8330
  br i1 %tobool544, label %cleanup1594, label %if.end546, !dbg !8332

if.end546:                                        ; preds = %sw.bb539
  %50 = load i64*, i64** %0, align 8, !dbg !8333
  %bf.load550 = load i64, i64* %50, align 8, !dbg !8333
  %bf.cast55224 = and i64 %bf.load550, 65535, !dbg !8333
  %cmp553 = icmp eq i64 %bf.cast55224, 10, !dbg !8333
  br i1 %cmp553, label %if.then564, label %lor.lhs.false555, !dbg !8333

lor.lhs.false555:                                 ; preds = %if.end546
  %cmp562 = icmp eq i64 %bf.cast55224, 12, !dbg !8333
  br i1 %cmp562, label %if.then564, label %if.end576, !dbg !8335

if.then564:                                       ; preds = %lor.lhs.false555, %if.end546
  %type568 = getelementptr inbounds i64, i64* %50, i64 2, !dbg !8336
  %51 = bitcast i64* %type568 to i64**, !dbg !8336
  %52 = load i64*, i64** %51, align 8, !dbg !8336
  %bf.load570 = load i64, i64* %52, align 8, !dbg !8336
  %bf.lshr571 = lshr i64 %bf.load570, 56, !dbg !8336
  %conv573 = trunc i64 %bf.lshr571 to i8, !dbg !8336
  call void @llvm.dbg.value(metadata i8 %conv573, metadata !8050, metadata !DIExpression()), !dbg !8146
  %53 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !8338
  %call574 = tail call i32 %53(i8 zeroext %conv573) #6, !dbg !8339
  call void @llvm.dbg.value(metadata i32 %call574, metadata !8052, metadata !DIExpression()), !dbg !8146
  br label %if.end576, !dbg !8340

if.end576:                                        ; preds = %lor.lhs.false555, %if.then564
  %address_mode.0 = phi i32 [ %call574, %if.then564 ], [ 16, %lor.lhs.false555 ], !dbg !8341
  %as.0 = phi i8 [ %conv573, %if.then564 ], [ 0, %lor.lhs.false555 ], !dbg !8341
  call void @llvm.dbg.value(metadata i8 %as.0, metadata !8050, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %address_mode.0, metadata !8052, metadata !DIExpression()), !dbg !8146
  %bf.load578 = load i64, i64* %4, align 8, !dbg !8342
  %bf.cast58026 = and i64 %bf.load578, 65535, !dbg !8343
  %cmp581 = icmp eq i64 %bf.cast58026, 48, !dbg !8343
  br i1 %cmp581, label %if.then583, label %if.end591, !dbg !8344

if.then583:                                       ; preds = %if.end576
  %54 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !8345
  %55 = load %struct.tree_type*, %struct.tree_type** %54, align 8, !dbg !8345
  %align587 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %55, i64 0, i32 7, !dbg !8345
  %56 = load i32, i32* %align587, align 8, !dbg !8345
  %div = lshr i32 %56, 3, !dbg !8345
  call void @llvm.dbg.value(metadata i32 %div, metadata !8056, metadata !DIExpression()), !dbg !8346
  %sub = sub nsw i32 0, %div, !dbg !8347
  %conv588 = sext i32 %sub to i64, !dbg !8347
  %call589 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv588) #6, !dbg !8347
  %call590 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 61, i32 %address_mode.0, %struct.rtx_def* nonnull %call543, %struct.rtx_def* %call589) #6, !dbg !8347
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call590, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end591, !dbg !8348

if.end591:                                        ; preds = %if.then583, %if.end576
  %op0.13 = phi %struct.rtx_def* [ %call590, %if.then583 ], [ %call543, %if.end576 ], !dbg !8349
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.13, metadata !8045, metadata !DIExpression()), !dbg !8146
  %call592 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %cond, %struct.rtx_def* %op0.13) #6, !dbg !8350
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call592, metadata !8045, metadata !DIExpression()), !dbg !8146
  tail call void @set_mem_attributes(%struct.rtx_def* %call592, %union.tree_node* %exp, i32 0) #6, !dbg !8351
  tail call void @set_mem_addr_space(%struct.rtx_def* %call592, i8 zeroext %as.0) #6, !dbg !8352
  br label %cleanup1594, !dbg !8353

sw.bb593:                                         ; preds = %sw.epilog48
  %operands595 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8354
  %57 = load %union.tree_node*, %union.tree_node** %operands595, align 8, !dbg !8354
  %tobool597 = icmp eq %union.tree_node* %57, null, !dbg !8354
  br i1 %tobool597, label %if.end620, label %land.lhs.true598, !dbg !8356

land.lhs.true598:                                 ; preds = %sw.bb593
  %58 = getelementptr inbounds %union.tree_node, %union.tree_node* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8356
  %bf.load603 = load i64, i64* %58, align 8, !dbg !8357
  %bf.cast605 = and i64 %bf.load603, 65535, !dbg !8357
  %arrayidx608 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast605, i64 11, !dbg !8357
  %59 = load i8, i8* %arrayidx608, align 1, !dbg !8357
  %tobool610 = icmp eq i8 %59, 0, !dbg !8357
  br i1 %tobool610, label %cleanup1594, label %land.lhs.true611, !dbg !8357

land.lhs.true611:                                 ; preds = %land.lhs.true598
  %rtl616 = getelementptr inbounds %union.tree_node, %union.tree_node* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8357
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtl616, align 8, !dbg !8357
  %cmp617 = icmp eq %struct.rtx_def* %60, null, !dbg !8357
  br i1 %cmp617, label %cleanup1594, label %if.end620, !dbg !8358

if.end620:                                        ; preds = %land.lhs.true611, %sw.bb593
  %61 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8359
  %call623 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %61) #6, !dbg !8360
  %call624 = tail call %union.tree_node* @tree_mem_ref_addr(%union.tree_node* %call623, %union.tree_node* %exp) #6, !dbg !8361
  %call625 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %call624) #7, !dbg !8362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call625, metadata !8045, metadata !DIExpression()), !dbg !8146
  %tobool626 = icmp eq %struct.rtx_def* %call625, null, !dbg !8363
  br i1 %tobool626, label %cleanup1594, label %if.end628, !dbg !8365

if.end628:                                        ; preds = %if.end620
  %62 = load i64*, i64** %0, align 8, !dbg !8366
  %bf.load632 = load i64, i64* %62, align 8, !dbg !8366
  %bf.lshr633 = lshr i64 %bf.load632, 56, !dbg !8366
  %conv635 = trunc i64 %bf.lshr633 to i8, !dbg !8366
  call void @llvm.dbg.value(metadata i8 %conv635, metadata !8050, metadata !DIExpression()), !dbg !8146
  %call636 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %cond, %struct.rtx_def* nonnull %call625) #6, !dbg !8367
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call636, metadata !8045, metadata !DIExpression()), !dbg !8146
  tail call void @set_mem_attributes(%struct.rtx_def* %call636, %union.tree_node* %exp, i32 0) #6, !dbg !8368
  tail call void @set_mem_addr_space(%struct.rtx_def* %call636, i8 zeroext %conv635) #6, !dbg !8369
  br label %cleanup1594, !dbg !8370

sw.bb637:                                         ; preds = %sw.epilog48, %sw.epilog48, %sw.epilog48, %sw.epilog48, %sw.epilog48, %sw.epilog48, %sw.epilog48
  %63 = bitcast i32* %mode1 to i8*, !dbg !8371
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #8, !dbg !8371
  %64 = bitcast i64* %bitsize to i8*, !dbg !8372
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #8, !dbg !8372
  %65 = bitcast i64* %bitpos to i8*, !dbg !8372
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #8, !dbg !8372
  %66 = bitcast %union.tree_node** %offset to i8*, !dbg !8373
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #8, !dbg !8373
  %67 = bitcast i32* %volatilep to i8*, !dbg !8374
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #8, !dbg !8374
  call void @llvm.dbg.value(metadata i32 0, metadata !8064, metadata !DIExpression()), !dbg !8375
  store i32 0, i32* %volatilep, align 4, !dbg !8376
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !8049, metadata !DIExpression(DW_OP_deref)), !dbg !8146
  call void @llvm.dbg.value(metadata i32* %mode1, metadata !8059, metadata !DIExpression(DW_OP_deref)), !dbg !8375
  call void @llvm.dbg.value(metadata i64* %bitsize, metadata !8061, metadata !DIExpression(DW_OP_deref)), !dbg !8375
  call void @llvm.dbg.value(metadata i64* %bitpos, metadata !8062, metadata !DIExpression(DW_OP_deref)), !dbg !8375
  call void @llvm.dbg.value(metadata %union.tree_node** %offset, metadata !8063, metadata !DIExpression(DW_OP_deref)), !dbg !8375
  call void @llvm.dbg.value(metadata i32* %volatilep, metadata !8064, metadata !DIExpression(DW_OP_deref)), !dbg !8375
  %call638 = call %union.tree_node* @get_inner_reference(%union.tree_node* %exp, i64* nonnull %bitsize, i64* nonnull %bitpos, %union.tree_node** nonnull %offset, i32* nonnull %mode1, i32* nonnull %unsignedp, i32* nonnull %volatilep, i8 zeroext 0) #6, !dbg !8377
  call void @llvm.dbg.value(metadata %union.tree_node* %call638, metadata !8065, metadata !DIExpression()), !dbg !8375
  %68 = load i64, i64* %bitsize, align 8, !dbg !8378
  call void @llvm.dbg.value(metadata i64 %68, metadata !8061, metadata !DIExpression()), !dbg !8375
  %cmp639 = icmp eq i64 %68, 0, !dbg !8380
  br i1 %cmp639, label %cleanup884, label %if.end642, !dbg !8381

if.end642:                                        ; preds = %sw.bb637
  %call643 = call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %call638) #7, !dbg !8382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call643, metadata !8045, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call643, metadata !8066, metadata !DIExpression()), !dbg !8375
  %tobool644 = icmp eq %struct.rtx_def* %call643, null, !dbg !8383
  br i1 %tobool644, label %cleanup884, label %if.end646, !dbg !8385

if.end646:                                        ; preds = %if.end642
  %69 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !8386
  call void @llvm.dbg.value(metadata %union.tree_node* %69, metadata !8063, metadata !DIExpression()), !dbg !8375
  %tobool647 = icmp eq %union.tree_node* %69, null, !dbg !8386
  br i1 %tobool647, label %if.end709, label %if.then648, !dbg !8387

if.then648:                                       ; preds = %if.end646
  %70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call643, i64 0, i32 0, !dbg !8388
  %bf.load649 = load i32, i32* %70, align 8, !dbg !8388
  %bf.clear650 = and i32 %bf.load649, 65535, !dbg !8388
  %cmp651 = icmp eq i32 %bf.clear650, 43, !dbg !8388
  br i1 %cmp651, label %if.end654, label %cleanup707, !dbg !8390

if.end654:                                        ; preds = %if.then648
  %arrayidx657 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call643, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8391
  %rt_rtx658 = bitcast %union.rtunion_def* %arrayidx657 to %struct.rtx_def**, !dbg !8391
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx658, align 8, !dbg !8391
  call void @llvm.dbg.value(metadata %struct.rtx_def* %71, metadata !8045, metadata !DIExpression()), !dbg !8146
  %72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i64 0, i32 0, !dbg !8392
  %bf.load659 = load i32, i32* %72, align 8, !dbg !8392
  %bf.lshr660 = lshr i32 %bf.load659, 16, !dbg !8392
  %bf.clear661 = and i32 %bf.lshr660, 255, !dbg !8392
  call void @llvm.dbg.value(metadata i32 %bf.clear661, metadata !8067, metadata !DIExpression()), !dbg !8393
  %cmp662 = icmp eq i32 %bf.clear661, 0, !dbg !8394
  %spec.select = select i1 %cmp662, i32 16, i32 %bf.clear661, !dbg !8396
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8067, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata %union.tree_node* %69, metadata !8063, metadata !DIExpression()), !dbg !8375
  %call666 = call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* nonnull %69) #7, !dbg !8397
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call666, metadata !8046, metadata !DIExpression()), !dbg !8146
  %tobool667 = icmp eq %struct.rtx_def* %call666, null, !dbg !8398
  br i1 %tobool667, label %cleanup707, label %if.end669, !dbg !8400

if.end669:                                        ; preds = %if.end654
  %73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call666, i64 0, i32 0, !dbg !8401
  %bf.load670 = load i32, i32* %73, align 8, !dbg !8401
  %bf.lshr671 = lshr i32 %bf.load670, 16, !dbg !8401
  %bf.clear672 = and i32 %bf.lshr671, 255, !dbg !8401
  call void @llvm.dbg.value(metadata i32 %bf.clear672, metadata !8070, metadata !DIExpression()), !dbg !8393
  %cmp673 = icmp eq i32 %bf.clear672, 0, !dbg !8402
  br i1 %cmp673, label %if.then675, label %if.end698, !dbg !8404

if.then675:                                       ; preds = %if.end669
  %74 = bitcast %union.tree_node** %offset to %struct.tree_common**, !dbg !8405
  %75 = load %struct.tree_common*, %struct.tree_common** %74, align 8, !dbg !8405
  %type677 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %75, i64 0, i32 2, !dbg !8405
  %76 = bitcast %union.tree_node** %type677 to i64**, !dbg !8405
  %77 = load i64*, i64** %76, align 8, !dbg !8405
  %bf.load679 = load i64, i64* %77, align 8, !dbg !8405
  %bf.cast68123 = and i64 %bf.load679, 65535, !dbg !8405
  %cmp682 = icmp eq i64 %bf.cast68123, 14, !dbg !8405
  br i1 %cmp682, label %cond.true684, label %cond.false688, !dbg !8405

cond.true684:                                     ; preds = %if.then675
  %78 = bitcast i64* %77 to %union.tree_node*, !dbg !8405
  %call687 = call i32 @vector_type_mode(%union.tree_node* %78) #6, !dbg !8405
  br label %if.end698, !dbg !8405

cond.false688:                                    ; preds = %if.then675
  %type691 = bitcast i64* %77 to %struct.tree_type*, !dbg !8405
  %mode692 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type691, i64 0, i32 6, !dbg !8405
  %bf.load693 = load i32, i32* %mode692, align 4, !dbg !8405
  %bf.lshr694 = lshr i32 %bf.load693, 16, !dbg !8405
  %bf.clear695 = and i32 %bf.lshr694, 255, !dbg !8405
  br label %if.end698, !dbg !8405

if.end698:                                        ; preds = %cond.true684, %cond.false688, %if.end669
  %offmode.0 = phi i32 [ %bf.clear672, %if.end669 ], [ %call687, %cond.true684 ], [ %bf.clear695, %cond.false688 ], !dbg !8393
  call void @llvm.dbg.value(metadata i32 %offmode.0, metadata !8070, metadata !DIExpression()), !dbg !8393
  %cmp699 = icmp eq i32 %spec.select, %offmode.0, !dbg !8406
  br i1 %cmp699, label %if.end704, label %if.then701, !dbg !8408

if.then701:                                       ; preds = %if.end698
  %call702 = call i32 @subreg_lowpart_offset(i32 %spec.select, i32 %offmode.0) #6, !dbg !8409
  %call703 = call %struct.rtx_def* @simplify_gen_subreg(i32 %spec.select, %struct.rtx_def* nonnull %call666, i32 %offmode.0, i32 %call702) #6, !dbg !8410
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call703, metadata !8046, metadata !DIExpression()), !dbg !8146
  br label %if.end704, !dbg !8411

if.end704:                                        ; preds = %if.end698, %if.then701
  %op1.3 = phi %struct.rtx_def* [ %call703, %if.then701 ], [ %call666, %if.end698 ], !dbg !8393
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.3, metadata !8046, metadata !DIExpression()), !dbg !8146
  %call705 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %spec.select, %struct.rtx_def* %71, %struct.rtx_def* %op1.3) #6, !dbg !8412
  %call706 = call %struct.rtx_def* @gen_rtx_MEM(i32 %cond, %struct.rtx_def* %call705) #6, !dbg !8413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call706, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup707, !dbg !8414

cleanup707:                                       ; preds = %if.end654, %if.then648, %if.end704
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end704 ], [ false, %if.then648 ], [ false, %if.end654 ]
  %op0.14 = phi %struct.rtx_def* [ %call706, %if.end704 ], [ %call643, %if.then648 ], [ %71, %if.end654 ], !dbg !8375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.14, metadata !8045, metadata !DIExpression()), !dbg !8146
  br i1 %cleanup.dest.slot.0, label %if.end709, label %cleanup884

if.end709:                                        ; preds = %if.end646, %cleanup707
  %op0.15 = phi %struct.rtx_def* [ %call643, %if.end646 ], [ %op0.14, %cleanup707 ], !dbg !8375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.15, metadata !8045, metadata !DIExpression()), !dbg !8146
  %79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.15, i64 0, i32 0, !dbg !8415
  %bf.load710 = load i32, i32* %79, align 8, !dbg !8415
  %bf.clear711 = and i32 %bf.load710, 65535, !dbg !8415
  %cmp712 = icmp eq i32 %bf.clear711, 43, !dbg !8415
  br i1 %cmp712, label %if.then714, label %if.end771, !dbg !8416

if.then714:                                       ; preds = %if.end709
  %80 = load i32, i32* %mode1, align 4, !dbg !8417
  call void @llvm.dbg.value(metadata i32 %80, metadata !8059, metadata !DIExpression()), !dbg !8375
  %cmp715 = icmp eq i32 %80, 0, !dbg !8419
  br i1 %cmp715, label %if.then717, label %if.end720, !dbg !8420

if.then717:                                       ; preds = %if.then714
  %81 = load i64, i64* %bitsize, align 8, !dbg !8421
  call void @llvm.dbg.value(metadata i64 %81, metadata !8061, metadata !DIExpression()), !dbg !8375
  %conv718 = trunc i64 %81 to i32, !dbg !8421
  %call719 = call i32 @smallest_mode_for_size(i32 %conv718, i32 2) #6, !dbg !8422
  call void @llvm.dbg.value(metadata i32 %call719, metadata !8059, metadata !DIExpression()), !dbg !8375
  store i32 %call719, i32* %mode1, align 4, !dbg !8423
  br label %if.end720, !dbg !8424

if.end720:                                        ; preds = %if.then717, %if.then714
  %82 = phi i32 [ %call719, %if.then717 ], [ %80, %if.then714 ]
  %83 = load i64, i64* %bitpos, align 8, !dbg !8425
  call void @llvm.dbg.value(metadata i64 %83, metadata !8062, metadata !DIExpression()), !dbg !8375
  %cmp721 = icmp sgt i64 %83, 7, !dbg !8426
  br i1 %cmp721, label %if.then723, label %if.else726, !dbg !8427

if.then723:                                       ; preds = %if.end720
  call void @llvm.dbg.value(metadata i32 %82, metadata !8059, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i64 %83, metadata !8062, metadata !DIExpression()), !dbg !8375
  %div724 = sdiv i64 %83, 8, !dbg !8428
  %call725 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.15, i32 %82, i64 %div724, i32 0, i32 1) #6, !dbg !8428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call725, metadata !8045, metadata !DIExpression()), !dbg !8146
  %84 = load i64, i64* %bitpos, align 8, !dbg !8430
  call void @llvm.dbg.value(metadata i64 %84, metadata !8062, metadata !DIExpression()), !dbg !8375
  %rem = srem i64 %84, 8, !dbg !8430
  call void @llvm.dbg.value(metadata i64 %rem, metadata !8062, metadata !DIExpression()), !dbg !8375
  store i64 %rem, i64* %bitpos, align 8, !dbg !8430
  br label %if.end765, !dbg !8431

if.else726:                                       ; preds = %if.end720
  call void @llvm.dbg.value(metadata i64 %83, metadata !8062, metadata !DIExpression()), !dbg !8375
  %cmp727 = icmp slt i64 %83, 0, !dbg !8432
  call void @llvm.dbg.value(metadata i64 %83, metadata !8062, metadata !DIExpression()), !dbg !8375
  br i1 %cmp727, label %if.then729, label %if.else737, !dbg !8433

if.then729:                                       ; preds = %if.else726
  %sub732 = sub i64 7, %83, !dbg !8434
  %div733 = sdiv i64 %sub732, 8, !dbg !8435
  call void @llvm.dbg.value(metadata i64 %div733, metadata !8071, metadata !DIExpression()), !dbg !8436
  call void @llvm.dbg.value(metadata i32 %82, metadata !8059, metadata !DIExpression()), !dbg !8375
  %call734 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.15, i32 %82, i64 %div733, i32 0, i32 1) #6, !dbg !8437
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call734, metadata !8045, metadata !DIExpression()), !dbg !8146
  %mul735 = shl nsw i64 %div733, 3, !dbg !8438
  %85 = load i64, i64* %bitpos, align 8, !dbg !8439
  call void @llvm.dbg.value(metadata i64 %85, metadata !8062, metadata !DIExpression()), !dbg !8375
  %add736 = add nsw i64 %85, %mul735, !dbg !8439
  call void @llvm.dbg.value(metadata i64 %add736, metadata !8062, metadata !DIExpression()), !dbg !8375
  store i64 %add736, i64* %bitpos, align 8, !dbg !8439
  br label %if.end765, !dbg !8440

if.else737:                                       ; preds = %if.else726
  %cmp738 = icmp eq i64 %83, 0, !dbg !8441
  br i1 %cmp738, label %land.lhs.true740, label %if.else752, !dbg !8443

land.lhs.true740:                                 ; preds = %if.else737
  %86 = load i64, i64* %bitsize, align 8, !dbg !8444
  call void @llvm.dbg.value(metadata i64 %86, metadata !8061, metadata !DIExpression()), !dbg !8375
  %idxprom741 = zext i32 %cond to i64, !dbg !8445
  %arrayidx742 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom741, !dbg !8445
  %87 = load i8, i8* %arrayidx742, align 1, !dbg !8445
  %conv744 = zext i8 %87 to i64, !dbg !8445
  %mul745 = shl nuw nsw i64 %conv744, 3, !dbg !8445
  %cmp748 = icmp eq i64 %86, %mul745, !dbg !8446
  br i1 %cmp748, label %if.then750, label %if.else752, !dbg !8447

if.then750:                                       ; preds = %land.lhs.true740
  %call751 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.15, i32 %cond, i64 0, i32 0, i32 1) #6, !dbg !8448
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call751, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end765, !dbg !8449

if.else752:                                       ; preds = %land.lhs.true740, %if.else737
  %bf.load753 = load i32, i32* %79, align 8, !dbg !8450
  %bf.lshr754 = lshr i32 %bf.load753, 16, !dbg !8450
  %bf.clear755 = and i32 %bf.lshr754, 255, !dbg !8450
  call void @llvm.dbg.value(metadata i32 %82, metadata !8059, metadata !DIExpression()), !dbg !8375
  %cmp756 = icmp eq i32 %bf.clear755, %82, !dbg !8452
  br i1 %cmp756, label %if.else760, label %if.then758, !dbg !8453

if.then758:                                       ; preds = %if.else752
  call void @llvm.dbg.value(metadata i32 %82, metadata !8059, metadata !DIExpression()), !dbg !8375
  %call759 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.15, i32 %82, i64 0, i32 0, i32 1) #6, !dbg !8454
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call759, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end765, !dbg !8455

if.else760:                                       ; preds = %if.else752
  %call761 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.15) #6, !dbg !8456
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call761, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end765

if.end765:                                        ; preds = %if.then729, %if.then758, %if.else760, %if.then750, %if.then723
  %op0.19 = phi %struct.rtx_def* [ %call725, %if.then723 ], [ %call734, %if.then729 ], [ %call751, %if.then750 ], [ %call759, %if.then758 ], [ %call761, %if.else760 ], !dbg !8457
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.19, metadata !8045, metadata !DIExpression()), !dbg !8146
  %cmp766 = icmp eq %struct.rtx_def* %op0.19, %call643, !dbg !8458
  br i1 %cmp766, label %if.then768, label %if.end770, !dbg !8460

if.then768:                                       ; preds = %if.end765
  %call769 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* nonnull %call643) #6, !dbg !8461
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call769, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end770, !dbg !8462

if.end770:                                        ; preds = %if.then768, %if.end765
  %op0.20 = phi %struct.rtx_def* [ %call769, %if.then768 ], [ %op0.19, %if.end765 ], !dbg !8463
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.20, metadata !8045, metadata !DIExpression()), !dbg !8146
  call void @set_mem_attributes(%struct.rtx_def* %op0.20, %union.tree_node* %exp, i32 0) #6, !dbg !8464
  br label %if.end771, !dbg !8465

if.end771:                                        ; preds = %if.end770, %if.end709
  %op0.21 = phi %struct.rtx_def* [ %op0.20, %if.end770 ], [ %op0.15, %if.end709 ], !dbg !8375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.21, metadata !8045, metadata !DIExpression()), !dbg !8146
  %88 = load i64, i64* %bitpos, align 8, !dbg !8466
  call void @llvm.dbg.value(metadata i64 %88, metadata !8062, metadata !DIExpression()), !dbg !8375
  %cmp772 = icmp eq i64 %88, 0, !dbg !8468
  br i1 %cmp772, label %land.lhs.true774, label %if.end781, !dbg !8469

land.lhs.true774:                                 ; preds = %if.end771
  %89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.21, i64 0, i32 0, !dbg !8470
  %bf.load775 = load i32, i32* %89, align 8, !dbg !8470
  %bf.lshr776 = lshr i32 %bf.load775, 16, !dbg !8470
  %bf.clear777 = and i32 %bf.lshr776, 255, !dbg !8470
  %cmp778 = icmp eq i32 %cond, %bf.clear777, !dbg !8471
  br i1 %cmp778, label %cleanup884, label %if.end781, !dbg !8472

if.end781:                                        ; preds = %land.lhs.true774, %if.end771
  call void @llvm.dbg.value(metadata i64 %88, metadata !8062, metadata !DIExpression()), !dbg !8375
  %cmp782 = icmp slt i64 %88, 0, !dbg !8473
  br i1 %cmp782, label %cleanup884, label %if.end785, !dbg !8475

if.end785:                                        ; preds = %if.end781
  call void @llvm.dbg.value(metadata i64 %88, metadata !8062, metadata !DIExpression()), !dbg !8375
  %rem78621 = and i64 %88, 7, !dbg !8476
  %cmp787 = icmp eq i64 %rem78621, 0, !dbg !8476
  br i1 %cmp787, label %land.lhs.true789, label %if.end842, !dbg !8477

land.lhs.true789:                                 ; preds = %if.end785
  %90 = load i64, i64* %bitsize, align 8, !dbg !8478
  call void @llvm.dbg.value(metadata i64 %90, metadata !8061, metadata !DIExpression()), !dbg !8375
  %91 = load i32, i32* %mode1, align 4, !dbg !8479
  call void @llvm.dbg.value(metadata i32 %91, metadata !8059, metadata !DIExpression()), !dbg !8375
  %idxprom790 = zext i32 %91 to i64, !dbg !8479
  %arrayidx791 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom790, !dbg !8479
  %92 = load i8, i8* %arrayidx791, align 1, !dbg !8479
  %conv793 = zext i8 %92 to i64, !dbg !8479
  %mul794 = shl nuw nsw i64 %conv793, 3, !dbg !8479
  %cmp797 = icmp eq i64 %90, %mul794, !dbg !8480
  br i1 %cmp797, label %if.then799, label %if.end842, !dbg !8481

if.then799:                                       ; preds = %land.lhs.true789
  %93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.21, i64 0, i32 0, !dbg !8482
  %bf.load800 = load i32, i32* %93, align 8, !dbg !8482
  %bf.lshr801 = lshr i32 %bf.load800, 16, !dbg !8482
  %bf.clear802 = and i32 %bf.lshr801, 255, !dbg !8482
  call void @llvm.dbg.value(metadata i32 %bf.clear802, metadata !8077, metadata !DIExpression()), !dbg !8483
  %trunc = trunc i32 %bf.lshr801 to i8, !dbg !8484
  switch i8 %trunc, label %if.end812 [
    i8 1, label %cond.true805
    i8 0, label %if.then811
  ], !dbg !8484

cond.true805:                                     ; preds = %if.then799
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2575, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8484
  %.pre34 = load i64, i64* %bitpos, align 8, !dbg !8485
  br label %if.end812, !dbg !8487

if.then811:                                       ; preds = %if.then799
  call void @llvm.dbg.value(metadata i32 %91, metadata !8059, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i32 %91, metadata !8077, metadata !DIExpression()), !dbg !8483
  br label %if.end812, !dbg !8488

if.end812:                                        ; preds = %cond.true805, %if.then799, %if.then811
  %94 = phi i64 [ %88, %if.then811 ], [ %.pre34, %cond.true805 ], [ %88, %if.then799 ], !dbg !8485
  %opmode.0 = phi i32 [ %91, %if.then811 ], [ %bf.clear802, %cond.true805 ], [ %bf.clear802, %if.then799 ], !dbg !8483
  call void @llvm.dbg.value(metadata i32 %opmode.0, metadata !8077, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i64 %94, metadata !8062, metadata !DIExpression()), !dbg !8375
  %idxprom813 = zext i32 %opmode.0 to i64, !dbg !8490
  %arrayidx814 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom813, !dbg !8490
  %95 = load i8, i8* %arrayidx814, align 1, !dbg !8490
  %conv816 = zext i8 %95 to i64, !dbg !8490
  %mul817 = shl nuw nsw i64 %conv816, 3, !dbg !8490
  %cmp820 = icmp slt i64 %94, %mul817, !dbg !8491
  br i1 %cmp820, label %if.end823, label %cleanup839, !dbg !8492

if.end823:                                        ; preds = %if.end812
  call void @llvm.dbg.value(metadata i64 %94, metadata !8062, metadata !DIExpression()), !dbg !8375
  %idxprom824 = zext i32 %cond to i64, !dbg !8493
  %arrayidx825 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom824, !dbg !8493
  %96 = load i8, i8* %arrayidx825, align 1, !dbg !8493
  %conv827 = zext i8 %96 to i64, !dbg !8493
  %mul828 = shl nuw nsw i64 %conv827, 3, !dbg !8493
  %rem831 = srem i64 %94, %mul828, !dbg !8495
  %cmp832 = icmp eq i64 %rem831, 0, !dbg !8496
  br i1 %cmp832, label %if.then834, label %cleanup839, !dbg !8497

if.then834:                                       ; preds = %if.end823
  call void @llvm.dbg.value(metadata i64 %94, metadata !8062, metadata !DIExpression()), !dbg !8375
  %div835 = sdiv i64 %94, 8, !dbg !8498
  %conv836 = trunc i64 %div835 to i32, !dbg !8499
  %call837 = call %struct.rtx_def* @simplify_gen_subreg(i32 %cond, %struct.rtx_def* %op0.21, i32 %opmode.0, i32 %conv836) #6, !dbg !8500
  br label %cleanup839, !dbg !8501

cleanup839:                                       ; preds = %if.end812, %if.end823, %if.then834
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then834 ], [ false, %if.end812 ], [ true, %if.end823 ]
  %retval.3 = phi %struct.rtx_def* [ %call837, %if.then834 ], [ null, %if.end812 ], [ null, %if.end823 ]
  br i1 %cleanup.dest.slot.1, label %if.end842, label %cleanup884

if.end842:                                        ; preds = %cleanup839, %land.lhs.true789, %if.end785
  %97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.21, i64 0, i32 0, !dbg !8502
  %bf.load843 = load i32, i32* %97, align 8, !dbg !8502
  %bf.lshr844 = lshr i32 %bf.load843, 16, !dbg !8502
  %bf.clear845 = and i32 %bf.lshr844, 255, !dbg !8502
  %idxprom846 = zext i32 %bf.clear845 to i64, !dbg !8502
  %arrayidx847 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom846, !dbg !8502
  %98 = load i8, i8* %arrayidx847, align 1, !dbg !8502
  %cmp849 = icmp eq i8 %98, 2, !dbg !8502
  br i1 %cmp849, label %land.rhs, label %lor.lhs.false851, !dbg !8502

lor.lhs.false851:                                 ; preds = %if.end842
  %cmp858 = icmp eq i8 %98, 3, !dbg !8502
  br i1 %cmp858, label %land.rhs, label %land.end, !dbg !8503

land.rhs:                                         ; preds = %lor.lhs.false851, %if.end842
  %99 = load i64*, i64** %0, align 8, !dbg !8504
  %bf.load863 = load i64, i64* %99, align 8, !dbg !8504
  %bf.cast86622 = and i64 %bf.load863, 2097152, !dbg !8503
  %tobool867 = icmp eq i64 %bf.cast86622, 0, !dbg !8503
  %phitmp = select i1 %tobool867, i32 120, i32 119
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false851
  %100 = phi i32 [ 120, %lor.lhs.false851 ], [ %phitmp, %land.rhs ]
  %bf.clear871 = and i32 %bf.load843, 16711680, !dbg !8505
  %cmp872 = icmp eq i32 %bf.clear871, 0, !dbg !8506
  br i1 %cmp872, label %cond.false878, label %cond.true874, !dbg !8505

cond.true874:                                     ; preds = %land.end
  br label %cond.end879, !dbg !8505

cond.false878:                                    ; preds = %land.end
  %101 = load i32, i32* %mode1, align 4, !dbg !8507
  call void @llvm.dbg.value(metadata i32 %101, metadata !8059, metadata !DIExpression()), !dbg !8375
  br label %cond.end879, !dbg !8505

cond.end879:                                      ; preds = %cond.false878, %cond.true874
  %cond880 = phi i32 [ %bf.clear845, %cond.true874 ], [ %101, %cond.false878 ], !dbg !8505
  %102 = load i64, i64* %bitsize, align 8, !dbg !8508
  call void @llvm.dbg.value(metadata i64 %102, metadata !8061, metadata !DIExpression()), !dbg !8375
  %call881 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %102) #6, !dbg !8508
  %103 = load i64, i64* %bitpos, align 8, !dbg !8509
  call void @llvm.dbg.value(metadata i64 %103, metadata !8062, metadata !DIExpression()), !dbg !8375
  %call882 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %103) #6, !dbg !8509
  %call883 = call %struct.rtx_def* @simplify_gen_ternary(i32 %100, i32 %cond, i32 %cond880, %struct.rtx_def* %op0.21, %struct.rtx_def* %call881, %struct.rtx_def* %call882) #6, !dbg !8510
  br label %cleanup884, !dbg !8511

cleanup884:                                       ; preds = %if.end642, %if.end781, %land.lhs.true774, %sw.bb637, %cleanup707, %cleanup839, %cond.end879
  %retval.4 = phi %struct.rtx_def* [ null, %cleanup707 ], [ %retval.3, %cleanup839 ], [ %call883, %cond.end879 ], [ null, %sw.bb637 ], [ null, %if.end642 ], [ %op0.21, %land.lhs.true774 ], [ null, %if.end781 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #8, !dbg !8512
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #8, !dbg !8512
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #8, !dbg !8512
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #8, !dbg !8512
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #8, !dbg !8512
  br label %cleanup1594

sw.bb891:                                         ; preds = %sw.epilog48
  %call892 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 111, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8513
  br label %cleanup1594, !dbg !8514

sw.bb893:                                         ; preds = %sw.epilog48
  %call894 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8515
  br label %cleanup1594, !dbg !8516

sw.bb895:                                         ; preds = %sw.epilog48
  %call896 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 64, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8517
  br label %cleanup1594, !dbg !8518

sw.bb897:                                         ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool898 = icmp eq i32 %bf.cast15, 0, !dbg !8519
  br i1 %tobool898, label %if.else901, label %if.then899, !dbg !8521

if.then899:                                       ; preds = %sw.bb897
  %call900 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 105, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8522
  br label %cleanup1594, !dbg !8523

if.else901:                                       ; preds = %sw.bb897
  %call902 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 103, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8524
  br label %cleanup1594, !dbg !8525

sw.bb903:                                         ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool904 = icmp eq i32 %bf.cast15, 0, !dbg !8526
  br i1 %tobool904, label %if.else907, label %if.then905, !dbg !8528

if.then905:                                       ; preds = %sw.bb903
  %call906 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 106, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8529
  br label %cleanup1594, !dbg !8530

if.else907:                                       ; preds = %sw.bb903
  %call908 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 104, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8531
  br label %cleanup1594, !dbg !8532

sw.bb909:                                         ; preds = %sw.epilog48, %sw.epilog48
  %call910 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8533
  br label %cleanup1594, !dbg !8534

sw.bb911:                                         ; preds = %sw.epilog48
  %call912 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 50, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8535
  br label %cleanup1594, !dbg !8536

sw.bb913:                                         ; preds = %sw.epilog48
  %call914 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8537
  br label %cleanup1594, !dbg !8538

sw.bb915:                                         ; preds = %sw.epilog48, %sw.epilog48, %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool916 = icmp eq i32 %bf.cast15, 0, !dbg !8539
  br i1 %tobool916, label %if.else919, label %if.then917, !dbg !8541

if.then917:                                       ; preds = %sw.bb915
  %call918 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 59, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8542
  br label %cleanup1594, !dbg !8543

if.else919:                                       ; preds = %sw.bb915
  %call920 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 55, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8544
  br label %cleanup1594, !dbg !8545

sw.bb921:                                         ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool922 = icmp eq i32 %bf.cast15, 0, !dbg !8546
  br i1 %tobool922, label %if.else925, label %if.then923, !dbg !8548

if.then923:                                       ; preds = %sw.bb921
  %call924 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 60, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8549
  br label %cleanup1594, !dbg !8550

if.else925:                                       ; preds = %sw.bb921
  %call926 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 58, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8551
  br label %cleanup1594, !dbg !8552

sw.bb927:                                         ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool928 = icmp eq i32 %bf.cast15, 0, !dbg !8553
  br i1 %tobool928, label %if.else931, label %if.then929, !dbg !8554

if.then929:                                       ; preds = %sw.bb927
  %call930 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 59, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8555
  br label %cleanup1594, !dbg !8556

if.else931:                                       ; preds = %sw.bb927
  %call933 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 55, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8557
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call933, metadata !8080, metadata !DIExpression()), !dbg !8558
  %call934 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 58, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8559
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call934, metadata !8083, metadata !DIExpression()), !dbg !8558
  %call935 = tail call fastcc %struct.rtx_def* @floor_sdiv_adjust(i32 %cond, %struct.rtx_def* %call934, %struct.rtx_def* %op1.2) #7, !dbg !8560
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call935, metadata !8084, metadata !DIExpression()), !dbg !8558
  %call936 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call933, %struct.rtx_def* %call935) #6, !dbg !8561
  br label %cleanup1594

sw.bb940:                                         ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool941 = icmp eq i32 %bf.cast15, 0, !dbg !8562
  br i1 %tobool941, label %if.else944, label %if.then942, !dbg !8563

if.then942:                                       ; preds = %sw.bb940
  %call943 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 60, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8564
  br label %cleanup1594, !dbg !8565

if.else944:                                       ; preds = %sw.bb940
  %call946 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 58, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8566
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call946, metadata !8085, metadata !DIExpression()), !dbg !8567
  %call948 = tail call fastcc %struct.rtx_def* @floor_sdiv_adjust(i32 %cond, %struct.rtx_def* %call946, %struct.rtx_def* %op1.2) #7, !dbg !8568
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call948, metadata !8088, metadata !DIExpression()), !dbg !8567
  %call949 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %cond, %struct.rtx_def* %call948, %struct.rtx_def* %op1.2) #6, !dbg !8569
  %call950 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %cond, %struct.rtx_def* %call949) #6, !dbg !8569
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call950, metadata !8088, metadata !DIExpression()), !dbg !8567
  %call951 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call946, %struct.rtx_def* %call950) #6, !dbg !8570
  br label %cleanup1594

sw.bb954:                                         ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool955 = icmp eq i32 %bf.cast15, 0, !dbg !8571
  br i1 %tobool955, label %if.else967, label %if.then956, !dbg !8572

if.then956:                                       ; preds = %sw.bb954
  %call958 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 59, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8573
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call958, metadata !8089, metadata !DIExpression()), !dbg !8574
  %call960 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 60, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8575
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call960, metadata !8092, metadata !DIExpression()), !dbg !8574
  %call962 = tail call fastcc %struct.rtx_def* @ceil_udiv_adjust(i32 %cond, %struct.rtx_def* %call960, %struct.rtx_def* %op1.2) #7, !dbg !8576
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call962, metadata !8093, metadata !DIExpression()), !dbg !8574
  %call963 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call958, %struct.rtx_def* %call962) #6, !dbg !8577
  br label %cleanup1594

if.else967:                                       ; preds = %sw.bb954
  %call969 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 55, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8578
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call969, metadata !8094, metadata !DIExpression()), !dbg !8579
  %call971 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 58, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8580
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call971, metadata !8096, metadata !DIExpression()), !dbg !8579
  %call973 = tail call fastcc %struct.rtx_def* @ceil_sdiv_adjust(i32 %cond, %struct.rtx_def* %call971, %struct.rtx_def* %op1.2) #7, !dbg !8581
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call973, metadata !8097, metadata !DIExpression()), !dbg !8579
  %call974 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call969, %struct.rtx_def* %call973) #6, !dbg !8582
  br label %cleanup1594

sw.bb978:                                         ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool979 = icmp eq i32 %bf.cast15, 0, !dbg !8583
  br i1 %tobool979, label %if.else990, label %if.then980, !dbg !8584

if.then980:                                       ; preds = %sw.bb978
  %call982 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 60, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8585
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call982, metadata !8098, metadata !DIExpression()), !dbg !8586
  %call984 = tail call fastcc %struct.rtx_def* @ceil_udiv_adjust(i32 %cond, %struct.rtx_def* %call982, %struct.rtx_def* %op1.2) #7, !dbg !8587
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call984, metadata !8101, metadata !DIExpression()), !dbg !8586
  %call985 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %cond, %struct.rtx_def* %call984, %struct.rtx_def* %op1.2) #6, !dbg !8588
  %call986 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %cond, %struct.rtx_def* %call985) #6, !dbg !8588
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call986, metadata !8101, metadata !DIExpression()), !dbg !8586
  %call987 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call982, %struct.rtx_def* %call986) #6, !dbg !8589
  br label %cleanup1594

if.else990:                                       ; preds = %sw.bb978
  %call992 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 58, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8590
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call992, metadata !8102, metadata !DIExpression()), !dbg !8591
  %call994 = tail call fastcc %struct.rtx_def* @ceil_sdiv_adjust(i32 %cond, %struct.rtx_def* %call992, %struct.rtx_def* %op1.2) #7, !dbg !8592
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call994, metadata !8104, metadata !DIExpression()), !dbg !8591
  %call995 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %cond, %struct.rtx_def* %call994, %struct.rtx_def* %op1.2) #6, !dbg !8593
  %call996 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %cond, %struct.rtx_def* %call995) #6, !dbg !8593
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call996, metadata !8104, metadata !DIExpression()), !dbg !8591
  %call997 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call992, %struct.rtx_def* %call996) #6, !dbg !8594
  br label %cleanup1594

sw.bb1000:                                        ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool1001 = icmp eq i32 %bf.cast15, 0, !dbg !8595
  br i1 %tobool1001, label %if.else1013, label %if.then1002, !dbg !8596

if.then1002:                                      ; preds = %sw.bb1000
  %call1004 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 59, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8597
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1004, metadata !8105, metadata !DIExpression()), !dbg !8598
  %call1006 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 60, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8599
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1006, metadata !8108, metadata !DIExpression()), !dbg !8598
  %call1008 = tail call fastcc %struct.rtx_def* @round_udiv_adjust(i32 %cond, %struct.rtx_def* %call1006, %struct.rtx_def* %op1.2) #7, !dbg !8600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1008, metadata !8109, metadata !DIExpression()), !dbg !8598
  %call1009 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call1004, %struct.rtx_def* %call1008) #6, !dbg !8601
  br label %cleanup1594

if.else1013:                                      ; preds = %sw.bb1000
  %call1015 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 55, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1015, metadata !8110, metadata !DIExpression()), !dbg !8603
  %call1017 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 58, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8604
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1017, metadata !8112, metadata !DIExpression()), !dbg !8603
  %call1019 = tail call fastcc %struct.rtx_def* @round_sdiv_adjust(i32 %cond, %struct.rtx_def* %call1017, %struct.rtx_def* %op1.2) #7, !dbg !8605
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1019, metadata !8113, metadata !DIExpression()), !dbg !8603
  %call1020 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call1015, %struct.rtx_def* %call1019) #6, !dbg !8606
  br label %cleanup1594

sw.bb1024:                                        ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool1025 = icmp eq i32 %bf.cast15, 0, !dbg !8607
  br i1 %tobool1025, label %if.else1036, label %if.then1026, !dbg !8608

if.then1026:                                      ; preds = %sw.bb1024
  %call1028 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 60, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8609
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1028, metadata !8114, metadata !DIExpression()), !dbg !8610
  %call1030 = tail call fastcc %struct.rtx_def* @round_udiv_adjust(i32 %cond, %struct.rtx_def* %call1028, %struct.rtx_def* %op1.2) #7, !dbg !8611
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1030, metadata !8117, metadata !DIExpression()), !dbg !8610
  %call1031 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %cond, %struct.rtx_def* %call1030, %struct.rtx_def* %op1.2) #6, !dbg !8612
  %call1032 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %cond, %struct.rtx_def* %call1031) #6, !dbg !8612
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1032, metadata !8117, metadata !DIExpression()), !dbg !8610
  %call1033 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call1028, %struct.rtx_def* %call1032) #6, !dbg !8613
  br label %cleanup1594

if.else1036:                                      ; preds = %sw.bb1024
  %call1038 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 58, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8614
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1038, metadata !8118, metadata !DIExpression()), !dbg !8615
  %call1040 = tail call fastcc %struct.rtx_def* @round_sdiv_adjust(i32 %cond, %struct.rtx_def* %call1038, %struct.rtx_def* %op1.2) #7, !dbg !8616
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1040, metadata !8120, metadata !DIExpression()), !dbg !8615
  %call1041 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %cond, %struct.rtx_def* %call1040, %struct.rtx_def* %op1.2) #6, !dbg !8617
  %call1042 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %cond, %struct.rtx_def* %call1041) #6, !dbg !8617
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1042, metadata !8120, metadata !DIExpression()), !dbg !8615
  %call1043 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call1038, %struct.rtx_def* %call1042) #6, !dbg !8618
  br label %cleanup1594

sw.bb1046:                                        ; preds = %sw.epilog48
  %call1047 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 65, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8619
  br label %cleanup1594, !dbg !8620

sw.bb1048:                                        ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool1049 = icmp eq i32 %bf.cast15, 0, !dbg !8621
  br i1 %tobool1049, label %if.else1052, label %if.then1050, !dbg !8623

if.then1050:                                      ; preds = %sw.bb1048
  %call1051 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 68, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8624
  br label %cleanup1594, !dbg !8625

if.else1052:                                      ; preds = %sw.bb1048
  %call1053 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 67, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8626
  br label %cleanup1594, !dbg !8627

sw.bb1054:                                        ; preds = %sw.epilog48
  %call1055 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 66, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8628
  br label %cleanup1594, !dbg !8629

sw.bb1056:                                        ; preds = %sw.epilog48
  %call1057 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 69, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8630
  br label %cleanup1594, !dbg !8631

sw.bb1058:                                        ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool1059 = icmp eq i32 %bf.cast15, 0, !dbg !8632
  br i1 %tobool1059, label %if.else1062, label %if.then1060, !dbg !8634

if.then1060:                                      ; preds = %sw.bb1058
  %call1061 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 72, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8635
  br label %cleanup1594, !dbg !8636

if.else1062:                                      ; preds = %sw.bb1058
  %call1063 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 70, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8637
  br label %cleanup1594, !dbg !8638

sw.bb1064:                                        ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool1065 = icmp eq i32 %bf.cast15, 0, !dbg !8639
  br i1 %tobool1065, label %if.else1068, label %if.then1066, !dbg !8641

if.then1066:                                      ; preds = %sw.bb1064
  %call1067 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 73, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8642
  br label %cleanup1594, !dbg !8643

if.else1068:                                      ; preds = %sw.bb1064
  %call1069 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 71, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8644
  br label %cleanup1594, !dbg !8645

sw.bb1070:                                        ; preds = %sw.epilog48, %sw.epilog48
  %call1071 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 61, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8646
  br label %cleanup1594, !dbg !8647

sw.bb1072:                                        ; preds = %sw.epilog48, %sw.epilog48
  %call1073 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 62, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8648
  br label %cleanup1594, !dbg !8649

sw.bb1074:                                        ; preds = %sw.epilog48, %sw.epilog48
  %call1075 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 63, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8650
  br label %cleanup1594, !dbg !8651

sw.bb1076:                                        ; preds = %sw.epilog48
  %104 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8652
  %call1077 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2, %struct.rtx_def* %104) #6, !dbg !8652
  br label %cleanup1594, !dbg !8653

sw.bb1078:                                        ; preds = %sw.epilog48
  %105 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !8654
  %call1079 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %105, %struct.rtx_def* %op1.2) #6, !dbg !8654
  br label %cleanup1594, !dbg !8655

sw.bb1080:                                        ; preds = %sw.epilog48
  %106 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8656
  %call1081 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 81, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %106) #6, !dbg !8656
  br label %cleanup1594, !dbg !8657

sw.bb1082:                                        ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool1083 = icmp eq i32 %bf.cast15, 0, !dbg !8658
  br i1 %tobool1083, label %if.else1086, label %if.then1084, !dbg !8660

if.then1084:                                      ; preds = %sw.bb1082
  %call1085 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 89, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8661
  br label %cleanup1594, !dbg !8662

if.else1086:                                      ; preds = %sw.bb1082
  %call1087 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 85, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8663
  br label %cleanup1594, !dbg !8664

sw.bb1088:                                        ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool1089 = icmp eq i32 %bf.cast15, 0, !dbg !8665
  br i1 %tobool1089, label %if.else1092, label %if.then1090, !dbg !8667

if.then1090:                                      ; preds = %sw.bb1088
  %call1091 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 88, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8668
  br label %cleanup1594, !dbg !8669

if.else1092:                                      ; preds = %sw.bb1088
  %call1093 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 84, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8670
  br label %cleanup1594, !dbg !8671

sw.bb1094:                                        ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool1095 = icmp eq i32 %bf.cast15, 0, !dbg !8672
  br i1 %tobool1095, label %if.else1098, label %if.then1096, !dbg !8674

if.then1096:                                      ; preds = %sw.bb1094
  %call1097 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 87, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8675
  br label %cleanup1594, !dbg !8676

if.else1098:                                      ; preds = %sw.bb1094
  %call1099 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 83, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8677
  br label %cleanup1594, !dbg !8678

sw.bb1100:                                        ; preds = %sw.epilog48
  call void @llvm.dbg.value(metadata i32 %bf.cast15, metadata !8049, metadata !DIExpression()), !dbg !8146
  %tobool1101 = icmp eq i32 %bf.cast15, 0, !dbg !8679
  br i1 %tobool1101, label %if.else1104, label %if.then1102, !dbg !8681

if.then1102:                                      ; preds = %sw.bb1100
  %call1103 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 86, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8682
  br label %cleanup1594, !dbg !8683

if.else1104:                                      ; preds = %sw.bb1100
  %call1105 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 82, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8684
  br label %cleanup1594, !dbg !8685

sw.bb1106:                                        ; preds = %sw.epilog48
  %call1107 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 81, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8686
  br label %cleanup1594, !dbg !8687

sw.bb1108:                                        ; preds = %sw.epilog48
  %call1109 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 80, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8688
  br label %cleanup1594, !dbg !8689

sw.bb1110:                                        ; preds = %sw.epilog48
  %call1111 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 90, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8690
  br label %cleanup1594, !dbg !8691

sw.bb1112:                                        ; preds = %sw.epilog48
  %call1113 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 91, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8692
  br label %cleanup1594, !dbg !8693

sw.bb1114:                                        ; preds = %sw.epilog48
  %call1115 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 96, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8694
  br label %cleanup1594, !dbg !8695

sw.bb1116:                                        ; preds = %sw.epilog48
  %call1117 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 95, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8696
  br label %cleanup1594, !dbg !8697

sw.bb1118:                                        ; preds = %sw.epilog48
  %call1119 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 94, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8698
  br label %cleanup1594, !dbg !8699

sw.bb1120:                                        ; preds = %sw.epilog48
  %call1121 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 93, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8700
  br label %cleanup1594, !dbg !8701

sw.bb1122:                                        ; preds = %sw.epilog48
  %call1123 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 92, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8702
  br label %cleanup1594, !dbg !8703

sw.bb1124:                                        ; preds = %sw.epilog48
  %call1125 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 97, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2) #6, !dbg !8704
  br label %cleanup1594, !dbg !8705

sw.bb1126:                                        ; preds = %sw.epilog48
  %call1127 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %cond, %struct.rtx_def* %op0.0, %struct.rtx_def* %op1.2, %struct.rtx_def* %op2.4) #6, !dbg !8706
  br label %cleanup1594, !dbg !8707

sw.bb1128:                                        ; preds = %sw.epilog48
  %idxprom1129 = zext i32 %cond to i64, !dbg !8708
  %arrayidx1130 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1129, !dbg !8708
  %107 = load i8, i8* %arrayidx1130, align 1, !dbg !8708
  %cmp1132 = icmp eq i8 %107, 10, !dbg !8708
  br i1 %cmp1132, label %cond.end1142, label %lor.lhs.false1134, !dbg !8708

lor.lhs.false1134:                                ; preds = %sw.bb1128
  %cmp1138 = icmp eq i8 %107, 11, !dbg !8708
  br i1 %cmp1138, label %cond.end1142, label %cond.true1140, !dbg !8708

cond.true1140:                                    ; preds = %lor.lhs.false1134
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2840, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8708
  br label %cond.end1142, !dbg !8708

cond.end1142:                                     ; preds = %sw.bb1128, %lor.lhs.false1134, %cond.true1140
  %108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 0, !dbg !8709
  %bf.load1144 = load i32, i32* %108, align 8, !dbg !8709
  %bf.clear1146 = and i32 %bf.load1144, 16711680, !dbg !8709
  %cmp1147 = icmp eq i32 %bf.clear1146, 0, !dbg !8711
  br i1 %cmp1147, label %if.then1149, label %if.end1154, !dbg !8712

if.then1149:                                      ; preds = %cond.end1142
  %arrayidx1151 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1129, !dbg !8713
  %109 = load i8, i8* %arrayidx1151, align 1, !dbg !8713
  %conv1152 = zext i8 %109 to i32, !dbg !8713
  %call1153 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 35, i32 %conv1152, %struct.rtx_def* %op0.0) #6, !dbg !8713
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1153, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end1154, !dbg !8714

if.end1154:                                       ; preds = %if.then1149, %cond.end1142
  %op0.22 = phi %struct.rtx_def* [ %call1153, %if.then1149 ], [ %op0.0, %cond.end1142 ], !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.22, metadata !8045, metadata !DIExpression()), !dbg !8146
  %110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.2, i64 0, i32 0, !dbg !8715
  %bf.load1155 = load i32, i32* %110, align 8, !dbg !8715
  %bf.clear1157 = and i32 %bf.load1155, 16711680, !dbg !8715
  %cmp1158 = icmp eq i32 %bf.clear1157, 0, !dbg !8717
  br i1 %cmp1158, label %if.then1160, label %if.end1165, !dbg !8718

if.then1160:                                      ; preds = %if.end1154
  %arrayidx1162 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1129, !dbg !8719
  %111 = load i8, i8* %arrayidx1162, align 1, !dbg !8719
  %conv1163 = zext i8 %111 to i32, !dbg !8719
  %call1164 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 35, i32 %conv1163, %struct.rtx_def* %op1.2) #6, !dbg !8719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1164, metadata !8046, metadata !DIExpression()), !dbg !8146
  br label %if.end1165, !dbg !8720

if.end1165:                                       ; preds = %if.then1160, %if.end1154
  %op1.4 = phi %struct.rtx_def* [ %call1164, %if.then1160 ], [ %op1.2, %if.end1154 ], !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.4, metadata !8046, metadata !DIExpression()), !dbg !8146
  %call1166 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %cond, %struct.rtx_def* %op0.22, %struct.rtx_def* %op1.4) #6, !dbg !8721
  br label %cleanup1594, !dbg !8722

sw.bb1167:                                        ; preds = %sw.epilog48
  %112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 0, !dbg !8723
  %bf.load1168 = load i32, i32* %112, align 8, !dbg !8723
  %bf.clear1169 = and i32 %bf.load1168, 65535, !dbg !8723
  %cmp1170 = icmp eq i32 %bf.clear1169, 41, !dbg !8724
  br i1 %cmp1170, label %if.then1172, label %if.else1186, !dbg !8725

if.then1172:                                      ; preds = %sw.bb1167
  %arrayidx1175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8726
  %rt_rtx1176 = bitcast %union.rtunion_def* %arrayidx1175 to %struct.rtx_def**, !dbg !8726
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1176, align 8, !dbg !8726
  %idxprom1177 = zext i32 %cond to i64, !dbg !8726
  %arrayidx1178 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1177, !dbg !8726
  %114 = load i8, i8* %arrayidx1178, align 1, !dbg !8726
  %conv1179 = zext i8 %114 to i32, !dbg !8726
  %115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8726
  %rt_rtx1183 = bitcast %union.rtunion_def* %115 to %struct.rtx_def**, !dbg !8726
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1183, align 8, !dbg !8726
  %call1184 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %conv1179, %struct.rtx_def* %116) #6, !dbg !8726
  %call1185 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %cond, %struct.rtx_def* %113, %struct.rtx_def* %call1184) #6, !dbg !8726
  br label %cleanup1594, !dbg !8727

if.else1186:                                      ; preds = %sw.bb1167
  %idxprom1187 = zext i32 %cond to i64, !dbg !8728
  %arrayidx1188 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1187, !dbg !8728
  %117 = load i8, i8* %arrayidx1188, align 1, !dbg !8728
  %conv1189 = zext i8 %117 to i32, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %conv1189, metadata !8121, metadata !DIExpression()), !dbg !8729
  %cmp1192 = icmp eq i32 %bf.clear1169, 43, !dbg !8730
  br i1 %cmp1192, label %if.then1194, label %if.else1201, !dbg !8731

if.then1194:                                      ; preds = %if.else1186
  %call1195 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.0, i32 %conv1189, i64 0, i32 0, i32 1) #6, !dbg !8732
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1195, metadata !8124, metadata !DIExpression()), !dbg !8729
  %idxprom1196 = zext i8 %117 to i64, !dbg !8734
  %arrayidx1197 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1196, !dbg !8734
  %118 = load i8, i8* %arrayidx1197, align 1, !dbg !8734
  %conv1199 = zext i8 %118 to i64, !dbg !8734
  %call1200 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.0, i32 %conv1189, i64 %conv1199, i32 0, i32 1) #6, !dbg !8734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1200, metadata !8125, metadata !DIExpression()), !dbg !8729
  br label %if.end1247, !dbg !8735

if.else1201:                                      ; preds = %if.else1186
  %call1202 = tail call i32 @int_mode_for_mode(i32 %cond) #6, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %call1202, metadata !8126, metadata !DIExpression()), !dbg !8737
  %call1203 = tail call i32 @int_mode_for_mode(i32 %conv1189) #6, !dbg !8738
  call void @llvm.dbg.value(metadata i32 %call1203, metadata !8129, metadata !DIExpression()), !dbg !8737
  %cmp1204 = icmp eq i32 %call1202, 1, !dbg !8739
  %cmp1207 = icmp eq i32 %call1203, 1, !dbg !8741
  %or.cond7 = or i1 %cmp1204, %cmp1207, !dbg !8742
  br i1 %or.cond7, label %cleanup1242, label %if.end1210, !dbg !8742

if.end1210:                                       ; preds = %if.else1201
  %idxprom1211 = zext i32 %call1203 to i64, !dbg !8743
  %arrayidx1212 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1211, !dbg !8743
  %119 = load i8, i8* %arrayidx1212, align 1, !dbg !8743
  %conv1214 = zext i8 %119 to i64, !dbg !8743
  %mul1215 = shl nuw nsw i64 %conv1214, 3, !dbg !8743
  %call1218 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %mul1215) #6, !dbg !8743
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1218, metadata !8130, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.0, metadata !8124, metadata !DIExpression()), !dbg !8729
  %cmp1219 = icmp eq i32 %cond, %call1202, !dbg !8744
  br i1 %cmp1219, label %if.end1223, label %if.then1221, !dbg !8746

if.then1221:                                      ; preds = %if.end1210
  %call1222 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %call1202, %struct.rtx_def* %op0.0, i32 0) #6, !dbg !8747
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1222, metadata !8124, metadata !DIExpression()), !dbg !8729
  br label %if.end1223, !dbg !8748

if.end1223:                                       ; preds = %if.end1210, %if.then1221
  %re.0 = phi %struct.rtx_def* [ %call1222, %if.then1221 ], [ %op0.0, %if.end1210 ], !dbg !8737
  call void @llvm.dbg.value(metadata %struct.rtx_def* %re.0, metadata !8124, metadata !DIExpression()), !dbg !8729
  %120 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8749
  %call1224 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 120, i32 %call1203, %struct.rtx_def* %re.0, %struct.rtx_def* %call1218, %struct.rtx_def* %120) #6, !dbg !8749
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1224, metadata !8124, metadata !DIExpression()), !dbg !8729
  %cmp1225 = icmp eq i32 %call1203, %conv1189, !dbg !8750
  br i1 %cmp1225, label %if.end1229, label %if.then1227, !dbg !8752

if.then1227:                                      ; preds = %if.end1223
  %call1228 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %conv1189, %struct.rtx_def* %call1224, i32 0) #6, !dbg !8753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1228, metadata !8124, metadata !DIExpression()), !dbg !8729
  br label %if.end1229, !dbg !8754

if.end1229:                                       ; preds = %if.end1223, %if.then1227
  %re.1 = phi %struct.rtx_def* [ %call1228, %if.then1227 ], [ %call1224, %if.end1223 ], !dbg !8737
  call void @llvm.dbg.value(metadata %struct.rtx_def* %re.1, metadata !8124, metadata !DIExpression()), !dbg !8729
  %call1230 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.0) #6, !dbg !8755
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1230, metadata !8125, metadata !DIExpression()), !dbg !8729
  br i1 %cmp1219, label %if.end1235, label %if.then1233, !dbg !8756

if.then1233:                                      ; preds = %if.end1229
  %call1234 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %call1202, %struct.rtx_def* %call1230, i32 0) #6, !dbg !8757
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1234, metadata !8125, metadata !DIExpression()), !dbg !8729
  br label %if.end1235, !dbg !8759

if.end1235:                                       ; preds = %if.end1229, %if.then1233
  %im.0 = phi %struct.rtx_def* [ %call1234, %if.then1233 ], [ %call1230, %if.end1229 ], !dbg !8737
  call void @llvm.dbg.value(metadata %struct.rtx_def* %im.0, metadata !8125, metadata !DIExpression()), !dbg !8729
  %call1236 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 120, i32 %call1203, %struct.rtx_def* %im.0, %struct.rtx_def* %call1218, %struct.rtx_def* %call1218) #6, !dbg !8760
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1236, metadata !8125, metadata !DIExpression()), !dbg !8729
  br i1 %cmp1225, label %cleanup1242, label %if.then1239, !dbg !8761

if.then1239:                                      ; preds = %if.end1235
  %call1240 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %conv1189, %struct.rtx_def* %call1236, i32 0) #6, !dbg !8762
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1240, metadata !8125, metadata !DIExpression()), !dbg !8729
  br label %cleanup1242, !dbg !8764

cleanup1242:                                      ; preds = %if.end1235, %if.then1239, %if.else1201
  %re.2 = phi %struct.rtx_def* [ undef, %if.else1201 ], [ %re.1, %if.then1239 ], [ %re.1, %if.end1235 ]
  %im.2 = phi %struct.rtx_def* [ undef, %if.else1201 ], [ %call1240, %if.then1239 ], [ %call1236, %if.end1235 ]
  %cleanup.dest.slot.2 = phi i1 [ false, %if.else1201 ], [ true, %if.then1239 ], [ true, %if.end1235 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %im.2, metadata !8125, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata %struct.rtx_def* %re.2, metadata !8124, metadata !DIExpression()), !dbg !8729
  br i1 %cleanup.dest.slot.2, label %if.end1247, label %cleanup1594

if.end1247:                                       ; preds = %cleanup1242, %if.then1194
  %re.3 = phi %struct.rtx_def* [ %call1195, %if.then1194 ], [ %re.2, %cleanup1242 ]
  %im.3 = phi %struct.rtx_def* [ %call1200, %if.then1194 ], [ %im.2, %cleanup1242 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %im.3, metadata !8125, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata %struct.rtx_def* %re.3, metadata !8124, metadata !DIExpression()), !dbg !8729
  %call1248 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %conv1189, %struct.rtx_def* %im.3) #6, !dbg !8765
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1248, metadata !8125, metadata !DIExpression()), !dbg !8729
  %call1249 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %cond, %struct.rtx_def* %re.3, %struct.rtx_def* %call1248) #6, !dbg !8766
  br label %cleanup1594, !dbg !8767

sw.bb1253:                                        ; preds = %sw.epilog48
  %operands1255 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8768
  %121 = load %union.tree_node*, %union.tree_node** %operands1255, align 8, !dbg !8768
  %call1257 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %121) #7, !dbg !8769
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1257, metadata !8045, metadata !DIExpression()), !dbg !8146
  %tobool1258 = icmp eq %struct.rtx_def* %call1257, null, !dbg !8770
  br i1 %tobool1258, label %cleanup1594, label %lor.lhs.false1259, !dbg !8772

lor.lhs.false1259:                                ; preds = %sw.bb1253
  %122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1257, i64 0, i32 0, !dbg !8773
  %bf.load1260 = load i32, i32* %122, align 8, !dbg !8773
  %bf.clear1261 = and i32 %bf.load1260, 65535, !dbg !8773
  %cmp1262 = icmp eq i32 %bf.clear1261, 43, !dbg !8773
  br i1 %cmp1262, label %if.end1265, label %cleanup1594, !dbg !8774

if.end1265:                                       ; preds = %lor.lhs.false1259
  %arrayidx1268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1257, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8775
  %rt_rtx1269 = bitcast %union.rtunion_def* %arrayidx1268 to %struct.rtx_def**, !dbg !8775
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1269, align 8, !dbg !8775
  %call1270 = tail call fastcc %struct.rtx_def* @convert_debug_memory_address(i32 %cond, %struct.rtx_def* %123) #7, !dbg !8776
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1270, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1594, !dbg !8777

sw.bb1271:                                        ; preds = %sw.epilog48
  %124 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8778
  %elements = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8779
  %125 = bitcast i32* %elements to %union.tree_node**, !dbg !8779
  %126 = load %union.tree_node*, %union.tree_node** %125, align 8, !dbg !8779
  %call1274 = tail call %union.tree_node* @build_constructor_from_list(%union.tree_node* %124, %union.tree_node* %126) #6, !dbg !8780
  call void @llvm.dbg.value(metadata %union.tree_node* %call1274, metadata !8044, metadata !DIExpression()), !dbg !8146
  br label %sw.bb1275, !dbg !8781

sw.bb1275:                                        ; preds = %sw.epilog48, %sw.bb1271
  %exp.addr.0 = phi %union.tree_node* [ %exp, %sw.epilog48 ], [ %call1274, %sw.bb1271 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !8044, metadata !DIExpression()), !dbg !8146
  %type1277 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8782
  %127 = bitcast %union.tree_node** %type1277 to i64**, !dbg !8782
  %128 = load i64*, i64** %127, align 8, !dbg !8782
  %bf.load1279 = load i64, i64* %128, align 8, !dbg !8782
  %bf.cast128120 = and i64 %bf.load1279, 65535, !dbg !8783
  %cmp1282 = icmp eq i64 %bf.cast128120, 14, !dbg !8783
  br i1 %cmp1282, label %if.then1284, label %cleanup1594, !dbg !8784

if.then1284:                                      ; preds = %sw.bb1275
  %129 = bitcast i64* %128 to %struct.tree_type*, !dbg !8784
  %130 = bitcast %union.tree_node** %type1277 to %struct.tree_type**, !dbg !8785
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %129, i64 0, i32 6, !dbg !8785
  %bf.load1288 = load i32, i32* %precision, align 4, !dbg !8785
  %bf.clear1289 = and i32 %bf.load1288, 1023, !dbg !8785
  %sh_prom = zext i32 %bf.clear1289 to i64, !dbg !8785
  %shl = shl i64 1, %sh_prom, !dbg !8785
  %conv1290 = trunc i64 %shl to i32, !dbg !8785
  %call1291 = tail call %struct.rtvec_def* @rtvec_alloc(i32 %conv1290) #6, !dbg !8785
  %call1292 = tail call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 42, i32 %cond, %struct.rtvec_def* %call1291) #6, !dbg !8785
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1292, metadata !8045, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 0, metadata !8131, metadata !DIExpression()), !dbg !8786
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8787
  %131 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !8787
  %arrayidx1326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1292, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8790
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx1326 to %struct.rtvec_def**, !dbg !8790
  br label %for.cond, !dbg !8792

for.cond:                                         ; preds = %if.end1323, %if.then1284
  %i.0 = phi i32 [ 0, %if.then1284 ], [ %inc, %if.end1323 ], !dbg !8793
  %val.0 = phi %union.tree_node* [ undef, %if.then1284 ], [ %val.1, %if.end1323 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !8134, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8131, metadata !DIExpression()), !dbg !8786
  %132 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %131, align 8, !dbg !8794
  %tobool1293 = icmp eq %struct.VEC_constructor_elt_gc* %132, null, !dbg !8794
  br i1 %tobool1293, label %cond.end1299, label %cond.true1294, !dbg !8794

cond.true1294:                                    ; preds = %for.cond
  %base1297 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %132, i64 0, i32 0, !dbg !8794
  br label %cond.end1299, !dbg !8794

cond.end1299:                                     ; preds = %for.cond, %cond.true1294
  %cond1300 = phi %struct.VEC_constructor_elt_base* [ %base1297, %cond.true1294 ], [ null, %for.cond ], !dbg !8794
  %call1301 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond1300) #7, !dbg !8794
  %cmp1302 = icmp ult i32 %i.0, %call1301, !dbg !8794
  br i1 %cmp1302, label %cond.false1305, label %cond.end1317, !dbg !8794

cond.false1305:                                   ; preds = %cond.end1299
  %133 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %131, align 8, !dbg !8794
  %tobool1308 = icmp eq %struct.VEC_constructor_elt_gc* %133, null, !dbg !8794
  br i1 %tobool1308, label %cond.end1314, label %cond.true1309, !dbg !8794

cond.true1309:                                    ; preds = %cond.false1305
  %base1312 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %133, i64 0, i32 0, !dbg !8794
  br label %cond.end1314, !dbg !8794

cond.end1314:                                     ; preds = %cond.false1305, %cond.true1309
  %cond1315 = phi %struct.VEC_constructor_elt_base* [ %base1312, %cond.true1309 ], [ null, %cond.false1305 ], !dbg !8794
  %call1316 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond1315, i32 %i.0) #7, !dbg !8794
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call1316, i64 0, i32 1, !dbg !8794
  %134 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !8794
  call void @llvm.dbg.value(metadata %union.tree_node* %134, metadata !8134, metadata !DIExpression()), !dbg !8786
  br label %cond.end1317, !dbg !8794

cond.end1317:                                     ; preds = %cond.end1299, %cond.end1314
  %val.1 = phi %union.tree_node* [ %134, %cond.end1314 ], [ %val.0, %cond.end1299 ]
  %cond1318 = phi i1 [ true, %cond.end1314 ], [ false, %cond.end1299 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !8134, metadata !DIExpression()), !dbg !8786
  br i1 %cond1318, label %for.body, label %for.end, !dbg !8792

for.body:                                         ; preds = %cond.end1317
  %call1320 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %val.1) #7, !dbg !8795
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1320, metadata !8046, metadata !DIExpression()), !dbg !8146
  %tobool1321 = icmp eq %struct.rtx_def* %call1320, null, !dbg !8796
  br i1 %tobool1321, label %cleanup1594.loopexit31, label %if.end1323, !dbg !8798

if.end1323:                                       ; preds = %for.body
  %135 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !8799
  %idxprom1327 = zext i32 %i.0 to i64, !dbg !8799
  %arrayidx1328 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %135, i64 0, i32 1, i64 %idxprom1327, !dbg !8799
  store %struct.rtx_def* %call1320, %struct.rtx_def** %arrayidx1328, align 8, !dbg !8800
  %inc = add i32 %i.0, 1, !dbg !8794
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8131, metadata !DIExpression()), !dbg !8786
  br label %for.cond, !dbg !8794, !llvm.loop !8801

for.end:                                          ; preds = %cond.end1317
  %i.0.lcssa = phi i32 [ %i.0, %cond.end1317 ], !dbg !8793
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !8131, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !8131, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !8131, metadata !DIExpression()), !dbg !8786
  %conv1329 = zext i32 %i.0.lcssa to i64, !dbg !8803
  %136 = load %struct.tree_type*, %struct.tree_type** %130, align 8, !dbg !8805
  %precision1333 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %136, i64 0, i32 6, !dbg !8805
  %bf.load1334 = load i32, i32* %precision1333, align 4, !dbg !8805
  %bf.clear1335 = and i32 %bf.load1334, 1023, !dbg !8805
  %sh_prom1336 = zext i32 %bf.clear1335 to i64, !dbg !8805
  %conv1329.highbits = lshr i64 %conv1329, %sh_prom1336, !dbg !8806
  %cmp1338 = icmp eq i64 %conv1329.highbits, 0, !dbg !8806
  br i1 %cmp1338, label %if.then1340, label %cleanup1594, !dbg !8807

if.then1340:                                      ; preds = %for.end
  %type1344 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %136, i64 0, i32 0, i32 2, !dbg !8808
  %137 = load %union.tree_node*, %union.tree_node** %type1344, align 8, !dbg !8808
  %138 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8808
  %call1345 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %137, %union.tree_node* %138) #6, !dbg !8808
  %call1346 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %call1345) #7, !dbg !8810
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1346, metadata !8046, metadata !DIExpression()), !dbg !8146
  %tobool1347 = icmp eq %struct.rtx_def* %call1346, null, !dbg !8811
  br i1 %tobool1347, label %cleanup1594, label %for.cond1350.preheader, !dbg !8813

for.cond1350.preheader:                           ; preds = %if.then1340
  br label %for.cond1350, !dbg !8814

for.cond1350:                                     ; preds = %for.cond1350.preheader, %for.body1362
  %i.1 = phi i32 [ %inc1371, %for.body1362 ], [ %i.0.lcssa, %for.cond1350.preheader ], !dbg !8786
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !8131, metadata !DIExpression()), !dbg !8786
  %conv1351 = zext i32 %i.1 to i64, !dbg !8816
  %139 = load %struct.tree_type*, %struct.tree_type** %130, align 8, !dbg !8818
  %precision1355 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %139, i64 0, i32 6, !dbg !8818
  %bf.load1356 = load i32, i32* %precision1355, align 4, !dbg !8818
  %bf.clear1357 = and i32 %bf.load1356, 1023, !dbg !8818
  %sh_prom1358 = zext i32 %bf.clear1357 to i64, !dbg !8818
  %conv1351.highbits = lshr i64 %conv1351, %sh_prom1358, !dbg !8819
  %cmp1360 = icmp eq i64 %conv1351.highbits, 0, !dbg !8819
  br i1 %cmp1360, label %for.body1362, label %cleanup1594.loopexit, !dbg !8814

for.body1362:                                     ; preds = %for.cond1350
  %140 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !8820
  %arrayidx1369 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %140, i64 0, i32 1, i64 %conv1351, !dbg !8820
  store %struct.rtx_def* %call1346, %struct.rtx_def** %arrayidx1369, align 8, !dbg !8821
  %inc1371 = add i32 %i.1, 1, !dbg !8822
  call void @llvm.dbg.value(metadata i32 %inc1371, metadata !8131, metadata !DIExpression()), !dbg !8786
  br label %for.cond1350, !dbg !8823, !llvm.loop !8824

sw.bb1378:                                        ; preds = %sw.epilog48
  %call1379 = tail call fastcc %union.gimple_statement_d* @get_gimple_for_ssa_name(%union.tree_node* %exp) #7, !dbg !8826
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1379, metadata !8135, metadata !DIExpression()), !dbg !8827
  %tobool1380 = icmp eq %union.gimple_statement_d* %call1379, null, !dbg !8828
  br i1 %tobool1380, label %if.else1387, label %if.then1381, !dbg !8829

if.then1381:                                      ; preds = %sw.bb1378
  %call1382 = tail call %union.tree_node* @gimple_assign_rhs_to_tree(%union.gimple_statement_d* nonnull %call1379) #7, !dbg !8830
  %call1383 = tail call fastcc %struct.rtx_def* @expand_debug_expr(%union.tree_node* %call1382) #7, !dbg !8832
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1383, metadata !8045, metadata !DIExpression()), !dbg !8146
  %tobool1384 = icmp eq %struct.rtx_def* %call1383, null, !dbg !8833
  br i1 %tobool1384, label %cleanup1408, label %if.end1407, !dbg !8835

if.else1387:                                      ; preds = %sw.bb1378
  %141 = load %struct._var_map*, %struct._var_map** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 0), align 8, !dbg !8836
  %call1388 = tail call fastcc i32 @var_to_partition(%struct._var_map* %141, %union.tree_node* %exp) #7, !dbg !8837
  call void @llvm.dbg.value(metadata i32 %call1388, metadata !8137, metadata !DIExpression()), !dbg !8838
  %cmp1389 = icmp eq i32 %call1388, -1, !dbg !8839
  br i1 %cmp1389, label %cleanup1404, label %if.end1392, !dbg !8841

if.end1392:                                       ; preds = %if.else1387
  %cmp1393 = icmp sgt i32 %call1388, -1, !dbg !8842
  br i1 %cmp1393, label %land.lhs.true1395, label %cond.true1398, !dbg !8842

land.lhs.true1395:                                ; preds = %if.end1392
  %142 = load %struct._var_map*, %struct._var_map** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 0), align 8, !dbg !8842
  %num_partitions = getelementptr inbounds %struct._var_map, %struct._var_map* %142, i64 0, i32 3, !dbg !8842
  %143 = load i32, i32* %num_partitions, align 8, !dbg !8842
  %cmp1396 = icmp ult i32 %call1388, %143, !dbg !8842
  br i1 %cmp1396, label %cond.end1400, label %cond.true1398, !dbg !8842

cond.true1398:                                    ; preds = %land.lhs.true1395, %if.end1392
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2955, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8842
  br label %cond.end1400, !dbg !8842

cond.end1400:                                     ; preds = %land.lhs.true1395, %cond.true1398
  %144 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 2), align 8, !dbg !8843
  %idxprom1402 = sext i32 %call1388 to i64, !dbg !8844
  %arrayidx1403 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %144, i64 %idxprom1402, !dbg !8844
  %145 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1403, align 8, !dbg !8844
  call void @llvm.dbg.value(metadata %struct.rtx_def* %145, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1404, !dbg !8845

cleanup1404:                                      ; preds = %if.else1387, %cond.end1400
  %cleanup.dest.slot.3 = phi i32 [ 0, %cond.end1400 ], [ 1, %if.else1387 ]
  %op0.23 = phi %struct.rtx_def* [ %145, %cond.end1400 ], [ %op0.0, %if.else1387 ], !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.23, metadata !8045, metadata !DIExpression()), !dbg !8146
  %cond1 = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond1, label %if.end1407, label %cleanup1408

if.end1407:                                       ; preds = %if.then1381, %cleanup1404
  %op0.24 = phi %struct.rtx_def* [ %call1383, %if.then1381 ], [ %op0.23, %cleanup1404 ], !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.24, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %cleanup1408, !dbg !8846

cleanup1408:                                      ; preds = %if.then1381, %cleanup1404, %if.end1407
  %cleanup.dest.slot.4 = phi i32 [ 8, %if.end1407 ], [ %cleanup.dest.slot.3, %cleanup1404 ], [ 1, %if.then1381 ]
  %op0.25 = phi %struct.rtx_def* [ %op0.24, %if.end1407 ], [ %op0.23, %cleanup1404 ], [ null, %if.then1381 ], !dbg !8146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.25, metadata !8045, metadata !DIExpression()), !dbg !8146
  %cond2 = icmp eq i32 %cleanup.dest.slot.4, 8
  br i1 %cond2, label %sw.bb253, label %cleanup1594

sw.bb1413:                                        ; preds = %sw.epilog48
  %146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 0, !dbg !8847
  %bf.load1414 = load i32, i32* %146, align 8, !dbg !8847
  %bf.lshr1415 = lshr i32 %bf.load1414, 16, !dbg !8847
  %bf.clear1416 = and i32 %bf.lshr1415, 255, !dbg !8847
  %idxprom1417 = zext i32 %bf.clear1416 to i64, !dbg !8847
  %arrayidx1418 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1417, !dbg !8847
  %147 = load i8, i8* %arrayidx1418, align 1, !dbg !8847
  %cmp1420 = icmp eq i8 %147, 2, !dbg !8847
  br i1 %cmp1420, label %land.lhs.true1431, label %lor.lhs.false1422, !dbg !8847

lor.lhs.false1422:                                ; preds = %sw.bb1413
  %cmp1429 = icmp eq i8 %147, 3, !dbg !8847
  br i1 %cmp1429, label %land.lhs.true1431, label %cleanup1594, !dbg !8849

land.lhs.true1431:                                ; preds = %lor.lhs.false1422, %sw.bb1413
  %idxprom1432 = zext i32 %cond to i64, !dbg !8850
  %arrayidx1433 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1432, !dbg !8850
  %148 = load i8, i8* %arrayidx1433, align 1, !dbg !8850
  %cmp1435 = icmp eq i8 %148, 2, !dbg !8850
  br i1 %cmp1435, label %if.then1443, label %lor.lhs.false1437, !dbg !8850

lor.lhs.false1437:                                ; preds = %land.lhs.true1431
  %cmp1441 = icmp eq i8 %148, 3, !dbg !8850
  br i1 %cmp1441, label %if.then1443, label %cleanup1594, !dbg !8851

if.then1443:                                      ; preds = %lor.lhs.false1437, %land.lhs.true1431
  %operands1445 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8852
  %149 = bitcast %union.tree_node** %operands1445 to %struct.tree_common**, !dbg !8852
  %150 = load %struct.tree_common*, %struct.tree_common** %149, align 8, !dbg !8852
  %type1448 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %150, i64 0, i32 2, !dbg !8852
  %151 = bitcast %union.tree_node** %type1448 to i64**, !dbg !8852
  %152 = load i64*, i64** %151, align 8, !dbg !8852
  %bf.load1450 = load i64, i64* %152, align 8, !dbg !8852
  %bf.cast14539 = and i64 %bf.load1450, 2097152, !dbg !8852
  %tobool1454 = icmp eq i64 %bf.cast14539, 0, !dbg !8852
  br i1 %tobool1454, label %if.else1457, label %if.then1455, !dbg !8855

if.then1455:                                      ; preds = %if.then1443
  %call1456 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 99, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8856
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1456, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end1459, !dbg !8857

if.else1457:                                      ; preds = %if.then1443
  %call1458 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 98, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8858
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1458, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end1459

if.end1459:                                       ; preds = %if.else1457, %if.then1455
  %op0.26 = phi %struct.rtx_def* [ %call1456, %if.then1455 ], [ %call1458, %if.else1457 ], !dbg !8859
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.26, metadata !8045, metadata !DIExpression()), !dbg !8146
  %arrayidx1462 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands1445, i64 1, !dbg !8860
  %153 = bitcast %union.tree_node** %arrayidx1462 to %struct.tree_common**, !dbg !8860
  %154 = load %struct.tree_common*, %struct.tree_common** %153, align 8, !dbg !8860
  %type1464 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %154, i64 0, i32 2, !dbg !8860
  %155 = bitcast %union.tree_node** %type1464 to i64**, !dbg !8860
  %156 = load i64*, i64** %155, align 8, !dbg !8860
  %bf.load1466 = load i64, i64* %156, align 8, !dbg !8860
  %bf.cast146910 = and i64 %bf.load1466, 2097152, !dbg !8860
  %tobool1470 = icmp eq i64 %bf.cast146910, 0, !dbg !8860
  br i1 %tobool1470, label %if.else1473, label %if.then1471, !dbg !8862

if.then1471:                                      ; preds = %if.end1459
  %call1472 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 99, i32 %cond, %struct.rtx_def* %op1.2) #6, !dbg !8863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1472, metadata !8046, metadata !DIExpression()), !dbg !8146
  br label %if.end1475, !dbg !8864

if.else1473:                                      ; preds = %if.end1459
  %call1474 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 98, i32 %cond, %struct.rtx_def* %op1.2) #6, !dbg !8865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1474, metadata !8046, metadata !DIExpression()), !dbg !8146
  br label %if.end1475

if.end1475:                                       ; preds = %if.else1473, %if.then1471
  %op1.5 = phi %struct.rtx_def* [ %call1472, %if.then1471 ], [ %call1474, %if.else1473 ], !dbg !8866
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.5, metadata !8046, metadata !DIExpression()), !dbg !8146
  %call1476 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %cond, %struct.rtx_def* %op0.26, %struct.rtx_def* %op1.5) #6, !dbg !8867
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1476, metadata !8045, metadata !DIExpression()), !dbg !8146
  %call1477 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %call1476, %struct.rtx_def* %op2.4) #6, !dbg !8868
  br label %cleanup1594, !dbg !8869

sw.bb1479:                                        ; preds = %sw.epilog48
  %157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 0, !dbg !8870
  %bf.load1480 = load i32, i32* %157, align 8, !dbg !8870
  %bf.lshr1481 = lshr i32 %bf.load1480, 16, !dbg !8870
  %bf.clear1482 = and i32 %bf.lshr1481, 255, !dbg !8870
  %idxprom1483 = zext i32 %bf.clear1482 to i64, !dbg !8870
  %arrayidx1484 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1483, !dbg !8870
  %158 = load i8, i8* %arrayidx1484, align 1, !dbg !8870
  %cmp1486 = icmp eq i8 %158, 2, !dbg !8870
  br i1 %cmp1486, label %land.lhs.true1497, label %lor.lhs.false1488, !dbg !8870

lor.lhs.false1488:                                ; preds = %sw.bb1479
  %cmp1495 = icmp eq i8 %158, 3, !dbg !8870
  br i1 %cmp1495, label %land.lhs.true1497, label %cleanup1594, !dbg !8872

land.lhs.true1497:                                ; preds = %lor.lhs.false1488, %sw.bb1479
  %idxprom1498 = zext i32 %cond to i64, !dbg !8873
  %arrayidx1499 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1498, !dbg !8873
  %159 = load i8, i8* %arrayidx1499, align 1, !dbg !8873
  %cmp1501 = icmp eq i8 %159, 2, !dbg !8873
  br i1 %cmp1501, label %if.then1509, label %lor.lhs.false1503, !dbg !8873

lor.lhs.false1503:                                ; preds = %land.lhs.true1497
  %cmp1507 = icmp eq i8 %159, 3, !dbg !8873
  br i1 %cmp1507, label %if.then1509, label %cleanup1594, !dbg !8874

if.then1509:                                      ; preds = %lor.lhs.false1503, %land.lhs.true1497
  %operands1511 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8875
  %160 = bitcast %union.tree_node** %operands1511 to %struct.tree_common**, !dbg !8875
  %161 = load %struct.tree_common*, %struct.tree_common** %160, align 8, !dbg !8875
  %type1514 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %161, i64 0, i32 2, !dbg !8875
  %162 = bitcast %union.tree_node** %type1514 to i64**, !dbg !8875
  %163 = load i64*, i64** %162, align 8, !dbg !8875
  %bf.load1516 = load i64, i64* %163, align 8, !dbg !8875
  %bf.cast151911 = and i64 %bf.load1516, 2097152, !dbg !8875
  %tobool1520 = icmp eq i64 %bf.cast151911, 0, !dbg !8875
  br i1 %tobool1520, label %if.else1523, label %if.then1521, !dbg !8878

if.then1521:                                      ; preds = %if.then1509
  %call1522 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 99, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8879
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1522, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end1525, !dbg !8880

if.else1523:                                      ; preds = %if.then1509
  %call1524 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 98, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8881
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1524, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end1525

if.end1525:                                       ; preds = %if.else1523, %if.then1521
  %op0.27 = phi %struct.rtx_def* [ %call1522, %if.then1521 ], [ %call1524, %if.else1523 ], !dbg !8882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.27, metadata !8045, metadata !DIExpression()), !dbg !8146
  %arrayidx1528 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands1511, i64 1, !dbg !8883
  %164 = bitcast %union.tree_node** %arrayidx1528 to %struct.tree_common**, !dbg !8883
  %165 = load %struct.tree_common*, %struct.tree_common** %164, align 8, !dbg !8883
  %type1530 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %165, i64 0, i32 2, !dbg !8883
  %166 = bitcast %union.tree_node** %type1530 to i64**, !dbg !8883
  %167 = load i64*, i64** %166, align 8, !dbg !8883
  %bf.load1532 = load i64, i64* %167, align 8, !dbg !8883
  %bf.cast153512 = and i64 %bf.load1532, 2097152, !dbg !8883
  %tobool1536 = icmp eq i64 %bf.cast153512, 0, !dbg !8883
  br i1 %tobool1536, label %if.else1539, label %if.then1537, !dbg !8885

if.then1537:                                      ; preds = %if.end1525
  %call1538 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 99, i32 %cond, %struct.rtx_def* %op1.2) #6, !dbg !8886
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1538, metadata !8046, metadata !DIExpression()), !dbg !8146
  br label %if.end1541, !dbg !8887

if.else1539:                                      ; preds = %if.end1525
  %call1540 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 98, i32 %cond, %struct.rtx_def* %op1.2) #6, !dbg !8888
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1540, metadata !8046, metadata !DIExpression()), !dbg !8146
  br label %if.end1541

if.end1541:                                       ; preds = %if.else1539, %if.then1537
  %op1.6 = phi %struct.rtx_def* [ %call1538, %if.then1537 ], [ %call1540, %if.else1539 ], !dbg !8889
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.6, metadata !8046, metadata !DIExpression()), !dbg !8146
  %call1542 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %cond, %struct.rtx_def* %op0.27, %struct.rtx_def* %op1.6) #6, !dbg !8890
  br label %cleanup1594, !dbg !8891

sw.bb1544:                                        ; preds = %sw.epilog48
  %168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 0, !dbg !8892
  %bf.load1545 = load i32, i32* %168, align 8, !dbg !8892
  %bf.lshr1546 = lshr i32 %bf.load1545, 16, !dbg !8892
  %bf.clear1547 = and i32 %bf.lshr1546, 255, !dbg !8892
  %idxprom1548 = zext i32 %bf.clear1547 to i64, !dbg !8892
  %arrayidx1549 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1548, !dbg !8892
  %169 = load i8, i8* %arrayidx1549, align 1, !dbg !8892
  %cmp1551 = icmp eq i8 %169, 2, !dbg !8892
  br i1 %cmp1551, label %land.lhs.true1562, label %lor.lhs.false1553, !dbg !8892

lor.lhs.false1553:                                ; preds = %sw.bb1544
  %cmp1560 = icmp eq i8 %169, 3, !dbg !8892
  br i1 %cmp1560, label %land.lhs.true1562, label %cleanup1594, !dbg !8894

land.lhs.true1562:                                ; preds = %lor.lhs.false1553, %sw.bb1544
  %idxprom1563 = zext i32 %cond to i64, !dbg !8895
  %arrayidx1564 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1563, !dbg !8895
  %170 = load i8, i8* %arrayidx1564, align 1, !dbg !8895
  %cmp1566 = icmp eq i8 %170, 2, !dbg !8895
  br i1 %cmp1566, label %if.then1574, label %lor.lhs.false1568, !dbg !8895

lor.lhs.false1568:                                ; preds = %land.lhs.true1562
  %cmp1572 = icmp eq i8 %170, 3, !dbg !8895
  br i1 %cmp1572, label %if.then1574, label %cleanup1594, !dbg !8896

if.then1574:                                      ; preds = %lor.lhs.false1568, %land.lhs.true1562
  %operands1576 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8897
  %171 = bitcast %union.tree_node** %operands1576 to %struct.tree_common**, !dbg !8897
  %172 = load %struct.tree_common*, %struct.tree_common** %171, align 8, !dbg !8897
  %type1579 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %172, i64 0, i32 2, !dbg !8897
  %173 = bitcast %union.tree_node** %type1579 to i64**, !dbg !8897
  %174 = load i64*, i64** %173, align 8, !dbg !8897
  %bf.load1581 = load i64, i64* %174, align 8, !dbg !8897
  %bf.cast158419 = and i64 %bf.load1581, 2097152, !dbg !8897
  %tobool1585 = icmp eq i64 %bf.cast158419, 0, !dbg !8897
  br i1 %tobool1585, label %if.else1588, label %if.then1586, !dbg !8900

if.then1586:                                      ; preds = %if.then1574
  %call1587 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 99, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8901
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1587, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end1590, !dbg !8902

if.else1588:                                      ; preds = %if.then1574
  %call1589 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 98, i32 %cond, %struct.rtx_def* %op0.0) #6, !dbg !8903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1589, metadata !8045, metadata !DIExpression()), !dbg !8146
  br label %if.end1590

if.end1590:                                       ; preds = %if.else1588, %if.then1586
  %op0.28 = phi %struct.rtx_def* [ %call1587, %if.then1586 ], [ %call1589, %if.else1588 ], !dbg !8904
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.28, metadata !8045, metadata !DIExpression()), !dbg !8146
  %call1591 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %cond, %struct.rtx_def* %op0.28, %struct.rtx_def* %op1.2) #6, !dbg !8905
  br label %cleanup1594, !dbg !8906

cleanup1594.loopexit:                             ; preds = %for.cond1350
  br label %cleanup1594, !dbg !8907

cleanup1594.loopexit31:                           ; preds = %for.body
  br label %cleanup1594, !dbg !8907

cleanup1594:                                      ; preds = %cleanup1594.loopexit31, %cleanup1594.loopexit, %ternary, %sw.bb30, %sw.bb38, %if.then56, %cond.end115, %cond.end217, %lor.lhs.false190, %lor.lhs.false173, %lor.lhs.false166, %lor.lhs.false160, %if.then153, %sw.bb539, %land.lhs.true611, %land.lhs.true598, %if.end620, %sw.bb1253, %if.then1340, %sw.bb1275, %sw.epilog48, %lor.lhs.false1553, %lor.lhs.false1568, %lor.lhs.false1488, %lor.lhs.false1503, %lor.lhs.false1422, %lor.lhs.false1437, %for.end, %lor.lhs.false1259, %if.end1247, %cleanup1242, %sw.bb253, %if.end325, %if.else467, %if.then465, %if.then525, %if.else532, %if.then530, %if.then496, %if.else498, %if.then394, %if.else415, %if.then413, %if.end184, %lor.lhs.false175, %cleanup1408, %if.end1590, %if.end1541, %if.end1475, %if.end1265, %if.then1172, %if.end1165, %sw.bb1126, %sw.bb1124, %sw.bb1122, %sw.bb1120, %sw.bb1118, %sw.bb1116, %sw.bb1114, %sw.bb1112, %sw.bb1110, %sw.bb1108, %sw.bb1106, %if.else1104, %if.then1102, %if.else1098, %if.then1096, %if.else1092, %if.then1090, %if.else1086, %if.then1084, %sw.bb1080, %sw.bb1078, %sw.bb1076, %sw.bb1074, %sw.bb1072, %sw.bb1070, %if.else1068, %if.then1066, %if.else1062, %if.then1060, %sw.bb1056, %sw.bb1054, %if.else1052, %if.then1050, %sw.bb1046, %if.else1036, %if.then1026, %if.else1013, %if.then1002, %if.else990, %if.then980, %if.else967, %if.then956, %if.else944, %if.then942, %if.else931, %if.then929, %if.else925, %if.then923, %if.else919, %if.then917, %sw.bb913, %sw.bb911, %sw.bb909, %if.else907, %if.then905, %if.else901, %if.then899, %sw.bb895, %sw.bb893, %sw.bb891, %cleanup884, %if.end628, %if.end591, %cond.end249, %if.end119, %cond.end84, %sw.bb69, %if.end62
  %retval.11 = phi %struct.rtx_def* [ %call1591, %if.end1590 ], [ %call1542, %if.end1541 ], [ %call1477, %if.end1475 ], [ null, %cleanup1408 ], [ %call1270, %if.end1265 ], [ %call1185, %if.then1172 ], [ %call1166, %if.end1165 ], [ %call1127, %sw.bb1126 ], [ %call1125, %sw.bb1124 ], [ %call1123, %sw.bb1122 ], [ %call1121, %sw.bb1120 ], [ %call1119, %sw.bb1118 ], [ %call1117, %sw.bb1116 ], [ %call1115, %sw.bb1114 ], [ %call1113, %sw.bb1112 ], [ %call1111, %sw.bb1110 ], [ %call1109, %sw.bb1108 ], [ %call1107, %sw.bb1106 ], [ %call1103, %if.then1102 ], [ %call1105, %if.else1104 ], [ %call1097, %if.then1096 ], [ %call1099, %if.else1098 ], [ %call1091, %if.then1090 ], [ %call1093, %if.else1092 ], [ %call1085, %if.then1084 ], [ %call1087, %if.else1086 ], [ %call1081, %sw.bb1080 ], [ %call1079, %sw.bb1078 ], [ %call1077, %sw.bb1076 ], [ %call1075, %sw.bb1074 ], [ %call1073, %sw.bb1072 ], [ %call1071, %sw.bb1070 ], [ %call1067, %if.then1066 ], [ %call1069, %if.else1068 ], [ %call1061, %if.then1060 ], [ %call1063, %if.else1062 ], [ %call1057, %sw.bb1056 ], [ %call1055, %sw.bb1054 ], [ %call1051, %if.then1050 ], [ %call1053, %if.else1052 ], [ %call1047, %sw.bb1046 ], [ %call1033, %if.then1026 ], [ %call1043, %if.else1036 ], [ %call1009, %if.then1002 ], [ %call1020, %if.else1013 ], [ %call987, %if.then980 ], [ %call997, %if.else990 ], [ %call963, %if.then956 ], [ %call974, %if.else967 ], [ %call943, %if.then942 ], [ %call951, %if.else944 ], [ %call930, %if.then929 ], [ %call936, %if.else931 ], [ %call924, %if.then923 ], [ %call926, %if.else925 ], [ %call918, %if.then917 ], [ %call920, %if.else919 ], [ %call914, %sw.bb913 ], [ %call912, %sw.bb911 ], [ %call910, %sw.bb909 ], [ %call906, %if.then905 ], [ %call908, %if.else907 ], [ %call900, %if.then899 ], [ %call902, %if.else901 ], [ %call896, %sw.bb895 ], [ %call894, %sw.bb893 ], [ %call892, %sw.bb891 ], [ %retval.4, %cleanup884 ], [ %call636, %if.end628 ], [ %call592, %if.end591 ], [ %call251, %cond.end249 ], [ %call120, %if.end119 ], [ %call89, %cond.end84 ], [ %call70, %sw.bb69 ], [ %call67, %if.end62 ], [ null, %ternary ], [ null, %sw.bb30 ], [ null, %sw.bb38 ], [ null, %if.then56 ], [ %cond116, %cond.end115 ], [ null, %lor.lhs.false175 ], [ null, %lor.lhs.false173 ], [ null, %lor.lhs.false166 ], [ null, %lor.lhs.false160 ], [ null, %if.then153 ], [ null, %cond.end217 ], [ null, %lor.lhs.false190 ], [ null, %if.end184 ], [ %op0.3, %sw.bb253 ], [ %op0.3, %if.end325 ], [ %call395, %if.then394 ], [ %call414, %if.then413 ], [ %call416, %if.else415 ], [ %call466, %if.then465 ], [ %call468, %if.else467 ], [ %call497, %if.then496 ], [ %call499, %if.else498 ], [ %call527, %if.then525 ], [ %call531, %if.then530 ], [ %call533, %if.else532 ], [ null, %sw.bb539 ], [ null, %land.lhs.true611 ], [ null, %land.lhs.true598 ], [ null, %if.end620 ], [ %call1249, %if.end1247 ], [ null, %cleanup1242 ], [ null, %lor.lhs.false1259 ], [ null, %sw.bb1253 ], [ null, %if.then1340 ], [ %call1292, %for.end ], [ null, %lor.lhs.false1437 ], [ null, %lor.lhs.false1422 ], [ null, %lor.lhs.false1503 ], [ null, %lor.lhs.false1488 ], [ null, %lor.lhs.false1568 ], [ null, %lor.lhs.false1553 ], [ null, %sw.epilog48 ], [ null, %sw.bb1275 ], [ %call1292, %cleanup1594.loopexit ], [ null, %cleanup1594.loopexit31 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !8907
  ret %struct.rtx_def* %retval.11, !dbg !8907
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @lookup_constant_def(%union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_s_stat(i32, i32, i8*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_0_stat(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @make_decl_rtl_for_debug(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @simplify_gen_unary(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local i32 @subreg_lowpart_offset(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #2

declare dso_local void @set_mem_addr_space(%struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_mem_ref_addr(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_inner_reference(%union.tree_node*, i64*, i64*, %union.tree_node**, i32*, i32*, i32*, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @smallest_mode_for_size(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @simplify_gen_ternary(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @floor_sdiv_adjust(i32 %mode, %struct.rtx_def* %mod, %struct.rtx_def* %op1) unnamed_addr #5 !dbg !8908 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8912, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mod, metadata !8913, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !8914, metadata !DIExpression()), !dbg !8915
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8916
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 80, i32 13, %struct.rtx_def* %mod, %struct.rtx_def* %0) #6, !dbg !8916
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 55, i32 %mode, %struct.rtx_def* %op1, %struct.rtx_def* %mod) #6, !dbg !8916
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8916
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 85, i32 13, %struct.rtx_def* %call1, %struct.rtx_def* %1) #6, !dbg !8916
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !8916
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8916
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %mode, %struct.rtx_def* %call2, %struct.rtx_def* %2, %struct.rtx_def* %3) #6, !dbg !8916
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8916
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %mode, %struct.rtx_def* %call, %struct.rtx_def* %call3, %struct.rtx_def* %4) #6, !dbg !8916
  ret %struct.rtx_def* %call4, !dbg !8917
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @ceil_udiv_adjust(i32 %mode, %struct.rtx_def* %mod, %struct.rtx_def* %op1) unnamed_addr #5 !dbg !8918 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8920, metadata !DIExpression()), !dbg !8923
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mod, metadata !8921, metadata !DIExpression()), !dbg !8923
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !8922, metadata !DIExpression()), !dbg !8923
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8924
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 80, i32 13, %struct.rtx_def* %mod, %struct.rtx_def* %0) #6, !dbg !8924
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !8924
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8924
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %mode, %struct.rtx_def* %call, %struct.rtx_def* %1, %struct.rtx_def* %2) #6, !dbg !8924
  ret %struct.rtx_def* %call1, !dbg !8925
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @ceil_sdiv_adjust(i32 %mode, %struct.rtx_def* %mod, %struct.rtx_def* %op1) unnamed_addr #5 !dbg !8926 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8928, metadata !DIExpression()), !dbg !8931
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mod, metadata !8929, metadata !DIExpression()), !dbg !8931
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !8930, metadata !DIExpression()), !dbg !8931
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8932
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 80, i32 13, %struct.rtx_def* %mod, %struct.rtx_def* %0) #6, !dbg !8932
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 55, i32 %mode, %struct.rtx_def* %op1, %struct.rtx_def* %mod) #6, !dbg !8932
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8932
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 83, i32 13, %struct.rtx_def* %call1, %struct.rtx_def* %1) #6, !dbg !8932
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !8932
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8932
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %mode, %struct.rtx_def* %call2, %struct.rtx_def* %2, %struct.rtx_def* %3) #6, !dbg !8932
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8932
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %mode, %struct.rtx_def* %call, %struct.rtx_def* %call3, %struct.rtx_def* %4) #6, !dbg !8932
  ret %struct.rtx_def* %call4, !dbg !8933
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @round_udiv_adjust(i32 %mode, %struct.rtx_def* %mod, %struct.rtx_def* %op1) unnamed_addr #5 !dbg !8934 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8936, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mod, metadata !8937, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !8938, metadata !DIExpression()), !dbg !8939
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 50, i32 %mode, %struct.rtx_def* %op1, %struct.rtx_def* %mod) #6, !dbg !8940
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 82, i32 13, %struct.rtx_def* %mod, %struct.rtx_def* %call) #6, !dbg !8940
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !8940
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8940
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %mode, %struct.rtx_def* %call1, %struct.rtx_def* %0, %struct.rtx_def* %1) #6, !dbg !8940
  ret %struct.rtx_def* %call2, !dbg !8941
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @round_sdiv_adjust(i32 %mode, %struct.rtx_def* %mod, %struct.rtx_def* %op1) unnamed_addr #5 !dbg !8942 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8944, metadata !DIExpression()), !dbg !8947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mod, metadata !8945, metadata !DIExpression()), !dbg !8947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !8946, metadata !DIExpression()), !dbg !8947
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 111, i32 %mode, %struct.rtx_def* %mod) #6, !dbg !8948
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 111, i32 %mode, %struct.rtx_def* %op1) #6, !dbg !8948
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 111, i32 %mode, %struct.rtx_def* %mod) #6, !dbg !8948
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 50, i32 %mode, %struct.rtx_def* %call1, %struct.rtx_def* %call2) #6, !dbg !8948
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 82, i32 13, %struct.rtx_def* %call, %struct.rtx_def* %call3) #6, !dbg !8948
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 55, i32 %mode, %struct.rtx_def* %op1, %struct.rtx_def* %mod) #6, !dbg !8948
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8948
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 83, i32 13, %struct.rtx_def* %call5, %struct.rtx_def* %0) #6, !dbg !8948
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !8948
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !8948
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %mode, %struct.rtx_def* %call6, %struct.rtx_def* %1, %struct.rtx_def* %2) #6, !dbg !8948
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8948
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %mode, %struct.rtx_def* %call4, %struct.rtx_def* %call7, %struct.rtx_def* %3) #6, !dbg !8948
  ret %struct.rtx_def* %call8, !dbg !8949
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @int_mode_for_mode(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @convert_debug_memory_address(i32 %mode, %struct.rtx_def* %x) unnamed_addr #5 !dbg !8950 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8954, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8955, metadata !DIExpression()), !dbg !8957
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !8958
  %bf.load = load i32, i32* %0, align 8, !dbg !8958
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8958
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8958
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !8956, metadata !DIExpression()), !dbg !8957
  %cmp = icmp eq i32 %mode, 16, !dbg !8959
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8959

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2202, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8959
  br label %cond.end, !dbg !8959

cond.end:                                         ; preds = %entry, %cond.true
  %cmp1 = icmp eq i32 %bf.clear, %mode, !dbg !8960
  %cmp2 = icmp eq i32 %bf.clear, 0, !dbg !8960
  %or.cond = or i1 %cmp1, %cmp2, !dbg !8960
  br i1 %or.cond, label %cond.end5, label %cond.true3, !dbg !8960

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2203, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8960
  br label %cond.end5, !dbg !8960

cond.end5:                                        ; preds = %cond.end, %cond.true3
  ret %struct.rtx_def* %x, !dbg !8961
}

declare dso_local %union.tree_node* @build_constructor_from_list(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_E_stat(i32, i32, %struct.rtvec_def*) local_unnamed_addr #2

declare dso_local %struct.rtvec_def* @rtvec_alloc(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !8962 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !8968, metadata !DIExpression()), !dbg !8969
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !8970
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8970

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !8970
  %0 = load i32, i32* %num, align 8, !dbg !8970
  br label %cond.end, !dbg !8970

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !8970
  ret i32 %cond, !dbg !8970
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !8971 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !8977, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8978, metadata !DIExpression()), !dbg !8979
  br label %land.end, !dbg !8980

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !8980
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8980
  ret %struct.constructor_elt_d* %arrayidx, !dbg !8980
}

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @expand_function_end() local_unnamed_addr #2

declare dso_local void @fixup_tail_calls() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2332, !2333, !2334}
!llvm.ident = !{!2335}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "stack_vars_num", scope: !2, file: !3, line: 179, type: !833, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !820, globals: !2243, nameTableKind: None)
!3 = !DIFile(filename: "cfgexpand.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !336, !342, !347, !352, !370, !377, !384, !391, !398, !574, !612, !638, !781, !788, !798}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !330, line: 30, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334, !335}
!332 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !337, line: 363, baseType: !7, size: 32, elements: !338)
!337 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!338 = !{!339, !340, !341}
!339 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!340 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!341 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !337, line: 355, baseType: !7, size: 32, elements: !343)
!343 = !{!344, !345, !346}
!344 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !348, line: 474, baseType: !7, size: 32, elements: !349)
!348 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!349 = !{!350, !351}
!350 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!354 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !378)
!378 = !{!379, !380, !381, !382, !383}
!379 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !385, line: 80, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390}
!387 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!391 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !392, line: 104, baseType: !7, size: 32, elements: !393)
!392 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!393 = !{!394, !395, !396, !397}
!394 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!395 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!396 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!397 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!398 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !399, line: 74, baseType: !7, size: 32, elements: !400)
!399 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!400 = !{!401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573}
!401 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!573 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!574 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !385, line: 51, baseType: !7, size: 32, elements: !575)
!575 = !{!576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611}
!576 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!577 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!578 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!579 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!580 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!581 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!582 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!583 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!584 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!585 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!586 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!587 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!588 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!589 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!590 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!591 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!592 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!593 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!594 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!595 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!596 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!597 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!598 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!599 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!603 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!604 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!605 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!606 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!607 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!608 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!609 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!610 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!611 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!612 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !385, line: 727, baseType: !7, size: 32, elements: !613)
!613 = !{!614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637}
!614 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!615 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!616 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!617 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!618 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!619 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!620 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!621 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!622 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!623 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!624 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!625 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!626 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!627 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!628 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!629 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!630 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!631 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!632 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!633 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!634 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!635 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!636 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!637 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!638 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !639, line: 45, baseType: !7, size: 32, elements: !640)
!639 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!641 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!642 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!643 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!644 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!645 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!646 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!647 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!648 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!649 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!650 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!651 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!652 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!653 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!654 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!655 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!656 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!657 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!658 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!659 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!660 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!661 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!662 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!663 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!664 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!665 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!666 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!667 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!668 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!669 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!670 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!671 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!672 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!673 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!674 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!675 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!676 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!677 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!678 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!679 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!680 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!681 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!682 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!683 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!684 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!685 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!686 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!687 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!688 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!689 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!690 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!691 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!692 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!693 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!694 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!695 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!696 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!697 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!698 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!699 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!700 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!701 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!702 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!703 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!704 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!705 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!706 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!707 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!708 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!709 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!710 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!711 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!712 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!713 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!714 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!715 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!716 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!717 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!718 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!719 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!720 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!721 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!722 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!723 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!724 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!725 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!726 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!727 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!728 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!729 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!730 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!731 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!732 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!733 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!734 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!735 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!736 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!737 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!738 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!739 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!740 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!741 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!742 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!743 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!744 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!745 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!746 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!747 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!748 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!749 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!750 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!751 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!752 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!753 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!754 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!755 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!756 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!757 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!758 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!759 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!760 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!761 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!762 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!763 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!764 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!765 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!766 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!767 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!768 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!769 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!770 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!771 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!772 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!773 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!774 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!775 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!776 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!777 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!778 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!779 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!780 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !782, line: 119, baseType: !7, size: 32, elements: !783)
!782 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!783 = !{!784, !785, !786, !787}
!784 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!785 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!786 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!787 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!788 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !789, line: 52, baseType: !7, size: 32, elements: !790)
!789 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!790 = !{!791, !792, !793, !794, !795, !796, !797}
!791 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!792 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!793 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!794 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!795 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!796 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!797 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!798 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !799, line: 36, baseType: !7, size: 32, elements: !800)
!799 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!800 = !{!801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819}
!801 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!802 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!803 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!804 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!805 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!806 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!807 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!808 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!809 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!810 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!811 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!812 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!813 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!814 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!815 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!816 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!817 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!818 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!819 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!820 = !{!821, !822, !823, !824, !827, !828, !134, !830, !832, !384, !836, !2222, !1014, !1521, !825, !638, !2224, !833, !7, !1493, !2234, !900, !985, !2235, !2237, !835, !5, !2238, !2241, !798, !2242}
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!823 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !826)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !831, line: 44, baseType: !7)
!831 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !834, line: 46, baseType: !835)
!834 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!835 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !385, line: 737, size: 768, elements: !838)
!838 = !{!839, !2069, !2079, !2085, !2090, !2095, !2102, !2108, !2114, !2119, !2133, !2138, !2144, !2149, !2159, !2164, !2180, !2187, !2194, !2200, !2205, !2211, !2217}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !837, file: !385, line: 738, baseType: !840, size: 256)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !385, line: 271, size: 256, elements: !841)
!841 = !{!842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !855, !856, !2068}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !840, file: !385, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !840, file: !385, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !840, file: !385, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !840, file: !385, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !840, file: !385, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !840, file: !385, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !840, file: !385, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !840, file: !385, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !840, file: !385, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !840, file: !385, line: 312, baseType: !7, size: 32, offset: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !840, file: !385, line: 316, baseType: !853, size: 32, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !854, line: 58, baseType: !830)
!854 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!855 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !840, file: !385, line: 319, baseType: !7, size: 32, offset: 96)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !840, file: !385, line: 323, baseType: !857, size: 64, offset: 128)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !337, line: 217, size: 832, elements: !859)
!859 = !{!860, !2033, !2034, !2035, !2038, !2042, !2043, !2044, !2062, !2063, !2064, !2065, !2066, !2067}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !858, file: !337, line: 219, baseType: !861, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !337, line: 151, baseType: !863)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !337, line: 151, size: 128, elements: !864)
!864 = !{!865}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !863, file: !337, line: 151, baseType: !866, size: 128)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !337, line: 150, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !337, line: 150, size: 128, elements: !868)
!868 = !{!869, !870, !871}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !867, file: !337, line: 150, baseType: !7, size: 32)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !867, file: !337, line: 150, baseType: !7, size: 32, offset: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !867, file: !337, line: 150, baseType: !872, size: 64, offset: 64)
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !873, size: 64, elements: !934)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !874, line: 108, baseType: !875)
!874 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !337, line: 122, size: 512, elements: !877)
!877 = !{!878, !879, !880, !2025, !2026, !2027, !2028, !2029, !2030, !2031}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !876, file: !337, line: 124, baseType: !857, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !876, file: !337, line: 125, baseType: !857, size: 64, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !876, file: !337, line: 131, baseType: !881, size: 64, offset: 128)
!881 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !337, line: 128, size: 64, elements: !882)
!882 = !{!883, !899}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !881, file: !337, line: 129, baseType: !884, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !874, line: 66, baseType: !885)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !385, line: 143, size: 192, elements: !887)
!887 = !{!888, !897, !898}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !886, file: !385, line: 145, baseType: !889, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !874, line: 69, baseType: !890)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !385, line: 136, size: 192, elements: !892)
!892 = !{!893, !895, !896}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !891, file: !385, line: 137, baseType: !894, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !874, line: 58, baseType: !836)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !891, file: !385, line: 138, baseType: !890, size: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !891, file: !385, line: 139, baseType: !890, size: 64, offset: 128)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !886, file: !385, line: 146, baseType: !889, size: 64, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !886, file: !385, line: 152, baseType: !884, size: 64, offset: 128)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !881, file: !337, line: 130, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !874, line: 50, baseType: !901)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !639, line: 240, size: 384, elements: !903)
!903 = !{!904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !902, file: !639, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !902, file: !639, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !902, file: !639, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !902, file: !639, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !902, file: !639, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !902, file: !639, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !902, file: !639, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !902, file: !639, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !902, file: !639, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !902, file: !639, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !902, file: !639, line: 321, baseType: !915, size: 320, offset: 64)
!915 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !639, line: 315, size: 320, elements: !916)
!916 = !{!917, !1992, !1994, !2023, !2024}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !915, file: !639, line: 316, baseType: !918, size: 64)
!918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !919, size: 64, elements: !934)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !639, line: 183, baseType: !920)
!920 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !639, line: 166, size: 64, elements: !921)
!921 = !{!922, !923, !924, !925, !926, !936, !937, !949, !952, !1013, !1970, !1971, !1982, !1989}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !920, file: !639, line: 168, baseType: !823, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !920, file: !639, line: 169, baseType: !7, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !920, file: !639, line: 170, baseType: !828, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !920, file: !639, line: 171, baseType: !900, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !920, file: !639, line: 172, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !874, line: 53, baseType: !928)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !639, line: 359, size: 128, elements: !930)
!930 = !{!931, !932}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !929, file: !639, line: 360, baseType: !823, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !929, file: !639, line: 361, baseType: !933, size: 64, offset: 64)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 64, elements: !934)
!934 = !{!935}
!935 = !DISubrange(count: 1)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !920, file: !639, line: 173, baseType: !5, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !920, file: !639, line: 174, baseType: !938, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !639, line: 133, baseType: !939)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 115, size: 32, elements: !940)
!940 = !{!941, !942, !943, !944, !945, !946, !947, !948}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !939, file: !639, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !939, file: !639, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !939, file: !639, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !939, file: !639, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !939, file: !639, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !939, file: !639, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !939, file: !639, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !939, file: !639, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !920, file: !639, line: 175, baseType: !950, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !639, line: 175, flags: DIFlagFwdDecl)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !920, file: !639, line: 176, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !955, line: 75, size: 256, elements: !956)
!955 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!956 = !{!957, !971, !972, !973}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !954, file: !955, line: 76, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !955, line: 68, baseType: !960)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !955, line: 63, size: 320, elements: !961)
!961 = !{!962, !964, !965, !966}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !960, file: !955, line: 64, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !960, file: !955, line: 65, baseType: !963, size: 64, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !960, file: !955, line: 66, baseType: !7, size: 32, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !960, file: !955, line: 67, baseType: !967, size: 128, offset: 192)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 128, elements: !969)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !955, line: 29, baseType: !835)
!969 = !{!970}
!970 = !DISubrange(count: 2)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !954, file: !955, line: 77, baseType: !958, size: 64, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !954, file: !955, line: 78, baseType: !7, size: 32, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !954, file: !955, line: 79, baseType: !974, size: 64, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !955, line: 49, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !955, line: 45, size: 832, elements: !977)
!977 = !{!978, !979, !980}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !976, file: !955, line: 46, baseType: !963, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !976, file: !955, line: 47, baseType: !953, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !976, file: !955, line: 48, baseType: !981, size: 704, offset: 128)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !982, line: 164, size: 704, elements: !983)
!982 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!983 = !{!984, !986, !996, !997, !998, !999, !1000, !1001, !1005, !1009, !1010, !1011, !1012}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !981, file: !982, line: 166, baseType: !985, size: 64)
!985 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !981, file: !982, line: 167, baseType: !987, size: 64, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !982, line: 157, size: 192, elements: !989)
!989 = !{!990, !991, !992}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !988, file: !982, line: 159, baseType: !825, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !988, file: !982, line: 160, baseType: !987, size: 64, offset: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !988, file: !982, line: 161, baseType: !993, size: 32, offset: 128)
!993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !826, size: 32, elements: !994)
!994 = !{!995}
!995 = !DISubrange(count: 4)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !981, file: !982, line: 168, baseType: !825, size: 64, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !981, file: !982, line: 169, baseType: !825, size: 64, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !981, file: !982, line: 170, baseType: !825, size: 64, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !981, file: !982, line: 171, baseType: !985, size: 64, offset: 320)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !981, file: !982, line: 172, baseType: !823, size: 32, offset: 384)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !981, file: !982, line: 176, baseType: !1002, size: 64, offset: 448)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!987, !827, !985}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !981, file: !982, line: 177, baseType: !1006, size: 64, offset: 512)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{null, !827, !987}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !981, file: !982, line: 178, baseType: !827, size: 64, offset: 576)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !981, file: !982, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !981, file: !982, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !981, file: !982, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !920, file: !639, line: 177, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !874, line: 56, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !1017)
!1017 = !{!1018, !1051, !1057, !1068, !1087, !1098, !1103, !1110, !1116, !1129, !1137, !1175, !1180, !1208, !1225, !1226, !1231, !1240, !1246, !1251, !1255, !1259, !1619, !1668, !1674, !1680, !1687, !1700, !1714, !1731, !1743, !1765, !1780, !1952}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1016, file: !135, line: 3372, baseType: !1019, size: 64)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !1020)
!1020 = !{!1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1019, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !1019, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !1019, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !1019, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !1019, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !1019, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !1019, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !1019, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !1019, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !1019, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !1019, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !1019, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !1019, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !1019, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !1019, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !1019, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !1019, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !1019, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1019, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1019, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1019, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1019, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1019, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1019, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1019, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1019, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !1019, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !1019, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !1019, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !1019, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1016, file: !135, line: 3373, baseType: !1052, size: 192)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !1053)
!1053 = !{!1054, !1055, !1056}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1052, file: !135, line: 403, baseType: !1019, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1052, file: !135, line: 404, baseType: !1014, size: 64, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1052, file: !135, line: 405, baseType: !1014, size: 64, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1016, file: !135, line: 3374, baseType: !1058, size: 320)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1058, file: !135, line: 1385, baseType: !1052, size: 192)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1058, file: !135, line: 1386, baseType: !1062, size: 128, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1063, line: 58, baseType: !1064)
!1063 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1063, line: 54, size: 128, elements: !1065)
!1065 = !{!1066, !1067}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1064, file: !1063, line: 56, baseType: !835, size: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1064, file: !1063, line: 57, baseType: !985, size: 64, offset: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !1016, file: !135, line: 3375, baseType: !1069, size: 256)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !1070)
!1070 = !{!1071, !1072}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1069, file: !135, line: 1398, baseType: !1052, size: 192)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1069, file: !135, line: 1399, baseType: !1073, size: 64, offset: 192)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1075, line: 52, size: 256, elements: !1076)
!1075 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1076 = !{!1077, !1078, !1079, !1080, !1081, !1082, !1083}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1074, file: !1075, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1074, file: !1075, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1074, file: !1075, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1074, file: !1075, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1074, file: !1075, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1074, file: !1075, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1074, file: !1075, line: 62, baseType: !1084, size: 192, offset: 64)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !835, size: 192, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: 3)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !1016, file: !135, line: 3376, baseType: !1088, size: 256)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !1089)
!1089 = !{!1090, !1091}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1088, file: !135, line: 1409, baseType: !1052, size: 192)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1088, file: !135, line: 1410, baseType: !1092, size: 64, offset: 192)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1094, line: 27, size: 192, elements: !1095)
!1094 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1095 = !{!1096, !1097}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1093, file: !1094, line: 29, baseType: !1062, size: 128)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1093, file: !1094, line: 30, baseType: !5, size: 32, offset: 128)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1016, file: !135, line: 3377, baseType: !1099, size: 256)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !1100)
!1100 = !{!1101, !1102}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1099, file: !135, line: 1438, baseType: !1052, size: 192)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1099, file: !135, line: 1439, baseType: !1014, size: 64, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1016, file: !135, line: 3378, baseType: !1104, size: 256)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !1105)
!1105 = !{!1106, !1107, !1108}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1104, file: !135, line: 1419, baseType: !1052, size: 192)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1104, file: !135, line: 1420, baseType: !823, size: 32, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1104, file: !135, line: 1421, baseType: !1109, size: 8, offset: 224)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !826, size: 8, elements: !934)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !1016, file: !135, line: 3379, baseType: !1111, size: 320)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !1112)
!1112 = !{!1113, !1114, !1115}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1111, file: !135, line: 1429, baseType: !1052, size: 192)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1111, file: !135, line: 1430, baseType: !1014, size: 64, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1111, file: !135, line: 1431, baseType: !1014, size: 64, offset: 256)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1016, file: !135, line: 3380, baseType: !1117, size: 320)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !1118)
!1118 = !{!1119, !1120}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1117, file: !135, line: 1461, baseType: !1052, size: 192)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1117, file: !135, line: 1462, baseType: !1121, size: 128, offset: 192)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1122, line: 31, size: 128, elements: !1123)
!1122 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1123 = !{!1124, !1127, !1128}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1121, file: !1122, line: 32, baseType: !1125, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1121, file: !1122, line: 33, baseType: !7, size: 32, offset: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1121, file: !1122, line: 34, baseType: !7, size: 32, offset: 96)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !1016, file: !135, line: 3381, baseType: !1130, size: 384)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1130, file: !135, line: 2508, baseType: !1052, size: 192)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1130, file: !135, line: 2509, baseType: !853, size: 32, offset: 192)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1130, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1130, file: !135, line: 2511, baseType: !1014, size: 64, offset: 256)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1130, file: !135, line: 2512, baseType: !1014, size: 64, offset: 320)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !1016, file: !135, line: 3382, baseType: !1138, size: 896)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1138, file: !135, line: 2653, baseType: !1130, size: 384)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1138, file: !135, line: 2654, baseType: !1014, size: 64, offset: 384)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1138, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1138, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1138, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1138, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1138, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1138, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1138, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1138, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1138, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1138, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1138, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1138, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1138, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1138, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1138, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1138, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1138, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1138, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1138, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1138, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1138, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1138, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1138, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1138, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1138, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1138, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1138, file: !135, line: 2705, baseType: !1014, size: 64, offset: 576)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1138, file: !135, line: 2706, baseType: !1014, size: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1138, file: !135, line: 2707, baseType: !1014, size: 64, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1138, file: !135, line: 2708, baseType: !1014, size: 64, offset: 768)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1138, file: !135, line: 2711, baseType: !1173, size: 64, offset: 832)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !1016, file: !135, line: 3383, baseType: !1176, size: 960)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !1177)
!1177 = !{!1178, !1179}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1176, file: !135, line: 2757, baseType: !1138, size: 896)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1176, file: !135, line: 2758, baseType: !900, size: 64, offset: 896)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !1016, file: !135, line: 3384, baseType: !1181, size: 1472)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !1182)
!1182 = !{!1183, !1204, !1205, !1206, !1207}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1181, file: !135, line: 3115, baseType: !1184, size: 1216)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !1185)
!1185 = !{!1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1184, file: !135, line: 2985, baseType: !1176, size: 960)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1184, file: !135, line: 2986, baseType: !1014, size: 64, offset: 960)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1184, file: !135, line: 2987, baseType: !1014, size: 64, offset: 1024)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1184, file: !135, line: 2988, baseType: !1014, size: 64, offset: 1088)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1184, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1184, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1184, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1184, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1184, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1184, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1184, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1184, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1184, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1184, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1184, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1184, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1184, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1184, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1181, file: !135, line: 3117, baseType: !1014, size: 64, offset: 1216)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1181, file: !135, line: 3119, baseType: !1014, size: 64, offset: 1280)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1181, file: !135, line: 3121, baseType: !1014, size: 64, offset: 1344)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1181, file: !135, line: 3123, baseType: !1014, size: 64, offset: 1408)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !1016, file: !135, line: 3385, baseType: !1209, size: 1088)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !1210)
!1210 = !{!1211, !1212, !1213}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1209, file: !135, line: 2875, baseType: !1176, size: 960)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1209, file: !135, line: 2876, baseType: !900, size: 64, offset: 960)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1209, file: !135, line: 2877, baseType: !1214, size: 64, offset: 1024)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1216, line: 172, size: 128, elements: !1217)
!1216 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1217 = !{!1218, !1219, !1220, !1221, !1222, !1223, !1224}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1215, file: !1216, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1215, file: !1216, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1215, file: !1216, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1215, file: !1216, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1215, file: !1216, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1215, file: !1216, line: 195, baseType: !7, size: 32, offset: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1215, file: !1216, line: 199, baseType: !1014, size: 64, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !1016, file: !135, line: 3386, baseType: !1184, size: 1216)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !1016, file: !135, line: 3387, baseType: !1227, size: 1280)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !1228)
!1228 = !{!1229, !1230}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1227, file: !135, line: 3094, baseType: !1184, size: 1216)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1227, file: !135, line: 3095, baseType: !1214, size: 64, offset: 1216)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !1016, file: !135, line: 3388, baseType: !1232, size: 1216)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !1233)
!1233 = !{!1234, !1235, !1236, !1237, !1238, !1239}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1232, file: !135, line: 2825, baseType: !1138, size: 896)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1232, file: !135, line: 2827, baseType: !1014, size: 64, offset: 896)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1232, file: !135, line: 2828, baseType: !1014, size: 64, offset: 960)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1232, file: !135, line: 2829, baseType: !1014, size: 64, offset: 1024)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1232, file: !135, line: 2830, baseType: !1014, size: 64, offset: 1088)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1232, file: !135, line: 2831, baseType: !1014, size: 64, offset: 1152)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !1016, file: !135, line: 3389, baseType: !1241, size: 1024)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !1242)
!1242 = !{!1243, !1244, !1245}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1241, file: !135, line: 2851, baseType: !1176, size: 960)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1241, file: !135, line: 2852, baseType: !823, size: 32, offset: 960)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1241, file: !135, line: 2853, baseType: !823, size: 32, offset: 992)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !1016, file: !135, line: 3390, baseType: !1247, size: 1024)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !1248)
!1248 = !{!1249, !1250}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1247, file: !135, line: 2858, baseType: !1176, size: 960)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1247, file: !135, line: 2859, baseType: !1214, size: 64, offset: 960)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !1016, file: !135, line: 3391, baseType: !1252, size: 960)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !1253)
!1253 = !{!1254}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1252, file: !135, line: 2863, baseType: !1176, size: 960)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !1016, file: !135, line: 3392, baseType: !1256, size: 1472)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !1257)
!1257 = !{!1258}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1256, file: !135, line: 3305, baseType: !1181, size: 1472)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !1016, file: !135, line: 3393, baseType: !1260, size: 1792)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !1261)
!1261 = !{!1262, !1263, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1260, file: !135, line: 3249, baseType: !1181, size: 1472)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1260, file: !135, line: 3251, baseType: !1264, size: 64, offset: 1472)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1266, line: 463, size: 1152, elements: !1267)
!1266 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1267 = !{!1268, !1430, !1461, !1462, !1539, !1542, !1543, !1544, !1545, !1546, !1547, !1571, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1265, file: !1266, line: 464, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !330, line: 194, size: 384, elements: !1271)
!1271 = !{!1272, !1321, !1334, !1348, !1398, !1411}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1270, file: !330, line: 197, baseType: !1273, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !330, line: 182, baseType: !1274)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !330, line: 116, size: 704, elements: !1276)
!1276 = !{!1277, !1278, !1279, !1280, !1281, !1282, !1309, !1318, !1319, !1320}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1275, file: !330, line: 119, baseType: !1274, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1275, file: !330, line: 122, baseType: !1274, size: 64, offset: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1275, file: !330, line: 123, baseType: !1274, size: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1275, file: !330, line: 126, baseType: !823, size: 32, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1275, file: !330, line: 129, baseType: !329, size: 32, offset: 224)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1275, file: !330, line: 165, baseType: !1283, size: 192, offset: 256)
!1283 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !330, line: 132, size: 192, elements: !1284)
!1284 = !{!1285, !1298, !1304}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1283, file: !330, line: 137, baseType: !1286, size: 128)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !330, line: 133, size: 128, elements: !1287)
!1287 = !{!1288, !1297}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1286, file: !330, line: 135, baseType: !1289, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !330, line: 93, size: 320, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295, !1296}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1290, file: !330, line: 96, baseType: !1289, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1290, file: !330, line: 97, baseType: !1289, size: 64, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1290, file: !330, line: 101, baseType: !1014, size: 64, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1290, file: !330, line: 106, baseType: !1014, size: 64, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1290, file: !330, line: 111, baseType: !1014, size: 64, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1286, file: !330, line: 136, baseType: !1289, size: 64, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1283, file: !330, line: 151, baseType: !1299, size: 192)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !330, line: 139, size: 192, elements: !1300)
!1300 = !{!1301, !1302, !1303}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1299, file: !330, line: 141, baseType: !1014, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1299, file: !330, line: 145, baseType: !1014, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1299, file: !330, line: 150, baseType: !823, size: 32, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1283, file: !330, line: 164, baseType: !1305, size: 128)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !330, line: 153, size: 128, elements: !1306)
!1306 = !{!1307, !1308}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1305, file: !330, line: 161, baseType: !1014, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1305, file: !330, line: 163, baseType: !853, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1275, file: !330, line: 168, baseType: !1310, size: 64, offset: 448)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !330, line: 67, size: 320, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1317}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1311, file: !330, line: 70, baseType: !1310, size: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1311, file: !330, line: 73, baseType: !1274, size: 64, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1311, file: !330, line: 78, baseType: !1014, size: 64, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1311, file: !330, line: 85, baseType: !900, size: 64, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1311, file: !330, line: 88, baseType: !823, size: 32, offset: 256)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1275, file: !330, line: 173, baseType: !900, size: 64, offset: 512)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1275, file: !330, line: 173, baseType: !900, size: 64, offset: 576)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1275, file: !330, line: 177, baseType: !822, size: 8, offset: 640)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1270, file: !330, line: 200, baseType: !1322, size: 64, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !330, line: 185, baseType: !1324)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !330, line: 185, size: 128, elements: !1325)
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1324, file: !330, line: 185, baseType: !1327, size: 128)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !330, line: 184, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !330, line: 184, size: 128, elements: !1329)
!1329 = !{!1330, !1331, !1332}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1328, file: !330, line: 184, baseType: !7, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1328, file: !330, line: 184, baseType: !7, size: 32, offset: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1328, file: !330, line: 184, baseType: !1333, size: 64, offset: 64)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1273, size: 64, elements: !934)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1270, file: !330, line: 203, baseType: !1335, size: 64, offset: 128)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !330, line: 189, baseType: !1337)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !330, line: 189, size: 128, elements: !1338)
!1338 = !{!1339}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1337, file: !330, line: 189, baseType: !1340, size: 128)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !330, line: 188, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !330, line: 188, size: 128, elements: !1342)
!1342 = !{!1343, !1344, !1345}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1341, file: !330, line: 188, baseType: !7, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1341, file: !330, line: 188, baseType: !7, size: 32, offset: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1341, file: !330, line: 188, baseType: !1346, size: 64, offset: 64)
!1346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1347, size: 64, elements: !934)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !330, line: 180, baseType: !1310)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1270, file: !330, line: 207, baseType: !1349, size: 64, offset: 192)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1350, line: 144, baseType: !1351)
!1350 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1350, line: 100, size: 896, elements: !1353)
!1353 = !{!1354, !1362, !1367, !1372, !1374, !1375, !1376, !1377, !1378, !1379, !1384, !1386, !1387, !1392, !1397}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1352, file: !1350, line: 102, baseType: !1355, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1350, line: 52, baseType: !1356)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!1359, !1360}
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1350, line: 47, baseType: !7)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1352, file: !1350, line: 105, baseType: !1363, size: 64, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1350, line: 59, baseType: !1364)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!823, !1360, !1360}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1352, file: !1350, line: 108, baseType: !1368, size: 64, offset: 128)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1350, line: 63, baseType: !1369)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{null, !827}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1352, file: !1350, line: 111, baseType: !1373, size: 64, offset: 192)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1352, file: !1350, line: 114, baseType: !833, size: 64, offset: 256)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1352, file: !1350, line: 117, baseType: !833, size: 64, offset: 320)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1352, file: !1350, line: 120, baseType: !833, size: 64, offset: 384)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1352, file: !1350, line: 124, baseType: !7, size: 32, offset: 448)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1352, file: !1350, line: 128, baseType: !7, size: 32, offset: 480)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1352, file: !1350, line: 131, baseType: !1380, size: 64, offset: 512)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1350, line: 75, baseType: !1381)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!827, !833, !833}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1352, file: !1350, line: 132, baseType: !1385, size: 64, offset: 576)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1350, line: 78, baseType: !1369)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1352, file: !1350, line: 135, baseType: !827, size: 64, offset: 640)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1352, file: !1350, line: 136, baseType: !1388, size: 64, offset: 704)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1350, line: 82, baseType: !1389)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DISubroutineType(types: !1391)
!1391 = !{!827, !827, !833, !833}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1352, file: !1350, line: 137, baseType: !1393, size: 64, offset: 768)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1350, line: 83, baseType: !1394)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{null, !827, !827}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1352, file: !1350, line: 141, baseType: !7, size: 32, offset: 832)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1270, file: !330, line: 211, baseType: !1399, size: 64, offset: 256)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1402)
!1402 = !{!1403}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1401, file: !135, line: 183, baseType: !1404, size: 128)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1406)
!1406 = !{!1407, !1408, !1409}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1405, file: !135, line: 182, baseType: !7, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1405, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1405, file: !135, line: 182, baseType: !1410, size: 64, offset: 64)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 64, elements: !934)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1270, file: !330, line: 220, baseType: !1412, size: 64, offset: 320)
!1412 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !330, line: 217, size: 64, elements: !1413)
!1413 = !{!1414, !1415}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1412, file: !330, line: 218, baseType: !1399, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1412, file: !330, line: 219, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1418, line: 29, baseType: !1419)
!1418 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1418, line: 29, size: 96, elements: !1420)
!1420 = !{!1421}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1419, file: !1418, line: 29, baseType: !1422, size: 96)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1418, line: 27, baseType: !1423)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1418, line: 27, size: 96, elements: !1424)
!1424 = !{!1425, !1426, !1427}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1423, file: !1418, line: 27, baseType: !7, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1423, file: !1418, line: 27, baseType: !7, size: 32, offset: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1423, file: !1418, line: 27, baseType: !1428, size: 8, offset: 64)
!1428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1429, size: 8, elements: !934)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1418, line: 26, baseType: !822)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1265, file: !1266, line: 467, baseType: !1431, size: 64, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !337, line: 374, size: 640, elements: !1433)
!1433 = !{!1434, !1436, !1437, !1450, !1451, !1452, !1453, !1454, !1455, !1457, !1459, !1460}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1432, file: !337, line: 377, baseType: !1435, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !874, line: 111, baseType: !857)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1432, file: !337, line: 378, baseType: !1435, size: 64, offset: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1432, file: !337, line: 381, baseType: !1438, size: 64, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !337, line: 282, baseType: !1440)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !337, line: 282, size: 128, elements: !1441)
!1441 = !{!1442}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1440, file: !337, line: 282, baseType: !1443, size: 128)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !337, line: 281, baseType: !1444)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !337, line: 281, size: 128, elements: !1445)
!1445 = !{!1446, !1447, !1448}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1444, file: !337, line: 281, baseType: !7, size: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1444, file: !337, line: 281, baseType: !7, size: 32, offset: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1444, file: !337, line: 281, baseType: !1449, size: 64, offset: 64)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1435, size: 64, elements: !934)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1432, file: !337, line: 384, baseType: !823, size: 32, offset: 192)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1432, file: !337, line: 387, baseType: !823, size: 32, offset: 224)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1432, file: !337, line: 390, baseType: !823, size: 32, offset: 256)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1432, file: !337, line: 394, baseType: !1438, size: 64, offset: 320)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1432, file: !337, line: 396, baseType: !336, size: 32, offset: 384)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1432, file: !337, line: 399, baseType: !1456, size: 64, offset: 416)
!1456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 64, elements: !969)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1432, file: !337, line: 402, baseType: !1458, size: 64, offset: 480)
!1458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !969)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1432, file: !337, line: 406, baseType: !823, size: 32, offset: 544)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1432, file: !337, line: 409, baseType: !823, size: 32, offset: 576)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1265, file: !1266, line: 470, baseType: !885, size: 64, offset: 128)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1265, file: !1266, line: 473, baseType: !1463, size: 64, offset: 192)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1216, line: 39, size: 1152, elements: !1465)
!1465 = !{!1466, !1467, !1480, !1481, !1482, !1494, !1495, !1499, !1500, !1501, !1502, !1503}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1464, file: !1216, line: 41, baseType: !1349, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1464, file: !1216, line: 48, baseType: !1468, size: 64, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !385, line: 35, baseType: !1470)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !385, line: 35, size: 128, elements: !1471)
!1471 = !{!1472}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1470, file: !385, line: 35, baseType: !1473, size: 128)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !385, line: 33, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !385, line: 33, size: 128, elements: !1475)
!1475 = !{!1476, !1477, !1478}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1474, file: !385, line: 33, baseType: !7, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1474, file: !385, line: 33, baseType: !7, size: 32, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1474, file: !385, line: 33, baseType: !1479, size: 64, offset: 64)
!1479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !894, size: 64, elements: !934)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1464, file: !1216, line: 51, baseType: !1399, size: 64, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1464, file: !1216, line: 54, baseType: !1014, size: 64, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1464, file: !1216, line: 57, baseType: !1483, size: 128, offset: 256)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1484, line: 31, size: 128, elements: !1485)
!1484 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1485 = !{!1486, !1487, !1488, !1489, !1490, !1491, !1492}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1483, file: !1484, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1483, file: !1484, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1483, file: !1484, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1483, file: !1484, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1483, file: !1484, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1483, file: !1484, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1483, file: !1484, line: 56, baseType: !1493, size: 64, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !874, line: 47, baseType: !953)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1464, file: !1216, line: 60, baseType: !1483, size: 128, offset: 384)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1464, file: !1216, line: 64, baseType: !1496, size: 64, offset: 512)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1498, line: 33, flags: DIFlagFwdDecl)
!1498 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1464, file: !1216, line: 67, baseType: !1014, size: 64, offset: 576)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1464, file: !1216, line: 73, baseType: !1349, size: 64, offset: 640)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1464, file: !1216, line: 77, baseType: !1493, size: 64, offset: 704)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1464, file: !1216, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1464, file: !1216, line: 82, baseType: !1504, size: 320, offset: 832)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !782, line: 62, size: 320, elements: !1505)
!1505 = !{!1506, !1512, !1513, !1514, !1515, !1522}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1504, file: !782, line: 63, baseType: !1507, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !782, line: 56, size: 128, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1508, file: !782, line: 57, baseType: !1507, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1508, file: !782, line: 58, baseType: !1109, size: 8, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1504, file: !782, line: 64, baseType: !7, size: 32, offset: 64)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1504, file: !782, line: 66, baseType: !7, size: 32, offset: 96)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1504, file: !782, line: 68, baseType: !822, size: 8, offset: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1504, file: !782, line: 70, baseType: !1516, size: 64, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !782, line: 37, size: 128, elements: !1518)
!1518 = !{!1519, !1520}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1517, file: !782, line: 39, baseType: !1516, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1517, file: !782, line: 40, baseType: !1521, size: 64, offset: 64)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1504, file: !782, line: 71, baseType: !1523, size: 64, offset: 256)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !782, line: 45, size: 320, elements: !1525)
!1525 = !{!1526, !1527}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1524, file: !782, line: 47, baseType: !1523, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1524, file: !782, line: 48, baseType: !1528, size: 256, offset: 64)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !1529)
!1529 = !{!1530, !1532, !1533, !1538}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1528, file: !135, line: 1884, baseType: !1531, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1528, file: !135, line: 1885, baseType: !1531, size: 64, offset: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1528, file: !135, line: 1891, baseType: !1534, size: 64, offset: 128)
!1534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1528, file: !135, line: 1891, size: 64, elements: !1535)
!1535 = !{!1536, !1537}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1534, file: !135, line: 1891, baseType: !894, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1534, file: !135, line: 1891, baseType: !1014, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1528, file: !135, line: 1892, baseType: !1521, size: 64, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1265, file: !1266, line: 476, baseType: !1540, size: 64, offset: 256)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1266, line: 476, flags: DIFlagFwdDecl)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1265, file: !1266, line: 479, baseType: !1349, size: 64, offset: 320)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1265, file: !1266, line: 484, baseType: !1014, size: 64, offset: 384)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1265, file: !1266, line: 488, baseType: !1014, size: 64, offset: 448)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1265, file: !1266, line: 493, baseType: !1014, size: 64, offset: 512)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1265, file: !1266, line: 496, baseType: !1014, size: 64, offset: 576)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1265, file: !1266, line: 501, baseType: !1548, size: 64, offset: 640)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !348, line: 2355, size: 576, elements: !1550)
!1550 = !{!1551, !1554, !1555, !1556, !1557, !1559, !1560, !1565, !1566, !1567, !1568, !1569, !1570}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1549, file: !348, line: 2356, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !348, line: 2356, flags: DIFlagFwdDecl)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1549, file: !348, line: 2357, baseType: !828, size: 64, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1549, file: !348, line: 2358, baseType: !823, size: 32, offset: 128)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1549, file: !348, line: 2359, baseType: !823, size: 32, offset: 160)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1549, file: !348, line: 2360, baseType: !1558, size: 128, offset: 192)
!1558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !823, size: 128, elements: !994)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1549, file: !348, line: 2364, baseType: !823, size: 32, offset: 320)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1549, file: !348, line: 2367, baseType: !1561, size: 128, offset: 384)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !348, line: 2349, size: 128, elements: !1562)
!1562 = !{!1563, !1564}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1561, file: !348, line: 2351, baseType: !900, size: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1561, file: !348, line: 2352, baseType: !985, size: 64, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1549, file: !348, line: 2371, baseType: !347, size: 32, offset: 512)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1549, file: !348, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1549, file: !348, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1549, file: !348, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1549, file: !348, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1549, file: !348, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1265, file: !1266, line: 504, baseType: !1572, size: 64, offset: 704)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1266, line: 504, flags: DIFlagFwdDecl)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1265, file: !1266, line: 507, baseType: !1349, size: 64, offset: 768)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1265, file: !1266, line: 510, baseType: !823, size: 32, offset: 832)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1265, file: !1266, line: 513, baseType: !823, size: 32, offset: 864)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1265, file: !1266, line: 516, baseType: !853, size: 32, offset: 896)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1265, file: !1266, line: 519, baseType: !853, size: 32, offset: 928)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1265, file: !1266, line: 522, baseType: !7, size: 32, offset: 960)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1265, file: !1266, line: 523, baseType: !7, size: 32, offset: 992)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1265, file: !1266, line: 528, baseType: !828, size: 64, offset: 1024)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1265, file: !1266, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1265, file: !1266, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1265, file: !1266, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1265, file: !1266, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1265, file: !1266, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1265, file: !1266, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1265, file: !1266, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1265, file: !1266, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1265, file: !1266, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1265, file: !1266, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1265, file: !1266, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1265, file: !1266, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1265, file: !1266, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1265, file: !1266, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1265, file: !1266, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1265, file: !1266, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1260, file: !135, line: 3254, baseType: !1014, size: 64, offset: 1536)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1260, file: !135, line: 3257, baseType: !1014, size: 64, offset: 1600)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1260, file: !135, line: 3258, baseType: !1014, size: 64, offset: 1664)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1260, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1260, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1260, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1260, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1260, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1260, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1260, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1260, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1260, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1260, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1260, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1260, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1260, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1260, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1260, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1260, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1260, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1260, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1016, file: !135, line: 3394, baseType: !1620, size: 1344)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1647, !1648, !1649, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1620, file: !135, line: 2280, baseType: !1052, size: 192)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1620, file: !135, line: 2281, baseType: !1014, size: 64, offset: 192)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1620, file: !135, line: 2282, baseType: !1014, size: 64, offset: 256)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1620, file: !135, line: 2283, baseType: !1014, size: 64, offset: 320)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1620, file: !135, line: 2284, baseType: !1014, size: 64, offset: 384)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1620, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1620, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1620, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1620, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1620, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1620, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1620, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1620, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1620, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1620, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1620, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1620, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1620, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1620, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1620, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1620, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1620, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1620, file: !135, line: 2306, baseType: !1645, size: 32, offset: 544)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1646, line: 31, baseType: !823)
!1646 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1620, file: !135, line: 2307, baseType: !1014, size: 64, offset: 576)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1620, file: !135, line: 2308, baseType: !1014, size: 64, offset: 640)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1620, file: !135, line: 2314, baseType: !1650, size: 64, offset: 704)
!1650 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1651)
!1651 = !{!1652, !1653, !1654}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1650, file: !135, line: 2310, baseType: !823, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1650, file: !135, line: 2311, baseType: !828, size: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1650, file: !135, line: 2312, baseType: !1655, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1620, file: !135, line: 2315, baseType: !1014, size: 64, offset: 768)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1620, file: !135, line: 2316, baseType: !1014, size: 64, offset: 832)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1620, file: !135, line: 2317, baseType: !1014, size: 64, offset: 896)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1620, file: !135, line: 2318, baseType: !1014, size: 64, offset: 960)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1620, file: !135, line: 2319, baseType: !1014, size: 64, offset: 1024)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1620, file: !135, line: 2320, baseType: !1014, size: 64, offset: 1088)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1620, file: !135, line: 2321, baseType: !1014, size: 64, offset: 1152)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1620, file: !135, line: 2322, baseType: !1014, size: 64, offset: 1216)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1620, file: !135, line: 2324, baseType: !1666, size: 64, offset: 1280)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1016, file: !135, line: 3395, baseType: !1669, size: 320)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1670)
!1670 = !{!1671, !1672, !1673}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1669, file: !135, line: 1470, baseType: !1052, size: 192)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1669, file: !135, line: 1471, baseType: !1014, size: 64, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1669, file: !135, line: 1472, baseType: !1014, size: 64, offset: 256)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1016, file: !135, line: 3396, baseType: !1675, size: 320)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1676)
!1676 = !{!1677, !1678, !1679}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1675, file: !135, line: 1483, baseType: !1052, size: 192)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1675, file: !135, line: 1484, baseType: !823, size: 32, offset: 192)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1675, file: !135, line: 1485, baseType: !1410, size: 64, offset: 256)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1016, file: !135, line: 3397, baseType: !1681, size: 384)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1681, file: !135, line: 1830, baseType: !1052, size: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1681, file: !135, line: 1831, baseType: !853, size: 32, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1681, file: !135, line: 1832, baseType: !1014, size: 64, offset: 256)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1681, file: !135, line: 1835, baseType: !1410, size: 64, offset: 320)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1016, file: !135, line: 3398, baseType: !1688, size: 704)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693, !1694, !1699}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1688, file: !135, line: 1899, baseType: !1052, size: 192)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1688, file: !135, line: 1902, baseType: !1014, size: 64, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1688, file: !135, line: 1905, baseType: !894, size: 64, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1688, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1688, file: !135, line: 1911, baseType: !1695, size: 64, offset: 384)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1216, line: 117, size: 128, elements: !1697)
!1697 = !{!1698}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1696, file: !1216, line: 120, baseType: !1483, size: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1688, file: !135, line: 1914, baseType: !1528, size: 256, offset: 448)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1016, file: !135, line: 3399, baseType: !1701, size: 704)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1702)
!1702 = !{!1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1701, file: !135, line: 2009, baseType: !1052, size: 192)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1701, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1701, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1701, file: !135, line: 2014, baseType: !853, size: 32, offset: 224)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1701, file: !135, line: 2016, baseType: !1014, size: 64, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1701, file: !135, line: 2017, baseType: !1399, size: 64, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1701, file: !135, line: 2019, baseType: !1014, size: 64, offset: 384)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1701, file: !135, line: 2020, baseType: !1014, size: 64, offset: 448)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1701, file: !135, line: 2021, baseType: !1014, size: 64, offset: 512)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1701, file: !135, line: 2022, baseType: !1014, size: 64, offset: 576)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1701, file: !135, line: 2023, baseType: !1014, size: 64, offset: 640)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1016, file: !135, line: 3400, baseType: !1715, size: 832)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1716)
!1716 = !{!1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1715, file: !135, line: 2431, baseType: !1052, size: 192)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1715, file: !135, line: 2433, baseType: !1014, size: 64, offset: 192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1715, file: !135, line: 2434, baseType: !1014, size: 64, offset: 256)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1715, file: !135, line: 2435, baseType: !1014, size: 64, offset: 320)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1715, file: !135, line: 2436, baseType: !1014, size: 64, offset: 384)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1715, file: !135, line: 2437, baseType: !1399, size: 64, offset: 448)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1715, file: !135, line: 2438, baseType: !1014, size: 64, offset: 512)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1715, file: !135, line: 2440, baseType: !1014, size: 64, offset: 576)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1715, file: !135, line: 2441, baseType: !1014, size: 64, offset: 640)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1715, file: !135, line: 2443, baseType: !1727, size: 128, offset: 704)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1729)
!1729 = !{!1730}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1728, file: !135, line: 182, baseType: !1404, size: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !1016, file: !135, line: 3401, baseType: !1732, size: 320)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1733)
!1733 = !{!1734, !1735, !1742}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1732, file: !135, line: 3329, baseType: !1052, size: 192)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1732, file: !135, line: 3330, baseType: !1736, size: 64, offset: 192)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1738)
!1738 = !{!1739, !1740, !1741}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1737, file: !135, line: 3322, baseType: !1736, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1737, file: !135, line: 3323, baseType: !1736, size: 64, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1737, file: !135, line: 3324, baseType: !1014, size: 64, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1732, file: !135, line: 3331, baseType: !1736, size: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !1016, file: !135, line: 3402, baseType: !1744, size: 256)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1745)
!1745 = !{!1746, !1747}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1744, file: !135, line: 1541, baseType: !1052, size: 192)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1744, file: !135, line: 1542, baseType: !1748, size: 64, offset: 192)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1750, file: !135, line: 1538, baseType: !1753, size: 192)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1754)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1755)
!1755 = !{!1756, !1757, !1758}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1754, file: !135, line: 1537, baseType: !7, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1754, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1754, file: !135, line: 1537, baseType: !1759, size: 128, offset: 64)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1760, size: 128, elements: !934)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1762)
!1762 = !{!1763, !1764}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1761, file: !135, line: 1533, baseType: !1014, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1761, file: !135, line: 1534, baseType: !1014, size: 64, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !1016, file: !135, line: 3403, baseType: !1766, size: 512)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1767)
!1767 = !{!1768, !1769, !1770, !1771, !1777, !1778, !1779}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1766, file: !135, line: 1939, baseType: !1052, size: 192)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1766, file: !135, line: 1940, baseType: !853, size: 32, offset: 192)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1766, file: !135, line: 1941, baseType: !352, size: 32, offset: 224)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1766, file: !135, line: 1946, baseType: !1772, size: 32, offset: 256)
!1772 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1773)
!1773 = !{!1774, !1775, !1776}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1772, file: !135, line: 1943, baseType: !370, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1772, file: !135, line: 1944, baseType: !377, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1772, file: !135, line: 1945, baseType: !134, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1766, file: !135, line: 1950, baseType: !884, size: 64, offset: 320)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1766, file: !135, line: 1951, baseType: !884, size: 64, offset: 384)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1766, file: !135, line: 1953, baseType: !1410, size: 64, offset: 448)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !1016, file: !135, line: 3404, baseType: !1781, size: 1664)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1782)
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1781, file: !135, line: 3338, baseType: !1052, size: 192)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1781, file: !135, line: 3341, baseType: !1785, size: 1472, offset: 192)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1786, line: 410, size: 1472, elements: !1787)
!1786 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1787 = !{!1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1785, file: !1786, line: 412, baseType: !823, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1785, file: !1786, line: 413, baseType: !823, size: 32, offset: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1785, file: !1786, line: 414, baseType: !823, size: 32, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1785, file: !1786, line: 415, baseType: !823, size: 32, offset: 96)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1785, file: !1786, line: 416, baseType: !823, size: 32, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1785, file: !1786, line: 417, baseType: !823, size: 32, offset: 160)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1785, file: !1786, line: 418, baseType: !822, size: 8, offset: 192)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1785, file: !1786, line: 419, baseType: !822, size: 8, offset: 200)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1785, file: !1786, line: 420, baseType: !1797, size: 8, offset: 208)
!1797 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1785, file: !1786, line: 421, baseType: !1797, size: 8, offset: 216)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1785, file: !1786, line: 422, baseType: !1797, size: 8, offset: 224)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1785, file: !1786, line: 423, baseType: !1797, size: 8, offset: 232)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1785, file: !1786, line: 424, baseType: !1797, size: 8, offset: 240)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1785, file: !1786, line: 425, baseType: !1797, size: 8, offset: 248)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1785, file: !1786, line: 426, baseType: !1797, size: 8, offset: 256)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1785, file: !1786, line: 427, baseType: !1797, size: 8, offset: 264)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1785, file: !1786, line: 428, baseType: !1797, size: 8, offset: 272)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1785, file: !1786, line: 429, baseType: !1797, size: 8, offset: 280)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1785, file: !1786, line: 430, baseType: !1797, size: 8, offset: 288)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1785, file: !1786, line: 431, baseType: !1797, size: 8, offset: 296)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1785, file: !1786, line: 432, baseType: !1797, size: 8, offset: 304)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1785, file: !1786, line: 433, baseType: !1797, size: 8, offset: 312)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1785, file: !1786, line: 434, baseType: !1797, size: 8, offset: 320)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1785, file: !1786, line: 435, baseType: !1797, size: 8, offset: 328)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1785, file: !1786, line: 436, baseType: !1797, size: 8, offset: 336)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1785, file: !1786, line: 437, baseType: !1797, size: 8, offset: 344)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1785, file: !1786, line: 438, baseType: !1797, size: 8, offset: 352)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1785, file: !1786, line: 439, baseType: !1797, size: 8, offset: 360)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1785, file: !1786, line: 440, baseType: !1797, size: 8, offset: 368)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1785, file: !1786, line: 441, baseType: !1797, size: 8, offset: 376)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1785, file: !1786, line: 442, baseType: !1797, size: 8, offset: 384)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1785, file: !1786, line: 443, baseType: !1797, size: 8, offset: 392)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1785, file: !1786, line: 444, baseType: !1797, size: 8, offset: 400)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1785, file: !1786, line: 445, baseType: !1797, size: 8, offset: 408)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1785, file: !1786, line: 446, baseType: !1797, size: 8, offset: 416)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1785, file: !1786, line: 447, baseType: !1797, size: 8, offset: 424)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1785, file: !1786, line: 448, baseType: !1797, size: 8, offset: 432)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1785, file: !1786, line: 449, baseType: !1797, size: 8, offset: 440)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1785, file: !1786, line: 450, baseType: !1797, size: 8, offset: 448)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1785, file: !1786, line: 451, baseType: !1797, size: 8, offset: 456)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1785, file: !1786, line: 452, baseType: !1797, size: 8, offset: 464)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1785, file: !1786, line: 453, baseType: !1797, size: 8, offset: 472)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1785, file: !1786, line: 454, baseType: !1797, size: 8, offset: 480)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1785, file: !1786, line: 455, baseType: !1797, size: 8, offset: 488)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1785, file: !1786, line: 456, baseType: !1797, size: 8, offset: 496)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1785, file: !1786, line: 457, baseType: !1797, size: 8, offset: 504)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1785, file: !1786, line: 458, baseType: !1797, size: 8, offset: 512)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1785, file: !1786, line: 459, baseType: !1797, size: 8, offset: 520)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1785, file: !1786, line: 460, baseType: !1797, size: 8, offset: 528)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1785, file: !1786, line: 461, baseType: !1797, size: 8, offset: 536)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1785, file: !1786, line: 462, baseType: !1797, size: 8, offset: 544)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1785, file: !1786, line: 463, baseType: !1797, size: 8, offset: 552)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1785, file: !1786, line: 464, baseType: !1797, size: 8, offset: 560)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1785, file: !1786, line: 465, baseType: !1797, size: 8, offset: 568)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1785, file: !1786, line: 466, baseType: !1797, size: 8, offset: 576)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1785, file: !1786, line: 467, baseType: !1797, size: 8, offset: 584)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1785, file: !1786, line: 468, baseType: !1797, size: 8, offset: 592)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1785, file: !1786, line: 469, baseType: !1797, size: 8, offset: 600)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1785, file: !1786, line: 470, baseType: !1797, size: 8, offset: 608)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1785, file: !1786, line: 471, baseType: !1797, size: 8, offset: 616)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1785, file: !1786, line: 472, baseType: !1797, size: 8, offset: 624)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1785, file: !1786, line: 473, baseType: !1797, size: 8, offset: 632)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1785, file: !1786, line: 474, baseType: !1797, size: 8, offset: 640)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1785, file: !1786, line: 475, baseType: !1797, size: 8, offset: 648)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1785, file: !1786, line: 476, baseType: !1797, size: 8, offset: 656)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1785, file: !1786, line: 477, baseType: !1797, size: 8, offset: 664)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1785, file: !1786, line: 478, baseType: !1797, size: 8, offset: 672)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1785, file: !1786, line: 479, baseType: !1797, size: 8, offset: 680)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1785, file: !1786, line: 480, baseType: !1797, size: 8, offset: 688)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1785, file: !1786, line: 481, baseType: !1797, size: 8, offset: 696)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1785, file: !1786, line: 482, baseType: !1797, size: 8, offset: 704)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1785, file: !1786, line: 483, baseType: !1797, size: 8, offset: 712)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1785, file: !1786, line: 484, baseType: !1797, size: 8, offset: 720)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1785, file: !1786, line: 485, baseType: !1797, size: 8, offset: 728)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1785, file: !1786, line: 486, baseType: !1797, size: 8, offset: 736)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1785, file: !1786, line: 487, baseType: !1797, size: 8, offset: 744)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1785, file: !1786, line: 488, baseType: !1797, size: 8, offset: 752)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1785, file: !1786, line: 489, baseType: !1797, size: 8, offset: 760)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1785, file: !1786, line: 490, baseType: !1797, size: 8, offset: 768)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1785, file: !1786, line: 491, baseType: !1797, size: 8, offset: 776)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1785, file: !1786, line: 492, baseType: !1797, size: 8, offset: 784)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1785, file: !1786, line: 493, baseType: !1797, size: 8, offset: 792)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1785, file: !1786, line: 494, baseType: !1797, size: 8, offset: 800)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1785, file: !1786, line: 495, baseType: !1797, size: 8, offset: 808)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1785, file: !1786, line: 496, baseType: !1797, size: 8, offset: 816)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1785, file: !1786, line: 497, baseType: !1797, size: 8, offset: 824)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1785, file: !1786, line: 498, baseType: !1797, size: 8, offset: 832)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1785, file: !1786, line: 499, baseType: !1797, size: 8, offset: 840)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1785, file: !1786, line: 500, baseType: !1797, size: 8, offset: 848)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1785, file: !1786, line: 501, baseType: !1797, size: 8, offset: 856)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1785, file: !1786, line: 502, baseType: !1797, size: 8, offset: 864)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1785, file: !1786, line: 503, baseType: !1797, size: 8, offset: 872)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1785, file: !1786, line: 504, baseType: !1797, size: 8, offset: 880)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1785, file: !1786, line: 505, baseType: !1797, size: 8, offset: 888)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1785, file: !1786, line: 506, baseType: !1797, size: 8, offset: 896)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1785, file: !1786, line: 507, baseType: !1797, size: 8, offset: 904)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1785, file: !1786, line: 508, baseType: !1797, size: 8, offset: 912)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1785, file: !1786, line: 509, baseType: !1797, size: 8, offset: 920)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1785, file: !1786, line: 510, baseType: !1797, size: 8, offset: 928)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1785, file: !1786, line: 511, baseType: !1797, size: 8, offset: 936)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1785, file: !1786, line: 512, baseType: !1797, size: 8, offset: 944)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1785, file: !1786, line: 513, baseType: !1797, size: 8, offset: 952)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1785, file: !1786, line: 514, baseType: !1797, size: 8, offset: 960)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1785, file: !1786, line: 515, baseType: !1797, size: 8, offset: 968)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1785, file: !1786, line: 516, baseType: !1797, size: 8, offset: 976)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1785, file: !1786, line: 517, baseType: !1797, size: 8, offset: 984)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1785, file: !1786, line: 518, baseType: !1797, size: 8, offset: 992)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1785, file: !1786, line: 519, baseType: !1797, size: 8, offset: 1000)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1785, file: !1786, line: 520, baseType: !1797, size: 8, offset: 1008)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1785, file: !1786, line: 521, baseType: !1797, size: 8, offset: 1016)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1785, file: !1786, line: 522, baseType: !1797, size: 8, offset: 1024)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1785, file: !1786, line: 523, baseType: !1797, size: 8, offset: 1032)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1785, file: !1786, line: 524, baseType: !1797, size: 8, offset: 1040)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1785, file: !1786, line: 525, baseType: !1797, size: 8, offset: 1048)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1785, file: !1786, line: 526, baseType: !1797, size: 8, offset: 1056)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1785, file: !1786, line: 527, baseType: !1797, size: 8, offset: 1064)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1785, file: !1786, line: 528, baseType: !1797, size: 8, offset: 1072)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1785, file: !1786, line: 529, baseType: !1797, size: 8, offset: 1080)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1785, file: !1786, line: 530, baseType: !1797, size: 8, offset: 1088)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1785, file: !1786, line: 531, baseType: !1797, size: 8, offset: 1096)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1785, file: !1786, line: 532, baseType: !1797, size: 8, offset: 1104)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1785, file: !1786, line: 533, baseType: !1797, size: 8, offset: 1112)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1785, file: !1786, line: 534, baseType: !1797, size: 8, offset: 1120)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1785, file: !1786, line: 535, baseType: !1797, size: 8, offset: 1128)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1785, file: !1786, line: 536, baseType: !1797, size: 8, offset: 1136)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1785, file: !1786, line: 537, baseType: !1797, size: 8, offset: 1144)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1785, file: !1786, line: 538, baseType: !1797, size: 8, offset: 1152)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1785, file: !1786, line: 539, baseType: !1797, size: 8, offset: 1160)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1785, file: !1786, line: 540, baseType: !1797, size: 8, offset: 1168)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1785, file: !1786, line: 541, baseType: !1797, size: 8, offset: 1176)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1785, file: !1786, line: 542, baseType: !1797, size: 8, offset: 1184)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1785, file: !1786, line: 543, baseType: !1797, size: 8, offset: 1192)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1785, file: !1786, line: 544, baseType: !1797, size: 8, offset: 1200)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1785, file: !1786, line: 545, baseType: !1797, size: 8, offset: 1208)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1785, file: !1786, line: 546, baseType: !1797, size: 8, offset: 1216)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1785, file: !1786, line: 547, baseType: !1797, size: 8, offset: 1224)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1785, file: !1786, line: 548, baseType: !1797, size: 8, offset: 1232)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1785, file: !1786, line: 549, baseType: !1797, size: 8, offset: 1240)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1785, file: !1786, line: 550, baseType: !1797, size: 8, offset: 1248)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1785, file: !1786, line: 551, baseType: !1797, size: 8, offset: 1256)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1785, file: !1786, line: 552, baseType: !1797, size: 8, offset: 1264)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1785, file: !1786, line: 553, baseType: !1797, size: 8, offset: 1272)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1785, file: !1786, line: 554, baseType: !1797, size: 8, offset: 1280)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1785, file: !1786, line: 555, baseType: !1797, size: 8, offset: 1288)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1785, file: !1786, line: 556, baseType: !1797, size: 8, offset: 1296)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1785, file: !1786, line: 557, baseType: !1797, size: 8, offset: 1304)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1785, file: !1786, line: 558, baseType: !1797, size: 8, offset: 1312)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1785, file: !1786, line: 559, baseType: !1797, size: 8, offset: 1320)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1785, file: !1786, line: 560, baseType: !1797, size: 8, offset: 1328)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1785, file: !1786, line: 561, baseType: !1797, size: 8, offset: 1336)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1785, file: !1786, line: 562, baseType: !1797, size: 8, offset: 1344)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1785, file: !1786, line: 563, baseType: !1797, size: 8, offset: 1352)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1785, file: !1786, line: 564, baseType: !1797, size: 8, offset: 1360)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1785, file: !1786, line: 565, baseType: !1797, size: 8, offset: 1368)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1785, file: !1786, line: 566, baseType: !1797, size: 8, offset: 1376)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1785, file: !1786, line: 567, baseType: !1797, size: 8, offset: 1384)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1785, file: !1786, line: 568, baseType: !1797, size: 8, offset: 1392)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1785, file: !1786, line: 569, baseType: !1797, size: 8, offset: 1400)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1785, file: !1786, line: 570, baseType: !1797, size: 8, offset: 1408)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1785, file: !1786, line: 571, baseType: !1797, size: 8, offset: 1416)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1785, file: !1786, line: 572, baseType: !1797, size: 8, offset: 1424)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1785, file: !1786, line: 573, baseType: !1797, size: 8, offset: 1432)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1785, file: !1786, line: 574, baseType: !1797, size: 8, offset: 1440)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !1016, file: !135, line: 3405, baseType: !1953, size: 384)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !1954)
!1954 = !{!1955, !1956}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1953, file: !135, line: 3353, baseType: !1052, size: 192)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1953, file: !135, line: 3356, baseType: !1957, size: 192, offset: 192)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1786, line: 578, size: 192, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1957, file: !1786, line: 580, baseType: !823, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1957, file: !1786, line: 581, baseType: !823, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1957, file: !1786, line: 582, baseType: !823, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1957, file: !1786, line: 583, baseType: !823, size: 32, offset: 96)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1957, file: !1786, line: 584, baseType: !822, size: 8, offset: 128)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1957, file: !1786, line: 585, baseType: !822, size: 8, offset: 136)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1957, file: !1786, line: 586, baseType: !822, size: 8, offset: 144)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1957, file: !1786, line: 587, baseType: !822, size: 8, offset: 152)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1957, file: !1786, line: 588, baseType: !822, size: 8, offset: 160)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1957, file: !1786, line: 589, baseType: !822, size: 8, offset: 168)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1957, file: !1786, line: 590, baseType: !822, size: 8, offset: 176)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !920, file: !639, line: 178, baseType: !857, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !920, file: !639, line: 179, baseType: !1972, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !639, line: 150, baseType: !1974)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !639, line: 142, size: 320, elements: !1975)
!1975 = !{!1976, !1977, !1978, !1979, !1980, !1981}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1974, file: !639, line: 144, baseType: !1014, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1974, file: !639, line: 145, baseType: !900, size: 64, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1974, file: !639, line: 146, baseType: !900, size: 64, offset: 128)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1974, file: !639, line: 147, baseType: !1645, size: 32, offset: 192)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1974, file: !639, line: 148, baseType: !7, size: 32, offset: 224)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1974, file: !639, line: 149, baseType: !822, size: 8, offset: 256)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !920, file: !639, line: 180, baseType: !1983, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !639, line: 162, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !639, line: 159, size: 128, elements: !1986)
!1986 = !{!1987, !1988}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1985, file: !639, line: 160, baseType: !1014, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1985, file: !639, line: 161, baseType: !985, size: 64, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !920, file: !639, line: 181, baseType: !1990, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !639, line: 181, flags: DIFlagFwdDecl)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !915, file: !639, line: 317, baseType: !1993, size: 64)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 64, elements: !934)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !915, file: !639, line: 318, baseType: !1995, size: 320)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !639, line: 188, size: 320, elements: !1996)
!1996 = !{!1997, !1999, !2022}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1995, file: !639, line: 190, baseType: !1998, size: 192)
!1998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !919, size: 192, elements: !1085)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1995, file: !639, line: 193, baseType: !2000, size: 64, offset: 192)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !639, line: 206, size: 320, elements: !2002)
!2002 = !{!2003, !2007, !2008, !2009, !2021}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !2001, file: !639, line: 208, baseType: !2004, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !874, line: 62, baseType: !2006)
!2006 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !874, line: 61, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2001, file: !639, line: 211, baseType: !7, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2001, file: !639, line: 214, baseType: !985, size: 64, offset: 128)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2001, file: !639, line: 224, baseType: !2010, size: 64, offset: 192)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !639, line: 202, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !639, line: 202, size: 128, elements: !2013)
!2013 = !{!2014}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2012, file: !639, line: 202, baseType: !2015, size: 128)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !639, line: 200, baseType: !2016)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !639, line: 200, size: 128, elements: !2017)
!2017 = !{!2018, !2019, !2020}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2016, file: !639, line: 200, baseType: !7, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2016, file: !639, line: 200, baseType: !7, size: 32, offset: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2016, file: !639, line: 200, baseType: !933, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !2001, file: !639, line: 234, baseType: !2010, size: 64, offset: 256)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1995, file: !639, line: 197, baseType: !985, size: 64, offset: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !915, file: !639, line: 319, baseType: !1074, size: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !915, file: !639, line: 320, baseType: !1093, size: 192)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !876, file: !337, line: 134, baseType: !827, size: 64, offset: 192)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !876, file: !337, line: 137, baseType: !1014, size: 64, offset: 256)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !876, file: !337, line: 138, baseType: !853, size: 32, offset: 320)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !876, file: !337, line: 142, baseType: !7, size: 32, offset: 352)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !876, file: !337, line: 144, baseType: !823, size: 32, offset: 384)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !876, file: !337, line: 145, baseType: !823, size: 32, offset: 416)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !876, file: !337, line: 146, baseType: !2032, size: 64, offset: 448)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !337, line: 119, baseType: !985)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !858, file: !337, line: 220, baseType: !861, size: 64, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !858, file: !337, line: 223, baseType: !827, size: 64, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !858, file: !337, line: 226, baseType: !2036, size: 64, offset: 192)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !337, line: 185, flags: DIFlagFwdDecl)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !858, file: !337, line: 229, baseType: !2039, size: 128, offset: 256)
!2039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2040, size: 128, elements: !969)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !337, line: 229, flags: DIFlagFwdDecl)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !858, file: !337, line: 232, baseType: !857, size: 64, offset: 384)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !858, file: !337, line: 233, baseType: !857, size: 64, offset: 448)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !858, file: !337, line: 238, baseType: !2045, size: 64, offset: 512)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !337, line: 235, size: 64, elements: !2046)
!2046 = !{!2047, !2053}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !2045, file: !337, line: 236, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !337, line: 273, size: 128, elements: !2050)
!2050 = !{!2051, !2052}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2049, file: !337, line: 275, baseType: !884, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !2049, file: !337, line: 278, baseType: !884, size: 64, offset: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2045, file: !337, line: 237, baseType: !2054, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !337, line: 259, size: 320, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2061}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !2055, file: !337, line: 261, baseType: !900, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !2055, file: !337, line: 262, baseType: !900, size: 64, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2055, file: !337, line: 266, baseType: !900, size: 64, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !2055, file: !337, line: 267, baseType: !900, size: 64, offset: 192)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2055, file: !337, line: 270, baseType: !823, size: 32, offset: 256)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !858, file: !337, line: 241, baseType: !2032, size: 64, offset: 576)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !858, file: !337, line: 244, baseType: !823, size: 32, offset: 640)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !858, file: !337, line: 247, baseType: !823, size: 32, offset: 672)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !858, file: !337, line: 250, baseType: !823, size: 32, offset: 704)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !858, file: !337, line: 253, baseType: !823, size: 32, offset: 736)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !858, file: !337, line: 256, baseType: !823, size: 32, offset: 768)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !840, file: !385, line: 327, baseType: !1014, size: 64, offset: 192)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !837, file: !385, line: 739, baseType: !2070, size: 448)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !385, line: 350, size: 448, elements: !2071)
!2071 = !{!2072, !2078}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !2070, file: !385, line: 353, baseType: !2073, size: 384)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !385, line: 333, size: 384, elements: !2074)
!2074 = !{!2075, !2076, !2077}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2073, file: !385, line: 336, baseType: !840, size: 256)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !2073, file: !385, line: 343, baseType: !1516, size: 64, offset: 256)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !2073, file: !385, line: 344, baseType: !1523, size: 64, offset: 320)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2070, file: !385, line: 359, baseType: !1410, size: 64, offset: 384)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !837, file: !385, line: 740, baseType: !2080, size: 512)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !385, line: 365, size: 512, elements: !2081)
!2081 = !{!2082, !2083, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !2080, file: !385, line: 368, baseType: !2073, size: 384)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !2080, file: !385, line: 373, baseType: !1014, size: 64, offset: 384)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !2080, file: !385, line: 374, baseType: !1014, size: 64, offset: 448)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !837, file: !385, line: 741, baseType: !2086, size: 576)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !385, line: 380, size: 576, elements: !2087)
!2087 = !{!2088, !2089}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !2086, file: !385, line: 383, baseType: !2080, size: 512)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2086, file: !385, line: 389, baseType: !1410, size: 64, offset: 512)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !837, file: !385, line: 742, baseType: !2091, size: 320)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !385, line: 395, size: 320, elements: !2092)
!2092 = !{!2093, !2094}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2091, file: !385, line: 397, baseType: !840, size: 256)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !2091, file: !385, line: 400, baseType: !884, size: 64, offset: 256)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !837, file: !385, line: 743, baseType: !2096, size: 448)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !385, line: 406, size: 448, elements: !2097)
!2097 = !{!2098, !2099, !2100, !2101}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2096, file: !385, line: 408, baseType: !840, size: 256)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2096, file: !385, line: 412, baseType: !1014, size: 64, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2096, file: !385, line: 420, baseType: !1014, size: 64, offset: 320)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !2096, file: !385, line: 423, baseType: !884, size: 64, offset: 384)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !837, file: !385, line: 744, baseType: !2103, size: 384)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !385, line: 429, size: 384, elements: !2104)
!2104 = !{!2105, !2106, !2107}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2103, file: !385, line: 431, baseType: !840, size: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2103, file: !385, line: 434, baseType: !1014, size: 64, offset: 256)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2103, file: !385, line: 437, baseType: !884, size: 64, offset: 320)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !837, file: !385, line: 745, baseType: !2109, size: 384)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !385, line: 443, size: 384, elements: !2110)
!2110 = !{!2111, !2112, !2113}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2109, file: !385, line: 445, baseType: !840, size: 256)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2109, file: !385, line: 449, baseType: !1014, size: 64, offset: 256)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !2109, file: !385, line: 453, baseType: !884, size: 64, offset: 320)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !837, file: !385, line: 746, baseType: !2115, size: 320)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !385, line: 459, size: 320, elements: !2116)
!2116 = !{!2117, !2118}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2115, file: !385, line: 461, baseType: !840, size: 256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !2115, file: !385, line: 464, baseType: !1014, size: 64, offset: 256)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !837, file: !385, line: 747, baseType: !2120, size: 768)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !385, line: 469, size: 768, elements: !2121)
!2121 = !{!2122, !2123, !2124, !2125, !2126}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2120, file: !385, line: 471, baseType: !840, size: 256)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2120, file: !385, line: 474, baseType: !7, size: 32, offset: 256)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2120, file: !385, line: 475, baseType: !7, size: 32, offset: 288)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2120, file: !385, line: 478, baseType: !1014, size: 64, offset: 320)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2120, file: !385, line: 481, baseType: !2127, size: 384, offset: 384)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2128, size: 384, elements: !934)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !2129)
!2129 = !{!2130, !2131, !2132}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !2128, file: !135, line: 1920, baseType: !1528, size: 256)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2128, file: !135, line: 1921, baseType: !1014, size: 64, offset: 256)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2128, file: !135, line: 1922, baseType: !853, size: 32, offset: 320)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !837, file: !385, line: 748, baseType: !2134, size: 320)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !385, line: 487, size: 320, elements: !2135)
!2135 = !{!2136, !2137}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2134, file: !385, line: 490, baseType: !840, size: 256)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !2134, file: !385, line: 494, baseType: !823, size: 32, offset: 256)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !837, file: !385, line: 749, baseType: !2139, size: 384)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !385, line: 500, size: 384, elements: !2140)
!2140 = !{!2141, !2142, !2143}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2139, file: !385, line: 502, baseType: !840, size: 256)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !2139, file: !385, line: 506, baseType: !884, size: 64, offset: 256)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2139, file: !385, line: 510, baseType: !884, size: 64, offset: 320)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !837, file: !385, line: 750, baseType: !2145, size: 320)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !385, line: 529, size: 320, elements: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2145, file: !385, line: 531, baseType: !840, size: 256)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2145, file: !385, line: 540, baseType: !884, size: 64, offset: 256)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !837, file: !385, line: 751, baseType: !2150, size: 704)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !385, line: 546, size: 704, elements: !2151)
!2151 = !{!2152, !2153, !2154, !2155, !2156, !2157, !2158}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !2150, file: !385, line: 549, baseType: !2080, size: 512)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2150, file: !385, line: 553, baseType: !828, size: 64, offset: 512)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !2150, file: !385, line: 557, baseType: !822, size: 8, offset: 576)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2150, file: !385, line: 558, baseType: !822, size: 8, offset: 584)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !2150, file: !385, line: 559, baseType: !822, size: 8, offset: 592)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !2150, file: !385, line: 560, baseType: !822, size: 8, offset: 600)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2150, file: !385, line: 566, baseType: !1410, size: 64, offset: 640)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !837, file: !385, line: 752, baseType: !2160, size: 384)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !385, line: 571, size: 384, elements: !2161)
!2161 = !{!2162, !2163}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2160, file: !385, line: 573, baseType: !2091, size: 320)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2160, file: !385, line: 577, baseType: !1014, size: 64, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !837, file: !385, line: 753, baseType: !2165, size: 576)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !385, line: 600, size: 576, elements: !2166)
!2166 = !{!2167, !2168, !2169, !2170, !2179}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2165, file: !385, line: 602, baseType: !2091, size: 320)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2165, file: !385, line: 605, baseType: !1014, size: 64, offset: 320)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !2165, file: !385, line: 609, baseType: !833, size: 64, offset: 384)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !2165, file: !385, line: 612, baseType: !2171, size: 64, offset: 448)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !385, line: 581, size: 320, elements: !2173)
!2173 = !{!2174, !2175, !2176, !2177, !2178}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2172, file: !385, line: 583, baseType: !134, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2172, file: !385, line: 586, baseType: !1014, size: 64, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !2172, file: !385, line: 589, baseType: !1014, size: 64, offset: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !2172, file: !385, line: 592, baseType: !1014, size: 64, offset: 192)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2172, file: !385, line: 595, baseType: !1014, size: 64, offset: 256)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !2165, file: !385, line: 616, baseType: !884, size: 64, offset: 512)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !837, file: !385, line: 754, baseType: !2181, size: 512)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !385, line: 622, size: 512, elements: !2182)
!2182 = !{!2183, !2184, !2185, !2186}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2181, file: !385, line: 624, baseType: !2091, size: 320)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2181, file: !385, line: 628, baseType: !1014, size: 64, offset: 320)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !2181, file: !385, line: 632, baseType: !1014, size: 64, offset: 384)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !2181, file: !385, line: 636, baseType: !1014, size: 64, offset: 448)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !837, file: !385, line: 755, baseType: !2188, size: 704)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !385, line: 642, size: 704, elements: !2189)
!2189 = !{!2190, !2191, !2192, !2193}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2188, file: !385, line: 644, baseType: !2181, size: 512)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !2188, file: !385, line: 648, baseType: !1014, size: 64, offset: 512)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !2188, file: !385, line: 652, baseType: !1014, size: 64, offset: 576)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !2188, file: !385, line: 653, baseType: !1014, size: 64, offset: 640)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !837, file: !385, line: 756, baseType: !2195, size: 448)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !385, line: 663, size: 448, elements: !2196)
!2196 = !{!2197, !2198, !2199}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2195, file: !385, line: 665, baseType: !2091, size: 320)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2195, file: !385, line: 668, baseType: !1014, size: 64, offset: 320)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2195, file: !385, line: 673, baseType: !1014, size: 64, offset: 384)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !837, file: !385, line: 757, baseType: !2201, size: 384)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !385, line: 694, size: 384, elements: !2202)
!2202 = !{!2203, !2204}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2201, file: !385, line: 696, baseType: !2091, size: 320)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2201, file: !385, line: 699, baseType: !1014, size: 64, offset: 320)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !837, file: !385, line: 758, baseType: !2206, size: 384)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !385, line: 681, size: 384, elements: !2207)
!2207 = !{!2208, !2209, !2210}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2206, file: !385, line: 683, baseType: !840, size: 256)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !2206, file: !385, line: 686, baseType: !1014, size: 64, offset: 256)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !2206, file: !385, line: 689, baseType: !1014, size: 64, offset: 320)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !837, file: !385, line: 759, baseType: !2212, size: 384)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !385, line: 707, size: 384, elements: !2213)
!2213 = !{!2214, !2215, !2216}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2212, file: !385, line: 709, baseType: !840, size: 256)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !2212, file: !385, line: 712, baseType: !1014, size: 64, offset: 256)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !2212, file: !385, line: 712, baseType: !1014, size: 64, offset: 320)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !837, file: !385, line: 760, baseType: !2218, size: 320)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !385, line: 718, size: 320, elements: !2219)
!2219 = !{!2220, !2221}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2218, file: !385, line: 720, baseType: !840, size: 256)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2218, file: !385, line: 723, baseType: !1014, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !837)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stack_var", file: !3, line: 146, size: 448, elements: !2226)
!2226 = !{!2227, !2228, !2229, !2230, !2231, !2232, !2233}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2225, file: !3, line: 149, baseType: !1014, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2225, file: !3, line: 154, baseType: !985, size: 64, offset: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2225, file: !3, line: 158, baseType: !985, size: 64, offset: 128)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "alignb", scope: !2225, file: !3, line: 162, baseType: !7, size: 32, offset: 192)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "representative", scope: !2225, file: !3, line: 165, baseType: !833, size: 64, offset: 256)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2225, file: !3, line: 168, baseType: !833, size: 64, offset: 320)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "conflicts", scope: !2225, file: !3, line: 171, baseType: !1493, size: 64, offset: 384)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !833)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !782, line: 30, baseType: !2239)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !135, line: 1893, baseType: !1528)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !782, line: 27, baseType: !1521)
!2242 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2243 = !{!2244, !2272, !2314, !0, !2316, !2318, !2320, !2322, !2324, !2326, !2328}
!2244 = !DIGlobalVariableExpression(var: !2245, expr: !DIExpression())
!2245 = distinct !DIGlobalVariable(name: "pass_expand", scope: !2, file: !3, line: 3958, type: !2246, isLocal: false, isDefinition: true)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !392, line: 162, size: 640, elements: !2247)
!2247 = !{!2248}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2246, file: !392, line: 164, baseType: !2249, size: 640)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !392, line: 114, size: 640, elements: !2250)
!2250 = !{!2251, !2252, !2253, !2257, !2261, !2263, !2264, !2265, !2267, !2268, !2269, !2270, !2271}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2249, file: !392, line: 117, baseType: !391, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2249, file: !392, line: 121, baseType: !828, size: 64, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2249, file: !392, line: 125, baseType: !2254, size: 64, offset: 128)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = !DISubroutineType(types: !2256)
!2256 = !{!822}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2249, file: !392, line: 130, baseType: !2258, size: 64, offset: 192)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!7}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2249, file: !392, line: 133, baseType: !2262, size: 64, offset: 256)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2249, file: !392, line: 136, baseType: !2262, size: 64, offset: 320)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2249, file: !392, line: 139, baseType: !823, size: 32, offset: 384)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2249, file: !392, line: 143, baseType: !2266, size: 32, offset: 416)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !399, line: 80, baseType: !398)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2249, file: !392, line: 146, baseType: !7, size: 32, offset: 448)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2249, file: !392, line: 147, baseType: !7, size: 32, offset: 480)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2249, file: !392, line: 148, baseType: !7, size: 32, offset: 512)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2249, file: !392, line: 151, baseType: !7, size: 32, offset: 544)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2249, file: !392, line: 152, baseType: !7, size: 32, offset: 576)
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "SA", scope: !2, file: !3, line: 50, type: !2274, isLocal: false, isDefinition: true)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssaexpand", file: !2275, line: 29, size: 256, elements: !2276)
!2275 = !DIFile(filename: "./ssaexpand.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2276 = !{!2277, !2311, !2312, !2313}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2274, file: !2275, line: 32, baseType: !2278, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "var_map", file: !2279, line: 77, baseType: !2280)
!2279 = !DIFile(filename: "./tree-ssa-live.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_var_map", file: !2279, line: 54, size: 448, elements: !2282)
!2282 = !{!2283, !2298, !2300, !2301, !2302, !2303, !2304, !2305}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "var_partition", scope: !2281, file: !2279, line: 57, baseType: !2284, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "partition", file: !2285, line: 65, baseType: !2286)
!2285 = !DIFile(filename: "./include/partition.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_def", file: !2285, line: 59, size: 256, elements: !2288)
!2288 = !{!2289, !2290}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "num_elements", scope: !2287, file: !2285, line: 62, baseType: !823, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2287, file: !2285, line: 64, baseType: !2291, size: 192, offset: 64)
!2291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2292, size: 192, elements: !934)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_elem", file: !2285, line: 46, size: 192, elements: !2293)
!2293 = !{!2294, !2295, !2297}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "class_element", scope: !2292, file: !2285, line: 50, baseType: !823, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2292, file: !2285, line: 53, baseType: !2296, size: 64, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "class_count", scope: !2292, file: !2285, line: 56, baseType: !7, size: 32, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "partition_to_view", scope: !2281, file: !2279, line: 60, baseType: !2299, size: 64, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "view_to_partition", scope: !2281, file: !2279, line: 61, baseType: !2299, size: 64, offset: 128)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "num_partitions", scope: !2281, file: !2279, line: 64, baseType: !7, size: 32, offset: 192)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "partition_size", scope: !2281, file: !2279, line: 67, baseType: !7, size: 32, offset: 224)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "num_basevars", scope: !2281, file: !2279, line: 70, baseType: !823, size: 32, offset: 256)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "partition_to_base_index", scope: !2281, file: !2279, line: 73, baseType: !2299, size: 64, offset: 320)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "basevars", scope: !2281, file: !2279, line: 76, baseType: !2306, size: 64, offset: 384)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !135, line: 184, baseType: !2308)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !135, line: 184, size: 128, elements: !2309)
!2309 = !{!2310}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2308, file: !135, line: 184, baseType: !1404, size: 128)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2274, file: !2275, line: 36, baseType: !1493, size: 64, offset: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "partition_to_pseudo", scope: !2274, file: !2275, line: 41, baseType: !2234, size: 64, offset: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "partition_has_default_def", scope: !2274, file: !2275, line: 45, baseType: !1493, size: 64, offset: 192)
!2314 = !DIGlobalVariableExpression(var: !2315, expr: !DIExpression())
!2315 = distinct !DIGlobalVariable(name: "currently_expanding_gimple_stmt", scope: !2, file: !3, line: 54, type: !894, isLocal: false, isDefinition: true)
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "stack_vars_sorted", scope: !2, file: !3, line: 183, type: !832, isLocal: true, isDefinition: true)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "has_protected_decls", scope: !2, file: !3, line: 192, type: !822, isLocal: true, isDefinition: true)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "has_short_buffer", scope: !2, file: !3, line: 196, type: !822, isLocal: true, isDefinition: true)
!2322 = !DIGlobalVariableExpression(var: !2323, expr: !DIExpression())
!2323 = distinct !DIGlobalVariable(name: "stack_vars_alloc", scope: !2, file: !3, line: 178, type: !833, isLocal: true, isDefinition: true)
!2324 = !DIGlobalVariableExpression(var: !2325, expr: !DIExpression())
!2325 = distinct !DIGlobalVariable(name: "stack_vars", scope: !2, file: !3, line: 177, type: !2224, isLocal: true, isDefinition: true)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "frame_phase", scope: !2, file: !3, line: 188, type: !823, isLocal: true, isDefinition: true)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "lab_rtx_for_bb", scope: !2, file: !3, line: 1501, type: !1496, isLocal: true, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2331 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2332 = !{i32 2, !"Dwarf Version", i32 4}
!2333 = !{i32 2, !"Debug Info Version", i32 3}
!2334 = !{i32 1, !"wchar_size", i32 4}
!2335 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2336 = distinct !DISubprogram(name: "vprintf", scope: !2337, file: !2337, line: 39, type: !2338, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2348)
!2337 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2338 = !DISubroutineType(types: !2339)
!2339 = !{!823, !2340, !2341}
!2340 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !828)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2343)
!2343 = !{!2344, !2345, !2346, !2347}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2342, file: !3, baseType: !7, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2342, file: !3, baseType: !7, size: 32, offset: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2342, file: !3, baseType: !827, size: 64, offset: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2342, file: !3, baseType: !827, size: 64, offset: 128)
!2348 = !{!2349, !2350}
!2349 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2336, file: !2337, line: 39, type: !2340)
!2350 = !DILocalVariable(name: "__arg", arg: 2, scope: !2336, file: !2337, line: 39, type: !2341)
!2351 = !DILocation(line: 0, scope: !2336)
!2352 = !DILocation(line: 41, column: 20, scope: !2336)
!2353 = !DILocation(line: 41, column: 10, scope: !2336)
!2354 = !DILocation(line: 41, column: 3, scope: !2336)
!2355 = distinct !DISubprogram(name: "getchar", scope: !2337, file: !2337, line: 47, type: !2356, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2358)
!2356 = !DISubroutineType(types: !2357)
!2357 = !{!823}
!2358 = !{}
!2359 = !DILocation(line: 49, column: 16, scope: !2355)
!2360 = !DILocation(line: 49, column: 10, scope: !2355)
!2361 = !DILocation(line: 49, column: 3, scope: !2355)
!2362 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2337, file: !2337, line: 56, type: !2363, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2415)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!823, !2365}
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2367, line: 7, baseType: !2368)
!2367 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2369, line: 49, size: 1728, elements: !2370)
!2369 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2370 = !{!2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2386, !2388, !2389, !2390, !2393, !2394, !2395, !2396, !2399, !2401, !2404, !2407, !2408, !2409, !2410, !2411}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2368, file: !2369, line: 51, baseType: !823, size: 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2368, file: !2369, line: 54, baseType: !825, size: 64, offset: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2368, file: !2369, line: 55, baseType: !825, size: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2368, file: !2369, line: 56, baseType: !825, size: 64, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2368, file: !2369, line: 57, baseType: !825, size: 64, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2368, file: !2369, line: 58, baseType: !825, size: 64, offset: 320)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2368, file: !2369, line: 59, baseType: !825, size: 64, offset: 384)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2368, file: !2369, line: 60, baseType: !825, size: 64, offset: 448)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2368, file: !2369, line: 61, baseType: !825, size: 64, offset: 512)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2368, file: !2369, line: 64, baseType: !825, size: 64, offset: 576)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2368, file: !2369, line: 65, baseType: !825, size: 64, offset: 640)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2368, file: !2369, line: 66, baseType: !825, size: 64, offset: 704)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2368, file: !2369, line: 68, baseType: !2384, size: 64, offset: 768)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2369, line: 36, flags: DIFlagFwdDecl)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2368, file: !2369, line: 70, baseType: !2387, size: 64, offset: 832)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2368, file: !2369, line: 72, baseType: !823, size: 32, offset: 896)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2368, file: !2369, line: 73, baseType: !823, size: 32, offset: 928)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2368, file: !2369, line: 74, baseType: !2391, size: 64, offset: 960)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2392, line: 152, baseType: !985)
!2392 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2368, file: !2369, line: 77, baseType: !2242, size: 16, offset: 1024)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2368, file: !2369, line: 78, baseType: !1797, size: 8, offset: 1040)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2368, file: !2369, line: 79, baseType: !1109, size: 8, offset: 1048)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2368, file: !2369, line: 81, baseType: !2397, size: 64, offset: 1088)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2369, line: 43, baseType: null)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2368, file: !2369, line: 89, baseType: !2400, size: 64, offset: 1152)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2392, line: 153, baseType: !985)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2368, file: !2369, line: 91, baseType: !2402, size: 64, offset: 1216)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2369, line: 37, flags: DIFlagFwdDecl)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2368, file: !2369, line: 92, baseType: !2405, size: 64, offset: 1280)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2369, line: 38, flags: DIFlagFwdDecl)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2368, file: !2369, line: 93, baseType: !2387, size: 64, offset: 1344)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2368, file: !2369, line: 94, baseType: !827, size: 64, offset: 1408)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2368, file: !2369, line: 95, baseType: !833, size: 64, offset: 1472)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2368, file: !2369, line: 96, baseType: !823, size: 32, offset: 1536)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2368, file: !2369, line: 98, baseType: !2412, size: 160, offset: 1568)
!2412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !826, size: 160, elements: !2413)
!2413 = !{!2414}
!2414 = !DISubrange(count: 20)
!2415 = !{!2416}
!2416 = !DILocalVariable(name: "__fp", arg: 1, scope: !2362, file: !2337, line: 56, type: !2365)
!2417 = !DILocation(line: 0, scope: !2362)
!2418 = !DILocation(line: 58, column: 10, scope: !2362)
!2419 = !DILocation(line: 58, column: 3, scope: !2362)
!2420 = distinct !DISubprogram(name: "getc_unlocked", scope: !2337, file: !2337, line: 66, type: !2363, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2421)
!2421 = !{!2422}
!2422 = !DILocalVariable(name: "__fp", arg: 1, scope: !2420, file: !2337, line: 66, type: !2365)
!2423 = !DILocation(line: 0, scope: !2420)
!2424 = !DILocation(line: 68, column: 10, scope: !2420)
!2425 = !DILocation(line: 68, column: 3, scope: !2420)
!2426 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2337, file: !2337, line: 73, type: !2356, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2358)
!2427 = !DILocation(line: 75, column: 10, scope: !2426)
!2428 = !DILocation(line: 75, column: 3, scope: !2426)
!2429 = distinct !DISubprogram(name: "putchar", scope: !2337, file: !2337, line: 82, type: !2430, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2432)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{!823, !823}
!2432 = !{!2433}
!2433 = !DILocalVariable(name: "__c", arg: 1, scope: !2429, file: !2337, line: 82, type: !823)
!2434 = !DILocation(line: 0, scope: !2429)
!2435 = !DILocation(line: 84, column: 21, scope: !2429)
!2436 = !DILocation(line: 84, column: 10, scope: !2429)
!2437 = !DILocation(line: 84, column: 3, scope: !2429)
!2438 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2337, file: !2337, line: 91, type: !2439, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2441)
!2439 = !DISubroutineType(types: !2440)
!2440 = !{!823, !823, !2365}
!2441 = !{!2442, !2443}
!2442 = !DILocalVariable(name: "__c", arg: 1, scope: !2438, file: !2337, line: 91, type: !823)
!2443 = !DILocalVariable(name: "__stream", arg: 2, scope: !2438, file: !2337, line: 91, type: !2365)
!2444 = !DILocation(line: 0, scope: !2438)
!2445 = !DILocation(line: 93, column: 10, scope: !2438)
!2446 = !DILocation(line: 93, column: 3, scope: !2438)
!2447 = distinct !DISubprogram(name: "putc_unlocked", scope: !2337, file: !2337, line: 101, type: !2439, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2448)
!2448 = !{!2449, !2450}
!2449 = !DILocalVariable(name: "__c", arg: 1, scope: !2447, file: !2337, line: 101, type: !823)
!2450 = !DILocalVariable(name: "__stream", arg: 2, scope: !2447, file: !2337, line: 101, type: !2365)
!2451 = !DILocation(line: 0, scope: !2447)
!2452 = !DILocation(line: 103, column: 10, scope: !2447)
!2453 = !DILocation(line: 103, column: 3, scope: !2447)
!2454 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2337, file: !2337, line: 108, type: !2430, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2455)
!2455 = !{!2456}
!2456 = !DILocalVariable(name: "__c", arg: 1, scope: !2454, file: !2337, line: 108, type: !823)
!2457 = !DILocation(line: 0, scope: !2454)
!2458 = !DILocation(line: 110, column: 10, scope: !2454)
!2459 = !DILocation(line: 110, column: 3, scope: !2454)
!2460 = distinct !DISubprogram(name: "getline", scope: !2337, file: !2337, line: 118, type: !2461, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2464)
!2461 = !DISubroutineType(types: !2462)
!2462 = !{!2463, !824, !832, !2365}
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2392, line: 193, baseType: !985)
!2464 = !{!2465, !2466, !2467}
!2465 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2460, file: !2337, line: 118, type: !824)
!2466 = !DILocalVariable(name: "__n", arg: 2, scope: !2460, file: !2337, line: 118, type: !832)
!2467 = !DILocalVariable(name: "__stream", arg: 3, scope: !2460, file: !2337, line: 118, type: !2365)
!2468 = !DILocation(line: 0, scope: !2460)
!2469 = !DILocation(line: 120, column: 10, scope: !2460)
!2470 = !DILocation(line: 120, column: 3, scope: !2460)
!2471 = distinct !DISubprogram(name: "feof_unlocked", scope: !2337, file: !2337, line: 128, type: !2363, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2472)
!2472 = !{!2473}
!2473 = !DILocalVariable(name: "__stream", arg: 1, scope: !2471, file: !2337, line: 128, type: !2365)
!2474 = !DILocation(line: 0, scope: !2471)
!2475 = !DILocation(line: 130, column: 10, scope: !2471)
!2476 = !DILocation(line: 130, column: 3, scope: !2471)
!2477 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2337, file: !2337, line: 135, type: !2363, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2478)
!2478 = !{!2479}
!2479 = !DILocalVariable(name: "__stream", arg: 1, scope: !2477, file: !2337, line: 135, type: !2365)
!2480 = !DILocation(line: 0, scope: !2477)
!2481 = !DILocation(line: 137, column: 10, scope: !2477)
!2482 = !DILocation(line: 137, column: 3, scope: !2477)
!2483 = distinct !DISubprogram(name: "tolower", scope: !2484, file: !2484, line: 207, type: !2430, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2485)
!2484 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2485 = !{!2486}
!2486 = !DILocalVariable(name: "__c", arg: 1, scope: !2483, file: !2484, line: 207, type: !823)
!2487 = !DILocation(line: 0, scope: !2483)
!2488 = !DILocation(line: 209, column: 22, scope: !2483)
!2489 = !DILocation(line: 209, column: 39, scope: !2483)
!2490 = !DILocation(line: 209, column: 38, scope: !2483)
!2491 = !DILocation(line: 209, column: 37, scope: !2483)
!2492 = !DILocation(line: 209, column: 10, scope: !2483)
!2493 = !DILocation(line: 209, column: 3, scope: !2483)
!2494 = distinct !DISubprogram(name: "toupper", scope: !2484, file: !2484, line: 213, type: !2430, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2495)
!2495 = !{!2496}
!2496 = !DILocalVariable(name: "__c", arg: 1, scope: !2494, file: !2484, line: 213, type: !823)
!2497 = !DILocation(line: 0, scope: !2494)
!2498 = !DILocation(line: 215, column: 22, scope: !2494)
!2499 = !DILocation(line: 215, column: 39, scope: !2494)
!2500 = !DILocation(line: 215, column: 38, scope: !2494)
!2501 = !DILocation(line: 215, column: 37, scope: !2494)
!2502 = !DILocation(line: 215, column: 10, scope: !2494)
!2503 = !DILocation(line: 215, column: 3, scope: !2494)
!2504 = distinct !DISubprogram(name: "atoi", scope: !2505, file: !2505, line: 361, type: !2506, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2508)
!2505 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!823, !828}
!2508 = !{!2509}
!2509 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2504, file: !2505, line: 361, type: !828)
!2510 = !DILocation(line: 0, scope: !2504)
!2511 = !DILocation(line: 363, column: 16, scope: !2504)
!2512 = !DILocation(line: 363, column: 10, scope: !2504)
!2513 = !DILocation(line: 363, column: 3, scope: !2504)
!2514 = distinct !DISubprogram(name: "atol", scope: !2505, file: !2505, line: 366, type: !2515, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2517)
!2515 = !DISubroutineType(types: !2516)
!2516 = !{!985, !828}
!2517 = !{!2518}
!2518 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2514, file: !2505, line: 366, type: !828)
!2519 = !DILocation(line: 0, scope: !2514)
!2520 = !DILocation(line: 368, column: 10, scope: !2514)
!2521 = !DILocation(line: 368, column: 3, scope: !2514)
!2522 = distinct !DISubprogram(name: "atoll", scope: !2505, file: !2505, line: 373, type: !2523, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2526)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!2525, !828}
!2525 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2526 = !{!2527}
!2527 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2522, file: !2505, line: 373, type: !828)
!2528 = !DILocation(line: 0, scope: !2522)
!2529 = !DILocation(line: 375, column: 10, scope: !2522)
!2530 = !DILocation(line: 375, column: 3, scope: !2522)
!2531 = distinct !DISubprogram(name: "bsearch", scope: !2532, file: !2532, line: 20, type: !2533, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2536)
!2532 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2533 = !DISubroutineType(types: !2534)
!2534 = !{!827, !1360, !1360, !833, !833, !2535}
!2535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2505, line: 808, baseType: !1364)
!2536 = !{!2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546}
!2537 = !DILocalVariable(name: "__key", arg: 1, scope: !2531, file: !2532, line: 20, type: !1360)
!2538 = !DILocalVariable(name: "__base", arg: 2, scope: !2531, file: !2532, line: 20, type: !1360)
!2539 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2531, file: !2532, line: 20, type: !833)
!2540 = !DILocalVariable(name: "__size", arg: 4, scope: !2531, file: !2532, line: 20, type: !833)
!2541 = !DILocalVariable(name: "__compar", arg: 5, scope: !2531, file: !2532, line: 21, type: !2535)
!2542 = !DILocalVariable(name: "__l", scope: !2531, file: !2532, line: 23, type: !833)
!2543 = !DILocalVariable(name: "__u", scope: !2531, file: !2532, line: 23, type: !833)
!2544 = !DILocalVariable(name: "__idx", scope: !2531, file: !2532, line: 23, type: !833)
!2545 = !DILocalVariable(name: "__p", scope: !2531, file: !2532, line: 24, type: !1360)
!2546 = !DILocalVariable(name: "__comparison", scope: !2531, file: !2532, line: 25, type: !823)
!2547 = !DILocation(line: 0, scope: !2531)
!2548 = !DILocation(line: 29, column: 3, scope: !2531)
!2549 = !DILocation(line: 27, column: 7, scope: !2531)
!2550 = !DILocation(line: 29, column: 14, scope: !2531)
!2551 = !DILocation(line: 31, column: 20, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2531, file: !2532, line: 30, column: 5)
!2553 = !DILocation(line: 31, column: 27, scope: !2552)
!2554 = !DILocation(line: 32, column: 56, scope: !2552)
!2555 = !DILocation(line: 32, column: 47, scope: !2552)
!2556 = !DILocation(line: 33, column: 22, scope: !2552)
!2557 = !DILocation(line: 34, column: 24, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2552, file: !2532, line: 34, column: 11)
!2559 = !DILocation(line: 34, column: 11, scope: !2552)
!2560 = !DILocation(line: 36, column: 29, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2558, file: !2532, line: 36, column: 16)
!2562 = !DILocation(line: 36, column: 16, scope: !2558)
!2563 = !DILocation(line: 37, column: 14, scope: !2561)
!2564 = distinct !{!2564, !2548, !2565}
!2565 = !DILocation(line: 40, column: 5, scope: !2531)
!2566 = !DILocation(line: 43, column: 1, scope: !2531)
!2567 = distinct !DISubprogram(name: "atof", scope: !2568, file: !2568, line: 25, type: !2569, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2572)
!2568 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!2571, !828}
!2571 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2572 = !{!2573}
!2573 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2567, file: !2568, line: 25, type: !828)
!2574 = !DILocation(line: 0, scope: !2567)
!2575 = !DILocation(line: 27, column: 10, scope: !2567)
!2576 = !DILocation(line: 27, column: 3, scope: !2567)
!2577 = distinct !DISubprogram(name: "strtoimax", scope: !2578, file: !2578, line: 324, type: !2579, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2585)
!2578 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!2581, !2340, !2584, !823}
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2582, line: 101, baseType: !2583)
!2582 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2392, line: 72, baseType: !985)
!2584 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !824)
!2585 = !{!2586, !2587, !2588}
!2586 = !DILocalVariable(name: "nptr", arg: 1, scope: !2577, file: !2578, line: 324, type: !2340)
!2587 = !DILocalVariable(name: "endptr", arg: 2, scope: !2577, file: !2578, line: 324, type: !2584)
!2588 = !DILocalVariable(name: "base", arg: 3, scope: !2577, file: !2578, line: 324, type: !823)
!2589 = !DILocation(line: 0, scope: !2577)
!2590 = !DILocation(line: 327, column: 10, scope: !2577)
!2591 = !DILocation(line: 327, column: 3, scope: !2577)
!2592 = distinct !DISubprogram(name: "strtoumax", scope: !2578, file: !2578, line: 336, type: !2593, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2597)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!2595, !2340, !2584, !823}
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2582, line: 102, baseType: !2596)
!2596 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2392, line: 73, baseType: !835)
!2597 = !{!2598, !2599, !2600}
!2598 = !DILocalVariable(name: "nptr", arg: 1, scope: !2592, file: !2578, line: 336, type: !2340)
!2599 = !DILocalVariable(name: "endptr", arg: 2, scope: !2592, file: !2578, line: 336, type: !2584)
!2600 = !DILocalVariable(name: "base", arg: 3, scope: !2592, file: !2578, line: 336, type: !823)
!2601 = !DILocation(line: 0, scope: !2592)
!2602 = !DILocation(line: 339, column: 10, scope: !2592)
!2603 = !DILocation(line: 339, column: 3, scope: !2592)
!2604 = distinct !DISubprogram(name: "wcstoimax", scope: !2578, file: !2578, line: 348, type: !2605, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2614)
!2605 = !DISubroutineType(types: !2606)
!2606 = !{!2581, !2607, !2611, !823}
!2607 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2608)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2610)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2578, line: 34, baseType: !823)
!2611 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2612)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2614 = !{!2615, !2616, !2617}
!2615 = !DILocalVariable(name: "nptr", arg: 1, scope: !2604, file: !2578, line: 348, type: !2607)
!2616 = !DILocalVariable(name: "endptr", arg: 2, scope: !2604, file: !2578, line: 348, type: !2611)
!2617 = !DILocalVariable(name: "base", arg: 3, scope: !2604, file: !2578, line: 348, type: !823)
!2618 = !DILocation(line: 0, scope: !2604)
!2619 = !DILocation(line: 351, column: 10, scope: !2604)
!2620 = !DILocation(line: 351, column: 3, scope: !2604)
!2621 = distinct !DISubprogram(name: "wcstoumax", scope: !2578, file: !2578, line: 362, type: !2622, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2624)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{!2595, !2607, !2611, !823}
!2624 = !{!2625, !2626, !2627}
!2625 = !DILocalVariable(name: "nptr", arg: 1, scope: !2621, file: !2578, line: 362, type: !2607)
!2626 = !DILocalVariable(name: "endptr", arg: 2, scope: !2621, file: !2578, line: 362, type: !2611)
!2627 = !DILocalVariable(name: "base", arg: 3, scope: !2621, file: !2578, line: 362, type: !823)
!2628 = !DILocation(line: 0, scope: !2621)
!2629 = !DILocation(line: 365, column: 10, scope: !2621)
!2630 = !DILocation(line: 365, column: 3, scope: !2621)
!2631 = distinct !DISubprogram(name: "stat", scope: !2632, file: !2632, line: 453, type: !2633, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2670)
!2632 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2633 = !DISubroutineType(types: !2634)
!2634 = !{!823, !828, !2635}
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2637, line: 46, size: 1152, elements: !2638)
!2637 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2638 = !{!2639, !2641, !2643, !2645, !2647, !2649, !2651, !2652, !2653, !2654, !2656, !2658, !2666, !2667, !2668}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2636, file: !2637, line: 48, baseType: !2640, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2392, line: 145, baseType: !835)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2636, file: !2637, line: 53, baseType: !2642, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2392, line: 148, baseType: !835)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2636, file: !2637, line: 61, baseType: !2644, size: 64, offset: 128)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2392, line: 151, baseType: !835)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2636, file: !2637, line: 62, baseType: !2646, size: 32, offset: 192)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2392, line: 150, baseType: !7)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2636, file: !2637, line: 64, baseType: !2648, size: 32, offset: 224)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2392, line: 146, baseType: !7)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2636, file: !2637, line: 65, baseType: !2650, size: 32, offset: 256)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2392, line: 147, baseType: !7)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2636, file: !2637, line: 67, baseType: !823, size: 32, offset: 288)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2636, file: !2637, line: 69, baseType: !2640, size: 64, offset: 320)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2636, file: !2637, line: 74, baseType: !2391, size: 64, offset: 384)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2636, file: !2637, line: 78, baseType: !2655, size: 64, offset: 448)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2392, line: 174, baseType: !985)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2636, file: !2637, line: 80, baseType: !2657, size: 64, offset: 512)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2392, line: 179, baseType: !985)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2636, file: !2637, line: 91, baseType: !2659, size: 128, offset: 576)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2660, line: 10, size: 128, elements: !2661)
!2660 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2661 = !{!2662, !2664}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2659, file: !2660, line: 12, baseType: !2663, size: 64)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2392, line: 160, baseType: !985)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2659, file: !2660, line: 16, baseType: !2665, size: 64, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2392, line: 196, baseType: !985)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2636, file: !2637, line: 92, baseType: !2659, size: 128, offset: 704)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2636, file: !2637, line: 93, baseType: !2659, size: 128, offset: 832)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2636, file: !2637, line: 106, baseType: !2669, size: 192, offset: 960)
!2669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2665, size: 192, elements: !1085)
!2670 = !{!2671, !2672}
!2671 = !DILocalVariable(name: "__path", arg: 1, scope: !2631, file: !2632, line: 453, type: !828)
!2672 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2631, file: !2632, line: 453, type: !2635)
!2673 = !DILocation(line: 0, scope: !2631)
!2674 = !DILocation(line: 455, column: 10, scope: !2631)
!2675 = !DILocation(line: 455, column: 3, scope: !2631)
!2676 = distinct !DISubprogram(name: "lstat", scope: !2632, file: !2632, line: 460, type: !2633, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2677)
!2677 = !{!2678, !2679}
!2678 = !DILocalVariable(name: "__path", arg: 1, scope: !2676, file: !2632, line: 460, type: !828)
!2679 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2676, file: !2632, line: 460, type: !2635)
!2680 = !DILocation(line: 0, scope: !2676)
!2681 = !DILocation(line: 462, column: 10, scope: !2676)
!2682 = !DILocation(line: 462, column: 3, scope: !2676)
!2683 = distinct !DISubprogram(name: "fstat", scope: !2632, file: !2632, line: 467, type: !2684, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2686)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{!823, !823, !2635}
!2686 = !{!2687, !2688}
!2687 = !DILocalVariable(name: "__fd", arg: 1, scope: !2683, file: !2632, line: 467, type: !823)
!2688 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2683, file: !2632, line: 467, type: !2635)
!2689 = !DILocation(line: 0, scope: !2683)
!2690 = !DILocation(line: 469, column: 10, scope: !2683)
!2691 = !DILocation(line: 469, column: 3, scope: !2683)
!2692 = distinct !DISubprogram(name: "fstatat", scope: !2632, file: !2632, line: 474, type: !2693, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2695)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!823, !823, !828, !2635, !823}
!2695 = !{!2696, !2697, !2698, !2699}
!2696 = !DILocalVariable(name: "__fd", arg: 1, scope: !2692, file: !2632, line: 474, type: !823)
!2697 = !DILocalVariable(name: "__filename", arg: 2, scope: !2692, file: !2632, line: 474, type: !828)
!2698 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2692, file: !2632, line: 474, type: !2635)
!2699 = !DILocalVariable(name: "__flag", arg: 4, scope: !2692, file: !2632, line: 474, type: !823)
!2700 = !DILocation(line: 0, scope: !2692)
!2701 = !DILocation(line: 477, column: 10, scope: !2692)
!2702 = !DILocation(line: 477, column: 3, scope: !2692)
!2703 = distinct !DISubprogram(name: "mknod", scope: !2632, file: !2632, line: 483, type: !2704, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2706)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{!823, !828, !2646, !2640}
!2706 = !{!2707, !2708, !2709}
!2707 = !DILocalVariable(name: "__path", arg: 1, scope: !2703, file: !2632, line: 483, type: !828)
!2708 = !DILocalVariable(name: "__mode", arg: 2, scope: !2703, file: !2632, line: 483, type: !2646)
!2709 = !DILocalVariable(name: "__dev", arg: 3, scope: !2703, file: !2632, line: 483, type: !2640)
!2710 = !DILocation(line: 0, scope: !2703)
!2711 = !DILocation(line: 485, column: 10, scope: !2703)
!2712 = !DILocation(line: 485, column: 3, scope: !2703)
!2713 = distinct !DISubprogram(name: "mknodat", scope: !2632, file: !2632, line: 491, type: !2714, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2716)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!823, !823, !828, !2646, !2640}
!2716 = !{!2717, !2718, !2719, !2720}
!2717 = !DILocalVariable(name: "__fd", arg: 1, scope: !2713, file: !2632, line: 491, type: !823)
!2718 = !DILocalVariable(name: "__path", arg: 2, scope: !2713, file: !2632, line: 491, type: !828)
!2719 = !DILocalVariable(name: "__mode", arg: 3, scope: !2713, file: !2632, line: 491, type: !2646)
!2720 = !DILocalVariable(name: "__dev", arg: 4, scope: !2713, file: !2632, line: 491, type: !2640)
!2721 = !DILocation(line: 0, scope: !2713)
!2722 = !DILocation(line: 494, column: 10, scope: !2713)
!2723 = !DILocation(line: 494, column: 3, scope: !2713)
!2724 = distinct !DISubprogram(name: "stat64", scope: !2632, file: !2632, line: 502, type: !2725, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2747)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!823, !828, !2727}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2637, line: 119, size: 1152, elements: !2729)
!2729 = !{!2730, !2731, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2743, !2744, !2745, !2746}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2728, file: !2637, line: 121, baseType: !2640, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2728, file: !2637, line: 123, baseType: !2732, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2392, line: 149, baseType: !835)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2728, file: !2637, line: 124, baseType: !2644, size: 64, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2728, file: !2637, line: 125, baseType: !2646, size: 32, offset: 192)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2728, file: !2637, line: 132, baseType: !2648, size: 32, offset: 224)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2728, file: !2637, line: 133, baseType: !2650, size: 32, offset: 256)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2728, file: !2637, line: 135, baseType: !823, size: 32, offset: 288)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2728, file: !2637, line: 136, baseType: !2640, size: 64, offset: 320)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2728, file: !2637, line: 137, baseType: !2391, size: 64, offset: 384)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2728, file: !2637, line: 143, baseType: !2655, size: 64, offset: 448)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2728, file: !2637, line: 144, baseType: !2742, size: 64, offset: 512)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2392, line: 180, baseType: !985)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2728, file: !2637, line: 152, baseType: !2659, size: 128, offset: 576)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2728, file: !2637, line: 153, baseType: !2659, size: 128, offset: 704)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2728, file: !2637, line: 154, baseType: !2659, size: 128, offset: 832)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2728, file: !2637, line: 164, baseType: !2669, size: 192, offset: 960)
!2747 = !{!2748, !2749}
!2748 = !DILocalVariable(name: "__path", arg: 1, scope: !2724, file: !2632, line: 502, type: !828)
!2749 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2724, file: !2632, line: 502, type: !2727)
!2750 = !DILocation(line: 0, scope: !2724)
!2751 = !DILocation(line: 504, column: 10, scope: !2724)
!2752 = !DILocation(line: 504, column: 3, scope: !2724)
!2753 = distinct !DISubprogram(name: "lstat64", scope: !2632, file: !2632, line: 509, type: !2725, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2754)
!2754 = !{!2755, !2756}
!2755 = !DILocalVariable(name: "__path", arg: 1, scope: !2753, file: !2632, line: 509, type: !828)
!2756 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2753, file: !2632, line: 509, type: !2727)
!2757 = !DILocation(line: 0, scope: !2753)
!2758 = !DILocation(line: 511, column: 10, scope: !2753)
!2759 = !DILocation(line: 511, column: 3, scope: !2753)
!2760 = distinct !DISubprogram(name: "fstat64", scope: !2632, file: !2632, line: 516, type: !2761, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2763)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{!823, !823, !2727}
!2763 = !{!2764, !2765}
!2764 = !DILocalVariable(name: "__fd", arg: 1, scope: !2760, file: !2632, line: 516, type: !823)
!2765 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2760, file: !2632, line: 516, type: !2727)
!2766 = !DILocation(line: 0, scope: !2760)
!2767 = !DILocation(line: 518, column: 10, scope: !2760)
!2768 = !DILocation(line: 518, column: 3, scope: !2760)
!2769 = distinct !DISubprogram(name: "fstatat64", scope: !2632, file: !2632, line: 523, type: !2770, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2772)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!823, !823, !828, !2727, !823}
!2772 = !{!2773, !2774, !2775, !2776}
!2773 = !DILocalVariable(name: "__fd", arg: 1, scope: !2769, file: !2632, line: 523, type: !823)
!2774 = !DILocalVariable(name: "__filename", arg: 2, scope: !2769, file: !2632, line: 523, type: !828)
!2775 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2769, file: !2632, line: 523, type: !2727)
!2776 = !DILocalVariable(name: "__flag", arg: 4, scope: !2769, file: !2632, line: 523, type: !823)
!2777 = !DILocation(line: 0, scope: !2769)
!2778 = !DILocation(line: 526, column: 10, scope: !2769)
!2779 = !DILocation(line: 526, column: 3, scope: !2769)
!2780 = distinct !DISubprogram(name: "gimple_assign_rhs_to_tree", scope: !3, file: !3, line: 60, type: !2781, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2783)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{!1014, !894}
!2783 = !{!2784, !2785, !2786}
!2784 = !DILocalVariable(name: "stmt", arg: 1, scope: !2780, file: !3, line: 60, type: !894)
!2785 = !DILocalVariable(name: "t", scope: !2780, file: !3, line: 62, type: !1014)
!2786 = !DILocalVariable(name: "grhs_class", scope: !2780, file: !3, line: 63, type: !384)
!2787 = !DILocation(line: 0, scope: !2780)
!2788 = !DILocation(line: 65, column: 38, scope: !2780)
!2789 = !DILocation(line: 65, column: 16, scope: !2780)
!2790 = !DILocation(line: 67, column: 7, scope: !2780)
!2791 = !DILocation(line: 68, column: 9, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 67, column: 7)
!2793 = !DILocation(line: 68, column: 5, scope: !2792)
!2794 = !DILocation(line: 73, column: 9, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 72, column: 12)
!2796 = !DILocation(line: 73, column: 5, scope: !2795)
!2797 = !DILocation(line: 78, column: 11, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2799, file: !3, line: 77, column: 5)
!2799 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 76, column: 12)
!2800 = !DILocation(line: 80, column: 12, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 80, column: 11)
!2802 = !DILocation(line: 80, column: 42, scope: !2801)
!2803 = !DILocation(line: 80, column: 39, scope: !2801)
!2804 = !DILocation(line: 81, column: 5, scope: !2801)
!2805 = !DILocation(line: 81, column: 8, scope: !2801)
!2806 = !DILocation(line: 81, column: 34, scope: !2801)
!2807 = !DILocation(line: 81, column: 31, scope: !2801)
!2808 = !DILocation(line: 82, column: 4, scope: !2801)
!2809 = !DILocation(line: 82, column: 8, scope: !2801)
!2810 = !DILocation(line: 83, column: 11, scope: !2801)
!2811 = !DILocation(line: 83, column: 8, scope: !2801)
!2812 = !DILocation(line: 84, column: 11, scope: !2801)
!2813 = !DILocation(line: 85, column: 8, scope: !2801)
!2814 = !DILocation(line: 85, column: 11, scope: !2801)
!2815 = !DILocation(line: 85, column: 34, scope: !2801)
!2816 = !DILocation(line: 85, column: 31, scope: !2801)
!2817 = !DILocation(line: 80, column: 11, scope: !2798)
!2818 = !DILocation(line: 86, column: 6, scope: !2801)
!2819 = !DILocation(line: 86, column: 2, scope: !2801)
!2820 = !DILocation(line: 89, column: 5, scope: !2799)
!2821 = !DILocation(line: 0, scope: !2792)
!2822 = !DILocation(line: 91, column: 7, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 91, column: 7)
!2824 = !DILocation(line: 91, column: 37, scope: !2823)
!2825 = !DILocation(line: 91, column: 34, scope: !2823)
!2826 = !DILocation(line: 91, column: 7, scope: !2780)
!2827 = !DILocation(line: 92, column: 5, scope: !2823)
!2828 = !DILocation(line: 93, column: 7, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 93, column: 7)
!2830 = !DILocation(line: 93, column: 30, scope: !2829)
!2831 = !DILocation(line: 93, column: 27, scope: !2829)
!2832 = !DILocation(line: 93, column: 60, scope: !2829)
!2833 = !DILocation(line: 93, column: 7, scope: !2780)
!2834 = !DILocation(line: 94, column: 22, scope: !2829)
!2835 = !DILocation(line: 94, column: 5, scope: !2829)
!2836 = !DILocation(line: 94, column: 20, scope: !2829)
!2837 = !DILocation(line: 96, column: 3, scope: !2780)
!2838 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !385, file: !385, line: 1686, type: !2839, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2841)
!2839 = !DISubroutineType(types: !2840)
!2840 = !{!384, !134}
!2841 = !{!2842}
!2842 = !DILocalVariable(name: "code", arg: 1, scope: !2838, file: !385, line: 1686, type: !134)
!2843 = !DILocation(line: 0, scope: !2838)
!2844 = !DILocation(line: 1688, column: 34, scope: !2838)
!2845 = !DILocation(line: 1688, column: 10, scope: !2838)
!2846 = !DILocation(line: 1688, column: 3, scope: !2838)
!2847 = distinct !DISubprogram(name: "gimple_expr_code", scope: !385, file: !385, line: 1438, type: !2848, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2851)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!134, !2850}
!2850 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !874, line: 60, baseType: !2222)
!2851 = !{!2852, !2853}
!2852 = !DILocalVariable(name: "stmt", arg: 1, scope: !2847, file: !385, line: 1438, type: !2850)
!2853 = !DILocalVariable(name: "code", scope: !2847, file: !385, line: 1440, type: !574)
!2854 = !DILocation(line: 0, scope: !2847)
!2855 = !DILocation(line: 1440, column: 27, scope: !2847)
!2856 = !DILocation(line: 1441, column: 29, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2847, file: !385, line: 1441, column: 7)
!2858 = !DILocation(line: 1442, column: 42, scope: !2857)
!2859 = !DILocation(line: 1442, column: 5, scope: !2857)
!2860 = !DILocation(line: 1446, column: 5, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2857, file: !385, line: 1443, column: 12)
!2862 = !DILocation(line: 1448, column: 5, scope: !2847)
!2863 = !DILocation(line: 1450, column: 1, scope: !2847)
!2864 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !385, file: !385, line: 1815, type: !2848, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2865)
!2865 = !{!2866, !2867}
!2866 = !DILocalVariable(name: "gs", arg: 1, scope: !2864, file: !385, line: 1815, type: !2850)
!2867 = !DILocalVariable(name: "code", scope: !2864, file: !385, line: 1817, type: !134)
!2868 = !DILocation(line: 0, scope: !2864)
!2869 = !DILocation(line: 1820, column: 10, scope: !2864)
!2870 = !DILocation(line: 1821, column: 7, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2864, file: !385, line: 1821, column: 7)
!2872 = !DILocation(line: 1821, column: 35, scope: !2871)
!2873 = !DILocation(line: 1821, column: 7, scope: !2864)
!2874 = !DILocation(line: 1822, column: 12, scope: !2871)
!2875 = !DILocation(line: 1822, column: 5, scope: !2871)
!2876 = !DILocation(line: 1824, column: 3, scope: !2864)
!2877 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !385, file: !385, line: 1694, type: !2878, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2880)
!2878 = !DISubroutineType(types: !2879)
!2879 = !{!1014, !2850}
!2880 = !{!2881}
!2881 = !DILocalVariable(name: "gs", arg: 1, scope: !2877, file: !385, line: 1694, type: !2850)
!2882 = !DILocation(line: 0, scope: !2877)
!2883 = !DILocation(line: 1697, column: 10, scope: !2877)
!2884 = !DILocation(line: 1697, column: 3, scope: !2877)
!2885 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !385, file: !385, line: 1727, type: !2878, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2886)
!2886 = !{!2887}
!2887 = !DILocalVariable(name: "gs", arg: 1, scope: !2885, file: !385, line: 1727, type: !2850)
!2888 = !DILocation(line: 0, scope: !2885)
!2889 = !DILocation(line: 1730, column: 10, scope: !2885)
!2890 = !DILocation(line: 1730, column: 3, scope: !2885)
!2891 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !385, file: !385, line: 1759, type: !2878, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2892)
!2892 = !{!2893}
!2893 = !DILocalVariable(name: "gs", arg: 1, scope: !2891, file: !385, line: 1759, type: !2850)
!2894 = !DILocation(line: 0, scope: !2891)
!2895 = !DILocation(line: 1763, column: 7, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2891, file: !385, line: 1763, column: 7)
!2897 = !DILocation(line: 1763, column: 27, scope: !2896)
!2898 = !DILocation(line: 1763, column: 7, scope: !2891)
!2899 = !DILocation(line: 1764, column: 12, scope: !2896)
!2900 = !DILocation(line: 1764, column: 5, scope: !2896)
!2901 = !DILocation(line: 0, scope: !2896)
!2902 = !DILocation(line: 1767, column: 1, scope: !2891)
!2903 = distinct !DISubprogram(name: "gimple_has_location", scope: !385, file: !385, line: 1165, type: !2904, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2906)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!822, !2850}
!2906 = !{!2907}
!2907 = !DILocalVariable(name: "g", arg: 1, scope: !2903, file: !385, line: 1165, type: !2850)
!2908 = !DILocation(line: 0, scope: !2903)
!2909 = !DILocation(line: 1167, column: 10, scope: !2903)
!2910 = !DILocation(line: 1167, column: 30, scope: !2903)
!2911 = !DILocation(line: 1167, column: 3, scope: !2903)
!2912 = distinct !DISubprogram(name: "gimple_location", scope: !385, file: !385, line: 1139, type: !2913, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2915)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{!853, !2850}
!2915 = !{!2916}
!2916 = !DILocalVariable(name: "g", arg: 1, scope: !2912, file: !385, line: 1139, type: !2850)
!2917 = !DILocation(line: 0, scope: !2912)
!2918 = !DILocation(line: 1141, column: 20, scope: !2912)
!2919 = !DILocation(line: 1141, column: 3, scope: !2912)
!2920 = distinct !DISubprogram(name: "gimple_block", scope: !385, file: !385, line: 1121, type: !2878, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2921)
!2921 = !{!2922}
!2922 = !DILocalVariable(name: "g", arg: 1, scope: !2920, file: !385, line: 1121, type: !2850)
!2923 = !DILocation(line: 0, scope: !2920)
!2924 = !DILocation(line: 1123, column: 20, scope: !2920)
!2925 = !DILocation(line: 1123, column: 3, scope: !2920)
!2926 = distinct !DISubprogram(name: "estimated_stack_frame_size", scope: !3, file: !3, line: 1259, type: !2927, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2929)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{!985}
!2929 = !{!2930, !2931, !2932, !2933, !2934}
!2930 = !DILocalVariable(name: "size", scope: !2926, file: !3, line: 1261, type: !985)
!2931 = !DILocalVariable(name: "i", scope: !2926, file: !3, line: 1262, type: !833)
!2932 = !DILocalVariable(name: "t", scope: !2926, file: !3, line: 1263, type: !1014)
!2933 = !DILocalVariable(name: "outer_block", scope: !2926, file: !3, line: 1263, type: !1014)
!2934 = !DILocalVariable(name: "var", scope: !2935, file: !3, line: 1269, type: !1014)
!2935 = distinct !DILexicalBlock(scope: !2936, file: !3, line: 1268, column: 5)
!2936 = distinct !DILexicalBlock(scope: !2937, file: !3, line: 1267, column: 3)
!2937 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 1267, column: 3)
!2938 = !DILocation(line: 0, scope: !2926)
!2939 = !DILocation(line: 1263, column: 25, scope: !2926)
!2940 = !DILocation(line: 1265, column: 3, scope: !2926)
!2941 = !DILocation(line: 1267, column: 12, scope: !2937)
!2942 = !DILocation(line: 1267, column: 18, scope: !2937)
!2943 = !DILocation(line: 1267, column: 8, scope: !2937)
!2944 = !DILocation(line: 0, scope: !2937)
!2945 = !DILocation(line: 1267, column: 3, scope: !2937)
!2946 = !DILocation(line: 1269, column: 18, scope: !2935)
!2947 = !DILocation(line: 0, scope: !2935)
!2948 = !DILocation(line: 1271, column: 11, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 1271, column: 11)
!2950 = !DILocation(line: 1271, column: 11, scope: !2935)
!2951 = !DILocation(line: 1272, column: 17, scope: !2949)
!2952 = !DILocation(line: 1272, column: 14, scope: !2949)
!2953 = !DILocation(line: 1273, column: 23, scope: !2935)
!2954 = !DILocation(line: 1272, column: 9, scope: !2949)
!2955 = !DILocation(line: 1267, column: 38, scope: !2936)
!2956 = !DILocation(line: 1267, column: 3, scope: !2936)
!2957 = distinct !{!2957, !2945, !2958}
!2958 = !DILocation(line: 1274, column: 5, scope: !2937)
!2959 = !DILocation(line: 1275, column: 11, scope: !2926)
!2960 = !DILocation(line: 1275, column: 8, scope: !2926)
!2961 = !DILocation(line: 1277, column: 7, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 1277, column: 7)
!2963 = !DILocation(line: 1277, column: 22, scope: !2962)
!2964 = !DILocation(line: 1277, column: 7, scope: !2926)
!2965 = !DILocation(line: 1280, column: 27, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 1278, column: 5)
!2967 = !DILocation(line: 1280, column: 25, scope: !2966)
!2968 = !DILocation(line: 1281, column: 12, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1281, column: 7)
!2970 = !DILocation(line: 0, scope: !2969)
!2971 = !DILocation(line: 1281, column: 23, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 1281, column: 7)
!2973 = !DILocation(line: 1281, column: 21, scope: !2972)
!2974 = !DILocation(line: 1281, column: 7, scope: !2969)
!2975 = !DILocation(line: 1282, column: 2, scope: !2972)
!2976 = !DILocation(line: 1282, column: 23, scope: !2972)
!2977 = !DILocation(line: 1281, column: 39, scope: !2972)
!2978 = !DILocation(line: 1281, column: 7, scope: !2972)
!2979 = distinct !{!2979, !2974, !2980}
!2980 = !DILocation(line: 1282, column: 25, scope: !2969)
!2981 = !DILocation(line: 1283, column: 15, scope: !2966)
!2982 = !DILocation(line: 1283, column: 12, scope: !2966)
!2983 = !DILocation(line: 1284, column: 7, scope: !2966)
!2984 = !DILocation(line: 1285, column: 5, scope: !2966)
!2985 = !DILocation(line: 1287, column: 3, scope: !2926)
!2986 = distinct !DISubprogram(name: "init_vars_expansion", scope: !3, file: !3, line: 1222, type: !2987, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2989)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{null}
!2989 = !{!2990}
!2990 = !DILocalVariable(name: "t", scope: !2986, file: !3, line: 1224, type: !1014)
!2991 = !DILocation(line: 1226, column: 12, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 1226, column: 3)
!2993 = !DILocation(line: 1226, column: 18, scope: !2992)
!2994 = !DILocation(line: 1226, column: 8, scope: !2992)
!2995 = !DILocation(line: 0, scope: !2992)
!2996 = !DILocation(line: 0, scope: !2986)
!2997 = !DILocation(line: 1226, column: 3, scope: !2992)
!2998 = !DILocation(line: 1227, column: 5, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 1226, column: 3)
!3000 = !DILocation(line: 1227, column: 32, scope: !2999)
!3001 = !DILocation(line: 1226, column: 38, scope: !2999)
!3002 = !DILocation(line: 1226, column: 3, scope: !2999)
!3003 = distinct !{!3003, !2997, !3004}
!3004 = !DILocation(line: 1227, column: 34, scope: !2992)
!3005 = !DILocation(line: 1230, column: 20, scope: !2986)
!3006 = !DILocation(line: 1230, column: 3, scope: !2986)
!3007 = !DILocation(line: 1233, column: 23, scope: !2986)
!3008 = !DILocation(line: 1234, column: 20, scope: !2986)
!3009 = !DILocation(line: 1235, column: 1, scope: !2986)
!3010 = distinct !DISubprogram(name: "expand_one_var", scope: !3, file: !3, line: 917, type: !3011, scopeLine: 918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3013)
!3011 = !DISubroutineType(types: !3012)
!3012 = !{!985, !1014, !822, !822}
!3013 = !{!3014, !3015, !3016, !3017, !3018}
!3014 = !DILocalVariable(name: "var", arg: 1, scope: !3010, file: !3, line: 917, type: !1014)
!3015 = !DILocalVariable(name: "toplevel", arg: 2, scope: !3010, file: !3, line: 917, type: !822)
!3016 = !DILocalVariable(name: "really_expand", arg: 3, scope: !3010, file: !3, line: 917, type: !822)
!3017 = !DILocalVariable(name: "origvar", scope: !3010, file: !3, line: 919, type: !1014)
!3018 = !DILocalVariable(name: "align", scope: !3019, file: !3, line: 926, type: !7)
!3019 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 925, column: 5)
!3020 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 922, column: 7)
!3021 = !DILocation(line: 0, scope: !3010)
!3022 = !DILocation(line: 920, column: 9, scope: !3010)
!3023 = !DILocation(line: 923, column: 10, scope: !3020)
!3024 = !DILocation(line: 923, column: 29, scope: !3020)
!3025 = !DILocation(line: 923, column: 26, scope: !3020)
!3026 = !DILocation(line: 924, column: 7, scope: !3020)
!3027 = !DILocation(line: 924, column: 10, scope: !3020)
!3028 = !DILocation(line: 924, column: 26, scope: !3020)
!3029 = !DILocation(line: 922, column: 7, scope: !3010)
!3030 = !DILocation(line: 933, column: 11, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 933, column: 11)
!3032 = !DILocation(line: 933, column: 29, scope: !3031)
!3033 = !DILocation(line: 933, column: 32, scope: !3031)
!3034 = !DILocation(line: 933, column: 11, scope: !3019)
!3035 = !DILocation(line: 934, column: 10, scope: !3031)
!3036 = !DILocation(line: 0, scope: !3031)
!3037 = !DILocation(line: 0, scope: !3019)
!3038 = !DILocation(line: 934, column: 2, scope: !3031)
!3039 = !DILocation(line: 938, column: 10, scope: !3031)
!3040 = !DILocation(line: 940, column: 17, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 940, column: 11)
!3042 = !DILocation(line: 940, column: 43, scope: !3041)
!3043 = !DILocation(line: 940, column: 11, scope: !3019)
!3044 = !DILocation(line: 944, column: 11, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 941, column: 9)
!3046 = !DILocation(line: 945, column: 36, scope: !3045)
!3047 = !DILocation(line: 946, column: 2, scope: !3045)
!3048 = !DILocation(line: 949, column: 7, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 949, column: 7)
!3050 = !DILocation(line: 949, column: 27, scope: !3049)
!3051 = !DILocation(line: 949, column: 7, scope: !3010)
!3052 = !DILocation(line: 951, column: 7, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 950, column: 5)
!3054 = !DILocation(line: 959, column: 7, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 959, column: 7)
!3056 = !DILocation(line: 959, column: 23, scope: !3055)
!3057 = !DILocation(line: 959, column: 35, scope: !3055)
!3058 = !DILocation(line: 959, column: 38, scope: !3055)
!3059 = !DILocation(line: 959, column: 58, scope: !3055)
!3060 = !DILocation(line: 959, column: 7, scope: !3010)
!3061 = !DILocation(line: 961, column: 12, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 961, column: 12)
!3063 = !DILocation(line: 961, column: 12, scope: !3055)
!3064 = !DILocation(line: 963, column: 12, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 963, column: 12)
!3066 = !DILocation(line: 963, column: 12, scope: !3062)
!3067 = !DILocation(line: 965, column: 12, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 965, column: 12)
!3069 = !DILocation(line: 965, column: 12, scope: !3065)
!3070 = !DILocation(line: 967, column: 12, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 967, column: 12)
!3072 = !DILocation(line: 967, column: 32, scope: !3071)
!3073 = !DILocation(line: 967, column: 44, scope: !3071)
!3074 = !DILocation(line: 967, column: 47, scope: !3071)
!3075 = !DILocation(line: 967, column: 12, scope: !3068)
!3076 = !DILocation(line: 969, column: 12, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3071, file: !3, line: 969, column: 12)
!3078 = !DILocation(line: 969, column: 31, scope: !3077)
!3079 = !DILocation(line: 969, column: 28, scope: !3077)
!3080 = !DILocation(line: 969, column: 12, scope: !3071)
!3081 = !DILocation(line: 971, column: 11, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 971, column: 11)
!3083 = distinct !DILexicalBlock(scope: !3077, file: !3, line: 970, column: 5)
!3084 = !DILocation(line: 971, column: 11, scope: !3083)
!3085 = !DILocation(line: 972, column: 9, scope: !3082)
!3086 = !DILocation(line: 974, column: 40, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3077, file: !3, line: 974, column: 12)
!3088 = !DILocation(line: 974, column: 43, scope: !3087)
!3089 = !DILocation(line: 974, column: 12, scope: !3077)
!3090 = !DILocation(line: 976, column: 11, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 976, column: 11)
!3092 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 975, column: 5)
!3093 = !DILocation(line: 976, column: 11, scope: !3092)
!3094 = !DILocation(line: 977, column: 9, scope: !3091)
!3095 = !DILocation(line: 979, column: 12, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 979, column: 12)
!3097 = !DILocation(line: 979, column: 12, scope: !3087)
!3098 = !DILocation(line: 981, column: 11, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 981, column: 11)
!3100 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 980, column: 5)
!3101 = !DILocation(line: 981, column: 11, scope: !3100)
!3102 = !DILocation(line: 982, column: 9, scope: !3099)
!3103 = !DILocation(line: 984, column: 28, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 984, column: 12)
!3105 = !DILocation(line: 984, column: 13, scope: !3104)
!3106 = !DILocation(line: 984, column: 12, scope: !3096)
!3107 = !DILocation(line: 986, column: 11, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 986, column: 11)
!3109 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 985, column: 5)
!3110 = !DILocation(line: 986, column: 11, scope: !3109)
!3111 = !DILocation(line: 988, column: 4, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3108, file: !3, line: 987, column: 2)
!3113 = !DILocation(line: 989, column: 4, scope: !3112)
!3114 = !DILocation(line: 990, column: 2, scope: !3112)
!3115 = !DILocation(line: 992, column: 12, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 992, column: 12)
!3117 = !DILocation(line: 992, column: 12, scope: !3104)
!3118 = !DILocation(line: 993, column: 5, scope: !3116)
!3119 = !DILocation(line: 996, column: 11, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 996, column: 11)
!3121 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 995, column: 5)
!3122 = !DILocation(line: 996, column: 11, scope: !3121)
!3123 = !DILocation(line: 997, column: 9, scope: !3120)
!3124 = !DILocation(line: 998, column: 28, scope: !3121)
!3125 = !DILocation(line: 998, column: 14, scope: !3121)
!3126 = !DILocation(line: 998, column: 7, scope: !3121)
!3127 = !DILocation(line: 1001, column: 1, scope: !3010)
!3128 = distinct !DISubprogram(name: "account_used_vars_for_block", scope: !3, file: !3, line: 1203, type: !3129, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3131)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{!985, !1014, !822}
!3131 = !{!3132, !3133, !3134, !3135}
!3132 = !DILocalVariable(name: "block", arg: 1, scope: !3128, file: !3, line: 1203, type: !1014)
!3133 = !DILocalVariable(name: "toplevel", arg: 2, scope: !3128, file: !3, line: 1203, type: !822)
!3134 = !DILocalVariable(name: "t", scope: !3128, file: !3, line: 1205, type: !1014)
!3135 = !DILocalVariable(name: "size", scope: !3128, file: !3, line: 1206, type: !985)
!3136 = !DILocation(line: 0, scope: !3128)
!3137 = !DILocation(line: 1209, column: 12, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 1209, column: 3)
!3139 = !DILocation(line: 1209, column: 8, scope: !3138)
!3140 = !DILocation(line: 0, scope: !3138)
!3141 = !DILocation(line: 1209, column: 3, scope: !3138)
!3142 = !DILocation(line: 1210, column: 9, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3144, file: !3, line: 1210, column: 9)
!3144 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 1209, column: 3)
!3145 = !DILocation(line: 1210, column: 9, scope: !3144)
!3146 = !DILocation(line: 1211, column: 15, scope: !3143)
!3147 = !DILocation(line: 1211, column: 12, scope: !3143)
!3148 = !DILocation(line: 1211, column: 7, scope: !3143)
!3149 = !DILocation(line: 1209, column: 40, scope: !3144)
!3150 = !DILocation(line: 1209, column: 3, scope: !3144)
!3151 = distinct !{!3151, !3141, !3152}
!3152 = !DILocation(line: 1211, column: 49, scope: !3138)
!3153 = !DILocation(line: 1214, column: 12, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 1214, column: 3)
!3155 = !DILocation(line: 1214, column: 8, scope: !3154)
!3156 = !DILocation(line: 0, scope: !3154)
!3157 = !DILocation(line: 1214, column: 3, scope: !3154)
!3158 = !DILocation(line: 1215, column: 13, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 1214, column: 3)
!3160 = !DILocation(line: 1215, column: 10, scope: !3159)
!3161 = !DILocation(line: 1214, column: 45, scope: !3159)
!3162 = !DILocation(line: 1214, column: 3, scope: !3159)
!3163 = distinct !{!3163, !3157, !3164}
!3164 = !DILocation(line: 1215, column: 50, scope: !3154)
!3165 = !DILocation(line: 1217, column: 3, scope: !3128)
!3166 = distinct !DISubprogram(name: "account_stack_vars", scope: !3, file: !3, line: 789, type: !2927, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3167)
!3167 = !{!3168, !3169, !3170, !3171, !3172}
!3168 = !DILocalVariable(name: "si", scope: !3166, file: !3, line: 791, type: !833)
!3169 = !DILocalVariable(name: "j", scope: !3166, file: !3, line: 791, type: !833)
!3170 = !DILocalVariable(name: "i", scope: !3166, file: !3, line: 791, type: !833)
!3171 = !DILocalVariable(name: "n", scope: !3166, file: !3, line: 791, type: !833)
!3172 = !DILocalVariable(name: "size", scope: !3166, file: !3, line: 792, type: !985)
!3173 = !DILocation(line: 791, column: 24, scope: !3166)
!3174 = !DILocation(line: 0, scope: !3166)
!3175 = !DILocation(line: 794, column: 8, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 794, column: 3)
!3177 = !DILocation(line: 792, column: 17, scope: !3166)
!3178 = !DILocation(line: 0, scope: !3176)
!3179 = !DILocation(line: 794, column: 19, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3176, file: !3, line: 794, column: 3)
!3181 = !DILocation(line: 794, column: 3, scope: !3176)
!3182 = !DILocation(line: 796, column: 11, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3180, file: !3, line: 795, column: 5)
!3184 = !DILocation(line: 799, column: 11, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 799, column: 11)
!3186 = !DILocation(line: 799, column: 25, scope: !3185)
!3187 = !DILocation(line: 799, column: 40, scope: !3185)
!3188 = !DILocation(line: 799, column: 11, scope: !3183)
!3189 = !DILocation(line: 802, column: 29, scope: !3183)
!3190 = !DILocation(line: 803, column: 12, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 803, column: 7)
!3192 = !DILocation(line: 0, scope: !3191)
!3193 = !DILocation(line: 803, column: 21, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 803, column: 7)
!3195 = !DILocation(line: 803, column: 7, scope: !3191)
!3196 = !DILocation(line: 804, column: 25, scope: !3194)
!3197 = !DILocation(line: 804, column: 2, scope: !3194)
!3198 = !DILocation(line: 803, column: 33, scope: !3194)
!3199 = !DILocation(line: 803, column: 47, scope: !3194)
!3200 = !DILocation(line: 803, column: 7, scope: !3194)
!3201 = distinct !{!3201, !3195, !3202}
!3202 = !DILocation(line: 804, column: 35, scope: !3191)
!3203 = !DILocation(line: 802, column: 12, scope: !3183)
!3204 = !DILocation(line: 794, column: 24, scope: !3180)
!3205 = !DILocation(line: 794, column: 3, scope: !3180)
!3206 = distinct !{!3206, !3181, !3207}
!3207 = !DILocation(line: 805, column: 5, scope: !3176)
!3208 = !DILocation(line: 806, column: 3, scope: !3166)
!3209 = distinct !DISubprogram(name: "fini_vars_expansion", scope: !3, file: !3, line: 1239, type: !2987, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3210)
!3210 = !{!3211, !3212}
!3211 = !DILocalVariable(name: "i", scope: !3209, file: !3, line: 1241, type: !833)
!3212 = !DILocalVariable(name: "n", scope: !3209, file: !3, line: 1241, type: !833)
!3213 = !DILocation(line: 1241, column: 17, scope: !3209)
!3214 = !DILocation(line: 0, scope: !3209)
!3215 = !DILocation(line: 1242, column: 8, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 1242, column: 3)
!3217 = !DILocation(line: 0, scope: !3216)
!3218 = !DILocation(line: 1242, column: 17, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 1242, column: 3)
!3220 = !DILocation(line: 1242, column: 3, scope: !3216)
!3221 = !DILocation(line: 1243, column: 5, scope: !3219)
!3222 = !DILocation(line: 1242, column: 23, scope: !3219)
!3223 = !DILocation(line: 1242, column: 3, scope: !3219)
!3224 = distinct !{!3224, !3220, !3225}
!3225 = !DILocation(line: 1243, column: 5, scope: !3216)
!3226 = !DILocation(line: 1244, column: 3, scope: !3209)
!3227 = !DILocation(line: 1245, column: 3, scope: !3209)
!3228 = !DILocation(line: 1246, column: 14, scope: !3209)
!3229 = !DILocation(line: 1247, column: 37, scope: !3209)
!3230 = !DILocation(line: 1247, column: 20, scope: !3209)
!3231 = !DILocation(line: 1248, column: 1, scope: !3209)
!3232 = distinct !DISubprogram(name: "gimple_expand_cfg", scope: !3, file: !3, line: 3719, type: !2259, scopeLine: 3720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3233)
!3233 = !{!3234, !3235, !3236, !3247, !3254, !3255, !3256, !3260, !3264, !3265, !3269, !3270}
!3234 = !DILocalVariable(name: "bb", scope: !3232, file: !3, line: 3721, type: !1435)
!3235 = !DILocalVariable(name: "init_block", scope: !3232, file: !3, line: 3721, type: !1435)
!3236 = !DILocalVariable(name: "blocks", scope: !3232, file: !3, line: 3722, type: !3237)
!3237 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !3238, line: 45, baseType: !3239)
!3238 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !3238, line: 39, size: 192, elements: !3241)
!3241 = !{!3242, !3243, !3244, !3245}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !3240, file: !3238, line: 41, baseType: !821, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !3240, file: !3238, line: 42, baseType: !7, size: 32, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3240, file: !3238, line: 43, baseType: !7, size: 32, offset: 96)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !3240, file: !3238, line: 44, baseType: !3246, size: 64, offset: 128)
!3246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !835, size: 64, elements: !934)
!3247 = !DILocalVariable(name: "ei", scope: !3232, file: !3, line: 3723, type: !3248)
!3248 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !337, line: 682, baseType: !3249)
!3249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !337, line: 679, size: 128, elements: !3250)
!3250 = !{!3251, !3252}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3249, file: !337, line: 680, baseType: !7, size: 32)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3249, file: !337, line: 681, baseType: !3253, size: 64, offset: 64)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!3254 = !DILocalVariable(name: "e", scope: !3232, file: !3, line: 3724, type: !873)
!3255 = !DILocalVariable(name: "i", scope: !3232, file: !3, line: 3725, type: !7)
!3256 = !DILocalVariable(name: "var", scope: !3257, file: !3, line: 3787, type: !1014)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 3786, column: 5)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 3785, column: 3)
!3259 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3785, column: 3)
!3260 = !DILocalVariable(name: "e", scope: !3261, file: !3, line: 3865, type: !873)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 3864, column: 5)
!3262 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 3863, column: 3)
!3263 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3863, column: 3)
!3264 = !DILocalVariable(name: "ei", scope: !3261, file: !3, line: 3866, type: !3248)
!3265 = !DILocalVariable(name: "e", scope: !3266, file: !3, line: 3881, type: !873)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 3880, column: 5)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 3879, column: 3)
!3268 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3879, column: 3)
!3269 = !DILocalVariable(name: "ei", scope: !3266, file: !3, line: 3882, type: !3248)
!3270 = !DILocalVariable(name: "parent", scope: !3271, file: !3, line: 3932, type: !1014)
!3271 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3931, column: 3)
!3272 = !DILocation(line: 3723, column: 3, scope: !3232)
!3273 = !DILocation(line: 3724, column: 3, scope: !3232)
!3274 = !DILocation(line: 3727, column: 3, scope: !3232)
!3275 = !DILocation(line: 3728, column: 47, scope: !3232)
!3276 = !DILocation(line: 3728, column: 52, scope: !3232)
!3277 = !DILocation(line: 3728, column: 44, scope: !3232)
!3278 = !DILocation(line: 3728, column: 35, scope: !3232)
!3279 = !DILocation(line: 3728, column: 26, scope: !3232)
!3280 = !DILocation(line: 3732, column: 30, scope: !3232)
!3281 = !DILocation(line: 3734, column: 23, scope: !3232)
!3282 = !DILocation(line: 3734, column: 3, scope: !3232)
!3283 = !DILocation(line: 3736, column: 3, scope: !3232)
!3284 = !DILocation(line: 3737, column: 8, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3737, column: 7)
!3286 = !DILocation(line: 3737, column: 7, scope: !3232)
!3287 = !DILocation(line: 3740, column: 11, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3289, file: !3, line: 3740, column: 11)
!3289 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3738, column: 5)
!3290 = !DILocation(line: 3740, column: 17, scope: !3288)
!3291 = !DILocation(line: 3740, column: 38, scope: !3288)
!3292 = !DILocation(line: 3740, column: 11, scope: !3289)
!3293 = !DILocation(line: 3741, column: 8, scope: !3288)
!3294 = !DILocation(line: 3744, column: 8, scope: !3288)
!3295 = !DILocation(line: 3746, column: 24, scope: !3232)
!3296 = !DILocation(line: 3746, column: 3, scope: !3232)
!3297 = !DILocation(line: 3747, column: 22, scope: !3232)
!3298 = !DILocation(line: 3747, column: 20, scope: !3232)
!3299 = !DILocation(line: 3752, column: 3, scope: !3232)
!3300 = !DILocation(line: 3755, column: 3, scope: !3232)
!3301 = !DILocation(line: 3757, column: 11, scope: !3232)
!3302 = !DILocation(line: 3757, column: 3, scope: !3232)
!3303 = !DILocation(line: 3758, column: 32, scope: !3232)
!3304 = !DILocation(line: 3759, column: 39, scope: !3232)
!3305 = !DILocation(line: 3760, column: 35, scope: !3232)
!3306 = !DILocation(line: 3761, column: 34, scope: !3232)
!3307 = !DILocation(line: 3762, column: 3, scope: !3232)
!3308 = !DILocation(line: 3762, column: 9, scope: !3232)
!3309 = !DILocation(line: 3762, column: 14, scope: !3232)
!3310 = !DILocation(line: 3762, column: 33, scope: !3232)
!3311 = !DILocation(line: 3766, column: 3, scope: !3232)
!3312 = !DILocation(line: 3769, column: 7, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3769, column: 7)
!3314 = !DILocation(line: 3769, column: 7, scope: !3232)
!3315 = !DILocation(line: 3771, column: 11, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3317, file: !3, line: 3771, column: 11)
!3317 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 3770, column: 5)
!3318 = !DILocation(line: 3771, column: 17, scope: !3316)
!3319 = !DILocation(line: 3771, column: 11, scope: !3317)
!3320 = !DILocation(line: 3772, column: 2, scope: !3316)
!3321 = !DILocation(line: 3774, column: 11, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3317, file: !3, line: 3774, column: 11)
!3323 = !DILocation(line: 3774, column: 38, scope: !3322)
!3324 = !DILocation(line: 3774, column: 32, scope: !3322)
!3325 = !DILocation(line: 3774, column: 28, scope: !3322)
!3326 = !DILocation(line: 3777, column: 10, scope: !3322)
!3327 = !DILocation(line: 3775, column: 2, scope: !3322)
!3328 = !DILocation(line: 3781, column: 26, scope: !3232)
!3329 = !DILocation(line: 3781, column: 3, scope: !3232)
!3330 = !DILocation(line: 0, scope: !3232)
!3331 = !DILocation(line: 3785, column: 8, scope: !3259)
!3332 = !DILocation(line: 0, scope: !3259)
!3333 = !DILocation(line: 3785, column: 22, scope: !3258)
!3334 = !DILocation(line: 3785, column: 27, scope: !3258)
!3335 = !DILocation(line: 3785, column: 17, scope: !3258)
!3336 = !DILocation(line: 3785, column: 3, scope: !3259)
!3337 = !DILocation(line: 3787, column: 18, scope: !3257)
!3338 = !DILocation(line: 0, scope: !3257)
!3339 = !DILocation(line: 3789, column: 11, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 3789, column: 11)
!3341 = !DILocation(line: 3789, column: 27, scope: !3340)
!3342 = !DILocation(line: 3790, column: 4, scope: !3340)
!3343 = !DILocation(line: 3790, column: 11, scope: !3340)
!3344 = !DILocation(line: 3790, column: 8, scope: !3340)
!3345 = !DILocation(line: 3789, column: 11, scope: !3257)
!3346 = !DILocation(line: 3791, column: 30, scope: !3340)
!3347 = !DILocation(line: 3791, column: 28, scope: !3340)
!3348 = !DILocation(line: 3791, column: 2, scope: !3340)
!3349 = !DILocation(line: 3792, column: 7, scope: !3257)
!3350 = !DILocation(line: 3796, column: 11, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 3796, column: 11)
!3352 = !DILocation(line: 3796, column: 36, scope: !3351)
!3353 = !DILocation(line: 3796, column: 33, scope: !3351)
!3354 = !DILocation(line: 3796, column: 11, scope: !3257)
!3355 = !DILocation(line: 3797, column: 2, scope: !3351)
!3356 = !DILocation(line: 3805, column: 12, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 3805, column: 11)
!3358 = !DILocation(line: 0, scope: !3357)
!3359 = !DILocation(line: 3805, column: 11, scope: !3257)
!3360 = !DILocation(line: 3807, column: 8, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 3807, column: 8)
!3362 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 3806, column: 2)
!3363 = !DILocation(line: 3807, column: 8, scope: !3362)
!3364 = !DILocation(line: 3808, column: 6, scope: !3361)
!3365 = !DILocation(line: 3785, column: 44, scope: !3258)
!3366 = !DILocation(line: 3785, column: 3, scope: !3258)
!3367 = distinct !{!3367, !3336, !3368}
!3368 = !DILocation(line: 3810, column: 5, scope: !3259)
!3369 = !DILocation(line: 3814, column: 7, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3814, column: 7)
!3371 = !DILocation(line: 3815, column: 7, scope: !3370)
!3372 = !DILocation(line: 3815, column: 10, scope: !3370)
!3373 = !DILocation(line: 3816, column: 7, scope: !3370)
!3374 = !DILocation(line: 3816, column: 10, scope: !3370)
!3375 = !DILocation(line: 3814, column: 7, scope: !3232)
!3376 = !DILocation(line: 3817, column: 5, scope: !3370)
!3377 = !DILocation(line: 3821, column: 13, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3821, column: 7)
!3379 = !DILocation(line: 3821, column: 7, scope: !3378)
!3380 = !DILocation(line: 3821, column: 7, scope: !3232)
!3381 = !DILocation(line: 3822, column: 5, scope: !3378)
!3382 = !DILocation(line: 3824, column: 3, scope: !3232)
!3383 = !DILocation(line: 3827, column: 3, scope: !3232)
!3384 = !DILocation(line: 3829, column: 16, scope: !3232)
!3385 = !DILocation(line: 3833, column: 3, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3833, column: 3)
!3387 = !DILocation(line: 0, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 3833, column: 3)
!3389 = !DILocation(line: 3833, column: 3, scope: !3388)
!3390 = !DILocation(line: 3834, column: 5, scope: !3388)
!3391 = !DILocation(line: 3834, column: 8, scope: !3388)
!3392 = !DILocation(line: 3834, column: 14, scope: !3388)
!3393 = distinct !{!3393, !3385, !3394}
!3394 = !DILocation(line: 3834, column: 18, scope: !3386)
!3395 = !DILocation(line: 3836, column: 20, scope: !3232)
!3396 = !DILocation(line: 3836, column: 18, scope: !3232)
!3397 = !DILocation(line: 3837, column: 3, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3837, column: 3)
!3399 = !DILocation(line: 0, scope: !3398)
!3400 = !DILocation(line: 3837, column: 3, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 3837, column: 3)
!3402 = !DILocation(line: 3838, column: 10, scope: !3401)
!3403 = distinct !{!3403, !3397, !3404}
!3404 = !DILocation(line: 3838, column: 39, scope: !3398)
!3405 = !DILocation(line: 3840, column: 7, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3840, column: 7)
!3407 = !DILocation(line: 3840, column: 7, scope: !3232)
!3408 = !DILocation(line: 3841, column: 5, scope: !3406)
!3409 = !DILocation(line: 3843, column: 3, scope: !3232)
!3410 = !DILocation(line: 3844, column: 3, scope: !3232)
!3411 = !DILocation(line: 3847, column: 3, scope: !3232)
!3412 = !DILocation(line: 3847, column: 9, scope: !3232)
!3413 = !DILocation(line: 3847, column: 20, scope: !3232)
!3414 = !DILocation(line: 3847, column: 29, scope: !3232)
!3415 = !DILocation(line: 3851, column: 24, scope: !3232)
!3416 = !DILocation(line: 3851, column: 3, scope: !3232)
!3417 = !DILocation(line: 3852, column: 3, scope: !3232)
!3418 = !DILocation(line: 3854, column: 3, scope: !3232)
!3419 = !DILocation(line: 3855, column: 24, scope: !3232)
!3420 = !DILocation(line: 3855, column: 3, scope: !3232)
!3421 = !DILocation(line: 3856, column: 3, scope: !3232)
!3422 = !DILocation(line: 3859, column: 28, scope: !3232)
!3423 = !DILocation(line: 3859, column: 3, scope: !3232)
!3424 = !DILocation(line: 3861, column: 24, scope: !3232)
!3425 = !DILocation(line: 3861, column: 3, scope: !3232)
!3426 = !DILocation(line: 3863, column: 3, scope: !3263)
!3427 = !DILocation(line: 0, scope: !3261)
!3428 = !DILocation(line: 0, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 3867, column: 7)
!3430 = !DILocation(line: 0, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 3867, column: 7)
!3432 = !DILocation(line: 3863, column: 3, scope: !3262)
!3433 = !DILocation(line: 0, scope: !3263)
!3434 = !DILocation(line: 3866, column: 7, scope: !3261)
!3435 = !DILocation(line: 3867, column: 17, scope: !3429)
!3436 = !DILocation(line: 3867, column: 12, scope: !3429)
!3437 = !DILocation(line: 3867, column: 44, scope: !3431)
!3438 = !DILocation(line: 3867, column: 7, scope: !3429)
!3439 = !DILocation(line: 3869, column: 11, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 3869, column: 8)
!3441 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 3868, column: 2)
!3442 = !DILocation(line: 3869, column: 17, scope: !3440)
!3443 = !DILocation(line: 3869, column: 8, scope: !3440)
!3444 = !DILocation(line: 3869, column: 8, scope: !3441)
!3445 = !DILocation(line: 3870, column: 6, scope: !3440)
!3446 = !DILocation(line: 3872, column: 6, scope: !3440)
!3447 = !DILocation(line: 3867, column: 7, scope: !3431)
!3448 = distinct !{!3448, !3438, !3449}
!3449 = !DILocation(line: 3873, column: 2, scope: !3429)
!3450 = !DILocation(line: 3874, column: 5, scope: !3262)
!3451 = !DILocation(line: 0, scope: !3262)
!3452 = distinct !{!3452, !3426, !3453}
!3453 = !DILocation(line: 3874, column: 5, scope: !3263)
!3454 = !DILocation(line: 3877, column: 30, scope: !3232)
!3455 = !DILocation(line: 3879, column: 3, scope: !3268)
!3456 = !DILocation(line: 0, scope: !3266)
!3457 = !DILocation(line: 0, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 3883, column: 7)
!3459 = !DILocation(line: 0, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 3883, column: 7)
!3461 = !DILocation(line: 3879, column: 3, scope: !3267)
!3462 = !DILocation(line: 0, scope: !3268)
!3463 = !DILocation(line: 3882, column: 7, scope: !3266)
!3464 = !DILocation(line: 3883, column: 17, scope: !3458)
!3465 = !DILocation(line: 3883, column: 12, scope: !3458)
!3466 = !DILocation(line: 3883, column: 44, scope: !3460)
!3467 = !DILocation(line: 3883, column: 7, scope: !3458)
!3468 = !DILocation(line: 3886, column: 7, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 3884, column: 2)
!3470 = !DILocation(line: 3886, column: 13, scope: !3469)
!3471 = !DILocation(line: 3892, column: 18, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 3892, column: 8)
!3473 = !DILocation(line: 3893, column: 8, scope: !3472)
!3474 = !DILocation(line: 3893, column: 22, scope: !3472)
!3475 = !DILocation(line: 3892, column: 8, scope: !3469)
!3476 = !DILocation(line: 3894, column: 6, scope: !3472)
!3477 = !DILocation(line: 3896, column: 6, scope: !3472)
!3478 = !DILocation(line: 3883, column: 7, scope: !3460)
!3479 = distinct !{!3479, !3467, !3480}
!3480 = !DILocation(line: 3897, column: 2, scope: !3458)
!3481 = !DILocation(line: 3898, column: 5, scope: !3267)
!3482 = !DILocation(line: 0, scope: !3267)
!3483 = distinct !{!3483, !3455, !3484}
!3484 = !DILocation(line: 3898, column: 5, scope: !3268)
!3485 = !DILocation(line: 3900, column: 27, scope: !3232)
!3486 = !DILocation(line: 3900, column: 12, scope: !3232)
!3487 = !DILocation(line: 3901, column: 3, scope: !3232)
!3488 = !DILocation(line: 3902, column: 3, scope: !3232)
!3489 = !DILocation(line: 3903, column: 3, scope: !3232)
!3490 = !DILocation(line: 3904, column: 3, scope: !3232)
!3491 = !DILocation(line: 3906, column: 3, scope: !3232)
!3492 = !DILocation(line: 3908, column: 3, scope: !3232)
!3493 = !DILocation(line: 3916, column: 3, scope: !3232)
!3494 = !DILocation(line: 3916, column: 45, scope: !3232)
!3495 = !DILocation(line: 3920, column: 23, scope: !3232)
!3496 = !DILocation(line: 3922, column: 7, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3922, column: 7)
!3498 = !DILocation(line: 3922, column: 7, scope: !3232)
!3499 = !DILocation(line: 3924, column: 7, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 3923, column: 5)
!3501 = !DILocation(line: 3933, column: 19, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 3933, column: 5)
!3503 = !DILocation(line: 3927, column: 5, scope: !3500)
!3504 = !DILocation(line: 0, scope: !3271)
!3505 = !DILocation(line: 3933, column: 10, scope: !3502)
!3506 = !DILocation(line: 0, scope: !3502)
!3507 = !DILocation(line: 3934, column: 10, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3502, file: !3, line: 3933, column: 5)
!3509 = !DILocation(line: 3933, column: 5, scope: !3502)
!3510 = !DILocation(line: 3936, column: 11, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 3936, column: 11)
!3512 = !DILocation(line: 3936, column: 30, scope: !3511)
!3513 = !DILocation(line: 3936, column: 11, scope: !3508)
!3514 = !DILocation(line: 3937, column: 2, scope: !3511)
!3515 = !DILocation(line: 3937, column: 56, scope: !3511)
!3516 = !DILocation(line: 3935, column: 12, scope: !3508)
!3517 = !DILocation(line: 3933, column: 5, scope: !3508)
!3518 = distinct !{!3518, !3509, !3519}
!3519 = !DILocation(line: 3937, column: 58, scope: !3502)
!3520 = !DILocation(line: 3943, column: 43, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3943, column: 7)
!3522 = !DILocation(line: 3943, column: 7, scope: !3521)
!3523 = !DILocation(line: 3943, column: 7, scope: !3232)
!3524 = !DILocation(line: 3944, column: 7, scope: !3521)
!3525 = !DILocation(line: 3944, column: 20, scope: !3521)
!3526 = !DILocation(line: 3944, column: 48, scope: !3521)
!3527 = !DILocation(line: 3944, column: 5, scope: !3521)
!3528 = !DILocation(line: 3946, column: 3, scope: !3232)
!3529 = !DILocation(line: 3946, column: 44, scope: !3232)
!3530 = !DILocation(line: 3949, column: 16, scope: !3232)
!3531 = !DILocation(line: 3950, column: 22, scope: !3232)
!3532 = !DILocation(line: 3953, column: 21, scope: !3232)
!3533 = !DILocation(line: 3953, column: 3, scope: !3232)
!3534 = !DILocation(line: 3954, column: 3, scope: !3232)
!3535 = !DILocation(line: 3956, column: 1, scope: !3232)
!3536 = !DILocation(line: 3955, column: 3, scope: !3232)
!3537 = distinct !DISubprogram(name: "gimple_code", scope: !385, file: !385, line: 1052, type: !3538, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3540)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!574, !2850}
!3540 = !{!3541}
!3541 = !DILocalVariable(name: "g", arg: 1, scope: !3537, file: !385, line: 1052, type: !2850)
!3542 = !DILocation(line: 0, scope: !3537)
!3543 = !DILocation(line: 1054, column: 20, scope: !3537)
!3544 = !DILocation(line: 1054, column: 3, scope: !3537)
!3545 = distinct !DISubprogram(name: "gimple_op", scope: !385, file: !385, line: 1631, type: !3546, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3548)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!1014, !2850, !7}
!3548 = !{!3549, !3550}
!3549 = !DILocalVariable(name: "gs", arg: 1, scope: !3545, file: !385, line: 1631, type: !2850)
!3550 = !DILocalVariable(name: "i", arg: 2, scope: !3545, file: !385, line: 1631, type: !7)
!3551 = !DILocation(line: 0, scope: !3545)
!3552 = !DILocation(line: 1633, column: 7, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3545, file: !385, line: 1633, column: 7)
!3554 = !DILocation(line: 1633, column: 7, scope: !3545)
!3555 = !DILocation(line: 1638, column: 14, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3553, file: !385, line: 1634, column: 5)
!3557 = !DILocation(line: 1638, column: 7, scope: !3556)
!3558 = !DILocation(line: 0, scope: !3553)
!3559 = !DILocation(line: 1642, column: 1, scope: !3545)
!3560 = distinct !DISubprogram(name: "gimple_has_ops", scope: !385, file: !385, line: 1274, type: !2904, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3561)
!3561 = !{!3562}
!3562 = !DILocalVariable(name: "g", arg: 1, scope: !3560, file: !385, line: 1274, type: !2850)
!3563 = !DILocation(line: 0, scope: !3560)
!3564 = !DILocation(line: 1276, column: 10, scope: !3560)
!3565 = !DILocation(line: 1276, column: 26, scope: !3560)
!3566 = !DILocation(line: 1276, column: 41, scope: !3560)
!3567 = !DILocation(line: 1276, column: 44, scope: !3560)
!3568 = !DILocation(line: 1276, column: 60, scope: !3560)
!3569 = !DILocation(line: 1276, column: 3, scope: !3560)
!3570 = distinct !DISubprogram(name: "gimple_ops", scope: !385, file: !385, line: 1614, type: !3571, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3573)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!1521, !894}
!3573 = !{!3574, !3575}
!3574 = !DILocalVariable(name: "gs", arg: 1, scope: !3570, file: !385, line: 1614, type: !894)
!3575 = !DILocalVariable(name: "off", scope: !3570, file: !385, line: 1616, type: !833)
!3576 = !DILocation(line: 0, scope: !3570)
!3577 = !DILocation(line: 1621, column: 28, scope: !3570)
!3578 = !DILocation(line: 1621, column: 9, scope: !3570)
!3579 = !DILocation(line: 1622, column: 3, scope: !3570)
!3580 = !DILocation(line: 1624, column: 20, scope: !3570)
!3581 = !DILocation(line: 1624, column: 32, scope: !3570)
!3582 = !DILocation(line: 1624, column: 10, scope: !3570)
!3583 = !DILocation(line: 1624, column: 3, scope: !3570)
!3584 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !385, file: !385, line: 1073, type: !3585, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3587)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!612, !894}
!3587 = !{!3588}
!3588 = !DILocalVariable(name: "gs", arg: 1, scope: !3584, file: !385, line: 1073, type: !894)
!3589 = !DILocation(line: 0, scope: !3584)
!3590 = !DILocation(line: 1075, column: 24, scope: !3584)
!3591 = !DILocation(line: 1075, column: 10, scope: !3584)
!3592 = !DILocation(line: 1075, column: 3, scope: !3584)
!3593 = distinct !DISubprogram(name: "gss_for_code", scope: !385, file: !385, line: 1061, type: !3594, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3596)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!612, !574}
!3596 = !{!3597}
!3597 = !DILocalVariable(name: "code", arg: 1, scope: !3593, file: !385, line: 1061, type: !574)
!3598 = !DILocation(line: 0, scope: !3593)
!3599 = !DILocation(line: 1066, column: 10, scope: !3593)
!3600 = !DILocation(line: 1066, column: 3, scope: !3593)
!3601 = distinct !DISubprogram(name: "gimple_num_ops", scope: !385, file: !385, line: 1596, type: !3602, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3604)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!7, !2850}
!3604 = !{!3605}
!3605 = !DILocalVariable(name: "gs", arg: 1, scope: !3601, file: !385, line: 1596, type: !2850)
!3606 = !DILocation(line: 0, scope: !3601)
!3607 = !DILocation(line: 1598, column: 21, scope: !3601)
!3608 = !DILocation(line: 1598, column: 3, scope: !3601)
!3609 = distinct !DISubprogram(name: "clear_tree_used", scope: !3, file: !3, line: 1046, type: !3610, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3612)
!3610 = !DISubroutineType(types: !3611)
!3611 = !{null, !1014}
!3612 = !{!3613, !3614}
!3613 = !DILocalVariable(name: "block", arg: 1, scope: !3609, file: !3, line: 1046, type: !1014)
!3614 = !DILocalVariable(name: "t", scope: !3609, file: !3, line: 1048, type: !1014)
!3615 = !DILocation(line: 0, scope: !3609)
!3616 = !DILocation(line: 1050, column: 12, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 1050, column: 3)
!3618 = !DILocation(line: 1050, column: 8, scope: !3617)
!3619 = !DILocation(line: 0, scope: !3617)
!3620 = !DILocation(line: 1050, column: 3, scope: !3617)
!3621 = !DILocation(line: 1052, column: 7, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 1050, column: 3)
!3623 = !DILocation(line: 1052, column: 21, scope: !3622)
!3624 = !DILocation(line: 1050, column: 40, scope: !3622)
!3625 = !DILocation(line: 1050, column: 3, scope: !3622)
!3626 = distinct !{!3626, !3620, !3627}
!3627 = !DILocation(line: 1052, column: 23, scope: !3617)
!3628 = !DILocation(line: 1054, column: 12, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 1054, column: 3)
!3630 = !DILocation(line: 1054, column: 8, scope: !3629)
!3631 = !DILocation(line: 0, scope: !3629)
!3632 = !DILocation(line: 1054, column: 3, scope: !3629)
!3633 = !DILocation(line: 1055, column: 5, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 1054, column: 3)
!3635 = !DILocation(line: 1054, column: 45, scope: !3634)
!3636 = !DILocation(line: 1054, column: 3, scope: !3634)
!3637 = distinct !{!3637, !3632, !3638}
!3638 = !DILocation(line: 1055, column: 23, scope: !3629)
!3639 = !DILocation(line: 1056, column: 1, scope: !3609)
!3640 = distinct !DISubprogram(name: "expand_one_error_var", scope: !3, file: !3, line: 859, type: !3610, scopeLine: 860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3641)
!3641 = !{!3642, !3643, !3644}
!3642 = !DILocalVariable(name: "var", arg: 1, scope: !3640, file: !3, line: 859, type: !1014)
!3643 = !DILocalVariable(name: "mode", scope: !3640, file: !3, line: 861, type: !5)
!3644 = !DILocalVariable(name: "x", scope: !3640, file: !3, line: 862, type: !900)
!3645 = !DILocation(line: 0, scope: !3640)
!3646 = !DILocation(line: 861, column: 28, scope: !3640)
!3647 = !DILocation(line: 864, column: 7, scope: !3640)
!3648 = !DILocation(line: 865, column: 31, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 864, column: 7)
!3650 = !DILocation(line: 865, column: 9, scope: !3649)
!3651 = !DILocation(line: 865, column: 5, scope: !3649)
!3652 = !DILocation(line: 867, column: 9, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 866, column: 12)
!3654 = !DILocation(line: 867, column: 5, scope: !3653)
!3655 = !DILocation(line: 869, column: 9, scope: !3653)
!3656 = !DILocation(line: 0, scope: !3649)
!3657 = !DILocation(line: 871, column: 3, scope: !3640)
!3658 = !DILocation(line: 872, column: 1, scope: !3640)
!3659 = distinct !DISubprogram(name: "expand_one_hard_reg_var", scope: !3, file: !3, line: 828, type: !3610, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3660)
!3660 = !{!3661}
!3661 = !DILocalVariable(name: "var", arg: 1, scope: !3659, file: !3, line: 828, type: !1014)
!3662 = !DILocation(line: 0, scope: !3659)
!3663 = !DILocation(line: 830, column: 3, scope: !3659)
!3664 = !DILocation(line: 831, column: 1, scope: !3659)
!3665 = distinct !DISubprogram(name: "expand_one_register_var", scope: !3, file: !3, line: 837, type: !3610, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3666)
!3666 = !{!3667, !3668, !3669, !3670, !3671}
!3667 = !DILocalVariable(name: "var", arg: 1, scope: !3665, file: !3, line: 837, type: !1014)
!3668 = !DILocalVariable(name: "decl", scope: !3665, file: !3, line: 839, type: !1014)
!3669 = !DILocalVariable(name: "type", scope: !3665, file: !3, line: 840, type: !1014)
!3670 = !DILocalVariable(name: "reg_mode", scope: !3665, file: !3, line: 841, type: !5)
!3671 = !DILocalVariable(name: "x", scope: !3665, file: !3, line: 842, type: !900)
!3672 = !DILocation(line: 0, scope: !3665)
!3673 = !DILocation(line: 839, column: 15, scope: !3665)
!3674 = !DILocation(line: 840, column: 15, scope: !3665)
!3675 = !DILocation(line: 841, column: 32, scope: !3665)
!3676 = !DILocation(line: 842, column: 11, scope: !3665)
!3677 = !DILocation(line: 844, column: 3, scope: !3665)
!3678 = !DILocation(line: 847, column: 8, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 847, column: 7)
!3680 = !DILocation(line: 847, column: 7, scope: !3665)
!3681 = !DILocation(line: 848, column: 5, scope: !3679)
!3682 = !DILocation(line: 850, column: 7, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 850, column: 7)
!3684 = !DILocation(line: 850, column: 7, scope: !3665)
!3685 = !DILocation(line: 851, column: 26, scope: !3683)
!3686 = !DILocation(line: 851, column: 5, scope: !3683)
!3687 = !DILocation(line: 852, column: 1, scope: !3665)
!3688 = distinct !DISubprogram(name: "defer_stack_allocation", scope: !3, file: !3, line: 883, type: !3689, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3691)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{!822, !1014, !822}
!3691 = !{!3692, !3693}
!3692 = !DILocalVariable(name: "var", arg: 1, scope: !3688, file: !3, line: 883, type: !1014)
!3693 = !DILocalVariable(name: "toplevel", arg: 2, scope: !3688, file: !3, line: 883, type: !822)
!3694 = !DILocation(line: 0, scope: !3688)
!3695 = !DILocation(line: 887, column: 7, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 887, column: 7)
!3697 = !DILocation(line: 887, column: 7, scope: !3688)
!3698 = !DILocation(line: 894, column: 7, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 894, column: 7)
!3700 = !DILocation(line: 894, column: 19, scope: !3699)
!3701 = !DILocation(line: 894, column: 28, scope: !3699)
!3702 = !DILocation(line: 894, column: 16, scope: !3699)
!3703 = !DILocation(line: 903, column: 16, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 903, column: 7)
!3705 = !DILocation(line: 903, column: 21, scope: !3704)
!3706 = !DILocation(line: 903, column: 38, scope: !3704)
!3707 = !DILocation(line: 903, column: 24, scope: !3704)
!3708 = !DILocation(line: 903, column: 63, scope: !3704)
!3709 = !DILocation(line: 903, column: 7, scope: !3688)
!3710 = !DILocation(line: 906, column: 3, scope: !3688)
!3711 = !DILocation(line: 907, column: 1, scope: !3688)
!3712 = distinct !DISubprogram(name: "add_stack_var", scope: !3, file: !3, line: 266, type: !3610, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3713)
!3713 = !{!3714}
!3714 = !DILocalVariable(name: "decl", arg: 1, scope: !3712, file: !3, line: 266, type: !1014)
!3715 = !DILocation(line: 0, scope: !3712)
!3716 = !DILocation(line: 268, column: 7, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 268, column: 7)
!3718 = !DILocation(line: 268, column: 25, scope: !3717)
!3719 = !DILocation(line: 268, column: 22, scope: !3717)
!3720 = !DILocation(line: 268, column: 7, scope: !3712)
!3721 = !DILocation(line: 277, column: 3, scope: !3712)
!3722 = !DILocation(line: 270, column: 11, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !3, line: 270, column: 11)
!3724 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 269, column: 5)
!3725 = !DILocation(line: 270, column: 11, scope: !3724)
!3726 = !DILocation(line: 271, column: 38, scope: !3723)
!3727 = !DILocation(line: 271, column: 42, scope: !3723)
!3728 = !DILocation(line: 271, column: 2, scope: !3723)
!3729 = !DILocation(line: 0, scope: !3723)
!3730 = !DILocation(line: 275, column: 4, scope: !3724)
!3731 = !DILocation(line: 275, column: 2, scope: !3724)
!3732 = !DILocation(line: 276, column: 5, scope: !3724)
!3733 = !DILocation(line: 277, column: 14, scope: !3712)
!3734 = !DILocation(line: 277, column: 30, scope: !3712)
!3735 = !DILocation(line: 277, column: 35, scope: !3712)
!3736 = !DILocation(line: 278, column: 3, scope: !3712)
!3737 = !DILocation(line: 278, column: 14, scope: !3712)
!3738 = !DILocation(line: 278, column: 30, scope: !3712)
!3739 = !DILocation(line: 278, column: 37, scope: !3712)
!3740 = !DILocation(line: 279, column: 51, scope: !3712)
!3741 = !DILocation(line: 279, column: 37, scope: !3712)
!3742 = !DILocation(line: 279, column: 3, scope: !3712)
!3743 = !DILocation(line: 279, column: 14, scope: !3712)
!3744 = !DILocation(line: 279, column: 30, scope: !3712)
!3745 = !DILocation(line: 279, column: 35, scope: !3712)
!3746 = !DILocation(line: 280, column: 60, scope: !3712)
!3747 = !DILocation(line: 280, column: 39, scope: !3712)
!3748 = !DILocation(line: 280, column: 3, scope: !3712)
!3749 = !DILocation(line: 280, column: 14, scope: !3712)
!3750 = !DILocation(line: 280, column: 30, scope: !3712)
!3751 = !DILocation(line: 280, column: 37, scope: !3712)
!3752 = !DILocation(line: 283, column: 47, scope: !3712)
!3753 = !DILocation(line: 283, column: 3, scope: !3712)
!3754 = !DILocation(line: 283, column: 30, scope: !3712)
!3755 = !DILocation(line: 283, column: 45, scope: !3712)
!3756 = !DILocation(line: 284, column: 3, scope: !3712)
!3757 = !DILocation(line: 284, column: 14, scope: !3712)
!3758 = !DILocation(line: 284, column: 30, scope: !3712)
!3759 = !DILocation(line: 284, column: 35, scope: !3712)
!3760 = !DILocation(line: 287, column: 3, scope: !3712)
!3761 = !DILocation(line: 287, column: 14, scope: !3712)
!3762 = !DILocation(line: 287, column: 30, scope: !3712)
!3763 = !DILocation(line: 287, column: 40, scope: !3712)
!3764 = !DILocation(line: 290, column: 18, scope: !3712)
!3765 = !DILocation(line: 290, column: 3, scope: !3712)
!3766 = !DILocation(line: 292, column: 17, scope: !3712)
!3767 = !DILocation(line: 293, column: 1, scope: !3712)
!3768 = distinct !DISubprogram(name: "expand_one_stack_var", scope: !3, file: !3, line: 813, type: !3610, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3769)
!3769 = !{!3770, !3771, !3772, !3773}
!3770 = !DILocalVariable(name: "var", arg: 1, scope: !3768, file: !3, line: 813, type: !1014)
!3771 = !DILocalVariable(name: "size", scope: !3768, file: !3, line: 815, type: !985)
!3772 = !DILocalVariable(name: "offset", scope: !3768, file: !3, line: 815, type: !985)
!3773 = !DILocalVariable(name: "align", scope: !3768, file: !3, line: 815, type: !985)
!3774 = !DILocation(line: 0, scope: !3768)
!3775 = !DILocation(line: 817, column: 24, scope: !3768)
!3776 = !DILocation(line: 817, column: 10, scope: !3768)
!3777 = !DILocation(line: 818, column: 32, scope: !3768)
!3778 = !DILocation(line: 818, column: 11, scope: !3768)
!3779 = !DILocation(line: 819, column: 12, scope: !3768)
!3780 = !DILocation(line: 821, column: 3, scope: !3768)
!3781 = !DILocation(line: 822, column: 1, scope: !3768)
!3782 = distinct !DISubprogram(name: "set_rtl", scope: !3, file: !3, line: 110, type: !3783, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3785)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{null, !1014, !900}
!3785 = !{!3786, !3787, !3788}
!3786 = !DILocalVariable(name: "t", arg: 1, scope: !3782, file: !3, line: 110, type: !1014)
!3787 = !DILocalVariable(name: "x", arg: 2, scope: !3782, file: !3, line: 110, type: !900)
!3788 = !DILocalVariable(name: "var", scope: !3789, file: !3, line: 122, type: !1014)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 121, column: 2)
!3790 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 120, column: 11)
!3791 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 113, column: 5)
!3792 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 112, column: 7)
!3793 = !DILocation(line: 0, scope: !3782)
!3794 = !DILocation(line: 112, column: 7, scope: !3792)
!3795 = !DILocation(line: 112, column: 21, scope: !3792)
!3796 = !DILocation(line: 112, column: 7, scope: !3782)
!3797 = !DILocation(line: 114, column: 10, scope: !3791)
!3798 = !DILocation(line: 114, column: 51, scope: !3791)
!3799 = !DILocation(line: 114, column: 30, scope: !3791)
!3800 = !DILocation(line: 114, column: 7, scope: !3791)
!3801 = !DILocation(line: 114, column: 60, scope: !3791)
!3802 = !DILocation(line: 115, column: 13, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 115, column: 11)
!3804 = !DILocation(line: 115, column: 17, scope: !3803)
!3805 = !DILocation(line: 115, column: 11, scope: !3791)
!3806 = !DILocation(line: 116, column: 30, scope: !3803)
!3807 = !DILocation(line: 116, column: 2, scope: !3803)
!3808 = !DILocation(line: 120, column: 21, scope: !3790)
!3809 = !DILocation(line: 120, column: 18, scope: !3790)
!3810 = !DILocation(line: 120, column: 13, scope: !3790)
!3811 = !DILocation(line: 120, column: 31, scope: !3790)
!3812 = !DILocation(line: 120, column: 60, scope: !3790)
!3813 = !DILocation(line: 120, column: 11, scope: !3791)
!3814 = !DILocation(line: 0, scope: !3789)
!3815 = !DILocation(line: 124, column: 9, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 124, column: 8)
!3817 = !DILocation(line: 124, column: 8, scope: !3789)
!3818 = !DILocation(line: 125, column: 6, scope: !3816)
!3819 = !DILocation(line: 128, column: 13, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 128, column: 13)
!3821 = !DILocation(line: 128, column: 28, scope: !3820)
!3822 = !DILocation(line: 128, column: 13, scope: !3816)
!3823 = !DILocation(line: 136, column: 13, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 136, column: 13)
!3825 = !DILocation(line: 136, column: 28, scope: !3824)
!3826 = !DILocation(line: 136, column: 13, scope: !3820)
!3827 = !DILocation(line: 137, column: 6, scope: !3824)
!3828 = !DILocation(line: 141, column: 5, scope: !3792)
!3829 = !DILocation(line: 142, column: 1, scope: !3782)
!3830 = distinct !DISubprogram(name: "var_to_partition", scope: !2279, file: !2279, line: 143, type: !3831, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3833)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{!823, !2278, !1014}
!3833 = !{!3834, !3835, !3836}
!3834 = !DILocalVariable(name: "map", arg: 1, scope: !3830, file: !2279, line: 143, type: !2278)
!3835 = !DILocalVariable(name: "var", arg: 2, scope: !3830, file: !2279, line: 143, type: !1014)
!3836 = !DILocalVariable(name: "part", scope: !3830, file: !2279, line: 145, type: !823)
!3837 = !DILocation(line: 0, scope: !3830)
!3838 = !DILocation(line: 147, column: 3, scope: !3830)
!3839 = !DILocation(line: 148, column: 10, scope: !3830)
!3840 = !DILocation(line: 149, column: 12, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3830, file: !2279, line: 149, column: 7)
!3842 = !DILocation(line: 149, column: 7, scope: !3841)
!3843 = !DILocation(line: 149, column: 7, scope: !3830)
!3844 = !DILocation(line: 150, column: 12, scope: !3841)
!3845 = !DILocation(line: 150, column: 5, scope: !3841)
!3846 = !DILocation(line: 151, column: 3, scope: !3830)
!3847 = distinct !DISubprogram(name: "get_decl_align_unit", scope: !3, file: !3, line: 202, type: !3848, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3850)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{!7, !1014}
!3850 = !{!3851, !3852}
!3851 = !DILocalVariable(name: "decl", arg: 1, scope: !3847, file: !3, line: 202, type: !1014)
!3852 = !DILocalVariable(name: "align", scope: !3847, file: !3, line: 204, type: !7)
!3853 = !DILocation(line: 0, scope: !3847)
!3854 = !DILocation(line: 206, column: 11, scope: !3847)
!3855 = !DILocation(line: 208, column: 7, scope: !3847)
!3856 = !DILocation(line: 213, column: 17, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 213, column: 11)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 212, column: 5)
!3859 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 211, column: 7)
!3860 = !DILocation(line: 213, column: 43, scope: !3857)
!3861 = !DILocation(line: 213, column: 11, scope: !3858)
!3862 = !DILocation(line: 215, column: 4, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 214, column: 2)
!3864 = !DILocation(line: 216, column: 43, scope: !3863)
!3865 = !DILocation(line: 217, column: 2, scope: !3863)
!3866 = !DILocation(line: 222, column: 13, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 222, column: 7)
!3868 = !DILocation(line: 222, column: 36, scope: !3867)
!3869 = !DILocation(line: 222, column: 7, scope: !3847)
!3870 = !DILocation(line: 223, column: 34, scope: !3867)
!3871 = !DILocation(line: 223, column: 5, scope: !3867)
!3872 = !DILocation(line: 224, column: 13, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 224, column: 7)
!3874 = !DILocation(line: 224, column: 43, scope: !3873)
!3875 = !DILocation(line: 224, column: 7, scope: !3847)
!3876 = !DILocation(line: 225, column: 41, scope: !3873)
!3877 = !DILocation(line: 225, column: 5, scope: !3873)
!3878 = !DILocation(line: 227, column: 16, scope: !3847)
!3879 = !DILocation(line: 227, column: 3, scope: !3847)
!3880 = distinct !DISubprogram(name: "alloc_stack_frame_space", scope: !3, file: !3, line: 234, type: !3881, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3883)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!985, !985, !985}
!3883 = !{!3884, !3885, !3886, !3887}
!3884 = !DILocalVariable(name: "size", arg: 1, scope: !3880, file: !3, line: 234, type: !985)
!3885 = !DILocalVariable(name: "align", arg: 2, scope: !3880, file: !3, line: 234, type: !985)
!3886 = !DILocalVariable(name: "offset", scope: !3880, file: !3, line: 236, type: !985)
!3887 = !DILocalVariable(name: "new_frame_offset", scope: !3880, file: !3, line: 236, type: !985)
!3888 = !DILocation(line: 0, scope: !3880)
!3889 = !DILocation(line: 238, column: 22, scope: !3880)
!3890 = !DILocation(line: 241, column: 24, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 240, column: 5)
!3892 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 239, column: 7)
!3893 = !DILocation(line: 242, column: 27, scope: !3891)
!3894 = !DILocation(line: 242, column: 24, scope: !3891)
!3895 = !DILocation(line: 255, column: 16, scope: !3880)
!3896 = !DILocation(line: 257, column: 44, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 257, column: 7)
!3898 = !DILocation(line: 257, column: 50, scope: !3897)
!3899 = !DILocation(line: 257, column: 7, scope: !3897)
!3900 = !DILocation(line: 257, column: 7, scope: !3880)
!3901 = !DILocation(line: 258, column: 18, scope: !3897)
!3902 = !DILocation(line: 258, column: 5, scope: !3897)
!3903 = !DILocation(line: 260, column: 3, scope: !3880)
!3904 = distinct !DISubprogram(name: "expand_one_stack_var_at", scope: !3, file: !3, line: 709, type: !3905, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3907)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{null, !1014, !985}
!3907 = !{!3908, !3909, !3910, !3911}
!3908 = !DILocalVariable(name: "decl", arg: 1, scope: !3904, file: !3, line: 709, type: !1014)
!3909 = !DILocalVariable(name: "offset", arg: 2, scope: !3904, file: !3, line: 709, type: !985)
!3910 = !DILocalVariable(name: "align", scope: !3904, file: !3, line: 712, type: !835)
!3911 = !DILocalVariable(name: "x", scope: !3904, file: !3, line: 713, type: !900)
!3912 = !DILocation(line: 0, scope: !3904)
!3913 = !DILocation(line: 716, column: 3, scope: !3904)
!3914 = !DILocation(line: 718, column: 22, scope: !3904)
!3915 = !DILocation(line: 718, column: 7, scope: !3904)
!3916 = !DILocation(line: 719, column: 20, scope: !3904)
!3917 = !DILocation(line: 719, column: 7, scope: !3904)
!3918 = !DILocation(line: 721, column: 7, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 721, column: 7)
!3920 = !DILocation(line: 721, column: 24, scope: !3919)
!3921 = !DILocation(line: 721, column: 7, scope: !3904)
!3922 = !DILocation(line: 727, column: 24, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 722, column: 5)
!3924 = !DILocation(line: 727, column: 22, scope: !3923)
!3925 = !DILocation(line: 728, column: 13, scope: !3923)
!3926 = !DILocation(line: 729, column: 17, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 729, column: 11)
!3928 = !DILocation(line: 729, column: 11, scope: !3923)
!3929 = !DILocation(line: 734, column: 27, scope: !3923)
!3930 = !DILocation(line: 734, column: 7, scope: !3923)
!3931 = !DILocation(line: 734, column: 25, scope: !3923)
!3932 = !DILocation(line: 735, column: 30, scope: !3923)
!3933 = !DILocation(line: 736, column: 5, scope: !3923)
!3934 = !DILocation(line: 738, column: 26, scope: !3904)
!3935 = !DILocation(line: 738, column: 3, scope: !3904)
!3936 = !DILocation(line: 739, column: 3, scope: !3904)
!3937 = !DILocation(line: 740, column: 1, scope: !3904)
!3938 = distinct !DISubprogram(name: "discover_nonconstant_array_refs", scope: !3, file: !3, line: 3622, type: !2987, scopeLine: 3623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3939)
!3939 = !{!3940, !3941, !3948}
!3940 = !DILocalVariable(name: "bb", scope: !3938, file: !3, line: 3624, type: !1435)
!3941 = !DILocalVariable(name: "gsi", scope: !3938, file: !3, line: 3625, type: !3942)
!3942 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !385, line: 265, baseType: !3943)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !385, line: 254, size: 192, elements: !3944)
!3944 = !{!3945, !3946, !3947}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3943, file: !385, line: 257, baseType: !889, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3943, file: !385, line: 263, baseType: !884, size: 64, offset: 64)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3943, file: !385, line: 264, baseType: !1435, size: 64, offset: 128)
!3948 = !DILocalVariable(name: "stmt", scope: !3949, file: !3, line: 3630, type: !894)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 3629, column: 7)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !3, line: 3628, column: 5)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !3, line: 3628, column: 5)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 3627, column: 3)
!3953 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 3627, column: 3)
!3954 = !DILocation(line: 3625, column: 3, scope: !3938)
!3955 = !DILocation(line: 3627, column: 3, scope: !3953)
!3956 = !DILocation(line: 0, scope: !3951)
!3957 = !DILocation(line: 3627, column: 3, scope: !3952)
!3958 = !DILocation(line: 0, scope: !3953)
!3959 = !DILocation(line: 0, scope: !3938)
!3960 = !DILocation(line: 3628, column: 16, scope: !3951)
!3961 = !DILocation(line: 3628, column: 10, scope: !3951)
!3962 = !DILocation(line: 3628, column: 36, scope: !3950)
!3963 = !DILocation(line: 3628, column: 35, scope: !3950)
!3964 = !DILocation(line: 3628, column: 5, scope: !3951)
!3965 = !DILocation(line: 3630, column: 16, scope: !3949)
!3966 = !DILocation(line: 0, scope: !3949)
!3967 = !DILocation(line: 3631, column: 7, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 3631, column: 6)
!3969 = !DILocation(line: 3631, column: 6, scope: !3949)
!3970 = !DILocation(line: 3632, column: 4, scope: !3968)
!3971 = !DILocation(line: 3628, column: 53, scope: !3950)
!3972 = !DILocation(line: 3628, column: 5, scope: !3950)
!3973 = distinct !{!3973, !3964, !3974}
!3974 = !DILocation(line: 3633, column: 7, scope: !3951)
!3975 = !DILocation(line: 0, scope: !3952)
!3976 = distinct !{!3976, !3955, !3977}
!3977 = !DILocation(line: 3633, column: 7, scope: !3953)
!3978 = !DILocation(line: 3634, column: 1, scope: !3938)
!3979 = distinct !DISubprogram(name: "expand_used_vars", scope: !3, file: !3, line: 1293, type: !2987, scopeLine: 1294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3980)
!3980 = !{!3981, !3982, !3983, !3984, !3985, !3986, !3988, !3989, !3993, !3997, !3998, !4001, !4005, !4006, !4009}
!3981 = !DILocalVariable(name: "t", scope: !3979, file: !3, line: 1295, type: !1014)
!3982 = !DILocalVariable(name: "next", scope: !3979, file: !3, line: 1295, type: !1014)
!3983 = !DILocalVariable(name: "outer_block", scope: !3979, file: !3, line: 1295, type: !1014)
!3984 = !DILocalVariable(name: "maybe_local_decls", scope: !3979, file: !3, line: 1296, type: !1014)
!3985 = !DILocalVariable(name: "i", scope: !3979, file: !3, line: 1297, type: !7)
!3986 = !DILocalVariable(name: "align", scope: !3987, file: !3, line: 1301, type: !823)
!3987 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1300, column: 3)
!3988 = !DILocalVariable(name: "off", scope: !3987, file: !3, line: 1302, type: !823)
!3989 = !DILocalVariable(name: "var", scope: !3990, file: !3, line: 1310, type: !1014)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 1309, column: 5)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1308, column: 3)
!3992 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1308, column: 3)
!3993 = !DILocalVariable(name: "var", scope: !3994, file: !3, line: 1336, type: !1014)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 1335, column: 5)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 1334, column: 3)
!3996 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1334, column: 3)
!3997 = !DILocalVariable(name: "expand_now", scope: !3994, file: !3, line: 1337, type: !822)
!3998 = !DILocalVariable(name: "rtl", scope: !3999, file: !3, line: 1371, type: !900)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 1370, column: 2)
!4000 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1369, column: 11)
!4001 = !DILocalVariable(name: "var", scope: !4002, file: !3, line: 1453, type: !1014)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 1452, column: 5)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 1451, column: 3)
!4004 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1451, column: 3)
!4005 = !DILocalVariable(name: "rtl", scope: !4002, file: !3, line: 1454, type: !900)
!4006 = !DILocalVariable(name: "align", scope: !4007, file: !3, line: 1473, type: !985)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 1472, column: 5)
!4008 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1471, column: 7)
!4009 = !DILabel(scope: !3994, name: "next", file: !3, line: 1368)
!4010 = !DILocation(line: 1295, column: 31, scope: !3979)
!4011 = !DILocation(line: 0, scope: !3979)
!4012 = !DILocation(line: 1306, column: 3, scope: !3979)
!4013 = !DILocation(line: 1308, column: 8, scope: !3992)
!4014 = !DILocation(line: 0, scope: !3992)
!4015 = !DILocation(line: 1308, column: 22, scope: !3991)
!4016 = !DILocation(line: 1308, column: 27, scope: !3991)
!4017 = !DILocation(line: 1308, column: 17, scope: !3991)
!4018 = !DILocation(line: 1308, column: 3, scope: !3992)
!4019 = !DILocation(line: 1310, column: 18, scope: !3990)
!4020 = !DILocation(line: 0, scope: !3990)
!4021 = !DILocation(line: 1312, column: 7, scope: !3990)
!4022 = !DILocation(line: 1313, column: 11, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 1313, column: 11)
!4024 = !DILocation(line: 1313, column: 42, scope: !4023)
!4025 = !DILocation(line: 1313, column: 11, scope: !3990)
!4026 = !DILocation(line: 1314, column: 2, scope: !4023)
!4027 = !DILocation(line: 1322, column: 26, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 1322, column: 8)
!4029 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 1316, column: 2)
!4030 = !DILocation(line: 1322, column: 9, scope: !4028)
!4031 = !DILocation(line: 1322, column: 8, scope: !4029)
!4032 = !DILocation(line: 1324, column: 8, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1323, column: 6)
!4034 = !DILocation(line: 1325, column: 8, scope: !4033)
!4035 = !DILocation(line: 1308, column: 44, scope: !3991)
!4036 = !DILocation(line: 1308, column: 3, scope: !3991)
!4037 = distinct !{!4037, !4018, !4038}
!4038 = !DILocation(line: 1328, column: 5, scope: !3992)
!4039 = !DILocation(line: 1332, column: 7, scope: !3979)
!4040 = !DILocation(line: 1332, column: 13, scope: !3979)
!4041 = !DILocation(line: 1333, column: 21, scope: !3979)
!4042 = !DILocation(line: 1334, column: 3, scope: !3979)
!4043 = !DILocation(line: 1296, column: 8, scope: !3979)
!4044 = !DILocation(line: 1334, column: 3, scope: !3996)
!4045 = !DILocation(line: 1336, column: 18, scope: !3994)
!4046 = !DILocation(line: 0, scope: !3994)
!4047 = !DILocation(line: 1339, column: 14, scope: !3994)
!4048 = !DILocation(line: 1342, column: 11, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1342, column: 11)
!4050 = !DILocation(line: 0, scope: !4049)
!4051 = !DILocation(line: 1342, column: 11, scope: !3994)
!4052 = !DILocation(line: 1344, column: 20, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1343, column: 2)
!4054 = !DILocation(line: 1345, column: 4, scope: !4053)
!4055 = !DILocation(line: 1352, column: 16, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1352, column: 16)
!4057 = !DILocation(line: 1352, column: 34, scope: !4056)
!4058 = !DILocation(line: 1352, column: 37, scope: !4056)
!4059 = !DILocation(line: 1352, column: 16, scope: !4049)
!4060 = !DILocation(line: 1358, column: 16, scope: !4056)
!4061 = !DILocation(line: 0, scope: !4056)
!4062 = !DILocation(line: 1363, column: 23, scope: !3994)
!4063 = !DILocation(line: 1365, column: 11, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1365, column: 11)
!4065 = !DILocation(line: 1365, column: 11, scope: !3994)
!4066 = !DILocation(line: 1366, column: 2, scope: !4064)
!4067 = !DILocation(line: 1368, column: 5, scope: !3994)
!4068 = !DILocation(line: 1369, column: 11, scope: !4000)
!4069 = !DILocation(line: 1369, column: 33, scope: !4000)
!4070 = !DILocation(line: 1369, column: 37, scope: !4000)
!4071 = !DILocation(line: 1369, column: 11, scope: !3994)
!4072 = !DILocation(line: 1371, column: 14, scope: !3999)
!4073 = !DILocation(line: 0, scope: !3999)
!4074 = !DILocation(line: 1375, column: 12, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 1375, column: 8)
!4076 = !DILocation(line: 1375, column: 16, scope: !4075)
!4077 = !DILocation(line: 1375, column: 28, scope: !4075)
!4078 = !DILocation(line: 1375, column: 46, scope: !4075)
!4079 = !DILocation(line: 1375, column: 8, scope: !3999)
!4080 = !DILocation(line: 1377, column: 25, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 1376, column: 6)
!4082 = !DILocation(line: 1377, column: 31, scope: !4081)
!4083 = !DILocation(line: 1377, column: 23, scope: !4081)
!4084 = !DILocation(line: 1378, column: 26, scope: !4081)
!4085 = !DILocation(line: 1379, column: 8, scope: !4081)
!4086 = !DILocation(line: 1381, column: 13, scope: !4075)
!4087 = !DILocation(line: 1386, column: 23, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 1382, column: 6)
!4089 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 1381, column: 13)
!4090 = !DILocation(line: 1388, column: 8, scope: !4088)
!4091 = !DILocation(line: 1392, column: 17, scope: !3994)
!4092 = !DILocation(line: 1392, column: 7, scope: !3994)
!4093 = !DILocation(line: 1393, column: 5, scope: !3995)
!4094 = !DILocation(line: 1334, column: 3, scope: !3995)
!4095 = distinct !{!4095, !4044, !4096}
!4096 = !DILocation(line: 1393, column: 5, scope: !3996)
!4097 = !DILocation(line: 1397, column: 3, scope: !3979)
!4098 = !DILocation(line: 1399, column: 7, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1399, column: 7)
!4100 = !DILocation(line: 1399, column: 22, scope: !4099)
!4101 = !DILocation(line: 1399, column: 7, scope: !3979)
!4102 = !DILocation(line: 1404, column: 7, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 1400, column: 5)
!4104 = !DILocation(line: 1408, column: 11, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 1408, column: 11)
!4106 = !DILocation(line: 1408, column: 11, scope: !4103)
!4107 = !DILocation(line: 1409, column: 2, scope: !4105)
!4108 = !DILocation(line: 1413, column: 7, scope: !4103)
!4109 = !DILocation(line: 1414, column: 11, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 1414, column: 11)
!4111 = !DILocation(line: 1414, column: 11, scope: !4103)
!4112 = !DILocation(line: 1415, column: 2, scope: !4110)
!4113 = !DILocation(line: 1420, column: 7, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1420, column: 7)
!4115 = !DILocation(line: 1420, column: 26, scope: !4114)
!4116 = !DILocation(line: 1421, column: 7, scope: !4114)
!4117 = !DILocation(line: 1421, column: 11, scope: !4114)
!4118 = !DILocation(line: 1422, column: 4, scope: !4114)
!4119 = !DILocation(line: 1422, column: 8, scope: !4114)
!4120 = !DILocation(line: 1422, column: 14, scope: !4114)
!4121 = !DILocation(line: 1422, column: 27, scope: !4114)
!4122 = !DILocation(line: 1422, column: 30, scope: !4114)
!4123 = !DILocation(line: 1420, column: 7, scope: !3979)
!4124 = !DILocation(line: 1423, column: 5, scope: !4114)
!4125 = !DILocation(line: 1426, column: 7, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1426, column: 7)
!4127 = !DILocation(line: 1426, column: 22, scope: !4126)
!4128 = !DILocation(line: 1426, column: 7, scope: !3979)
!4129 = !DILocation(line: 1433, column: 11, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 1433, column: 11)
!4131 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1427, column: 5)
!4132 = !DILocation(line: 1433, column: 11, scope: !4131)
!4133 = !DILocation(line: 1436, column: 4, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 1434, column: 2)
!4135 = !DILocation(line: 1439, column: 8, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 1439, column: 8)
!4137 = !DILocation(line: 1439, column: 27, scope: !4136)
!4138 = !DILocation(line: 1439, column: 8, scope: !4134)
!4139 = !DILocation(line: 1440, column: 6, scope: !4136)
!4140 = !DILocation(line: 1443, column: 7, scope: !4131)
!4141 = !DILocation(line: 1445, column: 7, scope: !4131)
!4142 = !DILocation(line: 1446, column: 5, scope: !4131)
!4143 = !DILocation(line: 1451, column: 8, scope: !4004)
!4144 = !DILocation(line: 0, scope: !4004)
!4145 = !DILocation(line: 1451, column: 3, scope: !4004)
!4146 = !DILocation(line: 1453, column: 18, scope: !4002)
!4147 = !DILocation(line: 0, scope: !4002)
!4148 = !DILocation(line: 1454, column: 17, scope: !4002)
!4149 = !DILocation(line: 1456, column: 14, scope: !4002)
!4150 = !DILocation(line: 1460, column: 11, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 1460, column: 11)
!4152 = !DILocation(line: 1460, column: 15, scope: !4151)
!4153 = !DILocation(line: 1460, column: 19, scope: !4151)
!4154 = !DILocation(line: 1460, column: 31, scope: !4151)
!4155 = !DILocation(line: 1460, column: 49, scope: !4151)
!4156 = !DILocation(line: 1460, column: 11, scope: !4002)
!4157 = !DILocation(line: 1462, column: 21, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 1461, column: 2)
!4159 = !DILocation(line: 1462, column: 27, scope: !4158)
!4160 = !DILocation(line: 1462, column: 19, scope: !4158)
!4161 = !DILocation(line: 1463, column: 22, scope: !4158)
!4162 = !DILocation(line: 1464, column: 4, scope: !4158)
!4163 = !DILocation(line: 1467, column: 17, scope: !4002)
!4164 = !DILocation(line: 1467, column: 7, scope: !4002)
!4165 = !DILocation(line: 1468, column: 5, scope: !4003)
!4166 = !DILocation(line: 1451, column: 3, scope: !4003)
!4167 = distinct !{!4167, !4145, !4168}
!4168 = !DILocation(line: 1468, column: 5, scope: !4004)
!4169 = !DILocation(line: 1473, column: 29, scope: !4007)
!4170 = !DILocation(line: 1473, column: 54, scope: !4007)
!4171 = !DILocation(line: 0, scope: !4007)
!4172 = !DILocation(line: 1476, column: 23, scope: !4007)
!4173 = !DILocation(line: 1476, column: 20, scope: !4007)
!4174 = !DILocation(line: 1478, column: 1, scope: !3979)
!4175 = distinct !DISubprogram(name: "partition_to_var", scope: !2279, file: !2279, line: 111, type: !4176, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4178)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{!1014, !2278, !823}
!4178 = !{!4179, !4180, !4181}
!4179 = !DILocalVariable(name: "map", arg: 1, scope: !4175, file: !2279, line: 111, type: !2278)
!4180 = !DILocalVariable(name: "i", arg: 2, scope: !4175, file: !2279, line: 111, type: !823)
!4181 = !DILocalVariable(name: "name", scope: !4175, file: !2279, line: 113, type: !1014)
!4182 = !DILocation(line: 0, scope: !4175)
!4183 = !DILocation(line: 114, column: 12, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4175, file: !2279, line: 114, column: 7)
!4185 = !DILocation(line: 114, column: 7, scope: !4184)
!4186 = !DILocation(line: 114, column: 7, scope: !4175)
!4187 = !DILocation(line: 115, column: 9, scope: !4184)
!4188 = !DILocation(line: 115, column: 5, scope: !4184)
!4189 = !DILocation(line: 116, column: 7, scope: !4175)
!4190 = !DILocation(line: 117, column: 10, scope: !4175)
!4191 = !DILocation(line: 118, column: 3, scope: !4175)
!4192 = distinct !DISubprogram(name: "construct_init_block", scope: !3, file: !3, line: 3445, type: !4193, scopeLine: 3446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4195)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!1435}
!4195 = !{!4196, !4197, !4198, !4199, !4200}
!4196 = !DILocalVariable(name: "init_block", scope: !4192, file: !3, line: 3447, type: !1435)
!4197 = !DILocalVariable(name: "first_block", scope: !4192, file: !3, line: 3447, type: !1435)
!4198 = !DILocalVariable(name: "e", scope: !4192, file: !3, line: 3448, type: !873)
!4199 = !DILocalVariable(name: "flags", scope: !4192, file: !3, line: 3449, type: !823)
!4200 = !DILocalVariable(name: "label", scope: !4201, file: !3, line: 3464, type: !1014)
!4201 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 3463, column: 5)
!4202 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 3462, column: 7)
!4203 = !DILocation(line: 0, scope: !4192)
!4204 = !DILocation(line: 3452, column: 3, scope: !4192)
!4205 = !DILocation(line: 3453, column: 21, scope: !4192)
!4206 = !DILocation(line: 3453, column: 3, scope: !4192)
!4207 = !DILocation(line: 3454, column: 21, scope: !4192)
!4208 = !DILocation(line: 3454, column: 3, scope: !4192)
!4209 = !DILocation(line: 3455, column: 3, scope: !4192)
!4210 = !DILocation(line: 3455, column: 20, scope: !4192)
!4211 = !DILocation(line: 3455, column: 26, scope: !4192)
!4212 = !DILocation(line: 3456, column: 3, scope: !4192)
!4213 = !DILocation(line: 3456, column: 19, scope: !4192)
!4214 = !DILocation(line: 3456, column: 25, scope: !4192)
!4215 = !DILocation(line: 3458, column: 7, scope: !4192)
!4216 = !DILocation(line: 3462, column: 7, scope: !4202)
!4217 = !DILocation(line: 3462, column: 9, scope: !4202)
!4218 = !DILocation(line: 3462, column: 15, scope: !4202)
!4219 = !DILocation(line: 3462, column: 23, scope: !4202)
!4220 = !DILocation(line: 3462, column: 40, scope: !4202)
!4221 = !DILocation(line: 3462, column: 20, scope: !4202)
!4222 = !DILocation(line: 3462, column: 7, scope: !4192)
!4223 = !DILocation(line: 3464, column: 20, scope: !4201)
!4224 = !DILocation(line: 0, scope: !4201)
!4225 = !DILocation(line: 3466, column: 18, scope: !4201)
!4226 = !DILocation(line: 3466, column: 7, scope: !4201)
!4227 = !DILocation(line: 3468, column: 5, scope: !4201)
!4228 = !DILocation(line: 0, scope: !4202)
!4229 = !DILocation(line: 3472, column: 36, scope: !4192)
!4230 = !DILocation(line: 3473, column: 8, scope: !4192)
!4231 = !DILocation(line: 3474, column: 8, scope: !4192)
!4232 = !DILocation(line: 3472, column: 16, scope: !4192)
!4233 = !DILocation(line: 3475, column: 27, scope: !4192)
!4234 = !DILocation(line: 3475, column: 44, scope: !4192)
!4235 = !DILocation(line: 3475, column: 15, scope: !4192)
!4236 = !DILocation(line: 3475, column: 25, scope: !4192)
!4237 = !DILocation(line: 3476, column: 23, scope: !4192)
!4238 = !DILocation(line: 3476, column: 40, scope: !4192)
!4239 = !DILocation(line: 3476, column: 15, scope: !4192)
!4240 = !DILocation(line: 3476, column: 21, scope: !4192)
!4241 = !DILocation(line: 3477, column: 7, scope: !4192)
!4242 = !DILocation(line: 3479, column: 24, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 3478, column: 5)
!4244 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 3477, column: 7)
!4245 = !DILocation(line: 3480, column: 7, scope: !4243)
!4246 = !DILocation(line: 3481, column: 11, scope: !4243)
!4247 = !DILocation(line: 3482, column: 5, scope: !4243)
!4248 = !DILocation(line: 3484, column: 32, scope: !4244)
!4249 = !DILocation(line: 3484, column: 9, scope: !4244)
!4250 = !DILocation(line: 0, scope: !4244)
!4251 = !DILocation(line: 3485, column: 6, scope: !4192)
!4252 = !DILocation(line: 3485, column: 18, scope: !4192)
!4253 = !DILocation(line: 3486, column: 14, scope: !4192)
!4254 = !DILocation(line: 3486, column: 31, scope: !4192)
!4255 = !DILocation(line: 3486, column: 6, scope: !4192)
!4256 = !DILocation(line: 3486, column: 12, scope: !4192)
!4257 = !DILocation(line: 3488, column: 3, scope: !4192)
!4258 = !DILocation(line: 3489, column: 3, scope: !4192)
!4259 = distinct !DISubprogram(name: "ei_start_1", scope: !337, file: !337, line: 696, type: !4260, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4262)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{!3248, !3253}
!4262 = !{!4263, !4264}
!4263 = !DILocalVariable(name: "ev", arg: 1, scope: !4259, file: !337, line: 696, type: !3253)
!4264 = !DILocalVariable(name: "i", scope: !4259, file: !337, line: 698, type: !3248)
!4265 = !DILocation(line: 0, scope: !4259)
!4266 = !DILocation(line: 700, column: 5, scope: !4259)
!4267 = !DILocation(line: 700, column: 11, scope: !4259)
!4268 = !DILocation(line: 701, column: 5, scope: !4259)
!4269 = !DILocation(line: 701, column: 15, scope: !4259)
!4270 = !DILocation(line: 703, column: 3, scope: !4259)
!4271 = distinct !DISubprogram(name: "ei_cond", scope: !337, file: !337, line: 771, type: !4272, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4275)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!822, !3248, !4274}
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!4275 = !{!4276, !4277}
!4276 = !DILocalVariable(name: "ei", arg: 1, scope: !4271, file: !337, line: 771, type: !3248)
!4277 = !DILocalVariable(name: "p", arg: 2, scope: !4271, file: !337, line: 771, type: !4274)
!4278 = !DILocation(line: 0, scope: !4271)
!4279 = !DILocation(line: 773, column: 8, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4271, file: !337, line: 773, column: 7)
!4281 = !DILocation(line: 773, column: 7, scope: !4271)
!4282 = !DILocation(line: 775, column: 12, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4280, file: !337, line: 774, column: 5)
!4284 = !DILocation(line: 776, column: 7, scope: !4283)
!4285 = !DILocation(line: 781, column: 7, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4280, file: !337, line: 779, column: 5)
!4287 = !DILocation(line: 0, scope: !4280)
!4288 = !DILocation(line: 783, column: 1, scope: !4271)
!4289 = distinct !DISubprogram(name: "ei_next", scope: !337, file: !337, line: 736, type: !4290, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4293)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{null, !4292}
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!4293 = !{!4294}
!4294 = !DILocalVariable(name: "i", arg: 1, scope: !4289, file: !337, line: 736, type: !4292)
!4295 = !DILocation(line: 0, scope: !4289)
!4296 = !DILocation(line: 738, column: 3, scope: !4289)
!4297 = !DILocation(line: 739, column: 11, scope: !4289)
!4298 = !DILocation(line: 740, column: 1, scope: !4289)
!4299 = distinct !DISubprogram(name: "expand_gimple_basic_block", scope: !3, file: !3, line: 3105, type: !4300, scopeLine: 3106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4302)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!1435, !1435}
!4302 = !{!4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4315, !4319, !4334, !4335, !4336, !4337, !4338, !4350, !4351, !4352, !4355, !4356, !4357, !4358, !4359, !4363, !4364, !4365, !4369, !4370, !4371, !4372, !4376, !4378}
!4303 = !DILocalVariable(name: "bb", arg: 1, scope: !4299, file: !3, line: 3105, type: !1435)
!4304 = !DILocalVariable(name: "gsi", scope: !4299, file: !3, line: 3107, type: !3942)
!4305 = !DILocalVariable(name: "stmts", scope: !4299, file: !3, line: 3108, type: !884)
!4306 = !DILocalVariable(name: "stmt", scope: !4299, file: !3, line: 3109, type: !894)
!4307 = !DILocalVariable(name: "note", scope: !4299, file: !3, line: 3110, type: !900)
!4308 = !DILocalVariable(name: "last", scope: !4299, file: !3, line: 3110, type: !900)
!4309 = !DILocalVariable(name: "e", scope: !4299, file: !3, line: 3111, type: !873)
!4310 = !DILocalVariable(name: "ei", scope: !4299, file: !3, line: 3112, type: !3248)
!4311 = !DILocalVariable(name: "elt", scope: !4299, file: !3, line: 3113, type: !1373)
!4312 = !DILocalVariable(name: "ret_stmt", scope: !4313, file: !3, line: 3135, type: !894)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 3134, column: 5)
!4314 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3132, column: 7)
!4315 = !DILocalVariable(name: "new_bb", scope: !4316, file: !3, line: 3187, type: !1435)
!4316 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 3186, column: 5)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 3185, column: 3)
!4318 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3185, column: 3)
!4319 = !DILocalVariable(name: "iter", scope: !4320, file: !3, line: 3219, type: !4322)
!4320 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 3218, column: 2)
!4321 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 3215, column: 11)
!4322 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !782, line: 140, baseType: !4323)
!4323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !782, line: 131, size: 320, elements: !4324)
!4324 = !{!4325, !4326, !4327, !4329, !4331, !4332, !4333}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4323, file: !782, line: 133, baseType: !822, size: 8)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !4323, file: !782, line: 134, baseType: !781, size: 32, offset: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !4323, file: !782, line: 135, baseType: !4328, size: 64, offset: 64)
!4328 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !782, line: 42, baseType: !1516)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !4323, file: !782, line: 136, baseType: !4330, size: 64, offset: 128)
!4330 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !782, line: 50, baseType: !1523)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !4323, file: !782, line: 137, baseType: !823, size: 32, offset: 192)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !4323, file: !782, line: 138, baseType: !823, size: 32, offset: 224)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !4323, file: !782, line: 139, baseType: !894, size: 64, offset: 256)
!4334 = !DILocalVariable(name: "op", scope: !4320, file: !3, line: 3220, type: !1014)
!4335 = !DILocalVariable(name: "def", scope: !4320, file: !3, line: 3221, type: !894)
!4336 = !DILocalVariable(name: "sloc", scope: !4320, file: !3, line: 3223, type: !853)
!4337 = !DILocalVariable(name: "sblock", scope: !4320, file: !3, line: 3224, type: !1014)
!4338 = !DILocalVariable(name: "imm_iter", scope: !4339, file: !3, line: 3231, type: !4343)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 3230, column: 8)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 3229, column: 10)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 3228, column: 4)
!4342 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 3228, column: 4)
!4343 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1216, line: 249, baseType: !4344)
!4344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1216, line: 238, size: 448, elements: !4345)
!4345 = !{!4346, !4347, !4348, !4349}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !4344, file: !1216, line: 241, baseType: !2239, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !4344, file: !1216, line: 243, baseType: !2239, size: 64, offset: 64)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !4344, file: !1216, line: 245, baseType: !2240, size: 256, offset: 128)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !4344, file: !1216, line: 248, baseType: !2239, size: 64, offset: 384)
!4350 = !DILocalVariable(name: "use_p", scope: !4339, file: !3, line: 3232, type: !2238)
!4351 = !DILocalVariable(name: "have_debug_uses", scope: !4339, file: !3, line: 3233, type: !822)
!4352 = !DILocalVariable(name: "debugstmt", scope: !4353, file: !3, line: 3251, type: !894)
!4353 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 3245, column: 5)
!4354 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 3244, column: 7)
!4355 = !DILocalVariable(name: "value", scope: !4353, file: !3, line: 3252, type: !1014)
!4356 = !DILocalVariable(name: "vexpr", scope: !4353, file: !3, line: 3253, type: !1014)
!4357 = !DILocalVariable(name: "val", scope: !4353, file: !3, line: 3254, type: !900)
!4358 = !DILocalVariable(name: "mode", scope: !4353, file: !3, line: 3255, type: !5)
!4359 = !DILocalVariable(name: "sloc", scope: !4360, file: !3, line: 3301, type: !853)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 3300, column: 2)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 3299, column: 16)
!4362 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 3293, column: 11)
!4363 = !DILocalVariable(name: "sblock", scope: !4360, file: !3, line: 3302, type: !1014)
!4364 = !DILocalVariable(name: "nsi", scope: !4360, file: !3, line: 3303, type: !3942)
!4365 = !DILocalVariable(name: "var", scope: !4366, file: !3, line: 3307, type: !1014)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 3306, column: 6)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 3305, column: 4)
!4368 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 3305, column: 4)
!4369 = !DILocalVariable(name: "value", scope: !4366, file: !3, line: 3308, type: !1014)
!4370 = !DILocalVariable(name: "val", scope: !4366, file: !3, line: 3309, type: !900)
!4371 = !DILocalVariable(name: "mode", scope: !4366, file: !3, line: 3310, type: !5)
!4372 = !DILocalVariable(name: "can_fallthru", scope: !4373, file: !3, line: 3364, type: !822)
!4373 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 3363, column: 6)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 3362, column: 8)
!4375 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 3361, column: 2)
!4376 = !DILocalVariable(name: "def_p", scope: !4377, file: !3, line: 3376, type: !2241)
!4377 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 3375, column: 6)
!4378 = !DILocalVariable(name: "dummy", scope: !4379, file: !3, line: 3421, type: !900)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 3420, column: 5)
!4380 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3416, column: 7)
!4381 = !DILocation(line: 0, scope: !4299)
!4382 = !DILocation(line: 3107, column: 3, scope: !4299)
!4383 = !DILocation(line: 3111, column: 3, scope: !4299)
!4384 = !DILocation(line: 3112, column: 3, scope: !4299)
!4385 = !DILocation(line: 3115, column: 7, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3115, column: 7)
!4387 = !DILocation(line: 3115, column: 7, scope: !4299)
!4388 = !DILocation(line: 3117, column: 11, scope: !4386)
!4389 = !DILocation(line: 3116, column: 5, scope: !4386)
!4390 = !DILocation(line: 3123, column: 11, scope: !4299)
!4391 = !DILocation(line: 3124, column: 10, scope: !4299)
!4392 = !DILocation(line: 3124, column: 17, scope: !4299)
!4393 = !DILocation(line: 3125, column: 3, scope: !4299)
!4394 = !DILocation(line: 3126, column: 3, scope: !4299)
!4395 = !DILocation(line: 3127, column: 7, scope: !4299)
!4396 = !DILocation(line: 3127, column: 13, scope: !4299)
!4397 = !DILocation(line: 3131, column: 9, scope: !4299)
!4398 = !DILocation(line: 3132, column: 8, scope: !4314)
!4399 = !DILocation(line: 3133, column: 7, scope: !4314)
!4400 = !DILocation(line: 3133, column: 23, scope: !4314)
!4401 = !DILocation(line: 3133, column: 10, scope: !4314)
!4402 = !DILocation(line: 3133, column: 39, scope: !4314)
!4403 = !DILocation(line: 3132, column: 7, scope: !4299)
!4404 = !DILocation(line: 3135, column: 25, scope: !4313)
!4405 = !DILocation(line: 0, scope: !4313)
!4406 = !DILocation(line: 3137, column: 7, scope: !4313)
!4407 = !DILocation(line: 3138, column: 7, scope: !4313)
!4408 = !DILocation(line: 3140, column: 26, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 3140, column: 11)
!4410 = !DILocation(line: 0, scope: !4409)
!4411 = !DILocation(line: 3140, column: 15, scope: !4409)
!4412 = !DILocation(line: 3140, column: 23, scope: !4409)
!4413 = !DILocation(line: 3141, column: 4, scope: !4409)
!4414 = !DILocation(line: 3141, column: 8, scope: !4409)
!4415 = !DILocation(line: 3140, column: 11, scope: !4313)
!4416 = !DILocation(line: 3143, column: 4, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 3142, column: 2)
!4418 = !DILocation(line: 3144, column: 4, scope: !4417)
!4419 = !DILocation(line: 3144, column: 27, scope: !4417)
!4420 = !DILocation(line: 3144, column: 33, scope: !4417)
!4421 = !DILocation(line: 3145, column: 2, scope: !4417)
!4422 = !DILocation(line: 3148, column: 9, scope: !4299)
!4423 = !DILocation(line: 3149, column: 8, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3149, column: 7)
!4425 = !DILocation(line: 3149, column: 7, scope: !4299)
!4426 = !DILocation(line: 3151, column: 14, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 3150, column: 5)
!4428 = !DILocation(line: 3152, column: 11, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 3152, column: 11)
!4430 = !DILocation(line: 3152, column: 30, scope: !4429)
!4431 = !DILocation(line: 3152, column: 11, scope: !4427)
!4432 = !DILocation(line: 3154, column: 5, scope: !4427)
!4433 = !DILocation(line: 3156, column: 31, scope: !4299)
!4434 = !DILocation(line: 3156, column: 47, scope: !4299)
!4435 = !DILocation(line: 3156, column: 9, scope: !4299)
!4436 = !DILocation(line: 3158, column: 7, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3158, column: 7)
!4438 = !DILocation(line: 3158, column: 15, scope: !4437)
!4439 = !DILocation(line: 3158, column: 12, scope: !4437)
!4440 = !DILocation(line: 3160, column: 14, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4437, file: !3, line: 3159, column: 5)
!4442 = !DILocation(line: 3162, column: 11, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 3162, column: 11)
!4444 = !DILocation(line: 3162, column: 11, scope: !4441)
!4445 = !DILocation(line: 3164, column: 4, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 3163, column: 2)
!4447 = !DILocation(line: 3165, column: 4, scope: !4446)
!4448 = !DILocation(line: 3166, column: 2, scope: !4446)
!4449 = !DILocation(line: 3168, column: 11, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 3168, column: 11)
!4451 = !DILocation(line: 3168, column: 11, scope: !4441)
!4452 = !DILocation(line: 3169, column: 20, scope: !4450)
!4453 = !DILocation(line: 3169, column: 2, scope: !4450)
!4454 = !DILocation(line: 3173, column: 22, scope: !4441)
!4455 = !DILocation(line: 3173, column: 7, scope: !4441)
!4456 = !DILocation(line: 3173, column: 20, scope: !4441)
!4457 = !DILocation(line: 3174, column: 11, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 3174, column: 11)
!4459 = !DILocation(line: 3174, column: 11, scope: !4441)
!4460 = !DILocation(line: 3175, column: 17, scope: !4458)
!4461 = !DILocation(line: 3175, column: 15, scope: !4458)
!4462 = !DILocation(line: 3176, column: 54, scope: !4441)
!4463 = !DILocation(line: 0, scope: !4441)
!4464 = !DILocation(line: 3175, column: 2, scope: !4458)
!4465 = !DILocation(line: 3176, column: 14, scope: !4441)
!4466 = !DILocation(line: 3178, column: 7, scope: !4441)
!4467 = !DILocation(line: 3179, column: 5, scope: !4441)
!4468 = !DILocation(line: 3181, column: 27, scope: !4437)
!4469 = !DILocation(line: 3181, column: 12, scope: !4437)
!4470 = !DILocation(line: 3181, column: 25, scope: !4437)
!4471 = !DILocation(line: 0, scope: !4437)
!4472 = !DILocation(line: 3183, column: 3, scope: !4299)
!4473 = !DILocation(line: 3183, column: 27, scope: !4299)
!4474 = !DILocation(line: 0, scope: !4320)
!4475 = !DILocation(line: 0, scope: !4339)
!4476 = !DILocation(line: 0, scope: !4360)
!4477 = !DILocation(line: 3185, column: 3, scope: !4299)
!4478 = !DILocation(line: 3185, column: 11, scope: !4317)
!4479 = !DILocation(line: 3185, column: 10, scope: !4317)
!4480 = !DILocation(line: 3185, column: 3, scope: !4318)
!4481 = !DILocation(line: 3189, column: 14, scope: !4316)
!4482 = !DILocation(line: 3215, column: 11, scope: !4321)
!4483 = !DILocation(line: 3216, column: 10, scope: !4321)
!4484 = !DILocation(line: 3216, column: 7, scope: !4321)
!4485 = !DILocation(line: 3216, column: 4, scope: !4321)
!4486 = !DILocation(line: 3217, column: 8, scope: !4321)
!4487 = !DILocation(line: 3215, column: 11, scope: !4316)
!4488 = !DILocation(line: 3219, column: 4, scope: !4320)
!4489 = !DILocation(line: 3223, column: 22, scope: !4320)
!4490 = !DILocation(line: 3224, column: 18, scope: !4320)
!4491 = !DILocation(line: 3228, column: 4, scope: !4342)
!4492 = !DILocation(line: 0, scope: !4342)
!4493 = !DILocation(line: 3228, column: 4, scope: !4341)
!4494 = !DILocation(line: 3229, column: 17, scope: !4340)
!4495 = !DILocation(line: 3229, column: 15, scope: !4340)
!4496 = !DILocation(line: 3229, column: 10, scope: !4341)
!4497 = !DILocation(line: 3231, column: 3, scope: !4339)
!4498 = !DILocation(line: 3235, column: 3, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 3235, column: 3)
!4500 = !DILocation(line: 0, scope: !4499)
!4501 = !DILocation(line: 3235, column: 3, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 3235, column: 3)
!4503 = !DILocation(line: 3237, column: 32, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !3, line: 3237, column: 11)
!4505 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 3236, column: 5)
!4506 = !DILocation(line: 3237, column: 11, scope: !4504)
!4507 = !DILocation(line: 3237, column: 11, scope: !4505)
!4508 = distinct !{!4508, !4498, !4509}
!4509 = !DILocation(line: 3242, column: 5, scope: !4499)
!4510 = !DILocation(line: 3244, column: 7, scope: !4339)
!4511 = !DILocation(line: 3252, column: 20, scope: !4353)
!4512 = !DILocation(line: 0, scope: !4353)
!4513 = !DILocation(line: 3253, column: 20, scope: !4353)
!4514 = !DILocation(line: 3257, column: 38, scope: !4353)
!4515 = !DILocation(line: 3257, column: 7, scope: !4353)
!4516 = !DILocation(line: 3258, column: 28, scope: !4353)
!4517 = !DILocation(line: 3258, column: 7, scope: !4353)
!4518 = !DILocation(line: 3260, column: 7, scope: !4353)
!4519 = !DILocation(line: 3260, column: 31, scope: !4353)
!4520 = !DILocation(line: 3261, column: 27, scope: !4353)
!4521 = !DILocation(line: 3261, column: 7, scope: !4353)
!4522 = !DILocation(line: 3261, column: 25, scope: !4353)
!4523 = !DILocation(line: 3262, column: 11, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4353, file: !3, line: 3262, column: 11)
!4525 = !DILocation(line: 3262, column: 11, scope: !4353)
!4526 = !DILocation(line: 3263, column: 16, scope: !4524)
!4527 = !DILocation(line: 3263, column: 9, scope: !4524)
!4528 = !DILocation(line: 3265, column: 16, scope: !4524)
!4529 = !DILocation(line: 3266, column: 25, scope: !4353)
!4530 = !DILocation(line: 0, scope: !4524)
!4531 = !DILocation(line: 3268, column: 13, scope: !4353)
!4532 = !DILocation(line: 3271, column: 13, scope: !4353)
!4533 = !DILocation(line: 3273, column: 7, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4353, file: !3, line: 3273, column: 7)
!4535 = !DILocation(line: 0, scope: !4534)
!4536 = !DILocation(line: 3273, column: 7, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 3273, column: 7)
!4538 = !DILocation(line: 3275, column: 9, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 3275, column: 8)
!4540 = distinct !DILexicalBlock(scope: !4537, file: !3, line: 3274, column: 9)
!4541 = !DILocation(line: 3275, column: 8, scope: !4540)
!4542 = !DILocation(line: 3278, column: 4, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 3278, column: 4)
!4544 = !DILocation(line: 0, scope: !4543)
!4545 = !DILocation(line: 3278, column: 4, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 3278, column: 4)
!4547 = !DILocation(line: 3279, column: 6, scope: !4546)
!4548 = distinct !{!4548, !4542, !4549}
!4549 = !DILocation(line: 3279, column: 6, scope: !4543)
!4550 = !DILocation(line: 3281, column: 4, scope: !4540)
!4551 = !DILocation(line: 3282, column: 9, scope: !4540)
!4552 = distinct !{!4552, !4533, !4553}
!4553 = !DILocation(line: 3282, column: 9, scope: !4534)
!4554 = !DILocation(line: 3284, column: 8, scope: !4340)
!4555 = !DILocation(line: 3284, column: 8, scope: !4339)
!4556 = distinct !{!4556, !4491, !4557}
!4557 = !DILocation(line: 3284, column: 8, scope: !4342)
!4558 = !DILocation(line: 3285, column: 4, scope: !4320)
!4559 = !DILocation(line: 3286, column: 4, scope: !4320)
!4560 = !DILocation(line: 3287, column: 2, scope: !4321)
!4561 = !DILocation(line: 3287, column: 2, scope: !4320)
!4562 = !DILocation(line: 3289, column: 39, scope: !4316)
!4563 = !DILocation(line: 3293, column: 11, scope: !4362)
!4564 = !DILocation(line: 3293, column: 30, scope: !4362)
!4565 = !DILocation(line: 3293, column: 11, scope: !4316)
!4566 = !DILocation(line: 3295, column: 13, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 3294, column: 2)
!4568 = !DILocation(line: 0, scope: !4316)
!4569 = !DILocation(line: 3296, column: 8, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 3296, column: 8)
!4571 = !DILocation(line: 3296, column: 8, scope: !4567)
!4572 = !DILocation(line: 3299, column: 16, scope: !4361)
!4573 = !DILocation(line: 3299, column: 16, scope: !4362)
!4574 = !DILocation(line: 3301, column: 22, scope: !4360)
!4575 = !DILocation(line: 3302, column: 18, scope: !4360)
!4576 = !DILocation(line: 3303, column: 4, scope: !4360)
!4577 = !DILocation(line: 3303, column: 31, scope: !4360)
!4578 = !DILocation(line: 3305, column: 4, scope: !4360)
!4579 = !DILocation(line: 3189, column: 12, scope: !4316)
!4580 = !DILocation(line: 3307, column: 19, scope: !4366)
!4581 = !DILocation(line: 0, scope: !4366)
!4582 = !DILocation(line: 3312, column: 12, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 3312, column: 12)
!4584 = !DILocation(line: 3312, column: 12, scope: !4366)
!4585 = !DILocation(line: 3313, column: 11, scope: !4583)
!4586 = !DILocation(line: 3313, column: 3, scope: !4583)
!4587 = !DILocation(line: 0, scope: !4583)
!4588 = !DILocation(line: 3317, column: 15, scope: !4366)
!4589 = !DILocation(line: 3319, column: 39, scope: !4366)
!4590 = !DILocation(line: 3319, column: 8, scope: !4366)
!4591 = !DILocation(line: 3320, column: 29, scope: !4366)
!4592 = !DILocation(line: 3320, column: 8, scope: !4366)
!4593 = !DILocation(line: 3322, column: 12, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 3322, column: 12)
!4595 = !DILocation(line: 3322, column: 12, scope: !4366)
!4596 = !DILocation(line: 3323, column: 10, scope: !4594)
!4597 = !DILocation(line: 3323, column: 3, scope: !4594)
!4598 = !DILocation(line: 3325, column: 10, scope: !4594)
!4599 = !DILocation(line: 0, scope: !4594)
!4600 = !DILocation(line: 3327, column: 14, scope: !4366)
!4601 = !DILocation(line: 3330, column: 14, scope: !4366)
!4602 = !DILocation(line: 3332, column: 12, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 3332, column: 12)
!4604 = !DILocation(line: 3332, column: 22, scope: !4603)
!4605 = !DILocation(line: 3332, column: 26, scope: !4603)
!4606 = !DILocation(line: 3332, column: 37, scope: !4603)
!4607 = !DILocation(line: 3332, column: 12, scope: !4366)
!4608 = !DILocation(line: 3336, column: 35, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 3333, column: 3)
!4610 = !DILocation(line: 3336, column: 5, scope: !4609)
!4611 = !DILocation(line: 3336, column: 33, scope: !4609)
!4612 = !DILocation(line: 3337, column: 5, scope: !4609)
!4613 = !DILocation(line: 3338, column: 5, scope: !4609)
!4614 = !DILocation(line: 3338, column: 33, scope: !4609)
!4615 = !DILocation(line: 3339, column: 3, scope: !4609)
!4616 = !DILocation(line: 3346, column: 8, scope: !4366)
!4617 = !DILocation(line: 3348, column: 14, scope: !4366)
!4618 = !DILocation(line: 3349, column: 8, scope: !4366)
!4619 = !DILocation(line: 3350, column: 12, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 3350, column: 12)
!4621 = !DILocation(line: 3350, column: 12, scope: !4366)
!4622 = !DILocation(line: 3352, column: 15, scope: !4366)
!4623 = !DILocation(line: 3353, column: 13, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 3353, column: 12)
!4625 = !DILocation(line: 0, scope: !4367)
!4626 = distinct !{!4626, !4627, !4628}
!4627 = !DILocation(line: 3305, column: 4, scope: !4368)
!4628 = !DILocation(line: 3355, column: 6, scope: !4368)
!4629 = !DILocation(line: 3357, column: 4, scope: !4360)
!4630 = !DILocation(line: 3358, column: 4, scope: !4360)
!4631 = !DILocation(line: 3359, column: 2, scope: !4361)
!4632 = !DILocation(line: 3359, column: 2, scope: !4360)
!4633 = !DILocation(line: 3362, column: 8, scope: !4374)
!4634 = !DILocation(line: 3362, column: 30, scope: !4374)
!4635 = !DILocation(line: 3362, column: 33, scope: !4374)
!4636 = !DILocation(line: 3362, column: 8, scope: !4375)
!4637 = !DILocation(line: 0, scope: !4373)
!4638 = !DILocation(line: 3364, column: 8, scope: !4373)
!4639 = !DILocation(line: 3365, column: 17, scope: !4373)
!4640 = !DILocation(line: 3366, column: 12, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4373, file: !3, line: 3366, column: 12)
!4642 = !DILocation(line: 3366, column: 12, scope: !4373)
!4643 = !DILocation(line: 3368, column: 9, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 3368, column: 9)
!4645 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 3367, column: 3)
!4646 = !DILocation(line: 3368, column: 9, scope: !4645)
!4647 = !DILocation(line: 3373, column: 6, scope: !4374)
!4648 = !DILocation(line: 3377, column: 16, scope: !4377)
!4649 = !DILocation(line: 0, scope: !4377)
!4650 = !DILocation(line: 3379, column: 18, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 3379, column: 12)
!4652 = !DILocation(line: 3383, column: 12, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 3383, column: 9)
!4654 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 3380, column: 3)
!4655 = !DILocation(line: 3383, column: 9, scope: !4653)
!4656 = !DILocation(line: 3379, column: 12, scope: !4377)
!4657 = !DILocation(line: 3385, column: 12, scope: !4653)
!4658 = !DILocation(line: 3384, column: 12, scope: !4653)
!4659 = !DILocation(line: 3383, column: 9, scope: !4654)
!4660 = !DILocation(line: 3388, column: 15, scope: !4377)
!4661 = !DILocation(line: 3389, column: 8, scope: !4377)
!4662 = !DILocation(line: 3390, column: 6, scope: !4374)
!4663 = !DILocation(line: 3392, column: 5, scope: !4317)
!4664 = !DILocation(line: 3185, column: 28, scope: !4317)
!4665 = !DILocation(line: 3185, column: 3, scope: !4317)
!4666 = distinct !{!4666, !4480, !4667}
!4667 = !DILocation(line: 3392, column: 5, scope: !4318)
!4668 = !DILocation(line: 3394, column: 35, scope: !4299)
!4669 = !DILocation(line: 3397, column: 3, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3397, column: 3)
!4671 = !DILocation(line: 0, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 3397, column: 3)
!4673 = !DILocation(line: 0, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 3406, column: 11)
!4675 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 3398, column: 5)
!4676 = !DILocation(line: 3397, column: 3, scope: !4672)
!4677 = !DILocation(line: 3399, column: 11, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 3399, column: 11)
!4679 = !DILocation(line: 3399, column: 14, scope: !4678)
!4680 = !DILocation(line: 3399, column: 25, scope: !4678)
!4681 = !DILocation(line: 3399, column: 31, scope: !4678)
!4682 = !DILocation(line: 3399, column: 28, scope: !4678)
!4683 = !DILocation(line: 3399, column: 11, scope: !4675)
!4684 = !DILocation(line: 3401, column: 4, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 3400, column: 2)
!4686 = !DILocation(line: 3402, column: 25, scope: !4685)
!4687 = !DILocation(line: 3402, column: 28, scope: !4685)
!4688 = !DILocation(line: 3402, column: 4, scope: !4685)
!4689 = !DILocation(line: 3403, column: 20, scope: !4685)
!4690 = !DILocation(line: 3403, column: 4, scope: !4685)
!4691 = !DILocation(line: 3403, column: 7, scope: !4685)
!4692 = !DILocation(line: 3403, column: 18, scope: !4685)
!4693 = !DILocation(line: 3404, column: 2, scope: !4685)
!4694 = !DILocation(line: 3405, column: 7, scope: !4675)
!4695 = !DILocation(line: 3405, column: 10, scope: !4675)
!4696 = !DILocation(line: 3405, column: 21, scope: !4675)
!4697 = !DILocation(line: 3406, column: 15, scope: !4674)
!4698 = !DILocation(line: 3406, column: 21, scope: !4674)
!4699 = !DILocation(line: 3406, column: 38, scope: !4674)
!4700 = !DILocation(line: 3406, column: 44, scope: !4674)
!4701 = !DILocation(line: 3406, column: 56, scope: !4674)
!4702 = !DILocation(line: 3406, column: 49, scope: !4674)
!4703 = !DILocation(line: 3406, column: 11, scope: !4675)
!4704 = !DILocation(line: 3408, column: 15, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 3407, column: 2)
!4706 = !DILocation(line: 3408, column: 4, scope: !4705)
!4707 = !DILocation(line: 3409, column: 4, scope: !4705)
!4708 = !DILocation(line: 3409, column: 7, scope: !4705)
!4709 = !DILocation(line: 3409, column: 13, scope: !4705)
!4710 = !DILocation(line: 3410, column: 2, scope: !4705)
!4711 = distinct !{!4711, !4669, !4712}
!4712 = !DILocation(line: 3411, column: 5, scope: !4670)
!4713 = !DILocation(line: 3416, column: 7, scope: !4380)
!4714 = !DILocation(line: 3417, column: 7, scope: !4380)
!4715 = !DILocation(line: 3417, column: 11, scope: !4380)
!4716 = !DILocation(line: 3417, column: 34, scope: !4380)
!4717 = !DILocation(line: 3417, column: 40, scope: !4380)
!4718 = !DILocation(line: 3418, column: 7, scope: !4380)
!4719 = !DILocation(line: 3418, column: 18, scope: !4380)
!4720 = !DILocation(line: 3418, column: 16, scope: !4380)
!4721 = !DILocation(line: 3419, column: 7, scope: !4380)
!4722 = !DILocation(line: 3419, column: 10, scope: !4380)
!4723 = !DILocation(line: 3416, column: 7, scope: !4299)
!4724 = !DILocation(line: 3421, column: 19, scope: !4379)
!4725 = !DILocation(line: 0, scope: !4379)
!4726 = !DILocation(line: 3422, column: 30, scope: !4379)
!4727 = !DILocation(line: 3422, column: 7, scope: !4379)
!4728 = !DILocation(line: 3423, column: 5, scope: !4379)
!4729 = !DILocation(line: 3425, column: 3, scope: !4299)
!4730 = !DILocation(line: 3429, column: 10, scope: !4299)
!4731 = !DILocation(line: 3430, column: 7, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3430, column: 7)
!4733 = !DILocation(line: 3430, column: 7, scope: !4299)
!4734 = !DILocation(line: 3431, column: 12, scope: !4732)
!4735 = !DILocation(line: 0, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3432, column: 7)
!4737 = !DILocation(line: 3432, column: 7, scope: !4736)
!4738 = !DILocation(line: 3431, column: 5, scope: !4732)
!4739 = !DILocation(line: 3432, column: 7, scope: !4299)
!4740 = !DILocation(line: 3433, column: 12, scope: !4736)
!4741 = !DILocation(line: 3433, column: 5, scope: !4736)
!4742 = !DILocation(line: 3434, column: 3, scope: !4299)
!4743 = !DILocation(line: 3434, column: 15, scope: !4299)
!4744 = !DILocation(line: 3436, column: 3, scope: !4299)
!4745 = !DILocation(line: 3438, column: 3, scope: !4299)
!4746 = !DILocation(line: 3439, column: 1, scope: !4299)
!4747 = distinct !DISubprogram(name: "expand_debug_locations", scope: !3, file: !3, line: 3056, type: !2987, scopeLine: 3057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4748)
!4748 = !{!4749, !4750, !4751, !4752, !4757, !4758}
!4749 = !DILocalVariable(name: "insn", scope: !4747, file: !3, line: 3058, type: !900)
!4750 = !DILocalVariable(name: "last", scope: !4747, file: !3, line: 3059, type: !900)
!4751 = !DILocalVariable(name: "save_strict_alias", scope: !4747, file: !3, line: 3060, type: !823)
!4752 = !DILocalVariable(name: "value", scope: !4753, file: !3, line: 3070, type: !1014)
!4753 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 3069, column: 7)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 3068, column: 9)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 3067, column: 3)
!4756 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 3067, column: 3)
!4757 = !DILocalVariable(name: "val", scope: !4753, file: !3, line: 3071, type: !900)
!4758 = !DILocalVariable(name: "mode", scope: !4753, file: !3, line: 3072, type: !5)
!4759 = !DILocation(line: 3059, column: 14, scope: !4747)
!4760 = !DILocation(line: 0, scope: !4747)
!4761 = !DILocation(line: 3060, column: 27, scope: !4747)
!4762 = !DILocation(line: 3065, column: 24, scope: !4747)
!4763 = !DILocation(line: 3067, column: 15, scope: !4756)
!4764 = !DILocation(line: 3067, column: 8, scope: !4756)
!4765 = !DILocation(line: 0, scope: !4756)
!4766 = !DILocation(line: 3067, column: 3, scope: !4756)
!4767 = !DILocation(line: 3068, column: 9, scope: !4754)
!4768 = !DILocation(line: 3068, column: 9, scope: !4755)
!4769 = !DILocation(line: 3070, column: 21, scope: !4753)
!4770 = !DILocation(line: 0, scope: !4753)
!4771 = !DILocation(line: 3074, column: 12, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 3074, column: 6)
!4773 = !DILocation(line: 3074, column: 6, scope: !4753)
!4774 = !DILocation(line: 3078, column: 12, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 3077, column: 4)
!4776 = !DILocation(line: 3079, column: 6, scope: !4775)
!4777 = !DILocation(line: 0, scope: !4772)
!4778 = !DILocation(line: 3082, column: 7, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 3082, column: 6)
!4780 = !DILocation(line: 3082, column: 6, scope: !4753)
!4781 = !DILocation(line: 3083, column: 10, scope: !4779)
!4782 = !DILocation(line: 3083, column: 4, scope: !4779)
!4783 = !DILocation(line: 3086, column: 13, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 3085, column: 4)
!4785 = !DILocation(line: 3088, column: 6, scope: !4784)
!4786 = !DILocation(line: 3096, column: 2, scope: !4753)
!4787 = !DILocation(line: 3096, column: 31, scope: !4753)
!4788 = !DILocation(line: 3097, column: 7, scope: !4753)
!4789 = !DILocation(line: 3067, column: 42, scope: !4755)
!4790 = !DILocation(line: 3067, column: 3, scope: !4755)
!4791 = distinct !{!4791, !4766, !4792}
!4792 = !DILocation(line: 3097, column: 7, scope: !4756)
!4793 = !DILocation(line: 3099, column: 24, scope: !4747)
!4794 = !DILocation(line: 3100, column: 1, scope: !4747)
!4795 = distinct !DISubprogram(name: "construct_exit_block", scope: !3, file: !3, line: 3509, type: !2987, scopeLine: 3510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4796)
!4796 = !{!4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804}
!4797 = !DILocalVariable(name: "head", scope: !4795, file: !3, line: 3511, type: !900)
!4798 = !DILocalVariable(name: "end", scope: !4795, file: !3, line: 3512, type: !900)
!4799 = !DILocalVariable(name: "exit_block", scope: !4795, file: !3, line: 3513, type: !1435)
!4800 = !DILocalVariable(name: "e", scope: !4795, file: !3, line: 3514, type: !873)
!4801 = !DILocalVariable(name: "e2", scope: !4795, file: !3, line: 3514, type: !873)
!4802 = !DILocalVariable(name: "ix", scope: !4795, file: !3, line: 3515, type: !7)
!4803 = !DILocalVariable(name: "ei", scope: !4795, file: !3, line: 3516, type: !3248)
!4804 = !DILocalVariable(name: "orig_end", scope: !4795, file: !3, line: 3517, type: !900)
!4805 = !DILocation(line: 3511, column: 14, scope: !4795)
!4806 = !DILocation(line: 0, scope: !4795)
!4807 = !DILocation(line: 3514, column: 3, scope: !4795)
!4808 = !DILocation(line: 3516, column: 3, scope: !4795)
!4809 = !DILocation(line: 3517, column: 18, scope: !4795)
!4810 = !DILocation(line: 3519, column: 3, scope: !4795)
!4811 = !DILocation(line: 3523, column: 7, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 3523, column: 7)
!4813 = !DILocation(line: 3523, column: 13, scope: !4812)
!4814 = !DILocation(line: 3523, column: 32, scope: !4812)
!4815 = !DILocation(line: 3523, column: 7, scope: !4795)
!4816 = !DILocation(line: 3524, column: 20, scope: !4812)
!4817 = !DILocation(line: 3524, column: 5, scope: !4812)
!4818 = !DILocation(line: 3527, column: 24, scope: !4795)
!4819 = !DILocation(line: 3527, column: 3, scope: !4795)
!4820 = !DILocation(line: 3530, column: 3, scope: !4795)
!4821 = !DILocation(line: 3532, column: 9, scope: !4795)
!4822 = !DILocation(line: 3533, column: 12, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 3533, column: 7)
!4824 = !DILocation(line: 3533, column: 7, scope: !4795)
!4825 = !DILocation(line: 3537, column: 3, scope: !4795)
!4826 = !DILocation(line: 3537, column: 36, scope: !4795)
!4827 = !DILocation(line: 3538, column: 3, scope: !4795)
!4828 = !DILocation(line: 3538, column: 10, scope: !4795)
!4829 = !DILocation(line: 3538, column: 27, scope: !4795)
!4830 = !DILocation(line: 3538, column: 30, scope: !4795)
!4831 = distinct !{!4831, !4827, !4832}
!4832 = !DILocation(line: 3539, column: 12, scope: !4795)
!4833 = !DILocation(line: 3540, column: 36, scope: !4795)
!4834 = !DILocation(line: 3540, column: 54, scope: !4795)
!4835 = !DILocation(line: 3541, column: 8, scope: !4795)
!4836 = !DILocation(line: 3541, column: 24, scope: !4795)
!4837 = !DILocation(line: 3540, column: 16, scope: !4795)
!4838 = !DILocation(line: 3542, column: 27, scope: !4795)
!4839 = !DILocation(line: 3542, column: 43, scope: !4795)
!4840 = !DILocation(line: 3542, column: 15, scope: !4795)
!4841 = !DILocation(line: 3542, column: 25, scope: !4795)
!4842 = !DILocation(line: 3543, column: 23, scope: !4795)
!4843 = !DILocation(line: 3543, column: 39, scope: !4795)
!4844 = !DILocation(line: 3543, column: 15, scope: !4795)
!4845 = !DILocation(line: 3543, column: 21, scope: !4795)
!4846 = !DILocation(line: 3546, column: 3, scope: !4795)
!4847 = !DILocation(line: 3546, column: 15, scope: !4795)
!4848 = !DILocation(line: 3546, column: 13, scope: !4795)
!4849 = !DILocation(line: 3548, column: 11, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 3547, column: 5)
!4851 = !DILocation(line: 3549, column: 16, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 3549, column: 11)
!4853 = !DILocation(line: 3549, column: 22, scope: !4852)
!4854 = !DILocation(line: 3549, column: 11, scope: !4850)
!4855 = !DILocation(line: 3550, column: 2, scope: !4852)
!4856 = !DILocation(line: 3552, column: 4, scope: !4852)
!4857 = distinct !{!4857, !4846, !4858}
!4858 = !DILocation(line: 3553, column: 5, scope: !4795)
!4859 = !DILocation(line: 3555, column: 7, scope: !4795)
!4860 = !DILocation(line: 3556, column: 6, scope: !4795)
!4861 = !DILocation(line: 3556, column: 18, scope: !4795)
!4862 = !DILocation(line: 3557, column: 14, scope: !4795)
!4863 = !DILocation(line: 3557, column: 30, scope: !4795)
!4864 = !DILocation(line: 3557, column: 6, scope: !4795)
!4865 = !DILocation(line: 3557, column: 12, scope: !4795)
!4866 = !DILocation(line: 3558, column: 3, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 3558, column: 3)
!4868 = !DILocation(line: 0, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 3558, column: 3)
!4870 = !DILocation(line: 3558, column: 3, scope: !4869)
!4871 = !DILocation(line: 3559, column: 9, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 3559, column: 9)
!4873 = !DILocation(line: 3559, column: 12, scope: !4872)
!4874 = !DILocation(line: 3559, column: 9, scope: !4869)
!4875 = !DILocation(line: 3561, column: 18, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 3560, column: 7)
!4877 = !DILocation(line: 3561, column: 11, scope: !4876)
!4878 = !DILocation(line: 3562, column: 27, scope: !4876)
!4879 = !DILocation(line: 3562, column: 20, scope: !4876)
!4880 = !DILocation(line: 3563, column: 27, scope: !4876)
!4881 = !DILocation(line: 3563, column: 24, scope: !4876)
!4882 = !DILocation(line: 3564, column: 7, scope: !4876)
!4883 = distinct !{!4883, !4866, !4884}
!4884 = !DILocation(line: 3564, column: 7, scope: !4867)
!4885 = !DILocation(line: 3565, column: 10, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 3565, column: 7)
!4887 = !DILocation(line: 3565, column: 16, scope: !4886)
!4888 = !DILocation(line: 3565, column: 7, scope: !4795)
!4889 = !DILocation(line: 3566, column: 14, scope: !4886)
!4890 = !DILocation(line: 3566, column: 5, scope: !4886)
!4891 = !DILocation(line: 3567, column: 19, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 3567, column: 7)
!4893 = !DILocation(line: 3567, column: 25, scope: !4892)
!4894 = !DILocation(line: 3567, column: 7, scope: !4795)
!4895 = !DILocation(line: 3568, column: 23, scope: !4892)
!4896 = !DILocation(line: 3568, column: 5, scope: !4892)
!4897 = !DILocation(line: 3569, column: 19, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 3569, column: 7)
!4899 = !DILocation(line: 3569, column: 29, scope: !4898)
!4900 = !DILocation(line: 3569, column: 7, scope: !4795)
!4901 = !DILocation(line: 3570, column: 27, scope: !4898)
!4902 = !DILocation(line: 3570, column: 5, scope: !4898)
!4903 = !DILocation(line: 3571, column: 3, scope: !4795)
!4904 = !DILocation(line: 3572, column: 1, scope: !4795)
!4905 = distinct !DISubprogram(name: "ei_safe_edge", scope: !337, file: !337, line: 761, type: !4906, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4908)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{!873, !3248}
!4908 = !{!4909}
!4909 = !DILocalVariable(name: "i", arg: 1, scope: !4905, file: !337, line: 761, type: !3248)
!4910 = !DILocation(line: 763, column: 11, scope: !4905)
!4911 = !DILocation(line: 763, column: 10, scope: !4905)
!4912 = !DILocation(line: 763, column: 26, scope: !4905)
!4913 = !DILocation(line: 763, column: 3, scope: !4905)
!4914 = distinct !DISubprogram(name: "expand_stack_alignment", scope: !3, file: !3, line: 3641, type: !2987, scopeLine: 3642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4915)
!4915 = !{!4916, !4917}
!4916 = !DILocalVariable(name: "drap_rtx", scope: !4914, file: !3, line: 3643, type: !900)
!4917 = !DILocalVariable(name: "preferred_stack_boundary", scope: !4914, file: !3, line: 3644, type: !7)
!4918 = !DILocation(line: 3649, column: 7, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3649, column: 7)
!4920 = !DILocation(line: 3649, column: 13, scope: !4919)
!4921 = !DILocation(line: 3650, column: 7, scope: !4919)
!4922 = !DILocation(line: 3650, column: 16, scope: !4919)
!4923 = !DILocation(line: 3650, column: 10, scope: !4919)
!4924 = !DILocation(line: 3651, column: 7, scope: !4919)
!4925 = !DILocation(line: 3651, column: 16, scope: !4919)
!4926 = !DILocation(line: 3651, column: 10, scope: !4919)
!4927 = !DILocation(line: 3649, column: 7, scope: !4914)
!4928 = !DILocation(line: 3652, column: 21, scope: !4919)
!4929 = !DILocation(line: 3652, column: 5, scope: !4919)
!4930 = !DILocation(line: 3660, column: 21, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3660, column: 7)
!4932 = !DILocation(line: 3660, column: 7, scope: !4931)
!4933 = !DILocation(line: 3660, column: 7, scope: !4914)
!4934 = !DILocation(line: 3661, column: 5, scope: !4931)
!4935 = !DILocation(line: 3665, column: 3, scope: !4914)
!4936 = !DILocation(line: 3671, column: 7, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3671, column: 7)
!4938 = !DILocation(line: 3672, column: 7, scope: !4937)
!4939 = !DILocation(line: 3672, column: 10, scope: !4937)
!4940 = !DILocation(line: 3672, column: 43, scope: !4937)
!4941 = !DILocation(line: 3672, column: 35, scope: !4937)
!4942 = !DILocation(line: 3671, column: 7, scope: !4914)
!4943 = !DILocation(line: 3673, column: 5, scope: !4937)
!4944 = !DILocation(line: 0, scope: !4937)
!4945 = !DILocation(line: 0, scope: !4914)
!4946 = !DILocation(line: 3676, column: 40, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3676, column: 7)
!4948 = !DILocation(line: 3676, column: 32, scope: !4947)
!4949 = !DILocation(line: 3676, column: 7, scope: !4914)
!4950 = !DILocation(line: 3677, column: 37, scope: !4947)
!4951 = !DILocation(line: 3677, column: 5, scope: !4947)
!4952 = !DILocation(line: 3678, column: 40, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3678, column: 7)
!4954 = !DILocation(line: 3678, column: 32, scope: !4953)
!4955 = !DILocation(line: 3678, column: 7, scope: !4914)
!4956 = !DILocation(line: 3679, column: 34, scope: !4953)
!4957 = !DILocation(line: 3679, column: 5, scope: !4953)
!4958 = !DILocation(line: 3681, column: 3, scope: !4914)
!4959 = !DILocation(line: 3685, column: 39, scope: !4914)
!4960 = !DILocation(line: 3685, column: 7, scope: !4914)
!4961 = !DILocation(line: 3685, column: 31, scope: !4914)
!4962 = !DILocation(line: 3685, column: 5, scope: !4914)
!4963 = !DILocation(line: 3686, column: 29, scope: !4914)
!4964 = !DILocation(line: 3688, column: 33, scope: !4914)
!4965 = !DILocation(line: 3692, column: 3, scope: !4914)
!4966 = !DILocation(line: 3693, column: 28, scope: !4914)
!4967 = !DILocation(line: 3693, column: 14, scope: !4914)
!4968 = !DILocation(line: 3696, column: 3, scope: !4914)
!4969 = !DILocation(line: 3699, column: 7, scope: !4914)
!4970 = !DILocation(line: 3701, column: 39, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 3700, column: 5)
!4972 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3699, column: 7)
!4973 = !DILocation(line: 3705, column: 7, scope: !4971)
!4974 = !DILocation(line: 3706, column: 5, scope: !4971)
!4975 = !DILocation(line: 3707, column: 1, scope: !4914)
!4976 = distinct !DISubprogram(name: "set_block_levels", scope: !3, file: !3, line: 3496, type: !4977, scopeLine: 3497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4979)
!4977 = !DISubroutineType(types: !4978)
!4978 = !{null, !1014, !823}
!4979 = !{!4980, !4981}
!4980 = !DILocalVariable(name: "block", arg: 1, scope: !4976, file: !3, line: 3496, type: !1014)
!4981 = !DILocalVariable(name: "level", arg: 2, scope: !4976, file: !3, line: 3496, type: !823)
!4982 = !DILocation(line: 0, scope: !4976)
!4983 = !DILocation(line: 0, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 3499, column: 5)
!4985 = !DILocation(line: 3498, column: 3, scope: !4976)
!4986 = !DILocation(line: 3500, column: 7, scope: !4984)
!4987 = !DILocation(line: 3500, column: 28, scope: !4984)
!4988 = !DILocation(line: 3501, column: 25, scope: !4984)
!4989 = !DILocation(line: 3501, column: 7, scope: !4984)
!4990 = !DILocation(line: 3502, column: 15, scope: !4984)
!4991 = distinct !{!4991, !4985, !4992}
!4992 = !DILocation(line: 3503, column: 5, scope: !4976)
!4993 = !DILocation(line: 3504, column: 1, scope: !4976)
!4994 = distinct !DISubprogram(name: "gsi_start_bb", scope: !385, file: !385, line: 4418, type: !4995, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4997)
!4995 = !DISubroutineType(types: !4996)
!4996 = !{!3942, !1435}
!4997 = !{!4998, !4999, !5000}
!4998 = !DILocalVariable(name: "bb", arg: 1, scope: !4994, file: !385, line: 4418, type: !1435)
!4999 = !DILocalVariable(name: "i", scope: !4994, file: !385, line: 4420, type: !3942)
!5000 = !DILocalVariable(name: "seq", scope: !4994, file: !385, line: 4421, type: !884)
!5001 = !DILocation(line: 0, scope: !4994)
!5002 = !DILocation(line: 4420, column: 24, scope: !4994)
!5003 = !DILocation(line: 4423, column: 9, scope: !4994)
!5004 = !DILocation(line: 4424, column: 11, scope: !4994)
!5005 = !DILocation(line: 4424, column: 5, scope: !4994)
!5006 = !DILocation(line: 4424, column: 9, scope: !4994)
!5007 = !DILocation(line: 4425, column: 5, scope: !4994)
!5008 = !DILocation(line: 4425, column: 9, scope: !4994)
!5009 = !DILocation(line: 4426, column: 5, scope: !4994)
!5010 = !DILocation(line: 4426, column: 8, scope: !4994)
!5011 = !DILocation(line: 4429, column: 1, scope: !4994)
!5012 = distinct !DISubprogram(name: "gsi_end_p", scope: !385, file: !385, line: 4467, type: !5013, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5015)
!5013 = !DISubroutineType(types: !5014)
!5014 = !{!822, !3942}
!5015 = !{!5016}
!5016 = !DILocalVariable(name: "i", arg: 1, scope: !5012, file: !385, line: 4467, type: !3942)
!5017 = !DILocation(line: 4467, column: 33, scope: !5012)
!5018 = !DILocation(line: 4469, column: 12, scope: !5012)
!5019 = !DILocation(line: 4469, column: 16, scope: !5012)
!5020 = !DILocation(line: 4469, column: 10, scope: !5012)
!5021 = !DILocation(line: 4469, column: 3, scope: !5012)
!5022 = distinct !DISubprogram(name: "gsi_stmt", scope: !385, file: !385, line: 4501, type: !5023, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5025)
!5023 = !DISubroutineType(types: !5024)
!5024 = !{!894, !3942}
!5025 = !{!5026}
!5026 = !DILocalVariable(name: "i", arg: 1, scope: !5022, file: !385, line: 4501, type: !3942)
!5027 = !DILocation(line: 4501, column: 32, scope: !5022)
!5028 = !DILocation(line: 4503, column: 12, scope: !5022)
!5029 = !DILocation(line: 4503, column: 17, scope: !5022)
!5030 = !DILocation(line: 4503, column: 3, scope: !5022)
!5031 = distinct !DISubprogram(name: "is_gimple_debug", scope: !385, file: !385, line: 3249, type: !2904, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5032)
!5032 = !{!5033}
!5033 = !DILocalVariable(name: "gs", arg: 1, scope: !5031, file: !385, line: 3249, type: !2850)
!5034 = !DILocation(line: 0, scope: !5031)
!5035 = !DILocation(line: 3251, column: 10, scope: !5031)
!5036 = !DILocation(line: 3251, column: 27, scope: !5031)
!5037 = !DILocation(line: 3251, column: 3, scope: !5031)
!5038 = distinct !DISubprogram(name: "discover_nonconstant_array_refs_r", scope: !3, file: !3, line: 3579, type: !5039, scopeLine: 3581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5041)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!1014, !1521, !2299, !827}
!5041 = !{!5042, !5043, !5044, !5045}
!5042 = !DILocalVariable(name: "tp", arg: 1, scope: !5038, file: !3, line: 3579, type: !1521)
!5043 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !5038, file: !3, line: 3579, type: !2299)
!5044 = !DILocalVariable(name: "data", arg: 3, scope: !5038, file: !3, line: 3580, type: !827)
!5045 = !DILocalVariable(name: "t", scope: !5038, file: !3, line: 3582, type: !1014)
!5046 = !DILocation(line: 0, scope: !5038)
!5047 = !DILocation(line: 3582, column: 12, scope: !5038)
!5048 = !DILocation(line: 3584, column: 7, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 3584, column: 7)
!5050 = !DILocation(line: 3584, column: 7, scope: !5038)
!5051 = !DILocation(line: 3585, column: 20, scope: !5049)
!5052 = !DILocation(line: 3585, column: 5, scope: !5049)
!5053 = !DILocation(line: 3586, column: 26, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 3586, column: 12)
!5055 = !DILocation(line: 3586, column: 39, scope: !5054)
!5056 = !DILocation(line: 3586, column: 56, scope: !5054)
!5057 = !DILocation(line: 3586, column: 12, scope: !5049)
!5058 = !DILocation(line: 3588, column: 7, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 3587, column: 5)
!5060 = !DILocation(line: 3588, column: 16, scope: !5059)
!5061 = !DILocation(line: 3588, column: 30, scope: !5059)
!5062 = !DILocation(line: 3588, column: 43, scope: !5059)
!5063 = !DILocation(line: 3588, column: 60, scope: !5059)
!5064 = !DILocation(line: 3589, column: 8, scope: !5059)
!5065 = !DILocation(line: 3589, column: 36, scope: !5059)
!5066 = !DILocation(line: 3589, column: 11, scope: !5059)
!5067 = !DILocation(line: 3590, column: 8, scope: !5059)
!5068 = !DILocation(line: 3590, column: 13, scope: !5059)
!5069 = !DILocation(line: 3591, column: 5, scope: !5059)
!5070 = !DILocation(line: 3591, column: 8, scope: !5059)
!5071 = !DILocation(line: 3592, column: 7, scope: !5059)
!5072 = !DILocation(line: 3592, column: 11, scope: !5059)
!5073 = !DILocation(line: 3592, column: 25, scope: !5059)
!5074 = !DILocation(line: 3593, column: 4, scope: !5059)
!5075 = !DILocation(line: 3593, column: 9, scope: !5059)
!5076 = !DILocation(line: 3594, column: 8, scope: !5059)
!5077 = !DILocation(line: 3594, column: 11, scope: !5059)
!5078 = !DILocation(line: 3595, column: 7, scope: !5059)
!5079 = !DILocation(line: 3595, column: 10, scope: !5059)
!5080 = !DILocation(line: 3595, column: 24, scope: !5059)
!5081 = !DILocation(line: 3596, column: 7, scope: !5059)
!5082 = !DILocation(line: 3596, column: 24, scope: !5059)
!5083 = !DILocation(line: 3597, column: 7, scope: !5059)
!5084 = !DILocation(line: 3597, column: 24, scope: !5059)
!5085 = !DILocation(line: 3598, column: 7, scope: !5059)
!5086 = !DILocation(line: 3598, column: 24, scope: !5059)
!5087 = !DILocation(line: 3599, column: 7, scope: !5059)
!5088 = !DILocation(line: 3599, column: 10, scope: !5059)
!5089 = !DILocation(line: 3600, column: 6, scope: !5059)
!5090 = !DILocation(line: 0, scope: !5059)
!5091 = distinct !{!5091, !5058, !5089}
!5092 = !DILocation(line: 3602, column: 25, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 3602, column: 11)
!5094 = !DILocation(line: 3602, column: 38, scope: !5093)
!5095 = !DILocation(line: 3602, column: 55, scope: !5093)
!5096 = !DILocation(line: 3602, column: 11, scope: !5059)
!5097 = !DILocation(line: 3604, column: 8, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 3603, column: 2)
!5099 = !DILocation(line: 3605, column: 8, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 3605, column: 8)
!5101 = !DILocation(line: 3605, column: 10, scope: !5100)
!5102 = !DILocation(line: 3605, column: 13, scope: !5100)
!5103 = !DILocation(line: 3606, column: 15, scope: !5100)
!5104 = !DILocation(line: 3606, column: 18, scope: !5100)
!5105 = !DILocation(line: 3606, column: 32, scope: !5100)
!5106 = !DILocation(line: 3605, column: 8, scope: !5098)
!5107 = !DILocation(line: 3607, column: 27, scope: !5100)
!5108 = !DILocation(line: 3607, column: 6, scope: !5100)
!5109 = !DILocation(line: 3610, column: 22, scope: !5059)
!5110 = !DILocation(line: 3611, column: 5, scope: !5059)
!5111 = !DILocation(line: 3613, column: 3, scope: !5038)
!5112 = distinct !DISubprogram(name: "gsi_next", scope: !385, file: !385, line: 4485, type: !5113, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5116)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{null, !5115}
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!5116 = !{!5117}
!5117 = !DILocalVariable(name: "i", arg: 1, scope: !5112, file: !385, line: 4485, type: !5115)
!5118 = !DILocation(line: 0, scope: !5112)
!5119 = !DILocation(line: 4487, column: 15, scope: !5112)
!5120 = !DILocation(line: 4487, column: 20, scope: !5112)
!5121 = !DILocation(line: 4487, column: 10, scope: !5112)
!5122 = !DILocation(line: 4488, column: 1, scope: !5112)
!5123 = distinct !DISubprogram(name: "bb_seq", scope: !385, file: !385, line: 237, type: !5124, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5129)
!5124 = !DISubroutineType(types: !5125)
!5125 = !{!884, !5126}
!5126 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !874, line: 112, baseType: !5127)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 64)
!5128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!5129 = !{!5130}
!5130 = !DILocalVariable(name: "bb", arg: 1, scope: !5123, file: !385, line: 237, type: !5126)
!5131 = !DILocation(line: 0, scope: !5123)
!5132 = !DILocation(line: 239, column: 17, scope: !5123)
!5133 = !DILocation(line: 239, column: 23, scope: !5123)
!5134 = !DILocation(line: 239, column: 33, scope: !5123)
!5135 = !DILocation(line: 239, column: 43, scope: !5123)
!5136 = !DILocation(line: 239, column: 36, scope: !5123)
!5137 = !DILocation(line: 239, column: 10, scope: !5123)
!5138 = !DILocation(line: 239, column: 68, scope: !5123)
!5139 = !DILocation(line: 239, column: 3, scope: !5123)
!5140 = distinct !DISubprogram(name: "gimple_seq_first", scope: !385, file: !385, line: 159, type: !5141, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5146)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!889, !5143}
!5143 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !874, line: 67, baseType: !5144)
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5145, size: 64)
!5145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !886)
!5146 = !{!5147}
!5147 = !DILocalVariable(name: "s", arg: 1, scope: !5140, file: !385, line: 159, type: !5143)
!5148 = !DILocation(line: 0, scope: !5140)
!5149 = !DILocation(line: 161, column: 10, scope: !5140)
!5150 = !DILocation(line: 161, column: 17, scope: !5140)
!5151 = !DILocation(line: 161, column: 3, scope: !5140)
!5152 = distinct !DISubprogram(name: "expand_used_vars_for_block", scope: !3, file: !3, line: 1010, type: !5153, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5155)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{null, !1014, !822}
!5155 = !{!5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163}
!5156 = !DILocalVariable(name: "block", arg: 1, scope: !5152, file: !3, line: 1010, type: !1014)
!5157 = !DILocalVariable(name: "toplevel", arg: 2, scope: !5152, file: !3, line: 1010, type: !822)
!5158 = !DILocalVariable(name: "i", scope: !5152, file: !3, line: 1012, type: !833)
!5159 = !DILocalVariable(name: "j", scope: !5152, file: !3, line: 1012, type: !833)
!5160 = !DILocalVariable(name: "old_sv_num", scope: !5152, file: !3, line: 1012, type: !833)
!5161 = !DILocalVariable(name: "this_sv_num", scope: !5152, file: !3, line: 1012, type: !833)
!5162 = !DILocalVariable(name: "new_sv_num", scope: !5152, file: !3, line: 1012, type: !833)
!5163 = !DILocalVariable(name: "t", scope: !5152, file: !3, line: 1013, type: !1014)
!5164 = !DILocation(line: 0, scope: !5152)
!5165 = !DILocation(line: 1015, column: 16, scope: !5152)
!5166 = !DILocation(line: 1018, column: 12, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 1018, column: 3)
!5168 = !DILocation(line: 1018, column: 8, scope: !5167)
!5169 = !DILocation(line: 0, scope: !5167)
!5170 = !DILocation(line: 1018, column: 3, scope: !5167)
!5171 = !DILocation(line: 1019, column: 9, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 1019, column: 9)
!5173 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 1018, column: 3)
!5174 = !DILocation(line: 1019, column: 9, scope: !5173)
!5175 = !DILocation(line: 1020, column: 7, scope: !5172)
!5176 = !DILocation(line: 1018, column: 40, scope: !5173)
!5177 = !DILocation(line: 1018, column: 3, scope: !5173)
!5178 = distinct !{!5178, !5170, !5179}
!5179 = !DILocation(line: 1020, column: 40, scope: !5167)
!5180 = !DILocation(line: 1022, column: 17, scope: !5152)
!5181 = !DILocation(line: 1025, column: 12, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 1025, column: 3)
!5183 = !DILocation(line: 1025, column: 8, scope: !5182)
!5184 = !DILocation(line: 0, scope: !5182)
!5185 = !DILocation(line: 1025, column: 3, scope: !5182)
!5186 = !DILocation(line: 1026, column: 5, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1025, column: 3)
!5188 = !DILocation(line: 1025, column: 45, scope: !5187)
!5189 = !DILocation(line: 1025, column: 3, scope: !5187)
!5190 = distinct !{!5190, !5185, !5191}
!5191 = !DILocation(line: 1026, column: 41, scope: !5182)
!5192 = !DILocation(line: 1032, column: 18, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 1032, column: 7)
!5194 = !DILocation(line: 1032, column: 7, scope: !5152)
!5195 = !DILocation(line: 1034, column: 20, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 1033, column: 5)
!5197 = !DILocation(line: 1036, column: 12, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 1036, column: 7)
!5199 = !DILocation(line: 0, scope: !5198)
!5200 = !DILocation(line: 1036, column: 30, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5198, file: !3, line: 1036, column: 7)
!5202 = !DILocation(line: 1036, column: 7, scope: !5198)
!5203 = !DILocation(line: 1037, column: 13, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 1037, column: 2)
!5205 = !DILocation(line: 1037, column: 11, scope: !5204)
!5206 = !DILocation(line: 1037, column: 7, scope: !5204)
!5207 = !DILocation(line: 0, scope: !5204)
!5208 = !DILocation(line: 1037, column: 47, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 1037, column: 2)
!5210 = !DILocation(line: 1037, column: 50, scope: !5209)
!5211 = !DILocation(line: 1037, column: 2, scope: !5204)
!5212 = !DILocation(line: 1038, column: 4, scope: !5209)
!5213 = !DILocation(line: 1037, column: 2, scope: !5209)
!5214 = distinct !{!5214, !5211, !5215}
!5215 = !DILocation(line: 1038, column: 32, scope: !5204)
!5216 = !DILocation(line: 1036, column: 44, scope: !5201)
!5217 = !DILocation(line: 1036, column: 7, scope: !5201)
!5218 = distinct !{!5218, !5202, !5219}
!5219 = !DILocation(line: 1038, column: 32, scope: !5198)
!5220 = !DILocation(line: 1040, column: 1, scope: !5152)
!5221 = distinct !DISubprogram(name: "add_alias_set_conflicts", scope: !3, file: !3, line: 356, type: !2987, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5222)
!5222 = !{!5223, !5224, !5225, !5226, !5230, !5231, !5232, !5236}
!5223 = !DILocalVariable(name: "i", scope: !5221, file: !3, line: 358, type: !833)
!5224 = !DILocalVariable(name: "j", scope: !5221, file: !3, line: 358, type: !833)
!5225 = !DILocalVariable(name: "n", scope: !5221, file: !3, line: 358, type: !833)
!5226 = !DILocalVariable(name: "type_i", scope: !5227, file: !3, line: 362, type: !1014)
!5227 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 361, column: 5)
!5228 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 360, column: 3)
!5229 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 360, column: 3)
!5230 = !DILocalVariable(name: "aggr_i", scope: !5227, file: !3, line: 363, type: !822)
!5231 = !DILocalVariable(name: "contains_union", scope: !5227, file: !3, line: 364, type: !822)
!5232 = !DILocalVariable(name: "type_j", scope: !5233, file: !3, line: 369, type: !1014)
!5233 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 368, column: 2)
!5234 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 367, column: 7)
!5235 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 367, column: 7)
!5236 = !DILocalVariable(name: "aggr_j", scope: !5233, file: !3, line: 370, type: !822)
!5237 = !DILocation(line: 358, column: 20, scope: !5221)
!5238 = !DILocation(line: 0, scope: !5221)
!5239 = !DILocation(line: 360, column: 8, scope: !5229)
!5240 = !DILocation(line: 0, scope: !5229)
!5241 = !DILocation(line: 360, column: 17, scope: !5228)
!5242 = !DILocation(line: 360, column: 3, scope: !5229)
!5243 = !DILocation(line: 362, column: 21, scope: !5227)
!5244 = !DILocation(line: 0, scope: !5227)
!5245 = !DILocation(line: 363, column: 21, scope: !5227)
!5246 = !DILocation(line: 366, column: 24, scope: !5227)
!5247 = !DILocation(line: 0, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 371, column: 8)
!5249 = !DILocation(line: 367, column: 12, scope: !5235)
!5250 = !DILocation(line: 0, scope: !5235)
!5251 = !DILocation(line: 367, column: 21, scope: !5234)
!5252 = !DILocation(line: 367, column: 7, scope: !5235)
!5253 = !DILocation(line: 369, column: 18, scope: !5233)
!5254 = !DILocation(line: 0, scope: !5233)
!5255 = !DILocation(line: 370, column: 18, scope: !5233)
!5256 = !DILocation(line: 371, column: 15, scope: !5248)
!5257 = !DILocation(line: 374, column: 8, scope: !5248)
!5258 = !DILocation(line: 374, column: 12, scope: !5248)
!5259 = !DILocation(line: 380, column: 8, scope: !5248)
!5260 = !DILocation(line: 381, column: 6, scope: !5248)
!5261 = !DILocation(line: 367, column: 26, scope: !5234)
!5262 = !DILocation(line: 367, column: 7, scope: !5234)
!5263 = distinct !{!5263, !5252, !5264}
!5264 = !DILocation(line: 382, column: 2, scope: !5235)
!5265 = !DILocation(line: 360, column: 22, scope: !5228)
!5266 = !DILocation(line: 360, column: 3, scope: !5228)
!5267 = distinct !{!5267, !5242, !5268}
!5268 = !DILocation(line: 383, column: 5, scope: !5229)
!5269 = !DILocation(line: 384, column: 1, scope: !5221)
!5270 = distinct !DISubprogram(name: "add_stack_protection_conflicts", scope: !3, file: !3, line: 1163, type: !2987, scopeLine: 1164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5271)
!5271 = !{!5272, !5273, !5274, !5275, !5276}
!5272 = !DILocalVariable(name: "i", scope: !5270, file: !3, line: 1165, type: !833)
!5273 = !DILocalVariable(name: "j", scope: !5270, file: !3, line: 1165, type: !833)
!5274 = !DILocalVariable(name: "n", scope: !5270, file: !3, line: 1165, type: !833)
!5275 = !DILocalVariable(name: "phase", scope: !5270, file: !3, line: 1166, type: !821)
!5276 = !DILocalVariable(name: "ph_i", scope: !5277, file: !3, line: 1174, type: !822)
!5277 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 1173, column: 5)
!5278 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1172, column: 3)
!5279 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 1172, column: 3)
!5280 = !DILocation(line: 1165, column: 20, scope: !5270)
!5281 = !DILocation(line: 0, scope: !5270)
!5282 = !DILocation(line: 1168, column: 11, scope: !5270)
!5283 = !DILocation(line: 1169, column: 8, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 1169, column: 3)
!5285 = !DILocation(line: 0, scope: !5284)
!5286 = !DILocation(line: 1169, column: 17, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 1169, column: 3)
!5288 = !DILocation(line: 1169, column: 3, scope: !5284)
!5289 = !DILocation(line: 1172, column: 3, scope: !5279)
!5290 = !DILocation(line: 1170, column: 42, scope: !5287)
!5291 = !DILocation(line: 1170, column: 56, scope: !5287)
!5292 = !DILocation(line: 1170, column: 16, scope: !5287)
!5293 = !DILocation(line: 1170, column: 5, scope: !5287)
!5294 = !DILocation(line: 1170, column: 14, scope: !5287)
!5295 = !DILocation(line: 1169, column: 22, scope: !5287)
!5296 = !DILocation(line: 1169, column: 3, scope: !5287)
!5297 = distinct !{!5297, !5288, !5298}
!5298 = !DILocation(line: 1170, column: 60, scope: !5284)
!5299 = !DILocation(line: 0, scope: !5279)
!5300 = !DILocation(line: 1172, column: 17, scope: !5278)
!5301 = !DILocation(line: 1174, column: 28, scope: !5277)
!5302 = !DILocation(line: 0, scope: !5277)
!5303 = !DILocation(line: 1175, column: 12, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 1175, column: 7)
!5305 = !DILocation(line: 0, scope: !5304)
!5306 = !DILocation(line: 1175, column: 21, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 1175, column: 7)
!5308 = !DILocation(line: 1175, column: 7, scope: !5304)
!5309 = !DILocation(line: 1176, column: 14, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 1176, column: 6)
!5311 = !DILocation(line: 1176, column: 11, scope: !5310)
!5312 = !DILocation(line: 1176, column: 6, scope: !5307)
!5313 = !DILocation(line: 1177, column: 4, scope: !5310)
!5314 = !DILocation(line: 1175, column: 26, scope: !5307)
!5315 = !DILocation(line: 1175, column: 7, scope: !5307)
!5316 = distinct !{!5316, !5308, !5317}
!5317 = !DILocation(line: 1177, column: 32, scope: !5304)
!5318 = !DILocation(line: 1172, column: 22, scope: !5278)
!5319 = !DILocation(line: 1172, column: 3, scope: !5278)
!5320 = distinct !{!5320, !5289, !5321}
!5321 = !DILocation(line: 1178, column: 5, scope: !5279)
!5322 = !DILocation(line: 1180, column: 3, scope: !5270)
!5323 = !DILocation(line: 1181, column: 1, scope: !5270)
!5324 = distinct !DISubprogram(name: "partition_stack_vars", scope: !3, file: !3, line: 610, type: !2987, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5325)
!5325 = !{!5326, !5327, !5328, !5329, !5333, !5334, !5335, !5339, !5340, !5341}
!5326 = !DILocalVariable(name: "si", scope: !5324, file: !3, line: 612, type: !833)
!5327 = !DILocalVariable(name: "sj", scope: !5324, file: !3, line: 612, type: !833)
!5328 = !DILocalVariable(name: "n", scope: !5324, file: !3, line: 612, type: !833)
!5329 = !DILocalVariable(name: "i", scope: !5330, file: !3, line: 629, type: !833)
!5330 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 628, column: 5)
!5331 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 627, column: 3)
!5332 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 627, column: 3)
!5333 = !DILocalVariable(name: "isize", scope: !5330, file: !3, line: 630, type: !985)
!5334 = !DILocalVariable(name: "offset", scope: !5330, file: !3, line: 631, type: !985)
!5335 = !DILocalVariable(name: "j", scope: !5336, file: !3, line: 635, type: !833)
!5336 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 634, column: 2)
!5337 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 633, column: 7)
!5338 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 633, column: 7)
!5339 = !DILocalVariable(name: "jsize", scope: !5336, file: !3, line: 636, type: !985)
!5340 = !DILocalVariable(name: "jalign", scope: !5336, file: !3, line: 637, type: !7)
!5341 = !DILocalVariable(name: "toff", scope: !5342, file: !3, line: 654, type: !985)
!5342 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 653, column: 6)
!5343 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 652, column: 8)
!5344 = !DILocation(line: 612, column: 22, scope: !5324)
!5345 = !DILocation(line: 0, scope: !5324)
!5346 = !DILocation(line: 614, column: 23, scope: !5324)
!5347 = !DILocation(line: 614, column: 21, scope: !5324)
!5348 = !DILocation(line: 615, column: 8, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 615, column: 3)
!5350 = !DILocation(line: 0, scope: !5349)
!5351 = !DILocation(line: 615, column: 19, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5349, file: !3, line: 615, column: 3)
!5353 = !DILocation(line: 615, column: 3, scope: !5349)
!5354 = !DILocation(line: 616, column: 5, scope: !5352)
!5355 = !DILocation(line: 616, column: 27, scope: !5352)
!5356 = !DILocation(line: 615, column: 24, scope: !5352)
!5357 = !DILocation(line: 615, column: 3, scope: !5352)
!5358 = distinct !{!5358, !5353, !5359}
!5359 = !DILocation(line: 616, column: 29, scope: !5349)
!5360 = !DILocation(line: 618, column: 9, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 618, column: 7)
!5362 = !DILocation(line: 618, column: 7, scope: !5324)
!5363 = !DILocation(line: 622, column: 15, scope: !5324)
!5364 = !DILocation(line: 622, column: 3, scope: !5324)
!5365 = !DILocation(line: 627, column: 8, scope: !5332)
!5366 = !DILocation(line: 0, scope: !5332)
!5367 = !DILocation(line: 627, column: 19, scope: !5331)
!5368 = !DILocation(line: 627, column: 3, scope: !5332)
!5369 = !DILocation(line: 629, column: 18, scope: !5330)
!5370 = !DILocation(line: 0, scope: !5330)
!5371 = !DILocation(line: 630, column: 29, scope: !5330)
!5372 = !DILocation(line: 630, column: 43, scope: !5330)
!5373 = !DILocation(line: 633, column: 12, scope: !5338)
!5374 = !DILocation(line: 630, column: 21, scope: !5330)
!5375 = !DILocation(line: 0, scope: !5338)
!5376 = !DILocation(line: 633, column: 23, scope: !5337)
!5377 = !DILocation(line: 633, column: 26, scope: !5337)
!5378 = !DILocation(line: 633, column: 7, scope: !5338)
!5379 = !DILocation(line: 635, column: 15, scope: !5336)
!5380 = !DILocation(line: 0, scope: !5336)
!5381 = !DILocation(line: 636, column: 26, scope: !5336)
!5382 = !DILocation(line: 636, column: 40, scope: !5336)
!5383 = !DILocation(line: 640, column: 22, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 640, column: 8)
!5385 = !DILocation(line: 640, column: 37, scope: !5384)
!5386 = !DILocation(line: 644, column: 14, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 644, column: 8)
!5388 = !DILocation(line: 640, column: 8, scope: !5336)
!5389 = distinct !{!5389, !5378, !5390}
!5390 = !DILocation(line: 670, column: 2, scope: !5338)
!5391 = !DILocation(line: 648, column: 8, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 648, column: 8)
!5393 = !DILocation(line: 648, column: 8, scope: !5336)
!5394 = !DILocation(line: 665, column: 4, scope: !5336)
!5395 = !DILocation(line: 667, column: 10, scope: !5336)
!5396 = !DILocation(line: 668, column: 14, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 668, column: 8)
!5398 = !DILocation(line: 0, scope: !5337)
!5399 = !DILocation(line: 627, column: 24, scope: !5331)
!5400 = !DILocation(line: 627, column: 3, scope: !5331)
!5401 = distinct !{!5401, !5368, !5402}
!5402 = !DILocation(line: 671, column: 5, scope: !5332)
!5403 = !DILocation(line: 673, column: 7, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 673, column: 7)
!5405 = !DILocation(line: 673, column: 7, scope: !5324)
!5406 = !DILocation(line: 674, column: 5, scope: !5404)
!5407 = !DILocation(line: 675, column: 1, scope: !5324)
!5408 = distinct !DISubprogram(name: "dump_stack_var_partition", scope: !3, file: !3, line: 680, type: !2987, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5409)
!5409 = !{!5410, !5411, !5412, !5413}
!5410 = !DILocalVariable(name: "si", scope: !5408, file: !3, line: 682, type: !833)
!5411 = !DILocalVariable(name: "i", scope: !5408, file: !3, line: 682, type: !833)
!5412 = !DILocalVariable(name: "j", scope: !5408, file: !3, line: 682, type: !833)
!5413 = !DILocalVariable(name: "n", scope: !5408, file: !3, line: 682, type: !833)
!5414 = !DILocation(line: 682, column: 24, scope: !5408)
!5415 = !DILocation(line: 0, scope: !5408)
!5416 = !DILocation(line: 684, column: 8, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 684, column: 3)
!5418 = !DILocation(line: 0, scope: !5417)
!5419 = !DILocation(line: 684, column: 19, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 684, column: 3)
!5421 = !DILocation(line: 684, column: 3, scope: !5417)
!5422 = !DILocation(line: 686, column: 11, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 685, column: 5)
!5424 = !DILocation(line: 689, column: 11, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 689, column: 11)
!5426 = !DILocation(line: 689, column: 25, scope: !5425)
!5427 = !DILocation(line: 689, column: 40, scope: !5425)
!5428 = !DILocation(line: 689, column: 11, scope: !5423)
!5429 = !DILocation(line: 692, column: 16, scope: !5423)
!5430 = !DILocation(line: 693, column: 57, scope: !5423)
!5431 = !DILocation(line: 694, column: 23, scope: !5423)
!5432 = !DILocation(line: 692, column: 7, scope: !5423)
!5433 = !DILocation(line: 696, column: 12, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 696, column: 7)
!5435 = !DILocation(line: 0, scope: !5434)
!5436 = !DILocation(line: 696, column: 21, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 696, column: 7)
!5438 = !DILocation(line: 696, column: 7, scope: !5434)
!5439 = !DILocation(line: 698, column: 17, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 697, column: 2)
!5441 = !DILocation(line: 698, column: 4, scope: !5440)
!5442 = !DILocation(line: 699, column: 24, scope: !5440)
!5443 = !DILocation(line: 699, column: 35, scope: !5440)
!5444 = !DILocation(line: 699, column: 49, scope: !5440)
!5445 = !DILocation(line: 699, column: 55, scope: !5440)
!5446 = !DILocation(line: 699, column: 4, scope: !5440)
!5447 = !DILocation(line: 700, column: 13, scope: !5440)
!5448 = !DILocation(line: 701, column: 6, scope: !5440)
!5449 = !DILocation(line: 701, column: 20, scope: !5440)
!5450 = !DILocation(line: 700, column: 4, scope: !5440)
!5451 = !DILocation(line: 696, column: 33, scope: !5437)
!5452 = !DILocation(line: 696, column: 47, scope: !5437)
!5453 = !DILocation(line: 696, column: 7, scope: !5437)
!5454 = distinct !{!5454, !5438, !5455}
!5455 = !DILocation(line: 702, column: 2, scope: !5434)
!5456 = !DILocation(line: 684, column: 24, scope: !5420)
!5457 = !DILocation(line: 684, column: 3, scope: !5420)
!5458 = distinct !{!5458, !5421, !5459}
!5459 = !DILocation(line: 703, column: 5, scope: !5417)
!5460 = !DILocation(line: 704, column: 1, scope: !5408)
!5461 = distinct !DISubprogram(name: "create_stack_guard", scope: !3, file: !3, line: 1186, type: !2987, scopeLine: 1187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5462)
!5462 = !{!5463}
!5463 = !DILocalVariable(name: "guard", scope: !5461, file: !3, line: 1188, type: !1014)
!5464 = !DILocation(line: 1188, column: 16, scope: !5461)
!5465 = !DILocation(line: 0, scope: !5461)
!5466 = !DILocation(line: 1190, column: 3, scope: !5461)
!5467 = !DILocation(line: 1190, column: 30, scope: !5461)
!5468 = !DILocation(line: 1191, column: 21, scope: !5461)
!5469 = !DILocation(line: 1192, column: 3, scope: !5461)
!5470 = !DILocation(line: 1193, column: 29, scope: !5461)
!5471 = !DILocation(line: 1194, column: 1, scope: !5461)
!5472 = distinct !DISubprogram(name: "expand_stack_vars", scope: !3, file: !3, line: 747, type: !5473, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5478)
!5473 = !DISubroutineType(types: !5474)
!5474 = !{null, !5475}
!5475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{!822, !1014}
!5478 = !{!5479, !5480, !5481, !5482, !5483, !5484}
!5479 = !DILocalVariable(name: "pred", arg: 1, scope: !5472, file: !3, line: 747, type: !5475)
!5480 = !DILocalVariable(name: "si", scope: !5472, file: !3, line: 749, type: !833)
!5481 = !DILocalVariable(name: "i", scope: !5472, file: !3, line: 749, type: !833)
!5482 = !DILocalVariable(name: "j", scope: !5472, file: !3, line: 749, type: !833)
!5483 = !DILocalVariable(name: "n", scope: !5472, file: !3, line: 749, type: !833)
!5484 = !DILocalVariable(name: "offset", scope: !5485, file: !3, line: 753, type: !985)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 752, column: 5)
!5486 = distinct !DILexicalBlock(scope: !5487, file: !3, line: 751, column: 3)
!5487 = distinct !DILexicalBlock(scope: !5472, file: !3, line: 751, column: 3)
!5488 = !DILocation(line: 0, scope: !5472)
!5489 = !DILocation(line: 749, column: 24, scope: !5472)
!5490 = !DILocation(line: 0, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 770, column: 11)
!5492 = !DILocation(line: 751, column: 8, scope: !5487)
!5493 = !DILocation(line: 0, scope: !5487)
!5494 = !DILocation(line: 751, column: 19, scope: !5486)
!5495 = !DILocation(line: 751, column: 3, scope: !5487)
!5496 = !DILocation(line: 755, column: 11, scope: !5485)
!5497 = !DILocation(line: 758, column: 11, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 758, column: 11)
!5499 = !DILocation(line: 758, column: 25, scope: !5498)
!5500 = !DILocation(line: 758, column: 40, scope: !5498)
!5501 = !DILocation(line: 758, column: 11, scope: !5485)
!5502 = !DILocation(line: 763, column: 12, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 763, column: 11)
!5504 = !DILocation(line: 763, column: 43, scope: !5503)
!5505 = !DILocation(line: 765, column: 7, scope: !5503)
!5506 = !DILocation(line: 764, column: 10, scope: !5503)
!5507 = !DILocation(line: 764, column: 51, scope: !5503)
!5508 = !DILocation(line: 764, column: 30, scope: !5503)
!5509 = !DILocation(line: 764, column: 7, scope: !5503)
!5510 = !DILocation(line: 765, column: 41, scope: !5503)
!5511 = !DILocation(line: 765, column: 38, scope: !5503)
!5512 = !DILocation(line: 763, column: 11, scope: !5485)
!5513 = !DILocation(line: 773, column: 41, scope: !5485)
!5514 = !DILocation(line: 773, column: 55, scope: !5485)
!5515 = !DILocation(line: 774, column: 20, scope: !5485)
!5516 = !DILocation(line: 774, column: 6, scope: !5485)
!5517 = !DILocation(line: 773, column: 16, scope: !5485)
!5518 = !DILocation(line: 0, scope: !5485)
!5519 = !DILocation(line: 778, column: 12, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 778, column: 7)
!5521 = !DILocation(line: 0, scope: !5520)
!5522 = !DILocation(line: 778, column: 21, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 778, column: 7)
!5524 = !DILocation(line: 778, column: 7, scope: !5520)
!5525 = !DILocation(line: 780, column: 4, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 779, column: 2)
!5527 = !DILocation(line: 781, column: 29, scope: !5526)
!5528 = !DILocation(line: 0, scope: !5526)
!5529 = !DILocation(line: 782, column: 22, scope: !5526)
!5530 = !DILocation(line: 781, column: 43, scope: !5526)
!5531 = !DILocation(line: 782, column: 29, scope: !5526)
!5532 = !DILocation(line: 781, column: 4, scope: !5526)
!5533 = !DILocation(line: 778, column: 33, scope: !5523)
!5534 = !DILocation(line: 778, column: 47, scope: !5523)
!5535 = !DILocation(line: 778, column: 7, scope: !5523)
!5536 = distinct !{!5536, !5524, !5537}
!5537 = !DILocation(line: 783, column: 2, scope: !5520)
!5538 = !DILocation(line: 751, column: 24, scope: !5486)
!5539 = !DILocation(line: 751, column: 3, scope: !5486)
!5540 = distinct !{!5540, !5495, !5541}
!5541 = !DILocation(line: 784, column: 5, scope: !5487)
!5542 = !DILocation(line: 785, column: 1, scope: !5472)
!5543 = !DILocation(line: 770, column: 26, scope: !5491)
!5544 = !DILocation(line: 770, column: 40, scope: !5491)
!5545 = !DILocation(line: 770, column: 20, scope: !5491)
!5546 = !DILocation(line: 770, column: 11, scope: !5485)
!5547 = distinct !DISubprogram(name: "stack_protect_decl_phase_1", scope: !3, file: !3, line: 1148, type: !5476, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5548)
!5548 = !{!5549}
!5549 = !DILocalVariable(name: "decl", arg: 1, scope: !5547, file: !3, line: 1148, type: !1014)
!5550 = !DILocation(line: 0, scope: !5547)
!5551 = !DILocation(line: 1150, column: 10, scope: !5547)
!5552 = !DILocation(line: 1150, column: 42, scope: !5547)
!5553 = !DILocation(line: 1150, column: 3, scope: !5547)
!5554 = distinct !DISubprogram(name: "stack_protect_decl_phase_2", scope: !3, file: !3, line: 1154, type: !5476, scopeLine: 1155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5555)
!5555 = !{!5556}
!5556 = !DILocalVariable(name: "decl", arg: 1, scope: !5554, file: !3, line: 1154, type: !1014)
!5557 = !DILocation(line: 0, scope: !5554)
!5558 = !DILocation(line: 1156, column: 10, scope: !5554)
!5559 = !DILocation(line: 1156, column: 42, scope: !5554)
!5560 = !DILocation(line: 1156, column: 3, scope: !5554)
!5561 = distinct !DISubprogram(name: "add_stack_var_conflict", scope: !3, file: !3, line: 298, type: !5562, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5564)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{null, !833, !833}
!5564 = !{!5565, !5566, !5567, !5568}
!5565 = !DILocalVariable(name: "x", arg: 1, scope: !5561, file: !3, line: 298, type: !833)
!5566 = !DILocalVariable(name: "y", arg: 2, scope: !5561, file: !3, line: 298, type: !833)
!5567 = !DILocalVariable(name: "a", scope: !5561, file: !3, line: 300, type: !2224)
!5568 = !DILocalVariable(name: "b", scope: !5561, file: !3, line: 301, type: !2224)
!5569 = !DILocation(line: 0, scope: !5561)
!5570 = !DILocation(line: 300, column: 26, scope: !5561)
!5571 = !DILocation(line: 302, column: 11, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 302, column: 7)
!5573 = !DILocation(line: 302, column: 8, scope: !5572)
!5574 = !DILocation(line: 302, column: 7, scope: !5561)
!5575 = !DILocation(line: 303, column: 20, scope: !5572)
!5576 = !DILocation(line: 303, column: 18, scope: !5572)
!5577 = !DILocation(line: 303, column: 5, scope: !5572)
!5578 = !DILocation(line: 304, column: 11, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 304, column: 7)
!5580 = !DILocation(line: 304, column: 8, scope: !5579)
!5581 = !DILocation(line: 304, column: 7, scope: !5561)
!5582 = !DILocation(line: 305, column: 20, scope: !5579)
!5583 = !DILocation(line: 305, column: 18, scope: !5579)
!5584 = !DILocation(line: 306, column: 22, scope: !5561)
!5585 = !DILocation(line: 305, column: 5, scope: !5579)
!5586 = !DILocation(line: 306, column: 33, scope: !5561)
!5587 = !DILocation(line: 306, column: 3, scope: !5561)
!5588 = !DILocation(line: 307, column: 22, scope: !5561)
!5589 = !DILocation(line: 307, column: 33, scope: !5561)
!5590 = !DILocation(line: 307, column: 3, scope: !5561)
!5591 = !DILocation(line: 308, column: 1, scope: !5561)
!5592 = distinct !DISubprogram(name: "aggregate_contains_union_type", scope: !3, file: !3, line: 325, type: !5476, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5593)
!5593 = !{!5594, !5595}
!5594 = !DILocalVariable(name: "type", arg: 1, scope: !5592, file: !3, line: 325, type: !1014)
!5595 = !DILocalVariable(name: "field", scope: !5592, file: !3, line: 327, type: !1014)
!5596 = !DILocation(line: 333, column: 12, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 332, column: 7)
!5598 = !DILocation(line: 0, scope: !5592)
!5599 = !DILocation(line: 329, column: 7, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 329, column: 7)
!5601 = !DILocation(line: 329, column: 24, scope: !5600)
!5602 = !DILocation(line: 330, column: 7, scope: !5600)
!5603 = !DILocation(line: 330, column: 27, scope: !5600)
!5604 = !DILocation(line: 329, column: 7, scope: !5592)
!5605 = !DILocation(line: 332, column: 24, scope: !5597)
!5606 = !DILocation(line: 332, column: 7, scope: !5592)
!5607 = !DILocation(line: 333, column: 43, scope: !5597)
!5608 = !DILocation(line: 334, column: 24, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 334, column: 7)
!5610 = !DILocation(line: 334, column: 7, scope: !5592)
!5611 = !DILocation(line: 337, column: 16, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 337, column: 3)
!5613 = !DILocation(line: 337, column: 8, scope: !5612)
!5614 = !DILocation(line: 0, scope: !5612)
!5615 = !DILocation(line: 337, column: 3, scope: !5612)
!5616 = !DILocation(line: 338, column: 9, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 338, column: 9)
!5618 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 337, column: 3)
!5619 = !DILocation(line: 338, column: 27, scope: !5617)
!5620 = !DILocation(line: 338, column: 9, scope: !5618)
!5621 = !DILocation(line: 339, column: 42, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 339, column: 11)
!5623 = !DILocation(line: 339, column: 11, scope: !5622)
!5624 = !DILocation(line: 339, column: 11, scope: !5617)
!5625 = !DILocation(line: 337, column: 51, scope: !5618)
!5626 = !DILocation(line: 337, column: 3, scope: !5618)
!5627 = distinct !{!5627, !5615, !5628}
!5628 = !DILocation(line: 340, column: 9, scope: !5612)
!5629 = !DILocation(line: 343, column: 1, scope: !5592)
!5630 = distinct !DISubprogram(name: "stack_protect_decl_phase", scope: !3, file: !3, line: 1119, type: !5631, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5633)
!5631 = !DISubroutineType(types: !5632)
!5632 = !{!823, !1014}
!5633 = !{!5634, !5635, !5636}
!5634 = !DILocalVariable(name: "decl", arg: 1, scope: !5630, file: !3, line: 1119, type: !1014)
!5635 = !DILocalVariable(name: "bits", scope: !5630, file: !3, line: 1121, type: !7)
!5636 = !DILocalVariable(name: "ret", scope: !5630, file: !3, line: 1122, type: !823)
!5637 = !DILocation(line: 0, scope: !5630)
!5638 = !DILocation(line: 1121, column: 52, scope: !5630)
!5639 = !DILocation(line: 1121, column: 23, scope: !5630)
!5640 = !DILocation(line: 1124, column: 12, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 1124, column: 7)
!5642 = !DILocation(line: 1124, column: 7, scope: !5630)
!5643 = !DILocation(line: 1125, column: 22, scope: !5641)
!5644 = !DILocation(line: 1125, column: 5, scope: !5641)
!5645 = !DILocation(line: 1127, column: 7, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 1127, column: 7)
!5647 = !DILocation(line: 1127, column: 26, scope: !5646)
!5648 = !DILocation(line: 1127, column: 7, scope: !5630)
!5649 = !DILocation(line: 1129, column: 17, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1129, column: 11)
!5651 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 1128, column: 5)
!5652 = !DILocation(line: 1130, column: 14, scope: !5650)
!5653 = !DILocation(line: 1130, column: 4, scope: !5650)
!5654 = !DILocation(line: 1132, column: 16, scope: !5650)
!5655 = !DILocation(line: 1136, column: 17, scope: !5646)
!5656 = !DILocation(line: 0, scope: !5646)
!5657 = !DILocation(line: 1138, column: 7, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 1138, column: 7)
!5659 = !DILocation(line: 1138, column: 7, scope: !5630)
!5660 = !DILocation(line: 1139, column: 25, scope: !5658)
!5661 = !DILocation(line: 1139, column: 5, scope: !5658)
!5662 = !DILocation(line: 1141, column: 3, scope: !5630)
!5663 = distinct !DISubprogram(name: "stack_protect_classify_type", scope: !3, file: !3, line: 1066, type: !3848, scopeLine: 1067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5664)
!5664 = !{!5665, !5666, !5667, !5668, !5672}
!5665 = !DILocalVariable(name: "type", arg: 1, scope: !5663, file: !3, line: 1066, type: !1014)
!5666 = !DILocalVariable(name: "ret", scope: !5663, file: !3, line: 1068, type: !7)
!5667 = !DILocalVariable(name: "t", scope: !5663, file: !3, line: 1069, type: !1014)
!5668 = !DILocalVariable(name: "max", scope: !5669, file: !3, line: 1079, type: !835)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 1078, column: 2)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 1075, column: 11)
!5671 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 1072, column: 5)
!5672 = !DILocalVariable(name: "len", scope: !5669, file: !3, line: 1080, type: !835)
!5673 = !DILocation(line: 0, scope: !5663)
!5674 = !DILocation(line: 1071, column: 11, scope: !5663)
!5675 = !DILocation(line: 1071, column: 3, scope: !5663)
!5676 = !DILocation(line: 1074, column: 11, scope: !5671)
!5677 = !DILocation(line: 1075, column: 16, scope: !5670)
!5678 = !DILocation(line: 1075, column: 13, scope: !5670)
!5679 = !DILocation(line: 1076, column: 12, scope: !5670)
!5680 = !DILocation(line: 1076, column: 9, scope: !5670)
!5681 = !DILocation(line: 1076, column: 4, scope: !5670)
!5682 = !DILocation(line: 1077, column: 12, scope: !5670)
!5683 = !DILocation(line: 1077, column: 9, scope: !5670)
!5684 = !DILocation(line: 1079, column: 33, scope: !5669)
!5685 = !DILocation(line: 0, scope: !5669)
!5686 = !DILocation(line: 1082, column: 9, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1082, column: 8)
!5688 = !DILocation(line: 1083, column: 8, scope: !5687)
!5689 = !DILocation(line: 1083, column: 12, scope: !5687)
!5690 = !DILocation(line: 1082, column: 8, scope: !5669)
!5691 = !DILocation(line: 1086, column: 26, scope: !5687)
!5692 = !DILocation(line: 1086, column: 12, scope: !5687)
!5693 = !DILocation(line: 0, scope: !5687)
!5694 = !DILocation(line: 1088, column: 12, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1088, column: 8)
!5696 = !DILocation(line: 1092, column: 2, scope: !5669)
!5697 = !DILocation(line: 1101, column: 16, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 1101, column: 7)
!5699 = !DILocation(line: 1101, column: 12, scope: !5698)
!5700 = !DILocation(line: 0, scope: !5671)
!5701 = !DILocation(line: 0, scope: !5698)
!5702 = !DILocation(line: 1101, column: 7, scope: !5698)
!5703 = !DILocation(line: 1102, column: 6, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 1102, column: 6)
!5705 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 1101, column: 7)
!5706 = !DILocation(line: 1102, column: 20, scope: !5704)
!5707 = !DILocation(line: 1102, column: 6, scope: !5705)
!5708 = !DILocation(line: 1103, column: 40, scope: !5704)
!5709 = !DILocation(line: 1103, column: 11, scope: !5704)
!5710 = !DILocation(line: 1103, column: 8, scope: !5704)
!5711 = !DILocation(line: 1103, column: 4, scope: !5704)
!5712 = !DILocation(line: 1101, column: 44, scope: !5705)
!5713 = !DILocation(line: 1101, column: 7, scope: !5705)
!5714 = distinct !{!5714, !5702, !5715}
!5715 = !DILocation(line: 1103, column: 53, scope: !5698)
!5716 = !DILocation(line: 1110, column: 3, scope: !5663)
!5717 = distinct !DISubprogram(name: "stack_var_size_cmp", scope: !3, file: !3, line: 390, type: !1365, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5718)
!5718 = !{!5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726}
!5719 = !DILocalVariable(name: "a", arg: 1, scope: !5717, file: !3, line: 390, type: !1360)
!5720 = !DILocalVariable(name: "b", arg: 2, scope: !5717, file: !3, line: 390, type: !1360)
!5721 = !DILocalVariable(name: "sa", scope: !5717, file: !3, line: 392, type: !985)
!5722 = !DILocalVariable(name: "sb", scope: !5717, file: !3, line: 393, type: !985)
!5723 = !DILocalVariable(name: "decla", scope: !5717, file: !3, line: 394, type: !1014)
!5724 = !DILocalVariable(name: "declb", scope: !5717, file: !3, line: 394, type: !1014)
!5725 = !DILocalVariable(name: "uida", scope: !5717, file: !3, line: 395, type: !7)
!5726 = !DILocalVariable(name: "uidb", scope: !5717, file: !3, line: 395, type: !7)
!5727 = !DILocation(line: 0, scope: !5717)
!5728 = !DILocation(line: 392, column: 22, scope: !5717)
!5729 = !DILocation(line: 392, column: 34, scope: !5717)
!5730 = !DILocation(line: 392, column: 33, scope: !5717)
!5731 = !DILocation(line: 392, column: 53, scope: !5717)
!5732 = !DILocation(line: 393, column: 34, scope: !5717)
!5733 = !DILocation(line: 393, column: 33, scope: !5717)
!5734 = !DILocation(line: 393, column: 53, scope: !5717)
!5735 = !DILocation(line: 397, column: 10, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 397, column: 7)
!5737 = !DILocation(line: 397, column: 7, scope: !5717)
!5738 = !DILocation(line: 399, column: 10, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 399, column: 7)
!5740 = !DILocation(line: 399, column: 7, scope: !5717)
!5741 = !DILocation(line: 401, column: 42, scope: !5717)
!5742 = !DILocation(line: 402, column: 42, scope: !5717)
!5743 = !DILocation(line: 407, column: 7, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 407, column: 7)
!5745 = !DILocation(line: 407, column: 25, scope: !5744)
!5746 = !DILocation(line: 0, scope: !5744)
!5747 = !DILocation(line: 407, column: 7, scope: !5717)
!5748 = !DILocation(line: 409, column: 11, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 408, column: 5)
!5750 = !DILocation(line: 410, column: 9, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 409, column: 11)
!5752 = !DILocation(line: 410, column: 42, scope: !5751)
!5753 = !DILocation(line: 413, column: 5, scope: !5749)
!5754 = !DILocation(line: 414, column: 12, scope: !5744)
!5755 = !DILocation(line: 417, column: 12, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 414, column: 12)
!5757 = !DILocation(line: 417, column: 37, scope: !5756)
!5758 = !DILocation(line: 418, column: 12, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 418, column: 7)
!5760 = !DILocation(line: 418, column: 7, scope: !5717)
!5761 = !DILocation(line: 420, column: 12, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 420, column: 7)
!5763 = !DILocation(line: 423, column: 1, scope: !5717)
!5764 = distinct !DISubprogram(name: "stack_var_conflict_p", scope: !3, file: !3, line: 313, type: !5765, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5767)
!5765 = !DISubroutineType(types: !5766)
!5766 = !{!822, !833, !833}
!5767 = !{!5768, !5769, !5770, !5771}
!5768 = !DILocalVariable(name: "x", arg: 1, scope: !5764, file: !3, line: 313, type: !833)
!5769 = !DILocalVariable(name: "y", arg: 2, scope: !5764, file: !3, line: 313, type: !833)
!5770 = !DILocalVariable(name: "a", scope: !5764, file: !3, line: 315, type: !2224)
!5771 = !DILocalVariable(name: "b", scope: !5764, file: !3, line: 316, type: !2224)
!5772 = !DILocation(line: 0, scope: !5764)
!5773 = !DILocation(line: 315, column: 26, scope: !5764)
!5774 = !DILocation(line: 317, column: 11, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 317, column: 7)
!5776 = !DILocation(line: 317, column: 8, scope: !5775)
!5777 = !DILocation(line: 317, column: 21, scope: !5775)
!5778 = !DILocation(line: 317, column: 28, scope: !5775)
!5779 = !DILocation(line: 317, column: 25, scope: !5775)
!5780 = !DILocation(line: 317, column: 7, scope: !5764)
!5781 = !DILocation(line: 319, column: 38, scope: !5764)
!5782 = !DILocation(line: 319, column: 10, scope: !5764)
!5783 = !DILocation(line: 319, column: 3, scope: !5764)
!5784 = !DILocation(line: 320, column: 1, scope: !5764)
!5785 = distinct !DISubprogram(name: "union_stack_vars", scope: !3, file: !3, line: 561, type: !5786, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5788)
!5786 = !DISubroutineType(types: !5787)
!5787 = !{null, !833, !833, !985}
!5788 = !{!5789, !5790, !5791, !5792, !5793, !5794, !5795, !5803}
!5789 = !DILocalVariable(name: "a", arg: 1, scope: !5785, file: !3, line: 561, type: !833)
!5790 = !DILocalVariable(name: "b", arg: 2, scope: !5785, file: !3, line: 561, type: !833)
!5791 = !DILocalVariable(name: "offset", arg: 3, scope: !5785, file: !3, line: 561, type: !985)
!5792 = !DILocalVariable(name: "i", scope: !5785, file: !3, line: 563, type: !833)
!5793 = !DILocalVariable(name: "last", scope: !5785, file: !3, line: 563, type: !833)
!5794 = !DILocalVariable(name: "vb", scope: !5785, file: !3, line: 564, type: !2224)
!5795 = !DILocalVariable(name: "bi", scope: !5785, file: !3, line: 565, type: !5796)
!5796 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !955, line: 218, baseType: !5797)
!5797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !955, line: 203, size: 256, elements: !5798)
!5798 = !{!5799, !5800, !5801, !5802}
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !5797, file: !955, line: 206, baseType: !958, size: 64)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !5797, file: !955, line: 209, baseType: !958, size: 64, offset: 64)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !5797, file: !955, line: 212, baseType: !7, size: 32, offset: 128)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !5797, file: !955, line: 217, baseType: !968, size: 64, offset: 192)
!5803 = !DILocalVariable(name: "u", scope: !5785, file: !3, line: 566, type: !7)
!5804 = !DILocation(line: 0, scope: !5785)
!5805 = !DILocation(line: 564, column: 27, scope: !5785)
!5806 = !DILocation(line: 565, column: 3, scope: !5785)
!5807 = !DILocation(line: 566, column: 3, scope: !5785)
!5808 = !DILocation(line: 570, column: 8, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 570, column: 3)
!5810 = !DILocation(line: 0, scope: !5809)
!5811 = !DILocation(line: 570, column: 24, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 570, column: 3)
!5813 = !DILocation(line: 570, column: 3, scope: !5809)
!5814 = !DILocation(line: 573, column: 7, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 571, column: 5)
!5816 = !DILocation(line: 573, column: 21, scope: !5815)
!5817 = !DILocation(line: 573, column: 36, scope: !5815)
!5818 = !DILocation(line: 570, column: 46, scope: !5812)
!5819 = !DILocation(line: 570, column: 60, scope: !5812)
!5820 = !DILocation(line: 570, column: 3, scope: !5812)
!5821 = distinct !{!5821, !5813, !5822}
!5822 = !DILocation(line: 574, column: 5, scope: !5809)
!5823 = !DILocation(line: 575, column: 41, scope: !5785)
!5824 = !DILocation(line: 575, column: 20, scope: !5785)
!5825 = !DILocation(line: 575, column: 25, scope: !5785)
!5826 = !DILocation(line: 576, column: 3, scope: !5785)
!5827 = !DILocation(line: 576, column: 17, scope: !5785)
!5828 = !DILocation(line: 576, column: 22, scope: !5785)
!5829 = !DILocation(line: 579, column: 7, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 579, column: 7)
!5831 = !DILocation(line: 579, column: 21, scope: !5830)
!5832 = !DILocation(line: 579, column: 44, scope: !5830)
!5833 = !DILocation(line: 579, column: 28, scope: !5830)
!5834 = !DILocation(line: 579, column: 7, scope: !5785)
!5835 = !DILocation(line: 580, column: 26, scope: !5830)
!5836 = !DILocation(line: 580, column: 5, scope: !5830)
!5837 = !DILocation(line: 583, column: 11, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 583, column: 7)
!5839 = !DILocation(line: 583, column: 7, scope: !5838)
!5840 = !DILocation(line: 583, column: 7, scope: !5785)
!5841 = !DILocation(line: 585, column: 7, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 585, column: 7)
!5843 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 584, column: 5)
!5844 = !DILocation(line: 585, column: 7, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 585, column: 7)
!5846 = !DILocation(line: 586, column: 29, scope: !5845)
!5847 = !DILocation(line: 586, column: 40, scope: !5845)
!5848 = !DILocation(line: 586, column: 43, scope: !5845)
!5849 = !DILocation(line: 586, column: 2, scope: !5845)
!5850 = distinct !{!5850, !5841, !5851}
!5851 = !DILocation(line: 586, column: 57, scope: !5842)
!5852 = !DILocation(line: 587, column: 7, scope: !5843)
!5853 = !DILocation(line: 588, column: 5, scope: !5843)
!5854 = !DILocation(line: 589, column: 1, scope: !5785)
!5855 = distinct !DISubprogram(name: "update_alias_info_with_stack_vars", scope: !3, file: !3, line: 467, type: !2987, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5856)
!5856 = !{!5857, !5858, !5859, !5860, !5861, !5865, !5866, !5867, !5871, !5872, !5875, !5878, !5879, !5883}
!5857 = !DILocalVariable(name: "decls_to_partitions", scope: !5855, file: !3, line: 469, type: !1496)
!5858 = !DILocalVariable(name: "i", scope: !5855, file: !3, line: 470, type: !833)
!5859 = !DILocalVariable(name: "j", scope: !5855, file: !3, line: 470, type: !833)
!5860 = !DILocalVariable(name: "var", scope: !5855, file: !3, line: 471, type: !1014)
!5861 = !DILocalVariable(name: "part", scope: !5862, file: !3, line: 475, type: !1493)
!5862 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 474, column: 5)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 473, column: 3)
!5864 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 473, column: 3)
!5865 = !DILocalVariable(name: "name", scope: !5862, file: !3, line: 476, type: !1014)
!5866 = !DILocalVariable(name: "pi", scope: !5862, file: !3, line: 477, type: !1695)
!5867 = !DILocalVariable(name: "decl", scope: !5868, file: !3, line: 502, type: !1014)
!5868 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 501, column: 2)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 500, column: 7)
!5870 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 500, column: 7)
!5871 = !DILocalVariable(name: "uid", scope: !5868, file: !3, line: 503, type: !7)
!5872 = !DILocalVariable(name: "i", scope: !5873, file: !3, line: 525, type: !7)
!5873 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 524, column: 5)
!5874 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 523, column: 7)
!5875 = !DILocalVariable(name: "visited", scope: !5873, file: !3, line: 526, type: !5876)
!5876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5877, size: 64)
!5877 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !135, line: 5199, flags: DIFlagFwdDecl)
!5878 = !DILocalVariable(name: "temp", scope: !5873, file: !3, line: 527, type: !1493)
!5879 = !DILocalVariable(name: "name", scope: !5880, file: !3, line: 531, type: !1014)
!5880 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 530, column: 2)
!5881 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 529, column: 7)
!5882 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 529, column: 7)
!5883 = !DILocalVariable(name: "pi", scope: !5880, file: !3, line: 532, type: !1695)
!5884 = !DILocation(line: 0, scope: !5855)
!5885 = !DILocation(line: 473, column: 8, scope: !5864)
!5886 = !DILocation(line: 471, column: 8, scope: !5855)
!5887 = !DILocation(line: 0, scope: !5864)
!5888 = !DILocation(line: 469, column: 25, scope: !5855)
!5889 = !DILocation(line: 473, column: 19, scope: !5863)
!5890 = !DILocation(line: 473, column: 17, scope: !5863)
!5891 = !DILocation(line: 473, column: 3, scope: !5864)
!5892 = !DILocation(line: 0, scope: !5862)
!5893 = !DILocation(line: 480, column: 11, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 480, column: 11)
!5895 = !DILocation(line: 480, column: 25, scope: !5894)
!5896 = !DILocation(line: 480, column: 40, scope: !5894)
!5897 = !DILocation(line: 481, column: 11, scope: !5894)
!5898 = !DILocation(line: 481, column: 28, scope: !5894)
!5899 = !DILocation(line: 481, column: 33, scope: !5894)
!5900 = !DILocation(line: 480, column: 11, scope: !5862)
!5901 = !DILocation(line: 484, column: 12, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 484, column: 11)
!5903 = !DILocation(line: 484, column: 11, scope: !5862)
!5904 = !DILocation(line: 486, column: 26, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 485, column: 2)
!5906 = !DILocation(line: 487, column: 41, scope: !5905)
!5907 = !DILocation(line: 487, column: 4, scope: !5905)
!5908 = !DILocation(line: 487, column: 10, scope: !5905)
!5909 = !DILocation(line: 487, column: 21, scope: !5905)
!5910 = !DILocation(line: 487, column: 39, scope: !5905)
!5911 = !DILocation(line: 488, column: 2, scope: !5905)
!5912 = !DILocation(line: 493, column: 15, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 493, column: 11)
!5914 = !DILocation(line: 493, column: 11, scope: !5862)
!5915 = !DILocation(line: 494, column: 24, scope: !5913)
!5916 = !DILocation(line: 494, column: 8, scope: !5913)
!5917 = !DILocation(line: 494, column: 2, scope: !5913)
!5918 = !DILocation(line: 495, column: 14, scope: !5862)
!5919 = !DILocation(line: 499, column: 14, scope: !5862)
!5920 = !DILocation(line: 500, column: 12, scope: !5870)
!5921 = !DILocation(line: 0, scope: !5870)
!5922 = !DILocation(line: 500, column: 21, scope: !5869)
!5923 = !DILocation(line: 500, column: 7, scope: !5870)
!5924 = !DILocation(line: 502, column: 16, scope: !5868)
!5925 = !DILocation(line: 502, column: 30, scope: !5868)
!5926 = !DILocation(line: 0, scope: !5868)
!5927 = !DILocation(line: 503, column: 23, scope: !5868)
!5928 = !DILocation(line: 507, column: 4, scope: !5868)
!5929 = !DILocation(line: 509, column: 4, scope: !5868)
!5930 = !DILocation(line: 511, column: 17, scope: !5868)
!5931 = !DILocation(line: 511, column: 9, scope: !5868)
!5932 = !DILocation(line: 510, column: 17, scope: !5868)
!5933 = !DILocation(line: 510, column: 4, scope: !5868)
!5934 = !DILocation(line: 511, column: 32, scope: !5868)
!5935 = !DILocation(line: 512, column: 35, scope: !5868)
!5936 = !DILocation(line: 512, column: 41, scope: !5868)
!5937 = !DILocation(line: 512, column: 52, scope: !5868)
!5938 = !DILocation(line: 513, column: 7, scope: !5868)
!5939 = !DILocation(line: 512, column: 15, scope: !5868)
!5940 = !DILocation(line: 512, column: 4, scope: !5868)
!5941 = !DILocation(line: 513, column: 14, scope: !5868)
!5942 = !DILocation(line: 500, column: 33, scope: !5869)
!5943 = !DILocation(line: 500, column: 47, scope: !5869)
!5944 = !DILocation(line: 500, column: 7, scope: !5869)
!5945 = distinct !{!5945, !5923, !5946}
!5946 = !DILocation(line: 514, column: 2, scope: !5870)
!5947 = !DILocation(line: 517, column: 12, scope: !5862)
!5948 = !DILocation(line: 518, column: 29, scope: !5862)
!5949 = !DILocation(line: 518, column: 7, scope: !5862)
!5950 = !DILocation(line: 519, column: 5, scope: !5863)
!5951 = !DILocation(line: 473, column: 36, scope: !5863)
!5952 = !DILocation(line: 473, column: 3, scope: !5863)
!5953 = distinct !{!5953, !5891, !5954}
!5954 = !DILocation(line: 519, column: 5, scope: !5864)
!5955 = !DILocation(line: 523, column: 7, scope: !5874)
!5956 = !DILocation(line: 523, column: 7, scope: !5855)
!5957 = !DILocation(line: 526, column: 39, scope: !5873)
!5958 = !DILocation(line: 0, scope: !5873)
!5959 = !DILocation(line: 527, column: 21, scope: !5873)
!5960 = !DILocation(line: 529, column: 12, scope: !5882)
!5961 = !DILocation(line: 0, scope: !5882)
!5962 = !DILocation(line: 529, column: 23, scope: !5881)
!5963 = !DILocation(line: 529, column: 21, scope: !5881)
!5964 = !DILocation(line: 529, column: 7, scope: !5882)
!5965 = !DILocation(line: 531, column: 16, scope: !5880)
!5966 = !DILocation(line: 0, scope: !5880)
!5967 = !DILocation(line: 534, column: 8, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 534, column: 8)
!5969 = !DILocation(line: 535, column: 8, scope: !5968)
!5970 = !DILocation(line: 535, column: 11, scope: !5968)
!5971 = !DILocation(line: 536, column: 8, scope: !5968)
!5972 = !DILocation(line: 536, column: 18, scope: !5968)
!5973 = !DILocation(line: 536, column: 44, scope: !5968)
!5974 = !DILocation(line: 534, column: 8, scope: !5880)
!5975 = !DILocation(line: 537, column: 42, scope: !5968)
!5976 = !DILocation(line: 537, column: 6, scope: !5968)
!5977 = !DILocation(line: 529, column: 39, scope: !5881)
!5978 = !DILocation(line: 529, column: 7, scope: !5881)
!5979 = distinct !{!5979, !5964, !5980}
!5980 = !DILocation(line: 539, column: 2, scope: !5882)
!5981 = !DILocation(line: 541, column: 56, scope: !5873)
!5982 = !DILocation(line: 541, column: 7, scope: !5873)
!5983 = !DILocation(line: 543, column: 39, scope: !5873)
!5984 = !DILocation(line: 543, column: 45, scope: !5873)
!5985 = !DILocation(line: 543, column: 56, scope: !5873)
!5986 = !DILocation(line: 543, column: 7, scope: !5873)
!5987 = !DILocation(line: 546, column: 7, scope: !5873)
!5988 = !DILocation(line: 547, column: 7, scope: !5873)
!5989 = !DILocation(line: 548, column: 7, scope: !5873)
!5990 = !DILocation(line: 549, column: 5, scope: !5873)
!5991 = !DILocation(line: 550, column: 1, scope: !5855)
!5992 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !955, file: !955, line: 224, type: !5993, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6000)
!5993 = !DISubroutineType(types: !5994)
!5994 = !{null, !5995, !5996, !7, !5999}
!5995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5796, size: 64)
!5996 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !874, line: 48, baseType: !5997)
!5997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5998, size: 64)
!5998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!5999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!6000 = !{!6001, !6002, !6003, !6004}
!6001 = !DILocalVariable(name: "bi", arg: 1, scope: !5992, file: !955, line: 224, type: !5995)
!6002 = !DILocalVariable(name: "map", arg: 2, scope: !5992, file: !955, line: 224, type: !5996)
!6003 = !DILocalVariable(name: "start_bit", arg: 3, scope: !5992, file: !955, line: 225, type: !7)
!6004 = !DILocalVariable(name: "bit_no", arg: 4, scope: !5992, file: !955, line: 225, type: !5999)
!6005 = !DILocation(line: 0, scope: !5992)
!6006 = !DILocation(line: 227, column: 19, scope: !5992)
!6007 = !DILocation(line: 227, column: 12, scope: !5992)
!6008 = !DILocation(line: 228, column: 7, scope: !5992)
!6009 = !DILocation(line: 228, column: 12, scope: !5992)
!6010 = !DILocation(line: 0, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6012, file: !955, line: 233, column: 11)
!6012 = distinct !DILexicalBlock(scope: !5992, file: !955, line: 232, column: 5)
!6013 = !DILocation(line: 231, column: 3, scope: !5992)
!6014 = !DILocation(line: 233, column: 12, scope: !6011)
!6015 = !DILocation(line: 233, column: 11, scope: !6012)
!6016 = !DILocation(line: 235, column: 13, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6011, file: !955, line: 234, column: 2)
!6018 = !DILocation(line: 236, column: 4, scope: !6017)
!6019 = !DILocation(line: 239, column: 11, scope: !6012)
!6020 = distinct !{!6020, !6013, !6021}
!6021 = !DILocation(line: 242, column: 5, scope: !5992)
!6022 = !DILocation(line: 245, column: 11, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !5992, file: !955, line: 245, column: 7)
!6024 = !DILocation(line: 245, column: 17, scope: !6023)
!6025 = !DILocation(line: 245, column: 22, scope: !6023)
!6026 = !DILocation(line: 245, column: 7, scope: !5992)
!6027 = !DILocation(line: 246, column: 27, scope: !6023)
!6028 = !DILocation(line: 246, column: 32, scope: !6023)
!6029 = !DILocation(line: 246, column: 5, scope: !6023)
!6030 = !DILocation(line: 249, column: 7, scope: !5992)
!6031 = !DILocation(line: 249, column: 15, scope: !5992)
!6032 = !DILocation(line: 250, column: 14, scope: !5992)
!6033 = !DILocation(line: 251, column: 7, scope: !5992)
!6034 = !DILocation(line: 251, column: 12, scope: !5992)
!6035 = !DILocation(line: 257, column: 16, scope: !5992)
!6036 = !DILocation(line: 257, column: 13, scope: !5992)
!6037 = !DILocation(line: 259, column: 11, scope: !5992)
!6038 = !DILocation(line: 260, column: 1, scope: !5992)
!6039 = distinct !DISubprogram(name: "bmp_iter_set", scope: !955, file: !955, line: 393, type: !6040, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6042)
!6040 = !DISubroutineType(types: !6041)
!6041 = !{!822, !5995, !5999}
!6042 = !{!6043, !6044, !6045}
!6043 = !DILocalVariable(name: "bi", arg: 1, scope: !6039, file: !955, line: 393, type: !5995)
!6044 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6039, file: !955, line: 393, type: !5999)
!6045 = !DILabel(scope: !6046, name: "next_bit", file: !955, line: 398)
!6046 = distinct !DILexicalBlock(scope: !6047, file: !955, line: 397, column: 5)
!6047 = distinct !DILexicalBlock(scope: !6039, file: !955, line: 396, column: 7)
!6048 = !DILocation(line: 0, scope: !6039)
!6049 = !DILocation(line: 396, column: 11, scope: !6047)
!6050 = !DILocation(line: 396, column: 7, scope: !6047)
!6051 = !DILocation(line: 396, column: 7, scope: !6039)
!6052 = !DILocation(line: 419, column: 15, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !955, line: 418, column: 2)
!6054 = distinct !DILexicalBlock(scope: !6039, file: !955, line: 415, column: 5)
!6055 = !DILocation(line: 399, column: 7, scope: !6046)
!6056 = !DILocation(line: 398, column: 5, scope: !6046)
!6057 = !DILocation(line: 399, column: 20, scope: !6046)
!6058 = !DILocation(line: 399, column: 25, scope: !6046)
!6059 = !DILocation(line: 399, column: 14, scope: !6046)
!6060 = !DILocation(line: 401, column: 13, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6046, file: !955, line: 400, column: 2)
!6062 = !DILocation(line: 402, column: 12, scope: !6061)
!6063 = distinct !{!6063, !6055, !6064}
!6064 = !DILocation(line: 403, column: 2, scope: !6046)
!6065 = !DILocation(line: 410, column: 15, scope: !6039)
!6066 = !DILocation(line: 410, column: 42, scope: !6039)
!6067 = !DILocation(line: 411, column: 26, scope: !6039)
!6068 = !DILocation(line: 410, column: 11, scope: !6039)
!6069 = !DILocation(line: 412, column: 7, scope: !6039)
!6070 = !DILocation(line: 412, column: 14, scope: !6039)
!6071 = !DILocation(line: 0, scope: !6054)
!6072 = !DILocation(line: 414, column: 3, scope: !6039)
!6073 = !DILocation(line: 417, column: 7, scope: !6054)
!6074 = !DILocation(line: 417, column: 18, scope: !6054)
!6075 = !DILocation(line: 417, column: 26, scope: !6054)
!6076 = !DILocation(line: 419, column: 13, scope: !6053)
!6077 = !DILocation(line: 420, column: 8, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6053, file: !955, line: 420, column: 8)
!6079 = !DILocation(line: 420, column: 8, scope: !6053)
!6080 = !DILocation(line: 422, column: 12, scope: !6053)
!6081 = !DILocation(line: 423, column: 15, scope: !6053)
!6082 = distinct !{!6082, !6073, !6083}
!6083 = !DILocation(line: 424, column: 2, scope: !6054)
!6084 = !DILocation(line: 427, column: 28, scope: !6054)
!6085 = !DILocation(line: 427, column: 16, scope: !6054)
!6086 = !DILocation(line: 428, column: 12, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6054, file: !955, line: 428, column: 11)
!6088 = !DILocation(line: 428, column: 11, scope: !6054)
!6089 = !DILocation(line: 430, column: 27, scope: !6054)
!6090 = !DILocation(line: 430, column: 32, scope: !6054)
!6091 = !DILocation(line: 430, column: 15, scope: !6054)
!6092 = !DILocation(line: 431, column: 19, scope: !6054)
!6093 = distinct !{!6093, !6072, !6094}
!6094 = !DILocation(line: 432, column: 5, scope: !6039)
!6095 = !DILocation(line: 433, column: 1, scope: !6039)
!6096 = distinct !DISubprogram(name: "bmp_iter_next", scope: !955, file: !955, line: 382, type: !6097, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6099)
!6097 = !DISubroutineType(types: !6098)
!6098 = !{null, !5995, !5999}
!6099 = !{!6100, !6101}
!6100 = !DILocalVariable(name: "bi", arg: 1, scope: !6096, file: !955, line: 382, type: !5995)
!6101 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6096, file: !955, line: 382, type: !5999)
!6102 = !DILocation(line: 0, scope: !6096)
!6103 = !DILocation(line: 384, column: 7, scope: !6096)
!6104 = !DILocation(line: 384, column: 12, scope: !6096)
!6105 = !DILocation(line: 385, column: 11, scope: !6096)
!6106 = !DILocation(line: 386, column: 1, scope: !6096)
!6107 = distinct !DISubprogram(name: "make_ssa_name", scope: !6108, file: !6108, line: 1245, type: !6109, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6111)
!6108 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!6109 = !DISubroutineType(types: !6110)
!6110 = !{!1014, !1014, !894}
!6111 = !{!6112, !6113}
!6112 = !DILocalVariable(name: "var", arg: 1, scope: !6107, file: !6108, line: 1245, type: !1014)
!6113 = !DILocalVariable(name: "stmt", arg: 2, scope: !6107, file: !6108, line: 1245, type: !894)
!6114 = !DILocation(line: 0, scope: !6107)
!6115 = !DILocation(line: 1247, column: 28, scope: !6107)
!6116 = !DILocation(line: 1247, column: 10, scope: !6107)
!6117 = !DILocation(line: 1247, column: 3, scope: !6107)
!6118 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !135, file: !135, line: 182, type: !6119, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6123)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!7, !6121}
!6121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6122, size: 64)
!6122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1404)
!6123 = !{!6124}
!6124 = !DILocalVariable(name: "vec_", arg: 1, scope: !6118, file: !135, line: 182, type: !6121)
!6125 = !DILocation(line: 0, scope: !6118)
!6126 = !DILocation(line: 182, column: 1, scope: !6118)
!6127 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !135, file: !135, line: 182, type: !6128, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6130)
!6128 = !DISubroutineType(types: !6129)
!6129 = !{!1014, !6121, !7}
!6130 = !{!6131, !6132}
!6131 = !DILocalVariable(name: "vec_", arg: 1, scope: !6127, file: !135, line: 182, type: !6121)
!6132 = !DILocalVariable(name: "ix_", arg: 2, scope: !6127, file: !135, line: 182, type: !7)
!6133 = !DILocation(line: 0, scope: !6127)
!6134 = !DILocation(line: 182, column: 1, scope: !6127)
!6135 = distinct !DISubprogram(name: "add_partitioned_vars_to_ptset", scope: !3, file: !3, line: 431, type: !6136, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6139)
!6136 = !DISubroutineType(types: !6137)
!6137 = !{null, !6138, !1496, !5876, !1493}
!6138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!6139 = !{!6140, !6141, !6142, !6143, !6144, !6145, !6146}
!6140 = !DILocalVariable(name: "pt", arg: 1, scope: !6135, file: !3, line: 431, type: !6138)
!6141 = !DILocalVariable(name: "decls_to_partitions", arg: 2, scope: !6135, file: !3, line: 432, type: !1496)
!6142 = !DILocalVariable(name: "visited", arg: 3, scope: !6135, file: !3, line: 433, type: !5876)
!6143 = !DILocalVariable(name: "temp", arg: 4, scope: !6135, file: !3, line: 433, type: !1493)
!6144 = !DILocalVariable(name: "bi", scope: !6135, file: !3, line: 435, type: !5796)
!6145 = !DILocalVariable(name: "i", scope: !6135, file: !3, line: 436, type: !7)
!6146 = !DILocalVariable(name: "part", scope: !6135, file: !3, line: 437, type: !2237)
!6147 = !DILocation(line: 0, scope: !6135)
!6148 = !DILocation(line: 435, column: 3, scope: !6135)
!6149 = !DILocation(line: 436, column: 3, scope: !6135)
!6150 = !DILocation(line: 439, column: 11, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 439, column: 7)
!6152 = !DILocation(line: 439, column: 7, scope: !6151)
!6153 = !DILocation(line: 440, column: 7, scope: !6151)
!6154 = !DILocation(line: 440, column: 14, scope: !6151)
!6155 = !DILocation(line: 440, column: 19, scope: !6151)
!6156 = !DILocation(line: 443, column: 7, scope: !6151)
!6157 = !DILocation(line: 443, column: 10, scope: !6151)
!6158 = !DILocation(line: 439, column: 7, scope: !6135)
!6159 = !DILocation(line: 446, column: 3, scope: !6135)
!6160 = !DILocation(line: 451, column: 3, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 451, column: 3)
!6162 = !DILocation(line: 0, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 452, column: 9)
!6164 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 451, column: 3)
!6165 = !DILocation(line: 451, column: 3, scope: !6164)
!6166 = !DILocation(line: 455, column: 28, scope: !6163)
!6167 = !DILocation(line: 455, column: 19, scope: !6163)
!6168 = !DILocation(line: 455, column: 11, scope: !6163)
!6169 = !DILocation(line: 454, column: 24, scope: !6163)
!6170 = !DILocation(line: 454, column: 11, scope: !6163)
!6171 = !DILocation(line: 452, column: 9, scope: !6164)
!6172 = !DILocation(line: 454, column: 13, scope: !6163)
!6173 = !DILocation(line: 456, column: 30, scope: !6163)
!6174 = !DILocation(line: 456, column: 7, scope: !6163)
!6175 = distinct !{!6175, !6160, !6176}
!6176 = !DILocation(line: 456, column: 35, scope: !6161)
!6177 = !DILocation(line: 457, column: 8, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 457, column: 7)
!6179 = !DILocation(line: 453, column: 27, scope: !6163)
!6180 = !DILocation(line: 453, column: 7, scope: !6163)
!6181 = !DILocation(line: 454, column: 2, scope: !6163)
!6182 = !DILocation(line: 457, column: 7, scope: !6135)
!6183 = !DILocation(line: 458, column: 26, scope: !6178)
!6184 = !DILocation(line: 458, column: 5, scope: !6178)
!6185 = !DILocation(line: 459, column: 1, scope: !6135)
!6186 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !337, file: !337, line: 150, type: !6187, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6191)
!6187 = !DISubroutineType(types: !6188)
!6188 = !{!7, !6189}
!6189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6190, size: 64)
!6190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!6191 = !{!6192}
!6192 = !DILocalVariable(name: "vec_", arg: 1, scope: !6186, file: !337, line: 150, type: !6189)
!6193 = !DILocation(line: 0, scope: !6186)
!6194 = !DILocation(line: 150, column: 1, scope: !6186)
!6195 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !337, file: !337, line: 150, type: !6196, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6198)
!6196 = !DISubroutineType(types: !6197)
!6197 = !{!873, !6189, !7}
!6198 = !{!6199, !6200}
!6199 = !DILocalVariable(name: "vec_", arg: 1, scope: !6195, file: !337, line: 150, type: !6189)
!6200 = !DILocalVariable(name: "ix_", arg: 2, scope: !6195, file: !337, line: 150, type: !7)
!6201 = !DILocation(line: 0, scope: !6195)
!6202 = !DILocation(line: 150, column: 1, scope: !6195)
!6203 = distinct !DISubprogram(name: "ei_end_p", scope: !337, file: !337, line: 721, type: !6204, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6206)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{!822, !3248}
!6206 = !{!6207}
!6207 = !DILocalVariable(name: "i", arg: 1, scope: !6203, file: !337, line: 721, type: !3248)
!6208 = !DILocation(line: 723, column: 22, scope: !6203)
!6209 = !DILocation(line: 723, column: 19, scope: !6203)
!6210 = !DILocation(line: 723, column: 10, scope: !6203)
!6211 = !DILocation(line: 723, column: 3, scope: !6203)
!6212 = distinct !DISubprogram(name: "ei_edge", scope: !337, file: !337, line: 752, type: !4906, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6213)
!6213 = !{!6214}
!6214 = !DILocalVariable(name: "i", arg: 1, scope: !6212, file: !337, line: 752, type: !3248)
!6215 = !DILocation(line: 754, column: 10, scope: !6212)
!6216 = !DILocation(line: 754, column: 3, scope: !6212)
!6217 = distinct !DISubprogram(name: "ei_container", scope: !337, file: !337, line: 685, type: !6218, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6220)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!861, !3248}
!6220 = !{!6221}
!6221 = !DILocalVariable(name: "i", arg: 1, scope: !6217, file: !337, line: 685, type: !3248)
!6222 = !DILocation(line: 687, column: 3, scope: !6217)
!6223 = !DILocation(line: 688, column: 10, scope: !6217)
!6224 = !DILocation(line: 688, column: 3, scope: !6217)
!6225 = distinct !DISubprogram(name: "gsi_last", scope: !385, file: !385, line: 4435, type: !6226, scopeLine: 4436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6228)
!6226 = !DISubroutineType(types: !6227)
!6227 = !{!3942, !884}
!6228 = !{!6229, !6230}
!6229 = !DILocalVariable(name: "seq", arg: 1, scope: !6225, file: !385, line: 4435, type: !884)
!6230 = !DILocalVariable(name: "i", scope: !6225, file: !385, line: 4437, type: !3942)
!6231 = !DILocation(line: 0, scope: !6225)
!6232 = !DILocation(line: 4437, column: 24, scope: !6225)
!6233 = !DILocation(line: 4439, column: 11, scope: !6225)
!6234 = !DILocation(line: 4439, column: 5, scope: !6225)
!6235 = !DILocation(line: 4439, column: 9, scope: !6225)
!6236 = !DILocation(line: 4440, column: 5, scope: !6225)
!6237 = !DILocation(line: 4440, column: 9, scope: !6225)
!6238 = !DILocation(line: 4441, column: 11, scope: !6225)
!6239 = !DILocation(line: 4441, column: 17, scope: !6225)
!6240 = !DILocation(line: 4441, column: 27, scope: !6225)
!6241 = !DILocation(line: 4441, column: 20, scope: !6225)
!6242 = !DILocation(line: 4441, column: 10, scope: !6225)
!6243 = !DILocation(line: 4441, column: 35, scope: !6225)
!6244 = !DILocation(line: 4441, column: 5, scope: !6225)
!6245 = !DILocation(line: 4441, column: 8, scope: !6225)
!6246 = !DILocation(line: 4443, column: 3, scope: !6225)
!6247 = distinct !DISubprogram(name: "single_succ_p", scope: !337, file: !337, line: 626, type: !6248, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6250)
!6248 = !DISubroutineType(types: !6249)
!6249 = !{!822, !5126}
!6250 = !{!6251}
!6251 = !DILocalVariable(name: "bb", arg: 1, scope: !6247, file: !337, line: 626, type: !5126)
!6252 = !DILocation(line: 0, scope: !6247)
!6253 = !DILocation(line: 628, column: 10, scope: !6247)
!6254 = !DILocation(line: 628, column: 33, scope: !6247)
!6255 = !DILocation(line: 628, column: 3, scope: !6247)
!6256 = distinct !DISubprogram(name: "single_succ", scope: !337, file: !337, line: 663, type: !6257, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6259)
!6257 = !DISubroutineType(types: !6258)
!6258 = !{!1435, !5126}
!6259 = !{!6260}
!6260 = !DILocalVariable(name: "bb", arg: 1, scope: !6256, file: !337, line: 663, type: !5126)
!6261 = !DILocation(line: 0, scope: !6256)
!6262 = !DILocation(line: 665, column: 10, scope: !6256)
!6263 = !DILocation(line: 665, column: 33, scope: !6256)
!6264 = !DILocation(line: 665, column: 3, scope: !6256)
!6265 = distinct !DISubprogram(name: "gimple_return_retval", scope: !385, file: !385, line: 4253, type: !2878, scopeLine: 4254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6266)
!6266 = !{!6267}
!6267 = !DILocalVariable(name: "gs", arg: 1, scope: !6265, file: !385, line: 4253, type: !2850)
!6268 = !DILocation(line: 0, scope: !6265)
!6269 = !DILocation(line: 4256, column: 10, scope: !6265)
!6270 = !DILocation(line: 4256, column: 3, scope: !6265)
!6271 = distinct !DISubprogram(name: "single_succ_edge", scope: !337, file: !337, line: 643, type: !6272, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6274)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!873, !5126}
!6274 = !{!6275}
!6275 = !DILocalVariable(name: "bb", arg: 1, scope: !6271, file: !337, line: 643, type: !5126)
!6276 = !DILocation(line: 0, scope: !6271)
!6277 = !DILocation(line: 645, column: 3, scope: !6271)
!6278 = !DILocation(line: 646, column: 10, scope: !6271)
!6279 = !DILocation(line: 646, column: 3, scope: !6271)
!6280 = distinct !DISubprogram(name: "gsi_start", scope: !385, file: !385, line: 4403, type: !6226, scopeLine: 4404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6281)
!6281 = !{!6282, !6283}
!6282 = !DILocalVariable(name: "seq", arg: 1, scope: !6280, file: !385, line: 4403, type: !884)
!6283 = !DILocalVariable(name: "i", scope: !6280, file: !385, line: 4405, type: !3942)
!6284 = !DILocation(line: 0, scope: !6280)
!6285 = !DILocation(line: 4405, column: 24, scope: !6280)
!6286 = !DILocation(line: 4407, column: 11, scope: !6280)
!6287 = !DILocation(line: 4407, column: 5, scope: !6280)
!6288 = !DILocation(line: 4407, column: 9, scope: !6280)
!6289 = !DILocation(line: 4408, column: 5, scope: !6280)
!6290 = !DILocation(line: 4408, column: 9, scope: !6280)
!6291 = !DILocation(line: 4409, column: 11, scope: !6280)
!6292 = !DILocation(line: 4409, column: 17, scope: !6280)
!6293 = !DILocation(line: 4409, column: 27, scope: !6280)
!6294 = !DILocation(line: 4409, column: 20, scope: !6280)
!6295 = !DILocation(line: 4409, column: 10, scope: !6280)
!6296 = !DILocation(line: 4409, column: 35, scope: !6280)
!6297 = !DILocation(line: 4409, column: 5, scope: !6280)
!6298 = !DILocation(line: 4409, column: 8, scope: !6280)
!6299 = !DILocation(line: 4411, column: 3, scope: !6280)
!6300 = distinct !DISubprogram(name: "expand_gimple_stmt", scope: !3, file: !3, line: 1955, type: !6301, scopeLine: 1956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6303)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{!900, !894}
!6303 = !{!6304, !6305, !6306, !6307, !6308}
!6304 = !DILocalVariable(name: "stmt", arg: 1, scope: !6300, file: !3, line: 1955, type: !894)
!6305 = !DILocalVariable(name: "lp_nr", scope: !6300, file: !3, line: 1957, type: !823)
!6306 = !DILocalVariable(name: "last", scope: !6300, file: !3, line: 1958, type: !900)
!6307 = !DILocalVariable(name: "saved_location", scope: !6300, file: !3, line: 1959, type: !853)
!6308 = !DILocalVariable(name: "insn", scope: !6309, file: !3, line: 1992, type: !900)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 1991, column: 5)
!6310 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 1990, column: 7)
!6311 = !DILocation(line: 0, scope: !6300)
!6312 = !DILocation(line: 1959, column: 31, scope: !6300)
!6313 = !DILocation(line: 1961, column: 10, scope: !6300)
!6314 = !DILocation(line: 1971, column: 3, scope: !6300)
!6315 = !DILocation(line: 1973, column: 7, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 1973, column: 7)
!6317 = !DILocation(line: 1973, column: 7, scope: !6300)
!6318 = !DILocation(line: 1975, column: 24, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 1974, column: 5)
!6320 = !DILocation(line: 1975, column: 22, scope: !6319)
!6321 = !DILocation(line: 1976, column: 7, scope: !6319)
!6322 = !DILocation(line: 1979, column: 28, scope: !6319)
!6323 = !DILocation(line: 1979, column: 7, scope: !6319)
!6324 = !DILocation(line: 1980, column: 5, scope: !6319)
!6325 = !DILocation(line: 1982, column: 3, scope: !6300)
!6326 = !DILocation(line: 1984, column: 3, scope: !6300)
!6327 = !DILocation(line: 1986, column: 18, scope: !6300)
!6328 = !DILocation(line: 1989, column: 11, scope: !6300)
!6329 = !DILocation(line: 1990, column: 7, scope: !6310)
!6330 = !DILocation(line: 1990, column: 7, scope: !6300)
!6331 = !DILocation(line: 1993, column: 19, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 1993, column: 7)
!6333 = !DILocation(line: 0, scope: !6309)
!6334 = !DILocation(line: 1993, column: 12, scope: !6332)
!6335 = !DILocation(line: 0, scope: !6332)
!6336 = !DILocation(line: 1993, column: 7, scope: !6332)
!6337 = !DILocation(line: 1996, column: 10, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 1996, column: 8)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1995, column: 2)
!6340 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1993, column: 7)
!6341 = !DILocation(line: 1999, column: 8, scope: !6338)
!6342 = !DILocation(line: 1999, column: 11, scope: !6338)
!6343 = !DILocation(line: 1999, column: 37, scope: !6338)
!6344 = !DILocation(line: 2000, column: 8, scope: !6338)
!6345 = !DILocation(line: 2000, column: 37, scope: !6338)
!6346 = !DILocation(line: 2001, column: 8, scope: !6338)
!6347 = !DILocation(line: 2001, column: 11, scope: !6338)
!6348 = !DILocation(line: 1996, column: 8, scope: !6339)
!6349 = !DILocation(line: 2002, column: 6, scope: !6338)
!6350 = !DILocation(line: 1994, column: 12, scope: !6340)
!6351 = !DILocation(line: 1993, column: 7, scope: !6340)
!6352 = distinct !{!6352, !6336, !6353}
!6353 = !DILocation(line: 2003, column: 2, scope: !6332)
!6354 = !DILocation(line: 2006, column: 3, scope: !6300)
!6355 = distinct !DISubprogram(name: "maybe_dump_rtl_for_gimple_stmt", scope: !3, file: !3, line: 1486, type: !6356, scopeLine: 1487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6358)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{null, !894, !900}
!6358 = !{!6359, !6360}
!6359 = !DILocalVariable(name: "stmt", arg: 1, scope: !6355, file: !3, line: 1486, type: !894)
!6360 = !DILocalVariable(name: "since", arg: 2, scope: !6355, file: !3, line: 1486, type: !900)
!6361 = !DILocation(line: 0, scope: !6355)
!6362 = !DILocation(line: 1488, column: 7, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1488, column: 7)
!6364 = !DILocation(line: 1488, column: 17, scope: !6363)
!6365 = !DILocation(line: 1488, column: 21, scope: !6363)
!6366 = !DILocation(line: 1488, column: 32, scope: !6363)
!6367 = !DILocation(line: 1488, column: 7, scope: !6355)
!6368 = !DILocation(line: 1490, column: 7, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 1489, column: 5)
!6370 = !DILocation(line: 1491, column: 26, scope: !6369)
!6371 = !DILocation(line: 1492, column: 17, scope: !6369)
!6372 = !DILocation(line: 1492, column: 28, scope: !6369)
!6373 = !DILocation(line: 1492, column: 14, scope: !6369)
!6374 = !DILocation(line: 1491, column: 7, scope: !6369)
!6375 = !DILocation(line: 1493, column: 16, scope: !6369)
!6376 = !DILocation(line: 1493, column: 7, scope: !6369)
!6377 = !DILocation(line: 1495, column: 18, scope: !6369)
!6378 = !DILocation(line: 1495, column: 29, scope: !6369)
!6379 = !DILocation(line: 1495, column: 37, scope: !6369)
!6380 = !DILocation(line: 1495, column: 7, scope: !6369)
!6381 = !DILocation(line: 1496, column: 5, scope: !6369)
!6382 = !DILocation(line: 1497, column: 1, scope: !6355)
!6383 = distinct !DISubprogram(name: "op_iter_init_tree", scope: !6108, file: !6108, line: 792, type: !6384, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6387)
!6384 = !DISubroutineType(types: !6385)
!6385 = !{!1014, !6386, !894, !823}
!6386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!6387 = !{!6388, !6389, !6390}
!6388 = !DILocalVariable(name: "ptr", arg: 1, scope: !6383, file: !6108, line: 792, type: !6386)
!6389 = !DILocalVariable(name: "stmt", arg: 2, scope: !6383, file: !6108, line: 792, type: !894)
!6390 = !DILocalVariable(name: "flags", arg: 3, scope: !6383, file: !6108, line: 792, type: !823)
!6391 = !DILocation(line: 0, scope: !6383)
!6392 = !DILocation(line: 794, column: 3, scope: !6383)
!6393 = !DILocation(line: 795, column: 8, scope: !6383)
!6394 = !DILocation(line: 795, column: 18, scope: !6383)
!6395 = !DILocation(line: 796, column: 10, scope: !6383)
!6396 = !DILocation(line: 796, column: 3, scope: !6383)
!6397 = distinct !DISubprogram(name: "op_iter_done", scope: !6108, file: !6108, line: 652, type: !6398, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6402)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{!822, !6400}
!6400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6401, size: 64)
!6401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4322)
!6402 = !{!6403}
!6403 = !DILocalVariable(name: "ptr", arg: 1, scope: !6397, file: !6108, line: 652, type: !6400)
!6404 = !DILocation(line: 0, scope: !6397)
!6405 = !DILocation(line: 654, column: 15, scope: !6397)
!6406 = !DILocation(line: 654, column: 3, scope: !6397)
!6407 = distinct !DISubprogram(name: "get_gimple_for_ssa_name", scope: !2275, file: !2275, line: 66, type: !6408, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6410)
!6408 = !DISubroutineType(types: !6409)
!6409 = !{!894, !1014}
!6410 = !{!6411, !6412}
!6411 = !DILocalVariable(name: "exp", arg: 1, scope: !6407, file: !2275, line: 66, type: !1014)
!6412 = !DILocalVariable(name: "v", scope: !6407, file: !2275, line: 68, type: !823)
!6413 = !DILocation(line: 0, scope: !6407)
!6414 = !DILocation(line: 69, column: 10, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6407, file: !2275, line: 69, column: 7)
!6416 = !DILocation(line: 69, column: 7, scope: !6415)
!6417 = !DILocation(line: 69, column: 17, scope: !6415)
!6418 = !DILocation(line: 68, column: 11, scope: !6407)
!6419 = !DILocation(line: 69, column: 20, scope: !6415)
!6420 = !DILocation(line: 69, column: 7, scope: !6407)
!6421 = !DILocation(line: 70, column: 12, scope: !6415)
!6422 = !DILocation(line: 70, column: 5, scope: !6415)
!6423 = !DILocation(line: 72, column: 1, scope: !6407)
!6424 = distinct !DISubprogram(name: "first_readonly_imm_use", scope: !6108, file: !6108, line: 292, type: !6425, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6428)
!6425 = !DISubroutineType(types: !6426)
!6426 = !{!2238, !6427, !1014}
!6427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!6428 = !{!6429, !6430}
!6429 = !DILocalVariable(name: "imm", arg: 1, scope: !6424, file: !6108, line: 292, type: !6427)
!6430 = !DILocalVariable(name: "var", arg: 2, scope: !6424, file: !6108, line: 292, type: !1014)
!6431 = !DILocation(line: 0, scope: !6424)
!6432 = !DILocation(line: 294, column: 18, scope: !6424)
!6433 = !DILocation(line: 294, column: 8, scope: !6424)
!6434 = !DILocation(line: 294, column: 14, scope: !6424)
!6435 = !DILocation(line: 295, column: 30, scope: !6424)
!6436 = !DILocation(line: 295, column: 16, scope: !6424)
!6437 = !DILocation(line: 299, column: 7, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6424, file: !6108, line: 299, column: 7)
!6439 = !DILocation(line: 299, column: 7, scope: !6424)
!6440 = !DILocation(line: 301, column: 15, scope: !6424)
!6441 = !DILocation(line: 301, column: 3, scope: !6424)
!6442 = !DILocation(line: 302, column: 1, scope: !6424)
!6443 = distinct !DISubprogram(name: "end_readonly_imm_use_p", scope: !6108, file: !6108, line: 285, type: !6444, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6448)
!6444 = !DISubroutineType(types: !6445)
!6445 = !{!822, !6446}
!6446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6447, size: 64)
!6447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4343)
!6448 = !{!6449}
!6449 = !DILocalVariable(name: "imm", arg: 1, scope: !6443, file: !6108, line: 285, type: !6446)
!6450 = !DILocation(line: 0, scope: !6443)
!6451 = !DILocation(line: 287, column: 16, scope: !6443)
!6452 = !DILocation(line: 287, column: 32, scope: !6443)
!6453 = !DILocation(line: 287, column: 24, scope: !6443)
!6454 = !DILocation(line: 287, column: 10, scope: !6443)
!6455 = !DILocation(line: 287, column: 3, scope: !6443)
!6456 = distinct !DISubprogram(name: "gimple_debug_bind_p", scope: !385, file: !385, line: 3257, type: !2904, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6457)
!6457 = !{!6458}
!6458 = !DILocalVariable(name: "s", arg: 1, scope: !6456, file: !385, line: 3257, type: !2850)
!6459 = !DILocation(line: 0, scope: !6456)
!6460 = !DILocation(line: 3259, column: 7, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6456, file: !385, line: 3259, column: 7)
!6462 = !DILocation(line: 3259, column: 7, scope: !6456)
!6463 = !DILocation(line: 3260, column: 22, scope: !6461)
!6464 = !DILocation(line: 3260, column: 30, scope: !6461)
!6465 = !DILocation(line: 3260, column: 12, scope: !6461)
!6466 = !DILocation(line: 3260, column: 5, scope: !6461)
!6467 = !DILocation(line: 3263, column: 1, scope: !6456)
!6468 = distinct !DISubprogram(name: "next_readonly_imm_use", scope: !6108, file: !6108, line: 306, type: !6469, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6471)
!6469 = !DISubroutineType(types: !6470)
!6470 = !{!2238, !6427}
!6471 = !{!6472, !6473}
!6472 = !DILocalVariable(name: "imm", arg: 1, scope: !6468, file: !6108, line: 306, type: !6427)
!6473 = !DILocalVariable(name: "old", scope: !6468, file: !6108, line: 308, type: !2238)
!6474 = !DILocation(line: 0, scope: !6468)
!6475 = !DILocation(line: 308, column: 28, scope: !6468)
!6476 = !DILocation(line: 319, column: 23, scope: !6468)
!6477 = !DILocation(line: 319, column: 16, scope: !6468)
!6478 = !DILocation(line: 320, column: 7, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6468, file: !6108, line: 320, column: 7)
!6480 = !DILocation(line: 320, column: 7, scope: !6468)
!6481 = !DILocation(line: 322, column: 15, scope: !6468)
!6482 = !DILocation(line: 322, column: 3, scope: !6468)
!6483 = !DILocation(line: 323, column: 1, scope: !6468)
!6484 = distinct !DISubprogram(name: "first_imm_use_stmt", scope: !6108, file: !6108, line: 1058, type: !6485, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6487)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{!894, !6427, !1014}
!6487 = !{!6488, !6489}
!6488 = !DILocalVariable(name: "imm", arg: 1, scope: !6484, file: !6108, line: 1058, type: !6427)
!6489 = !DILocalVariable(name: "var", arg: 2, scope: !6484, file: !6108, line: 1058, type: !1014)
!6490 = !DILocation(line: 0, scope: !6484)
!6491 = !DILocation(line: 1060, column: 18, scope: !6484)
!6492 = !DILocation(line: 1060, column: 8, scope: !6484)
!6493 = !DILocation(line: 1060, column: 14, scope: !6484)
!6494 = !DILocation(line: 1061, column: 30, scope: !6484)
!6495 = !DILocation(line: 1061, column: 16, scope: !6484)
!6496 = !DILocation(line: 1062, column: 8, scope: !6484)
!6497 = !DILocation(line: 1062, column: 22, scope: !6484)
!6498 = !DILocation(line: 1067, column: 18, scope: !6484)
!6499 = !DILocation(line: 1067, column: 23, scope: !6484)
!6500 = !DILocation(line: 1068, column: 18, scope: !6484)
!6501 = !DILocation(line: 1068, column: 23, scope: !6484)
!6502 = !DILocation(line: 1069, column: 22, scope: !6484)
!6503 = !DILocation(line: 1069, column: 27, scope: !6484)
!6504 = !DILocation(line: 1070, column: 18, scope: !6484)
!6505 = !DILocation(line: 1070, column: 22, scope: !6484)
!6506 = !DILocation(line: 1072, column: 7, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6484, file: !6108, line: 1072, column: 7)
!6508 = !DILocation(line: 1072, column: 7, scope: !6484)
!6509 = !DILocation(line: 1075, column: 30, scope: !6484)
!6510 = !DILocation(line: 1075, column: 3, scope: !6484)
!6511 = !DILocation(line: 1077, column: 10, scope: !6484)
!6512 = !DILocation(line: 1077, column: 3, scope: !6484)
!6513 = !DILocation(line: 1078, column: 1, scope: !6484)
!6514 = distinct !DISubprogram(name: "end_imm_use_stmt_p", scope: !6108, file: !6108, line: 969, type: !6444, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6515)
!6515 = !{!6516}
!6516 = !DILocalVariable(name: "imm", arg: 1, scope: !6514, file: !6108, line: 969, type: !6446)
!6517 = !DILocation(line: 0, scope: !6514)
!6518 = !DILocation(line: 971, column: 16, scope: !6514)
!6519 = !DILocation(line: 971, column: 32, scope: !6514)
!6520 = !DILocation(line: 971, column: 24, scope: !6514)
!6521 = !DILocation(line: 971, column: 10, scope: !6514)
!6522 = !DILocation(line: 971, column: 3, scope: !6514)
!6523 = distinct !DISubprogram(name: "first_imm_use_on_stmt", scope: !6108, file: !6108, line: 1101, type: !6469, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6524)
!6524 = !{!6525}
!6525 = !DILocalVariable(name: "imm", arg: 1, scope: !6523, file: !6108, line: 1101, type: !6427)
!6526 = !DILocation(line: 0, scope: !6523)
!6527 = !DILocation(line: 1103, column: 29, scope: !6523)
!6528 = !DILocation(line: 1103, column: 38, scope: !6523)
!6529 = !DILocation(line: 1103, column: 8, scope: !6523)
!6530 = !DILocation(line: 1103, column: 22, scope: !6523)
!6531 = !DILocation(line: 1104, column: 3, scope: !6523)
!6532 = distinct !DISubprogram(name: "end_imm_use_on_stmt_p", scope: !6108, file: !6108, line: 1110, type: !6444, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6533)
!6533 = !{!6534}
!6534 = !DILocalVariable(name: "imm", arg: 1, scope: !6532, file: !6108, line: 1110, type: !6446)
!6535 = !DILocation(line: 0, scope: !6532)
!6536 = !DILocation(line: 1112, column: 16, scope: !6532)
!6537 = !DILocation(line: 1112, column: 34, scope: !6532)
!6538 = !DILocation(line: 1112, column: 24, scope: !6532)
!6539 = !DILocation(line: 1112, column: 10, scope: !6532)
!6540 = !DILocation(line: 1112, column: 3, scope: !6532)
!6541 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !6108, file: !6108, line: 233, type: !6542, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6544)
!6542 = !DISubroutineType(types: !6543)
!6543 = !{null, !2238, !1014}
!6544 = !{!6545, !6546}
!6545 = !DILocalVariable(name: "use", arg: 1, scope: !6541, file: !6108, line: 233, type: !2238)
!6546 = !DILocalVariable(name: "val", arg: 2, scope: !6541, file: !6108, line: 233, type: !1014)
!6547 = !DILocation(line: 0, scope: !6541)
!6548 = !DILocation(line: 235, column: 3, scope: !6541)
!6549 = !DILocation(line: 236, column: 10, scope: !6541)
!6550 = !DILocation(line: 236, column: 15, scope: !6541)
!6551 = !DILocation(line: 237, column: 3, scope: !6541)
!6552 = !DILocation(line: 238, column: 1, scope: !6541)
!6553 = distinct !DISubprogram(name: "next_imm_use_on_stmt", scope: !6108, file: !6108, line: 1118, type: !6469, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6554)
!6554 = !{!6555}
!6555 = !DILocalVariable(name: "imm", arg: 1, scope: !6553, file: !6108, line: 1118, type: !6427)
!6556 = !DILocation(line: 0, scope: !6553)
!6557 = !DILocation(line: 1120, column: 23, scope: !6553)
!6558 = !DILocation(line: 1120, column: 16, scope: !6553)
!6559 = !DILocation(line: 1121, column: 7, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6553, file: !6108, line: 1121, column: 7)
!6561 = !DILocation(line: 1121, column: 7, scope: !6553)
!6562 = !DILocation(line: 1125, column: 33, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6560, file: !6108, line: 1124, column: 5)
!6564 = !DILocation(line: 1125, column: 42, scope: !6563)
!6565 = !DILocation(line: 1125, column: 26, scope: !6563)
!6566 = !DILocation(line: 1126, column: 7, scope: !6563)
!6567 = !DILocation(line: 0, scope: !6560)
!6568 = !DILocation(line: 1128, column: 1, scope: !6553)
!6569 = distinct !DISubprogram(name: "update_stmt", scope: !385, file: !385, line: 1456, type: !6570, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6572)
!6570 = !DISubroutineType(types: !6571)
!6571 = !{null, !894}
!6572 = !{!6573}
!6573 = !DILocalVariable(name: "s", arg: 1, scope: !6569, file: !385, line: 1456, type: !894)
!6574 = !DILocation(line: 0, scope: !6569)
!6575 = !DILocation(line: 1458, column: 7, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6569, file: !385, line: 1458, column: 7)
!6577 = !DILocation(line: 1458, column: 7, scope: !6569)
!6578 = !DILocation(line: 1460, column: 7, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6576, file: !385, line: 1459, column: 5)
!6580 = !DILocation(line: 1461, column: 7, scope: !6579)
!6581 = !DILocation(line: 1462, column: 5, scope: !6579)
!6582 = !DILocation(line: 1463, column: 1, scope: !6569)
!6583 = distinct !DISubprogram(name: "next_imm_use_stmt", scope: !6108, file: !6108, line: 1083, type: !6584, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6586)
!6584 = !DISubroutineType(types: !6585)
!6585 = !{!894, !6427}
!6586 = !{!6587}
!6587 = !DILocalVariable(name: "imm", arg: 1, scope: !6583, file: !6108, line: 1083, type: !6427)
!6588 = !DILocation(line: 0, scope: !6583)
!6589 = !DILocation(line: 1085, column: 33, scope: !6583)
!6590 = !DILocation(line: 1085, column: 16, scope: !6583)
!6591 = !DILocation(line: 1086, column: 7, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6583, file: !6108, line: 1086, column: 7)
!6593 = !DILocation(line: 1086, column: 7, scope: !6583)
!6594 = !DILocation(line: 1088, column: 26, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6596, file: !6108, line: 1088, column: 11)
!6596 = distinct !DILexicalBlock(scope: !6592, file: !6108, line: 1087, column: 5)
!6597 = !DILocation(line: 1088, column: 31, scope: !6595)
!6598 = !DILocation(line: 1088, column: 11, scope: !6596)
!6599 = !DILocation(line: 1089, column: 24, scope: !6595)
!6600 = !DILocation(line: 1089, column: 2, scope: !6595)
!6601 = !DILocation(line: 1093, column: 30, scope: !6583)
!6602 = !DILocation(line: 1093, column: 3, scope: !6583)
!6603 = !DILocation(line: 1094, column: 10, scope: !6583)
!6604 = !DILocation(line: 1094, column: 3, scope: !6583)
!6605 = !DILocation(line: 1095, column: 1, scope: !6583)
!6606 = distinct !DISubprogram(name: "op_iter_next_tree", scope: !6108, file: !6108, line: 699, type: !6607, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6609)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{!1014, !6386}
!6609 = !{!6610, !6611}
!6610 = !DILocalVariable(name: "ptr", arg: 1, scope: !6606, file: !6108, line: 699, type: !6386)
!6611 = !DILocalVariable(name: "val", scope: !6606, file: !6108, line: 701, type: !1014)
!6612 = !DILocation(line: 0, scope: !6606)
!6613 = !DILocation(line: 705, column: 12, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6606, file: !6108, line: 705, column: 7)
!6615 = !DILocation(line: 705, column: 7, scope: !6614)
!6616 = !DILocation(line: 705, column: 7, scope: !6606)
!6617 = !DILocation(line: 707, column: 13, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6614, file: !6108, line: 706, column: 5)
!6619 = !DILocation(line: 708, column: 24, scope: !6618)
!6620 = !DILocation(line: 708, column: 30, scope: !6618)
!6621 = !DILocation(line: 708, column: 17, scope: !6618)
!6622 = !DILocation(line: 709, column: 7, scope: !6618)
!6623 = !DILocation(line: 711, column: 12, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6606, file: !6108, line: 711, column: 7)
!6625 = !DILocation(line: 711, column: 7, scope: !6624)
!6626 = !DILocation(line: 711, column: 7, scope: !6606)
!6627 = !DILocation(line: 713, column: 13, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6624, file: !6108, line: 712, column: 5)
!6629 = !DILocation(line: 714, column: 24, scope: !6628)
!6630 = !DILocation(line: 714, column: 30, scope: !6628)
!6631 = !DILocation(line: 714, column: 17, scope: !6628)
!6632 = !DILocation(line: 715, column: 7, scope: !6628)
!6633 = !DILocation(line: 718, column: 8, scope: !6606)
!6634 = !DILocation(line: 718, column: 13, scope: !6606)
!6635 = !DILocation(line: 719, column: 3, scope: !6606)
!6636 = !DILocation(line: 721, column: 1, scope: !6606)
!6637 = distinct !DISubprogram(name: "expand_gimple_cond", scope: !3, file: !3, line: 1591, type: !6638, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6640)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{!1435, !1435, !894}
!6640 = !{!6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648, !6649, !6650, !6651, !6652, !6653, !6656}
!6641 = !DILocalVariable(name: "bb", arg: 1, scope: !6637, file: !3, line: 1591, type: !1435)
!6642 = !DILocalVariable(name: "stmt", arg: 2, scope: !6637, file: !3, line: 1591, type: !894)
!6643 = !DILocalVariable(name: "new_bb", scope: !6637, file: !3, line: 1593, type: !1435)
!6644 = !DILocalVariable(name: "dest", scope: !6637, file: !3, line: 1593, type: !1435)
!6645 = !DILocalVariable(name: "new_edge", scope: !6637, file: !3, line: 1594, type: !873)
!6646 = !DILocalVariable(name: "true_edge", scope: !6637, file: !3, line: 1595, type: !873)
!6647 = !DILocalVariable(name: "false_edge", scope: !6637, file: !3, line: 1596, type: !873)
!6648 = !DILocalVariable(name: "last2", scope: !6637, file: !3, line: 1597, type: !900)
!6649 = !DILocalVariable(name: "last", scope: !6637, file: !3, line: 1597, type: !900)
!6650 = !DILocalVariable(name: "code", scope: !6637, file: !3, line: 1598, type: !134)
!6651 = !DILocalVariable(name: "op0", scope: !6637, file: !3, line: 1599, type: !1014)
!6652 = !DILocalVariable(name: "op1", scope: !6637, file: !3, line: 1599, type: !1014)
!6653 = !DILocalVariable(name: "second", scope: !6654, file: !3, line: 1617, type: !894)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 1616, column: 5)
!6655 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1612, column: 7)
!6656 = !DILocalVariable(name: "code2", scope: !6657, file: !3, line: 1620, type: !134)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 1619, column: 2)
!6658 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 1618, column: 11)
!6659 = !DILocation(line: 0, scope: !6637)
!6660 = !DILocation(line: 1595, column: 3, scope: !6637)
!6661 = !DILocation(line: 1596, column: 3, scope: !6637)
!6662 = !DILocation(line: 1601, column: 10, scope: !6637)
!6663 = !DILocation(line: 1602, column: 9, scope: !6637)
!6664 = !DILocation(line: 1603, column: 9, scope: !6637)
!6665 = !DILocation(line: 1612, column: 7, scope: !6655)
!6666 = !DILocation(line: 1613, column: 13, scope: !6655)
!6667 = !DILocation(line: 1613, column: 10, scope: !6655)
!6668 = !DILocation(line: 1613, column: 7, scope: !6655)
!6669 = !DILocation(line: 1614, column: 10, scope: !6655)
!6670 = !DILocation(line: 1614, column: 26, scope: !6655)
!6671 = !DILocation(line: 1615, column: 7, scope: !6655)
!6672 = !DILocation(line: 1615, column: 35, scope: !6655)
!6673 = !DILocation(line: 1615, column: 10, scope: !6655)
!6674 = !DILocation(line: 1612, column: 7, scope: !6637)
!6675 = !DILocation(line: 1617, column: 23, scope: !6654)
!6676 = !DILocation(line: 0, scope: !6654)
!6677 = !DILocation(line: 1618, column: 11, scope: !6658)
!6678 = !DILocation(line: 1618, column: 32, scope: !6658)
!6679 = !DILocation(line: 1618, column: 11, scope: !6654)
!6680 = !DILocation(line: 1620, column: 27, scope: !6657)
!6681 = !DILocation(line: 0, scope: !6657)
!6682 = !DILocation(line: 1621, column: 8, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 1621, column: 8)
!6684 = !DILocation(line: 1621, column: 32, scope: !6683)
!6685 = !DILocation(line: 1621, column: 8, scope: !6657)
!6686 = !DILocation(line: 1624, column: 14, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 1622, column: 6)
!6688 = !DILocation(line: 1625, column: 14, scope: !6687)
!6689 = !DILocation(line: 1626, column: 6, scope: !6687)
!6690 = !DILocation(line: 1629, column: 13, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 1629, column: 13)
!6692 = !DILocation(line: 1629, column: 63, scope: !6691)
!6693 = !DILocation(line: 1629, column: 13, scope: !6683)
!6694 = !DILocation(line: 1632, column: 6, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 1631, column: 12)
!6696 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 1630, column: 6)
!6697 = !DILocation(line: 1632, column: 9, scope: !6695)
!6698 = !DILocation(line: 1632, column: 42, scope: !6695)
!6699 = !DILocation(line: 1633, column: 6, scope: !6695)
!6700 = !DILocation(line: 1633, column: 9, scope: !6695)
!6701 = !DILocation(line: 1633, column: 49, scope: !6695)
!6702 = !DILocation(line: 1634, column: 5, scope: !6695)
!6703 = !DILocation(line: 1631, column: 12, scope: !6696)
!6704 = !DILocation(line: 1637, column: 11, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 1635, column: 3)
!6706 = !DILocation(line: 1638, column: 11, scope: !6705)
!6707 = !DILocation(line: 1639, column: 3, scope: !6705)
!6708 = !DILocation(line: 1640, column: 39, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 1640, column: 17)
!6710 = !DILocation(line: 1643, column: 11, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1641, column: 3)
!6712 = !DILocation(line: 1644, column: 11, scope: !6711)
!6713 = !DILocation(line: 1645, column: 3, scope: !6711)
!6714 = !DILocation(line: 1650, column: 18, scope: !6637)
!6715 = !DILocation(line: 1652, column: 3, scope: !6637)
!6716 = !DILocation(line: 1653, column: 7, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1653, column: 7)
!6718 = !DILocation(line: 1653, column: 7, scope: !6637)
!6719 = !DILocation(line: 1655, column: 38, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 1654, column: 5)
!6721 = !DILocation(line: 1655, column: 7, scope: !6720)
!6722 = !DILocation(line: 1656, column: 28, scope: !6720)
!6723 = !DILocation(line: 1656, column: 7, scope: !6720)
!6724 = !DILocation(line: 1657, column: 5, scope: !6720)
!6725 = !DILocation(line: 1660, column: 3, scope: !6637)
!6726 = !DILocation(line: 1660, column: 14, scope: !6637)
!6727 = !DILocation(line: 1660, column: 20, scope: !6637)
!6728 = !DILocation(line: 1661, column: 3, scope: !6637)
!6729 = !DILocation(line: 1661, column: 15, scope: !6637)
!6730 = !DILocation(line: 1661, column: 21, scope: !6637)
!6731 = !DILocation(line: 1665, column: 19, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1665, column: 7)
!6733 = !DILocation(line: 1665, column: 31, scope: !6732)
!6734 = !DILocation(line: 1665, column: 24, scope: !6732)
!6735 = !DILocation(line: 1665, column: 7, scope: !6637)
!6736 = !DILocation(line: 1667, column: 33, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6732, file: !3, line: 1666, column: 5)
!6738 = !DILocation(line: 1668, column: 3, scope: !6737)
!6739 = !DILocation(line: 1668, column: 14, scope: !6737)
!6740 = !DILocation(line: 1667, column: 7, scope: !6737)
!6741 = !DILocation(line: 1669, column: 7, scope: !6737)
!6742 = !DILocation(line: 1670, column: 11, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 1670, column: 11)
!6744 = !DILocation(line: 1670, column: 22, scope: !6743)
!6745 = !DILocation(line: 1670, column: 11, scope: !6737)
!6746 = !DILocation(line: 1672, column: 4, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1671, column: 2)
!6748 = !DILocation(line: 1673, column: 25, scope: !6747)
!6749 = !DILocation(line: 1673, column: 36, scope: !6747)
!6750 = !DILocation(line: 1673, column: 4, scope: !6747)
!6751 = !DILocation(line: 1674, column: 28, scope: !6747)
!6752 = !DILocation(line: 1674, column: 4, scope: !6747)
!6753 = !DILocation(line: 1674, column: 15, scope: !6747)
!6754 = !DILocation(line: 1674, column: 26, scope: !6747)
!6755 = !DILocation(line: 1675, column: 2, scope: !6747)
!6756 = !DILocation(line: 1676, column: 7, scope: !6737)
!6757 = !DILocation(line: 1676, column: 18, scope: !6737)
!6758 = !DILocation(line: 1676, column: 29, scope: !6737)
!6759 = !DILocation(line: 1677, column: 7, scope: !6737)
!6760 = !DILocation(line: 1677, column: 19, scope: !6737)
!6761 = !DILocation(line: 1677, column: 25, scope: !6737)
!6762 = !DILocation(line: 1678, column: 7, scope: !6737)
!6763 = !DILocation(line: 1679, column: 7, scope: !6737)
!6764 = !DILocation(line: 1681, column: 23, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1681, column: 7)
!6766 = !DILocation(line: 1681, column: 7, scope: !6637)
!6767 = !DILocation(line: 1683, column: 36, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1682, column: 5)
!6769 = !DILocation(line: 1684, column: 6, scope: !6768)
!6770 = !DILocation(line: 1684, column: 18, scope: !6768)
!6771 = !DILocation(line: 1683, column: 7, scope: !6768)
!6772 = !DILocation(line: 1685, column: 7, scope: !6768)
!6773 = !DILocation(line: 1686, column: 11, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 1686, column: 11)
!6775 = !DILocation(line: 1686, column: 23, scope: !6774)
!6776 = !DILocation(line: 1686, column: 11, scope: !6768)
!6777 = !DILocation(line: 1688, column: 4, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 1687, column: 2)
!6779 = !DILocation(line: 1689, column: 25, scope: !6778)
!6780 = !DILocation(line: 1689, column: 37, scope: !6778)
!6781 = !DILocation(line: 1689, column: 4, scope: !6778)
!6782 = !DILocation(line: 1690, column: 29, scope: !6778)
!6783 = !DILocation(line: 1690, column: 4, scope: !6778)
!6784 = !DILocation(line: 1690, column: 16, scope: !6778)
!6785 = !DILocation(line: 1690, column: 27, scope: !6778)
!6786 = !DILocation(line: 1691, column: 2, scope: !6778)
!6787 = !DILocation(line: 1692, column: 7, scope: !6768)
!6788 = !DILocation(line: 1692, column: 19, scope: !6768)
!6789 = !DILocation(line: 1692, column: 30, scope: !6768)
!6790 = !DILocation(line: 1693, column: 7, scope: !6768)
!6791 = !DILocation(line: 1693, column: 18, scope: !6768)
!6792 = !DILocation(line: 1693, column: 24, scope: !6768)
!6793 = !DILocation(line: 1694, column: 7, scope: !6768)
!6794 = !DILocation(line: 1695, column: 7, scope: !6768)
!6795 = !DILocation(line: 1698, column: 29, scope: !6637)
!6796 = !DILocation(line: 1699, column: 6, scope: !6637)
!6797 = !DILocation(line: 1699, column: 17, scope: !6637)
!6798 = !DILocation(line: 1698, column: 3, scope: !6637)
!6799 = !DILocation(line: 1700, column: 10, scope: !6637)
!6800 = !DILocation(line: 1701, column: 7, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1701, column: 7)
!6802 = !DILocation(line: 1701, column: 19, scope: !6801)
!6803 = !DILocation(line: 1701, column: 7, scope: !6637)
!6804 = !DILocation(line: 1703, column: 7, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 1702, column: 5)
!6806 = !DILocation(line: 1704, column: 28, scope: !6805)
!6807 = !DILocation(line: 1704, column: 40, scope: !6805)
!6808 = !DILocation(line: 1704, column: 7, scope: !6805)
!6809 = !DILocation(line: 1705, column: 32, scope: !6805)
!6810 = !DILocation(line: 1705, column: 7, scope: !6805)
!6811 = !DILocation(line: 1705, column: 19, scope: !6805)
!6812 = !DILocation(line: 1705, column: 30, scope: !6805)
!6813 = !DILocation(line: 1706, column: 5, scope: !6805)
!6814 = !DILocation(line: 1707, column: 3, scope: !6637)
!6815 = !DILocation(line: 1707, column: 15, scope: !6637)
!6816 = !DILocation(line: 1707, column: 26, scope: !6637)
!6817 = !DILocation(line: 1708, column: 44, scope: !6637)
!6818 = !DILocation(line: 1708, column: 14, scope: !6637)
!6819 = !DILocation(line: 1708, column: 3, scope: !6637)
!6820 = !DILocation(line: 1710, column: 3, scope: !6637)
!6821 = !DILocation(line: 1710, column: 15, scope: !6637)
!6822 = !DILocation(line: 1711, column: 7, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1711, column: 7)
!6824 = !DILocation(line: 1711, column: 7, scope: !6637)
!6825 = !DILocation(line: 1712, column: 19, scope: !6823)
!6826 = !DILocation(line: 1712, column: 17, scope: !6823)
!6827 = !DILocation(line: 1712, column: 5, scope: !6823)
!6828 = !DILocation(line: 1713, column: 3, scope: !6637)
!6829 = !DILocation(line: 1715, column: 32, scope: !6637)
!6830 = !DILocation(line: 1715, column: 50, scope: !6637)
!6831 = !DILocation(line: 1715, column: 12, scope: !6637)
!6832 = !DILocation(line: 1716, column: 10, scope: !6637)
!6833 = !DILocation(line: 1716, column: 22, scope: !6637)
!6834 = !DILocation(line: 1717, column: 3, scope: !6637)
!6835 = !DILocation(line: 1718, column: 3, scope: !6637)
!6836 = !DILocation(line: 1718, column: 15, scope: !6637)
!6837 = !DILocation(line: 1718, column: 21, scope: !6637)
!6838 = !DILocation(line: 1719, column: 31, scope: !6637)
!6839 = !DILocation(line: 1719, column: 11, scope: !6637)
!6840 = !DILocation(line: 1719, column: 17, scope: !6637)
!6841 = !DILocation(line: 1720, column: 23, scope: !6637)
!6842 = !DILocation(line: 1720, column: 11, scope: !6637)
!6843 = !DILocation(line: 1720, column: 21, scope: !6637)
!6844 = !DILocation(line: 1721, column: 14, scope: !6637)
!6845 = !DILocation(line: 1722, column: 13, scope: !6637)
!6846 = !DILocation(line: 1722, column: 25, scope: !6637)
!6847 = !DILocation(line: 1723, column: 29, scope: !6637)
!6848 = !DILocation(line: 1723, column: 13, scope: !6637)
!6849 = !DILocation(line: 1723, column: 19, scope: !6637)
!6850 = !DILocation(line: 1724, column: 7, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1724, column: 7)
!6852 = !DILocation(line: 1724, column: 7, scope: !6637)
!6853 = !DILocation(line: 1725, column: 23, scope: !6851)
!6854 = !DILocation(line: 1725, column: 21, scope: !6851)
!6855 = !DILocation(line: 1725, column: 5, scope: !6851)
!6856 = !DILocation(line: 1726, column: 3, scope: !6637)
!6857 = !DILocation(line: 1728, column: 3, scope: !6637)
!6858 = !DILocation(line: 1730, column: 7, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1730, column: 7)
!6860 = !DILocation(line: 1730, column: 18, scope: !6859)
!6861 = !DILocation(line: 1730, column: 7, scope: !6637)
!6862 = !DILocation(line: 1732, column: 7, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 1731, column: 5)
!6864 = !DILocation(line: 1733, column: 28, scope: !6863)
!6865 = !DILocation(line: 1733, column: 39, scope: !6863)
!6866 = !DILocation(line: 1733, column: 7, scope: !6863)
!6867 = !DILocation(line: 1734, column: 31, scope: !6863)
!6868 = !DILocation(line: 1734, column: 7, scope: !6863)
!6869 = !DILocation(line: 1734, column: 18, scope: !6863)
!6870 = !DILocation(line: 1734, column: 29, scope: !6863)
!6871 = !DILocation(line: 1735, column: 5, scope: !6863)
!6872 = !DILocation(line: 1736, column: 3, scope: !6637)
!6873 = !DILocation(line: 1736, column: 14, scope: !6637)
!6874 = !DILocation(line: 1736, column: 25, scope: !6637)
!6875 = !DILocation(line: 1738, column: 3, scope: !6637)
!6876 = !DILocation(line: 1739, column: 1, scope: !6637)
!6877 = distinct !DISubprogram(name: "gimple_debug_bind_get_var", scope: !385, file: !385, line: 3268, type: !2781, scopeLine: 3269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6878)
!6878 = !{!6879}
!6879 = !DILocalVariable(name: "dbg", arg: 1, scope: !6877, file: !385, line: 3268, type: !894)
!6880 = !DILocation(line: 0, scope: !6877)
!6881 = !DILocation(line: 3274, column: 10, scope: !6877)
!6882 = !DILocation(line: 3274, column: 3, scope: !6877)
!6883 = distinct !DISubprogram(name: "gimple_debug_bind_has_value_p", scope: !385, file: !385, line: 3349, type: !6884, scopeLine: 3350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6886)
!6884 = !DISubroutineType(types: !6885)
!6885 = !{!822, !894}
!6886 = !{!6887}
!6887 = !DILocalVariable(name: "dbg", arg: 1, scope: !6883, file: !385, line: 3349, type: !894)
!6888 = !DILocation(line: 0, scope: !6883)
!6889 = !DILocation(line: 3355, column: 10, scope: !6883)
!6890 = !DILocation(line: 3355, column: 29, scope: !6883)
!6891 = !DILocation(line: 3355, column: 3, scope: !6883)
!6892 = distinct !DISubprogram(name: "gimple_debug_bind_get_value", scope: !385, file: !385, line: 3281, type: !2781, scopeLine: 3282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6893)
!6893 = !{!6894}
!6894 = !DILocalVariable(name: "dbg", arg: 1, scope: !6892, file: !385, line: 3281, type: !894)
!6895 = !DILocation(line: 0, scope: !6892)
!6896 = !DILocation(line: 3287, column: 10, scope: !6892)
!6897 = !DILocation(line: 3287, column: 3, scope: !6892)
!6898 = distinct !DISubprogram(name: "delink_stmt_imm_use", scope: !6108, file: !6108, line: 883, type: !6570, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6899)
!6899 = !{!6900, !6901, !6902}
!6900 = !DILocalVariable(name: "stmt", arg: 1, scope: !6898, file: !6108, line: 883, type: !894)
!6901 = !DILocalVariable(name: "iter", scope: !6898, file: !6108, line: 885, type: !4322)
!6902 = !DILocalVariable(name: "use_p", scope: !6898, file: !6108, line: 886, type: !2238)
!6903 = !DILocation(line: 0, scope: !6898)
!6904 = !DILocation(line: 885, column: 4, scope: !6898)
!6905 = !DILocation(line: 888, column: 8, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6898, file: !6108, line: 888, column: 8)
!6907 = !DILocation(line: 888, column: 8, scope: !6898)
!6908 = !DILocation(line: 889, column: 6, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6906, file: !6108, line: 889, column: 6)
!6910 = !DILocation(line: 0, scope: !6909)
!6911 = !DILocation(line: 889, column: 6, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6909, file: !6108, line: 889, column: 6)
!6913 = !DILocation(line: 890, column: 8, scope: !6912)
!6914 = distinct !{!6914, !6908, !6915}
!6915 = !DILocation(line: 890, column: 29, scope: !6909)
!6916 = !DILocation(line: 891, column: 1, scope: !6898)
!6917 = distinct !DISubprogram(name: "is_gimple_call", scope: !385, file: !385, line: 1870, type: !2904, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6918)
!6918 = !{!6919}
!6919 = !DILocalVariable(name: "gs", arg: 1, scope: !6917, file: !385, line: 1870, type: !2850)
!6920 = !DILocation(line: 0, scope: !6917)
!6921 = !DILocation(line: 1872, column: 10, scope: !6917)
!6922 = !DILocation(line: 1872, column: 27, scope: !6917)
!6923 = !DILocation(line: 1872, column: 3, scope: !6917)
!6924 = distinct !DISubprogram(name: "gimple_call_tail_p", scope: !385, file: !385, line: 2071, type: !6884, scopeLine: 2072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6925)
!6925 = !{!6926}
!6926 = !DILocalVariable(name: "s", arg: 1, scope: !6924, file: !385, line: 2071, type: !894)
!6927 = !DILocation(line: 0, scope: !6924)
!6928 = !DILocation(line: 2074, column: 21, scope: !6924)
!6929 = !DILocation(line: 2074, column: 10, scope: !6924)
!6930 = !DILocation(line: 2074, column: 3, scope: !6924)
!6931 = distinct !DISubprogram(name: "expand_gimple_tailcall", scope: !3, file: !3, line: 2020, type: !6932, scopeLine: 2021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6934)
!6932 = !DISubroutineType(types: !6933)
!6933 = !{!1435, !1435, !894, !821}
!6934 = !{!6935, !6936, !6937, !6938, !6939, !6940, !6941, !6942, !6943, !6944}
!6935 = !DILocalVariable(name: "bb", arg: 1, scope: !6931, file: !3, line: 2020, type: !1435)
!6936 = !DILocalVariable(name: "stmt", arg: 2, scope: !6931, file: !3, line: 2020, type: !894)
!6937 = !DILocalVariable(name: "can_fallthru", arg: 3, scope: !6931, file: !3, line: 2020, type: !821)
!6938 = !DILocalVariable(name: "last2", scope: !6931, file: !3, line: 2022, type: !900)
!6939 = !DILocalVariable(name: "last", scope: !6931, file: !3, line: 2022, type: !900)
!6940 = !DILocalVariable(name: "e", scope: !6931, file: !3, line: 2023, type: !873)
!6941 = !DILocalVariable(name: "ei", scope: !6931, file: !3, line: 2024, type: !3248)
!6942 = !DILocalVariable(name: "probability", scope: !6931, file: !3, line: 2025, type: !823)
!6943 = !DILocalVariable(name: "count", scope: !6931, file: !3, line: 2026, type: !2032)
!6944 = !DILabel(scope: !6931, name: "found", file: !3, line: 2039)
!6945 = !DILocation(line: 0, scope: !6931)
!6946 = !DILocation(line: 2024, column: 3, scope: !6931)
!6947 = !DILocation(line: 2028, column: 18, scope: !6931)
!6948 = !DILocation(line: 2030, column: 8, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2030, column: 3)
!6950 = !DILocation(line: 0, scope: !6949)
!6951 = !DILocation(line: 2030, column: 3, scope: !6949)
!6952 = !DILocation(line: 2031, column: 9, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 2031, column: 9)
!6954 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 2030, column: 3)
!6955 = !DILocation(line: 2031, column: 23, scope: !6953)
!6956 = !DILocation(line: 2031, column: 26, scope: !6953)
!6957 = !DILocation(line: 2031, column: 9, scope: !6954)
!6958 = !DILocation(line: 2030, column: 3, scope: !6954)
!6959 = distinct !{!6959, !6951, !6960}
!6960 = !DILocation(line: 2032, column: 12, scope: !6949)
!6961 = !DILocation(line: 2034, column: 3, scope: !6931)
!6962 = !DILocation(line: 2036, column: 17, scope: !6931)
!6963 = !DILocation(line: 2037, column: 3, scope: !6931)
!6964 = !DILocation(line: 2039, column: 2, scope: !6931)
!6965 = !DILocation(line: 2042, column: 3, scope: !6931)
!6966 = !DILocation(line: 2054, column: 13, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2054, column: 3)
!6968 = !DILocation(line: 0, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 2054, column: 3)
!6970 = !DILocation(line: 2054, column: 8, scope: !6967)
!6971 = !DILocation(line: 2051, column: 15, scope: !6931)
!6972 = !DILocation(line: 2052, column: 9, scope: !6931)
!6973 = !DILocation(line: 2054, column: 40, scope: !6969)
!6974 = !DILocation(line: 2054, column: 3, scope: !6967)
!6975 = !DILocation(line: 2056, column: 16, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 2056, column: 11)
!6977 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 2055, column: 5)
!6978 = !DILocation(line: 2056, column: 22, scope: !6976)
!6979 = !DILocation(line: 2056, column: 11, scope: !6977)
!6980 = !DILocation(line: 2058, column: 11, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 2058, column: 8)
!6982 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 2057, column: 2)
!6983 = !DILocation(line: 2058, column: 19, scope: !6981)
!6984 = !DILocation(line: 2058, column: 16, scope: !6981)
!6985 = !DILocation(line: 2058, column: 8, scope: !6982)
!6986 = !DILocation(line: 2060, column: 29, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 2059, column: 6)
!6988 = !DILocation(line: 2060, column: 17, scope: !6987)
!6989 = !DILocation(line: 2060, column: 23, scope: !6987)
!6990 = !DILocation(line: 2061, column: 30, scope: !6987)
!6991 = !DILocation(line: 2061, column: 11, scope: !6987)
!6992 = !DILocation(line: 2061, column: 17, scope: !6987)
!6993 = !DILocation(line: 2061, column: 27, scope: !6987)
!6994 = !DILocation(line: 2062, column: 15, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 2062, column: 12)
!6996 = !DILocation(line: 2062, column: 21, scope: !6995)
!6997 = !DILocation(line: 2062, column: 27, scope: !6995)
!6998 = !DILocation(line: 2062, column: 12, scope: !6987)
!6999 = !DILocation(line: 2063, column: 18, scope: !6995)
!7000 = !DILocation(line: 2064, column: 15, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 2064, column: 12)
!7002 = !DILocation(line: 2063, column: 3, scope: !6995)
!7003 = !DILocation(line: 2064, column: 21, scope: !7001)
!7004 = !DILocation(line: 2064, column: 31, scope: !7001)
!7005 = !DILocation(line: 2064, column: 12, scope: !6987)
!7006 = !DILocation(line: 2065, column: 22, scope: !7001)
!7007 = !DILocation(line: 2065, column: 3, scope: !7001)
!7008 = !DILocation(line: 2067, column: 16, scope: !6982)
!7009 = !DILocation(line: 2067, column: 10, scope: !6982)
!7010 = !DILocation(line: 2068, column: 22, scope: !6982)
!7011 = !DILocation(line: 2068, column: 16, scope: !6982)
!7012 = !DILocation(line: 2069, column: 4, scope: !6982)
!7013 = !DILocation(line: 2070, column: 2, scope: !6982)
!7014 = !DILocation(line: 2072, column: 2, scope: !6976)
!7015 = !DILocation(line: 2054, column: 3, scope: !6969)
!7016 = distinct !{!7016, !6974, !7017}
!7017 = !DILocation(line: 2073, column: 5, scope: !6967)
!7018 = !DILocation(line: 2078, column: 10, scope: !6931)
!7019 = !DILocation(line: 2079, column: 3, scope: !6931)
!7020 = !DILocation(line: 2081, column: 17, scope: !6931)
!7021 = !DILocation(line: 2082, column: 3, scope: !6931)
!7022 = !DILocation(line: 2082, column: 10, scope: !6931)
!7023 = !DILocation(line: 2086, column: 11, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2086, column: 11)
!7025 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2083, column: 5)
!7026 = !DILocation(line: 2086, column: 11, scope: !7025)
!7027 = !DILocation(line: 2088, column: 18, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 2087, column: 2)
!7029 = !DILocation(line: 2089, column: 4, scope: !7028)
!7030 = !DILocation(line: 2091, column: 7, scope: !7025)
!7031 = distinct !{!7031, !7021, !7032}
!7032 = !DILocation(line: 2092, column: 5, scope: !6931)
!7033 = !DILocation(line: 2094, column: 22, scope: !6931)
!7034 = !DILocation(line: 2094, column: 7, scope: !6931)
!7035 = !DILocation(line: 2095, column: 6, scope: !6931)
!7036 = !DILocation(line: 2095, column: 18, scope: !6931)
!7037 = !DILocation(line: 2096, column: 6, scope: !6931)
!7038 = !DILocation(line: 2096, column: 12, scope: !6931)
!7039 = !DILocation(line: 2097, column: 3, scope: !6931)
!7040 = !DILocation(line: 2097, column: 15, scope: !6931)
!7041 = !DILocation(line: 2098, column: 3, scope: !6931)
!7042 = !DILocation(line: 2100, column: 7, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2100, column: 7)
!7044 = !DILocation(line: 2100, column: 7, scope: !6931)
!7045 = !DILocation(line: 2102, column: 50, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 2101, column: 5)
!7047 = !DILocation(line: 2102, column: 12, scope: !7046)
!7048 = !DILocation(line: 2104, column: 14, scope: !7046)
!7049 = !DILocation(line: 2105, column: 11, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 2105, column: 11)
!7051 = !DILocation(line: 2105, column: 11, scope: !7046)
!7052 = !DILocation(line: 2106, column: 16, scope: !7050)
!7053 = !DILocation(line: 2106, column: 14, scope: !7050)
!7054 = !DILocation(line: 2106, column: 2, scope: !7050)
!7055 = !DILocation(line: 2109, column: 3, scope: !6931)
!7056 = !DILocation(line: 2111, column: 3, scope: !6931)
!7057 = !DILocation(line: 2112, column: 1, scope: !6931)
!7058 = distinct !DISubprogram(name: "single_ssa_def_operand", scope: !6108, file: !6108, line: 840, type: !7059, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7061)
!7059 = !DISubroutineType(types: !7060)
!7060 = !{!2241, !894, !823}
!7061 = !{!7062, !7063, !7064, !7065}
!7062 = !DILocalVariable(name: "stmt", arg: 1, scope: !7058, file: !6108, line: 840, type: !894)
!7063 = !DILocalVariable(name: "flags", arg: 2, scope: !7058, file: !6108, line: 840, type: !823)
!7064 = !DILocalVariable(name: "var", scope: !7058, file: !6108, line: 842, type: !2241)
!7065 = !DILocalVariable(name: "iter", scope: !7058, file: !6108, line: 843, type: !4322)
!7066 = !DILocation(line: 0, scope: !7058)
!7067 = !DILocation(line: 843, column: 3, scope: !7058)
!7068 = !DILocation(line: 845, column: 9, scope: !7058)
!7069 = !DILocation(line: 846, column: 7, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7058, file: !6108, line: 846, column: 7)
!7071 = !DILocation(line: 846, column: 7, scope: !7058)
!7072 = !DILocation(line: 848, column: 3, scope: !7058)
!7073 = !DILocation(line: 849, column: 7, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7058, file: !6108, line: 849, column: 7)
!7075 = !DILocation(line: 852, column: 1, scope: !7058)
!7076 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !6108, file: !6108, line: 434, type: !7077, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7079)
!7077 = !DISubroutineType(types: !7078)
!7078 = !{!1014, !2241}
!7079 = !{!7080}
!7080 = !DILocalVariable(name: "def", arg: 1, scope: !7076, file: !6108, line: 434, type: !2241)
!7081 = !DILocation(line: 0, scope: !7076)
!7082 = !DILocation(line: 436, column: 10, scope: !7076)
!7083 = !DILocation(line: 436, column: 3, scope: !7076)
!7084 = distinct !DISubprogram(name: "label_rtx_for_bb", scope: !3, file: !3, line: 1506, type: !7085, scopeLine: 1507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7087)
!7085 = !DISubroutineType(types: !7086)
!7086 = !{!900, !1435}
!7087 = !{!7088, !7089, !7090, !7091, !7092}
!7088 = !DILocalVariable(name: "bb", arg: 1, scope: !7084, file: !3, line: 1506, type: !1435)
!7089 = !DILocalVariable(name: "gsi", scope: !7084, file: !3, line: 1508, type: !3942)
!7090 = !DILocalVariable(name: "lab", scope: !7084, file: !3, line: 1509, type: !1014)
!7091 = !DILocalVariable(name: "lab_stmt", scope: !7084, file: !3, line: 1510, type: !894)
!7092 = !DILocalVariable(name: "elt", scope: !7084, file: !3, line: 1511, type: !1373)
!7093 = !DILocation(line: 0, scope: !7084)
!7094 = !DILocation(line: 1508, column: 3, scope: !7084)
!7095 = !DILocation(line: 1513, column: 11, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1513, column: 7)
!7097 = !DILocation(line: 1513, column: 17, scope: !7096)
!7098 = !DILocation(line: 1513, column: 7, scope: !7084)
!7099 = !DILocation(line: 1514, column: 12, scope: !7096)
!7100 = !DILocation(line: 1514, column: 5, scope: !7096)
!7101 = !DILocation(line: 1516, column: 31, scope: !7084)
!7102 = !DILocation(line: 1516, column: 47, scope: !7084)
!7103 = !DILocation(line: 1516, column: 9, scope: !7084)
!7104 = !DILocation(line: 1517, column: 7, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1517, column: 7)
!7106 = !DILocation(line: 1517, column: 7, scope: !7084)
!7107 = !DILocation(line: 1518, column: 18, scope: !7105)
!7108 = !DILocation(line: 1518, column: 5, scope: !7105)
!7109 = !DILocation(line: 1522, column: 14, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1522, column: 3)
!7111 = !DILocation(line: 1522, column: 34, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 1522, column: 3)
!7113 = !DILocation(line: 1522, column: 33, scope: !7112)
!7114 = !DILocation(line: 1522, column: 3, scope: !7110)
!7115 = !DILocation(line: 1524, column: 18, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 1523, column: 5)
!7117 = !DILocation(line: 1525, column: 11, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 1525, column: 11)
!7119 = !DILocation(line: 1525, column: 34, scope: !7118)
!7120 = !DILocation(line: 1525, column: 11, scope: !7116)
!7121 = !DILocation(line: 1528, column: 13, scope: !7116)
!7122 = !DILocation(line: 1529, column: 11, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 1529, column: 11)
!7124 = !DILocation(line: 1529, column: 11, scope: !7116)
!7125 = !DILocation(line: 1532, column: 14, scope: !7116)
!7126 = !DILocation(line: 1532, column: 7, scope: !7116)
!7127 = !DILocation(line: 1535, column: 29, scope: !7084)
!7128 = !DILocation(line: 1535, column: 9, scope: !7084)
!7129 = !DILocation(line: 1536, column: 10, scope: !7084)
!7130 = !DILocation(line: 1536, column: 8, scope: !7084)
!7131 = !DILocation(line: 1537, column: 3, scope: !7084)
!7132 = !DILocation(line: 1538, column: 1, scope: !7084)
!7133 = distinct !DISubprogram(name: "gimple_seq_last", scope: !385, file: !385, line: 178, type: !5141, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7134)
!7134 = !{!7135}
!7135 = !DILocalVariable(name: "s", arg: 1, scope: !7133, file: !385, line: 178, type: !5143)
!7136 = !DILocation(line: 0, scope: !7133)
!7137 = !DILocation(line: 180, column: 10, scope: !7133)
!7138 = !DILocation(line: 180, column: 17, scope: !7133)
!7139 = !DILocation(line: 180, column: 3, scope: !7133)
!7140 = distinct !DISubprogram(name: "gimple_bb", scope: !385, file: !385, line: 1112, type: !7141, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7143)
!7141 = !DISubroutineType(types: !7142)
!7142 = !{!857, !2850}
!7143 = !{!7144}
!7144 = !DILocalVariable(name: "g", arg: 1, scope: !7140, file: !385, line: 1112, type: !2850)
!7145 = !DILocation(line: 0, scope: !7140)
!7146 = !DILocation(line: 1114, column: 20, scope: !7140)
!7147 = !DILocation(line: 1114, column: 3, scope: !7140)
!7148 = distinct !DISubprogram(name: "expand_gimple_stmt_1", scope: !3, file: !3, line: 1801, type: !6570, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7149)
!7149 = !{!7150, !7151, !7152, !7156, !7158, !7161, !7163, !7164, !7165, !7174, !7175}
!7150 = !DILocalVariable(name: "stmt", arg: 1, scope: !7148, file: !3, line: 1801, type: !894)
!7151 = !DILocalVariable(name: "op0", scope: !7148, file: !3, line: 1803, type: !1014)
!7152 = !DILocalVariable(name: "result", scope: !7153, file: !3, line: 1834, type: !1014)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 1833, column: 2)
!7154 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1832, column: 11)
!7155 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1805, column: 5)
!7156 = !DILocalVariable(name: "lhs", scope: !7157, file: !3, line: 1861, type: !1014)
!7157 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1860, column: 7)
!7158 = !DILocalVariable(name: "rhs", scope: !7159, file: !3, line: 1871, type: !1014)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 1870, column: 4)
!7160 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1867, column: 6)
!7161 = !DILocalVariable(name: "target", scope: !7162, file: !3, line: 1881, type: !900)
!7162 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 1880, column: 4)
!7163 = !DILocalVariable(name: "temp", scope: !7162, file: !3, line: 1881, type: !900)
!7164 = !DILocalVariable(name: "nontemporal", scope: !7162, file: !3, line: 1882, type: !822)
!7165 = !DILocalVariable(name: "ops", scope: !7162, file: !3, line: 1883, type: !7166)
!7166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "separate_ops", file: !789, line: 273, size: 384, elements: !7167)
!7167 = !{!7168, !7169, !7170, !7171, !7172, !7173}
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !7166, file: !789, line: 275, baseType: !134, size: 32)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7166, file: !789, line: 276, baseType: !1014, size: 64, offset: 64)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "op0", scope: !7166, file: !789, line: 277, baseType: !1014, size: 64, offset: 128)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "op1", scope: !7166, file: !789, line: 277, baseType: !1014, size: 64, offset: 192)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "op2", scope: !7166, file: !789, line: 277, baseType: !1014, size: 64, offset: 256)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !7166, file: !789, line: 278, baseType: !853, size: 32, offset: 320)
!7174 = !DILocalVariable(name: "promoted", scope: !7162, file: !3, line: 1884, type: !822)
!7175 = !DILocalVariable(name: "unsignedp", scope: !7176, file: !3, line: 1916, type: !823)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 1915, column: 8)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 1914, column: 15)
!7178 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1912, column: 10)
!7179 = !DILocation(line: 0, scope: !7148)
!7180 = !DILocation(line: 1804, column: 11, scope: !7148)
!7181 = !DILocation(line: 1804, column: 3, scope: !7148)
!7182 = !DILocation(line: 1807, column: 13, scope: !7155)
!7183 = !DILocation(line: 1808, column: 11, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1808, column: 11)
!7185 = !DILocation(line: 1808, column: 27, scope: !7184)
!7186 = !DILocation(line: 1808, column: 11, scope: !7155)
!7187 = !DILocation(line: 1809, column: 2, scope: !7184)
!7188 = !DILocation(line: 1811, column: 2, scope: !7184)
!7189 = !DILocation(line: 1814, column: 21, scope: !7155)
!7190 = !DILocation(line: 1814, column: 7, scope: !7155)
!7191 = !DILocation(line: 1815, column: 7, scope: !7155)
!7192 = !DILocation(line: 1820, column: 7, scope: !7155)
!7193 = !DILocation(line: 1821, column: 7, scope: !7155)
!7194 = !DILocation(line: 1823, column: 7, scope: !7155)
!7195 = !DILocation(line: 1824, column: 7, scope: !7155)
!7196 = !DILocation(line: 1826, column: 7, scope: !7155)
!7197 = !DILocation(line: 1827, column: 7, scope: !7155)
!7198 = !DILocation(line: 1830, column: 13, scope: !7155)
!7199 = !DILocation(line: 1832, column: 11, scope: !7154)
!7200 = !DILocation(line: 1832, column: 25, scope: !7154)
!7201 = !DILocation(line: 1832, column: 22, scope: !7154)
!7202 = !DILocation(line: 1832, column: 15, scope: !7154)
!7203 = !DILocation(line: 1834, column: 18, scope: !7153)
!7204 = !DILocation(line: 0, scope: !7153)
!7205 = !DILocation(line: 1838, column: 12, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 1838, column: 8)
!7207 = !DILocation(line: 1838, column: 8, scope: !7153)
!7208 = !DILocation(line: 1841, column: 8, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 1839, column: 6)
!7210 = !DILocation(line: 1849, column: 14, scope: !7209)
!7211 = !DILocation(line: 1851, column: 6, scope: !7209)
!7212 = !DILocation(line: 0, scope: !7155)
!7213 = !DILocation(line: 1853, column: 12, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1853, column: 11)
!7215 = !DILocation(line: 1853, column: 11, scope: !7155)
!7216 = !DILocation(line: 1854, column: 2, scope: !7214)
!7217 = !DILocation(line: 1856, column: 2, scope: !7214)
!7218 = !DILocation(line: 1861, column: 13, scope: !7157)
!7219 = !DILocation(line: 0, scope: !7157)
!7220 = !DILocation(line: 1867, column: 6, scope: !7160)
!7221 = !DILocation(line: 1867, column: 22, scope: !7160)
!7222 = !DILocation(line: 1868, column: 6, scope: !7160)
!7223 = !DILocation(line: 1868, column: 31, scope: !7160)
!7224 = !DILocation(line: 1868, column: 9, scope: !7160)
!7225 = !DILocation(line: 1869, column: 9, scope: !7160)
!7226 = !DILocation(line: 1867, column: 6, scope: !7157)
!7227 = !DILocation(line: 1871, column: 17, scope: !7159)
!7228 = !DILocation(line: 0, scope: !7159)
!7229 = !DILocation(line: 1872, column: 6, scope: !7159)
!7230 = !DILocation(line: 1874, column: 10, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 1874, column: 10)
!7232 = !DILocation(line: 1874, column: 40, scope: !7231)
!7233 = !DILocation(line: 1874, column: 37, scope: !7231)
!7234 = !DILocation(line: 1874, column: 10, scope: !7159)
!7235 = !DILocation(line: 1875, column: 8, scope: !7231)
!7236 = !DILocation(line: 1877, column: 11, scope: !7159)
!7237 = !DILocation(line: 1876, column: 6, scope: !7159)
!7238 = !DILocation(line: 1878, column: 4, scope: !7159)
!7239 = !DILocation(line: 1882, column: 25, scope: !7162)
!7240 = !DILocation(line: 0, scope: !7162)
!7241 = !DILocation(line: 1883, column: 6, scope: !7162)
!7242 = !DILocation(line: 1886, column: 15, scope: !7162)
!7243 = !DILocation(line: 1887, column: 10, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1887, column: 10)
!7245 = !DILocation(line: 1887, column: 28, scope: !7244)
!7246 = !DILocation(line: 1887, column: 38, scope: !7244)
!7247 = !DILocation(line: 1887, column: 10, scope: !7162)
!7248 = !DILocation(line: 1890, column: 17, scope: !7162)
!7249 = !DILocation(line: 1890, column: 10, scope: !7162)
!7250 = !DILocation(line: 1890, column: 15, scope: !7162)
!7251 = !DILocation(line: 1891, column: 17, scope: !7162)
!7252 = !DILocation(line: 1891, column: 10, scope: !7162)
!7253 = !DILocation(line: 1891, column: 15, scope: !7162)
!7254 = !DILocation(line: 1892, column: 36, scope: !7162)
!7255 = !DILocation(line: 1892, column: 14, scope: !7162)
!7256 = !DILocation(line: 1892, column: 6, scope: !7162)
!7257 = !DILocation(line: 1895, column: 15, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1893, column: 8)
!7259 = !DILocation(line: 1895, column: 9, scope: !7258)
!7260 = !DILocation(line: 1895, column: 13, scope: !7258)
!7261 = !DILocation(line: 1895, column: 5, scope: !7258)
!7262 = !DILocation(line: 1898, column: 15, scope: !7258)
!7263 = !DILocation(line: 1898, column: 9, scope: !7258)
!7264 = !DILocation(line: 1898, column: 13, scope: !7258)
!7265 = !DILocation(line: 1899, column: 5, scope: !7258)
!7266 = !DILocation(line: 1901, column: 5, scope: !7258)
!7267 = !DILocation(line: 1902, column: 8, scope: !7258)
!7268 = !DILocation(line: 1903, column: 21, scope: !7162)
!7269 = !DILocation(line: 1903, column: 10, scope: !7162)
!7270 = !DILocation(line: 1903, column: 19, scope: !7162)
!7271 = !DILocation(line: 1908, column: 25, scope: !7162)
!7272 = !DILocation(line: 1909, column: 45, scope: !7162)
!7273 = !DILocation(line: 1909, column: 13, scope: !7162)
!7274 = !DILocation(line: 1912, column: 15, scope: !7178)
!7275 = !DILocation(line: 1912, column: 10, scope: !7162)
!7276 = !DILocation(line: 1914, column: 15, scope: !7177)
!7277 = !DILocation(line: 1914, column: 15, scope: !7178)
!7278 = !DILocation(line: 1916, column: 19, scope: !7176)
!7279 = !DILocation(line: 0, scope: !7176)
!7280 = !DILocation(line: 1919, column: 7, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 1919, column: 7)
!7282 = !DILocation(line: 1919, column: 25, scope: !7281)
!7283 = !DILocation(line: 1919, column: 28, scope: !7281)
!7284 = !DILocation(line: 1919, column: 44, scope: !7281)
!7285 = !DILocation(line: 1919, column: 7, scope: !7176)
!7286 = !DILocation(line: 1921, column: 29, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 1920, column: 5)
!7288 = !DILocation(line: 1922, column: 8, scope: !7287)
!7289 = !DILocation(line: 1921, column: 14, scope: !7287)
!7290 = !DILocation(line: 1924, column: 29, scope: !7287)
!7291 = !DILocation(line: 1925, column: 8, scope: !7287)
!7292 = !DILocation(line: 1924, column: 14, scope: !7287)
!7293 = !DILocation(line: 1926, column: 5, scope: !7287)
!7294 = !DILocation(line: 1928, column: 17, scope: !7176)
!7295 = !DILocation(line: 1928, column: 3, scope: !7176)
!7296 = !DILocation(line: 1929, column: 8, scope: !7176)
!7297 = !DILocation(line: 1930, column: 15, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 1930, column: 15)
!7299 = !DILocation(line: 1930, column: 27, scope: !7298)
!7300 = !DILocation(line: 1930, column: 30, scope: !7298)
!7301 = !DILocation(line: 1930, column: 15, scope: !7177)
!7302 = !DILocation(line: 1934, column: 10, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 1933, column: 8)
!7304 = !DILocation(line: 1935, column: 12, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 1935, column: 7)
!7306 = !DILocation(line: 1935, column: 7, scope: !7303)
!7307 = !DILocation(line: 1936, column: 5, scope: !7305)
!7308 = !DILocation(line: 1938, column: 4, scope: !7160)
!7309 = !DILocation(line: 1943, column: 7, scope: !7155)
!7310 = !DILocation(line: 1944, column: 5, scope: !7155)
!7311 = !DILocation(line: 1945, column: 1, scope: !7148)
!7312 = distinct !DISubprogram(name: "gimple_goto_dest", scope: !385, file: !385, line: 2465, type: !2878, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7313)
!7313 = !{!7314}
!7314 = !DILocalVariable(name: "gs", arg: 1, scope: !7312, file: !385, line: 2465, type: !2850)
!7315 = !DILocation(line: 0, scope: !7312)
!7316 = !DILocation(line: 2468, column: 10, scope: !7312)
!7317 = !DILocation(line: 2468, column: 3, scope: !7312)
!7318 = distinct !DISubprogram(name: "gimple_label_label", scope: !385, file: !385, line: 2444, type: !2878, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7319)
!7319 = !{!7320}
!7320 = !DILocalVariable(name: "gs", arg: 1, scope: !7318, file: !385, line: 2444, type: !2850)
!7321 = !DILocation(line: 0, scope: !7318)
!7322 = !DILocation(line: 2447, column: 10, scope: !7318)
!7323 = !DILocation(line: 2447, column: 3, scope: !7318)
!7324 = distinct !DISubprogram(name: "expand_call_stmt", scope: !3, file: !3, line: 1745, type: !6570, scopeLine: 1746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7325)
!7325 = !{!7326, !7327, !7328, !7329, !7330, !7331, !7332, !7336}
!7326 = !DILocalVariable(name: "stmt", arg: 1, scope: !7324, file: !3, line: 1745, type: !894)
!7327 = !DILocalVariable(name: "exp", scope: !7324, file: !3, line: 1747, type: !1014)
!7328 = !DILocalVariable(name: "lhs", scope: !7324, file: !3, line: 1748, type: !1014)
!7329 = !DILocalVariable(name: "i", scope: !7324, file: !3, line: 1749, type: !833)
!7330 = !DILocalVariable(name: "builtin_p", scope: !7324, file: !3, line: 1750, type: !822)
!7331 = !DILocalVariable(name: "decl", scope: !7324, file: !3, line: 1751, type: !1014)
!7332 = !DILocalVariable(name: "arg", scope: !7333, file: !3, line: 1764, type: !1014)
!7333 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1763, column: 5)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 1762, column: 3)
!7335 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 1762, column: 3)
!7336 = !DILocalVariable(name: "def", scope: !7333, file: !3, line: 1765, type: !894)
!7337 = !DILocation(line: 0, scope: !7324)
!7338 = !DILocation(line: 1748, column: 14, scope: !7324)
!7339 = !DILocation(line: 1753, column: 9, scope: !7324)
!7340 = !DILocation(line: 1755, column: 24, scope: !7324)
!7341 = !DILocation(line: 1755, column: 3, scope: !7324)
!7342 = !DILocation(line: 1755, column: 22, scope: !7324)
!7343 = !DILocation(line: 1756, column: 10, scope: !7324)
!7344 = !DILocation(line: 1757, column: 15, scope: !7324)
!7345 = !DILocation(line: 1757, column: 20, scope: !7324)
!7346 = !DILocation(line: 1757, column: 23, scope: !7324)
!7347 = !DILocation(line: 1759, column: 21, scope: !7324)
!7348 = !DILocation(line: 1759, column: 3, scope: !7324)
!7349 = !DILocation(line: 1759, column: 19, scope: !7324)
!7350 = !DILocation(line: 1760, column: 34, scope: !7324)
!7351 = !DILocation(line: 1760, column: 3, scope: !7324)
!7352 = !DILocation(line: 1760, column: 32, scope: !7324)
!7353 = !DILocation(line: 1762, column: 8, scope: !7335)
!7354 = !DILocation(line: 0, scope: !7335)
!7355 = !DILocation(line: 1762, column: 19, scope: !7334)
!7356 = !DILocation(line: 1762, column: 17, scope: !7334)
!7357 = !DILocation(line: 1762, column: 3, scope: !7335)
!7358 = !DILocation(line: 1764, column: 41, scope: !7333)
!7359 = !DILocation(line: 1764, column: 18, scope: !7333)
!7360 = !DILocation(line: 0, scope: !7333)
!7361 = !DILocation(line: 1773, column: 7, scope: !7333)
!7362 = !DILocation(line: 1773, column: 30, scope: !7333)
!7363 = !DILocation(line: 1762, column: 49, scope: !7334)
!7364 = !DILocation(line: 1762, column: 3, scope: !7334)
!7365 = distinct !{!7365, !7357, !7366}
!7366 = !DILocation(line: 1774, column: 5, scope: !7335)
!7367 = !DILocation(line: 1776, column: 7, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 1776, column: 7)
!7369 = !DILocation(line: 1769, column: 7, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 1768, column: 11)
!7371 = !DILocation(line: 1769, column: 23, scope: !7370)
!7372 = !DILocation(line: 1770, column: 4, scope: !7370)
!7373 = !DILocation(line: 1770, column: 14, scope: !7370)
!7374 = !DILocation(line: 1770, column: 12, scope: !7370)
!7375 = !DILocation(line: 1771, column: 4, scope: !7370)
!7376 = !DILocation(line: 1771, column: 7, scope: !7370)
!7377 = !DILocation(line: 1771, column: 36, scope: !7370)
!7378 = !DILocation(line: 1768, column: 11, scope: !7333)
!7379 = !DILocation(line: 1772, column: 8, scope: !7370)
!7380 = !DILocation(line: 1772, column: 2, scope: !7370)
!7381 = !DILocation(line: 1776, column: 7, scope: !7324)
!7382 = !DILocation(line: 1777, column: 5, scope: !7368)
!7383 = !DILocation(line: 1777, column: 29, scope: !7368)
!7384 = !DILocation(line: 1779, column: 7, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 1779, column: 7)
!7386 = !DILocation(line: 1779, column: 7, scope: !7324)
!7387 = !DILocation(line: 1780, column: 5, scope: !7385)
!7388 = !DILocation(line: 1780, column: 24, scope: !7385)
!7389 = !DILocation(line: 1782, column: 30, scope: !7324)
!7390 = !DILocation(line: 1782, column: 3, scope: !7324)
!7391 = !DILocation(line: 1782, column: 28, scope: !7324)
!7392 = !DILocation(line: 1783, column: 37, scope: !7324)
!7393 = !DILocation(line: 1783, column: 35, scope: !7324)
!7394 = !DILocation(line: 1784, column: 29, scope: !7324)
!7395 = !DILocation(line: 1784, column: 27, scope: !7324)
!7396 = !DILocation(line: 1785, column: 32, scope: !7324)
!7397 = !DILocation(line: 1785, column: 30, scope: !7324)
!7398 = !DILocation(line: 1786, column: 33, scope: !7324)
!7399 = !DILocation(line: 1786, column: 31, scope: !7324)
!7400 = !DILocation(line: 1787, column: 3, scope: !7324)
!7401 = !DILocation(line: 1788, column: 22, scope: !7324)
!7402 = !DILocation(line: 1788, column: 3, scope: !7324)
!7403 = !DILocation(line: 1788, column: 20, scope: !7324)
!7404 = !DILocation(line: 1790, column: 7, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 1790, column: 7)
!7406 = !DILocation(line: 1790, column: 7, scope: !7324)
!7407 = !DILocation(line: 1791, column: 5, scope: !7405)
!7408 = !DILocation(line: 1793, column: 30, scope: !7405)
!7409 = !DILocation(line: 1793, column: 5, scope: !7405)
!7410 = !DILocation(line: 1794, column: 1, scope: !7324)
!7411 = distinct !DISubprogram(name: "gimple_assign_nontemporal_move_p", scope: !385, file: !385, line: 1794, type: !2904, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7412)
!7412 = !{!7413}
!7413 = !DILocalVariable(name: "gs", arg: 1, scope: !7411, file: !385, line: 1794, type: !2850)
!7414 = !DILocation(line: 0, scope: !7411)
!7415 = !DILocation(line: 1797, column: 21, scope: !7411)
!7416 = !DILocation(line: 1797, column: 10, scope: !7411)
!7417 = !DILocation(line: 1797, column: 3, scope: !7411)
!7418 = distinct !DISubprogram(name: "expand_expr", scope: !789, file: !789, line: 555, type: !7419, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7421)
!7419 = !DISubroutineType(types: !7420)
!7420 = !{!900, !1014, !900, !5, !788}
!7421 = !{!7422, !7423, !7424, !7425}
!7422 = !DILocalVariable(name: "exp", arg: 1, scope: !7418, file: !789, line: 555, type: !1014)
!7423 = !DILocalVariable(name: "target", arg: 2, scope: !7418, file: !789, line: 555, type: !900)
!7424 = !DILocalVariable(name: "mode", arg: 3, scope: !7418, file: !789, line: 555, type: !5)
!7425 = !DILocalVariable(name: "modifier", arg: 4, scope: !7418, file: !789, line: 556, type: !788)
!7426 = !DILocation(line: 0, scope: !7418)
!7427 = !DILocation(line: 558, column: 10, scope: !7418)
!7428 = !DILocation(line: 558, column: 3, scope: !7418)
!7429 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !385, file: !385, line: 1878, type: !2878, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7430)
!7430 = !{!7431}
!7431 = !DILocalVariable(name: "gs", arg: 1, scope: !7429, file: !385, line: 1878, type: !2850)
!7432 = !DILocation(line: 0, scope: !7429)
!7433 = !DILocation(line: 1881, column: 10, scope: !7429)
!7434 = !DILocation(line: 1881, column: 3, scope: !7429)
!7435 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !385, file: !385, line: 2013, type: !3602, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7436)
!7436 = !{!7437, !7438}
!7437 = !DILocalVariable(name: "gs", arg: 1, scope: !7435, file: !385, line: 2013, type: !2850)
!7438 = !DILocalVariable(name: "num_ops", scope: !7435, file: !385, line: 2015, type: !7)
!7439 = !DILocation(line: 0, scope: !7435)
!7440 = !DILocation(line: 2017, column: 13, scope: !7435)
!7441 = !DILocation(line: 2018, column: 18, scope: !7435)
!7442 = !DILocation(line: 2018, column: 3, scope: !7435)
!7443 = distinct !DISubprogram(name: "gimple_call_fn", scope: !385, file: !385, line: 1911, type: !2878, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7444)
!7444 = !{!7445}
!7445 = !DILocalVariable(name: "gs", arg: 1, scope: !7443, file: !385, line: 1911, type: !2850)
!7446 = !DILocation(line: 0, scope: !7443)
!7447 = !DILocation(line: 1914, column: 10, scope: !7443)
!7448 = !DILocation(line: 1914, column: 3, scope: !7443)
!7449 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !385, file: !385, line: 1954, type: !2878, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7450)
!7450 = !{!7451, !7452}
!7451 = !DILocalVariable(name: "gs", arg: 1, scope: !7449, file: !385, line: 1954, type: !2850)
!7452 = !DILocalVariable(name: "addr", scope: !7449, file: !385, line: 1956, type: !1014)
!7453 = !DILocation(line: 0, scope: !7449)
!7454 = !DILocation(line: 1956, column: 15, scope: !7449)
!7455 = !DILocation(line: 1957, column: 7, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7449, file: !385, line: 1957, column: 7)
!7457 = !DILocation(line: 1957, column: 24, scope: !7456)
!7458 = !DILocation(line: 1957, column: 7, scope: !7449)
!7459 = !DILocation(line: 1958, column: 12, scope: !7456)
!7460 = !DILocation(line: 1958, column: 5, scope: !7456)
!7461 = !DILocation(line: 1960, column: 1, scope: !7449)
!7462 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !385, file: !385, line: 1966, type: !2878, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7463)
!7463 = !{!7464, !7465, !7466}
!7464 = !DILocalVariable(name: "gs", arg: 1, scope: !7462, file: !385, line: 1966, type: !2850)
!7465 = !DILocalVariable(name: "fn", scope: !7462, file: !385, line: 1968, type: !1014)
!7466 = !DILocalVariable(name: "type", scope: !7462, file: !385, line: 1969, type: !1014)
!7467 = !DILocation(line: 0, scope: !7462)
!7468 = !DILocation(line: 1968, column: 13, scope: !7462)
!7469 = !DILocation(line: 1969, column: 15, scope: !7462)
!7470 = !DILocation(line: 1972, column: 10, scope: !7462)
!7471 = !DILocation(line: 1976, column: 10, scope: !7462)
!7472 = !DILocation(line: 1976, column: 3, scope: !7462)
!7473 = distinct !DISubprogram(name: "gimple_call_chain", scope: !385, file: !385, line: 1983, type: !2878, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7474)
!7474 = !{!7475}
!7475 = !DILocalVariable(name: "gs", arg: 1, scope: !7473, file: !385, line: 1983, type: !2850)
!7476 = !DILocation(line: 0, scope: !7473)
!7477 = !DILocation(line: 1986, column: 10, scope: !7473)
!7478 = !DILocation(line: 1986, column: 3, scope: !7473)
!7479 = distinct !DISubprogram(name: "gimple_call_arg", scope: !385, file: !385, line: 2025, type: !3546, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7480)
!7480 = !{!7481, !7482}
!7481 = !DILocalVariable(name: "gs", arg: 1, scope: !7479, file: !385, line: 2025, type: !2850)
!7482 = !DILocalVariable(name: "index", arg: 2, scope: !7479, file: !385, line: 2025, type: !7)
!7483 = !DILocation(line: 0, scope: !7479)
!7484 = !DILocation(line: 2028, column: 31, scope: !7479)
!7485 = !DILocation(line: 2028, column: 10, scope: !7479)
!7486 = !DILocation(line: 2028, column: 3, scope: !7479)
!7487 = distinct !DISubprogram(name: "gimple_call_nothrow_p", scope: !385, file: !385, line: 2188, type: !6884, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7488)
!7488 = !{!7489}
!7489 = !DILocalVariable(name: "s", arg: 1, scope: !7487, file: !385, line: 2188, type: !894)
!7490 = !DILocation(line: 0, scope: !7487)
!7491 = !DILocation(line: 2191, column: 11, scope: !7487)
!7492 = !DILocation(line: 2191, column: 10, scope: !7487)
!7493 = !DILocation(line: 2191, column: 3, scope: !7487)
!7494 = distinct !DISubprogram(name: "gimple_call_return_slot_opt_p", scope: !385, file: !385, line: 2119, type: !6884, scopeLine: 2120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7495)
!7495 = !{!7496}
!7496 = !DILocalVariable(name: "s", arg: 1, scope: !7494, file: !385, line: 2119, type: !894)
!7497 = !DILocation(line: 0, scope: !7494)
!7498 = !DILocation(line: 2122, column: 21, scope: !7494)
!7499 = !DILocation(line: 2122, column: 10, scope: !7494)
!7500 = !DILocation(line: 2122, column: 3, scope: !7494)
!7501 = distinct !DISubprogram(name: "gimple_call_from_thunk_p", scope: !385, file: !385, line: 2143, type: !6884, scopeLine: 2144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7502)
!7502 = !{!7503}
!7503 = !DILocalVariable(name: "s", arg: 1, scope: !7501, file: !385, line: 2143, type: !894)
!7504 = !DILocation(line: 0, scope: !7501)
!7505 = !DILocation(line: 2146, column: 21, scope: !7501)
!7506 = !DILocation(line: 2146, column: 10, scope: !7501)
!7507 = !DILocation(line: 2146, column: 3, scope: !7501)
!7508 = distinct !DISubprogram(name: "gimple_call_cannot_inline_p", scope: !385, file: !385, line: 2094, type: !6884, scopeLine: 2095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7509)
!7509 = !{!7510}
!7510 = !DILocalVariable(name: "s", arg: 1, scope: !7508, file: !385, line: 2094, type: !894)
!7511 = !DILocation(line: 0, scope: !7508)
!7512 = !DILocation(line: 2097, column: 21, scope: !7508)
!7513 = !DILocation(line: 2097, column: 10, scope: !7508)
!7514 = !DILocation(line: 2097, column: 3, scope: !7508)
!7515 = distinct !DISubprogram(name: "gimple_call_va_arg_pack_p", scope: !385, file: !385, line: 2168, type: !6884, scopeLine: 2169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7516)
!7516 = !{!7517}
!7517 = !DILocalVariable(name: "s", arg: 1, scope: !7515, file: !385, line: 2168, type: !894)
!7518 = !DILocation(line: 0, scope: !7515)
!7519 = !DILocation(line: 2171, column: 21, scope: !7515)
!7520 = !DILocation(line: 2171, column: 10, scope: !7515)
!7521 = !DILocation(line: 2171, column: 3, scope: !7515)
!7522 = distinct !DISubprogram(name: "op_iter_init", scope: !6108, file: !6108, line: 742, type: !7523, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7525)
!7523 = !DISubroutineType(types: !7524)
!7524 = !{null, !6386, !894, !823}
!7525 = !{!7526, !7527, !7528}
!7526 = !DILocalVariable(name: "ptr", arg: 1, scope: !7522, file: !6108, line: 742, type: !6386)
!7527 = !DILocalVariable(name: "stmt", arg: 2, scope: !7522, file: !6108, line: 742, type: !894)
!7528 = !DILocalVariable(name: "flags", arg: 3, scope: !7522, file: !6108, line: 742, type: !823)
!7529 = !DILocation(line: 0, scope: !7522)
!7530 = !DILocation(line: 746, column: 3, scope: !7522)
!7531 = !DILocation(line: 748, column: 22, scope: !7522)
!7532 = !DILocation(line: 748, column: 15, scope: !7522)
!7533 = !DILocation(line: 748, column: 52, scope: !7522)
!7534 = !DILocation(line: 748, column: 8, scope: !7522)
!7535 = !DILocation(line: 748, column: 13, scope: !7522)
!7536 = !DILocation(line: 749, column: 15, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7522, file: !6108, line: 749, column: 7)
!7538 = !DILocation(line: 750, column: 7, scope: !7537)
!7539 = !DILocation(line: 750, column: 10, scope: !7537)
!7540 = !DILocation(line: 751, column: 7, scope: !7537)
!7541 = !DILocation(line: 751, column: 10, scope: !7537)
!7542 = !DILocation(line: 751, column: 29, scope: !7537)
!7543 = !DILocation(line: 749, column: 7, scope: !7522)
!7544 = !DILocation(line: 752, column: 22, scope: !7537)
!7545 = !DILocation(line: 752, column: 28, scope: !7537)
!7546 = !DILocation(line: 752, column: 15, scope: !7537)
!7547 = !DILocation(line: 752, column: 5, scope: !7537)
!7548 = !DILocation(line: 753, column: 22, scope: !7522)
!7549 = !DILocation(line: 753, column: 15, scope: !7522)
!7550 = !DILocation(line: 753, column: 52, scope: !7522)
!7551 = !DILocation(line: 753, column: 8, scope: !7522)
!7552 = !DILocation(line: 753, column: 13, scope: !7522)
!7553 = !DILocation(line: 754, column: 15, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7522, file: !6108, line: 754, column: 7)
!7555 = !DILocation(line: 755, column: 7, scope: !7554)
!7556 = !DILocation(line: 755, column: 10, scope: !7554)
!7557 = !DILocation(line: 756, column: 7, scope: !7554)
!7558 = !DILocation(line: 756, column: 10, scope: !7554)
!7559 = !DILocation(line: 756, column: 29, scope: !7554)
!7560 = !DILocation(line: 754, column: 7, scope: !7522)
!7561 = !DILocation(line: 757, column: 22, scope: !7554)
!7562 = !DILocation(line: 757, column: 28, scope: !7554)
!7563 = !DILocation(line: 757, column: 15, scope: !7554)
!7564 = !DILocation(line: 757, column: 5, scope: !7554)
!7565 = !DILocation(line: 758, column: 8, scope: !7522)
!7566 = !DILocation(line: 758, column: 13, scope: !7522)
!7567 = !DILocation(line: 760, column: 8, scope: !7522)
!7568 = !DILocation(line: 760, column: 14, scope: !7522)
!7569 = !DILocation(line: 761, column: 8, scope: !7522)
!7570 = !DILocation(line: 761, column: 16, scope: !7522)
!7571 = !DILocation(line: 762, column: 8, scope: !7522)
!7572 = !DILocation(line: 762, column: 17, scope: !7522)
!7573 = !DILocation(line: 763, column: 1, scope: !7522)
!7574 = distinct !DISubprogram(name: "gimple_def_ops", scope: !385, file: !385, line: 1292, type: !7575, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7577)
!7575 = !DISubroutineType(types: !7576)
!7576 = !{!1516, !2850}
!7577 = !{!7578}
!7578 = !DILocalVariable(name: "g", arg: 1, scope: !7574, file: !385, line: 1292, type: !2850)
!7579 = !DILocation(line: 0, scope: !7574)
!7580 = !DILocation(line: 1294, column: 8, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7574, file: !385, line: 1294, column: 7)
!7582 = !DILocation(line: 1294, column: 7, scope: !7574)
!7583 = !DILocation(line: 1296, column: 26, scope: !7574)
!7584 = !DILocation(line: 1296, column: 3, scope: !7574)
!7585 = !DILocation(line: 1297, column: 1, scope: !7574)
!7586 = distinct !DISubprogram(name: "gimple_vdef", scope: !385, file: !385, line: 1375, type: !2878, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7587)
!7587 = !{!7588}
!7588 = !DILocalVariable(name: "g", arg: 1, scope: !7586, file: !385, line: 1375, type: !2850)
!7589 = !DILocation(line: 0, scope: !7586)
!7590 = !DILocation(line: 1377, column: 8, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7586, file: !385, line: 1377, column: 7)
!7592 = !DILocation(line: 1377, column: 7, scope: !7586)
!7593 = !DILocation(line: 1379, column: 23, scope: !7586)
!7594 = !DILocation(line: 1379, column: 3, scope: !7586)
!7595 = !DILocation(line: 1380, column: 1, scope: !7586)
!7596 = distinct !DISubprogram(name: "gimple_use_ops", scope: !385, file: !385, line: 1313, type: !7597, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7599)
!7597 = !DISubroutineType(types: !7598)
!7598 = !{!1523, !2850}
!7599 = !{!7600}
!7600 = !DILocalVariable(name: "g", arg: 1, scope: !7596, file: !385, line: 1313, type: !2850)
!7601 = !DILocation(line: 0, scope: !7596)
!7602 = !DILocation(line: 1315, column: 8, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7596, file: !385, line: 1315, column: 7)
!7604 = !DILocation(line: 1315, column: 7, scope: !7596)
!7605 = !DILocation(line: 1317, column: 26, scope: !7596)
!7606 = !DILocation(line: 1317, column: 3, scope: !7596)
!7607 = !DILocation(line: 1318, column: 1, scope: !7596)
!7608 = distinct !DISubprogram(name: "gimple_vuse", scope: !385, file: !385, line: 1365, type: !2878, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7609)
!7609 = !{!7610}
!7610 = !DILocalVariable(name: "g", arg: 1, scope: !7608, file: !385, line: 1365, type: !2850)
!7611 = !DILocation(line: 0, scope: !7608)
!7612 = !DILocation(line: 1367, column: 8, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7608, file: !385, line: 1367, column: 7)
!7614 = !DILocation(line: 1367, column: 7, scope: !7608)
!7615 = !DILocation(line: 1369, column: 23, scope: !7608)
!7616 = !DILocation(line: 1369, column: 3, scope: !7608)
!7617 = !DILocation(line: 1370, column: 1, scope: !7608)
!7618 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !385, file: !385, line: 1283, type: !2904, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7619)
!7619 = !{!7620}
!7620 = !DILocalVariable(name: "g", arg: 1, scope: !7618, file: !385, line: 1283, type: !2850)
!7621 = !DILocation(line: 0, scope: !7618)
!7622 = !DILocation(line: 1285, column: 10, scope: !7618)
!7623 = !DILocation(line: 1285, column: 26, scope: !7618)
!7624 = !DILocation(line: 1285, column: 43, scope: !7618)
!7625 = !DILocation(line: 1285, column: 46, scope: !7618)
!7626 = !DILocation(line: 1285, column: 62, scope: !7618)
!7627 = !DILocation(line: 1285, column: 3, scope: !7618)
!7628 = distinct !DISubprogram(name: "link_use_stmts_after", scope: !6108, file: !6108, line: 1018, type: !7629, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7631)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{null, !2238, !6427}
!7631 = !{!7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639}
!7632 = !DILocalVariable(name: "head", arg: 1, scope: !7628, file: !6108, line: 1018, type: !2238)
!7633 = !DILocalVariable(name: "imm", arg: 2, scope: !7628, file: !6108, line: 1018, type: !6427)
!7634 = !DILocalVariable(name: "use_p", scope: !7628, file: !6108, line: 1020, type: !2238)
!7635 = !DILocalVariable(name: "last_p", scope: !7628, file: !6108, line: 1021, type: !2238)
!7636 = !DILocalVariable(name: "head_stmt", scope: !7628, file: !6108, line: 1022, type: !894)
!7637 = !DILocalVariable(name: "use", scope: !7628, file: !6108, line: 1023, type: !1014)
!7638 = !DILocalVariable(name: "op_iter", scope: !7628, file: !6108, line: 1024, type: !4322)
!7639 = !DILocalVariable(name: "flag", scope: !7628, file: !6108, line: 1025, type: !823)
!7640 = !DILocation(line: 0, scope: !7628)
!7641 = !DILocation(line: 1022, column: 22, scope: !7628)
!7642 = !DILocation(line: 1023, column: 14, scope: !7628)
!7643 = !DILocation(line: 1024, column: 3, scope: !7628)
!7644 = !DILocation(line: 1028, column: 11, scope: !7628)
!7645 = !DILocation(line: 1030, column: 7, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7628, file: !6108, line: 1030, column: 7)
!7647 = !DILocation(line: 1030, column: 31, scope: !7646)
!7648 = !DILocation(line: 1030, column: 7, scope: !7628)
!7649 = !DILocation(line: 1032, column: 7, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !6108, line: 1032, column: 7)
!7651 = distinct !DILexicalBlock(scope: !7646, file: !6108, line: 1031, column: 5)
!7652 = !DILocation(line: 0, scope: !7650)
!7653 = !DILocation(line: 1032, column: 7, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7650, file: !6108, line: 1032, column: 7)
!7655 = !DILocation(line: 1033, column: 6, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7654, file: !6108, line: 1033, column: 6)
!7657 = !DILocation(line: 1033, column: 27, scope: !7656)
!7658 = !DILocation(line: 1033, column: 6, scope: !7654)
!7659 = !DILocation(line: 1034, column: 13, scope: !7656)
!7660 = !DILocation(line: 1034, column: 4, scope: !7656)
!7661 = distinct !{!7661, !7649, !7662}
!7662 = !DILocation(line: 1034, column: 53, scope: !7650)
!7663 = !DILocation(line: 1038, column: 11, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7646, file: !6108, line: 1037, column: 5)
!7665 = !DILocation(line: 1040, column: 4, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7667, file: !6108, line: 1040, column: 4)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !6108, line: 1039, column: 2)
!7668 = distinct !DILexicalBlock(scope: !7664, file: !6108, line: 1038, column: 11)
!7669 = !DILocation(line: 0, scope: !7666)
!7670 = !DILocation(line: 1040, column: 4, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7666, file: !6108, line: 1040, column: 4)
!7672 = !DILocation(line: 1041, column: 10, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7671, file: !6108, line: 1041, column: 10)
!7674 = !DILocation(line: 1041, column: 31, scope: !7673)
!7675 = !DILocation(line: 1041, column: 10, scope: !7671)
!7676 = !DILocation(line: 1042, column: 17, scope: !7673)
!7677 = !DILocation(line: 1042, column: 8, scope: !7673)
!7678 = distinct !{!7678, !7665, !7679}
!7679 = !DILocation(line: 1042, column: 57, scope: !7666)
!7680 = !DILocation(line: 1044, column: 25, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7668, file: !6108, line: 1044, column: 16)
!7682 = !DILocation(line: 1044, column: 53, scope: !7681)
!7683 = !DILocation(line: 1044, column: 16, scope: !7668)
!7684 = !DILocation(line: 1046, column: 8, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !6108, line: 1046, column: 8)
!7686 = distinct !DILexicalBlock(scope: !7681, file: !6108, line: 1045, column: 2)
!7687 = !DILocation(line: 1046, column: 29, scope: !7685)
!7688 = !DILocation(line: 1046, column: 8, scope: !7686)
!7689 = !DILocation(line: 1047, column: 15, scope: !7685)
!7690 = !DILocation(line: 1047, column: 6, scope: !7685)
!7691 = !DILocation(line: 1051, column: 22, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7628, file: !6108, line: 1051, column: 7)
!7693 = !DILocation(line: 1021, column: 17, scope: !7628)
!7694 = !DILocation(line: 1051, column: 27, scope: !7692)
!7695 = !DILocation(line: 1051, column: 7, scope: !7628)
!7696 = !DILocation(line: 1052, column: 27, scope: !7692)
!7697 = !DILocation(line: 1052, column: 5, scope: !7692)
!7698 = !DILocation(line: 1053, column: 32, scope: !7628)
!7699 = !DILocation(line: 1053, column: 3, scope: !7628)
!7700 = !DILocation(line: 1054, column: 1, scope: !7628)
!7701 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !6108, file: !6108, line: 427, type: !7702, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7704)
!7702 = !DISubroutineType(types: !7703)
!7703 = !{!1014, !2238}
!7704 = !{!7705}
!7705 = !DILocalVariable(name: "use", arg: 1, scope: !7701, file: !6108, line: 427, type: !2238)
!7706 = !DILocation(line: 0, scope: !7701)
!7707 = !DILocation(line: 429, column: 17, scope: !7701)
!7708 = !DILocation(line: 429, column: 10, scope: !7701)
!7709 = !DILocation(line: 429, column: 3, scope: !7701)
!7710 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !6108, file: !6108, line: 910, type: !7711, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7713)
!7711 = !DISubroutineType(types: !7712)
!7712 = !{!2238, !6386, !894, !823}
!7713 = !{!7714, !7715, !7716, !7717, !7718}
!7714 = !DILocalVariable(name: "ptr", arg: 1, scope: !7710, file: !6108, line: 910, type: !6386)
!7715 = !DILocalVariable(name: "phi", arg: 2, scope: !7710, file: !6108, line: 910, type: !894)
!7716 = !DILocalVariable(name: "flags", arg: 3, scope: !7710, file: !6108, line: 910, type: !823)
!7717 = !DILocalVariable(name: "phi_def", scope: !7710, file: !6108, line: 912, type: !1014)
!7718 = !DILocalVariable(name: "comp", scope: !7710, file: !6108, line: 913, type: !823)
!7719 = !DILocation(line: 0, scope: !7710)
!7720 = !DILocation(line: 912, column: 18, scope: !7710)
!7721 = !DILocation(line: 915, column: 3, scope: !7710)
!7722 = !DILocation(line: 916, column: 8, scope: !7710)
!7723 = !DILocation(line: 916, column: 13, scope: !7710)
!7724 = !DILocation(line: 918, column: 3, scope: !7710)
!7725 = !DILocation(line: 920, column: 11, scope: !7710)
!7726 = !DILocation(line: 923, column: 14, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7710, file: !6108, line: 923, column: 7)
!7728 = !DILocation(line: 923, column: 22, scope: !7727)
!7729 = !DILocation(line: 923, column: 7, scope: !7710)
!7730 = !DILocation(line: 925, column: 17, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7727, file: !6108, line: 924, column: 5)
!7732 = !DILocation(line: 926, column: 7, scope: !7731)
!7733 = !DILocation(line: 929, column: 8, scope: !7710)
!7734 = !DILocation(line: 929, column: 17, scope: !7710)
!7735 = !DILocation(line: 930, column: 18, scope: !7710)
!7736 = !DILocation(line: 930, column: 8, scope: !7710)
!7737 = !DILocation(line: 930, column: 16, scope: !7710)
!7738 = !DILocation(line: 931, column: 8, scope: !7710)
!7739 = !DILocation(line: 931, column: 18, scope: !7710)
!7740 = !DILocation(line: 932, column: 10, scope: !7710)
!7741 = !DILocation(line: 932, column: 3, scope: !7710)
!7742 = !DILocation(line: 933, column: 1, scope: !7710)
!7743 = distinct !DISubprogram(name: "move_use_after_head", scope: !6108, file: !6108, line: 990, type: !7744, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7746)
!7744 = !DISubroutineType(types: !7745)
!7745 = !{!2238, !2238, !2238, !2238}
!7746 = !{!7747, !7748, !7749}
!7747 = !DILocalVariable(name: "use_p", arg: 1, scope: !7743, file: !6108, line: 990, type: !2238)
!7748 = !DILocalVariable(name: "head", arg: 2, scope: !7743, file: !6108, line: 990, type: !2238)
!7749 = !DILocalVariable(name: "last_p", arg: 3, scope: !7743, file: !6108, line: 991, type: !2238)
!7750 = !DILocation(line: 0, scope: !7743)
!7751 = !DILocation(line: 997, column: 13, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7743, file: !6108, line: 997, column: 7)
!7753 = !DILocation(line: 997, column: 7, scope: !7743)
!7754 = !DILocation(line: 1000, column: 19, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !6108, line: 1000, column: 11)
!7756 = distinct !DILexicalBlock(scope: !7752, file: !6108, line: 998, column: 5)
!7757 = !DILocation(line: 1000, column: 24, scope: !7755)
!7758 = !DILocation(line: 1000, column: 11, scope: !7756)
!7759 = !DILocation(line: 1005, column: 4, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7755, file: !6108, line: 1003, column: 2)
!7761 = !DILocation(line: 1006, column: 4, scope: !7760)
!7762 = !DILocation(line: 1010, column: 3, scope: !7743)
!7763 = distinct !DISubprogram(name: "op_iter_next_use", scope: !6108, file: !6108, line: 659, type: !7764, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7766)
!7764 = !DISubroutineType(types: !7765)
!7765 = !{!2238, !6386}
!7766 = !{!7767, !7768}
!7767 = !DILocalVariable(name: "ptr", arg: 1, scope: !7763, file: !6108, line: 659, type: !6386)
!7768 = !DILocalVariable(name: "use_p", scope: !7763, file: !6108, line: 661, type: !2238)
!7769 = !DILocation(line: 0, scope: !7763)
!7770 = !DILocation(line: 665, column: 12, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7763, file: !6108, line: 665, column: 7)
!7772 = !DILocation(line: 665, column: 7, scope: !7771)
!7773 = !DILocation(line: 665, column: 7, scope: !7763)
!7774 = !DILocation(line: 667, column: 15, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7771, file: !6108, line: 666, column: 5)
!7776 = !DILocation(line: 668, column: 30, scope: !7775)
!7777 = !DILocation(line: 668, column: 17, scope: !7775)
!7778 = !DILocation(line: 669, column: 7, scope: !7775)
!7779 = !DILocation(line: 671, column: 12, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7763, file: !6108, line: 671, column: 7)
!7781 = !DILocation(line: 671, column: 25, scope: !7780)
!7782 = !DILocation(line: 671, column: 18, scope: !7780)
!7783 = !DILocation(line: 671, column: 7, scope: !7763)
!7784 = !DILocation(line: 673, column: 14, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7780, file: !6108, line: 672, column: 5)
!7786 = !DILocation(line: 673, column: 7, scope: !7785)
!7787 = !DILocation(line: 675, column: 8, scope: !7763)
!7788 = !DILocation(line: 675, column: 13, scope: !7763)
!7789 = !DILocation(line: 676, column: 3, scope: !7763)
!7790 = !DILocation(line: 677, column: 1, scope: !7763)
!7791 = distinct !DISubprogram(name: "op_iter_init_use", scope: !6108, file: !6108, line: 768, type: !7711, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7792)
!7792 = !{!7793, !7794, !7795}
!7793 = !DILocalVariable(name: "ptr", arg: 1, scope: !7791, file: !6108, line: 768, type: !6386)
!7794 = !DILocalVariable(name: "stmt", arg: 2, scope: !7791, file: !6108, line: 768, type: !894)
!7795 = !DILocalVariable(name: "flags", arg: 3, scope: !7791, file: !6108, line: 768, type: !823)
!7796 = !DILocation(line: 0, scope: !7791)
!7797 = !DILocation(line: 770, column: 3, scope: !7791)
!7798 = !DILocation(line: 772, column: 3, scope: !7791)
!7799 = !DILocation(line: 773, column: 8, scope: !7791)
!7800 = !DILocation(line: 773, column: 18, scope: !7791)
!7801 = !DILocation(line: 774, column: 10, scope: !7791)
!7802 = !DILocation(line: 774, column: 3, scope: !7791)
!7803 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !385, file: !385, line: 1334, type: !7804, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7806)
!7804 = !DISubroutineType(types: !7805)
!7805 = !{!2238, !2850}
!7806 = !{!7807, !7808}
!7807 = !DILocalVariable(name: "g", arg: 1, scope: !7803, file: !385, line: 1334, type: !2850)
!7808 = !DILocalVariable(name: "ops", scope: !7803, file: !385, line: 1336, type: !1523)
!7809 = !DILocation(line: 0, scope: !7803)
!7810 = !DILocation(line: 1337, column: 8, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7803, file: !385, line: 1337, column: 7)
!7812 = !DILocation(line: 1337, column: 7, scope: !7803)
!7813 = !DILocation(line: 1339, column: 25, scope: !7803)
!7814 = !DILocation(line: 1340, column: 7, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7803, file: !385, line: 1340, column: 7)
!7816 = !DILocation(line: 1341, column: 7, scope: !7815)
!7817 = !DILocation(line: 1341, column: 28, scope: !7815)
!7818 = !DILocation(line: 1341, column: 49, scope: !7815)
!7819 = !DILocation(line: 1341, column: 32, scope: !7815)
!7820 = !DILocation(line: 1342, column: 12, scope: !7815)
!7821 = !DILocation(line: 1340, column: 7, scope: !7803)
!7822 = !DILocation(line: 1344, column: 1, scope: !7803)
!7823 = distinct !DISubprogram(name: "delink_imm_use", scope: !6108, file: !6108, line: 188, type: !7824, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7826)
!7824 = !DISubroutineType(types: !7825)
!7825 = !{null, !2239}
!7826 = !{!7827}
!7827 = !DILocalVariable(name: "linknode", arg: 1, scope: !7823, file: !6108, line: 188, type: !2239)
!7828 = !DILocation(line: 0, scope: !7823)
!7829 = !DILocation(line: 191, column: 17, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7823, file: !6108, line: 191, column: 7)
!7831 = !DILocation(line: 191, column: 22, scope: !7830)
!7832 = !DILocation(line: 191, column: 7, scope: !7823)
!7833 = !DILocation(line: 194, column: 36, scope: !7823)
!7834 = !DILocation(line: 194, column: 19, scope: !7823)
!7835 = !DILocation(line: 194, column: 24, scope: !7823)
!7836 = !DILocation(line: 195, column: 36, scope: !7823)
!7837 = !DILocation(line: 195, column: 13, scope: !7823)
!7838 = !DILocation(line: 195, column: 24, scope: !7823)
!7839 = !DILocation(line: 196, column: 18, scope: !7823)
!7840 = !DILocation(line: 197, column: 18, scope: !7823)
!7841 = !DILocation(line: 198, column: 1, scope: !7823)
!7842 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !6108, file: !6108, line: 202, type: !7843, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7845)
!7843 = !DISubroutineType(types: !7844)
!7844 = !{null, !2239, !2239}
!7845 = !{!7846, !7847}
!7846 = !DILocalVariable(name: "linknode", arg: 1, scope: !7842, file: !6108, line: 202, type: !2239)
!7847 = !DILocalVariable(name: "list", arg: 2, scope: !7842, file: !6108, line: 202, type: !2239)
!7848 = !DILocation(line: 0, scope: !7842)
!7849 = !DILocation(line: 206, column: 13, scope: !7842)
!7850 = !DILocation(line: 206, column: 18, scope: !7842)
!7851 = !DILocation(line: 207, column: 26, scope: !7842)
!7852 = !DILocation(line: 207, column: 13, scope: !7842)
!7853 = !DILocation(line: 207, column: 18, scope: !7842)
!7854 = !DILocation(line: 208, column: 9, scope: !7842)
!7855 = !DILocation(line: 208, column: 15, scope: !7842)
!7856 = !DILocation(line: 208, column: 20, scope: !7842)
!7857 = !DILocation(line: 209, column: 14, scope: !7842)
!7858 = !DILocation(line: 210, column: 1, scope: !7842)
!7859 = distinct !DISubprogram(name: "gimple_phi_result", scope: !385, file: !385, line: 3071, type: !2878, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7860)
!7860 = !{!7861}
!7861 = !DILocalVariable(name: "gs", arg: 1, scope: !7859, file: !385, line: 3071, type: !2850)
!7862 = !DILocation(line: 0, scope: !7859)
!7863 = !DILocation(line: 3074, column: 25, scope: !7859)
!7864 = !DILocation(line: 3074, column: 3, scope: !7859)
!7865 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !6108, file: !6108, line: 729, type: !7866, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7868)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{null, !6386}
!7868 = !{!7869}
!7869 = !DILocalVariable(name: "ptr", arg: 1, scope: !7865, file: !6108, line: 729, type: !6386)
!7870 = !DILocation(line: 0, scope: !7865)
!7871 = !DILocation(line: 731, column: 8, scope: !7865)
!7872 = !DILocation(line: 731, column: 13, scope: !7865)
!7873 = !DILocation(line: 732, column: 8, scope: !7865)
!7874 = !DILocation(line: 732, column: 13, scope: !7865)
!7875 = !DILocation(line: 733, column: 8, scope: !7865)
!7876 = !DILocation(line: 733, column: 18, scope: !7865)
!7877 = !DILocation(line: 734, column: 8, scope: !7865)
!7878 = !DILocation(line: 734, column: 14, scope: !7865)
!7879 = !DILocation(line: 735, column: 8, scope: !7865)
!7880 = !DILocation(line: 735, column: 16, scope: !7865)
!7881 = !DILocation(line: 736, column: 8, scope: !7865)
!7882 = !DILocation(line: 736, column: 17, scope: !7865)
!7883 = !DILocation(line: 737, column: 8, scope: !7865)
!7884 = !DILocation(line: 737, column: 13, scope: !7865)
!7885 = !DILocation(line: 738, column: 1, scope: !7865)
!7886 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !385, file: !385, line: 3061, type: !3602, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7887)
!7887 = !{!7888}
!7888 = !DILocalVariable(name: "gs", arg: 1, scope: !7886, file: !385, line: 3061, type: !2850)
!7889 = !DILocation(line: 0, scope: !7886)
!7890 = !DILocation(line: 3064, column: 25, scope: !7886)
!7891 = !DILocation(line: 3064, column: 3, scope: !7886)
!7892 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !6108, file: !6108, line: 442, type: !7893, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7895)
!7893 = !DISubroutineType(types: !7894)
!7894 = !{!2238, !894, !823}
!7895 = !{!7896, !7897}
!7896 = !DILocalVariable(name: "gs", arg: 1, scope: !7892, file: !6108, line: 442, type: !894)
!7897 = !DILocalVariable(name: "i", arg: 2, scope: !7892, file: !6108, line: 442, type: !823)
!7898 = !DILocation(line: 0, scope: !7892)
!7899 = !DILocation(line: 444, column: 11, scope: !7892)
!7900 = !DILocation(line: 444, column: 35, scope: !7892)
!7901 = !DILocation(line: 444, column: 3, scope: !7892)
!7902 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !385, file: !385, line: 3100, type: !7903, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7906)
!7903 = !DISubroutineType(types: !7904)
!7904 = !{!7905, !894, !7}
!7905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!7906 = !{!7907, !7908}
!7907 = !DILocalVariable(name: "gs", arg: 1, scope: !7902, file: !385, line: 3100, type: !894)
!7908 = !DILocalVariable(name: "index", arg: 2, scope: !7902, file: !385, line: 3100, type: !7)
!7909 = !DILocation(line: 0, scope: !7902)
!7910 = !DILocation(line: 3103, column: 3, scope: !7902)
!7911 = !DILocation(line: 3104, column: 12, scope: !7902)
!7912 = !DILocation(line: 3104, column: 3, scope: !7902)
!7913 = distinct !DISubprogram(name: "link_imm_use", scope: !6108, file: !6108, line: 214, type: !7914, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7916)
!7914 = !DISubroutineType(types: !7915)
!7915 = !{null, !2239, !1014}
!7916 = !{!7917, !7918, !7919}
!7917 = !DILocalVariable(name: "linknode", arg: 1, scope: !7913, file: !6108, line: 214, type: !2239)
!7918 = !DILocalVariable(name: "def", arg: 2, scope: !7913, file: !6108, line: 214, type: !1014)
!7919 = !DILocalVariable(name: "root", scope: !7913, file: !6108, line: 216, type: !2239)
!7920 = !DILocation(line: 0, scope: !7913)
!7921 = !DILocation(line: 218, column: 8, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7913, file: !6108, line: 218, column: 7)
!7923 = !DILocation(line: 218, column: 12, scope: !7922)
!7924 = !DILocation(line: 218, column: 15, scope: !7922)
!7925 = !DILocation(line: 218, column: 31, scope: !7922)
!7926 = !DILocation(line: 218, column: 7, scope: !7913)
!7927 = !DILocation(line: 219, column: 15, scope: !7922)
!7928 = !DILocation(line: 219, column: 20, scope: !7922)
!7929 = !DILocation(line: 219, column: 5, scope: !7922)
!7930 = !DILocation(line: 222, column: 16, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7922, file: !6108, line: 221, column: 5)
!7932 = !DILocation(line: 227, column: 7, scope: !7931)
!7933 = !DILocation(line: 229, column: 1, scope: !7913)
!7934 = distinct !DISubprogram(name: "gimple_cond_code", scope: !385, file: !385, line: 2221, type: !2848, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7935)
!7935 = !{!7936}
!7936 = !DILocalVariable(name: "gs", arg: 1, scope: !7934, file: !385, line: 2221, type: !2850)
!7937 = !DILocation(line: 0, scope: !7934)
!7938 = !DILocation(line: 2224, column: 38, scope: !7934)
!7939 = !DILocation(line: 2224, column: 3, scope: !7934)
!7940 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !385, file: !385, line: 2241, type: !2878, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7941)
!7941 = !{!7942}
!7942 = !DILocalVariable(name: "gs", arg: 1, scope: !7940, file: !385, line: 2241, type: !2850)
!7943 = !DILocation(line: 0, scope: !7940)
!7944 = !DILocation(line: 2244, column: 10, scope: !7940)
!7945 = !DILocation(line: 2244, column: 3, scope: !7940)
!7946 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !385, file: !385, line: 2271, type: !2878, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7947)
!7947 = !{!7948}
!7948 = !DILocalVariable(name: "gs", arg: 1, scope: !7946, file: !385, line: 2271, type: !2850)
!7949 = !DILocation(line: 0, scope: !7946)
!7950 = !DILocation(line: 2274, column: 10, scope: !7946)
!7951 = !DILocation(line: 2274, column: 3, scope: !7946)
!7952 = distinct !DISubprogram(name: "gimple_cond_single_var_p", scope: !385, file: !385, line: 2418, type: !6884, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7953)
!7953 = !{!7954}
!7954 = !DILocalVariable(name: "gs", arg: 1, scope: !7952, file: !385, line: 2418, type: !894)
!7955 = !DILocation(line: 0, scope: !7952)
!7956 = !DILocation(line: 2420, column: 7, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7952, file: !385, line: 2420, column: 7)
!7958 = !DILocation(line: 2420, column: 29, scope: !7957)
!7959 = !DILocation(line: 2421, column: 7, scope: !7957)
!7960 = !DILocation(line: 2421, column: 10, scope: !7957)
!7961 = !DILocation(line: 2421, column: 34, scope: !7957)
!7962 = !DILocation(line: 2421, column: 31, scope: !7957)
!7963 = !DILocation(line: 2420, column: 7, scope: !7952)
!7964 = !DILocation(line: 2424, column: 7, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7952, file: !385, line: 2424, column: 7)
!7966 = !DILocation(line: 2424, column: 29, scope: !7965)
!7967 = !DILocation(line: 2425, column: 7, scope: !7965)
!7968 = !DILocation(line: 2425, column: 10, scope: !7965)
!7969 = !DILocation(line: 2425, column: 34, scope: !7965)
!7970 = !DILocation(line: 2425, column: 31, scope: !7965)
!7971 = !DILocation(line: 2424, column: 7, scope: !7952)
!7972 = !DILocation(line: 2428, column: 3, scope: !7952)
!7973 = !DILocation(line: 2429, column: 1, scope: !7952)
!7974 = distinct !DISubprogram(name: "maybe_cleanup_end_of_block", scope: !3, file: !3, line: 1547, type: !7975, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7977)
!7975 = !DISubroutineType(types: !7976)
!7976 = !{null, !873, !900}
!7977 = !{!7978, !7979, !7980}
!7978 = !DILocalVariable(name: "e", arg: 1, scope: !7974, file: !3, line: 1547, type: !873)
!7979 = !DILocalVariable(name: "last", arg: 2, scope: !7974, file: !3, line: 1547, type: !900)
!7980 = !DILocalVariable(name: "insn", scope: !7981, file: !3, line: 1562, type: !900)
!7981 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1561, column: 5)
!7982 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 1560, column: 7)
!7983 = !DILocation(line: 0, scope: !7974)
!7984 = !DILocation(line: 1560, column: 7, scope: !7982)
!7985 = !DILocation(line: 1560, column: 7, scope: !7974)
!7986 = !DILocation(line: 1563, column: 7, scope: !7981)
!7987 = !DILocation(line: 1573, column: 14, scope: !7981)
!7988 = !DILocation(line: 0, scope: !7981)
!7989 = !DILocation(line: 1576, column: 7, scope: !7981)
!7990 = !DILocation(line: 1577, column: 19, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 1577, column: 7)
!7992 = !DILocation(line: 1577, column: 12, scope: !7991)
!7993 = !DILocation(line: 0, scope: !7991)
!7994 = !DILocation(line: 1577, column: 42, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 1577, column: 7)
!7996 = !DILocation(line: 1577, column: 7, scope: !7991)
!7997 = !DILocation(line: 1579, column: 11, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1578, column: 2)
!7999 = !DILocation(line: 1580, column: 8, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 1580, column: 8)
!8001 = !DILocation(line: 1580, column: 8, scope: !7998)
!8002 = !DILocation(line: 1581, column: 6, scope: !8000)
!8003 = !DILocation(line: 1577, column: 7, scope: !7995)
!8004 = distinct !{!8004, !7996, !8005}
!8005 = !DILocation(line: 1582, column: 2, scope: !7991)
!8006 = !DILocation(line: 1584, column: 1, scope: !7974)
!8007 = distinct !DISubprogram(name: "op_iter_init_def", scope: !6108, file: !6108, line: 780, type: !8008, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8010)
!8008 = !DISubroutineType(types: !8009)
!8009 = !{!2241, !6386, !894, !823}
!8010 = !{!8011, !8012, !8013}
!8011 = !DILocalVariable(name: "ptr", arg: 1, scope: !8007, file: !6108, line: 780, type: !6386)
!8012 = !DILocalVariable(name: "stmt", arg: 2, scope: !8007, file: !6108, line: 780, type: !894)
!8013 = !DILocalVariable(name: "flags", arg: 3, scope: !8007, file: !6108, line: 780, type: !823)
!8014 = !DILocation(line: 0, scope: !8007)
!8015 = !DILocation(line: 784, column: 3, scope: !8007)
!8016 = !DILocation(line: 785, column: 8, scope: !8007)
!8017 = !DILocation(line: 785, column: 18, scope: !8007)
!8018 = !DILocation(line: 786, column: 10, scope: !8007)
!8019 = !DILocation(line: 786, column: 3, scope: !8007)
!8020 = distinct !DISubprogram(name: "op_iter_next_def", scope: !6108, file: !6108, line: 681, type: !8021, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8023)
!8021 = !DISubroutineType(types: !8022)
!8022 = !{!2241, !6386}
!8023 = !{!8024, !8025}
!8024 = !DILocalVariable(name: "ptr", arg: 1, scope: !8020, file: !6108, line: 681, type: !6386)
!8025 = !DILocalVariable(name: "def_p", scope: !8020, file: !6108, line: 683, type: !2241)
!8026 = !DILocation(line: 0, scope: !8020)
!8027 = !DILocation(line: 687, column: 12, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8020, file: !6108, line: 687, column: 7)
!8029 = !DILocation(line: 687, column: 7, scope: !8028)
!8030 = !DILocation(line: 687, column: 7, scope: !8020)
!8031 = !DILocation(line: 689, column: 15, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8028, file: !6108, line: 688, column: 5)
!8033 = !DILocation(line: 690, column: 30, scope: !8032)
!8034 = !DILocation(line: 690, column: 17, scope: !8032)
!8035 = !DILocation(line: 691, column: 7, scope: !8032)
!8036 = !DILocation(line: 693, column: 8, scope: !8020)
!8037 = !DILocation(line: 693, column: 13, scope: !8020)
!8038 = !DILocation(line: 694, column: 3, scope: !8020)
!8039 = !DILocation(line: 695, column: 1, scope: !8020)
!8040 = distinct !DISubprogram(name: "expand_debug_expr", scope: !3, file: !3, line: 2229, type: !8041, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8043)
!8041 = !DISubroutineType(types: !8042)
!8042 = !{!900, !1014}
!8043 = !{!8044, !8045, !8046, !8047, !8048, !8049, !8050, !8052, !8053, !8056, !8059, !8061, !8062, !8063, !8064, !8065, !8066, !8067, !8070, !8071, !8077, !8080, !8083, !8084, !8085, !8088, !8089, !8092, !8093, !8094, !8096, !8097, !8098, !8101, !8102, !8104, !8105, !8108, !8109, !8110, !8112, !8113, !8114, !8117, !8118, !8120, !8121, !8124, !8125, !8126, !8129, !8130, !8131, !8134, !8135, !8137, !8140, !8142, !8143, !8144, !8145}
!8044 = !DILocalVariable(name: "exp", arg: 1, scope: !8040, file: !3, line: 2229, type: !1014)
!8045 = !DILocalVariable(name: "op0", scope: !8040, file: !3, line: 2231, type: !900)
!8046 = !DILocalVariable(name: "op1", scope: !8040, file: !3, line: 2231, type: !900)
!8047 = !DILocalVariable(name: "op2", scope: !8040, file: !3, line: 2231, type: !900)
!8048 = !DILocalVariable(name: "mode", scope: !8040, file: !3, line: 2232, type: !5)
!8049 = !DILocalVariable(name: "unsignedp", scope: !8040, file: !3, line: 2233, type: !823)
!8050 = !DILocalVariable(name: "as", scope: !8040, file: !3, line: 2234, type: !8051)
!8051 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !874, line: 73, baseType: !822)
!8052 = !DILocalVariable(name: "address_mode", scope: !8040, file: !3, line: 2235, type: !5)
!8053 = !DILocalVariable(name: "inner_mode", scope: !8054, file: !3, line: 2380, type: !5)
!8054 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2379, column: 7)
!8055 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 2295, column: 5)
!8056 = !DILocalVariable(name: "align", scope: !8057, file: !3, line: 2452, type: !823)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 2451, column: 2)
!8058 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2450, column: 11)
!8059 = !DILocalVariable(name: "mode1", scope: !8060, file: !3, line: 2489, type: !5)
!8060 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2488, column: 7)
!8061 = !DILocalVariable(name: "bitsize", scope: !8060, file: !3, line: 2490, type: !985)
!8062 = !DILocalVariable(name: "bitpos", scope: !8060, file: !3, line: 2490, type: !985)
!8063 = !DILocalVariable(name: "offset", scope: !8060, file: !3, line: 2491, type: !1014)
!8064 = !DILocalVariable(name: "volatilep", scope: !8060, file: !3, line: 2492, type: !823)
!8065 = !DILocalVariable(name: "tem", scope: !8060, file: !3, line: 2493, type: !1014)
!8066 = !DILocalVariable(name: "orig_op0", scope: !8060, file: !3, line: 2495, type: !900)
!8067 = !DILocalVariable(name: "addrmode", scope: !8068, file: !3, line: 2507, type: !5)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 2506, column: 4)
!8069 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2505, column: 6)
!8070 = !DILocalVariable(name: "offmode", scope: !8068, file: !3, line: 2507, type: !5)
!8071 = !DILocalVariable(name: "units", scope: !8072, file: !3, line: 2548, type: !985)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 2547, column: 8)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2546, column: 15)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 2541, column: 10)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 2537, column: 4)
!8076 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2536, column: 6)
!8077 = !DILocalVariable(name: "opmode", scope: !8078, file: !3, line: 2573, type: !5)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 2572, column: 4)
!8079 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2570, column: 6)
!8080 = !DILocalVariable(name: "div", scope: !8081, file: !3, line: 2653, type: !900)
!8081 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 2652, column: 2)
!8082 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2649, column: 11)
!8083 = !DILocalVariable(name: "mod", scope: !8081, file: !3, line: 2654, type: !900)
!8084 = !DILocalVariable(name: "adj", scope: !8081, file: !3, line: 2655, type: !900)
!8085 = !DILocalVariable(name: "mod", scope: !8086, file: !3, line: 2664, type: !900)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 2663, column: 2)
!8087 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2660, column: 11)
!8088 = !DILocalVariable(name: "adj", scope: !8086, file: !3, line: 2665, type: !900)
!8089 = !DILocalVariable(name: "div", scope: !8090, file: !3, line: 2673, type: !900)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 2672, column: 2)
!8091 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2671, column: 11)
!8092 = !DILocalVariable(name: "mod", scope: !8090, file: !3, line: 2674, type: !900)
!8093 = !DILocalVariable(name: "adj", scope: !8090, file: !3, line: 2675, type: !900)
!8094 = !DILocalVariable(name: "div", scope: !8095, file: !3, line: 2680, type: !900)
!8095 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 2679, column: 2)
!8096 = !DILocalVariable(name: "mod", scope: !8095, file: !3, line: 2681, type: !900)
!8097 = !DILocalVariable(name: "adj", scope: !8095, file: !3, line: 2682, type: !900)
!8098 = !DILocalVariable(name: "mod", scope: !8099, file: !3, line: 2689, type: !900)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 2688, column: 2)
!8100 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2687, column: 11)
!8101 = !DILocalVariable(name: "adj", scope: !8099, file: !3, line: 2690, type: !900)
!8102 = !DILocalVariable(name: "mod", scope: !8103, file: !3, line: 2696, type: !900)
!8103 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 2695, column: 2)
!8104 = !DILocalVariable(name: "adj", scope: !8103, file: !3, line: 2697, type: !900)
!8105 = !DILocalVariable(name: "div", scope: !8106, file: !3, line: 2705, type: !900)
!8106 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 2704, column: 2)
!8107 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2703, column: 11)
!8108 = !DILocalVariable(name: "mod", scope: !8106, file: !3, line: 2706, type: !900)
!8109 = !DILocalVariable(name: "adj", scope: !8106, file: !3, line: 2707, type: !900)
!8110 = !DILocalVariable(name: "div", scope: !8111, file: !3, line: 2712, type: !900)
!8111 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 2711, column: 2)
!8112 = !DILocalVariable(name: "mod", scope: !8111, file: !3, line: 2713, type: !900)
!8113 = !DILocalVariable(name: "adj", scope: !8111, file: !3, line: 2714, type: !900)
!8114 = !DILocalVariable(name: "mod", scope: !8115, file: !3, line: 2721, type: !900)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 2720, column: 2)
!8116 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2719, column: 11)
!8117 = !DILocalVariable(name: "adj", scope: !8115, file: !3, line: 2722, type: !900)
!8118 = !DILocalVariable(name: "mod", scope: !8119, file: !3, line: 2728, type: !900)
!8119 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 2727, column: 2)
!8120 = !DILocalVariable(name: "adj", scope: !8119, file: !3, line: 2729, type: !900)
!8121 = !DILocalVariable(name: "imode", scope: !8122, file: !3, line: 2854, type: !5)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 2853, column: 2)
!8123 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2848, column: 11)
!8124 = !DILocalVariable(name: "re", scope: !8122, file: !3, line: 2855, type: !900)
!8125 = !DILocalVariable(name: "im", scope: !8122, file: !3, line: 2855, type: !900)
!8126 = !DILocalVariable(name: "ifmode", scope: !8127, file: !3, line: 2864, type: !5)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2863, column: 6)
!8128 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 2857, column: 8)
!8129 = !DILocalVariable(name: "ihmode", scope: !8127, file: !3, line: 2865, type: !5)
!8130 = !DILocalVariable(name: "halfsize", scope: !8127, file: !3, line: 2866, type: !900)
!8131 = !DILocalVariable(name: "i", scope: !8132, file: !3, line: 2904, type: !7)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 2903, column: 2)
!8133 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2902, column: 11)
!8134 = !DILocalVariable(name: "val", scope: !8132, file: !3, line: 2905, type: !1014)
!8135 = !DILocalVariable(name: "g", scope: !8136, file: !3, line: 2941, type: !894)
!8136 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2940, column: 7)
!8137 = !DILocalVariable(name: "part", scope: !8138, file: !3, line: 2950, type: !823)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 2949, column: 4)
!8139 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 2942, column: 6)
!8140 = !DILabel(scope: !8141, name: "ternary", file: !3, line: 2261)
!8141 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 2238, column: 5)
!8142 = !DILabel(scope: !8141, name: "binary", file: !3, line: 2267)
!8143 = !DILabel(scope: !8141, name: "unary", file: !3, line: 2275)
!8144 = !DILabel(scope: !8055, name: "adjust_mode", file: !3, line: 2375)
!8145 = !DILabel(scope: !8055, name: "flag_unsupported", file: !3, line: 3041)
!8146 = !DILocation(line: 0, scope: !8040)
!8147 = !DILocation(line: 2232, column: 28, scope: !8040)
!8148 = !DILocation(line: 2233, column: 19, scope: !8040)
!8149 = !DILocation(line: 2233, column: 3, scope: !8040)
!8150 = !DILocation(line: 2233, column: 7, scope: !8040)
!8151 = !DILocation(line: 2237, column: 11, scope: !8040)
!8152 = !DILocation(line: 2237, column: 3, scope: !8040)
!8153 = !DILocation(line: 2240, column: 15, scope: !8141)
!8154 = !DILocation(line: 2240, column: 7, scope: !8141)
!8155 = !DILocation(line: 2261, column: 5, scope: !8141)
!8156 = !DILocation(line: 2262, column: 32, scope: !8141)
!8157 = !DILocation(line: 2262, column: 13, scope: !8141)
!8158 = !DILocation(line: 2263, column: 12, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 2263, column: 11)
!8160 = !DILocation(line: 2263, column: 11, scope: !8141)
!8161 = !DILocation(line: 2231, column: 39, scope: !8040)
!8162 = !DILocation(line: 2270, column: 32, scope: !8141)
!8163 = !DILocation(line: 2270, column: 13, scope: !8141)
!8164 = !DILocation(line: 2271, column: 12, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 2271, column: 11)
!8166 = !DILocation(line: 2271, column: 11, scope: !8141)
!8167 = !DILocation(line: 2277, column: 32, scope: !8141)
!8168 = !DILocation(line: 2277, column: 13, scope: !8141)
!8169 = !DILocation(line: 2278, column: 12, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 2278, column: 11)
!8171 = !DILocation(line: 2278, column: 11, scope: !8141)
!8172 = !DILocation(line: 2284, column: 7, scope: !8141)
!8173 = !DILocation(line: 2231, column: 23, scope: !8040)
!8174 = !DILocation(line: 2294, column: 11, scope: !8040)
!8175 = !DILocation(line: 2294, column: 3, scope: !8040)
!8176 = !DILocation(line: 2297, column: 12, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2297, column: 11)
!8178 = !DILocation(line: 2297, column: 11, scope: !8055)
!8179 = !DILocation(line: 2299, column: 16, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 2299, column: 8)
!8181 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 2298, column: 2)
!8182 = !DILocation(line: 2299, column: 8, scope: !8180)
!8183 = !DILocation(line: 2299, column: 43, scope: !8180)
!8184 = !DILocation(line: 2300, column: 20, scope: !8180)
!8185 = !DILocation(line: 2300, column: 11, scope: !8180)
!8186 = !DILocation(line: 2300, column: 8, scope: !8180)
!8187 = !DILocation(line: 2299, column: 8, scope: !8181)
!8188 = !DILocation(line: 2302, column: 10, scope: !8181)
!8189 = !DILocation(line: 2303, column: 10, scope: !8181)
!8190 = !DILocation(line: 2304, column: 4, scope: !8181)
!8191 = !DILocation(line: 2305, column: 4, scope: !8181)
!8192 = !DILocation(line: 2312, column: 13, scope: !8055)
!8193 = !DILocation(line: 2313, column: 7, scope: !8055)
!8194 = !DILocation(line: 2316, column: 7, scope: !8055)
!8195 = !DILocation(line: 2317, column: 32, scope: !8055)
!8196 = !DILocation(line: 2317, column: 13, scope: !8055)
!8197 = !DILocation(line: 2318, column: 32, scope: !8055)
!8198 = !DILocation(line: 2318, column: 13, scope: !8055)
!8199 = !DILocation(line: 2319, column: 14, scope: !8055)
!8200 = !DILocation(line: 2319, column: 7, scope: !8055)
!8201 = !DILocation(line: 2322, column: 13, scope: !8055)
!8202 = !DILocation(line: 2324, column: 11, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2324, column: 11)
!8204 = !DILocation(line: 2324, column: 11, scope: !8055)
!8205 = !DILocation(line: 2327, column: 13, scope: !8055)
!8206 = !DILocation(line: 2328, column: 7, scope: !8055)
!8207 = !DILocation(line: 2328, column: 34, scope: !8055)
!8208 = !DILocation(line: 2329, column: 7, scope: !8055)
!8209 = !DILocation(line: 2331, column: 7, scope: !8055)
!8210 = !DILocation(line: 2339, column: 13, scope: !8055)
!8211 = !DILocation(line: 2342, column: 12, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2342, column: 11)
!8213 = !DILocation(line: 2342, column: 11, scope: !8055)
!8214 = !DILocation(line: 2344, column: 24, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 2344, column: 8)
!8216 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 2343, column: 2)
!8217 = !DILocation(line: 2345, column: 8, scope: !8215)
!8218 = !DILocation(line: 2345, column: 11, scope: !8215)
!8219 = !DILocation(line: 2346, column: 8, scope: !8215)
!8220 = !DILocation(line: 2346, column: 12, scope: !8215)
!8221 = !DILocation(line: 2347, column: 8, scope: !8215)
!8222 = !DILocation(line: 2347, column: 12, scope: !8215)
!8223 = !DILocation(line: 2348, column: 8, scope: !8215)
!8224 = !DILocation(line: 2348, column: 11, scope: !8215)
!8225 = !DILocation(line: 2349, column: 16, scope: !8215)
!8226 = !DILocation(line: 2349, column: 8, scope: !8215)
!8227 = !DILocation(line: 2352, column: 10, scope: !8216)
!8228 = !DILocation(line: 2353, column: 9, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 2353, column: 8)
!8230 = !DILocation(line: 2354, column: 8, scope: !8229)
!8231 = !DILocation(line: 2354, column: 11, scope: !8229)
!8232 = !DILocation(line: 2354, column: 36, scope: !8229)
!8233 = !DILocation(line: 2355, column: 8, scope: !8229)
!8234 = !DILocation(line: 2355, column: 11, scope: !8229)
!8235 = !DILocation(line: 2355, column: 43, scope: !8229)
!8236 = !DILocation(line: 2353, column: 8, scope: !8216)
!8237 = !DILocation(line: 2359, column: 8, scope: !8212)
!8238 = !DILocation(line: 0, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2361, column: 11)
!8240 = !DILocation(line: 2361, column: 11, scope: !8239)
!8241 = !DILocation(line: 0, scope: !8212)
!8242 = !DILocation(line: 2361, column: 26, scope: !8239)
!8243 = !DILocation(line: 2365, column: 12, scope: !8239)
!8244 = !DILocation(line: 2365, column: 4, scope: !8239)
!8245 = !DILocation(line: 2366, column: 13, scope: !8239)
!8246 = !DILocation(line: 2366, column: 25, scope: !8239)
!8247 = !DILocation(line: 2366, column: 43, scope: !8239)
!8248 = !DILocation(line: 2361, column: 11, scope: !8055)
!8249 = !DILocation(line: 2368, column: 4, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 2367, column: 2)
!8251 = !DILocation(line: 2369, column: 10, scope: !8250)
!8252 = !DILocation(line: 2370, column: 4, scope: !8250)
!8253 = !DILocation(line: 2380, column: 33, scope: !8054)
!8254 = !DILocation(line: 0, scope: !8054)
!8255 = !DILocation(line: 2382, column: 11, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 2382, column: 6)
!8257 = !DILocation(line: 2382, column: 6, scope: !8054)
!8258 = !DILocation(line: 2385, column: 17, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 2385, column: 6)
!8260 = !DILocation(line: 2385, column: 6, scope: !8054)
!8261 = !DILocation(line: 2387, column: 10, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 2387, column: 10)
!8263 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 2386, column: 4)
!8264 = !DILocation(line: 2387, column: 26, scope: !8262)
!8265 = !DILocation(line: 2387, column: 10, scope: !8263)
!8266 = !DILocation(line: 2388, column: 21, scope: !8262)
!8267 = !DILocation(line: 2390, column: 21, scope: !8262)
!8268 = !DILocation(line: 0, scope: !8262)
!8269 = !DILocation(line: 2391, column: 15, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 2391, column: 10)
!8271 = !DILocation(line: 2391, column: 10, scope: !8263)
!8272 = !DILocation(line: 2395, column: 6, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 2395, column: 6)
!8274 = !DILocation(line: 2395, column: 26, scope: !8273)
!8275 = !DILocation(line: 2395, column: 29, scope: !8273)
!8276 = !DILocation(line: 2395, column: 6, scope: !8054)
!8277 = !DILocation(line: 2397, column: 10, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 2397, column: 10)
!8279 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 2396, column: 4)
!8280 = !DILocation(line: 2397, column: 37, scope: !8278)
!8281 = !DILocation(line: 2397, column: 34, scope: !8278)
!8282 = !DILocation(line: 2397, column: 10, scope: !8279)
!8283 = !DILocation(line: 2398, column: 14, scope: !8278)
!8284 = !DILocation(line: 2398, column: 8, scope: !8278)
!8285 = !DILocation(line: 2399, column: 39, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8278, file: !3, line: 2399, column: 15)
!8287 = !DILocation(line: 2399, column: 15, scope: !8278)
!8288 = !DILocation(line: 2400, column: 14, scope: !8286)
!8289 = !DILocation(line: 2400, column: 8, scope: !8286)
!8290 = !DILocation(line: 2402, column: 14, scope: !8286)
!8291 = !DILocation(line: 2404, column: 11, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 2404, column: 11)
!8293 = !DILocation(line: 2404, column: 11, scope: !8273)
!8294 = !DILocation(line: 2406, column: 6, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 2405, column: 4)
!8296 = !DILocation(line: 2407, column: 10, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 2407, column: 10)
!8298 = !DILocation(line: 2407, column: 10, scope: !8295)
!8299 = !DILocation(line: 2408, column: 14, scope: !8297)
!8300 = !DILocation(line: 2408, column: 8, scope: !8297)
!8301 = !DILocation(line: 2410, column: 14, scope: !8297)
!8302 = !DILocation(line: 2412, column: 11, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 2412, column: 11)
!8304 = !DILocation(line: 2412, column: 11, scope: !8292)
!8305 = !DILocation(line: 2414, column: 10, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 2414, column: 10)
!8307 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 2413, column: 4)
!8308 = !DILocation(line: 2414, column: 10, scope: !8307)
!8309 = !DILocation(line: 2415, column: 14, scope: !8306)
!8310 = !DILocation(line: 2415, column: 8, scope: !8306)
!8311 = !DILocation(line: 2417, column: 14, scope: !8306)
!8312 = !DILocation(line: 2419, column: 11, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 2419, column: 11)
!8314 = !DILocation(line: 2420, column: 4, scope: !8313)
!8315 = !DILocation(line: 2420, column: 7, scope: !8313)
!8316 = !DILocation(line: 2420, column: 34, scope: !8313)
!8317 = !DILocation(line: 2420, column: 31, scope: !8313)
!8318 = !DILocation(line: 2419, column: 11, scope: !8303)
!8319 = !DILocation(line: 2422, column: 10, scope: !8313)
!8320 = !DILocation(line: 2421, column: 10, scope: !8313)
!8321 = !DILocation(line: 2421, column: 4, scope: !8313)
!8322 = !DILocation(line: 2424, column: 11, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2424, column: 11)
!8324 = !DILocation(line: 2424, column: 11, scope: !8313)
!8325 = !DILocation(line: 2425, column: 10, scope: !8323)
!8326 = !DILocation(line: 2425, column: 4, scope: !8323)
!8327 = !DILocation(line: 2427, column: 10, scope: !8323)
!8328 = !DILocation(line: 2435, column: 32, scope: !8055)
!8329 = !DILocation(line: 2435, column: 13, scope: !8055)
!8330 = !DILocation(line: 2436, column: 12, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2436, column: 11)
!8332 = !DILocation(line: 2436, column: 11, scope: !8055)
!8333 = !DILocation(line: 2439, column: 11, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2439, column: 11)
!8335 = !DILocation(line: 2439, column: 11, scope: !8055)
!8336 = !DILocation(line: 2441, column: 9, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 2440, column: 2)
!8338 = !DILocation(line: 2442, column: 38, scope: !8337)
!8339 = !DILocation(line: 2442, column: 19, scope: !8337)
!8340 = !DILocation(line: 2443, column: 2, scope: !8337)
!8341 = !DILocation(line: 0, scope: !8334)
!8342 = !DILocation(line: 2450, column: 11, scope: !8058)
!8343 = !DILocation(line: 2450, column: 27, scope: !8058)
!8344 = !DILocation(line: 2450, column: 11, scope: !8055)
!8345 = !DILocation(line: 2452, column: 16, scope: !8057)
!8346 = !DILocation(line: 0, scope: !8057)
!8347 = !DILocation(line: 2453, column: 10, scope: !8057)
!8348 = !DILocation(line: 2454, column: 2, scope: !8057)
!8349 = !DILocation(line: 0, scope: !8055)
!8350 = !DILocation(line: 2456, column: 13, scope: !8055)
!8351 = !DILocation(line: 2458, column: 7, scope: !8055)
!8352 = !DILocation(line: 2459, column: 7, scope: !8055)
!8353 = !DILocation(line: 2461, column: 7, scope: !8055)
!8354 = !DILocation(line: 2464, column: 11, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2464, column: 11)
!8356 = !DILocation(line: 2464, column: 28, scope: !8355)
!8357 = !DILocation(line: 2464, column: 32, scope: !8355)
!8358 = !DILocation(line: 2464, column: 11, scope: !8055)
!8359 = !DILocation(line: 2468, column: 46, scope: !8055)
!8360 = !DILocation(line: 2468, column: 26, scope: !8055)
!8361 = !DILocation(line: 2468, column: 7, scope: !8055)
!8362 = !DILocation(line: 2467, column: 13, scope: !8055)
!8363 = !DILocation(line: 2469, column: 12, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2469, column: 11)
!8365 = !DILocation(line: 2469, column: 11, scope: !8055)
!8366 = !DILocation(line: 2472, column: 12, scope: !8055)
!8367 = !DILocation(line: 2474, column: 13, scope: !8055)
!8368 = !DILocation(line: 2476, column: 7, scope: !8055)
!8369 = !DILocation(line: 2477, column: 7, scope: !8055)
!8370 = !DILocation(line: 2479, column: 7, scope: !8055)
!8371 = !DILocation(line: 2489, column: 2, scope: !8060)
!8372 = !DILocation(line: 2490, column: 2, scope: !8060)
!8373 = !DILocation(line: 2491, column: 2, scope: !8060)
!8374 = !DILocation(line: 2492, column: 2, scope: !8060)
!8375 = !DILocation(line: 0, scope: !8060)
!8376 = !DILocation(line: 2492, column: 6, scope: !8060)
!8377 = !DILocation(line: 2493, column: 13, scope: !8060)
!8378 = !DILocation(line: 2497, column: 6, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2497, column: 6)
!8380 = !DILocation(line: 2497, column: 14, scope: !8379)
!8381 = !DILocation(line: 2497, column: 6, scope: !8060)
!8382 = !DILocation(line: 2500, column: 19, scope: !8060)
!8383 = !DILocation(line: 2502, column: 7, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2502, column: 6)
!8385 = !DILocation(line: 2502, column: 6, scope: !8060)
!8386 = !DILocation(line: 2505, column: 6, scope: !8069)
!8387 = !DILocation(line: 2505, column: 6, scope: !8060)
!8388 = !DILocation(line: 2509, column: 11, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2509, column: 10)
!8390 = !DILocation(line: 2509, column: 10, scope: !8068)
!8391 = !DILocation(line: 2512, column: 12, scope: !8068)
!8392 = !DILocation(line: 2513, column: 17, scope: !8068)
!8393 = !DILocation(line: 0, scope: !8068)
!8394 = !DILocation(line: 2514, column: 19, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2514, column: 10)
!8396 = !DILocation(line: 2514, column: 10, scope: !8068)
!8397 = !DILocation(line: 2517, column: 12, scope: !8068)
!8398 = !DILocation(line: 2518, column: 11, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2518, column: 10)
!8400 = !DILocation(line: 2518, column: 10, scope: !8068)
!8401 = !DILocation(line: 2521, column: 16, scope: !8068)
!8402 = !DILocation(line: 2522, column: 18, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2522, column: 10)
!8404 = !DILocation(line: 2522, column: 10, scope: !8068)
!8405 = !DILocation(line: 2523, column: 18, scope: !8403)
!8406 = !DILocation(line: 2525, column: 19, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2525, column: 10)
!8408 = !DILocation(line: 2525, column: 10, scope: !8068)
!8409 = !DILocation(line: 2527, column: 7, scope: !8407)
!8410 = !DILocation(line: 2526, column: 14, scope: !8407)
!8411 = !DILocation(line: 2526, column: 8, scope: !8407)
!8412 = !DILocation(line: 2533, column: 31, scope: !8068)
!8413 = !DILocation(line: 2533, column: 12, scope: !8068)
!8414 = !DILocation(line: 2534, column: 4, scope: !8069)
!8415 = !DILocation(line: 2536, column: 6, scope: !8076)
!8416 = !DILocation(line: 2536, column: 6, scope: !8060)
!8417 = !DILocation(line: 2538, column: 10, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 2538, column: 10)
!8419 = !DILocation(line: 2538, column: 16, scope: !8418)
!8420 = !DILocation(line: 2538, column: 10, scope: !8075)
!8421 = !DILocation(line: 2540, column: 40, scope: !8418)
!8422 = !DILocation(line: 2540, column: 16, scope: !8418)
!8423 = !DILocation(line: 2540, column: 14, scope: !8418)
!8424 = !DILocation(line: 2540, column: 8, scope: !8418)
!8425 = !DILocation(line: 2541, column: 10, scope: !8074)
!8426 = !DILocation(line: 2541, column: 17, scope: !8074)
!8427 = !DILocation(line: 2541, column: 10, scope: !8075)
!8428 = !DILocation(line: 2543, column: 9, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2542, column: 8)
!8430 = !DILocation(line: 2544, column: 10, scope: !8429)
!8431 = !DILocation(line: 2545, column: 8, scope: !8429)
!8432 = !DILocation(line: 2546, column: 22, scope: !8073)
!8433 = !DILocation(line: 2546, column: 15, scope: !8074)
!8434 = !DILocation(line: 2549, column: 32, scope: !8072)
!8435 = !DILocation(line: 2549, column: 37, scope: !8072)
!8436 = !DILocation(line: 0, scope: !8072)
!8437 = !DILocation(line: 2550, column: 9, scope: !8072)
!8438 = !DILocation(line: 2551, column: 19, scope: !8072)
!8439 = !DILocation(line: 2551, column: 10, scope: !8072)
!8440 = !DILocation(line: 2552, column: 8, scope: !8072)
!8441 = !DILocation(line: 2553, column: 22, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 2553, column: 15)
!8443 = !DILocation(line: 2553, column: 27, scope: !8442)
!8444 = !DILocation(line: 2553, column: 30, scope: !8442)
!8445 = !DILocation(line: 2553, column: 41, scope: !8442)
!8446 = !DILocation(line: 2553, column: 38, scope: !8442)
!8447 = !DILocation(line: 2553, column: 15, scope: !8073)
!8448 = !DILocation(line: 2554, column: 14, scope: !8442)
!8449 = !DILocation(line: 2554, column: 8, scope: !8442)
!8450 = !DILocation(line: 2555, column: 15, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 2555, column: 15)
!8452 = !DILocation(line: 2555, column: 30, scope: !8451)
!8453 = !DILocation(line: 2555, column: 15, scope: !8442)
!8454 = !DILocation(line: 2556, column: 14, scope: !8451)
!8455 = !DILocation(line: 2556, column: 8, scope: !8451)
!8456 = !DILocation(line: 2558, column: 14, scope: !8451)
!8457 = !DILocation(line: 0, scope: !8074)
!8458 = !DILocation(line: 2559, column: 14, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 2559, column: 10)
!8460 = !DILocation(line: 2559, column: 10, scope: !8075)
!8461 = !DILocation(line: 2560, column: 14, scope: !8459)
!8462 = !DILocation(line: 2560, column: 8, scope: !8459)
!8463 = !DILocation(line: 0, scope: !8075)
!8464 = !DILocation(line: 2561, column: 6, scope: !8075)
!8465 = !DILocation(line: 2562, column: 4, scope: !8075)
!8466 = !DILocation(line: 2564, column: 6, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2564, column: 6)
!8468 = !DILocation(line: 2564, column: 13, scope: !8467)
!8469 = !DILocation(line: 2564, column: 18, scope: !8467)
!8470 = !DILocation(line: 2564, column: 29, scope: !8467)
!8471 = !DILocation(line: 2564, column: 26, scope: !8467)
!8472 = !DILocation(line: 2564, column: 6, scope: !8060)
!8473 = !DILocation(line: 2567, column: 20, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2567, column: 13)
!8475 = !DILocation(line: 2567, column: 13, scope: !8060)
!8476 = !DILocation(line: 2570, column: 31, scope: !8079)
!8477 = !DILocation(line: 2571, column: 6, scope: !8079)
!8478 = !DILocation(line: 2571, column: 9, scope: !8079)
!8479 = !DILocation(line: 2571, column: 20, scope: !8079)
!8480 = !DILocation(line: 2571, column: 17, scope: !8079)
!8481 = !DILocation(line: 2570, column: 6, scope: !8060)
!8482 = !DILocation(line: 2573, column: 33, scope: !8078)
!8483 = !DILocation(line: 0, scope: !8078)
!8484 = !DILocation(line: 2575, column: 6, scope: !8078)
!8485 = !DILocation(line: 2586, column: 10, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 2586, column: 10)
!8487 = !DILocation(line: 2577, column: 10, scope: !8078)
!8488 = !DILocation(line: 2578, column: 8, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 2577, column: 10)
!8490 = !DILocation(line: 2586, column: 20, scope: !8486)
!8491 = !DILocation(line: 2586, column: 17, scope: !8486)
!8492 = !DILocation(line: 2586, column: 10, scope: !8078)
!8493 = !DILocation(line: 2589, column: 20, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 2589, column: 10)
!8495 = !DILocation(line: 2589, column: 18, scope: !8494)
!8496 = !DILocation(line: 2589, column: 45, scope: !8494)
!8497 = !DILocation(line: 2589, column: 10, scope: !8078)
!8498 = !DILocation(line: 2591, column: 15, scope: !8494)
!8499 = !DILocation(line: 2591, column: 8, scope: !8494)
!8500 = !DILocation(line: 2590, column: 15, scope: !8494)
!8501 = !DILocation(line: 2590, column: 8, scope: !8494)
!8502 = !DILocation(line: 2594, column: 31, scope: !8060)
!8503 = !DILocation(line: 2595, column: 10, scope: !8060)
!8504 = !DILocation(line: 2595, column: 13, scope: !8060)
!8505 = !DILocation(line: 2598, column: 10, scope: !8060)
!8506 = !DILocation(line: 2598, column: 25, scope: !8060)
!8507 = !DILocation(line: 2599, column: 29, scope: !8060)
!8508 = !DILocation(line: 2600, column: 15, scope: !8060)
!8509 = !DILocation(line: 2600, column: 34, scope: !8060)
!8510 = !DILocation(line: 2594, column: 9, scope: !8060)
!8511 = !DILocation(line: 2594, column: 2, scope: !8060)
!8512 = !DILocation(line: 2601, column: 7, scope: !8055)
!8513 = !DILocation(line: 2604, column: 14, scope: !8055)
!8514 = !DILocation(line: 2604, column: 7, scope: !8055)
!8515 = !DILocation(line: 2607, column: 14, scope: !8055)
!8516 = !DILocation(line: 2607, column: 7, scope: !8055)
!8517 = !DILocation(line: 2610, column: 14, scope: !8055)
!8518 = !DILocation(line: 2610, column: 7, scope: !8055)
!8519 = !DILocation(line: 2613, column: 11, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2613, column: 11)
!8521 = !DILocation(line: 2613, column: 11, scope: !8055)
!8522 = !DILocation(line: 2614, column: 9, scope: !8520)
!8523 = !DILocation(line: 2614, column: 2, scope: !8520)
!8524 = !DILocation(line: 2616, column: 9, scope: !8520)
!8525 = !DILocation(line: 2616, column: 2, scope: !8520)
!8526 = !DILocation(line: 2619, column: 11, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2619, column: 11)
!8528 = !DILocation(line: 2619, column: 11, scope: !8055)
!8529 = !DILocation(line: 2620, column: 9, scope: !8527)
!8530 = !DILocation(line: 2620, column: 2, scope: !8527)
!8531 = !DILocation(line: 2622, column: 9, scope: !8527)
!8532 = !DILocation(line: 2622, column: 2, scope: !8527)
!8533 = !DILocation(line: 2626, column: 14, scope: !8055)
!8534 = !DILocation(line: 2626, column: 7, scope: !8055)
!8535 = !DILocation(line: 2629, column: 14, scope: !8055)
!8536 = !DILocation(line: 2629, column: 7, scope: !8055)
!8537 = !DILocation(line: 2632, column: 14, scope: !8055)
!8538 = !DILocation(line: 2632, column: 7, scope: !8055)
!8539 = !DILocation(line: 2637, column: 11, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2637, column: 11)
!8541 = !DILocation(line: 2637, column: 11, scope: !8055)
!8542 = !DILocation(line: 2638, column: 9, scope: !8540)
!8543 = !DILocation(line: 2638, column: 2, scope: !8540)
!8544 = !DILocation(line: 2640, column: 9, scope: !8540)
!8545 = !DILocation(line: 2640, column: 2, scope: !8540)
!8546 = !DILocation(line: 2643, column: 11, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2643, column: 11)
!8548 = !DILocation(line: 2643, column: 11, scope: !8055)
!8549 = !DILocation(line: 2644, column: 9, scope: !8547)
!8550 = !DILocation(line: 2644, column: 2, scope: !8547)
!8551 = !DILocation(line: 2646, column: 9, scope: !8547)
!8552 = !DILocation(line: 2646, column: 2, scope: !8547)
!8553 = !DILocation(line: 2649, column: 11, scope: !8082)
!8554 = !DILocation(line: 2649, column: 11, scope: !8055)
!8555 = !DILocation(line: 2650, column: 9, scope: !8082)
!8556 = !DILocation(line: 2650, column: 2, scope: !8082)
!8557 = !DILocation(line: 2653, column: 14, scope: !8081)
!8558 = !DILocation(line: 0, scope: !8081)
!8559 = !DILocation(line: 2654, column: 14, scope: !8081)
!8560 = !DILocation(line: 2655, column: 14, scope: !8081)
!8561 = !DILocation(line: 2656, column: 11, scope: !8081)
!8562 = !DILocation(line: 2660, column: 11, scope: !8087)
!8563 = !DILocation(line: 2660, column: 11, scope: !8055)
!8564 = !DILocation(line: 2661, column: 9, scope: !8087)
!8565 = !DILocation(line: 2661, column: 2, scope: !8087)
!8566 = !DILocation(line: 2664, column: 14, scope: !8086)
!8567 = !DILocation(line: 0, scope: !8086)
!8568 = !DILocation(line: 2665, column: 14, scope: !8086)
!8569 = !DILocation(line: 2666, column: 10, scope: !8086)
!8570 = !DILocation(line: 2667, column: 11, scope: !8086)
!8571 = !DILocation(line: 2671, column: 11, scope: !8091)
!8572 = !DILocation(line: 2671, column: 11, scope: !8055)
!8573 = !DILocation(line: 2673, column: 14, scope: !8090)
!8574 = !DILocation(line: 0, scope: !8090)
!8575 = !DILocation(line: 2674, column: 14, scope: !8090)
!8576 = !DILocation(line: 2675, column: 14, scope: !8090)
!8577 = !DILocation(line: 2676, column: 11, scope: !8090)
!8578 = !DILocation(line: 2680, column: 14, scope: !8095)
!8579 = !DILocation(line: 0, scope: !8095)
!8580 = !DILocation(line: 2681, column: 14, scope: !8095)
!8581 = !DILocation(line: 2682, column: 14, scope: !8095)
!8582 = !DILocation(line: 2683, column: 11, scope: !8095)
!8583 = !DILocation(line: 2687, column: 11, scope: !8100)
!8584 = !DILocation(line: 2687, column: 11, scope: !8055)
!8585 = !DILocation(line: 2689, column: 14, scope: !8099)
!8586 = !DILocation(line: 0, scope: !8099)
!8587 = !DILocation(line: 2690, column: 14, scope: !8099)
!8588 = !DILocation(line: 2691, column: 10, scope: !8099)
!8589 = !DILocation(line: 2692, column: 11, scope: !8099)
!8590 = !DILocation(line: 2696, column: 14, scope: !8103)
!8591 = !DILocation(line: 0, scope: !8103)
!8592 = !DILocation(line: 2697, column: 14, scope: !8103)
!8593 = !DILocation(line: 2698, column: 10, scope: !8103)
!8594 = !DILocation(line: 2699, column: 11, scope: !8103)
!8595 = !DILocation(line: 2703, column: 11, scope: !8107)
!8596 = !DILocation(line: 2703, column: 11, scope: !8055)
!8597 = !DILocation(line: 2705, column: 14, scope: !8106)
!8598 = !DILocation(line: 0, scope: !8106)
!8599 = !DILocation(line: 2706, column: 14, scope: !8106)
!8600 = !DILocation(line: 2707, column: 14, scope: !8106)
!8601 = !DILocation(line: 2708, column: 11, scope: !8106)
!8602 = !DILocation(line: 2712, column: 14, scope: !8111)
!8603 = !DILocation(line: 0, scope: !8111)
!8604 = !DILocation(line: 2713, column: 14, scope: !8111)
!8605 = !DILocation(line: 2714, column: 14, scope: !8111)
!8606 = !DILocation(line: 2715, column: 11, scope: !8111)
!8607 = !DILocation(line: 2719, column: 11, scope: !8116)
!8608 = !DILocation(line: 2719, column: 11, scope: !8055)
!8609 = !DILocation(line: 2721, column: 14, scope: !8115)
!8610 = !DILocation(line: 0, scope: !8115)
!8611 = !DILocation(line: 2722, column: 14, scope: !8115)
!8612 = !DILocation(line: 2723, column: 10, scope: !8115)
!8613 = !DILocation(line: 2724, column: 11, scope: !8115)
!8614 = !DILocation(line: 2728, column: 14, scope: !8119)
!8615 = !DILocation(line: 0, scope: !8119)
!8616 = !DILocation(line: 2729, column: 14, scope: !8119)
!8617 = !DILocation(line: 2730, column: 10, scope: !8119)
!8618 = !DILocation(line: 2731, column: 11, scope: !8119)
!8619 = !DILocation(line: 2735, column: 14, scope: !8055)
!8620 = !DILocation(line: 2735, column: 7, scope: !8055)
!8621 = !DILocation(line: 2738, column: 11, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2738, column: 11)
!8623 = !DILocation(line: 2738, column: 11, scope: !8055)
!8624 = !DILocation(line: 2739, column: 9, scope: !8622)
!8625 = !DILocation(line: 2739, column: 2, scope: !8622)
!8626 = !DILocation(line: 2741, column: 9, scope: !8622)
!8627 = !DILocation(line: 2741, column: 2, scope: !8622)
!8628 = !DILocation(line: 2744, column: 14, scope: !8055)
!8629 = !DILocation(line: 2744, column: 7, scope: !8055)
!8630 = !DILocation(line: 2747, column: 14, scope: !8055)
!8631 = !DILocation(line: 2747, column: 7, scope: !8055)
!8632 = !DILocation(line: 2750, column: 11, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2750, column: 11)
!8634 = !DILocation(line: 2750, column: 11, scope: !8055)
!8635 = !DILocation(line: 2751, column: 9, scope: !8633)
!8636 = !DILocation(line: 2751, column: 2, scope: !8633)
!8637 = !DILocation(line: 2753, column: 9, scope: !8633)
!8638 = !DILocation(line: 2753, column: 2, scope: !8633)
!8639 = !DILocation(line: 2756, column: 11, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2756, column: 11)
!8641 = !DILocation(line: 2756, column: 11, scope: !8055)
!8642 = !DILocation(line: 2757, column: 9, scope: !8640)
!8643 = !DILocation(line: 2757, column: 2, scope: !8640)
!8644 = !DILocation(line: 2759, column: 9, scope: !8640)
!8645 = !DILocation(line: 2759, column: 2, scope: !8640)
!8646 = !DILocation(line: 2763, column: 14, scope: !8055)
!8647 = !DILocation(line: 2763, column: 7, scope: !8055)
!8648 = !DILocation(line: 2767, column: 14, scope: !8055)
!8649 = !DILocation(line: 2767, column: 7, scope: !8055)
!8650 = !DILocation(line: 2771, column: 14, scope: !8055)
!8651 = !DILocation(line: 2771, column: 7, scope: !8055)
!8652 = !DILocation(line: 2774, column: 14, scope: !8055)
!8653 = !DILocation(line: 2774, column: 7, scope: !8055)
!8654 = !DILocation(line: 2777, column: 14, scope: !8055)
!8655 = !DILocation(line: 2777, column: 7, scope: !8055)
!8656 = !DILocation(line: 2780, column: 14, scope: !8055)
!8657 = !DILocation(line: 2780, column: 7, scope: !8055)
!8658 = !DILocation(line: 2783, column: 11, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2783, column: 11)
!8660 = !DILocation(line: 2783, column: 11, scope: !8055)
!8661 = !DILocation(line: 2784, column: 9, scope: !8659)
!8662 = !DILocation(line: 2784, column: 2, scope: !8659)
!8663 = !DILocation(line: 2786, column: 9, scope: !8659)
!8664 = !DILocation(line: 2786, column: 2, scope: !8659)
!8665 = !DILocation(line: 2789, column: 11, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2789, column: 11)
!8667 = !DILocation(line: 2789, column: 11, scope: !8055)
!8668 = !DILocation(line: 2790, column: 9, scope: !8666)
!8669 = !DILocation(line: 2790, column: 2, scope: !8666)
!8670 = !DILocation(line: 2792, column: 9, scope: !8666)
!8671 = !DILocation(line: 2792, column: 2, scope: !8666)
!8672 = !DILocation(line: 2795, column: 11, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2795, column: 11)
!8674 = !DILocation(line: 2795, column: 11, scope: !8055)
!8675 = !DILocation(line: 2796, column: 9, scope: !8673)
!8676 = !DILocation(line: 2796, column: 2, scope: !8673)
!8677 = !DILocation(line: 2798, column: 9, scope: !8673)
!8678 = !DILocation(line: 2798, column: 2, scope: !8673)
!8679 = !DILocation(line: 2801, column: 11, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2801, column: 11)
!8681 = !DILocation(line: 2801, column: 11, scope: !8055)
!8682 = !DILocation(line: 2802, column: 9, scope: !8680)
!8683 = !DILocation(line: 2802, column: 2, scope: !8680)
!8684 = !DILocation(line: 2804, column: 9, scope: !8680)
!8685 = !DILocation(line: 2804, column: 2, scope: !8680)
!8686 = !DILocation(line: 2807, column: 14, scope: !8055)
!8687 = !DILocation(line: 2807, column: 7, scope: !8055)
!8688 = !DILocation(line: 2810, column: 14, scope: !8055)
!8689 = !DILocation(line: 2810, column: 7, scope: !8055)
!8690 = !DILocation(line: 2813, column: 14, scope: !8055)
!8691 = !DILocation(line: 2813, column: 7, scope: !8055)
!8692 = !DILocation(line: 2816, column: 14, scope: !8055)
!8693 = !DILocation(line: 2816, column: 7, scope: !8055)
!8694 = !DILocation(line: 2819, column: 14, scope: !8055)
!8695 = !DILocation(line: 2819, column: 7, scope: !8055)
!8696 = !DILocation(line: 2822, column: 14, scope: !8055)
!8697 = !DILocation(line: 2822, column: 7, scope: !8055)
!8698 = !DILocation(line: 2825, column: 14, scope: !8055)
!8699 = !DILocation(line: 2825, column: 7, scope: !8055)
!8700 = !DILocation(line: 2828, column: 14, scope: !8055)
!8701 = !DILocation(line: 2828, column: 7, scope: !8055)
!8702 = !DILocation(line: 2831, column: 14, scope: !8055)
!8703 = !DILocation(line: 2831, column: 7, scope: !8055)
!8704 = !DILocation(line: 2834, column: 14, scope: !8055)
!8705 = !DILocation(line: 2834, column: 7, scope: !8055)
!8706 = !DILocation(line: 2837, column: 14, scope: !8055)
!8707 = !DILocation(line: 2837, column: 7, scope: !8055)
!8708 = !DILocation(line: 2840, column: 7, scope: !8055)
!8709 = !DILocation(line: 2841, column: 11, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2841, column: 11)
!8711 = !DILocation(line: 2841, column: 26, scope: !8710)
!8712 = !DILocation(line: 2841, column: 11, scope: !8055)
!8713 = !DILocation(line: 2842, column: 8, scope: !8710)
!8714 = !DILocation(line: 2842, column: 2, scope: !8710)
!8715 = !DILocation(line: 2843, column: 11, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2843, column: 11)
!8717 = !DILocation(line: 2843, column: 26, scope: !8716)
!8718 = !DILocation(line: 2843, column: 11, scope: !8055)
!8719 = !DILocation(line: 2844, column: 8, scope: !8716)
!8720 = !DILocation(line: 2844, column: 2, scope: !8716)
!8721 = !DILocation(line: 2845, column: 14, scope: !8055)
!8722 = !DILocation(line: 2845, column: 7, scope: !8055)
!8723 = !DILocation(line: 2848, column: 11, scope: !8123)
!8724 = !DILocation(line: 2848, column: 26, scope: !8123)
!8725 = !DILocation(line: 2848, column: 11, scope: !8055)
!8726 = !DILocation(line: 2849, column: 9, scope: !8123)
!8727 = !DILocation(line: 2849, column: 2, scope: !8123)
!8728 = !DILocation(line: 2854, column: 30, scope: !8122)
!8729 = !DILocation(line: 0, scope: !8122)
!8730 = !DILocation(line: 2857, column: 8, scope: !8128)
!8731 = !DILocation(line: 2857, column: 8, scope: !8122)
!8732 = !DILocation(line: 2859, column: 13, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2858, column: 6)
!8734 = !DILocation(line: 2860, column: 13, scope: !8733)
!8735 = !DILocation(line: 2861, column: 6, scope: !8733)
!8736 = !DILocation(line: 2864, column: 35, scope: !8127)
!8737 = !DILocation(line: 0, scope: !8127)
!8738 = !DILocation(line: 2865, column: 35, scope: !8127)
!8739 = !DILocation(line: 2867, column: 19, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 2867, column: 12)
!8741 = !DILocation(line: 2867, column: 40, scope: !8740)
!8742 = !DILocation(line: 2867, column: 30, scope: !8740)
!8743 = !DILocation(line: 2869, column: 19, scope: !8127)
!8744 = !DILocation(line: 2871, column: 17, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 2871, column: 12)
!8746 = !DILocation(line: 2871, column: 12, scope: !8127)
!8747 = !DILocation(line: 2872, column: 8, scope: !8745)
!8748 = !DILocation(line: 2872, column: 3, scope: !8745)
!8749 = !DILocation(line: 2873, column: 13, scope: !8127)
!8750 = !DILocation(line: 2874, column: 18, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 2874, column: 12)
!8752 = !DILocation(line: 2874, column: 12, scope: !8127)
!8753 = !DILocation(line: 2875, column: 8, scope: !8751)
!8754 = !DILocation(line: 2875, column: 3, scope: !8751)
!8755 = !DILocation(line: 2876, column: 13, scope: !8127)
!8756 = !DILocation(line: 2877, column: 12, scope: !8127)
!8757 = !DILocation(line: 2878, column: 8, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 2877, column: 12)
!8759 = !DILocation(line: 2878, column: 3, scope: !8758)
!8760 = !DILocation(line: 2879, column: 13, scope: !8127)
!8761 = !DILocation(line: 2880, column: 12, scope: !8127)
!8762 = !DILocation(line: 2881, column: 8, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 2880, column: 12)
!8764 = !DILocation(line: 2881, column: 3, scope: !8763)
!8765 = !DILocation(line: 2883, column: 9, scope: !8122)
!8766 = !DILocation(line: 2884, column: 11, scope: !8122)
!8767 = !DILocation(line: 2884, column: 4, scope: !8122)
!8768 = !DILocation(line: 2888, column: 32, scope: !8055)
!8769 = !DILocation(line: 2888, column: 13, scope: !8055)
!8770 = !DILocation(line: 2889, column: 12, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2889, column: 11)
!8772 = !DILocation(line: 2889, column: 16, scope: !8771)
!8773 = !DILocation(line: 2889, column: 20, scope: !8771)
!8774 = !DILocation(line: 2889, column: 11, scope: !8055)
!8775 = !DILocation(line: 2892, column: 49, scope: !8055)
!8776 = !DILocation(line: 2892, column: 13, scope: !8055)
!8777 = !DILocation(line: 2894, column: 7, scope: !8055)
!8778 = !DILocation(line: 2897, column: 42, scope: !8055)
!8779 = !DILocation(line: 2898, column: 7, scope: !8055)
!8780 = !DILocation(line: 2897, column: 13, scope: !8055)
!8781 = !DILocation(line: 2897, column: 7, scope: !8055)
!8782 = !DILocation(line: 2902, column: 11, scope: !8133)
!8783 = !DILocation(line: 2902, column: 39, scope: !8133)
!8784 = !DILocation(line: 2902, column: 11, scope: !8055)
!8785 = !DILocation(line: 2907, column: 10, scope: !8132)
!8786 = !DILocation(line: 0, scope: !8132)
!8787 = !DILocation(line: 0, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8789, file: !3, line: 2910, column: 4)
!8789 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 2910, column: 4)
!8790 = !DILocation(line: 0, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 2911, column: 6)
!8792 = !DILocation(line: 2910, column: 4, scope: !8789)
!8793 = !DILocation(line: 0, scope: !8789)
!8794 = !DILocation(line: 2910, column: 4, scope: !8788)
!8795 = !DILocation(line: 2912, column: 14, scope: !8791)
!8796 = !DILocation(line: 2913, column: 13, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 2913, column: 12)
!8798 = !DILocation(line: 2913, column: 12, scope: !8791)
!8799 = !DILocation(line: 2915, column: 8, scope: !8791)
!8800 = !DILocation(line: 2915, column: 28, scope: !8791)
!8801 = distinct !{!8801, !8792, !8802}
!8802 = !DILocation(line: 2916, column: 6, scope: !8789)
!8803 = !DILocation(line: 2918, column: 8, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 2918, column: 8)
!8805 = !DILocation(line: 2918, column: 12, scope: !8804)
!8806 = !DILocation(line: 2918, column: 10, scope: !8804)
!8807 = !DILocation(line: 2918, column: 8, scope: !8132)
!8808 = !DILocation(line: 2921, column: 4, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 2919, column: 6)
!8810 = !DILocation(line: 2920, column: 14, scope: !8809)
!8811 = !DILocation(line: 2923, column: 13, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 2923, column: 12)
!8813 = !DILocation(line: 2923, column: 12, scope: !8809)
!8814 = !DILocation(line: 2926, column: 8, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 2926, column: 8)
!8816 = !DILocation(line: 2926, column: 15, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8815, file: !3, line: 2926, column: 8)
!8818 = !DILocation(line: 2926, column: 19, scope: !8817)
!8819 = !DILocation(line: 2926, column: 17, scope: !8817)
!8820 = !DILocation(line: 2927, column: 3, scope: !8817)
!8821 = !DILocation(line: 2927, column: 23, scope: !8817)
!8822 = !DILocation(line: 2926, column: 60, scope: !8817)
!8823 = !DILocation(line: 2926, column: 8, scope: !8817)
!8824 = distinct !{!8824, !8814, !8825}
!8825 = !DILocation(line: 2927, column: 25, scope: !8815)
!8826 = !DILocation(line: 2941, column: 13, scope: !8136)
!8827 = !DILocation(line: 0, scope: !8136)
!8828 = !DILocation(line: 2942, column: 6, scope: !8139)
!8829 = !DILocation(line: 2942, column: 6, scope: !8136)
!8830 = !DILocation(line: 2944, column: 31, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 2943, column: 4)
!8832 = !DILocation(line: 2944, column: 12, scope: !8831)
!8833 = !DILocation(line: 2945, column: 11, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 2945, column: 10)
!8835 = !DILocation(line: 2945, column: 10, scope: !8831)
!8836 = !DILocation(line: 2950, column: 38, scope: !8138)
!8837 = !DILocation(line: 2950, column: 17, scope: !8138)
!8838 = !DILocation(line: 0, scope: !8138)
!8839 = !DILocation(line: 2952, column: 15, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 2952, column: 10)
!8841 = !DILocation(line: 2952, column: 10, scope: !8138)
!8842 = !DILocation(line: 2955, column: 6, scope: !8138)
!8843 = !DILocation(line: 2957, column: 15, scope: !8138)
!8844 = !DILocation(line: 2957, column: 12, scope: !8138)
!8845 = !DILocation(line: 2958, column: 4, scope: !8139)
!8846 = !DILocation(line: 2959, column: 2, scope: !8136)
!8847 = !DILocation(line: 2996, column: 11, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2996, column: 11)
!8849 = !DILocation(line: 2997, column: 4, scope: !8848)
!8850 = !DILocation(line: 2997, column: 7, scope: !8848)
!8851 = !DILocation(line: 2996, column: 11, scope: !8055)
!8852 = !DILocation(line: 2999, column: 8, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 2999, column: 8)
!8854 = distinct !DILexicalBlock(scope: !8848, file: !3, line: 2998, column: 2)
!8855 = !DILocation(line: 2999, column: 8, scope: !8854)
!8856 = !DILocation(line: 3000, column: 12, scope: !8853)
!8857 = !DILocation(line: 3000, column: 6, scope: !8853)
!8858 = !DILocation(line: 3002, column: 12, scope: !8853)
!8859 = !DILocation(line: 0, scope: !8853)
!8860 = !DILocation(line: 3003, column: 8, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 3003, column: 8)
!8862 = !DILocation(line: 3003, column: 8, scope: !8854)
!8863 = !DILocation(line: 3004, column: 12, scope: !8861)
!8864 = !DILocation(line: 3004, column: 6, scope: !8861)
!8865 = !DILocation(line: 3006, column: 12, scope: !8861)
!8866 = !DILocation(line: 0, scope: !8861)
!8867 = !DILocation(line: 3007, column: 10, scope: !8854)
!8868 = !DILocation(line: 3008, column: 11, scope: !8854)
!8869 = !DILocation(line: 3008, column: 4, scope: !8854)
!8870 = !DILocation(line: 3013, column: 11, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 3013, column: 11)
!8872 = !DILocation(line: 3014, column: 4, scope: !8871)
!8873 = !DILocation(line: 3014, column: 7, scope: !8871)
!8874 = !DILocation(line: 3013, column: 11, scope: !8055)
!8875 = !DILocation(line: 3016, column: 8, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 3016, column: 8)
!8877 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 3015, column: 2)
!8878 = !DILocation(line: 3016, column: 8, scope: !8877)
!8879 = !DILocation(line: 3017, column: 12, scope: !8876)
!8880 = !DILocation(line: 3017, column: 6, scope: !8876)
!8881 = !DILocation(line: 3019, column: 12, scope: !8876)
!8882 = !DILocation(line: 0, scope: !8876)
!8883 = !DILocation(line: 3020, column: 8, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 3020, column: 8)
!8885 = !DILocation(line: 3020, column: 8, scope: !8877)
!8886 = !DILocation(line: 3021, column: 12, scope: !8884)
!8887 = !DILocation(line: 3021, column: 6, scope: !8884)
!8888 = !DILocation(line: 3023, column: 12, scope: !8884)
!8889 = !DILocation(line: 0, scope: !8884)
!8890 = !DILocation(line: 3024, column: 11, scope: !8877)
!8891 = !DILocation(line: 3024, column: 4, scope: !8877)
!8892 = !DILocation(line: 3029, column: 11, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 3029, column: 11)
!8894 = !DILocation(line: 3030, column: 4, scope: !8893)
!8895 = !DILocation(line: 3030, column: 7, scope: !8893)
!8896 = !DILocation(line: 3029, column: 11, scope: !8055)
!8897 = !DILocation(line: 3032, column: 8, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 3032, column: 8)
!8899 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 3031, column: 2)
!8900 = !DILocation(line: 3032, column: 8, scope: !8899)
!8901 = !DILocation(line: 3033, column: 12, scope: !8898)
!8902 = !DILocation(line: 3033, column: 6, scope: !8898)
!8903 = !DILocation(line: 3035, column: 12, scope: !8898)
!8904 = !DILocation(line: 0, scope: !8898)
!8905 = !DILocation(line: 3036, column: 11, scope: !8899)
!8906 = !DILocation(line: 3036, column: 4, scope: !8899)
!8907 = !DILocation(line: 3049, column: 1, scope: !8040)
!8908 = distinct !DISubprogram(name: "floor_sdiv_adjust", scope: !3, file: !3, line: 2117, type: !8909, scopeLine: 2118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8911)
!8909 = !DISubroutineType(types: !8910)
!8910 = !{!900, !5, !900, !900}
!8911 = !{!8912, !8913, !8914}
!8912 = !DILocalVariable(name: "mode", arg: 1, scope: !8908, file: !3, line: 2117, type: !5)
!8913 = !DILocalVariable(name: "mod", arg: 2, scope: !8908, file: !3, line: 2117, type: !900)
!8914 = !DILocalVariable(name: "op1", arg: 3, scope: !8908, file: !3, line: 2117, type: !900)
!8915 = !DILocation(line: 0, scope: !8908)
!8916 = !DILocation(line: 2120, column: 10, scope: !8908)
!8917 = !DILocation(line: 2120, column: 3, scope: !8908)
!8918 = distinct !DISubprogram(name: "ceil_udiv_adjust", scope: !3, file: !3, line: 2149, type: !8909, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8919)
!8919 = !{!8920, !8921, !8922}
!8920 = !DILocalVariable(name: "mode", arg: 1, scope: !8918, file: !3, line: 2149, type: !5)
!8921 = !DILocalVariable(name: "mod", arg: 2, scope: !8918, file: !3, line: 2149, type: !900)
!8922 = !DILocalVariable(name: "op1", arg: 3, scope: !8918, file: !3, line: 2149, type: !900)
!8923 = !DILocation(line: 0, scope: !8918)
!8924 = !DILocation(line: 2152, column: 10, scope: !8918)
!8925 = !DILocation(line: 2152, column: 3, scope: !8918)
!8926 = distinct !DISubprogram(name: "ceil_sdiv_adjust", scope: !3, file: !3, line: 2133, type: !8909, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8927)
!8927 = !{!8928, !8929, !8930}
!8928 = !DILocalVariable(name: "mode", arg: 1, scope: !8926, file: !3, line: 2133, type: !5)
!8929 = !DILocalVariable(name: "mod", arg: 2, scope: !8926, file: !3, line: 2133, type: !900)
!8930 = !DILocalVariable(name: "op1", arg: 3, scope: !8926, file: !3, line: 2133, type: !900)
!8931 = !DILocation(line: 0, scope: !8926)
!8932 = !DILocation(line: 2136, column: 10, scope: !8926)
!8933 = !DILocation(line: 2136, column: 3, scope: !8926)
!8934 = distinct !DISubprogram(name: "round_udiv_adjust", scope: !3, file: !3, line: 2184, type: !8909, scopeLine: 2185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8935)
!8935 = !{!8936, !8937, !8938}
!8936 = !DILocalVariable(name: "mode", arg: 1, scope: !8934, file: !3, line: 2184, type: !5)
!8937 = !DILocalVariable(name: "mod", arg: 2, scope: !8934, file: !3, line: 2184, type: !900)
!8938 = !DILocalVariable(name: "op1", arg: 3, scope: !8934, file: !3, line: 2184, type: !900)
!8939 = !DILocation(line: 0, scope: !8934)
!8940 = !DILocation(line: 2187, column: 10, scope: !8934)
!8941 = !DILocation(line: 2187, column: 3, scope: !8934)
!8942 = distinct !DISubprogram(name: "round_sdiv_adjust", scope: !3, file: !3, line: 2161, type: !8909, scopeLine: 2162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8943)
!8943 = !{!8944, !8945, !8946}
!8944 = !DILocalVariable(name: "mode", arg: 1, scope: !8942, file: !3, line: 2161, type: !5)
!8945 = !DILocalVariable(name: "mod", arg: 2, scope: !8942, file: !3, line: 2161, type: !900)
!8946 = !DILocalVariable(name: "op1", arg: 3, scope: !8942, file: !3, line: 2161, type: !900)
!8947 = !DILocation(line: 0, scope: !8942)
!8948 = !DILocation(line: 2166, column: 10, scope: !8942)
!8949 = !DILocation(line: 2166, column: 3, scope: !8942)
!8950 = distinct !DISubprogram(name: "convert_debug_memory_address", scope: !3, file: !3, line: 2197, type: !8951, scopeLine: 2198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8953)
!8951 = !DISubroutineType(types: !8952)
!8952 = !{!900, !5, !900}
!8953 = !{!8954, !8955, !8956}
!8954 = !DILocalVariable(name: "mode", arg: 1, scope: !8950, file: !3, line: 2197, type: !5)
!8955 = !DILocalVariable(name: "x", arg: 2, scope: !8950, file: !3, line: 2197, type: !900)
!8956 = !DILocalVariable(name: "xmode", scope: !8950, file: !3, line: 2199, type: !5)
!8957 = !DILocation(line: 0, scope: !8950)
!8958 = !DILocation(line: 2199, column: 29, scope: !8950)
!8959 = !DILocation(line: 2202, column: 3, scope: !8950)
!8960 = !DILocation(line: 2203, column: 3, scope: !8950)
!8961 = !DILocation(line: 2222, column: 3, scope: !8950)
!8962 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !135, file: !135, line: 1537, type: !8963, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8967)
!8963 = !DISubroutineType(types: !8964)
!8964 = !{!7, !8965}
!8965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8966, size: 64)
!8966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1753)
!8967 = !{!8968}
!8968 = !DILocalVariable(name: "vec_", arg: 1, scope: !8962, file: !135, line: 1537, type: !8965)
!8969 = !DILocation(line: 0, scope: !8962)
!8970 = !DILocation(line: 1537, column: 1, scope: !8962)
!8971 = distinct !DISubprogram(name: "VEC_constructor_elt_base_index", scope: !135, file: !135, line: 1537, type: !8972, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8976)
!8972 = !DISubroutineType(types: !8973)
!8973 = !{!8974, !8975, !7}
!8974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!8975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!8976 = !{!8977, !8978}
!8977 = !DILocalVariable(name: "vec_", arg: 1, scope: !8971, file: !135, line: 1537, type: !8975)
!8978 = !DILocalVariable(name: "ix_", arg: 2, scope: !8971, file: !135, line: 1537, type: !7)
!8979 = !DILocation(line: 0, scope: !8971)
!8980 = !DILocation(line: 1537, column: 1, scope: !8971)
