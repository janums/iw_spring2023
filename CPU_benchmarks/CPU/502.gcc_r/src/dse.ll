; ModuleID = 'dse.bc'
source_filename = "dse.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.bb_info = type { %struct.insn_info*, i8, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.insn_info = type { i8, i8, i8, i8, i8, %struct.rtx_def*, %struct.store_info*, %struct.read_info*, %struct.insn_info*, %struct.insn_info* }
%struct.store_info = type { i8, i8, i32, %struct.cselib_val_struct*, %struct.rtx_def*, %struct.rtx_def*, i32, i64, i64, %union.anon.0, %struct.store_info*, %struct.rtx_def*, %struct.rtx_def*, %struct.insn_info* }
%struct.cselib_val_struct = type { i32, i32, %struct.rtx_def*, %struct.elt_loc_list*, %struct.elt_list*, %struct.cselib_val_struct* }
%struct.elt_loc_list = type { %struct.elt_loc_list*, %struct.rtx_def*, %struct.rtx_def* }
%struct.elt_list = type { %struct.elt_list*, %struct.cselib_val_struct* }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { %struct.bitmap_head_def*, i32 }
%struct.read_info = type { i32, i32, i32, i32, %struct.rtx_def*, %struct.read_info* }
%struct.group_info = type { %struct.rtx_def*, i32, i8, i8, %struct.rtx_def*, %struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32 }
%struct.VEC_group_info_t_heap = type { %struct.VEC_group_info_t_base }
%struct.VEC_group_info_t_base = type { i32, i32, [1 x %struct.group_info*] }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.deferred_change = type { %struct.rtx_def**, %struct.rtx_def*, %struct.deferred_change* }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.optab_d = type { i32, i8*, i8, void (%struct.optab_d*, i8*, i8, i32)*, [87 x %struct.optab_handlers] }
%struct.optab_handlers = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.clear_alias_mode_holder = type { i32, i32 }
%struct.df_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.sbitmap_iterator = type { i64*, i32, i32, i32, i64 }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.insn_size = type { i32, %struct.rtx_def* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@clear_alias_sets = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !0
@disqualified_clear_alias_sets = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1977
@clear_alias_mode_table = internal unnamed_addr global %struct.htab* null, align 8, !dbg !1952
@.str = private unnamed_addr constant [22 x i8] c"clear_alias_mode_pool\00", align 1
@clear_alias_mode_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !1954
@.str.1 = private unnamed_addr constant [6 x i8] c"dse.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"dse1\00", align 1
@pass_rtl_dse1 = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8 ()* @gate_dse1, i32 ()* @rest_of_handle_dse, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 123, i32 0, i32 0, i32 0, i32 0, i32 132099 } }, align 8, !dbg !1922
@.str.4 = private unnamed_addr constant [5 x i8] c"dse2\00", align 1
@pass_rtl_dse2 = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8 ()* @gate_dse2, i32 ()* @rest_of_handle_dse, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 124, i32 0, i32 0, i32 0, i32 0, i32 132099 } }, align 8, !dbg !1950
@optimize = external dso_local local_unnamed_addr global i32, align 4
@flag_dse = external dso_local local_unnamed_addr global i32, align 4
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.5 = private unnamed_addr constant [25 x i8] c"doing global processing\0A\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"doing global spill processing\0A\00", align 1
@.str.7 = private unnamed_addr constant [72 x i8] c"dse: local deletions = %d, global deletions = %d, spill deletions = %d\0A\00", align 1
@locally_deleted = internal unnamed_addr global i32 0, align 4, !dbg !2015
@globally_deleted = internal unnamed_addr global i32 0, align 4, !dbg !2017
@spill_deleted = internal unnamed_addr global i32 0, align 4, !dbg !2019
@scratch = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1979
@.str.8 = private unnamed_addr constant [20 x i8] c"rtx_store_info_pool\00", align 1
@rtx_store_info_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !1981
@.str.9 = private unnamed_addr constant [15 x i8] c"read_info_pool\00", align 1
@read_info_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !1983
@.str.10 = private unnamed_addr constant [15 x i8] c"insn_info_pool\00", align 1
@insn_info_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !1985
@.str.11 = private unnamed_addr constant [13 x i8] c"bb_info_pool\00", align 1
@bb_info_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !1987
@.str.12 = private unnamed_addr constant [20 x i8] c"rtx_group_info_pool\00", align 1
@rtx_group_info_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !1989
@.str.13 = private unnamed_addr constant [21 x i8] c"deferred_change_pool\00", align 1
@deferred_change_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !1991
@rtx_group_table = internal unnamed_addr global %struct.htab* null, align 8, !dbg !1993
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@bb_table = internal unnamed_addr global %struct.bb_info** null, align 8, !dbg !1995
@rtx_group_next_id = internal unnamed_addr global i32 0, align 4, !dbg !1997
@stores_off_frame_dead_at_return = internal unnamed_addr global i8 0, align 1, !dbg !1999
@clear_alias_group = internal unnamed_addr global %struct.group_info* null, align 8, !dbg !2003
@rtx_group_vec = internal global %struct.VEC_group_info_t_heap* null, align 8, !dbg !2001
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@all_blocks = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2005
@cselib_discard_hook = external dso_local local_unnamed_addr global void (%struct.cselib_val_struct*)*, align 8
@.str.14 = private unnamed_addr constant [20 x i8] c"cse_store_info_pool\00", align 1
@cse_store_info_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2007
@active_local_stores = internal unnamed_addr global %struct.insn_info* null, align 8, !dbg !2009
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@deferred_change_list = internal unnamed_addr global %struct.deferred_change* null, align 8, !dbg !2011
@.str.15 = private unnamed_addr constant [91 x i8] c"Locally deleting insn %d because insn %d stores the same value and couldn't be eliminated\0A\00", align 1
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@.str.16 = private unnamed_addr constant [21 x i8] c"\0A**scanning insn=%d\0A\00", align 1
@block_clear_fn = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.17 = private unnamed_addr constant [12 x i8] c"%s call %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"memset\00", align 1
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@.str.20 = private unnamed_addr constant [21 x i8] c"removing from active\00", align 1
@.str.21 = private unnamed_addr constant [34 x i8] c"handling memset as BLKmode store\0A\00", align 1
@.str.22 = private unnamed_addr constant [37 x i8] c"mems_found = %d, cannot_delete = %s\0A\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.25 = private unnamed_addr constant [41 x i8] c" adding wild read, volatile or barrier.\0A\00", align 1
@.str.26 = private unnamed_addr constant [43 x i8] c" adding wild read, canon_address failure.\0A\00", align 1
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@.str.27 = private unnamed_addr constant [27 x i8] c" processing spill load %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [36 x i8] c" processing const load gid=%d[BLK]\0A\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c" processing const load gid=%d[%d..%d)\0A\00", align 1
@.str.30 = private unnamed_addr constant [29 x i8] c" processing cselib load mem:\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32 = private unnamed_addr constant [41 x i8] c" processing cselib load against insn %d\0A\00", align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.33 = private unnamed_addr constant [20 x i8] c"found alias set %d\0A\00", align 1
@.str.34 = private unnamed_addr constant [42 x i8] c"disqualifying alias set %d, (%s) != (%s)\0A\00", align 1
@mode_name = external dso_local local_unnamed_addr constant [87 x i8*], align 16
@.str.35 = private unnamed_addr constant [8 x i8] c"  mem: \00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"\0A   after cselib_expand address: \00", align 1
@.str.37 = private unnamed_addr constant [30 x i8] c"\0A   after canon_rtx address: \00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"  gid=%d offset=%d \0A\00", align 1
@.str.39 = private unnamed_addr constant [41 x i8] c" no cselib val - should be a wild read.\0A\00", align 1
@.str.40 = private unnamed_addr constant [41 x i8] c"  varying cselib base=%u:%u offset = %d\0A\00", align 1
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@pic_offset_table_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@.str.41 = private unnamed_addr constant [71 x i8] c"trying to replace %smode load in insn %d from %smode store in insn %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [44 x i8] c" -- could not extract bits of stored value\0A\00", align 1
@.str.43 = private unnamed_addr constant [64 x i8] c"abandoning replacement because sequence clobbers live hardregs:\00", align 1
@.str.44 = private unnamed_addr constant [34 x i8] c" -- replaced the loaded MEM with \00", align 1
@.str.45 = private unnamed_addr constant [35 x i8] c" -- replacing the loaded MEM with \00", align 1
@.str.46 = private unnamed_addr constant [32 x i8] c" led to an invalid instruction\0A\00", align 1
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@optab_table = external dso_local global [159 x %struct.optab_d], align 16
@mode_wider = external dso_local local_unnamed_addr constant [87 x i8], align 16
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@.str.47 = private unnamed_addr constant [15 x i8] c"%s insn=%d %s\0A\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"has store\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"naked\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.50 = private unnamed_addr constant [52 x i8] c" adding wild read for (clobber (mem:BLK (scratch))\0A\00", align 1
@.str.51 = private unnamed_addr constant [32 x i8] c" processing spill store %d(%s)\0A\00", align 1
@.str.52 = private unnamed_addr constant [45 x i8] c" processing const base store gid=%d[%d..%d)\0A\00", align 1
@.str.53 = private unnamed_addr constant [35 x i8] c" processing cselib store [%d..%d)\0A\00", align 1
@flag_float_store = external dso_local local_unnamed_addr global i32, align 4
@.str.54 = private unnamed_addr constant [48 x i8] c"    trying spill store in insn=%d alias_set=%d\0A\00", align 1
@.str.55 = private unnamed_addr constant [44 x i8] c"    trying store in insn=%d gid=%d[%d..%d)\0A\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.57 = private unnamed_addr constant [26 x i8] c"Locally deleting insn %d \00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"alias set %d\0A\00", align 1
@.str.59 = private unnamed_addr constant [27 x i8] c"group %d is frame related \00", align 1
@.str.60 = private unnamed_addr constant [18 x i8] c"group %d(%d+%d): \00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"n \00", align 1
@.str.62 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c"p \00", align 1
@current_position = internal unnamed_addr global i32 0, align 4, !dbg !2013
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.64 = private unnamed_addr constant [44 x i8] c"\0A\0A*** Global dataflow info after analysis.\0A\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"  in:   \00", align 1
@.str.66 = private unnamed_addr constant [19 x i8] c"  in:   *MISSING*\0A\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c"  gen:  \00", align 1
@.str.68 = private unnamed_addr constant [19 x i8] c"  gen:  *MISSING*\0A\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"  kill: \00", align 1
@.str.70 = private unnamed_addr constant [19 x i8] c"  kill: *MISSING*\0A\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"  out:  \00", align 1
@.str.72 = private unnamed_addr constant [20 x i8] c"  out:  *MISSING*\0A\0A\00", align 1
@.str.73 = private unnamed_addr constant [29 x i8] c"starting to process insn %d\0A\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"  v:  \00", align 1
@.str.75 = private unnamed_addr constant [20 x i8] c"i = %d, index = %d\0A\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"failing at i = %d\0A\00", align 1
@.str.77 = private unnamed_addr constant [11 x i8] c"wild read\0A\00", align 1
@.str.78 = private unnamed_addr constant [14 x i8] c"regular read\0A\00", align 1
@.str.79 = private unnamed_addr constant [31 x i8] c"clear alias sets              \00", align 1
@.str.80 = private unnamed_addr constant [31 x i8] c"disqualified clear alias sets \00", align 1
@.str.81 = private unnamed_addr constant [24 x i8] c"Spill deleting insn %d\0A\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2025 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2038, metadata !DIExpression()), !dbg !2040
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2039, metadata !DIExpression()), !dbg !2040
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2041
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2042
  ret i32 %call, !dbg !2043
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2044 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2048
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2049
  ret i32 %call, !dbg !2050
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2051 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2105, metadata !DIExpression()), !dbg !2106
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2107
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2107
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2107
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2107
  %cmp = icmp uge i8* %0, %1, !dbg !2107
  %conv1 = zext i1 %cmp to i64, !dbg !2107
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2107
  %tobool = icmp eq i64 %expval, 0, !dbg !2107
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2107

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2107
  br label %cond.end, !dbg !2107

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2107
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2107
  %2 = load i8, i8* %0, align 1, !dbg !2107
  %conv3 = zext i8 %2 to i32, !dbg !2107
  br label %cond.end, !dbg !2107

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2107
  ret i32 %cond, !dbg !2108
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2109 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2111, metadata !DIExpression()), !dbg !2112
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2113
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2113
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2113
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2113
  %cmp = icmp uge i8* %0, %1, !dbg !2113
  %conv1 = zext i1 %cmp to i64, !dbg !2113
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2113
  %tobool = icmp eq i64 %expval, 0, !dbg !2113
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2113

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2113
  br label %cond.end, !dbg !2113

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2113
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2113
  %2 = load i8, i8* %0, align 1, !dbg !2113
  %conv3 = zext i8 %2 to i32, !dbg !2113
  br label %cond.end, !dbg !2113

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2113
  ret i32 %cond, !dbg !2114
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2115 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2116
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2116
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2116
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2116
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2116
  %cmp = icmp uge i8* %1, %2, !dbg !2116
  %conv1 = zext i1 %cmp to i64, !dbg !2116
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2116
  %tobool = icmp eq i64 %expval, 0, !dbg !2116
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2116

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2116
  br label %cond.end, !dbg !2116

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2116
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2116
  %3 = load i8, i8* %1, align 1, !dbg !2116
  %conv3 = zext i8 %3 to i32, !dbg !2116
  br label %cond.end, !dbg !2116

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2116
  ret i32 %cond, !dbg !2117
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2118 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2122, metadata !DIExpression()), !dbg !2123
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2124
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2125
  ret i32 %call, !dbg !2126
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2127 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2131, metadata !DIExpression()), !dbg !2133
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2132, metadata !DIExpression()), !dbg !2133
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2134
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2134
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2134
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2134
  %cmp = icmp uge i8* %0, %1, !dbg !2134
  %conv1 = zext i1 %cmp to i64, !dbg !2134
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2134
  %tobool = icmp eq i64 %expval, 0, !dbg !2134
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2134

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2134
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2134
  br label %cond.end, !dbg !2134

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2134
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2134
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2134
  store i8 %conv2, i8* %0, align 1, !dbg !2134
  %conv6 = and i32 %__c, 255, !dbg !2134
  br label %cond.end, !dbg !2134

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2134
  ret i32 %cond, !dbg !2135
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2136 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2138, metadata !DIExpression()), !dbg !2140
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2139, metadata !DIExpression()), !dbg !2140
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2141
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2141
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2141
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2141
  %cmp = icmp uge i8* %0, %1, !dbg !2141
  %conv1 = zext i1 %cmp to i64, !dbg !2141
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2141
  %tobool = icmp eq i64 %expval, 0, !dbg !2141
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2141

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2141
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2141
  br label %cond.end, !dbg !2141

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2141
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2141
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2141
  store i8 %conv2, i8* %0, align 1, !dbg !2141
  %conv6 = and i32 %__c, 255, !dbg !2141
  br label %cond.end, !dbg !2141

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2141
  ret i32 %cond, !dbg !2142
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2143 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2145, metadata !DIExpression()), !dbg !2146
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2147
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2147
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2147
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2147
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2147
  %cmp = icmp uge i8* %1, %2, !dbg !2147
  %conv1 = zext i1 %cmp to i64, !dbg !2147
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2147
  %tobool = icmp eq i64 %expval, 0, !dbg !2147
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2147

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2147
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2147
  br label %cond.end, !dbg !2147

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2147
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2147
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2147
  store i8 %conv4, i8* %1, align 1, !dbg !2147
  %conv6 = and i32 %__c, 255, !dbg !2147
  br label %cond.end, !dbg !2147

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2147
  ret i32 %cond, !dbg !2148
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2149 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2155, metadata !DIExpression()), !dbg !2158
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2156, metadata !DIExpression()), !dbg !2158
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2157, metadata !DIExpression()), !dbg !2158
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2159
  ret i64 %call, !dbg !2160
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2161 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2163, metadata !DIExpression()), !dbg !2164
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2165
  %0 = load i32, i32* %_flags, align 8, !dbg !2165
  %and = lshr i32 %0, 4, !dbg !2165
  %and.lobit = and i32 %and, 1, !dbg !2165
  ret i32 %and.lobit, !dbg !2166
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2167 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2169, metadata !DIExpression()), !dbg !2170
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2171
  %0 = load i32, i32* %_flags, align 8, !dbg !2171
  %and = lshr i32 %0, 5, !dbg !2171
  %and.lobit = and i32 %and, 1, !dbg !2171
  ret i32 %and.lobit, !dbg !2172
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2173 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2176, metadata !DIExpression()), !dbg !2177
  %__c.off = add i32 %__c, 128, !dbg !2178
  %0 = icmp ult i32 %__c.off, 384, !dbg !2178
  br i1 %0, label %cond.true, label %cond.end, !dbg !2178

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2179
  %1 = load i32*, i32** %call, align 8, !dbg !2180
  %idxprom = sext i32 %__c to i64, !dbg !2181
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2181
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2181
  br label %cond.end, !dbg !2182

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2182
  ret i32 %cond, !dbg !2183
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2184 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2186, metadata !DIExpression()), !dbg !2187
  %__c.off = add i32 %__c, 128, !dbg !2188
  %0 = icmp ult i32 %__c.off, 384, !dbg !2188
  br i1 %0, label %cond.true, label %cond.end, !dbg !2188

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2189
  %1 = load i32*, i32** %call, align 8, !dbg !2190
  %idxprom = sext i32 %__c to i64, !dbg !2191
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2191
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2191
  br label %cond.end, !dbg !2192

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2192
  ret i32 %cond, !dbg !2193
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2194 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2199, metadata !DIExpression()), !dbg !2200
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2201
  %conv = trunc i64 %call to i32, !dbg !2202
  ret i32 %conv, !dbg !2203
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2204 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2208, metadata !DIExpression()), !dbg !2209
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2210
  ret i64 %call, !dbg !2211
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2212 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2217, metadata !DIExpression()), !dbg !2218
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2219
  ret i64 %call, !dbg !2220
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2221 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2227, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2228, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2229, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2230, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2231, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i64 0, metadata !2232, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2233, metadata !DIExpression()), !dbg !2237
  br label %while.cond, !dbg !2238

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2239
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2237
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2233, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2232, metadata !DIExpression()), !dbg !2237
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2240
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2238

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2241
  %div = lshr i64 %add, 1, !dbg !2243
  call void @llvm.dbg.value(metadata i64 %div, metadata !2234, metadata !DIExpression()), !dbg !2237
  %mul = mul i64 %div, %__size, !dbg !2244
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2245
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2235, metadata !DIExpression()), !dbg !2237
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2246
  call void @llvm.dbg.value(metadata i32 %call, metadata !2236, metadata !DIExpression()), !dbg !2237
  %cmp1 = icmp slt i32 %call, 0, !dbg !2247
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2249

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2250
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2252

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2253
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2232, metadata !DIExpression()), !dbg !2237
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2237
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2237
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2233, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2232, metadata !DIExpression()), !dbg !2237
  br label %while.cond, !dbg !2238, !llvm.loop !2254

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2237
  ret i8* %retval.0, !dbg !2256
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2257 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2263, metadata !DIExpression()), !dbg !2264
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2265
  ret double %call, !dbg !2266
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2267 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2276, metadata !DIExpression()), !dbg !2279
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2277, metadata !DIExpression()), !dbg !2279
  call void @llvm.dbg.value(metadata i32 %base, metadata !2278, metadata !DIExpression()), !dbg !2279
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2280
  ret i64 %call, !dbg !2281
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2282 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2288, metadata !DIExpression()), !dbg !2291
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2289, metadata !DIExpression()), !dbg !2291
  call void @llvm.dbg.value(metadata i32 %base, metadata !2290, metadata !DIExpression()), !dbg !2291
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2292
  ret i64 %call, !dbg !2293
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2294 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2305, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2306, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %base, metadata !2307, metadata !DIExpression()), !dbg !2308
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2309
  ret i64 %call, !dbg !2310
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2311 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2315, metadata !DIExpression()), !dbg !2318
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2316, metadata !DIExpression()), !dbg !2318
  call void @llvm.dbg.value(metadata i32 %base, metadata !2317, metadata !DIExpression()), !dbg !2318
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2319
  ret i64 %call, !dbg !2320
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2321 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2361, metadata !DIExpression()), !dbg !2363
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2362, metadata !DIExpression()), !dbg !2363
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2364
  ret i32 %call, !dbg !2365
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2366 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2368, metadata !DIExpression()), !dbg !2370
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2369, metadata !DIExpression()), !dbg !2370
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2371
  ret i32 %call, !dbg !2372
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2373 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2377, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2378, metadata !DIExpression()), !dbg !2379
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2380
  ret i32 %call, !dbg !2381
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2382 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2386, metadata !DIExpression()), !dbg !2390
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2387, metadata !DIExpression()), !dbg !2390
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2388, metadata !DIExpression()), !dbg !2390
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2389, metadata !DIExpression()), !dbg !2390
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2391
  ret i32 %call, !dbg !2392
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2393 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2397, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2398, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2399, metadata !DIExpression()), !dbg !2400
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2399, metadata !DIExpression(DW_OP_deref)), !dbg !2400
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2401
  ret i32 %call, !dbg !2402
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2403 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2407, metadata !DIExpression()), !dbg !2411
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2408, metadata !DIExpression()), !dbg !2411
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2409, metadata !DIExpression()), !dbg !2411
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2410, metadata !DIExpression()), !dbg !2411
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2410, metadata !DIExpression(DW_OP_deref)), !dbg !2411
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2412
  ret i32 %call, !dbg !2413
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2414 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2438, metadata !DIExpression()), !dbg !2440
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2439, metadata !DIExpression()), !dbg !2440
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2441
  ret i32 %call, !dbg !2442
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2443 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2445, metadata !DIExpression()), !dbg !2447
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2446, metadata !DIExpression()), !dbg !2447
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2448
  ret i32 %call, !dbg !2449
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2450 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2454, metadata !DIExpression()), !dbg !2456
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2455, metadata !DIExpression()), !dbg !2456
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2457
  ret i32 %call, !dbg !2458
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2459 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2463, metadata !DIExpression()), !dbg !2467
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2464, metadata !DIExpression()), !dbg !2467
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2465, metadata !DIExpression()), !dbg !2467
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2466, metadata !DIExpression()), !dbg !2467
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2468
  ret i32 %call, !dbg !2469
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dse_record_singleton_alias_set(i32 %alias_set, i32 %mode) local_unnamed_addr #5 !dbg !2470 {
entry:
  %tmp_holder = alloca %struct.clear_alias_mode_holder, align 4
  call void @llvm.dbg.value(metadata i32 %alias_set, metadata !2474, metadata !DIExpression()), !dbg !2479
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2475, metadata !DIExpression()), !dbg !2479
  %0 = bitcast %struct.clear_alias_mode_holder* %tmp_holder to i8*, !dbg !2480
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2480
  %call = tail call fastcc zeroext i8 @gate_dse() #8, !dbg !2481
  %tobool = icmp ne i8 %call, 0, !dbg !2481
  %tobool2 = icmp ne i32 %alias_set, 0, !dbg !2483
  %or.cond = and i1 %tobool, %tobool2, !dbg !2484
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !2484

if.end:                                           ; preds = %entry
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !2485
  %tobool3 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !2485
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !2487

if.then4:                                         ; preds = %if.end
  %call5 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2488
  store %struct.bitmap_head_def* %call5, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !2490
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2491
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** @disqualified_clear_alias_sets, align 8, !dbg !2492
  %call7 = tail call %struct.htab* @htab_create(i64 11, i32 (i8*)* nonnull @clear_alias_mode_hash, i32 (i8*, i8*)* nonnull @clear_alias_mode_eq, void (i8*)* null) #6, !dbg !2493
  store %struct.htab* %call7, %struct.htab** @clear_alias_mode_table, align 8, !dbg !2494
  %call8 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i64 8, i64 100) #6, !dbg !2495
  store %struct.alloc_pool_def* %call8, %struct.alloc_pool_def** @clear_alias_mode_pool, align 8, !dbg !2496
  %.pre = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !2497
  br label %if.end9, !dbg !2498

if.end9:                                          ; preds = %if.end, %if.then4
  %2 = phi %struct.bitmap_head_def* [ %1, %if.end ], [ %.pre, %if.then4 ], !dbg !2497
  %call10 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %2, i32 %alias_set) #6, !dbg !2499
  %alias_set11 = getelementptr inbounds %struct.clear_alias_mode_holder, %struct.clear_alias_mode_holder* %tmp_holder, i64 0, i32 0, !dbg !2500
  store i32 %alias_set, i32* %alias_set11, align 4, !dbg !2501
  %3 = load %struct.htab*, %struct.htab** @clear_alias_mode_table, align 8, !dbg !2502
  %call12 = call i8** @htab_find_slot(%struct.htab* %3, i8* nonnull %0, i32 1) #6, !dbg !2503
  call void @llvm.dbg.value(metadata i8** %call12, metadata !2478, metadata !DIExpression()), !dbg !2479
  %4 = load i8*, i8** %call12, align 8, !dbg !2504
  %cmp = icmp eq i8* %4, null, !dbg !2504
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2504

cond.true:                                        ; preds = %if.end9
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32 2968, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2504
  br label %cond.end, !dbg !2504

cond.end:                                         ; preds = %if.end9, %cond.true
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @clear_alias_mode_pool, align 8, !dbg !2505
  %call13 = call i8* @pool_alloc(%struct.alloc_pool_def* %5) #6, !dbg !2506
  call void @llvm.dbg.value(metadata i8* %call13, metadata !2477, metadata !DIExpression()), !dbg !2479
  store i8* %call13, i8** %call12, align 8, !dbg !2507
  %alias_set14 = bitcast i8* %call13 to i32*, !dbg !2508
  store i32 %alias_set, i32* %alias_set14, align 4, !dbg !2509
  %mode15 = getelementptr inbounds i8, i8* %call13, i64 4, !dbg !2510
  %6 = bitcast i8* %mode15 to i32*, !dbg !2510
  store i32 %mode, i32* %6, align 4, !dbg !2511
  br label %cleanup, !dbg !2512

cleanup:                                          ; preds = %entry, %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2512
  ret void, !dbg !2512
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @gate_dse() unnamed_addr #5 !dbg !2513 {
entry:
  %call = tail call zeroext i8 @gate_dse1() #8, !dbg !2514
  %tobool = icmp eq i8 %call, 0, !dbg !2514
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !2515

lor.rhs:                                          ; preds = %entry
  %call1 = tail call zeroext i8 @gate_dse2() #8, !dbg !2516
  %tobool3 = icmp ne i8 %call1, 0, !dbg !2515
  %phitmp = zext i1 %tobool3 to i8, !dbg !2515
  br label %lor.end, !dbg !2515

lor.end:                                          ; preds = %entry, %lor.rhs
  %0 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %0, !dbg !2517
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @clear_alias_mode_hash(i8* %p) #5 !dbg !2518 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !2520, metadata !DIExpression()), !dbg !2522
  call void @llvm.dbg.value(metadata i8* %p, metadata !2521, metadata !DIExpression()), !dbg !2522
  %alias_set = bitcast i8* %p to i32*, !dbg !2523
  %0 = load i32, i32* %alias_set, align 4, !dbg !2523
  ret i32 %0, !dbg !2524
}

; Function Attrs: nounwind uwtable
define internal i32 @clear_alias_mode_eq(i8* %p1, i8* %p2) #5 !dbg !2525 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !2527, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.value(metadata i8* %p2, metadata !2528, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.value(metadata i8* %p1, metadata !2529, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.value(metadata i8* %p2, metadata !2530, metadata !DIExpression()), !dbg !2531
  %alias_set = bitcast i8* %p1 to i32*, !dbg !2532
  %0 = load i32, i32* %alias_set, align 4, !dbg !2532
  %alias_set1 = bitcast i8* %p2 to i32*, !dbg !2533
  %1 = load i32, i32* %alias_set1, align 4, !dbg !2533
  %cmp = icmp eq i32 %0, %1, !dbg !2534
  %conv = zext i1 %cmp to i32, !dbg !2534
  ret i32 %conv, !dbg !2535
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dse_invalidate_singleton_alias_set(i32 %alias_set) local_unnamed_addr #5 !dbg !2536 {
entry:
  call void @llvm.dbg.value(metadata i32 %alias_set, metadata !2540, metadata !DIExpression()), !dbg !2541
  %call = tail call fastcc zeroext i8 @gate_dse() #8, !dbg !2542
  %tobool = icmp ne i8 %call, 0, !dbg !2542
  %tobool1 = icmp ne i32 %alias_set, 0, !dbg !2544
  %or.cond = and i1 %tobool, %tobool1, !dbg !2545
  br i1 %or.cond, label %if.end, label %return, !dbg !2545

if.end:                                           ; preds = %entry
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !2546
  %call2 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %0, i32 %alias_set) #6, !dbg !2547
  br label %return, !dbg !2548

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !2548
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_dse1() #5 !dbg !2549 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !2550
  %cmp = icmp sgt i32 %0, 0, !dbg !2551
  %1 = load i32, i32* @flag_dse, align 4, !dbg !2552
  %tobool = icmp ne i32 %1, 0, !dbg !2552
  %or.cond = and i1 %cmp, %tobool, !dbg !2553
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !2553

land.rhs:                                         ; preds = %entry
  %call = tail call zeroext i8 @dbg_cnt(i32 11) #6, !dbg !2554
  %tobool1 = icmp ne i8 %call, 0, !dbg !2555
  %phitmp = zext i1 %tobool1 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !2556
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_dse() #5 !dbg !2557 {
entry:
  call void @llvm.dbg.value(metadata i8 0, metadata !2559, metadata !DIExpression()), !dbg !2560
  %call = tail call i32 @df_set_flags(i32 32) #6, !dbg !2561
  tail call void @df_note_add_problem() #6, !dbg !2562
  tail call void @df_analyze() #6, !dbg !2563
  tail call fastcc void @dse_step0() #8, !dbg !2564
  tail call fastcc void @dse_step1() #8, !dbg !2565
  tail call fastcc void @dse_step2_init() #8, !dbg !2566
  %call1 = tail call fastcc zeroext i8 @dse_step2_nospill() #8, !dbg !2567
  %tobool = icmp eq i8 %call1, 0, !dbg !2567
  br i1 %tobool, label %if.end6, label %if.then, !dbg !2569

if.then:                                          ; preds = %entry
  %call2 = tail call i32 @df_set_flags(i32 1) #6, !dbg !2570
  tail call void @df_analyze() #6, !dbg !2572
  call void @llvm.dbg.value(metadata i8 1, metadata !2559, metadata !DIExpression()), !dbg !2560
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2573
  %tobool3 = icmp eq %struct._IO_FILE* %0, null, !dbg !2573
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !2575

if.then4:                                         ; preds = %if.then
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2576
  br label %if.end, !dbg !2576

if.end:                                           ; preds = %if.then, %if.then4
  tail call fastcc void @dse_step3(i8 zeroext 0) #8, !dbg !2577
  tail call fastcc void @dse_step4() #8, !dbg !2578
  tail call fastcc void @dse_step5_nospill() #8, !dbg !2579
  br label %if.end6, !dbg !2580

if.end6:                                          ; preds = %entry, %if.end
  %did_global.0 = phi i8 [ 1, %if.end ], [ 0, %entry ], !dbg !2560
  call void @llvm.dbg.value(metadata i8 %did_global.0, metadata !2559, metadata !DIExpression()), !dbg !2560
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !2581
  %tobool7 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !2581
  br i1 %tobool7, label %if.end19, label %land.lhs.true, !dbg !2583

land.lhs.true:                                    ; preds = %if.end6
  %call8 = tail call fastcc zeroext i8 @dse_step2_spill() #8, !dbg !2584
  %tobool9 = icmp eq i8 %call8, 0, !dbg !2584
  br i1 %tobool9, label %if.end19, label %if.then10, !dbg !2585

if.then10:                                        ; preds = %land.lhs.true
  %tobool11 = icmp eq i8 %did_global.0, 0, !dbg !2586
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !2589

if.then12:                                        ; preds = %if.then10
  %call13 = tail call i32 @df_set_flags(i32 1) #6, !dbg !2590
  tail call void @df_analyze() #6, !dbg !2592
  br label %if.end14, !dbg !2593

if.end14:                                         ; preds = %if.then10, %if.then12
  call void @llvm.dbg.value(metadata i8 1, metadata !2559, metadata !DIExpression()), !dbg !2560
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2594
  %tobool15 = icmp eq %struct._IO_FILE* %2, null, !dbg !2594
  br i1 %tobool15, label %if.end18, label %if.then16, !dbg !2596

if.then16:                                        ; preds = %if.end14
  %call17 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !2597
  br label %if.end18, !dbg !2597

if.end18:                                         ; preds = %if.end14, %if.then16
  tail call fastcc void @dse_step3(i8 zeroext 1) #8, !dbg !2598
  tail call fastcc void @dse_step4() #8, !dbg !2599
  tail call fastcc void @dse_step5_spill() #8, !dbg !2600
  br label %if.end19, !dbg !2601

if.end19:                                         ; preds = %land.lhs.true, %if.end6, %if.end18
  %did_global.1 = phi i8 [ 1, %if.end18 ], [ %did_global.0, %land.lhs.true ], [ %did_global.0, %if.end6 ], !dbg !2560
  call void @llvm.dbg.value(metadata i8 %did_global.1, metadata !2559, metadata !DIExpression()), !dbg !2560
  tail call fastcc void @dse_step6() #8, !dbg !2602
  tail call fastcc void @dse_step7(i8 zeroext %did_global.1) #8, !dbg !2603
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2604
  %tobool20 = icmp eq %struct._IO_FILE* %3, null, !dbg !2604
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !2606

if.then21:                                        ; preds = %if.end19
  %4 = load i32, i32* @locally_deleted, align 4, !dbg !2607
  %5 = load i32, i32* @globally_deleted, align 4, !dbg !2608
  %6 = load i32, i32* @spill_deleted, align 4, !dbg !2609
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.7, i64 0, i64 0), i32 %4, i32 %5, i32 %6) #6, !dbg !2610
  br label %if.end23, !dbg !2610

if.end23:                                         ; preds = %if.end19, %if.then21
  ret i32 0, !dbg !2611
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_dse2() #5 !dbg !2612 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !2613
  %cmp = icmp sgt i32 %0, 0, !dbg !2614
  %1 = load i32, i32* @flag_dse, align 4, !dbg !2615
  %tobool = icmp ne i32 %1, 0, !dbg !2615
  %or.cond = and i1 %cmp, %tobool, !dbg !2616
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !2616

land.rhs:                                         ; preds = %entry
  %call = tail call zeroext i8 @dbg_cnt(i32 12) #6, !dbg !2617
  %tobool1 = icmp ne i8 %call, 0, !dbg !2618
  %phitmp = zext i1 %tobool1 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !2619
}

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #2

declare dso_local i32 @df_set_flags(i32) local_unnamed_addr #2

declare dso_local void @df_note_add_problem() local_unnamed_addr #2

declare dso_local void @df_analyze() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step0() unnamed_addr #5 !dbg !2620 {
entry:
  store i32 0, i32* @locally_deleted, align 4, !dbg !2623
  store i32 0, i32* @globally_deleted, align 4, !dbg !2624
  store i32 0, i32* @spill_deleted, align 4, !dbg !2625
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2626
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @scratch, align 8, !dbg !2627
  %call1 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i64 104, i64 100) #6, !dbg !2628
  store %struct.alloc_pool_def* %call1, %struct.alloc_pool_def** @rtx_store_info_pool, align 8, !dbg !2629
  %call2 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i64 32, i64 100) #6, !dbg !2630
  store %struct.alloc_pool_def* %call2, %struct.alloc_pool_def** @read_info_pool, align 8, !dbg !2631
  %call3 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 48, i64 100) #6, !dbg !2632
  store %struct.alloc_pool_def* %call3, %struct.alloc_pool_def** @insn_info_pool, align 8, !dbg !2633
  %call4 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i64 56, i64 100) #6, !dbg !2634
  store %struct.alloc_pool_def* %call4, %struct.alloc_pool_def** @bb_info_pool, align 8, !dbg !2635
  %call5 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), i64 96, i64 100) #6, !dbg !2636
  store %struct.alloc_pool_def* %call5, %struct.alloc_pool_def** @rtx_group_info_pool, align 8, !dbg !2637
  %call6 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i64 24, i64 10) #6, !dbg !2638
  store %struct.alloc_pool_def* %call6, %struct.alloc_pool_def** @deferred_change_pool, align 8, !dbg !2639
  %call7 = tail call %struct.htab* @htab_create(i64 11, i32 (i8*)* nonnull @invariant_group_base_hash, i32 (i8*, i8*)* nonnull @invariant_group_base_eq, void (i8*)* null) #6, !dbg !2640
  store %struct.htab* %call7, %struct.htab** @rtx_group_table, align 8, !dbg !2641
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2642
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2642
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2642
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !2642
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !2642
  %conv = sext i32 %2 to i64, !dbg !2642
  %call8 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !2642
  store i8* %call8, i8** bitcast (%struct.bb_info*** @bb_table to i8**), align 8, !dbg !2643
  store i32 0, i32* @rtx_group_next_id, align 4, !dbg !2644
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2645
  %stdarg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 20, !dbg !2646
  %bf.load = load i32, i32* %stdarg, align 8, !dbg !2646
  %bf.clear = lshr i32 %bf.load, 22, !dbg !2647
  %4 = trunc i32 %bf.clear to i8, !dbg !2647
  %5 = and i8 %4, 1, !dbg !2647
  %6 = xor i8 %5, 1, !dbg !2647
  store i8 %6, i8* @stores_off_frame_dead_at_return, align 1, !dbg !2648
  tail call void @init_alias_analysis() #6, !dbg !2649
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !2650
  %tobool11 = icmp eq %struct.bitmap_head_def* %7, null, !dbg !2650
  br i1 %tobool11, label %if.else, label %if.then, !dbg !2652

if.then:                                          ; preds = %entry
  %call12 = tail call fastcc %struct.group_info* @get_group_info(%struct.rtx_def* null) #8, !dbg !2653
  br label %if.end, !dbg !2654

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.group_info* [ null, %if.else ], [ %call12, %if.then ], !dbg !2655
  store %struct.group_info* %storemerge, %struct.group_info** @clear_alias_group, align 8, !dbg !2655
  ret void, !dbg !2656
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step1() unnamed_addr #5 !dbg !2657 {
entry:
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2686
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !2660, metadata !DIExpression()), !dbg !2687
  tail call void @cselib_init(i32 0) #6, !dbg !2688
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2689
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** @all_blocks, align 8, !dbg !2690
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call1, i32 0) #6, !dbg !2691
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @all_blocks, align 8, !dbg !2692
  %call3 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 1) #6, !dbg !2693
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2694
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !2694
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2694
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !2694
  br label %for.cond, !dbg !2694

for.cond:                                         ; preds = %if.end173, %entry
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %if.end173 ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2695
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2659, metadata !DIExpression()), !dbg !2687
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !2694
  br i1 %tobool, label %for.end176, label %for.body, !dbg !2694

for.body:                                         ; preds = %for.cond
  %3 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @bb_info_pool, align 8, !dbg !2696
  %call4 = tail call i8* @pool_alloc(%struct.alloc_pool_def* %3) #6, !dbg !2697
  %4 = bitcast i8* %call4 to %struct.bb_info*, !dbg !2698
  call void @llvm.dbg.value(metadata %struct.bb_info* %4, metadata !2665, metadata !DIExpression()), !dbg !2699
  %call5 = tail call i8* @memset(i8* %call4, i32 0, i64 56) #6, !dbg !2700
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @all_blocks, align 8, !dbg !2701
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !2702
  %6 = load i32, i32* %index, align 8, !dbg !2702
  %call6 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %5, i32 %6) #6, !dbg !2703
  %regs_live7 = getelementptr inbounds i8, i8* %call4, i64 48, !dbg !2704
  %7 = bitcast i8* %regs_live7 to %struct.bitmap_head_def**, !dbg !2704
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %7, align 8, !dbg !2705
  %8 = load i32, i32* %index, align 8, !dbg !2706
  %call9 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %8) #8, !dbg !2706
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call9, i64 0, i32 2, !dbg !2706
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !2706
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %9) #6, !dbg !2707
  tail call void @df_simulate_initialize_forwards(%struct.basic_block_def* nonnull %bb.0, %struct.bitmap_head_def* %call) #6, !dbg !2708
  %10 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !2709
  %11 = load i32, i32* %index, align 8, !dbg !2710
  %idxprom = sext i32 %11 to i64, !dbg !2709
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %10, i64 %idxprom, !dbg !2709
  %12 = bitcast %struct.bb_info** %arrayidx to i8**, !dbg !2711
  store i8* %call4, i8** %12, align 8, !dbg !2711
  store void (%struct.cselib_val_struct*)* @remove_useless_values, void (%struct.cselib_val_struct*)** @cselib_discard_hook, align 8, !dbg !2712
  %13 = load i32, i32* %index, align 8, !dbg !2713
  %cmp = icmp sgt i32 %13, 1, !dbg !2714
  br i1 %cmp, label %if.then, label %if.end173, !dbg !2715

if.then:                                          ; preds = %for.body
  %call12 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i64 104, i64 100) #6, !dbg !2716
  store %struct.alloc_pool_def* %call12, %struct.alloc_pool_def** @cse_store_info_pool, align 8, !dbg !2717
  store %struct.insn_info* null, %struct.insn_info** @active_local_stores, align 8, !dbg !2718
  tail call void @cselib_clear_table() #6, !dbg !2719
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !2720
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2720
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2720
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 0, !dbg !2720
  br label %for.cond13, !dbg !2720

for.cond13:                                       ; preds = %for.inc, %if.then
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.then ], [ %rt_rtx53, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !2722
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !2666, metadata !DIExpression()), !dbg !2723
  %tobool14 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !2724
  br i1 %tobool14, label %for.end, label %land.rhs, !dbg !2724

land.rhs:                                         ; preds = %for.cond13
  %15 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2724
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %15, i64 0, i32 1, !dbg !2724
  %16 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2724
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2724
  %rt_rtx = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !2724
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2724
  %cmp18 = icmp eq %struct.rtx_def* %insn.0, %18, !dbg !2724
  br i1 %cmp18, label %for.end, label %for.body19, !dbg !2720

for.body19:                                       ; preds = %land.rhs
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !2726
  %bf.load = load i32, i32* %19, align 8, !dbg !2726
  %bf.clear = and i32 %bf.load, 65535, !dbg !2726
  %cmp20 = icmp eq i32 %bf.clear, 8, !dbg !2726
  br i1 %cmp20, label %if.then32, label %lor.lhs.false, !dbg !2726

lor.lhs.false:                                    ; preds = %for.body19
  %cmp23 = icmp eq i32 %bf.clear, 7, !dbg !2726
  br i1 %cmp23, label %if.then32, label %lor.lhs.false24, !dbg !2726

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %cmp27 = icmp eq i32 %bf.clear, 9, !dbg !2726
  br i1 %cmp27, label %if.then32, label %lor.lhs.false28, !dbg !2726

lor.lhs.false28:                                  ; preds = %lor.lhs.false24
  %cmp31 = icmp eq i32 %bf.clear, 10, !dbg !2726
  br i1 %cmp31, label %if.then32, label %if.end, !dbg !2729

if.then32:                                        ; preds = %lor.lhs.false28, %lor.lhs.false24, %lor.lhs.false, %for.body19
  tail call fastcc void @scan_insn(%struct.bb_info* %4, %struct.rtx_def* nonnull %insn.0) #8, !dbg !2730
  br label %if.end, !dbg !2730

if.end:                                           ; preds = %if.then32, %lor.lhs.false28
  tail call void @cselib_process_insn(%struct.rtx_def* nonnull %insn.0) #6, !dbg !2731
  %bf.load33 = load i32, i32* %19, align 8, !dbg !2732
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !2732
  %cmp35 = icmp eq i32 %bf.clear34, 8, !dbg !2732
  br i1 %cmp35, label %if.then48, label %lor.lhs.false36, !dbg !2732

lor.lhs.false36:                                  ; preds = %if.end
  %cmp39 = icmp eq i32 %bf.clear34, 7, !dbg !2732
  br i1 %cmp39, label %if.then48, label %lor.lhs.false40, !dbg !2732

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %cmp43 = icmp eq i32 %bf.clear34, 9, !dbg !2732
  br i1 %cmp43, label %if.then48, label %lor.lhs.false44, !dbg !2732

lor.lhs.false44:                                  ; preds = %lor.lhs.false40
  %cmp47 = icmp eq i32 %bf.clear34, 10, !dbg !2732
  br i1 %cmp47, label %if.then48, label %for.inc, !dbg !2734

if.then48:                                        ; preds = %lor.lhs.false44, %lor.lhs.false40, %lor.lhs.false36, %if.end
  tail call void @df_simulate_one_insn_forwards(%struct.basic_block_def* nonnull %bb.0, %struct.rtx_def* nonnull %insn.0, %struct.bitmap_head_def* %call) #6, !dbg !2735
  br label %for.inc, !dbg !2735

for.inc:                                          ; preds = %lor.lhs.false44, %if.then48
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2724
  %rt_rtx53 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !2724
  br label %for.cond13, !dbg !2724, !llvm.loop !2736

for.end:                                          ; preds = %land.rhs, %for.cond13
  %21 = load i8, i8* @stores_off_frame_dead_at_return, align 1, !dbg !2738
  %tobool54 = icmp eq i8 %21, 0, !dbg !2738
  br i1 %tobool54, label %if.end102, label %land.lhs.true, !dbg !2739

land.lhs.true:                                    ; preds = %for.end
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !2740
  %22 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !2740
  %tobool55 = icmp eq %struct.VEC_edge_gc* %22, null, !dbg !2740
  br i1 %tobool55, label %cond.end, label %cond.true, !dbg !2740

cond.true:                                        ; preds = %land.lhs.true
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %22, i64 0, i32 0, !dbg !2740
  br label %cond.end, !dbg !2740

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %land.lhs.true ], !dbg !2740
  %call57 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !2740
  %cmp58 = icmp eq i32 %call57, 0, !dbg !2741
  br i1 %cmp58, label %if.then72, label %lor.lhs.false60, !dbg !2742

lor.lhs.false60:                                  ; preds = %cond.end
  %call61 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* nonnull %bb.0) #8, !dbg !2743
  %tobool63 = icmp eq i8 %call61, 0, !dbg !2743
  br i1 %tobool63, label %if.end102, label %land.lhs.true64, !dbg !2744

land.lhs.true64:                                  ; preds = %lor.lhs.false60
  %call65 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* nonnull %bb.0) #8, !dbg !2745
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2746
  %cfg67 = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, i32 1, !dbg !2746
  %24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg67, align 8, !dbg !2746
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i64 0, i32 1, !dbg !2746
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2746
  %cmp68 = icmp ne %struct.basic_block_def* %call65, %25, !dbg !2747
  %26 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 29), align 1, !dbg !2748
  %tobool71 = icmp ne i8 %26, 0, !dbg !2749
  %or.cond = or i1 %cmp68, %tobool71, !dbg !2750
  br i1 %or.cond, label %if.end102, label %if.then72, !dbg !2750

if.then72:                                        ; preds = %land.lhs.true64, %cond.end
  br label %while.cond, !dbg !2751

while.cond:                                       ; preds = %if.end100, %if.then72
  %i_ptr.0.in = phi %struct.insn_info** [ @active_local_stores, %if.then72 ], [ %next_local_store, %if.end100 ]
  %i_ptr.0 = load %struct.insn_info*, %struct.insn_info** %i_ptr.0.in, align 8, !dbg !2752
  call void @llvm.dbg.value(metadata %struct.insn_info* %i_ptr.0, metadata !2669, metadata !DIExpression()), !dbg !2752
  %tobool73 = icmp eq %struct.insn_info* %i_ptr.0, null, !dbg !2751
  br i1 %tobool73, label %if.end102.loopexit, label %while.body, !dbg !2751

while.body:                                       ; preds = %while.cond
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 6, !dbg !2753
  br label %while.cond74, !dbg !2754

while.cond74:                                     ; preds = %while.body76, %while.body
  %store_info.0.in = phi %struct.store_info** [ %store_rec, %while.body ], [ %next, %while.body76 ]
  %store_info.0 = load %struct.store_info*, %struct.store_info** %store_info.0.in, align 8, !dbg !2755
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.0, metadata !2672, metadata !DIExpression()), !dbg !2755
  %is_set = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 0, !dbg !2756
  %27 = load i8, i8* %is_set, align 8, !dbg !2756
  %tobool75 = icmp eq i8 %27, 0, !dbg !2757
  br i1 %tobool75, label %while.body76, label %while.end, !dbg !2754

while.body76:                                     ; preds = %while.cond74
  %next = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 10, !dbg !2758
  br label %while.cond74, !dbg !2754, !llvm.loop !2759

while.end:                                        ; preds = %while.cond74
  %store_info.0.lcssa = phi %struct.store_info* [ %store_info.0, %while.cond74 ], !dbg !2755
  %alias_set = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0.lcssa, i64 0, i32 6, !dbg !2760
  %28 = load i32, i32* %alias_set, align 8, !dbg !2760
  %tobool77 = icmp eq i32 %28, 0, !dbg !2761
  br i1 %tobool77, label %if.else, label %land.lhs.true78, !dbg !2762

land.lhs.true78:                                  ; preds = %while.end
  %cannot_delete = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 0, !dbg !2763
  %29 = load i8, i8* %cannot_delete, align 8, !dbg !2763
  %tobool79 = icmp eq i8 %29, 0, !dbg !2764
  br i1 %tobool79, label %if.then80, label %if.else, !dbg !2765

if.then80:                                        ; preds = %land.lhs.true78
  tail call fastcc void @delete_dead_store_insn(%struct.insn_info* nonnull %i_ptr.0) #8, !dbg !2766
  br label %if.end100, !dbg !2766

if.else:                                          ; preds = %land.lhs.true78, %while.end
  %group_id = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0.lcssa, i64 0, i32 2, !dbg !2767
  %30 = load i32, i32* %group_id, align 4, !dbg !2767
  %cmp81 = icmp sgt i32 %30, -1, !dbg !2768
  br i1 %cmp81, label %if.then83, label %if.end100, !dbg !2769

if.then83:                                        ; preds = %if.else
  %31 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !2770
  %base86 = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %31, i64 0, i32 0, !dbg !2770
  %call91 = tail call fastcc %struct.group_info* @VEC_group_info_t_base_index(%struct.VEC_group_info_t_base* %base86, i32 %30) #8, !dbg !2770
  call void @llvm.dbg.value(metadata %struct.group_info* %call91, metadata !2674, metadata !DIExpression()), !dbg !2771
  %frame_related = getelementptr inbounds %struct.group_info, %struct.group_info* %call91, i64 0, i32 3, !dbg !2772
  %32 = load i8, i8* %frame_related, align 1, !dbg !2772
  %tobool93 = icmp eq i8 %32, 0, !dbg !2774
  br i1 %tobool93, label %if.end100, label %land.lhs.true94, !dbg !2775

land.lhs.true94:                                  ; preds = %if.then83
  %cannot_delete95 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 0, !dbg !2776
  %33 = load i8, i8* %cannot_delete95, align 8, !dbg !2776
  %tobool96 = icmp eq i8 %33, 0, !dbg !2777
  br i1 %tobool96, label %if.then97, label %if.end100, !dbg !2778

if.then97:                                        ; preds = %land.lhs.true94
  tail call fastcc void @delete_dead_store_insn(%struct.insn_info* nonnull %i_ptr.0) #8, !dbg !2779
  br label %if.end100, !dbg !2779

if.end100:                                        ; preds = %land.lhs.true94, %if.then83, %if.else, %if.then97, %if.then80
  %next_local_store = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 9, !dbg !2780
  br label %while.cond, !dbg !2751, !llvm.loop !2781

if.end102.loopexit:                               ; preds = %while.cond
  br label %if.end102, !dbg !2783

if.end102:                                        ; preds = %if.end102.loopexit, %lor.lhs.false60, %for.end, %land.lhs.true64
  %.pre = load %struct.deferred_change*, %struct.deferred_change** @deferred_change_list, align 8, !dbg !2784
  %34 = bitcast %struct.deferred_change* %.pre to i64**, !dbg !2783
  br label %while.cond103, !dbg !2783

while.cond103:                                    ; preds = %while.body105, %if.end102
  %35 = phi i64** [ %46, %while.body105 ], [ %34, %if.end102 ]
  %36 = phi %struct.deferred_change* [ %45, %while.body105 ], [ %.pre, %if.end102 ]
  %37 = phi %struct.deferred_change* [ %45, %while.body105 ], [ %.pre, %if.end102 ], !dbg !2784
  %tobool104 = icmp eq %struct.deferred_change* %37, null, !dbg !2783
  br i1 %tobool104, label %while.end108, label %while.body105, !dbg !2783

while.body105:                                    ; preds = %while.cond103
  %next107 = getelementptr inbounds %struct.deferred_change, %struct.deferred_change* %36, i64 0, i32 2, !dbg !2785
  %38 = bitcast %struct.deferred_change** %next107 to i64*, !dbg !2785
  %39 = load i64, i64* %38, align 8, !dbg !2785
  %reg = getelementptr inbounds %struct.deferred_change, %struct.deferred_change* %36, i64 0, i32 1, !dbg !2786
  %40 = bitcast %struct.rtx_def** %reg to i64*, !dbg !2786
  %41 = load i64, i64* %40, align 8, !dbg !2786
  %42 = load i64*, i64** %35, align 8, !dbg !2787
  store i64 %41, i64* %42, align 8, !dbg !2788
  %43 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @deferred_change_pool, align 8, !dbg !2789
  %44 = load i8*, i8** bitcast (%struct.deferred_change** @deferred_change_list to i8**), align 8, !dbg !2790
  tail call void @pool_free(%struct.alloc_pool_def* %43, i8* %44) #6, !dbg !2791
  store i64 %39, i64* bitcast (%struct.deferred_change** @deferred_change_list to i64*), align 8, !dbg !2792
  %45 = inttoptr i64 %39 to %struct.deferred_change*, !dbg !2783
  %46 = inttoptr i64 %39 to i64**, !dbg !2783
  br label %while.cond103, !dbg !2783, !llvm.loop !2793

while.end108:                                     ; preds = %while.cond103
  %last_insn = bitcast i8* %call4 to %struct.insn_info**, !dbg !2795
  br label %while.cond109, !dbg !2796

while.cond109:                                    ; preds = %if.end171, %while.end108
  %ptr.0.in = phi %struct.insn_info** [ %last_insn, %while.end108 ], [ %prev_insn, %if.end171 ]
  %ptr.0 = load %struct.insn_info*, %struct.insn_info** %ptr.0.in, align 8, !dbg !2723
  call void @llvm.dbg.value(metadata %struct.insn_info* %ptr.0, metadata !2661, metadata !DIExpression()), !dbg !2699
  %tobool110 = icmp eq %struct.insn_info* %ptr.0, null, !dbg !2796
  br i1 %tobool110, label %while.end172, label %while.body111, !dbg !2796

while.body111:                                    ; preds = %while.cond109
  %contains_cselib_groups = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 4, !dbg !2797
  %47 = load i8, i8* %contains_cselib_groups, align 4, !dbg !2797
  %tobool112 = icmp eq i8 %47, 0, !dbg !2798
  %store_rec114 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 6, !dbg !2799
  %48 = load %struct.store_info*, %struct.store_info** %store_rec114, align 8, !dbg !2799
  br i1 %tobool112, label %for.cond158.preheader, label %while.cond115.preheader, !dbg !2800

while.cond115.preheader:                          ; preds = %while.body111
  br label %while.cond115, !dbg !2801

for.cond158.preheader:                            ; preds = %while.body111
  br label %for.cond158, !dbg !2802

while.cond115:                                    ; preds = %while.cond115.preheader, %while.body122
  %s_info.0 = phi %struct.store_info* [ %50, %while.body122 ], [ %48, %while.cond115.preheader ], !dbg !2804
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info.0, metadata !2680, metadata !DIExpression()), !dbg !2804
  %cond3 = icmp eq %struct.store_info* %s_info.0, null, !dbg !2805
  br i1 %cond3, label %if.end154.loopexit, label %land.rhs117, !dbg !2805

land.rhs117:                                      ; preds = %while.cond115
  %is_set118 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0, i64 0, i32 0, !dbg !2806
  %49 = load i8, i8* %is_set118, align 8, !dbg !2806
  %tobool119 = icmp eq i8 %49, 0, !dbg !2807
  br i1 %tobool119, label %while.body122, label %while.end124, !dbg !2801

while.body122:                                    ; preds = %land.rhs117
  %next123 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0, i64 0, i32 10, !dbg !2808
  %50 = load %struct.store_info*, %struct.store_info** %next123, align 8, !dbg !2808
  call void @llvm.dbg.value(metadata %struct.store_info* %50, metadata !2680, metadata !DIExpression()), !dbg !2804
  br label %while.cond115, !dbg !2801, !llvm.loop !2809

while.end124:                                     ; preds = %land.rhs117
  %s_info.0.lcssa9 = phi %struct.store_info* [ %s_info.0, %land.rhs117 ], !dbg !2804
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info.0.lcssa9, metadata !2680, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info.0.lcssa9, metadata !2680, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info.0.lcssa9, metadata !2680, metadata !DIExpression()), !dbg !2804
  %redundant_reason = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa9, i64 0, i32 13, !dbg !2810
  %51 = load %struct.insn_info*, %struct.insn_info** %redundant_reason, align 8, !dbg !2810
  %tobool127 = icmp eq %struct.insn_info* %51, null, !dbg !2812
  br i1 %tobool127, label %if.end150, label %land.lhs.true128, !dbg !2813

land.lhs.true128:                                 ; preds = %while.end124
  %insn130 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %51, i64 0, i32 5, !dbg !2814
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn130, align 8, !dbg !2814
  %tobool131 = icmp eq %struct.rtx_def* %52, null, !dbg !2815
  br i1 %tobool131, label %if.end150, label %land.lhs.true132, !dbg !2816

land.lhs.true132:                                 ; preds = %land.lhs.true128
  %cannot_delete133 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 0, !dbg !2817
  %53 = load i8, i8* %cannot_delete133, align 8, !dbg !2817
  %tobool134 = icmp eq i8 %53, 0, !dbg !2818
  br i1 %tobool134, label %if.then135, label %if.end150, !dbg !2819

if.then135:                                       ; preds = %land.lhs.true132
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2820
  %tobool136 = icmp eq %struct._IO_FILE* %54, null, !dbg !2820
  br i1 %tobool136, label %if.end149, label %if.then137, !dbg !2823

if.then137:                                       ; preds = %if.then135
  %insn138 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 5, !dbg !2824
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn138, align 8, !dbg !2824
  %arrayidx141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2824
  %rt_int = bitcast %union.rtunion_def* %arrayidx141 to i32*, !dbg !2824
  %56 = load i32, i32* %rt_int, align 8, !dbg !2824
  %arrayidx146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2825
  %rt_int147 = bitcast %union.rtunion_def* %arrayidx146 to i32*, !dbg !2825
  %57 = load i32, i32* %rt_int147, align 8, !dbg !2825
  %call148 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %54, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.15, i64 0, i64 0), i32 %56, i32 %57) #6, !dbg !2826
  br label %if.end149, !dbg !2826

if.end149:                                        ; preds = %if.then135, %if.then137
  tail call fastcc void @delete_dead_store_insn(%struct.insn_info* nonnull %ptr.0) #8, !dbg !2827
  br label %if.end150, !dbg !2828

if.end150:                                        ; preds = %land.lhs.true132, %land.lhs.true128, %while.end124, %if.end149
  store %struct.insn_info* null, %struct.insn_info** %redundant_reason, align 8, !dbg !2829
  br label %if.end154, !dbg !2831

if.end154.loopexit:                               ; preds = %while.cond115
  br label %if.end154, !dbg !2832

if.end154:                                        ; preds = %if.end154.loopexit, %if.end150
  tail call fastcc void @free_store_info(%struct.insn_info* nonnull %ptr.0) #8, !dbg !2832
  br label %if.end171, !dbg !2833

for.cond158:                                      ; preds = %for.cond158.preheader, %for.inc168
  %s_info156.0 = phi %struct.store_info* [ %60, %for.inc168 ], [ %48, %for.cond158.preheader ], !dbg !2834
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info156.0, metadata !2684, metadata !DIExpression()), !dbg !2835
  %tobool159 = icmp eq %struct.store_info* %s_info156.0, null, !dbg !2802
  br i1 %tobool159, label %if.end171.loopexit, label %for.body160, !dbg !2802

for.body160:                                      ; preds = %for.cond158
  %is_large = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info156.0, i64 0, i32 1, !dbg !2836
  %58 = load i8, i8* %is_large, align 1, !dbg !2836
  %tobool161 = icmp eq i8 %58, 0, !dbg !2839
  br i1 %tobool161, label %for.inc168, label %if.then162, !dbg !2840

if.then162:                                       ; preds = %for.body160
  %bmap = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info156.0, i64 0, i32 9, i32 0, i32 0, !dbg !2841
  %59 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %bmap, align 8, !dbg !2841
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %59) #6, !dbg !2841
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %bmap, align 8, !dbg !2841
  store i8 0, i8* %is_large, align 1, !dbg !2843
  br label %for.inc168, !dbg !2844

for.inc168:                                       ; preds = %for.body160, %if.then162
  %next169 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info156.0, i64 0, i32 10, !dbg !2845
  %60 = load %struct.store_info*, %struct.store_info** %next169, align 8, !dbg !2845
  call void @llvm.dbg.value(metadata %struct.store_info* %60, metadata !2684, metadata !DIExpression()), !dbg !2835
  br label %for.cond158, !dbg !2846, !llvm.loop !2847

if.end171.loopexit:                               ; preds = %for.cond158
  br label %if.end171, !dbg !2849

if.end171:                                        ; preds = %if.end171.loopexit, %if.end154
  %prev_insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 8, !dbg !2849
  br label %while.cond109, !dbg !2796, !llvm.loop !2850

while.end172:                                     ; preds = %while.cond109
  %61 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @cse_store_info_pool, align 8, !dbg !2852
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %61) #6, !dbg !2853
  br label %if.end173, !dbg !2854

if.end173:                                        ; preds = %while.end172, %for.body
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %7, align 8, !dbg !2855
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !2856
  br label %for.cond, !dbg !2856, !llvm.loop !2857

for.end176:                                       ; preds = %for.cond
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !2859
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2660, metadata !DIExpression()), !dbg !2687
  tail call void @cselib_finish() #6, !dbg !2860
  %62 = load %struct.htab*, %struct.htab** @rtx_group_table, align 8, !dbg !2861
  tail call void @htab_empty(%struct.htab* %62) #6, !dbg !2862
  ret void, !dbg !2863
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step2_init() unnamed_addr #5 !dbg !2864 {
entry:
  %group = alloca %struct.group_info*, align 8
  %0 = bitcast %struct.group_info** %group to i8*, !dbg !2868
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2868
  call void @llvm.dbg.value(metadata i32 0, metadata !2866, metadata !DIExpression()), !dbg !2869
  br label %for.cond, !dbg !2870

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc31, %for.inc ], !dbg !2872
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2866, metadata !DIExpression()), !dbg !2869
  %1 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !2873
  %base = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %1, i64 0, i32 0, !dbg !2873
  call void @llvm.dbg.value(metadata %struct.group_info** %group, metadata !2867, metadata !DIExpression(DW_OP_deref)), !dbg !2869
  %call = call fastcc i32 @VEC_group_info_t_base_iterate(%struct.VEC_group_info_t_base* %base, i32 %i.0, %struct.group_info** nonnull %group) #8, !dbg !2873
  %tobool1 = icmp eq i32 %call, 0, !dbg !2875
  br i1 %tobool1, label %for.end, label %for.body, !dbg !2875

for.body:                                         ; preds = %for.cond
  %2 = load i8, i8* @stores_off_frame_dead_at_return, align 1, !dbg !2876
  %tobool2 = icmp eq i8 %2, 0, !dbg !2876
  br i1 %tobool2, label %if.end10, label %land.lhs.true, !dbg !2879

land.lhs.true:                                    ; preds = %for.body
  %3 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2880
  call void @llvm.dbg.value(metadata %struct.group_info* %3, metadata !2867, metadata !DIExpression()), !dbg !2869
  %frame_related = getelementptr inbounds %struct.group_info, %struct.group_info* %3, i64 0, i32 3, !dbg !2881
  %4 = load i8, i8* %frame_related, align 1, !dbg !2881
  %tobool4 = icmp eq i8 %4, 0, !dbg !2880
  br i1 %tobool4, label %if.end10, label %if.then, !dbg !2882

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.group_info* %3, metadata !2867, metadata !DIExpression()), !dbg !2869
  %store2_n = getelementptr inbounds %struct.group_info, %struct.group_info* %3, i64 0, i32 8, !dbg !2883
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_n, align 8, !dbg !2883
  call void @llvm.dbg.value(metadata %struct.group_info* %3, metadata !2867, metadata !DIExpression()), !dbg !2869
  %store1_n = getelementptr inbounds %struct.group_info, %struct.group_info* %3, i64 0, i32 6, !dbg !2885
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store1_n, align 8, !dbg !2885
  %call5 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %5, %struct.bitmap_head_def* %6) #6, !dbg !2886
  %7 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2887
  call void @llvm.dbg.value(metadata %struct.group_info* %7, metadata !2867, metadata !DIExpression()), !dbg !2869
  %store2_p = getelementptr inbounds %struct.group_info, %struct.group_info* %7, i64 0, i32 9, !dbg !2888
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_p, align 8, !dbg !2888
  call void @llvm.dbg.value(metadata %struct.group_info* %7, metadata !2867, metadata !DIExpression()), !dbg !2869
  %store1_p = getelementptr inbounds %struct.group_info, %struct.group_info* %7, i64 0, i32 7, !dbg !2889
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store1_p, align 8, !dbg !2889
  %call6 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %8, %struct.bitmap_head_def* %9) #6, !dbg !2890
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2891
  %tobool7 = icmp eq %struct._IO_FILE* %10, null, !dbg !2891
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !2893

if.then8:                                         ; preds = %if.then
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i64 0, i64 0), i32 %i.0) #6, !dbg !2894
  br label %if.end10, !dbg !2894

if.end10:                                         ; preds = %if.then, %land.lhs.true, %for.body, %if.then8
  %11 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2895
  call void @llvm.dbg.value(metadata %struct.group_info* %11, metadata !2867, metadata !DIExpression()), !dbg !2869
  %offset_map_size_n = getelementptr inbounds %struct.group_info, %struct.group_info* %11, i64 0, i32 13, !dbg !2896
  %12 = load i32, i32* %offset_map_size_n, align 8, !dbg !2897
  %inc = add nsw i32 %12, 1, !dbg !2897
  store i32 %inc, i32* %offset_map_size_n, align 8, !dbg !2897
  call void @llvm.dbg.value(metadata %struct.group_info* %11, metadata !2867, metadata !DIExpression()), !dbg !2869
  %conv12 = sext i32 %inc to i64, !dbg !2898
  %mul = shl nsw i64 %conv12, 2, !dbg !2898
  %call13 = call i8* @xmalloc(i64 %mul) #6, !dbg !2898
  %13 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2899
  call void @llvm.dbg.value(metadata %struct.group_info* %13, metadata !2867, metadata !DIExpression()), !dbg !2869
  %offset_map_n = getelementptr inbounds %struct.group_info, %struct.group_info* %13, i64 0, i32 11, !dbg !2900
  %14 = bitcast i32** %offset_map_n to i8**, !dbg !2901
  store i8* %call13, i8** %14, align 8, !dbg !2901
  call void @llvm.dbg.value(metadata %struct.group_info* %13, metadata !2867, metadata !DIExpression()), !dbg !2869
  %offset_map_size_p = getelementptr inbounds %struct.group_info, %struct.group_info* %13, i64 0, i32 14, !dbg !2902
  %15 = load i32, i32* %offset_map_size_p, align 4, !dbg !2903
  %inc14 = add nsw i32 %15, 1, !dbg !2903
  store i32 %inc14, i32* %offset_map_size_p, align 4, !dbg !2903
  call void @llvm.dbg.value(metadata %struct.group_info* %13, metadata !2867, metadata !DIExpression()), !dbg !2869
  %conv16 = sext i32 %inc14 to i64, !dbg !2904
  %mul17 = shl nsw i64 %conv16, 2, !dbg !2904
  %call18 = call i8* @xmalloc(i64 %mul17) #6, !dbg !2904
  %16 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2905
  call void @llvm.dbg.value(metadata %struct.group_info* %16, metadata !2867, metadata !DIExpression()), !dbg !2869
  %offset_map_p = getelementptr inbounds %struct.group_info, %struct.group_info* %16, i64 0, i32 12, !dbg !2906
  %17 = bitcast i32** %offset_map_p to i8**, !dbg !2907
  store i8* %call18, i8** %17, align 8, !dbg !2907
  call void @llvm.dbg.value(metadata %struct.group_info* %16, metadata !2867, metadata !DIExpression()), !dbg !2869
  %process_globally = getelementptr inbounds %struct.group_info, %struct.group_info* %16, i64 0, i32 2, !dbg !2908
  store i8 0, i8* %process_globally, align 4, !dbg !2909
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2910
  %tobool19 = icmp eq %struct._IO_FILE* %18, null, !dbg !2910
  br i1 %tobool19, label %for.inc, label %if.then20, !dbg !2912

if.then20:                                        ; preds = %if.end10
  call void @llvm.dbg.value(metadata %struct.group_info* %16, metadata !2867, metadata !DIExpression()), !dbg !2869
  %store2_n21 = getelementptr inbounds %struct.group_info, %struct.group_info* %16, i64 0, i32 8, !dbg !2913
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_n21, align 8, !dbg !2913
  %call22 = call i64 @bitmap_count_bits(%struct.bitmap_head_def* %19) #6, !dbg !2915
  %conv23 = trunc i64 %call22 to i32, !dbg !2916
  %20 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2917
  call void @llvm.dbg.value(metadata %struct.group_info* %20, metadata !2867, metadata !DIExpression()), !dbg !2869
  %store2_p24 = getelementptr inbounds %struct.group_info, %struct.group_info* %20, i64 0, i32 9, !dbg !2918
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_p24, align 8, !dbg !2918
  %call25 = call i64 @bitmap_count_bits(%struct.bitmap_head_def* %21) #6, !dbg !2919
  %conv26 = trunc i64 %call25 to i32, !dbg !2920
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.60, i64 0, i64 0), i32 %i.0, i32 %conv23, i32 %conv26) #6, !dbg !2921
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2922
  %23 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2923
  call void @llvm.dbg.value(metadata %struct.group_info* %23, metadata !2867, metadata !DIExpression()), !dbg !2869
  %store2_n28 = getelementptr inbounds %struct.group_info, %struct.group_info* %23, i64 0, i32 8, !dbg !2924
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_n28, align 8, !dbg !2924
  call void @bitmap_print(%struct._IO_FILE* %22, %struct.bitmap_head_def* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !2925
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2926
  %26 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2927
  call void @llvm.dbg.value(metadata %struct.group_info* %26, metadata !2867, metadata !DIExpression()), !dbg !2869
  %store2_p29 = getelementptr inbounds %struct.group_info, %struct.group_info* %26, i64 0, i32 9, !dbg !2928
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_p29, align 8, !dbg !2928
  call void @bitmap_print(%struct._IO_FILE* %25, %struct.bitmap_head_def* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !2929
  br label %for.inc, !dbg !2930

for.inc:                                          ; preds = %if.end10, %if.then20
  %inc31 = add i32 %i.0, 1, !dbg !2931
  call void @llvm.dbg.value(metadata i32 %inc31, metadata !2866, metadata !DIExpression()), !dbg !2869
  br label %for.cond, !dbg !2932, !llvm.loop !2933

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2935
  ret void, !dbg !2935
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @dse_step2_nospill() unnamed_addr #5 !dbg !2936 {
entry:
  %group = alloca %struct.group_info*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %j = alloca i32, align 4
  %0 = bitcast %struct.group_info** %group to i8*, !dbg !2952
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2952
  store i32 1, i32* @current_position, align 4, !dbg !2953
  call void @llvm.dbg.value(metadata i32 0, metadata !2938, metadata !DIExpression()), !dbg !2954
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !2955
  %2 = bitcast i32* %j to i8*, !dbg !2955
  br label %for.cond, !dbg !2956

for.cond:                                         ; preds = %cleanup, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc28, %cleanup ], !dbg !2957
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2938, metadata !DIExpression()), !dbg !2954
  %3 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !2958
  %base = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %3, i64 0, i32 0, !dbg !2958
  call void @llvm.dbg.value(metadata %struct.group_info** %group, metadata !2939, metadata !DIExpression(DW_OP_deref)), !dbg !2954
  %call = call fastcc i32 @VEC_group_info_t_base_iterate(%struct.VEC_group_info_t_base* %base, i32 %i.0, %struct.group_info** nonnull %group) #8, !dbg !2958
  %tobool1 = icmp eq i32 %call, 0, !dbg !2959
  br i1 %tobool1, label %for.end29, label %for.body, !dbg !2959

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #7, !dbg !2960
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #7, !dbg !2961
  %4 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2962
  call void @llvm.dbg.value(metadata %struct.group_info* %4, metadata !2939, metadata !DIExpression()), !dbg !2954
  %5 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !2964
  %cmp = icmp eq %struct.group_info* %4, %5, !dbg !2965
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2966

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.group_info* %4, metadata !2939, metadata !DIExpression()), !dbg !2954
  %offset_map_n = getelementptr inbounds %struct.group_info, %struct.group_info* %4, i64 0, i32 11, !dbg !2967
  %6 = bitcast i32** %offset_map_n to i8**, !dbg !2967
  %7 = load i8*, i8** %6, align 8, !dbg !2967
  call void @llvm.dbg.value(metadata %struct.group_info* %4, metadata !2939, metadata !DIExpression()), !dbg !2954
  %offset_map_size_n = getelementptr inbounds %struct.group_info, %struct.group_info* %4, i64 0, i32 13, !dbg !2968
  %8 = load i32, i32* %offset_map_size_n, align 8, !dbg !2968
  %conv = sext i32 %8 to i64, !dbg !2969
  %mul = shl nsw i64 %conv, 2, !dbg !2970
  %call2 = call i8* @memset(i8* %7, i32 0, i64 %mul) #6, !dbg !2971
  %9 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2972
  call void @llvm.dbg.value(metadata %struct.group_info* %9, metadata !2939, metadata !DIExpression()), !dbg !2954
  %offset_map_p = getelementptr inbounds %struct.group_info, %struct.group_info* %9, i64 0, i32 12, !dbg !2973
  %10 = bitcast i32** %offset_map_p to i8**, !dbg !2973
  %11 = load i8*, i8** %10, align 8, !dbg !2973
  call void @llvm.dbg.value(metadata %struct.group_info* %9, metadata !2939, metadata !DIExpression()), !dbg !2954
  %offset_map_size_p = getelementptr inbounds %struct.group_info, %struct.group_info* %9, i64 0, i32 14, !dbg !2974
  %12 = load i32, i32* %offset_map_size_p, align 4, !dbg !2974
  %conv3 = sext i32 %12 to i64, !dbg !2975
  %mul4 = shl nsw i64 %conv3, 2, !dbg !2976
  %call5 = call i8* @memset(i8* %11, i32 0, i64 %mul4) #6, !dbg !2977
  %13 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2978
  call void @llvm.dbg.value(metadata %struct.group_info* %13, metadata !2939, metadata !DIExpression()), !dbg !2954
  %group_kill = getelementptr inbounds %struct.group_info, %struct.group_info* %13, i64 0, i32 10, !dbg !2979
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill, align 8, !dbg !2979
  call void @bitmap_clear(%struct.bitmap_head_def* %14) #6, !dbg !2980
  %15 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2981
  call void @llvm.dbg.value(metadata %struct.group_info* %15, metadata !2939, metadata !DIExpression()), !dbg !2954
  %store2_n = getelementptr inbounds %struct.group_info, %struct.group_info* %15, i64 0, i32 8, !dbg !2981
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_n, align 8, !dbg !2981
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2940, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  call void @llvm.dbg.value(metadata i32* %j, metadata !2951, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %16, i32 0, i32* nonnull %j) #8, !dbg !2981
  br label %for.cond6, !dbg !2981

for.cond6:                                        ; preds = %for.body9, %if.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2940, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  call void @llvm.dbg.value(metadata i32* %j, metadata !2951, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  %call7 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !2983
  %tobool8 = icmp eq i8 %call7, 0, !dbg !2981
  %17 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2955
  call void @llvm.dbg.value(metadata %struct.group_info* %17, metadata !2939, metadata !DIExpression()), !dbg !2954
  br i1 %tobool8, label %for.end, label %for.body9, !dbg !2981

for.body9:                                        ; preds = %for.cond6
  %group_kill10 = getelementptr inbounds %struct.group_info, %struct.group_info* %17, i64 0, i32 10, !dbg !2985
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill10, align 8, !dbg !2985
  %19 = load i32, i32* @current_position, align 4, !dbg !2987
  %call11 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %18, i32 %19) #6, !dbg !2988
  %20 = load i32, i32* @current_position, align 4, !dbg !2989
  %inc = add i32 %20, 1, !dbg !2989
  store i32 %inc, i32* @current_position, align 4, !dbg !2989
  %21 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2990
  call void @llvm.dbg.value(metadata %struct.group_info* %21, metadata !2939, metadata !DIExpression()), !dbg !2954
  %offset_map_n12 = getelementptr inbounds %struct.group_info, %struct.group_info* %21, i64 0, i32 11, !dbg !2991
  %22 = load i32*, i32** %offset_map_n12, align 8, !dbg !2991
  %23 = load i32, i32* %j, align 4, !dbg !2992
  call void @llvm.dbg.value(metadata i32 %23, metadata !2951, metadata !DIExpression()), !dbg !2955
  %idxprom = zext i32 %23 to i64, !dbg !2990
  %arrayidx = getelementptr inbounds i32, i32* %22, i64 %idxprom, !dbg !2990
  store i32 %20, i32* %arrayidx, align 4, !dbg !2993
  %24 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !2994
  call void @llvm.dbg.value(metadata %struct.group_info* %24, metadata !2939, metadata !DIExpression()), !dbg !2954
  %process_globally = getelementptr inbounds %struct.group_info, %struct.group_info* %24, i64 0, i32 2, !dbg !2995
  store i8 1, i8* %process_globally, align 4, !dbg !2996
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2940, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  call void @llvm.dbg.value(metadata i32* %j, metadata !2951, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !2983
  br label %for.cond6, !dbg !2983, !llvm.loop !2997

for.end:                                          ; preds = %for.cond6
  %.lcssa = phi %struct.group_info* [ %17, %for.cond6 ], !dbg !2955
  %store2_p = getelementptr inbounds %struct.group_info, %struct.group_info* %.lcssa, i64 0, i32 9, !dbg !2999
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_p, align 8, !dbg !2999
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2940, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  call void @llvm.dbg.value(metadata i32* %j, metadata !2951, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %25, i32 0, i32* nonnull %j) #8, !dbg !2999
  br label %for.cond13, !dbg !2999

for.cond13:                                       ; preds = %for.body16, %for.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2940, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  call void @llvm.dbg.value(metadata i32* %j, metadata !2951, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  %call14 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !3001
  %tobool15 = icmp eq i8 %call14, 0, !dbg !2999
  br i1 %tobool15, label %cleanup.loopexit, label %for.body16, !dbg !2999

for.body16:                                       ; preds = %for.cond13
  %26 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3003
  call void @llvm.dbg.value(metadata %struct.group_info* %26, metadata !2939, metadata !DIExpression()), !dbg !2954
  %group_kill17 = getelementptr inbounds %struct.group_info, %struct.group_info* %26, i64 0, i32 10, !dbg !3005
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill17, align 8, !dbg !3005
  %28 = load i32, i32* @current_position, align 4, !dbg !3006
  %call18 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %27, i32 %28) #6, !dbg !3007
  %29 = load i32, i32* @current_position, align 4, !dbg !3008
  %inc19 = add i32 %29, 1, !dbg !3008
  store i32 %inc19, i32* @current_position, align 4, !dbg !3008
  %30 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3009
  call void @llvm.dbg.value(metadata %struct.group_info* %30, metadata !2939, metadata !DIExpression()), !dbg !2954
  %offset_map_p20 = getelementptr inbounds %struct.group_info, %struct.group_info* %30, i64 0, i32 12, !dbg !3010
  %31 = load i32*, i32** %offset_map_p20, align 8, !dbg !3010
  %32 = load i32, i32* %j, align 4, !dbg !3011
  call void @llvm.dbg.value(metadata i32 %32, metadata !2951, metadata !DIExpression()), !dbg !2955
  %idxprom21 = zext i32 %32 to i64, !dbg !3009
  %arrayidx22 = getelementptr inbounds i32, i32* %31, i64 %idxprom21, !dbg !3009
  store i32 %29, i32* %arrayidx22, align 4, !dbg !3012
  %33 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3013
  call void @llvm.dbg.value(metadata %struct.group_info* %33, metadata !2939, metadata !DIExpression()), !dbg !2954
  %process_globally23 = getelementptr inbounds %struct.group_info, %struct.group_info* %33, i64 0, i32 2, !dbg !3014
  store i8 1, i8* %process_globally23, align 4, !dbg !3015
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2940, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  call void @llvm.dbg.value(metadata i32* %j, metadata !2951, metadata !DIExpression(DW_OP_deref)), !dbg !2955
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !3001
  br label %for.cond13, !dbg !3001, !llvm.loop !3016

cleanup.loopexit:                                 ; preds = %for.cond13
  br label %cleanup, !dbg !3018

cleanup:                                          ; preds = %cleanup.loopexit, %for.body
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #7, !dbg !3018
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #7, !dbg !3018
  %inc28 = add i32 %i.0, 1, !dbg !3019
  call void @llvm.dbg.value(metadata i32 %inc28, metadata !2938, metadata !DIExpression()), !dbg !2954
  br label %for.cond, !dbg !3020, !llvm.loop !3021

for.end29:                                        ; preds = %for.cond
  %34 = load i32, i32* @current_position, align 4, !dbg !3023
  %cmp30 = icmp ne i32 %34, 1, !dbg !3024
  %conv32 = zext i1 %cmp30 to i8, !dbg !3023
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3025
  ret i8 %conv32, !dbg !3026
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step3(i8 zeroext %for_spills) unnamed_addr #5 !dbg !3027 {
entry:
  %sbi = alloca %struct.sbitmap_iterator, align 8
  %i = alloca i32, align 4
  %group = alloca %struct.group_info*, align 8
  call void @llvm.dbg.value(metadata i8 %for_spills, metadata !3031, metadata !DIExpression()), !dbg !3071
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3072
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3072
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3072
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !3072
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !3072
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %2) #6, !dbg !3073
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !3033, metadata !DIExpression()), !dbg !3071
  %3 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !3074
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #7, !dbg !3074
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3055, metadata !DIExpression()), !dbg !3071
  %4 = bitcast i32* %i to i8*, !dbg !3075
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7, !dbg !3075
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %call) #6, !dbg !3076
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3077
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !3077
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !3077
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !3077
  br label %for.cond, !dbg !3077

for.cond:                                         ; preds = %for.inc, %entry
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %for.inc ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3078
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3032, metadata !DIExpression()), !dbg !3071
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !3077
  br i1 %tobool, label %for.end, label %for.body, !dbg !3077

for.body:                                         ; preds = %for.cond
  %7 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !3079
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3080
  %8 = load i32, i32* %index, align 8, !dbg !3080
  %idxprom = sext i32 %8 to i64, !dbg !3079
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %7, i64 %idxprom, !dbg !3079
  %9 = load %struct.bb_info*, %struct.bb_info** %arrayidx, align 8, !dbg !3079
  call void @llvm.dbg.value(metadata %struct.bb_info* %9, metadata !3057, metadata !DIExpression()), !dbg !3081
  %gen = getelementptr inbounds %struct.bb_info, %struct.bb_info* %9, i64 0, i32 2, !dbg !3082
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3082
  %tobool3 = icmp eq %struct.bitmap_head_def* %10, null, !dbg !3084
  br i1 %tobool3, label %if.else, label %if.then, !dbg !3085

if.then:                                          ; preds = %for.body
  tail call void @bitmap_clear(%struct.bitmap_head_def* nonnull %10) #6, !dbg !3086
  br label %if.end, !dbg !3086

if.else:                                          ; preds = %for.body
  %call5 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3087
  store %struct.bitmap_head_def* %call5, %struct.bitmap_head_def** %gen, align 8, !dbg !3088
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %index, align 8, !dbg !3089
  %cmp = icmp eq i32 %11, 0, !dbg !3091
  br i1 %cmp, label %if.end15, label %if.else9, !dbg !3092

if.else9:                                         ; preds = %if.end
  %cmp11 = icmp eq i32 %11, 1, !dbg !3093
  br i1 %cmp11, label %if.then12, label %if.else13, !dbg !3095

if.then12:                                        ; preds = %if.else9
  tail call fastcc void @dse_step3_exit_block_scan(%struct.bb_info* %9) #8, !dbg !3096
  br label %if.end15, !dbg !3096

if.else13:                                        ; preds = %if.else9
  tail call fastcc void @dse_step3_scan(i8 zeroext %for_spills, %struct.basic_block_def* nonnull %bb.0) #8, !dbg !3097
  br label %if.end15

if.end15:                                         ; preds = %if.then12, %if.else13, %if.end
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !3098
  %12 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3098
  %tobool16 = icmp eq %struct.VEC_edge_gc* %12, null, !dbg !3098
  br i1 %tobool16, label %cond.end, label %cond.true, !dbg !3098

cond.true:                                        ; preds = %if.end15
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %12, i64 0, i32 0, !dbg !3098
  br label %cond.end, !dbg !3098

cond.end:                                         ; preds = %if.end15, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end15 ], !dbg !3098
  %call18 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !3098
  %cmp19 = icmp eq i32 %call18, 0, !dbg !3100
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !3101

if.then20:                                        ; preds = %cond.end
  tail call fastcc void @mark_reachable_blocks(%struct.simple_bitmap_def* %call, %struct.basic_block_def* nonnull %bb.0) #8, !dbg !3102
  br label %if.end21, !dbg !3102

if.end21:                                         ; preds = %if.then20, %cond.end
  %in = getelementptr inbounds %struct.bb_info, %struct.bb_info* %9, i64 0, i32 4, !dbg !3103
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !3103
  %tobool22 = icmp eq %struct.bitmap_head_def* %13, null, !dbg !3105
  br i1 %tobool22, label %if.end26, label %if.then23, !dbg !3106

if.then23:                                        ; preds = %if.end21
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %13) #6, !dbg !3107
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in, align 8, !dbg !3107
  br label %if.end26, !dbg !3107

if.end26:                                         ; preds = %if.end21, %if.then23
  %out = getelementptr inbounds %struct.bb_info, %struct.bb_info* %9, i64 0, i32 5, !dbg !3108
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !3108
  %tobool27 = icmp eq %struct.bitmap_head_def* %14, null, !dbg !3110
  br i1 %tobool27, label %for.inc, label %if.then28, !dbg !3111

if.then28:                                        ; preds = %if.end26
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %14) #6, !dbg !3112
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out, align 8, !dbg !3112
  br label %for.inc, !dbg !3112

for.inc:                                          ; preds = %if.end26, %if.then28
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !3113
  br label %for.cond, !dbg !3113, !llvm.loop !3114

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3044, metadata !DIExpression(DW_OP_deref)), !dbg !3071
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %call, i32 0) #8, !dbg !3116
  %15 = bitcast %struct.group_info** %group to i8*, !dbg !3117
  br label %for.cond32, !dbg !3116

for.cond32:                                       ; preds = %for.inc67, %for.end
  %all_ones.0 = phi %struct.bitmap_head_def* [ null, %for.end ], [ %all_ones.2, %for.inc67 ], !dbg !3118
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_ones.0, metadata !3055, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3044, metadata !DIExpression(DW_OP_deref)), !dbg !3071
  call void @llvm.dbg.value(metadata i32* %i, metadata !3056, metadata !DIExpression(DW_OP_deref)), !dbg !3071
  %call33 = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %i) #8, !dbg !3119
  %tobool34 = icmp eq i8 %call33, 0, !dbg !3116
  br i1 %tobool34, label %for.end68, label %for.body35, !dbg !3116

for.body35:                                       ; preds = %for.cond32
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @all_blocks, align 8, !dbg !3120
  %17 = load i32, i32* %i, align 4, !dbg !3121
  call void @llvm.dbg.value(metadata i32 %17, metadata !3056, metadata !DIExpression()), !dbg !3071
  %call36 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %16, i32 %17) #6, !dbg !3122
  %tobool37 = icmp eq i32 %call36, 0, !dbg !3122
  br i1 %tobool37, label %for.inc67, label %if.then38, !dbg !3123

if.then38:                                        ; preds = %for.body35
  %18 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !3124
  %19 = load i32, i32* %i, align 4, !dbg !3125
  call void @llvm.dbg.value(metadata i32 %19, metadata !3056, metadata !DIExpression()), !dbg !3071
  %idxprom40 = zext i32 %19 to i64, !dbg !3124
  %arrayidx41 = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %18, i64 %idxprom40, !dbg !3124
  %20 = load %struct.bb_info*, %struct.bb_info** %arrayidx41, align 8, !dbg !3124
  call void @llvm.dbg.value(metadata %struct.bb_info* %20, metadata !3061, metadata !DIExpression()), !dbg !3126
  %tobool42 = icmp eq %struct.bitmap_head_def* %all_ones.0, null, !dbg !3127
  br i1 %tobool42, label %if.then43, label %if.end58, !dbg !3128

if.then43:                                        ; preds = %if.then38
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7, !dbg !3129
  %call44 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3130
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call44, metadata !3055, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 0, metadata !3067, metadata !DIExpression()), !dbg !3117
  br label %for.cond45, !dbg !3131

for.cond45:                                       ; preds = %for.body54, %if.then43
  %j.0 = phi i32 [ 0, %if.then43 ], [ %inc, %for.body54 ], !dbg !3133
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3067, metadata !DIExpression()), !dbg !3117
  %21 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !3134
  %base48 = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %21, i64 0, i32 0, !dbg !3134
  call void @llvm.dbg.value(metadata %struct.group_info** %group, metadata !3070, metadata !DIExpression(DW_OP_deref)), !dbg !3117
  %call52 = call fastcc i32 @VEC_group_info_t_base_iterate(%struct.VEC_group_info_t_base* %base48, i32 %j.0, %struct.group_info** nonnull %group) #8, !dbg !3134
  %tobool53 = icmp eq i32 %call52, 0, !dbg !3136
  br i1 %tobool53, label %for.end57, label %for.body54, !dbg !3136

for.body54:                                       ; preds = %for.cond45
  %22 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3137
  call void @llvm.dbg.value(metadata %struct.group_info* %22, metadata !3070, metadata !DIExpression()), !dbg !3117
  %group_kill = getelementptr inbounds %struct.group_info, %struct.group_info* %22, i64 0, i32 10, !dbg !3138
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill, align 8, !dbg !3138
  %call55 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call44, %struct.bitmap_head_def* %23) #6, !dbg !3139
  %inc = add i32 %j.0, 1, !dbg !3140
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3067, metadata !DIExpression()), !dbg !3117
  br label %for.cond45, !dbg !3141, !llvm.loop !3142

for.end57:                                        ; preds = %for.cond45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7, !dbg !3144
  br label %if.end58, !dbg !3145

if.end58:                                         ; preds = %if.then38, %for.end57
  %all_ones.1 = phi %struct.bitmap_head_def* [ %all_ones.0, %if.then38 ], [ %call44, %for.end57 ], !dbg !3071
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_ones.1, metadata !3055, metadata !DIExpression()), !dbg !3071
  %out59 = getelementptr inbounds %struct.bb_info, %struct.bb_info* %20, i64 0, i32 5, !dbg !3146
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out59, align 8, !dbg !3146
  %tobool60 = icmp eq %struct.bitmap_head_def* %24, null, !dbg !3148
  br i1 %tobool60, label %if.then61, label %for.inc67, !dbg !3149

if.then61:                                        ; preds = %if.end58
  %call62 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3150
  store %struct.bitmap_head_def* %call62, %struct.bitmap_head_def** %out59, align 8, !dbg !3152
  call void @bitmap_copy(%struct.bitmap_head_def* %call62, %struct.bitmap_head_def* %all_ones.1) #6, !dbg !3153
  br label %for.inc67, !dbg !3154

for.inc67:                                        ; preds = %if.end58, %for.body35, %if.then61
  %all_ones.2 = phi %struct.bitmap_head_def* [ %all_ones.0, %for.body35 ], [ %all_ones.1, %if.then61 ], [ %all_ones.1, %if.end58 ], !dbg !3118
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_ones.2, metadata !3055, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3044, metadata !DIExpression(DW_OP_deref)), !dbg !3071
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #8, !dbg !3119
  br label %for.cond32, !dbg !3119, !llvm.loop !3155

for.end68:                                        ; preds = %for.cond32
  %all_ones.0.lcssa = phi %struct.bitmap_head_def* [ %all_ones.0, %for.cond32 ], !dbg !3118
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_ones.0.lcssa, metadata !3055, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_ones.0.lcssa, metadata !3055, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_ones.0.lcssa, metadata !3055, metadata !DIExpression()), !dbg !3071
  %tobool69 = icmp eq %struct.bitmap_head_def* %all_ones.0.lcssa, null, !dbg !3157
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !3159

if.then70:                                        ; preds = %for.end68
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %all_ones.0.lcssa) #6, !dbg !3160
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3055, metadata !DIExpression()), !dbg !3071
  br label %if.end71, !dbg !3160

if.end71:                                         ; preds = %for.end68, %if.then70
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !3161
  %25 = load i8*, i8** %popcount, align 8, !dbg !3161
  call void @free(i8* %25) #6, !dbg !3161
  %26 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !3161
  call void @free(i8* %26) #6, !dbg !3161
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7, !dbg !3162
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #7, !dbg !3162
  ret void, !dbg !3162
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step4() unnamed_addr #5 !dbg !3163 {
entry:
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @all_blocks, align 8, !dbg !3172
  %call = tail call i32* @df_get_postorder(i32 2) #6, !dbg !3173
  %call1 = tail call i32 @df_get_n_blocks(i32 2) #6, !dbg !3174
  tail call void @df_simple_dataflow(i32 2, void (%struct.bitmap_head_def*)* null, void (%struct.basic_block_def*)* nonnull @dse_confluence_0, void (%struct.edge_def*)* nonnull @dse_confluence_n, i8 (i32)* nonnull @dse_transfer_function, %struct.bitmap_head_def* %0, i32* %call, i32 %call1) #6, !dbg !3175
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3176
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !3176
  br i1 %tobool, label %if.end26, label %if.then, !dbg !3177

if.then:                                          ; preds = %entry
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0)) #6, !dbg !3178
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3179
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !3179
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3179
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !3179
  br label %for.cond, !dbg !3179

for.cond:                                         ; preds = %for.inc, %if.then
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.then ], [ %next_bb, %for.inc ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3180
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3165, metadata !DIExpression()), !dbg !3181
  %tobool3 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !3179
  br i1 %tobool3, label %if.end26.loopexit, label %for.body, !dbg !3179

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !3182
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3183
  %5 = load i32, i32* %index, align 8, !dbg !3183
  %idxprom = sext i32 %5 to i64, !dbg !3182
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %4, i64 %idxprom, !dbg !3182
  %6 = load %struct.bb_info*, %struct.bb_info** %arrayidx, align 8, !dbg !3182
  call void @llvm.dbg.value(metadata %struct.bb_info* %6, metadata !3168, metadata !DIExpression()), !dbg !3184
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3185
  tail call void @df_print_bb_index(%struct.basic_block_def* nonnull %bb.0, %struct._IO_FILE* %7) #6, !dbg !3186
  %in = getelementptr inbounds %struct.bb_info, %struct.bb_info* %6, i64 0, i32 4, !dbg !3187
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !3187
  %tobool4 = icmp eq %struct.bitmap_head_def* %8, null, !dbg !3189
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3190
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !3191

if.then5:                                         ; preds = %for.body
  tail call void @bitmap_print(%struct._IO_FILE* %9, %struct.bitmap_head_def* nonnull %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3192
  br label %if.end, !dbg !3192

if.else:                                          ; preds = %for.body
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.66, i64 0, i64 0)) #6, !dbg !3193
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %gen = getelementptr inbounds %struct.bb_info, %struct.bb_info* %6, i64 0, i32 2, !dbg !3194
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3194
  %tobool8 = icmp eq %struct.bitmap_head_def* %10, null, !dbg !3196
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3197
  br i1 %tobool8, label %if.else11, label %if.then9, !dbg !3198

if.then9:                                         ; preds = %if.end
  tail call void @bitmap_print(%struct._IO_FILE* %11, %struct.bitmap_head_def* nonnull %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3199
  br label %if.end13, !dbg !3199

if.else11:                                        ; preds = %if.end
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.68, i64 0, i64 0)) #6, !dbg !3200
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.then9
  %kill = getelementptr inbounds %struct.bb_info, %struct.bb_info* %6, i64 0, i32 3, !dbg !3201
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !3201
  %tobool14 = icmp eq %struct.bitmap_head_def* %12, null, !dbg !3203
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3204
  br i1 %tobool14, label %if.else17, label %if.then15, !dbg !3205

if.then15:                                        ; preds = %if.end13
  tail call void @bitmap_print(%struct._IO_FILE* %13, %struct.bitmap_head_def* nonnull %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3206
  br label %if.end19, !dbg !3206

if.else17:                                        ; preds = %if.end13
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.70, i64 0, i64 0)) #6, !dbg !3207
  br label %if.end19

if.end19:                                         ; preds = %if.else17, %if.then15
  %out = getelementptr inbounds %struct.bb_info, %struct.bb_info* %6, i64 0, i32 5, !dbg !3208
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !3208
  %tobool20 = icmp eq %struct.bitmap_head_def* %14, null, !dbg !3210
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3211
  br i1 %tobool20, label %if.else23, label %if.then21, !dbg !3212

if.then21:                                        ; preds = %if.end19
  tail call void @bitmap_print(%struct._IO_FILE* %15, %struct.bitmap_head_def* nonnull %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3213
  br label %for.inc, !dbg !3213

if.else23:                                        ; preds = %if.end19
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72, i64 0, i64 0)) #6, !dbg !3214
  br label %for.inc

for.inc:                                          ; preds = %if.then21, %if.else23
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !3215
  br label %for.cond, !dbg !3215, !llvm.loop !3216

if.end26.loopexit:                                ; preds = %for.cond
  br label %if.end26, !dbg !3218

if.end26:                                         ; preds = %if.end26.loopexit, %entry
  ret void, !dbg !3218
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step5_nospill() unnamed_addr #5 !dbg !3219 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3241
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3241
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3241
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3241
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3241
  br label %for.cond, !dbg !3241

for.cond:                                         ; preds = %for.inc120, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.inc120 ], !dbg !3242
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc120 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3243
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3243
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3221, metadata !DIExpression()), !dbg !3244
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3242
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3242
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !3242
  br i1 %cmp, label %for.end122, label %for.body, !dbg !3241

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !3245
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3246
  %6 = load i32, i32* %index, align 8, !dbg !3246
  %idxprom = sext i32 %6 to i64, !dbg !3245
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %5, i64 %idxprom, !dbg !3245
  %7 = load %struct.bb_info*, %struct.bb_info** %arrayidx, align 8, !dbg !3245
  call void @llvm.dbg.value(metadata %struct.bb_info* %7, metadata !3222, metadata !DIExpression()), !dbg !3247
  %last_insn = getelementptr inbounds %struct.bb_info, %struct.bb_info* %7, i64 0, i32 0, !dbg !3248
  %out = getelementptr inbounds %struct.bb_info, %struct.bb_info* %7, i64 0, i32 5, !dbg !3249
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !3249
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %8, metadata !3227, metadata !DIExpression()), !dbg !3247
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %8, i64 0, i32 0, !dbg !3250
  br label %while.cond, !dbg !3251

while.cond:                                       ; preds = %if.end118, %for.body
  %insn_info.0.in = phi %struct.insn_info** [ %last_insn, %for.body ], [ %prev_insn, %if.end118 ]
  %insn_info.0 = load %struct.insn_info*, %struct.insn_info** %insn_info.0.in, align 8, !dbg !3247
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info.0, metadata !3226, metadata !DIExpression()), !dbg !3247
  %tobool = icmp eq %struct.insn_info* %insn_info.0, null, !dbg !3251
  br i1 %tobool, label %for.inc120, label %while.body, !dbg !3251

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !3228, metadata !DIExpression()), !dbg !3252
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3253
  %tobool3 = icmp eq %struct._IO_FILE* %9, null, !dbg !3253
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !3255

land.lhs.true:                                    ; preds = %while.body
  %insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 5, !dbg !3256
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3256
  %tobool4 = icmp eq %struct.rtx_def* %10, null, !dbg !3257
  br i1 %tobool4, label %if.end, label %if.then, !dbg !3258

if.then:                                          ; preds = %land.lhs.true
  %arrayidx6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3259
  %rt_int = bitcast %union.rtunion_def* %arrayidx6 to i32*, !dbg !3259
  %11 = load i32, i32* %rt_int, align 8, !dbg !3259
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.73, i64 0, i64 0), i32 %11) #6, !dbg !3261
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3262
  tail call void @bitmap_print(%struct._IO_FILE* %12, %struct.bitmap_head_def* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3263
  br label %if.end, !dbg !3264

if.end:                                           ; preds = %land.lhs.true, %while.body, %if.then
  %insn7 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 5, !dbg !3265
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn7, align 8, !dbg !3265
  %tobool8 = icmp eq %struct.rtx_def* %13, null, !dbg !3266
  br i1 %tobool8, label %if.end72, label %land.lhs.true9, !dbg !3267

land.lhs.true9:                                   ; preds = %if.end
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !3267
  %bf.load = load i32, i32* %14, align 8, !dbg !3268
  %bf.clear = and i32 %bf.load, 65535, !dbg !3268
  %cmp11 = icmp eq i32 %bf.clear, 8, !dbg !3268
  br i1 %cmp11, label %land.lhs.true26, label %lor.lhs.false, !dbg !3268

lor.lhs.false:                                    ; preds = %land.lhs.true9
  %cmp15 = icmp eq i32 %bf.clear, 7, !dbg !3268
  br i1 %cmp15, label %land.lhs.true26, label %lor.lhs.false16, !dbg !3268

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %cmp20 = icmp eq i32 %bf.clear, 9, !dbg !3268
  br i1 %cmp20, label %land.lhs.true26, label %lor.lhs.false21, !dbg !3268

lor.lhs.false21:                                  ; preds = %lor.lhs.false16
  %cmp25 = icmp eq i32 %bf.clear, 10, !dbg !3268
  br i1 %cmp25, label %land.lhs.true26, label %if.end72, !dbg !3269

land.lhs.true26:                                  ; preds = %lor.lhs.false21, %lor.lhs.false16, %lor.lhs.false, %land.lhs.true9
  %cannot_delete = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 0, !dbg !3270
  %15 = load i8, i8* %cannot_delete, align 8, !dbg !3270
  %tobool27 = icmp eq i8 %15, 0, !dbg !3271
  br i1 %tobool27, label %land.lhs.true28, label %if.end72, !dbg !3272

land.lhs.true28:                                  ; preds = %land.lhs.true26
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !3273
  %tobool29 = icmp eq %struct.bitmap_element_def* %16, null, !dbg !3273
  br i1 %tobool29, label %if.end72, label %if.then30, !dbg !3274

if.then30:                                        ; preds = %land.lhs.true28
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 6, !dbg !3275
  call void @llvm.dbg.value(metadata i8 1, metadata !3228, metadata !DIExpression()), !dbg !3252
  br label %while.cond31, !dbg !3276

while.cond31:                                     ; preds = %while.body33, %if.then30
  %store_info.0.in = phi %struct.store_info** [ %store_rec, %if.then30 ], [ %next, %while.body33 ]
  %store_info.0 = load %struct.store_info*, %struct.store_info** %store_info.0.in, align 8, !dbg !3277
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.0, metadata !3230, metadata !DIExpression()), !dbg !3277
  %is_set = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 0, !dbg !3278
  %17 = load i8, i8* %is_set, align 8, !dbg !3278
  %tobool32 = icmp eq i8 %17, 0, !dbg !3279
  br i1 %tobool32, label %while.body33, label %while.end, !dbg !3276

while.body33:                                     ; preds = %while.cond31
  %next = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 10, !dbg !3280
  br label %while.cond31, !dbg !3276, !llvm.loop !3281

while.end:                                        ; preds = %while.cond31
  %store_info.0.lcssa = phi %struct.store_info* [ %store_info.0, %while.cond31 ], !dbg !3277
  %alias_set = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0.lcssa, i64 0, i32 6, !dbg !3282
  %18 = load i32, i32* %alias_set, align 8, !dbg !3282
  %tobool34 = icmp eq i32 %18, 0, !dbg !3283
  br i1 %tobool34, label %if.else, label %if.end59, !dbg !3284

if.else:                                          ; preds = %while.end
  %19 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !3285
  %base = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %19, i64 0, i32 0, !dbg !3285
  %group_id = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0.lcssa, i64 0, i32 2, !dbg !3285
  %20 = load i32, i32* %group_id, align 4, !dbg !3285
  %call37 = tail call fastcc %struct.group_info* @VEC_group_info_t_base_index(%struct.VEC_group_info_t_base* %base, i32 %20) #8, !dbg !3285
  call void @llvm.dbg.value(metadata %struct.group_info* %call37, metadata !3236, metadata !DIExpression()), !dbg !3286
  %begin = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0.lcssa, i64 0, i32 7, !dbg !3287
  %21 = load i64, i64* %begin, align 8, !dbg !3287
  call void @llvm.dbg.value(metadata i64 %21, metadata !3233, metadata !DIExpression()), !dbg !3286
  %end = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0.lcssa, i64 0, i32 8, !dbg !3288
  br label %for.cond38, !dbg !3289

for.cond38:                                       ; preds = %for.inc, %if.else
  %deleted.0 = phi i8 [ 1, %if.else ], [ %deleted.1, %for.inc ], !dbg !3277
  %i.0 = phi i64 [ %21, %if.else ], [ %inc, %for.inc ], !dbg !3290
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 %deleted.0, metadata !3228, metadata !DIExpression()), !dbg !3252
  %22 = load i64, i64* %end, align 8, !dbg !3291
  %cmp39 = icmp slt i64 %i.0, %22, !dbg !3292
  br i1 %cmp39, label %for.body40, label %if.end59.loopexit, !dbg !3293

for.body40:                                       ; preds = %for.cond38
  %call42 = tail call fastcc i32 @get_bitmap_index(%struct.group_info* %call37, i64 %i.0) #8, !dbg !3294
  call void @llvm.dbg.value(metadata i32 %call42, metadata !3237, metadata !DIExpression()), !dbg !3295
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3296
  %tobool43 = icmp eq %struct._IO_FILE* %23, null, !dbg !3296
  br i1 %tobool43, label %if.end46, label %if.then44, !dbg !3298

if.then44:                                        ; preds = %for.body40
  %conv = trunc i64 %i.0 to i32, !dbg !3299
  %call45 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %23, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i64 0, i64 0), i32 %conv, i32 %call42) #6, !dbg !3300
  br label %if.end46, !dbg !3300

if.end46:                                         ; preds = %for.body40, %if.then44
  %cmp47 = icmp eq i32 %call42, 0, !dbg !3301
  br i1 %cmp47, label %if.then52, label %lor.lhs.false49, !dbg !3303

lor.lhs.false49:                                  ; preds = %if.end46
  %call50 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %call42) #6, !dbg !3304
  %tobool51 = icmp eq i32 %call50, 0, !dbg !3304
  br i1 %tobool51, label %if.then52, label %cleanup, !dbg !3305

if.then52:                                        ; preds = %lor.lhs.false49, %if.end46
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3306
  %tobool53 = icmp eq %struct._IO_FILE* %24, null, !dbg !3306
  br i1 %tobool53, label %cleanup, label %if.then54, !dbg !3309

if.then54:                                        ; preds = %if.then52
  %conv55 = trunc i64 %i.0 to i32, !dbg !3310
  %call56 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i64 0, i64 0), i32 %conv55) #6, !dbg !3311
  br label %cleanup, !dbg !3311

cleanup:                                          ; preds = %if.then52, %lor.lhs.false49, %if.then54
  %deleted.1 = phi i8 [ 0, %if.then54 ], [ 0, %if.then52 ], [ %deleted.0, %lor.lhs.false49 ], !dbg !3277
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then54 ], [ false, %if.then52 ], [ true, %lor.lhs.false49 ]
  call void @llvm.dbg.value(metadata i8 %deleted.1, metadata !3228, metadata !DIExpression()), !dbg !3252
  br i1 %cleanup.dest.slot.0, label %for.inc, label %if.end59.loopexit

for.inc:                                          ; preds = %cleanup
  %inc = add nsw i64 %i.0, 1, !dbg !3312
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3233, metadata !DIExpression()), !dbg !3286
  br label %for.cond38, !dbg !3313, !llvm.loop !3314

if.end59.loopexit:                                ; preds = %cleanup, %for.cond38
  %deleted.3.ph = phi i8 [ %deleted.0, %for.cond38 ], [ %deleted.1, %cleanup ]
  br label %if.end59, !dbg !3316

if.end59:                                         ; preds = %if.end59.loopexit, %while.end
  %deleted.3 = phi i8 [ 0, %while.end ], [ %deleted.3.ph, %if.end59.loopexit ], !dbg !3318
  call void @llvm.dbg.value(metadata i8 %deleted.3, metadata !3228, metadata !DIExpression()), !dbg !3252
  %tobool60 = icmp eq i8 %deleted.3, 0, !dbg !3316
  br i1 %tobool60, label %if.end72, label %if.then61, !dbg !3319

if.then61:                                        ; preds = %if.end59
  %call62 = tail call zeroext i8 @dbg_cnt(i32 10) #6, !dbg !3320
  %tobool63 = icmp eq i8 %call62, 0, !dbg !3320
  br i1 %tobool63, label %if.end72, label %if.then64, !dbg !3323

if.then64:                                        ; preds = %if.then61
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn7, align 8, !dbg !3324
  tail call fastcc void @check_for_inc_dec(%struct.rtx_def* %25) #8, !dbg !3326
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn7, align 8, !dbg !3327
  %call67 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %26) #6, !dbg !3328
  store %struct.rtx_def* null, %struct.rtx_def** %insn7, align 8, !dbg !3329
  %27 = load i32, i32* @globally_deleted, align 4, !dbg !3330
  %inc69 = add nsw i32 %27, 1, !dbg !3330
  store i32 %inc69, i32* @globally_deleted, align 4, !dbg !3330
  br label %if.end72, !dbg !3331

if.end72:                                         ; preds = %if.then61, %if.end59, %land.lhs.true28, %land.lhs.true26, %if.end, %if.then64, %lor.lhs.false21
  %deleted.4 = phi i8 [ 0, %land.lhs.true26 ], [ 0, %land.lhs.true28 ], [ 0, %lor.lhs.false21 ], [ 0, %if.end ], [ %deleted.3, %if.then61 ], [ %deleted.3, %if.then64 ], [ 0, %if.end59 ], !dbg !3252
  call void @llvm.dbg.value(metadata i8 %deleted.4, metadata !3228, metadata !DIExpression()), !dbg !3252
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn7, align 8, !dbg !3332
  %tobool74 = icmp eq %struct.rtx_def* %28, null, !dbg !3334
  br i1 %tobool74, label %if.end118, label %land.lhs.true75, !dbg !3335

land.lhs.true75:                                  ; preds = %if.end72
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 0, !dbg !3335
  %bf.load77 = load i32, i32* %29, align 8, !dbg !3336
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !3336
  %cmp79 = icmp eq i32 %bf.clear78, 8, !dbg !3336
  br i1 %cmp79, label %land.lhs.true99, label %lor.lhs.false81, !dbg !3336

lor.lhs.false81:                                  ; preds = %land.lhs.true75
  %cmp85 = icmp eq i32 %bf.clear78, 7, !dbg !3336
  br i1 %cmp85, label %land.lhs.true99, label %lor.lhs.false87, !dbg !3336

lor.lhs.false87:                                  ; preds = %lor.lhs.false81
  %cmp91 = icmp eq i32 %bf.clear78, 9, !dbg !3336
  br i1 %cmp91, label %land.lhs.true99, label %lor.lhs.false93, !dbg !3336

lor.lhs.false93:                                  ; preds = %lor.lhs.false87
  %cmp97 = icmp ne i32 %bf.clear78, 10, !dbg !3336
  %tobool100 = icmp ne i8 %deleted.4, 0, !dbg !3337
  %or.cond = or i1 %cmp97, %tobool100, !dbg !3338
  br i1 %or.cond, label %if.end118, label %if.then101, !dbg !3338

land.lhs.true99:                                  ; preds = %lor.lhs.false87, %lor.lhs.false81, %land.lhs.true75
  %tobool100.old = icmp eq i8 %deleted.4, 0, !dbg !3337
  br i1 %tobool100.old, label %if.then101, label %if.end118, !dbg !3339

if.then101:                                       ; preds = %land.lhs.true99, %lor.lhs.false93
  %store_rec102 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 6, !dbg !3340
  %30 = load %struct.store_info*, %struct.store_info** %store_rec102, align 8, !dbg !3340
  tail call fastcc void @scan_stores_nospill(%struct.store_info* %30, %struct.bitmap_head_def* %8, %struct.bitmap_head_def* null) #8, !dbg !3342
  %wild_read = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 1, !dbg !3343
  %31 = load i8, i8* %wild_read, align 1, !dbg !3343
  %tobool103 = icmp eq i8 %31, 0, !dbg !3345
  br i1 %tobool103, label %if.else109, label %if.then104, !dbg !3346

if.then104:                                       ; preds = %if.then101
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3347
  %tobool105 = icmp eq %struct._IO_FILE* %32, null, !dbg !3347
  br i1 %tobool105, label %if.end108, label %if.then106, !dbg !3350

if.then106:                                       ; preds = %if.then104
  %call107 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i64 0, i64 0)) #6, !dbg !3351
  br label %if.end108, !dbg !3351

if.end108:                                        ; preds = %if.then104, %if.then106
  tail call void @bitmap_clear(%struct.bitmap_head_def* %8) #6, !dbg !3352
  br label %if.end118, !dbg !3353

if.else109:                                       ; preds = %if.then101
  %read_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 7, !dbg !3354
  %33 = load %struct.read_info*, %struct.read_info** %read_rec, align 8, !dbg !3354
  %tobool110 = icmp eq %struct.read_info* %33, null, !dbg !3356
  br i1 %tobool110, label %if.end118, label %if.then111, !dbg !3357

if.then111:                                       ; preds = %if.else109
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3358
  %tobool112 = icmp eq %struct._IO_FILE* %34, null, !dbg !3358
  br i1 %tobool112, label %if.end115, label %if.then113, !dbg !3361

if.then113:                                       ; preds = %if.then111
  %call114 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !3362
  br label %if.end115, !dbg !3362

if.end115:                                        ; preds = %if.then111, %if.then113
  tail call fastcc void @scan_reads_nospill(%struct.insn_info* nonnull %insn_info.0, %struct.bitmap_head_def* %8, %struct.bitmap_head_def* null) #8, !dbg !3363
  br label %if.end118, !dbg !3364

if.end118:                                        ; preds = %land.lhs.true99, %if.else109, %if.end72, %if.end108, %if.end115, %lor.lhs.false93
  %prev_insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 8, !dbg !3365
  br label %while.cond, !dbg !3251, !llvm.loop !3366

for.inc120:                                       ; preds = %while.cond
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3242
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3368
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3242
  br label %for.cond, !dbg !3242, !llvm.loop !3369

for.end122:                                       ; preds = %for.cond
  ret void, !dbg !3371
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @dse_step2_spill() unnamed_addr #5 !dbg !3372 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %0 = bitcast i32* %j to i8*, !dbg !3377
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3377
  %1 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !3378
  call void @llvm.dbg.value(metadata %struct.group_info* %1, metadata !3375, metadata !DIExpression()), !dbg !3379
  %2 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3380
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #7, !dbg !3380
  store i32 1, i32* @current_position, align 4, !dbg !3381
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3382
  %tobool = icmp eq %struct._IO_FILE* %3, null, !dbg !3382
  br i1 %tobool, label %if.end, label %if.then, !dbg !3384

if.then:                                          ; preds = %entry
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !3385
  tail call void @bitmap_print(%struct._IO_FILE* nonnull %3, %struct.bitmap_head_def* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3387
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3388
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @disqualified_clear_alias_sets, align 8, !dbg !3389
  tail call void @bitmap_print(%struct._IO_FILE* %5, %struct.bitmap_head_def* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3390
  br label %if.end, !dbg !3391

if.end:                                           ; preds = %entry, %if.then
  %offset_map_n = getelementptr inbounds %struct.group_info, %struct.group_info* %1, i64 0, i32 11, !dbg !3392
  %7 = bitcast i32** %offset_map_n to i8**, !dbg !3392
  %8 = load i8*, i8** %7, align 8, !dbg !3392
  %offset_map_size_n = getelementptr inbounds %struct.group_info, %struct.group_info* %1, i64 0, i32 13, !dbg !3393
  %9 = load i32, i32* %offset_map_size_n, align 8, !dbg !3393
  %conv = sext i32 %9 to i64, !dbg !3394
  %mul = shl nsw i64 %conv, 2, !dbg !3395
  %call = tail call i8* @memset(i8* %8, i32 0, i64 %mul) #6, !dbg !3396
  %offset_map_p = getelementptr inbounds %struct.group_info, %struct.group_info* %1, i64 0, i32 12, !dbg !3397
  %10 = bitcast i32** %offset_map_p to i8**, !dbg !3397
  %11 = load i8*, i8** %10, align 8, !dbg !3397
  %offset_map_size_p = getelementptr inbounds %struct.group_info, %struct.group_info* %1, i64 0, i32 14, !dbg !3398
  %12 = load i32, i32* %offset_map_size_p, align 4, !dbg !3398
  %conv1 = sext i32 %12 to i64, !dbg !3399
  %mul2 = shl nsw i64 %conv1, 2, !dbg !3400
  %call3 = tail call i8* @memset(i8* %11, i32 0, i64 %mul2) #6, !dbg !3401
  %group_kill = getelementptr inbounds %struct.group_info, %struct.group_info* %1, i64 0, i32 10, !dbg !3402
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill, align 8, !dbg !3402
  tail call void @bitmap_clear(%struct.bitmap_head_def* %13) #6, !dbg !3403
  %store2_p = getelementptr inbounds %struct.group_info, %struct.group_info* %1, i64 0, i32 9, !dbg !3404
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_p, align 8, !dbg !3404
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @disqualified_clear_alias_sets, align 8, !dbg !3405
  %call4 = tail call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %14, %struct.bitmap_head_def* %15) #6, !dbg !3406
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_p, align 8, !dbg !3407
  call void @llvm.dbg.value(metadata i32* %j, metadata !3374, metadata !DIExpression(DW_OP_deref)), !dbg !3379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3376, metadata !DIExpression(DW_OP_deref)), !dbg !3379
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %16, i32 0, i32* nonnull %j) #8, !dbg !3407
  %process_globally = getelementptr inbounds %struct.group_info, %struct.group_info* %1, i64 0, i32 2, !dbg !3409
  br label %for.cond, !dbg !3407

for.cond:                                         ; preds = %for.body, %if.end
  call void @llvm.dbg.value(metadata i32* %j, metadata !3374, metadata !DIExpression(DW_OP_deref)), !dbg !3379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3376, metadata !DIExpression(DW_OP_deref)), !dbg !3379
  %call6 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !3412
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3407
  br i1 %tobool7, label %for.end, label %for.body, !dbg !3407

for.body:                                         ; preds = %for.cond
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill, align 8, !dbg !3413
  %18 = load i32, i32* @current_position, align 4, !dbg !3414
  %call9 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %17, i32 %18) #6, !dbg !3415
  %19 = load i32, i32* @current_position, align 4, !dbg !3416
  %inc = add i32 %19, 1, !dbg !3416
  store i32 %inc, i32* @current_position, align 4, !dbg !3416
  %20 = load i32*, i32** %offset_map_p, align 8, !dbg !3417
  %21 = load i32, i32* %j, align 4, !dbg !3418
  call void @llvm.dbg.value(metadata i32 %21, metadata !3374, metadata !DIExpression()), !dbg !3379
  %idxprom = zext i32 %21 to i64, !dbg !3419
  %arrayidx = getelementptr inbounds i32, i32* %20, i64 %idxprom, !dbg !3419
  store i32 %19, i32* %arrayidx, align 4, !dbg !3420
  store i8 1, i8* %process_globally, align 4, !dbg !3421
  call void @llvm.dbg.value(metadata i32* %j, metadata !3374, metadata !DIExpression(DW_OP_deref)), !dbg !3379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3376, metadata !DIExpression(DW_OP_deref)), !dbg !3379
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !3412
  br label %for.cond, !dbg !3412, !llvm.loop !3422

for.end:                                          ; preds = %for.cond
  %22 = load i32, i32* @current_position, align 4, !dbg !3424
  %cmp = icmp ne i32 %22, 1, !dbg !3425
  %conv12 = zext i1 %cmp to i8, !dbg !3424
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #7, !dbg !3426
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3426
  ret i8 %conv12, !dbg !3427
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step5_spill() unnamed_addr #5 !dbg !3428 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3446
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3446
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3446
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3446
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3446
  br label %for.cond, !dbg !3446

for.cond:                                         ; preds = %for.inc, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre2, %for.inc ], !dbg !3447
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3448
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3448
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3430, metadata !DIExpression()), !dbg !3449
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3447
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3447
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !3447
  br i1 %cmp, label %for.end, label %for.body, !dbg !3446

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !3450
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3451
  %6 = load i32, i32* %index, align 8, !dbg !3451
  %idxprom = sext i32 %6 to i64, !dbg !3450
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %5, i64 %idxprom, !dbg !3450
  %7 = load %struct.bb_info*, %struct.bb_info** %arrayidx, align 8, !dbg !3450
  call void @llvm.dbg.value(metadata %struct.bb_info* %7, metadata !3431, metadata !DIExpression()), !dbg !3452
  %last_insn = getelementptr inbounds %struct.bb_info, %struct.bb_info* %7, i64 0, i32 0, !dbg !3453
  %out = getelementptr inbounds %struct.bb_info, %struct.bb_info* %7, i64 0, i32 5, !dbg !3454
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !3454
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %8, metadata !3436, metadata !DIExpression()), !dbg !3452
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %8, i64 0, i32 0, !dbg !3455
  br label %while.cond, !dbg !3456

while.cond:                                       ; preds = %if.end87, %for.body
  %insn_info.0.in = phi %struct.insn_info** [ %last_insn, %for.body ], [ %prev_insn, %if.end87 ]
  %insn_info.0 = load %struct.insn_info*, %struct.insn_info** %insn_info.0.in, align 8, !dbg !3452
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info.0, metadata !3435, metadata !DIExpression()), !dbg !3452
  %tobool = icmp eq %struct.insn_info* %insn_info.0, null, !dbg !3456
  br i1 %tobool, label %for.inc, label %while.body, !dbg !3456

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !3437, metadata !DIExpression()), !dbg !3457
  %insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 5, !dbg !3458
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3458
  %tobool3 = icmp eq %struct.rtx_def* %9, null, !dbg !3459
  br i1 %tobool3, label %if.end56, label %land.lhs.true, !dbg !3460

land.lhs.true:                                    ; preds = %while.body
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 0, !dbg !3460
  %bf.load = load i32, i32* %10, align 8, !dbg !3461
  %bf.clear = and i32 %bf.load, 65535, !dbg !3461
  %cmp5 = icmp eq i32 %bf.clear, 8, !dbg !3461
  br i1 %cmp5, label %land.lhs.true20, label %lor.lhs.false, !dbg !3461

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp9 = icmp eq i32 %bf.clear, 7, !dbg !3461
  br i1 %cmp9, label %land.lhs.true20, label %lor.lhs.false10, !dbg !3461

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %cmp14 = icmp eq i32 %bf.clear, 9, !dbg !3461
  br i1 %cmp14, label %land.lhs.true20, label %lor.lhs.false15, !dbg !3461

lor.lhs.false15:                                  ; preds = %lor.lhs.false10
  %cmp19 = icmp eq i32 %bf.clear, 10, !dbg !3461
  br i1 %cmp19, label %land.lhs.true20, label %if.end56, !dbg !3462

land.lhs.true20:                                  ; preds = %lor.lhs.false15, %lor.lhs.false10, %lor.lhs.false, %land.lhs.true
  %cannot_delete = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 0, !dbg !3463
  %11 = load i8, i8* %cannot_delete, align 8, !dbg !3463
  %tobool21 = icmp eq i8 %11, 0, !dbg !3464
  br i1 %tobool21, label %land.lhs.true22, label %if.end56, !dbg !3465

land.lhs.true22:                                  ; preds = %land.lhs.true20
  %12 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !3466
  %tobool23 = icmp eq %struct.bitmap_element_def* %12, null, !dbg !3466
  br i1 %tobool23, label %if.end56, label %if.then, !dbg !3467

if.then:                                          ; preds = %land.lhs.true22
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 6, !dbg !3468
  call void @llvm.dbg.value(metadata i8 1, metadata !3437, metadata !DIExpression()), !dbg !3457
  br label %while.cond24, !dbg !3469

while.cond24:                                     ; preds = %if.end37, %if.then
  %deleted.0 = phi i8 [ 1, %if.then ], [ %deleted.2, %if.end37 ], !dbg !3470
  %store_info.0.in = phi %struct.store_info** [ %store_rec, %if.then ], [ %next, %if.end37 ]
  %store_info.0 = load %struct.store_info*, %struct.store_info** %store_info.0.in, align 8, !dbg !3470
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.0, metadata !3439, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 %deleted.0, metadata !3437, metadata !DIExpression()), !dbg !3457
  %tobool25 = icmp eq %struct.store_info* %store_info.0, null, !dbg !3469
  br i1 %tobool25, label %while.end, label %while.body26, !dbg !3469

while.body26:                                     ; preds = %while.cond24
  %alias_set = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 6, !dbg !3471
  %13 = load i32, i32* %alias_set, align 8, !dbg !3471
  %tobool27 = icmp eq i32 %13, 0, !dbg !3472
  br i1 %tobool27, label %if.end37, label %if.then28, !dbg !3473

if.then28:                                        ; preds = %while.body26
  %14 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !3474
  %conv = sext i32 %13 to i64, !dbg !3475
  %call = tail call fastcc i32 @get_bitmap_index(%struct.group_info* %14, i64 %conv) #8, !dbg !3476
  call void @llvm.dbg.value(metadata i32 %call, metadata !3442, metadata !DIExpression()), !dbg !3477
  %cmp31 = icmp eq i32 %call, 0, !dbg !3478
  br i1 %cmp31, label %cleanup, label %lor.lhs.false33, !dbg !3480

lor.lhs.false33:                                  ; preds = %if.then28
  %call34 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %call) #6, !dbg !3481
  %tobool35 = icmp ne i32 %call34, 0, !dbg !3481
  %spec.select = select i1 %tobool35, i8 %deleted.0, i8 0, !dbg !3482
  %spec.select1 = select i1 %tobool35, i32 0, i32 8, !dbg !3482
  br label %cleanup, !dbg !3482

cleanup:                                          ; preds = %lor.lhs.false33, %if.then28
  %deleted.1 = phi i8 [ 0, %if.then28 ], [ %spec.select, %lor.lhs.false33 ], !dbg !3470
  %cleanup.dest.slot.0 = phi i32 [ 8, %if.then28 ], [ %spec.select1, %lor.lhs.false33 ]
  call void @llvm.dbg.value(metadata i8 %deleted.1, metadata !3437, metadata !DIExpression()), !dbg !3457
  %switch = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %switch, label %if.end37, label %while.end

if.end37:                                         ; preds = %while.body26, %cleanup
  %deleted.2 = phi i8 [ %deleted.1, %cleanup ], [ 0, %while.body26 ], !dbg !3483
  call void @llvm.dbg.value(metadata i8 %deleted.2, metadata !3437, metadata !DIExpression()), !dbg !3457
  %next = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 10, !dbg !3484
  br label %while.cond24, !dbg !3469, !llvm.loop !3485

while.end:                                        ; preds = %while.cond24, %cleanup
  %deleted.3 = phi i8 [ %deleted.1, %cleanup ], [ %deleted.0, %while.cond24 ], !dbg !3470
  call void @llvm.dbg.value(metadata i8 %deleted.3, metadata !3437, metadata !DIExpression()), !dbg !3457
  %tobool39 = icmp eq i8 %deleted.3, 0, !dbg !3487
  br i1 %tobool39, label %if.end56, label %land.lhs.true40, !dbg !3489

land.lhs.true40:                                  ; preds = %while.end
  %call41 = tail call zeroext i8 @dbg_cnt(i32 10) #6, !dbg !3490
  %tobool43 = icmp eq i8 %call41, 0, !dbg !3490
  br i1 %tobool43, label %if.end56, label %if.then44, !dbg !3491

if.then44:                                        ; preds = %land.lhs.true40
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3492
  %tobool45 = icmp eq %struct._IO_FILE* %15, null, !dbg !3492
  br i1 %tobool45, label %if.end50, label %if.then46, !dbg !3495

if.then46:                                        ; preds = %if.then44
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3496
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3496
  %rt_int = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !3496
  %17 = load i32, i32* %rt_int, align 8, !dbg !3496
  %call49 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %15, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.81, i64 0, i64 0), i32 %17) #6, !dbg !3497
  br label %if.end50, !dbg !3497

if.end50:                                         ; preds = %if.then44, %if.then46
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3498
  tail call fastcc void @check_for_inc_dec(%struct.rtx_def* %18) #8, !dbg !3499
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3500
  %call53 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %19) #6, !dbg !3501
  %20 = load i32, i32* @spill_deleted, align 4, !dbg !3502
  %inc = add nsw i32 %20, 1, !dbg !3502
  store i32 %inc, i32* @spill_deleted, align 4, !dbg !3502
  store %struct.rtx_def* null, %struct.rtx_def** %insn, align 8, !dbg !3503
  br label %if.end56, !dbg !3504

if.end56:                                         ; preds = %land.lhs.true40, %while.end, %land.lhs.true22, %land.lhs.true20, %while.body, %if.end50, %lor.lhs.false15
  %deleted.4 = phi i8 [ 0, %land.lhs.true20 ], [ 0, %land.lhs.true22 ], [ 0, %lor.lhs.false15 ], [ 0, %while.body ], [ %deleted.3, %if.end50 ], [ %deleted.3, %land.lhs.true40 ], [ 0, %while.end ], !dbg !3457
  call void @llvm.dbg.value(metadata i8 %deleted.4, metadata !3437, metadata !DIExpression()), !dbg !3457
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3505
  %tobool58 = icmp eq %struct.rtx_def* %21, null, !dbg !3507
  br i1 %tobool58, label %if.end87, label %land.lhs.true59, !dbg !3508

land.lhs.true59:                                  ; preds = %if.end56
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 0, !dbg !3508
  %bf.load61 = load i32, i32* %22, align 8, !dbg !3509
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !3509
  %cmp63 = icmp eq i32 %bf.clear62, 8, !dbg !3509
  br i1 %cmp63, label %land.lhs.true83, label %lor.lhs.false65, !dbg !3509

lor.lhs.false65:                                  ; preds = %land.lhs.true59
  %cmp69 = icmp eq i32 %bf.clear62, 7, !dbg !3509
  br i1 %cmp69, label %land.lhs.true83, label %lor.lhs.false71, !dbg !3509

lor.lhs.false71:                                  ; preds = %lor.lhs.false65
  %cmp75 = icmp eq i32 %bf.clear62, 9, !dbg !3509
  br i1 %cmp75, label %land.lhs.true83, label %lor.lhs.false77, !dbg !3509

lor.lhs.false77:                                  ; preds = %lor.lhs.false71
  %cmp81 = icmp ne i32 %bf.clear62, 10, !dbg !3509
  %tobool84 = icmp ne i8 %deleted.4, 0, !dbg !3510
  %or.cond = or i1 %cmp81, %tobool84, !dbg !3511
  br i1 %or.cond, label %if.end87, label %if.then85, !dbg !3511

land.lhs.true83:                                  ; preds = %lor.lhs.false71, %lor.lhs.false65, %land.lhs.true59
  %tobool84.old = icmp eq i8 %deleted.4, 0, !dbg !3510
  br i1 %tobool84.old, label %if.then85, label %if.end87, !dbg !3512

if.then85:                                        ; preds = %land.lhs.true83, %lor.lhs.false77
  %store_rec86 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 6, !dbg !3513
  %23 = load %struct.store_info*, %struct.store_info** %store_rec86, align 8, !dbg !3513
  tail call fastcc void @scan_stores_spill(%struct.store_info* %23, %struct.bitmap_head_def* %8, %struct.bitmap_head_def* null) #8, !dbg !3515
  %read_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 7, !dbg !3516
  %24 = load %struct.read_info*, %struct.read_info** %read_rec, align 8, !dbg !3516
  tail call fastcc void @scan_reads_spill(%struct.read_info* %24, %struct.bitmap_head_def* %8, %struct.bitmap_head_def* null) #8, !dbg !3517
  br label %if.end87, !dbg !3518

if.end87:                                         ; preds = %land.lhs.true83, %if.end56, %lor.lhs.false77, %if.then85
  %prev_insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 8, !dbg !3519
  br label %while.cond, !dbg !3456, !llvm.loop !3520

for.inc:                                          ; preds = %while.cond
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3447
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3522
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3447
  br label %for.cond, !dbg !3447, !llvm.loop !3523

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3525
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step6() unnamed_addr #5 !dbg !3526 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3541
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3541
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3541
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3541
  br label %for.cond, !dbg !3541

for.cond:                                         ; preds = %for.inc, %entry
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %for.inc ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3542
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3528, metadata !DIExpression()), !dbg !3543
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !3541
  br i1 %tobool, label %for.end, label %for.body, !dbg !3541

for.body:                                         ; preds = %for.cond
  %2 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !3544
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3545
  %3 = load i32, i32* %index, align 8, !dbg !3545
  %idxprom = sext i32 %3 to i64, !dbg !3544
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %2, i64 %idxprom, !dbg !3544
  %4 = load %struct.bb_info*, %struct.bb_info** %arrayidx, align 8, !dbg !3544
  call void @llvm.dbg.value(metadata %struct.bb_info* %4, metadata !3529, metadata !DIExpression()), !dbg !3546
  %last_insn = getelementptr inbounds %struct.bb_info, %struct.bb_info* %4, i64 0, i32 0, !dbg !3547
  br label %while.cond, !dbg !3548

while.cond:                                       ; preds = %if.end67, %for.body
  %insn_info.0.in = phi %struct.insn_info** [ %last_insn, %for.body ], [ %prev_insn, %if.end67 ]
  %insn_info.0 = load %struct.insn_info*, %struct.insn_info** %insn_info.0.in, align 8, !dbg !3546
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info.0, metadata !3533, metadata !DIExpression()), !dbg !3546
  %tobool1 = icmp eq %struct.insn_info* %insn_info.0, null, !dbg !3548
  br i1 %tobool1, label %for.inc, label %while.body, !dbg !3548

while.body:                                       ; preds = %while.cond
  %insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 5, !dbg !3549
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3549
  %tobool2 = icmp eq %struct.rtx_def* %5, null, !dbg !3550
  br i1 %tobool2, label %if.end67, label %land.lhs.true, !dbg !3551

land.lhs.true:                                    ; preds = %while.body
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !3551
  %bf.load = load i32, i32* %6, align 8, !dbg !3552
  %bf.clear = and i32 %bf.load, 65535, !dbg !3552
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3552
  br i1 %cmp, label %land.lhs.true18, label %lor.lhs.false, !dbg !3552

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp7 = icmp eq i32 %bf.clear, 7, !dbg !3552
  br i1 %cmp7, label %land.lhs.true18, label %lor.lhs.false8, !dbg !3552

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i32 %bf.clear, 9, !dbg !3552
  br i1 %cmp12, label %land.lhs.true18, label %lor.lhs.false13, !dbg !3552

lor.lhs.false13:                                  ; preds = %lor.lhs.false8
  %cmp17 = icmp eq i32 %bf.clear, 10, !dbg !3552
  br i1 %cmp17, label %land.lhs.true18, label %if.end67, !dbg !3553

land.lhs.true18:                                  ; preds = %lor.lhs.false13, %lor.lhs.false8, %lor.lhs.false, %land.lhs.true
  %cannot_delete = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 0, !dbg !3554
  %7 = load i8, i8* %cannot_delete, align 8, !dbg !3554
  %tobool19 = icmp eq i8 %7, 0, !dbg !3555
  br i1 %tobool19, label %if.then, label %if.end67, !dbg !3556

if.then:                                          ; preds = %land.lhs.true18
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 6, !dbg !3557
  br label %while.cond20, !dbg !3558

while.cond20:                                     ; preds = %while.body23, %if.then
  %s_info.0.in = phi %struct.store_info** [ %store_rec, %if.then ], [ %next, %while.body23 ]
  %s_info.0 = load %struct.store_info*, %struct.store_info** %s_info.0.in, align 8, !dbg !3559
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info.0, metadata !3534, metadata !DIExpression()), !dbg !3559
  %cond = icmp eq %struct.store_info* %s_info.0, null, !dbg !3560
  br i1 %cond, label %if.end67.loopexit, label %land.rhs, !dbg !3560

land.rhs:                                         ; preds = %while.cond20
  %is_set = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0, i64 0, i32 0, !dbg !3561
  %8 = load i8, i8* %is_set, align 8, !dbg !3561
  %tobool22 = icmp eq i8 %8, 0, !dbg !3562
  br i1 %tobool22, label %while.body23, label %while.end, !dbg !3558

while.body23:                                     ; preds = %land.rhs
  %next = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0, i64 0, i32 10, !dbg !3563
  br label %while.cond20, !dbg !3558, !llvm.loop !3564

while.end:                                        ; preds = %land.rhs
  %s_info.0.lcssa3 = phi %struct.store_info* [ %s_info.0, %land.rhs ], !dbg !3559
  %redundant_reason = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa3, i64 0, i32 13, !dbg !3565
  %9 = load %struct.insn_info*, %struct.insn_info** %redundant_reason, align 8, !dbg !3565
  %tobool26 = icmp eq %struct.insn_info* %9, null, !dbg !3566
  br i1 %tobool26, label %if.end67, label %land.lhs.true27, !dbg !3567

land.lhs.true27:                                  ; preds = %while.end
  %insn29 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %9, i64 0, i32 5, !dbg !3568
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn29, align 8, !dbg !3568
  %tobool30 = icmp eq %struct.rtx_def* %10, null, !dbg !3569
  br i1 %tobool30, label %if.end67, label %land.lhs.true31, !dbg !3570

land.lhs.true31:                                  ; preds = %land.lhs.true27
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !3570
  %bf.load34 = load i32, i32* %11, align 8, !dbg !3571
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !3571
  %cmp36 = icmp eq i32 %bf.clear35, 8, !dbg !3571
  br i1 %cmp36, label %if.then55, label %lor.lhs.false37, !dbg !3571

lor.lhs.false37:                                  ; preds = %land.lhs.true31
  %cmp42 = icmp eq i32 %bf.clear35, 7, !dbg !3571
  br i1 %cmp42, label %if.then55, label %lor.lhs.false43, !dbg !3571

lor.lhs.false43:                                  ; preds = %lor.lhs.false37
  %cmp48 = icmp eq i32 %bf.clear35, 9, !dbg !3571
  br i1 %cmp48, label %if.then55, label %lor.lhs.false49, !dbg !3571

lor.lhs.false49:                                  ; preds = %lor.lhs.false43
  %cmp54 = icmp eq i32 %bf.clear35, 10, !dbg !3571
  br i1 %cmp54, label %if.then55, label %if.end67, !dbg !3572

if.then55:                                        ; preds = %lor.lhs.false49, %lor.lhs.false43, %lor.lhs.false37, %land.lhs.true31
  call void @llvm.dbg.value(metadata %struct.rtx_def* undef, metadata !3538, metadata !DIExpression()), !dbg !3573
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3574
  %tobool58 = icmp eq %struct._IO_FILE* %12, null, !dbg !3574
  br i1 %tobool58, label %if.end, label %if.then59, !dbg !3576

if.then59:                                        ; preds = %if.then55
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !3538, metadata !DIExpression()), !dbg !3573
  %arrayidx61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3577
  %rt_int = bitcast %union.rtunion_def* %arrayidx61 to i32*, !dbg !3577
  %13 = load i32, i32* %rt_int, align 8, !dbg !3577
  %arrayidx64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3578
  %rt_int65 = bitcast %union.rtunion_def* %arrayidx64 to i32*, !dbg !3578
  %14 = load i32, i32* %rt_int65, align 8, !dbg !3578
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.15, i64 0, i64 0), i32 %13, i32 %14) #6, !dbg !3579
  br label %if.end, !dbg !3579

if.end:                                           ; preds = %if.then55, %if.then59
  tail call fastcc void @delete_dead_store_insn(%struct.insn_info* nonnull %insn_info.0) #8, !dbg !3580
  br label %if.end67, !dbg !3581

if.end67.loopexit:                                ; preds = %while.cond20
  br label %if.end67, !dbg !3582

if.end67:                                         ; preds = %if.end67.loopexit, %land.lhs.true27, %while.end, %land.lhs.true18, %while.body, %lor.lhs.false49, %if.end, %lor.lhs.false13
  %prev_insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 8, !dbg !3582
  br label %while.cond, !dbg !3548, !llvm.loop !3583

for.inc:                                          ; preds = %while.cond
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !3585
  br label %for.cond, !dbg !3585, !llvm.loop !3586

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3588
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step7(i8 zeroext %global_done) unnamed_addr #5 !dbg !3589 {
entry:
  %group = alloca %struct.group_info*, align 8
  call void @llvm.dbg.value(metadata i8 %global_done, metadata !3591, metadata !DIExpression()), !dbg !3600
  %0 = bitcast %struct.group_info** %group to i8*, !dbg !3601
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3601
  call void @llvm.dbg.value(metadata i32 0, metadata !3592, metadata !DIExpression()), !dbg !3600
  br label %for.cond, !dbg !3602

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3604
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3592, metadata !DIExpression()), !dbg !3600
  %1 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !3605
  %base = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %1, i64 0, i32 0, !dbg !3605
  call void @llvm.dbg.value(metadata %struct.group_info** %group, metadata !3593, metadata !DIExpression(DW_OP_deref)), !dbg !3600
  %call = call fastcc i32 @VEC_group_info_t_base_iterate(%struct.VEC_group_info_t_base* %base, i32 %i.0, %struct.group_info** nonnull %group) #8, !dbg !3605
  %tobool1 = icmp eq i32 %call, 0, !dbg !3607
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3607

for.body:                                         ; preds = %for.cond
  %2 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3608
  call void @llvm.dbg.value(metadata %struct.group_info* %2, metadata !3593, metadata !DIExpression()), !dbg !3600
  %offset_map_n = getelementptr inbounds %struct.group_info, %struct.group_info* %2, i64 0, i32 11, !dbg !3610
  %3 = bitcast i32** %offset_map_n to i8**, !dbg !3610
  %4 = load i8*, i8** %3, align 8, !dbg !3610
  call void @free(i8* %4) #6, !dbg !3611
  %5 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3612
  call void @llvm.dbg.value(metadata %struct.group_info* %5, metadata !3593, metadata !DIExpression()), !dbg !3600
  %offset_map_p = getelementptr inbounds %struct.group_info, %struct.group_info* %5, i64 0, i32 12, !dbg !3613
  %6 = bitcast i32** %offset_map_p to i8**, !dbg !3613
  %7 = load i8*, i8** %6, align 8, !dbg !3613
  call void @free(i8* %7) #6, !dbg !3614
  %8 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3615
  call void @llvm.dbg.value(metadata %struct.group_info* %8, metadata !3593, metadata !DIExpression()), !dbg !3600
  %store1_n = getelementptr inbounds %struct.group_info, %struct.group_info* %8, i64 0, i32 6, !dbg !3615
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store1_n, align 8, !dbg !3615
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %9) #6, !dbg !3615
  %10 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3615
  call void @llvm.dbg.value(metadata %struct.group_info* %10, metadata !3593, metadata !DIExpression()), !dbg !3600
  %store1_n2 = getelementptr inbounds %struct.group_info, %struct.group_info* %10, i64 0, i32 6, !dbg !3615
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %store1_n2, align 8, !dbg !3615
  call void @llvm.dbg.value(metadata %struct.group_info* %10, metadata !3593, metadata !DIExpression()), !dbg !3600
  %store1_p = getelementptr inbounds %struct.group_info, %struct.group_info* %10, i64 0, i32 7, !dbg !3616
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store1_p, align 8, !dbg !3616
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %11) #6, !dbg !3616
  %12 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3616
  call void @llvm.dbg.value(metadata %struct.group_info* %12, metadata !3593, metadata !DIExpression()), !dbg !3600
  %store1_p3 = getelementptr inbounds %struct.group_info, %struct.group_info* %12, i64 0, i32 7, !dbg !3616
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %store1_p3, align 8, !dbg !3616
  call void @llvm.dbg.value(metadata %struct.group_info* %12, metadata !3593, metadata !DIExpression()), !dbg !3600
  %store2_n = getelementptr inbounds %struct.group_info, %struct.group_info* %12, i64 0, i32 8, !dbg !3617
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_n, align 8, !dbg !3617
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %13) #6, !dbg !3617
  %14 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3617
  call void @llvm.dbg.value(metadata %struct.group_info* %14, metadata !3593, metadata !DIExpression()), !dbg !3600
  %store2_n4 = getelementptr inbounds %struct.group_info, %struct.group_info* %14, i64 0, i32 8, !dbg !3617
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %store2_n4, align 8, !dbg !3617
  call void @llvm.dbg.value(metadata %struct.group_info* %14, metadata !3593, metadata !DIExpression()), !dbg !3600
  %store2_p = getelementptr inbounds %struct.group_info, %struct.group_info* %14, i64 0, i32 9, !dbg !3618
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_p, align 8, !dbg !3618
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %15) #6, !dbg !3618
  %16 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3618
  call void @llvm.dbg.value(metadata %struct.group_info* %16, metadata !3593, metadata !DIExpression()), !dbg !3600
  %store2_p5 = getelementptr inbounds %struct.group_info, %struct.group_info* %16, i64 0, i32 9, !dbg !3618
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %store2_p5, align 8, !dbg !3618
  call void @llvm.dbg.value(metadata %struct.group_info* %16, metadata !3593, metadata !DIExpression()), !dbg !3600
  %group_kill = getelementptr inbounds %struct.group_info, %struct.group_info* %16, i64 0, i32 10, !dbg !3619
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill, align 8, !dbg !3619
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %17) #6, !dbg !3619
  %18 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !3619
  call void @llvm.dbg.value(metadata %struct.group_info* %18, metadata !3593, metadata !DIExpression()), !dbg !3600
  %group_kill6 = getelementptr inbounds %struct.group_info, %struct.group_info* %18, i64 0, i32 10, !dbg !3619
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %group_kill6, align 8, !dbg !3619
  %inc = add i32 %i.0, 1, !dbg !3620
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3592, metadata !DIExpression()), !dbg !3600
  br label %for.cond, !dbg !3621, !llvm.loop !3622

for.end:                                          ; preds = %for.cond
  %tobool7 = icmp eq i8 %global_done, 0, !dbg !3624
  br i1 %tobool7, label %if.end28, label %if.then, !dbg !3625

if.then:                                          ; preds = %for.end
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3626
  %cfg = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 1, !dbg !3626
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3626
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 0, !dbg !3626
  br label %for.cond8, !dbg !3626

for.cond8:                                        ; preds = %for.inc26, %if.then
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.then ], [ %next_bb, %for.inc26 ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3627
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3594, metadata !DIExpression()), !dbg !3600
  %tobool9 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !3626
  br i1 %tobool9, label %if.end28.loopexit, label %for.body10, !dbg !3626

for.body10:                                       ; preds = %for.cond8
  %21 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !3628
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3629
  %22 = load i32, i32* %index, align 8, !dbg !3629
  %idxprom = sext i32 %22 to i64, !dbg !3628
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %21, i64 %idxprom, !dbg !3628
  %23 = load %struct.bb_info*, %struct.bb_info** %arrayidx, align 8, !dbg !3628
  call void @llvm.dbg.value(metadata %struct.bb_info* %23, metadata !3595, metadata !DIExpression()), !dbg !3630
  %gen = getelementptr inbounds %struct.bb_info, %struct.bb_info* %23, i64 0, i32 2, !dbg !3631
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3631
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %24) #6, !dbg !3631
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %gen, align 8, !dbg !3631
  %kill = getelementptr inbounds %struct.bb_info, %struct.bb_info* %23, i64 0, i32 3, !dbg !3632
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !3632
  %tobool12 = icmp eq %struct.bitmap_head_def* %25, null, !dbg !3634
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !3635

if.then13:                                        ; preds = %for.body10
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %25) #6, !dbg !3636
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill, align 8, !dbg !3636
  br label %if.end, !dbg !3636

if.end:                                           ; preds = %for.body10, %if.then13
  %in = getelementptr inbounds %struct.bb_info, %struct.bb_info* %23, i64 0, i32 4, !dbg !3637
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !3637
  %tobool16 = icmp eq %struct.bitmap_head_def* %26, null, !dbg !3639
  br i1 %tobool16, label %if.end20, label %if.then17, !dbg !3640

if.then17:                                        ; preds = %if.end
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %26) #6, !dbg !3641
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in, align 8, !dbg !3641
  br label %if.end20, !dbg !3641

if.end20:                                         ; preds = %if.end, %if.then17
  %out = getelementptr inbounds %struct.bb_info, %struct.bb_info* %23, i64 0, i32 5, !dbg !3642
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !3642
  %tobool21 = icmp eq %struct.bitmap_head_def* %27, null, !dbg !3644
  br i1 %tobool21, label %for.inc26, label %if.then22, !dbg !3645

if.then22:                                        ; preds = %if.end20
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %27) #6, !dbg !3646
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out, align 8, !dbg !3646
  br label %for.inc26, !dbg !3646

for.inc26:                                        ; preds = %if.end20, %if.then22
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !3647
  br label %for.cond8, !dbg !3647, !llvm.loop !3648

if.end28.loopexit:                                ; preds = %for.cond8
  br label %if.end28, !dbg !3650

if.end28:                                         ; preds = %if.end28.loopexit, %for.end
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !3650
  %tobool29 = icmp eq %struct.bitmap_head_def* %28, null, !dbg !3650
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !3652

if.then30:                                        ; preds = %if.end28
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %28) #6, !dbg !3653
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !3653
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @disqualified_clear_alias_sets, align 8, !dbg !3655
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %29) #6, !dbg !3655
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @disqualified_clear_alias_sets, align 8, !dbg !3655
  %30 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @clear_alias_mode_pool, align 8, !dbg !3656
  call void @free_alloc_pool(%struct.alloc_pool_def* %30) #6, !dbg !3657
  %31 = load %struct.htab*, %struct.htab** @clear_alias_mode_table, align 8, !dbg !3658
  call void @htab_delete(%struct.htab* %31) #6, !dbg !3659
  br label %if.end31, !dbg !3660

if.end31:                                         ; preds = %if.end28, %if.then30
  call void @end_alias_analysis() #6, !dbg !3661
  %32 = load i8*, i8** bitcast (%struct.bb_info*** @bb_table to i8**), align 8, !dbg !3662
  call void @free(i8* %32) #6, !dbg !3663
  %33 = load %struct.htab*, %struct.htab** @rtx_group_table, align 8, !dbg !3664
  call void @htab_delete(%struct.htab* %33) #6, !dbg !3665
  call fastcc void @VEC_group_info_t_heap_free(%struct.VEC_group_info_t_heap** nonnull @rtx_group_vec) #8, !dbg !3666
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @all_blocks, align 8, !dbg !3667
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %34) #6, !dbg !3667
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @all_blocks, align 8, !dbg !3667
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @scratch, align 8, !dbg !3668
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %35) #6, !dbg !3668
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @scratch, align 8, !dbg !3668
  %36 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @rtx_store_info_pool, align 8, !dbg !3669
  call void @free_alloc_pool(%struct.alloc_pool_def* %36) #6, !dbg !3670
  %37 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @read_info_pool, align 8, !dbg !3671
  call void @free_alloc_pool(%struct.alloc_pool_def* %37) #6, !dbg !3672
  %38 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @insn_info_pool, align 8, !dbg !3673
  call void @free_alloc_pool(%struct.alloc_pool_def* %38) #6, !dbg !3674
  %39 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @bb_info_pool, align 8, !dbg !3675
  call void @free_alloc_pool(%struct.alloc_pool_def* %39) #6, !dbg !3676
  %40 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @rtx_group_info_pool, align 8, !dbg !3677
  call void @free_alloc_pool(%struct.alloc_pool_def* %40) #6, !dbg !3678
  %41 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @deferred_change_pool, align 8, !dbg !3679
  call void @free_alloc_pool(%struct.alloc_pool_def* %41) #6, !dbg !3680
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3681
  ret void, !dbg !3681
}

; Function Attrs: nounwind uwtable
define internal i32 @invariant_group_base_hash(i8* %p) #5 !dbg !3682 {
entry:
  %do_not_record = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %p, metadata !3684, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.value(metadata i8* %p, metadata !3685, metadata !DIExpression()), !dbg !3687
  %0 = bitcast i32* %do_not_record to i8*, !dbg !3688
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3688
  %rtx_base = bitcast i8* %p to %struct.rtx_def**, !dbg !3689
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx_base, align 8, !dbg !3689
  call void @llvm.dbg.value(metadata i32* %do_not_record, metadata !3686, metadata !DIExpression(DW_OP_deref)), !dbg !3687
  %call = call i32 @hash_rtx(%struct.rtx_def* %1, i32 16, i32* nonnull %do_not_record, i32* null, i8 zeroext 0) #6, !dbg !3690
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3691
  ret i32 %call, !dbg !3692
}

; Function Attrs: nounwind uwtable
define internal i32 @invariant_group_base_eq(i8* %p1, i8* %p2) #5 !dbg !3693 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !3695, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i8* %p2, metadata !3696, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i8* %p1, metadata !3697, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i8* %p2, metadata !3698, metadata !DIExpression()), !dbg !3699
  %rtx_base = bitcast i8* %p1 to %struct.rtx_def**, !dbg !3700
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rtx_base, align 8, !dbg !3700
  %rtx_base1 = bitcast i8* %p2 to %struct.rtx_def**, !dbg !3701
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx_base1, align 8, !dbg !3701
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %1) #6, !dbg !3702
  ret i32 %call, !dbg !3703
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local void @init_alias_analysis() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.group_info* @get_group_info(%struct.rtx_def* %base) unnamed_addr #5 !dbg !3704 {
entry:
  %tmp_gi = alloca %struct.group_info, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %base, metadata !3708, metadata !DIExpression()), !dbg !3712
  %0 = bitcast %struct.group_info* %tmp_gi to i8*, !dbg !3713
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %0) #7, !dbg !3713
  %tobool = icmp eq %struct.rtx_def* %base, null, !dbg !3714
  br i1 %tobool, label %if.else, label %if.then, !dbg !3716

if.then:                                          ; preds = %entry
  %rtx_base = getelementptr inbounds %struct.group_info, %struct.group_info* %tmp_gi, i64 0, i32 0, !dbg !3717
  store %struct.rtx_def* %base, %struct.rtx_def** %rtx_base, align 8, !dbg !3719
  %1 = load %struct.htab*, %struct.htab** @rtx_group_table, align 8, !dbg !3720
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 1) #6, !dbg !3721
  call void @llvm.dbg.value(metadata i8** %call, metadata !3711, metadata !DIExpression()), !dbg !3712
  %2 = bitcast i8** %call to %struct.group_info**, !dbg !3722
  %3 = load %struct.group_info*, %struct.group_info** %2, align 8, !dbg !3722
  call void @llvm.dbg.value(metadata %struct.group_info* %3, metadata !3710, metadata !DIExpression()), !dbg !3712
  %cmp = icmp eq %struct.group_info* %3, null, !dbg !3723
  br i1 %cmp, label %if.then12, label %cleanup, !dbg !3725

if.else:                                          ; preds = %entry
  %4 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !3726
  %tobool1 = icmp eq %struct.group_info* %4, null, !dbg !3726
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3729

if.then2:                                         ; preds = %if.else
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @rtx_group_info_pool, align 8, !dbg !3730
  %call3 = tail call i8* @pool_alloc(%struct.alloc_pool_def* %5) #6, !dbg !3732
  %6 = bitcast i8* %call3 to %struct.group_info*, !dbg !3733
  call void @llvm.dbg.value(metadata %struct.group_info* %6, metadata !3710, metadata !DIExpression()), !dbg !3712
  store i8* %call3, i8** bitcast (%struct.group_info** @clear_alias_group to i8**), align 8, !dbg !3734
  %call4 = tail call i8* @memset(i8* %call3, i32 0, i64 96) #6, !dbg !3735
  %7 = load i32, i32* @rtx_group_next_id, align 4, !dbg !3736
  %inc = add nsw i32 %7, 1, !dbg !3736
  store i32 %inc, i32* @rtx_group_next_id, align 4, !dbg !3736
  %id = getelementptr inbounds i8, i8* %call3, i64 8, !dbg !3737
  %8 = bitcast i8* %id to i32*, !dbg !3737
  store i32 %7, i32* %8, align 8, !dbg !3738
  %call5 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3739
  %store1_n = getelementptr inbounds i8, i8* %call3, i64 32, !dbg !3740
  %9 = bitcast i8* %store1_n to %struct.bitmap_head_def**, !dbg !3740
  store %struct.bitmap_head_def* %call5, %struct.bitmap_head_def** %9, align 8, !dbg !3741
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3742
  %store1_p = getelementptr inbounds i8, i8* %call3, i64 40, !dbg !3743
  %10 = bitcast i8* %store1_p to %struct.bitmap_head_def**, !dbg !3743
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** %10, align 8, !dbg !3744
  %call7 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3745
  %store2_n = getelementptr inbounds i8, i8* %call3, i64 48, !dbg !3746
  %11 = bitcast i8* %store2_n to %struct.bitmap_head_def**, !dbg !3746
  store %struct.bitmap_head_def* %call7, %struct.bitmap_head_def** %11, align 8, !dbg !3747
  %call8 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3748
  %store2_p = getelementptr inbounds i8, i8* %call3, i64 56, !dbg !3749
  %12 = bitcast i8* %store2_p to %struct.bitmap_head_def**, !dbg !3749
  store %struct.bitmap_head_def* %call8, %struct.bitmap_head_def** %12, align 8, !dbg !3750
  %call9 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3751
  %group_kill = getelementptr inbounds i8, i8* %call3, i64 64, !dbg !3752
  %13 = bitcast i8* %group_kill to %struct.bitmap_head_def**, !dbg !3752
  store %struct.bitmap_head_def* %call9, %struct.bitmap_head_def** %13, align 8, !dbg !3753
  %14 = getelementptr inbounds i8, i8* %call3, i64 12, !dbg !3754
  store i8 0, i8* %14, align 4, !dbg !3755
  %offset_map_size_n = getelementptr inbounds i8, i8* %call3, i64 88, !dbg !3756
  %15 = bitcast i8* %offset_map_size_n to i32*, !dbg !3756
  store i32 0, i32* %15, align 8, !dbg !3757
  %offset_map_size_p = getelementptr inbounds i8, i8* %call3, i64 92, !dbg !3758
  %16 = bitcast i8* %offset_map_size_p to i32*, !dbg !3758
  store i32 0, i32* %16, align 4, !dbg !3759
  %offset_map_n = getelementptr inbounds i8, i8* %call3, i64 72, !dbg !3760
  %17 = bitcast i8* %offset_map_n to i32**, !dbg !3760
  store i32* null, i32** %17, align 8, !dbg !3761
  %offset_map_p = getelementptr inbounds i8, i8* %call3, i64 80, !dbg !3762
  %18 = bitcast i8* %offset_map_p to i32**, !dbg !3762
  store i32* null, i32** %18, align 8, !dbg !3763
  %call10 = tail call fastcc %struct.group_info** @VEC_group_info_t_heap_safe_push(%struct.VEC_group_info_t_heap** nonnull @rtx_group_vec, %struct.group_info* %6) #8, !dbg !3764
  %.pre = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !3765
  br label %if.end, !dbg !3766

if.end:                                           ; preds = %if.else, %if.then2
  %19 = phi %struct.group_info* [ %4, %if.else ], [ %.pre, %if.then2 ], !dbg !3765
  br label %cleanup, !dbg !3767

if.then12:                                        ; preds = %if.then
  %20 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @rtx_group_info_pool, align 8, !dbg !3768
  %call13 = call i8* @pool_alloc(%struct.alloc_pool_def* %20) #6, !dbg !3770
  %21 = bitcast i8* %call13 to %struct.group_info*, !dbg !3771
  call void @llvm.dbg.value(metadata %struct.group_info* %21, metadata !3710, metadata !DIExpression()), !dbg !3712
  store i8* %call13, i8** %call, align 8, !dbg !3772
  %rtx_base14 = bitcast i8* %call13 to %struct.rtx_def**, !dbg !3773
  store %struct.rtx_def* %base, %struct.rtx_def** %rtx_base14, align 8, !dbg !3774
  %22 = load i32, i32* @rtx_group_next_id, align 4, !dbg !3775
  %inc15 = add nsw i32 %22, 1, !dbg !3775
  store i32 %inc15, i32* @rtx_group_next_id, align 4, !dbg !3775
  %id16 = getelementptr inbounds i8, i8* %call13, i64 8, !dbg !3776
  %23 = bitcast i8* %id16 to i32*, !dbg !3776
  store i32 %22, i32* %23, align 8, !dbg !3777
  %call17 = call %struct.rtx_def* @gen_rtx_MEM(i32 14, %struct.rtx_def* nonnull %base) #6, !dbg !3778
  %base_mem = getelementptr inbounds i8, i8* %call13, i64 16, !dbg !3779
  %24 = bitcast i8* %base_mem to %struct.rtx_def**, !dbg !3779
  store %struct.rtx_def* %call17, %struct.rtx_def** %24, align 8, !dbg !3780
  %call18 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* nonnull %base) #6, !dbg !3781
  %canon_base_addr = getelementptr inbounds i8, i8* %call13, i64 24, !dbg !3782
  %25 = bitcast i8* %canon_base_addr to %struct.rtx_def**, !dbg !3782
  store %struct.rtx_def* %call18, %struct.rtx_def** %25, align 8, !dbg !3783
  %call19 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3784
  %store1_n20 = getelementptr inbounds i8, i8* %call13, i64 32, !dbg !3785
  %26 = bitcast i8* %store1_n20 to %struct.bitmap_head_def**, !dbg !3785
  store %struct.bitmap_head_def* %call19, %struct.bitmap_head_def** %26, align 8, !dbg !3786
  %call21 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3787
  %store1_p22 = getelementptr inbounds i8, i8* %call13, i64 40, !dbg !3788
  %27 = bitcast i8* %store1_p22 to %struct.bitmap_head_def**, !dbg !3788
  store %struct.bitmap_head_def* %call21, %struct.bitmap_head_def** %27, align 8, !dbg !3789
  %call23 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3790
  %store2_n24 = getelementptr inbounds i8, i8* %call13, i64 48, !dbg !3791
  %28 = bitcast i8* %store2_n24 to %struct.bitmap_head_def**, !dbg !3791
  store %struct.bitmap_head_def* %call23, %struct.bitmap_head_def** %28, align 8, !dbg !3792
  %call25 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3793
  %store2_p26 = getelementptr inbounds i8, i8* %call13, i64 56, !dbg !3794
  %29 = bitcast i8* %store2_p26 to %struct.bitmap_head_def**, !dbg !3794
  store %struct.bitmap_head_def* %call25, %struct.bitmap_head_def** %29, align 8, !dbg !3795
  %call27 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3796
  %group_kill28 = getelementptr inbounds i8, i8* %call13, i64 64, !dbg !3797
  %30 = bitcast i8* %group_kill28 to %struct.bitmap_head_def**, !dbg !3797
  store %struct.bitmap_head_def* %call27, %struct.bitmap_head_def** %30, align 8, !dbg !3798
  %31 = getelementptr inbounds i8, i8* %call13, i64 12, !dbg !3799
  store i8 0, i8* %31, align 4, !dbg !3800
  %32 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !3801
  %cmp30 = icmp eq %struct.rtx_def* %32, %base, !dbg !3802
  %33 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !3803
  %cmp31 = icmp eq %struct.rtx_def* %33, %base, !dbg !3803
  %34 = or i1 %cmp30, %cmp31, !dbg !3803
  %conv = zext i1 %34 to i8, !dbg !3804
  %35 = getelementptr inbounds i8, i8* %call13, i64 13, !dbg !3805
  store i8 %conv, i8* %35, align 1, !dbg !3806
  %offset_map_size_n32 = getelementptr inbounds i8, i8* %call13, i64 88, !dbg !3807
  %36 = bitcast i8* %offset_map_size_n32 to i32*, !dbg !3807
  store i32 0, i32* %36, align 8, !dbg !3808
  %offset_map_size_p33 = getelementptr inbounds i8, i8* %call13, i64 92, !dbg !3809
  %37 = bitcast i8* %offset_map_size_p33 to i32*, !dbg !3809
  store i32 0, i32* %37, align 4, !dbg !3810
  %offset_map_n34 = getelementptr inbounds i8, i8* %call13, i64 72, !dbg !3811
  %38 = bitcast i8* %offset_map_n34 to i32**, !dbg !3811
  store i32* null, i32** %38, align 8, !dbg !3812
  %offset_map_p35 = getelementptr inbounds i8, i8* %call13, i64 80, !dbg !3813
  %39 = bitcast i8* %offset_map_p35 to i32**, !dbg !3813
  store i32* null, i32** %39, align 8, !dbg !3814
  %call36 = call fastcc %struct.group_info** @VEC_group_info_t_heap_safe_push(%struct.VEC_group_info_t_heap** nonnull @rtx_group_vec, %struct.group_info* %21) #8, !dbg !3815
  br label %cleanup, !dbg !3816

cleanup:                                          ; preds = %if.then, %if.then12, %if.end
  %retval.0 = phi %struct.group_info* [ %19, %if.end ], [ %21, %if.then12 ], [ %3, %if.then ], !dbg !3712
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %0) #7, !dbg !3817
  ret %struct.group_info* %retval.0, !dbg !3817
}

declare dso_local i32 @hash_rtx(%struct.rtx_def*, i32, i32*, i32*, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.group_info** @VEC_group_info_t_heap_safe_push(%struct.VEC_group_info_t_heap** %vec_, %struct.group_info* %obj_) unnamed_addr #0 !dbg !3818 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_group_info_t_heap** @rtx_group_vec, metadata !3824, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata %struct.group_info* %obj_, metadata !3825, metadata !DIExpression()), !dbg !3826
  %call = tail call fastcc i32 @VEC_group_info_t_heap_reserve(%struct.VEC_group_info_t_heap** nonnull @rtx_group_vec, i32 1) #8, !dbg !3827
  %0 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !3827
  %tobool = icmp eq %struct.VEC_group_info_t_heap* %0, null, !dbg !3827
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3827

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %0, i64 0, i32 0, !dbg !3827
  br label %cond.end, !dbg !3827

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_group_info_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3827
  %call1 = tail call fastcc %struct.group_info** @VEC_group_info_t_base_quick_push(%struct.VEC_group_info_t_base* %cond, %struct.group_info* %obj_) #8, !dbg !3827
  ret %struct.group_info** %call1, !dbg !3827
}

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @canon_rtx(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_group_info_t_heap_reserve(%struct.VEC_group_info_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3828 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_group_info_t_heap** @rtx_group_vec, metadata !3832, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.value(metadata i32 1, metadata !3833, metadata !DIExpression()), !dbg !3835
  %0 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !3836
  %tobool = icmp eq %struct.VEC_group_info_t_heap* %0, null, !dbg !3836
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3836

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %0, i64 0, i32 0, !dbg !3836
  br label %cond.end, !dbg !3836

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_group_info_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3836
  %call = tail call fastcc i32 @VEC_group_info_t_base_space(%struct.VEC_group_info_t_base* %cond, i32 1) #8, !dbg !3836
  %tobool1 = icmp eq i32 %call, 0, !dbg !3836
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !3834, metadata !DIExpression()), !dbg !3835
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3836

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_group_info_t_heap** @rtx_group_vec to i8**), align 8, !dbg !3837
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 1) #6, !dbg !3837
  store i8* %call3, i8** bitcast (%struct.VEC_group_info_t_heap** @rtx_group_vec to i8**), align 8, !dbg !3837
  br label %if.end, !dbg !3837

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !3836
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.group_info** @VEC_group_info_t_base_quick_push(%struct.VEC_group_info_t_base* %vec_, %struct.group_info* %obj_) unnamed_addr #0 !dbg !3839 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_group_info_t_base* %vec_, metadata !3844, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata %struct.group_info* %obj_, metadata !3845, metadata !DIExpression()), !dbg !3847
  %num1 = getelementptr inbounds %struct.VEC_group_info_t_base, %struct.VEC_group_info_t_base* %vec_, i64 0, i32 0, !dbg !3848
  %0 = load i32, i32* %num1, align 8, !dbg !3848
  %inc = add i32 %0, 1, !dbg !3848
  store i32 %inc, i32* %num1, align 8, !dbg !3848
  %idxprom = zext i32 %0 to i64, !dbg !3848
  %arrayidx = getelementptr inbounds %struct.VEC_group_info_t_base, %struct.VEC_group_info_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3848
  call void @llvm.dbg.value(metadata %struct.group_info** %arrayidx, metadata !3846, metadata !DIExpression()), !dbg !3847
  store %struct.group_info* %obj_, %struct.group_info** %arrayidx, align 8, !dbg !3848
  ret %struct.group_info** %arrayidx, !dbg !3848
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_group_info_t_base_space(%struct.VEC_group_info_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3849 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_group_info_t_base* %vec_, metadata !3853, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.value(metadata i32 1, metadata !3854, metadata !DIExpression()), !dbg !3855
  %tobool = icmp eq %struct.VEC_group_info_t_base* %vec_, null, !dbg !3856
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3856

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_group_info_t_base, %struct.VEC_group_info_t_base* %vec_, i64 0, i32 1, !dbg !3856
  %0 = load i32, i32* %alloc, align 4, !dbg !3856
  %num = getelementptr inbounds %struct.VEC_group_info_t_base, %struct.VEC_group_info_t_base* %vec_, i64 0, i32 0, !dbg !3856
  %1 = load i32, i32* %num, align 8, !dbg !3856
  %cmp1 = icmp ne i32 %0, %1, !dbg !3856
  %phitmp = zext i1 %cmp1 to i32, !dbg !3856
  br label %cond.end, !dbg !3856

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3856

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !3856
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local void @cselib_init(i32) local_unnamed_addr #2

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %index) unnamed_addr #0 !dbg !3857 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !3861, metadata !DIExpression()), !dbg !3862
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3863
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !3863
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3863
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !3865
  %2 = load i32, i32* %block_info_size, align 8, !dbg !3865
  %cmp = icmp ugt i32 %2, %index, !dbg !3866
  br i1 %cmp, label %if.then, label %return, !dbg !3867

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !3868
  %3 = load i8**, i8*** %block_info, align 8, !dbg !3868
  %idxprom = zext i32 %index to i64, !dbg !3869
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !3869
  %4 = bitcast i8** %arrayidx3 to %struct.df_lr_bb_info**, !dbg !3869
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %4, align 8, !dbg !3869
  br label %return, !dbg !3870

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_lr_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !3871
  ret %struct.df_lr_bb_info* %retval.0, !dbg !3872
}

declare dso_local void @df_simulate_initialize_forwards(%struct.basic_block_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @remove_useless_values(%struct.cselib_val_struct* %base) #5 !dbg !3873 {
entry:
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct* %base, metadata !3877, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata %struct.insn_info* null, metadata !3879, metadata !DIExpression()), !dbg !3883
  br label %while.cond, !dbg !3884

while.cond:                                       ; preds = %if.end13, %entry
  %last.0 = phi %struct.insn_info* [ null, %entry ], [ %last.1, %if.end13 ], !dbg !3885
  %insn_info.0.in = phi %struct.insn_info** [ @active_local_stores, %entry ], [ %next_local_store14, %if.end13 ]
  %insn_info.0 = load %struct.insn_info*, %struct.insn_info** %insn_info.0.in, align 8, !dbg !3883
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info.0, metadata !3878, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata %struct.insn_info* %last.0, metadata !3879, metadata !DIExpression()), !dbg !3883
  %tobool = icmp eq %struct.insn_info* %insn_info.0, null, !dbg !3884
  br i1 %tobool, label %while.end15, label %while.body, !dbg !3884

while.body:                                       ; preds = %while.cond
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 6, !dbg !3886
  call void @llvm.dbg.value(metadata i8 0, metadata !3882, metadata !DIExpression()), !dbg !3887
  br label %while.cond1, !dbg !3888

while.cond1:                                      ; preds = %if.end, %while.body
  %store_info.0.in = phi %struct.store_info** [ %store_rec, %while.body ], [ %next, %if.end ]
  %store_info.0 = load %struct.store_info*, %struct.store_info** %store_info.0.in, align 8, !dbg !3887
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.0, metadata !3880, metadata !DIExpression()), !dbg !3887
  %tobool2 = icmp eq %struct.store_info* %store_info.0, null, !dbg !3888
  br i1 %tobool2, label %while.end, label %while.body3, !dbg !3888

while.body3:                                      ; preds = %while.cond1
  %group_id = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 2, !dbg !3889
  %0 = load i32, i32* %group_id, align 4, !dbg !3889
  %cmp = icmp eq i32 %0, -1, !dbg !3892
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3893

land.lhs.true:                                    ; preds = %while.body3
  %cse_base = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 3, !dbg !3894
  %1 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %cse_base, align 8, !dbg !3894
  %cmp4 = icmp eq %struct.cselib_val_struct* %1, %base, !dbg !3895
  br i1 %cmp4, label %while.end, label %if.end, !dbg !3896

if.end:                                           ; preds = %land.lhs.true, %while.body3
  %next = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 10, !dbg !3897
  br label %while.cond1, !dbg !3888, !llvm.loop !3898

while.end:                                        ; preds = %while.cond1, %land.lhs.true
  %del.0 = phi i1 [ false, %while.cond1 ], [ true, %land.lhs.true ]
  br i1 %del.0, label %if.then6, label %if.end13, !dbg !3900

if.then6:                                         ; preds = %while.end
  %tobool7 = icmp eq %struct.insn_info* %last.0, null, !dbg !3901
  %next_local_store = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 9, !dbg !3905
  %2 = bitcast %struct.insn_info** %next_local_store to i64*, !dbg !3905
  %3 = load i64, i64* %2, align 8, !dbg !3905
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !3906

if.then8:                                         ; preds = %if.then6
  %next_local_store9 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %last.0, i64 0, i32 9, !dbg !3907
  %4 = bitcast %struct.insn_info** %next_local_store9 to i64*, !dbg !3908
  store i64 %3, i64* %4, align 8, !dbg !3908
  br label %if.end11, !dbg !3909

if.else:                                          ; preds = %if.then6
  store i64 %3, i64* bitcast (%struct.insn_info** @active_local_stores to i64*), align 8, !dbg !3910
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  tail call fastcc void @free_store_info(%struct.insn_info* nonnull %insn_info.0) #8, !dbg !3911
  br label %if.end13, !dbg !3912

if.end13:                                         ; preds = %while.end, %if.end11
  %last.1 = phi %struct.insn_info* [ %last.0, %if.end11 ], [ %insn_info.0, %while.end ], !dbg !3883
  call void @llvm.dbg.value(metadata %struct.insn_info* %last.1, metadata !3879, metadata !DIExpression()), !dbg !3883
  %next_local_store14 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 9, !dbg !3913
  br label %while.cond, !dbg !3884, !llvm.loop !3914

while.end15:                                      ; preds = %while.cond
  ret void, !dbg !3916
}

declare dso_local void @cselib_clear_table() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @scan_insn(%struct.bb_info* %bb_info, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !3917 {
entry:
  %args = alloca [3 x %struct.rtx_def*], align 16
  call void @llvm.dbg.value(metadata %struct.bb_info* %bb_info, metadata !3921, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3922, metadata !DIExpression()), !dbg !3956
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @insn_info_pool, align 8, !dbg !3957
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !3958
  call void @llvm.dbg.value(metadata i8* %call, metadata !3924, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata i32 0, metadata !3925, metadata !DIExpression()), !dbg !3956
  %call1 = tail call i8* @memset(i8* %call, i32 0, i64 48) #6, !dbg !3959
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3960
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !3960
  br i1 %tobool, label %if.end, label %if.then, !dbg !3962

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3963
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3963
  %2 = load i32, i32* %rt_int, align 8, !dbg !3963
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 %2) #6, !dbg !3964
  br label %if.end, !dbg !3964

if.end:                                           ; preds = %entry, %if.then
  %3 = bitcast %struct.bb_info* %bb_info to i64*, !dbg !3965
  %4 = load i64, i64* %3, align 8, !dbg !3965
  %prev_insn = getelementptr inbounds i8, i8* %call, i64 32, !dbg !3966
  %5 = bitcast i8* %prev_insn to i64*, !dbg !3967
  store i64 %4, i64* %5, align 8, !dbg !3967
  %insn3 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !3968
  %6 = bitcast i8* %insn3 to %struct.rtx_def**, !dbg !3968
  store %struct.rtx_def* %insn, %struct.rtx_def** %6, align 8, !dbg !3969
  %7 = bitcast %struct.bb_info* %bb_info to i8**, !dbg !3970
  store i8* %call, i8** %7, align 8, !dbg !3970
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3971
  %bf.load = load i32, i32* %8, align 8, !dbg !3971
  %bf.clear = and i32 %bf.load, 65535, !dbg !3971
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !3971
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !3973

if.then5:                                         ; preds = %if.end
  store i8 1, i8* %call, align 8, !dbg !3974
  br label %cleanup.cont, !dbg !3976

if.end6:                                          ; preds = %if.end
  %cmp9 = icmp eq i32 %bf.clear, 8, !dbg !3977
  br i1 %cmp9, label %land.lhs.true, label %if.end26, !dbg !3979

land.lhs.true:                                    ; preds = %if.end6
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3980
  %9 = getelementptr inbounds %union.u, %union.u* %u10, i64 1, i32 0, i32 0, i64 0, !dbg !3980
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !3980
  %11 = load i32*, i32** %10, align 8, !dbg !3980
  %bf.load13 = load i32, i32* %11, align 8, !dbg !3980
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !3980
  %cmp15 = icmp eq i32 %bf.clear14, 17, !dbg !3981
  br i1 %cmp15, label %land.lhs.true16, label %if.end26, !dbg !3982

land.lhs.true16:                                  ; preds = %land.lhs.true
  %bf.clear22 = and i32 %bf.load13, 134217728, !dbg !3983
  %tobool23 = icmp eq i32 %bf.clear22, 0, !dbg !3983
  br i1 %tobool23, label %if.end26, label %if.then24, !dbg !3984

if.then24:                                        ; preds = %land.lhs.true16
  tail call fastcc void @add_wild_read(%struct.bb_info* %bb_info) #8, !dbg !3985
  store i8 1, i8* %call, align 8, !dbg !3987
  br label %cleanup.cont, !dbg !3988

if.end26:                                         ; preds = %land.lhs.true16, %land.lhs.true, %if.end6
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3989
  %12 = getelementptr inbounds %union.u, %union.u* %u27, i64 1, i32 0, i32 0, i64 0, !dbg !3989
  %rt_rtx30 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !3989
  %13 = bitcast %struct.bb_info* %bb_info to i8*, !dbg !3990
  tail call void @note_uses(%struct.rtx_def** nonnull %rt_rtx30, void (%struct.rtx_def**, i8*)* nonnull @check_mem_read_use, i8* %13) #6, !dbg !3991
  %bf.load31 = load i32, i32* %8, align 8, !dbg !3992
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !3992
  %cmp33 = icmp eq i32 %bf.clear32, 10, !dbg !3992
  br i1 %cmp33, label %if.then34, label %if.end294, !dbg !3993

if.then34:                                        ; preds = %if.end26
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3929, metadata !DIExpression()), !dbg !3994
  store i8 1, i8* %call, align 8, !dbg !3995
  %bf.load36 = load i32, i32* %8, align 8, !dbg !3996
  %bf.lshr37 = lshr i32 %bf.load36, 26, !dbg !3996
  %14 = trunc i32 %bf.lshr37 to i8, !dbg !3996
  %conv = and i8 %14, 1, !dbg !3996
  call void @llvm.dbg.value(metadata i8 %conv, metadata !3926, metadata !DIExpression()), !dbg !3994
  %tobool39 = icmp eq i8 %conv, 0, !dbg !3997
  br i1 %tobool39, label %if.then40, label %if.end190, !dbg !3998

if.then40:                                        ; preds = %if.then34
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !3999
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !3930, metadata !DIExpression()), !dbg !4000
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 0, !dbg !4001
  %bf.load46 = load i32, i32* %16, align 8, !dbg !4001
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !4001
  %cmp48 = icmp eq i32 %bf.clear47, 15, !dbg !4003
  br i1 %cmp48, label %if.then50, label %if.end55, !dbg !4004

if.then50:                                        ; preds = %if.then40
  %arrayidx53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4005
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtvec_def**, !dbg !4005
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4005
  %arrayidx54 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 1, i64 0, !dbg !4005
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx54, align 8, !dbg !4005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !3930, metadata !DIExpression()), !dbg !4000
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 0, !dbg !4006
  %bf.load56.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4008
  br label %if.end55, !dbg !4009

if.end55:                                         ; preds = %if.then50, %if.then40
  %bf.load56 = phi i32 [ %bf.load56.pre, %if.then50 ], [ %bf.load46, %if.then40 ], !dbg !4008
  %call41.0 = phi %struct.rtx_def* [ %18, %if.then50 ], [ %15, %if.then40 ], !dbg !4000
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41.0, metadata !3930, metadata !DIExpression()), !dbg !4000
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !4008
  %cmp58 = icmp eq i32 %bf.clear57, 23, !dbg !4010
  br i1 %cmp58, label %if.then60, label %if.end65, !dbg !4011

if.then60:                                        ; preds = %if.end55
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call41.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4012
  %rt_rtx64 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !4012
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !4012
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !3930, metadata !DIExpression()), !dbg !4000
  %.phi.trans.insert3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 0, !dbg !4013
  %bf.load66.pre = load i32, i32* %.phi.trans.insert3, align 8, !dbg !4014
  br label %if.end65, !dbg !4015

if.end65:                                         ; preds = %if.then60, %if.end55
  %bf.load66 = phi i32 [ %bf.load66.pre, %if.then60 ], [ %bf.load56, %if.end55 ], !dbg !4014
  %call41.1 = phi %struct.rtx_def* [ %20, %if.then60 ], [ %call41.0, %if.end55 ], !dbg !4000
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41.1, metadata !3930, metadata !DIExpression()), !dbg !4000
  %bf.clear67 = and i32 %bf.load66, 65535, !dbg !4014
  %cmp68 = icmp eq i32 %bf.clear67, 26, !dbg !4016
  br i1 %cmp68, label %land.lhs.true70, label %if.end190, !dbg !4017

land.lhs.true70:                                  ; preds = %if.end65
  %arrayidx73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call41.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4018
  %21 = bitcast %union.rtunion_def* %arrayidx73 to i32**, !dbg !4018
  %22 = load i32*, i32** %21, align 8, !dbg !4018
  %bf.load75 = load i32, i32* %22, align 8, !dbg !4018
  %bf.clear76 = and i32 %bf.load75, 65535, !dbg !4018
  %cmp77 = icmp eq i32 %bf.clear76, 43, !dbg !4018
  br i1 %cmp77, label %land.lhs.true79, label %if.end190, !dbg !4019

land.lhs.true79:                                  ; preds = %land.lhs.true70
  %arrayidx86 = getelementptr inbounds i32, i32* %22, i64 2, !dbg !4020
  %23 = bitcast i32* %arrayidx86 to i32**, !dbg !4020
  %24 = load i32*, i32** %23, align 8, !dbg !4020
  %bf.load88 = load i32, i32* %24, align 8, !dbg !4020
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !4020
  %cmp90 = icmp eq i32 %bf.clear89, 45, !dbg !4021
  br i1 %cmp90, label %if.then92, label %if.end190, !dbg !4022

if.then92:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.value(metadata i32* %24, metadata !3933, metadata !DIExpression()), !dbg !4023
  %bf.clear103 = and i32 %bf.load88, 67108864, !dbg !4024
  %tobool104 = icmp eq i32 %bf.clear103, 0, !dbg !4024
  br i1 %tobool104, label %cond.false, label %if.end190, !dbg !4026

cond.false:                                       ; preds = %if.then92
  %25 = getelementptr inbounds i32, i32* %24, i64 6, !dbg !4024
  %rt_tree = bitcast i32* %25 to %union.tree_node**, !dbg !4024
  %26 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !4024
  %tobool108 = icmp eq %union.tree_node* %26, null, !dbg !4024
  br i1 %tobool108, label %if.end190, label %land.lhs.true109, !dbg !4026

land.lhs.true109:                                 ; preds = %cond.false
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4026
  %bf.load120 = load i64, i64* %27, align 8, !dbg !4027
  %bf.cast1 = and i64 %bf.load120, 65535, !dbg !4028
  %cmp122 = icmp eq i64 %bf.cast1, 29, !dbg !4028
  br i1 %cmp122, label %if.then124, label %if.end190, !dbg !4029

if.then124:                                       ; preds = %land.lhs.true109
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 5, !dbg !4030
  %bf.load137 = load i32, i32* %built_in_class, align 8, !dbg !4030
  %bf.clear139 = and i32 %bf.load137, 6144, !dbg !4030
  %cmp140 = icmp eq i32 %bf.clear139, 6144, !dbg !4033
  br i1 %cmp140, label %land.lhs.true142, label %lor.lhs.false, !dbg !4034

land.lhs.true142:                                 ; preds = %if.then124
  %bf.clear157 = and i32 %bf.load137, 2047, !dbg !4035
  %cmp158 = icmp eq i32 %bf.clear157, 333, !dbg !4036
  br i1 %cmp158, label %if.then174, label %lor.lhs.false, !dbg !4037

lor.lhs.false:                                    ; preds = %land.lhs.true142, %if.then124
  br label %cond.false165, !dbg !4038

lor.lhs.false.cond.end170_crit_edge:              ; No predecessors!
  br label %cond.end170, !dbg !4038

cond.false165:                                    ; preds = %lor.lhs.false
  br label %cond.end170, !dbg !4038

cond.end170:                                      ; preds = %lor.lhs.false.cond.end170_crit_edge, %cond.false165
  %28 = load %union.tree_node*, %union.tree_node** @block_clear_fn, align 8, !dbg !4039
  %cmp172 = icmp eq %union.tree_node* %26, %28, !dbg !4040
  br i1 %cmp172, label %if.then174, label %if.end190, !dbg !4041

if.then174:                                       ; preds = %cond.end170, %land.lhs.true142
  br i1 true, label %cond.false180, label %if.then174.if.end190_crit_edge, !dbg !4042

if.then174.if.end190_crit_edge:                   ; preds = %if.then174
  br label %if.end190, !dbg !4042

cond.false180:                                    ; preds = %if.then174
  br label %if.end190, !dbg !4042

if.end190:                                        ; preds = %if.then174.if.end190_crit_edge, %cond.false, %if.then92, %if.then34, %if.end65, %land.lhs.true70, %land.lhs.true79, %cond.end170, %cond.false180, %land.lhs.true109
  %memset_call.3 = phi %union.tree_node* [ null, %if.then34 ], [ null, %land.lhs.true79 ], [ null, %land.lhs.true70 ], [ null, %if.end65 ], [ null, %land.lhs.true109 ], [ null, %cond.false ], [ null, %if.then92 ], [ null, %cond.end170 ], [ %26, %cond.false180 ], [ undef, %if.then174.if.end190_crit_edge ], !dbg !3994
  call void @llvm.dbg.value(metadata %union.tree_node* %memset_call.3, metadata !3929, metadata !DIExpression()), !dbg !3994
  %tobool192 = icmp ne i8 %conv, 0, !dbg !4043
  %tobool194 = icmp ne %union.tree_node* %memset_call.3, null, !dbg !4044
  %or.cond = or i1 %tobool192, %tobool194, !dbg !4045
  br i1 %or.cond, label %if.then195, label %if.else292, !dbg !4045

if.then195:                                       ; preds = %if.end190
  %29 = load %struct.insn_info*, %struct.insn_info** @active_local_stores, align 8, !dbg !4046
  call void @llvm.dbg.value(metadata %struct.insn_info* %29, metadata !3936, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata %struct.insn_info* null, metadata !3939, metadata !DIExpression()), !dbg !4047
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4048
  %tobool196 = icmp eq %struct._IO_FILE* %30, null, !dbg !4048
  br i1 %tobool196, label %if.end206, label %if.then197, !dbg !4050

if.then197:                                       ; preds = %if.then195
  %cond200 = select i1 %tobool39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), !dbg !4051
  %arrayidx203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4052
  %rt_int204 = bitcast %union.rtunion_def* %arrayidx203 to i32*, !dbg !4052
  %31 = load i32, i32* %rt_int204, align 8, !dbg !4052
  %call205 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %30, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i8* %cond200, i32 %31) #6, !dbg !4053
  br label %if.end206, !dbg !4053

if.end206:                                        ; preds = %if.then195, %if.then197
  %32 = load i32, i32* @reload_completed, align 4, !dbg !4054
  %tobool207 = icmp eq i32 %32, 0, !dbg !4054
  br i1 %tobool207, label %if.end209, label %if.then208, !dbg !4056

if.then208:                                       ; preds = %if.end206
  %33 = getelementptr inbounds i8, i8* %call, i64 2, !dbg !4057
  store i8 1, i8* %33, align 2, !dbg !4058
  br label %if.end209, !dbg !4059

if.end209:                                        ; preds = %if.end206, %if.then208
  %34 = getelementptr inbounds i8, i8* %call, i64 2, !dbg !4060
  br label %while.cond, !dbg !4061

while.cond:                                       ; preds = %if.end248, %if.end209
  %i_ptr.0 = phi %struct.insn_info* [ %29, %if.end209 ], [ %45, %if.end248 ], !dbg !4047
  %last.0 = phi %struct.insn_info* [ null, %if.end209 ], [ %last.1, %if.end248 ], !dbg !4062
  call void @llvm.dbg.value(metadata %struct.insn_info* %last.0, metadata !3939, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata %struct.insn_info* %i_ptr.0, metadata !3936, metadata !DIExpression()), !dbg !4047
  %tobool210 = icmp eq %struct.insn_info* %i_ptr.0, null, !dbg !4061
  br i1 %tobool210, label %while.end250, label %while.body, !dbg !4061

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !3940, metadata !DIExpression()), !dbg !4063
  %stack_pointer_based = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 3, !dbg !4064
  %35 = load i8, i8* %stack_pointer_based, align 1, !dbg !4064
  %tobool211 = icmp eq i8 %35, 0, !dbg !4065
  br i1 %tobool211, label %if.else, label %if.end235, !dbg !4066

if.else:                                          ; preds = %while.body
  %36 = load i8, i8* %34, align 2, !dbg !4067
  %tobool214 = icmp eq i8 %36, 0, !dbg !4068
  br i1 %tobool214, label %if.end235, label %if.then215, !dbg !4069

if.then215:                                       ; preds = %if.else
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 6, !dbg !4070
  br label %while.cond216, !dbg !4071

while.cond216:                                    ; preds = %while.body218, %if.then215
  %store_info.0.in = phi %struct.store_info** [ %store_rec, %if.then215 ], [ %next, %while.body218 ]
  %store_info.0 = load %struct.store_info*, %struct.store_info** %store_info.0.in, align 8, !dbg !4072
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.0, metadata !3942, metadata !DIExpression()), !dbg !4072
  %is_set = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 0, !dbg !4073
  %37 = load i8, i8* %is_set, align 8, !dbg !4073
  %tobool217 = icmp eq i8 %37, 0, !dbg !4074
  br i1 %tobool217, label %while.body218, label %while.end, !dbg !4071

while.body218:                                    ; preds = %while.cond216
  %next = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 10, !dbg !4075
  br label %while.cond216, !dbg !4071, !llvm.loop !4076

while.end:                                        ; preds = %while.cond216
  %store_info.0.lcssa = phi %struct.store_info* [ %store_info.0, %while.cond216 ], !dbg !4072
  %group_id = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0.lcssa, i64 0, i32 2, !dbg !4077
  %38 = load i32, i32* %group_id, align 4, !dbg !4077
  %cmp219 = icmp sgt i32 %38, -1, !dbg !4079
  br i1 %cmp219, label %land.lhs.true221, label %if.end235, !dbg !4080

land.lhs.true221:                                 ; preds = %while.end
  %39 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !4081
  %base224 = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %39, i64 0, i32 0, !dbg !4081
  %call229 = tail call fastcc %struct.group_info* @VEC_group_info_t_base_index(%struct.VEC_group_info_t_base* %base224, i32 %38) #8, !dbg !4081
  %frame_related = getelementptr inbounds %struct.group_info, %struct.group_info* %call229, i64 0, i32 3, !dbg !4082
  %40 = load i8, i8* %frame_related, align 1, !dbg !4082
  %tobool231 = icmp ne i8 %40, 0, !dbg !4081
  %spec.select = zext i1 %tobool231 to i8, !dbg !4083
  br label %if.end235, !dbg !4083

if.end235:                                        ; preds = %if.else, %while.body, %land.lhs.true221, %while.end
  %remove_store.2 = phi i8 [ 1, %while.body ], [ 0, %if.else ], [ 0, %while.end ], [ %spec.select, %land.lhs.true221 ], !dbg !4084
  call void @llvm.dbg.value(metadata i8 %remove_store.2, metadata !3940, metadata !DIExpression()), !dbg !4063
  %tobool236 = icmp eq i8 %remove_store.2, 0, !dbg !4085
  br i1 %tobool236, label %if.end248, label %if.then237, !dbg !4087

if.then237:                                       ; preds = %if.end235
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4088
  %tobool238 = icmp eq %struct._IO_FILE* %41, null, !dbg !4088
  br i1 %tobool238, label %if.end240, label %if.then239, !dbg !4091

if.then239:                                       ; preds = %if.then237
  tail call fastcc void @dump_insn_info(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), %struct.insn_info* nonnull %i_ptr.0) #8, !dbg !4092
  br label %if.end240, !dbg !4092

if.end240:                                        ; preds = %if.then237, %if.then239
  %tobool241 = icmp eq %struct.insn_info* %last.0, null, !dbg !4093
  %next_local_store = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 9, !dbg !4095
  %42 = bitcast %struct.insn_info** %next_local_store to i64*, !dbg !4095
  %43 = load i64, i64* %42, align 8, !dbg !4095
  br i1 %tobool241, label %if.else244, label %if.then242, !dbg !4096

if.then242:                                       ; preds = %if.end240
  %next_local_store243 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %last.0, i64 0, i32 9, !dbg !4097
  %44 = bitcast %struct.insn_info** %next_local_store243 to i64*, !dbg !4098
  store i64 %43, i64* %44, align 8, !dbg !4098
  br label %if.end248, !dbg !4099

if.else244:                                       ; preds = %if.end240
  store i64 %43, i64* bitcast (%struct.insn_info** @active_local_stores to i64*), align 8, !dbg !4100
  br label %if.end248

if.end248:                                        ; preds = %if.end235, %if.then242, %if.else244
  %last.1 = phi %struct.insn_info* [ null, %if.else244 ], [ %last.0, %if.then242 ], [ %i_ptr.0, %if.end235 ], !dbg !4047
  call void @llvm.dbg.value(metadata %struct.insn_info* %last.1, metadata !3939, metadata !DIExpression()), !dbg !4047
  %next_local_store249 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 9, !dbg !4101
  %45 = load %struct.insn_info*, %struct.insn_info** %next_local_store249, align 8, !dbg !4101
  call void @llvm.dbg.value(metadata %struct.insn_info* %45, metadata !3936, metadata !DIExpression()), !dbg !4047
  br label %while.cond, !dbg !4061, !llvm.loop !4102

while.end250:                                     ; preds = %while.cond
  %tobool251 = icmp eq %union.tree_node* %memset_call.3, null, !dbg !4104
  br i1 %tobool251, label %cleanup.cont, label %if.then252, !dbg !4105

if.then252:                                       ; preds = %while.end250
  %46 = bitcast [3 x %struct.rtx_def*]* %args to i8*, !dbg !4106
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #7, !dbg !4106
  call void @llvm.dbg.declare(metadata [3 x %struct.rtx_def*]* %args, metadata !3946, metadata !DIExpression()), !dbg !4107
  %arraydecay = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %args, i64 0, i64 0, !dbg !4108
  %call253 = call fastcc zeroext i8 @get_call_args(%struct.rtx_def* %insn, %union.tree_node* nonnull %memset_call.3, %struct.rtx_def** nonnull %arraydecay, i32 3) #8, !dbg !4109
  %tobool255 = icmp eq i8 %call253, 0, !dbg !4109
  br i1 %tobool255, label %if.end290, label %land.lhs.true256, !dbg !4110

land.lhs.true256:                                 ; preds = %if.then252
  %arrayidx257 = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %args, i64 0, i64 1, !dbg !4111
  %47 = bitcast %struct.rtx_def** %arrayidx257 to i32**, !dbg !4111
  %48 = load i32*, i32** %47, align 8, !dbg !4111
  %bf.load258 = load i32, i32* %48, align 8, !dbg !4111
  %bf.clear259 = and i32 %bf.load258, 65535, !dbg !4111
  %cmp260 = icmp eq i32 %bf.clear259, 30, !dbg !4111
  br i1 %cmp260, label %land.lhs.true262, label %if.end290, !dbg !4112

land.lhs.true262:                                 ; preds = %land.lhs.true256
  %arrayidx263 = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %args, i64 0, i64 2, !dbg !4113
  %49 = bitcast %struct.rtx_def** %arrayidx263 to i32**, !dbg !4113
  %50 = load i32*, i32** %49, align 16, !dbg !4113
  %bf.load264 = load i32, i32* %50, align 8, !dbg !4113
  %bf.clear265 = and i32 %bf.load264, 65535, !dbg !4113
  %cmp266 = icmp eq i32 %bf.clear265, 30, !dbg !4113
  br i1 %cmp266, label %land.lhs.true268, label %if.end290, !dbg !4114

land.lhs.true268:                                 ; preds = %land.lhs.true262
  %u270 = getelementptr inbounds i32, i32* %50, i64 2, !dbg !4115
  %arrayidx271 = bitcast i32* %u270 to i64*, !dbg !4115
  %51 = load i64, i64* %arrayidx271, align 8, !dbg !4115
  %cmp272 = icmp sgt i64 %51, 0, !dbg !4116
  br i1 %cmp272, label %if.then274, label %if.end290, !dbg !4117

if.then274:                                       ; preds = %land.lhs.true268
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arraydecay, align 16, !dbg !4118
  %call276 = call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %52) #6, !dbg !4119
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call276, metadata !3950, metadata !DIExpression()), !dbg !4120
  %53 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx263, align 16, !dbg !4121
  call void @set_mem_size(%struct.rtx_def* %call276, %struct.rtx_def* %53) #6, !dbg !4122
  %54 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx257, align 8, !dbg !4123
  %call279 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %call276, %struct.rtx_def* %54) #6, !dbg !4123
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call279, metadata !3923, metadata !DIExpression()), !dbg !3956
  %call280 = call fastcc i32 @record_store(%struct.rtx_def* %call279, %struct.bb_info* %bb_info) #8, !dbg !4124
  call void @llvm.dbg.value(metadata i32 %call280, metadata !3925, metadata !DIExpression()), !dbg !3956
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4125
  %tobool281 = icmp eq %struct._IO_FILE* %55, null, !dbg !4125
  br i1 %tobool281, label %if.end284, label %if.then282, !dbg !4127

if.then282:                                       ; preds = %if.then274
  %call283 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %55, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !4128
  br label %if.end284, !dbg !4128

if.end284:                                        ; preds = %if.then274, %if.then282
  %cmp285 = icmp eq i32 %call280, 1, !dbg !4129
  br i1 %cmp285, label %if.then287, label %if.end290, !dbg !4131

if.then287:                                       ; preds = %if.end284
  %56 = load i64, i64* bitcast (%struct.insn_info** @active_local_stores to i64*), align 8, !dbg !4132
  %next_local_store288 = getelementptr inbounds i8, i8* %call, i64 40, !dbg !4134
  %57 = bitcast i8* %next_local_store288 to i64*, !dbg !4135
  store i64 %56, i64* %57, align 8, !dbg !4135
  store i8* %call, i8** bitcast (%struct.insn_info** @active_local_stores to i8**), align 8, !dbg !4136
  br label %if.end290, !dbg !4137

if.end290:                                        ; preds = %if.then252, %if.end284, %if.then287, %land.lhs.true268, %land.lhs.true262, %land.lhs.true256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #7, !dbg !4138
  br label %cleanup.cont, !dbg !4139

if.else292:                                       ; preds = %if.end190
  tail call fastcc void @add_wild_read(%struct.bb_info* %bb_info) #8, !dbg !4140
  br label %cleanup.cont

if.end294:                                        ; preds = %if.end26
  %58 = bitcast %union.rtunion_def* %12 to i32**, !dbg !4141
  %59 = load i32*, i32** %58, align 8, !dbg !4141
  %bf.load299 = load i32, i32* %59, align 8, !dbg !4141
  %bf.clear300 = and i32 %bf.load299, 65535, !dbg !4141
  %cmp301 = icmp eq i32 %bf.clear300, 25, !dbg !4143
  br i1 %cmp301, label %if.then322, label %lor.lhs.false303, !dbg !4144

lor.lhs.false303:                                 ; preds = %if.end294
  %60 = bitcast i32* %59 to %struct.rtx_def*, !dbg !4144
  %call308 = tail call i32 @volatile_refs_p(%struct.rtx_def* %60) #6, !dbg !4145
  %tobool309 = icmp eq i32 %call308, 0, !dbg !4145
  br i1 %tobool309, label %lor.lhs.false310, label %if.then322, !dbg !4146

lor.lhs.false310:                                 ; preds = %lor.lhs.false303
  %call311 = tail call zeroext i8 @insn_could_throw_p(%struct.rtx_def* %insn) #6, !dbg !4147
  %tobool313 = icmp eq i8 %call311, 0, !dbg !4147
  br i1 %tobool313, label %lor.lhs.false314, label %if.then322, !dbg !4148

lor.lhs.false314:                                 ; preds = %lor.lhs.false310
  %bf.load315 = load i32, i32* %8, align 8, !dbg !4149
  %bf.clear317 = and i32 %bf.load315, 1073741824, !dbg !4149
  %tobool318 = icmp eq i32 %bf.clear317, 0, !dbg !4150
  br i1 %tobool318, label %lor.lhs.false319, label %if.then322, !dbg !4151

lor.lhs.false319:                                 ; preds = %lor.lhs.false314
  %call320 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 17, %struct.rtx_def* null) #6, !dbg !4152
  %tobool321 = icmp eq %struct.rtx_def* %call320, null, !dbg !4152
  br i1 %tobool321, label %if.end324, label %if.then322, !dbg !4153

if.then322:                                       ; preds = %lor.lhs.false319, %lor.lhs.false314, %lor.lhs.false310, %lor.lhs.false303, %if.end294
  store i8 1, i8* %call, align 8, !dbg !4154
  br label %if.end324, !dbg !4155

if.end324:                                        ; preds = %lor.lhs.false319, %if.then322
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !4156
  call void @llvm.dbg.value(metadata %struct.rtx_def* %61, metadata !3923, metadata !DIExpression()), !dbg !3956
  %62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 0, !dbg !4157
  %bf.load329 = load i32, i32* %62, align 8, !dbg !4157
  %bf.clear330 = and i32 %bf.load329, 65535, !dbg !4157
  %cmp331 = icmp eq i32 %bf.clear330, 15, !dbg !4158
  br i1 %cmp331, label %for.cond.preheader, label %if.else348, !dbg !4159

for.cond.preheader:                               ; preds = %if.end324
  %arrayidx336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4160
  %rt_rtvec337 = bitcast %union.rtunion_def* %arrayidx336 to %struct.rtvec_def**, !dbg !4160
  br label %for.cond, !dbg !4163

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.body ], !dbg !3956
  %mems_found.0 = phi i32 [ 0, %for.cond.preheader ], [ %add347, %for.body ], !dbg !3956
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3953, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 %mems_found.0, metadata !3925, metadata !DIExpression()), !dbg !3956
  %63 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec337, align 8, !dbg !4165
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %63, i64 0, i32 0, !dbg !4165
  %64 = load i32, i32* %num_elem, align 8, !dbg !4165
  %65 = sext i32 %64 to i64, !dbg !4166
  %cmp338 = icmp slt i64 %indvars.iv, %65, !dbg !4166
  br i1 %cmp338, label %for.body, label %if.end351.loopexit, !dbg !4163

for.body:                                         ; preds = %for.cond
  %arrayidx345 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %63, i64 0, i32 1, i64 %indvars.iv, !dbg !4167
  %66 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx345, align 8, !dbg !4167
  %call346 = tail call fastcc i32 @record_store(%struct.rtx_def* %66, %struct.bb_info* %bb_info) #8, !dbg !4168
  %add347 = add nsw i32 %mems_found.0, %call346, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %add347, metadata !3925, metadata !DIExpression()), !dbg !3956
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4170
  call void @llvm.dbg.value(metadata i32 undef, metadata !3953, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4164
  br label %for.cond, !dbg !4171, !llvm.loop !4172

if.else348:                                       ; preds = %if.end324
  %call349 = tail call fastcc i32 @record_store(%struct.rtx_def* %61, %struct.bb_info* %bb_info) #8, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %call349, metadata !3925, metadata !DIExpression()), !dbg !3956
  br label %if.end351

if.end351.loopexit:                               ; preds = %for.cond
  %mems_found.0.lcssa = phi i32 [ %mems_found.0, %for.cond ], !dbg !3956
  call void @llvm.dbg.value(metadata i32 %mems_found.0.lcssa, metadata !3925, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata i32 %mems_found.0.lcssa, metadata !3925, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata i32 %mems_found.0.lcssa, metadata !3925, metadata !DIExpression()), !dbg !3956
  br label %if.end351, !dbg !4175

if.end351:                                        ; preds = %if.end351.loopexit, %if.else348
  %mems_found.1 = phi i32 [ %call349, %if.else348 ], [ %mems_found.0.lcssa, %if.end351.loopexit ], !dbg !3956
  call void @llvm.dbg.value(metadata i32 %mems_found.1, metadata !3925, metadata !DIExpression()), !dbg !3956
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4175
  %tobool352 = icmp eq %struct._IO_FILE* %67, null, !dbg !4175
  br i1 %tobool352, label %if.end359, label %if.then353, !dbg !4177

if.then353:                                       ; preds = %if.end351
  %68 = load i8, i8* %call, align 8, !dbg !4178
  %tobool356 = icmp eq i8 %68, 0, !dbg !4179
  %cond357 = select i1 %tobool356, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), !dbg !4179
  %call358 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %67, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i64 0, i64 0), i32 %mems_found.1, i8* %cond357) #6, !dbg !4180
  br label %if.end359, !dbg !4180

if.end359:                                        ; preds = %if.end351, %if.then353
  %cmp360 = icmp eq i32 %mems_found.1, 1, !dbg !4181
  br i1 %cmp360, label %if.then362, label %if.else364, !dbg !4183

if.then362:                                       ; preds = %if.end359
  %69 = load i64, i64* bitcast (%struct.insn_info** @active_local_stores to i64*), align 8, !dbg !4184
  %next_local_store363 = getelementptr inbounds i8, i8* %call, i64 40, !dbg !4186
  %70 = bitcast i8* %next_local_store363 to i64*, !dbg !4187
  store i64 %69, i64* %70, align 8, !dbg !4187
  store i8* %call, i8** bitcast (%struct.insn_info** @active_local_stores to i8**), align 8, !dbg !4188
  br label %cleanup.cont, !dbg !4189

if.else364:                                       ; preds = %if.end359
  store i8 1, i8* %call, align 8, !dbg !4190
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %while.end250, %if.then5, %if.then24, %if.end290, %if.else292, %if.else364, %if.then362
  ret void, !dbg !4191
}

declare dso_local void @cselib_process_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @df_simulate_one_insn_forwards(%struct.basic_block_def*, %struct.rtx_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4192 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4198, metadata !DIExpression()), !dbg !4199
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4200
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4200

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4200
  %0 = load i32, i32* %num, align 8, !dbg !4200
  br label %cond.end, !dbg !4200

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4200
  ret i32 %cond, !dbg !4200
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4201 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4208, metadata !DIExpression()), !dbg !4209
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4210
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4210
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4210
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4210

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4210
  br label %cond.end, !dbg !4210

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4210
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !4210
  %cmp = icmp eq i32 %call, 1, !dbg !4211
  %conv2 = zext i1 %cmp to i8, !dbg !4210
  ret i8 %conv2, !dbg !4212
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4213 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4217, metadata !DIExpression()), !dbg !4218
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #8, !dbg !4219
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !4220
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4220
  ret %struct.basic_block_def* %0, !dbg !4221
}

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_dead_store_insn(%struct.insn_info* %insn_info) unnamed_addr #5 !dbg !4222 {
entry:
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info, metadata !4226, metadata !DIExpression()), !dbg !4230
  %call = tail call zeroext i8 @dbg_cnt(i32 10) #6, !dbg !4231
  %tobool = icmp eq i8 %call, 0, !dbg !4231
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !4233

if.end:                                           ; preds = %entry
  %insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 5, !dbg !4234
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4234
  tail call fastcc void @check_for_inc_dec(%struct.rtx_def* %0) #8, !dbg !4235
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4236
  %tobool1 = icmp eq %struct._IO_FILE* %1, null, !dbg !4236
  br i1 %tobool1, label %if.end12, label %if.then2, !dbg !4238

if.then2:                                         ; preds = %if.end
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4239
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4239
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4239
  %3 = load i32, i32* %rt_int, align 8, !dbg !4239
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i64 0, i64 0), i32 %3) #6, !dbg !4241
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 6, !dbg !4242
  %4 = load %struct.store_info*, %struct.store_info** %store_rec, align 8, !dbg !4242
  %alias_set = getelementptr inbounds %struct.store_info, %struct.store_info* %4, i64 0, i32 6, !dbg !4244
  %5 = load i32, i32* %alias_set, align 8, !dbg !4244
  %tobool5 = icmp eq i32 %5, 0, !dbg !4245
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4246
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !4247

if.then6:                                         ; preds = %if.then2
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i64 0, i64 0), i32 %5) #6, !dbg !4248
  br label %if.end12, !dbg !4248

if.else:                                          ; preds = %if.then2
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !4249
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then6, %if.else
  tail call fastcc void @free_store_info(%struct.insn_info* %insn_info) #8, !dbg !4250
  %read_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 7, !dbg !4251
  %7 = load %struct.read_info*, %struct.read_info** %read_rec, align 8, !dbg !4251
  call void @llvm.dbg.value(metadata %struct.read_info* %7, metadata !4227, metadata !DIExpression()), !dbg !4230
  br label %while.cond, !dbg !4252

while.cond:                                       ; preds = %while.body, %if.end12
  %.in = phi %struct.read_info* [ %7, %if.end12 ], [ %9, %while.body ]
  %read_info.0 = phi %struct.read_info* [ %7, %if.end12 ], [ %9, %while.body ], !dbg !4230
  call void @llvm.dbg.value(metadata %struct.read_info* %read_info.0, metadata !4227, metadata !DIExpression()), !dbg !4230
  %tobool13 = icmp eq %struct.read_info* %read_info.0, null, !dbg !4252
  br i1 %tobool13, label %while.end, label %while.body, !dbg !4252

while.body:                                       ; preds = %while.cond
  %8 = bitcast %struct.read_info* %.in to i8*, !dbg !4230
  %next14 = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info.0, i64 0, i32 5, !dbg !4253
  %9 = load %struct.read_info*, %struct.read_info** %next14, align 8, !dbg !4253
  call void @llvm.dbg.value(metadata %struct.read_info* %9, metadata !4228, metadata !DIExpression()), !dbg !4254
  %10 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @read_info_pool, align 8, !dbg !4255
  tail call void @pool_free(%struct.alloc_pool_def* %10, i8* %8) #6, !dbg !4256
  call void @llvm.dbg.value(metadata %struct.read_info* %9, metadata !4227, metadata !DIExpression()), !dbg !4230
  br label %while.cond, !dbg !4252, !llvm.loop !4257

while.end:                                        ; preds = %while.cond
  store %struct.read_info* null, %struct.read_info** %read_rec, align 8, !dbg !4259
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4260
  %call17 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %11) #6, !dbg !4261
  %12 = load i32, i32* @locally_deleted, align 4, !dbg !4262
  %inc = add nsw i32 %12, 1, !dbg !4262
  store i32 %inc, i32* @locally_deleted, align 4, !dbg !4262
  store %struct.rtx_def* null, %struct.rtx_def** %insn, align 8, !dbg !4263
  %wild_read = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 1, !dbg !4264
  store i8 0, i8* %wild_read, align 1, !dbg !4265
  br label %cleanup.cont, !dbg !4266

cleanup.cont:                                     ; preds = %entry, %while.end
  ret void, !dbg !4266
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.group_info* @VEC_group_info_t_base_index(%struct.VEC_group_info_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4267 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_group_info_t_base* %vec_, metadata !4273, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4274, metadata !DIExpression()), !dbg !4275
  br label %land.end, !dbg !4276

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4276
  %arrayidx = getelementptr inbounds %struct.VEC_group_info_t_base, %struct.VEC_group_info_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4276
  %0 = load %struct.group_info*, %struct.group_info** %arrayidx, align 8, !dbg !4276
  ret %struct.group_info* %0, !dbg !4276
}

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @free_store_info(%struct.insn_info* %insn_info) unnamed_addr #5 !dbg !4277 {
entry:
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info, metadata !4279, metadata !DIExpression()), !dbg !4283
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 6, !dbg !4284
  %0 = load %struct.store_info*, %struct.store_info** %store_rec, align 8, !dbg !4284
  call void @llvm.dbg.value(metadata %struct.store_info* %0, metadata !4280, metadata !DIExpression()), !dbg !4283
  br label %while.cond, !dbg !4285

while.cond:                                       ; preds = %if.end8, %entry
  %store_info.0 = phi %struct.store_info* [ %0, %entry ], [ %1, %if.end8 ], !dbg !4283
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.0, metadata !4280, metadata !DIExpression()), !dbg !4283
  %tobool = icmp eq %struct.store_info* %store_info.0, null, !dbg !4285
  br i1 %tobool, label %while.end, label %while.body, !dbg !4285

while.body:                                       ; preds = %while.cond
  %next1 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 10, !dbg !4286
  %1 = load %struct.store_info*, %struct.store_info** %next1, align 8, !dbg !4286
  call void @llvm.dbg.value(metadata %struct.store_info* %1, metadata !4281, metadata !DIExpression()), !dbg !4287
  %is_large = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 1, !dbg !4288
  %2 = load i8, i8* %is_large, align 1, !dbg !4288
  %tobool2 = icmp eq i8 %2, 0, !dbg !4290
  br i1 %tobool2, label %if.end, label %if.then, !dbg !4291

if.then:                                          ; preds = %while.body
  %bmap = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 9, i32 0, i32 0, !dbg !4292
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %bmap, align 8, !dbg !4292
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %3) #6, !dbg !4292
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %bmap, align 8, !dbg !4292
  br label %if.end, !dbg !4292

if.end:                                           ; preds = %while.body, %if.then
  %cse_base = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 3, !dbg !4293
  %4 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %cse_base, align 8, !dbg !4293
  %tobool6 = icmp eq %struct.cselib_val_struct* %4, null, !dbg !4295
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !4296

if.then7:                                         ; preds = %if.end
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @cse_store_info_pool, align 8, !dbg !4297
  %6 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 0, !dbg !4298
  tail call void @pool_free(%struct.alloc_pool_def* %5, i8* nonnull %6) #6, !dbg !4299
  br label %if.end8, !dbg !4299

if.else:                                          ; preds = %if.end
  %7 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @rtx_store_info_pool, align 8, !dbg !4300
  %8 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 0, !dbg !4301
  tail call void @pool_free(%struct.alloc_pool_def* %7, i8* nonnull %8) #6, !dbg !4302
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then7
  call void @llvm.dbg.value(metadata %struct.store_info* %1, metadata !4280, metadata !DIExpression()), !dbg !4283
  br label %while.cond, !dbg !4285, !llvm.loop !4303

while.end:                                        ; preds = %while.cond
  %cannot_delete = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 0, !dbg !4305
  store i8 1, i8* %cannot_delete, align 8, !dbg !4306
  %contains_cselib_groups = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 4, !dbg !4307
  store i8 0, i8* %contains_cselib_groups, align 4, !dbg !4308
  store %struct.store_info* null, %struct.store_info** %store_rec, align 8, !dbg !4309
  ret void, !dbg !4310
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local void @cselib_finish() local_unnamed_addr #2

declare dso_local void @htab_empty(%struct.htab*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_wild_read(%struct.bb_info* %bb_info) unnamed_addr #5 !dbg !4311 {
entry:
  call void @llvm.dbg.value(metadata %struct.bb_info* %bb_info, metadata !4315, metadata !DIExpression()), !dbg !4321
  %last_insn = getelementptr inbounds %struct.bb_info, %struct.bb_info* %bb_info, i64 0, i32 0, !dbg !4322
  %0 = load %struct.insn_info*, %struct.insn_info** %last_insn, align 8, !dbg !4322
  call void @llvm.dbg.value(metadata %struct.insn_info* %0, metadata !4316, metadata !DIExpression()), !dbg !4321
  %read_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %0, i64 0, i32 7, !dbg !4323
  call void @llvm.dbg.value(metadata %struct.read_info** %read_rec, metadata !4317, metadata !DIExpression()), !dbg !4321
  br label %while.cond, !dbg !4324

while.cond:                                       ; preds = %if.end, %entry
  %ptr.0 = phi %struct.read_info** [ %read_rec, %entry ], [ %ptr.1, %if.end ], !dbg !4325
  call void @llvm.dbg.value(metadata %struct.read_info** %ptr.0, metadata !4317, metadata !DIExpression()), !dbg !4321
  %1 = load %struct.read_info*, %struct.read_info** %ptr.0, align 8, !dbg !4326
  %tobool = icmp eq %struct.read_info* %1, null, !dbg !4324
  br i1 %tobool, label %while.end, label %while.body, !dbg !4324

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.read_info* undef, metadata !4319, metadata !DIExpression()), !dbg !4327
  %alias_set = getelementptr inbounds %struct.read_info, %struct.read_info* %1, i64 0, i32 1, !dbg !4328
  %2 = load i32, i32* %alias_set, align 4, !dbg !4328
  %cmp = icmp eq i32 %2, 0, !dbg !4330
  br i1 %cmp, label %if.then, label %if.else, !dbg !4331

if.then:                                          ; preds = %while.body
  %next1 = getelementptr inbounds %struct.read_info, %struct.read_info* %1, i64 0, i32 5, !dbg !4332
  %3 = bitcast %struct.read_info** %next1 to i64*, !dbg !4332
  %4 = load i64, i64* %3, align 8, !dbg !4332
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @read_info_pool, align 8, !dbg !4333
  %.cast = bitcast %struct.read_info* %1 to i8*, !dbg !4335
  tail call void @pool_free(%struct.alloc_pool_def* %5, i8* nonnull %.cast) #6, !dbg !4336
  %6 = bitcast %struct.read_info** %ptr.0 to i64*, !dbg !4337
  store i64 %4, i64* %6, align 8, !dbg !4337
  br label %if.end, !dbg !4338

if.else:                                          ; preds = %while.body
  %next2 = getelementptr inbounds %struct.read_info, %struct.read_info* %1, i64 0, i32 5, !dbg !4339
  call void @llvm.dbg.value(metadata %struct.read_info** %next2, metadata !4317, metadata !DIExpression()), !dbg !4321
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ptr.1 = phi %struct.read_info** [ %ptr.0, %if.then ], [ %next2, %if.else ], !dbg !4321
  call void @llvm.dbg.value(metadata %struct.read_info** %ptr.1, metadata !4317, metadata !DIExpression()), !dbg !4321
  br label %while.cond, !dbg !4324, !llvm.loop !4340

while.end:                                        ; preds = %while.cond
  %wild_read = getelementptr inbounds %struct.insn_info, %struct.insn_info* %0, i64 0, i32 1, !dbg !4342
  store i8 1, i8* %wild_read, align 1, !dbg !4343
  store %struct.insn_info* null, %struct.insn_info** @active_local_stores, align 8, !dbg !4344
  ret void, !dbg !4345
}

declare dso_local void @note_uses(%struct.rtx_def**, void (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @check_mem_read_use(%struct.rtx_def** %loc, i8* %data) #5 !dbg !4346 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !4350, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata i8* %data, metadata !4351, metadata !DIExpression()), !dbg !4352
  %call = tail call i32 @for_each_rtx(%struct.rtx_def** %loc, i32 (%struct.rtx_def**, i8*)* nonnull @check_mem_read_rtx, i8* %data) #6, !dbg !4353
  ret void, !dbg !4354
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_insn_info(i8* %start, %struct.insn_info* %insn_info) unnamed_addr #5 !dbg !4355 {
entry:
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), metadata !4359, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info, metadata !4360, metadata !DIExpression()), !dbg !4361
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4362
  %insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 5, !dbg !4363
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4363
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4363
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4363
  %2 = load i32, i32* %rt_int, align 8, !dbg !4363
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 6, !dbg !4364
  %3 = load %struct.store_info*, %struct.store_info** %store_rec, align 8, !dbg !4364
  %tobool = icmp eq %struct.store_info* %3, null, !dbg !4365
  %cond = select i1 %tobool, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0), !dbg !4365
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), i32 %2, i8* %cond) #6, !dbg !4366
  ret void, !dbg !4367
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @get_call_args(%struct.rtx_def* %call_insn, %union.tree_node* %fn, %struct.rtx_def** %args, i32 %nargs) unnamed_addr #5 !dbg !4368 {
entry:
  %args_so_far = alloca %struct.ix86_args, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call_insn, metadata !4372, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !4373, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata %struct.rtx_def** %args, metadata !4374, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata i32 3, metadata !4375, metadata !DIExpression()), !dbg !4405
  %0 = bitcast %struct.ix86_args* %args_so_far to i8*, !dbg !4406
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #7, !dbg !4406
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4407
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4407
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4405
  call void @init_cumulative_args(%struct.ix86_args* nonnull %args_so_far, %union.tree_node* %1, %struct.rtx_def* null, %union.tree_node* null) #6, !dbg !4407
  %2 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !4408
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !4408
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 1, !dbg !4408
  call void @llvm.dbg.value(metadata i32 0, metadata !4397, metadata !DIExpression()), !dbg !4405
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call_insn, i64 0, i32 1, !dbg !4409
  %arrayidx26 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !4409
  %rt_rtx = bitcast %struct.object_block** %arrayidx26 to %struct.rtx_def**, !dbg !4409
  br label %for.cond, !dbg !4411

for.cond:                                         ; preds = %for.inc150, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc150 ], [ 0, %entry ]
  %arg.0.in = phi %union.tree_node** [ %chain, %for.inc150 ], [ %values, %entry ]
  %arg.0 = load %union.tree_node*, %union.tree_node** %arg.0.in, align 8, !dbg !4405
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4397, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !4396, metadata !DIExpression()), !dbg !4405
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !4412
  %cmp = icmp ne %union.tree_node* %arg.0, %4, !dbg !4413
  %cmp4 = icmp ult i64 %indvars.iv, 3, !dbg !4414
  %spec.select = and i1 %cmp4, %cmp, !dbg !4415
  br i1 %spec.select, label %for.body, label %for.end152, !dbg !4416

for.body:                                         ; preds = %for.cond
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4417
  %6 = bitcast %union.tree_node** %5 to i64**, !dbg !4417
  %7 = load i64*, i64** %6, align 8, !dbg !4417
  %bf.load = load i64, i64* %7, align 8, !dbg !4417
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !4417
  %cmp5 = icmp eq i64 %bf.cast4, 14, !dbg !4417
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !4417

cond.true:                                        ; preds = %for.body
  %.cast = bitcast i64* %7 to %union.tree_node*, !dbg !4417
  %call = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !4417
  br label %cond.end, !dbg !4417

cond.false:                                       ; preds = %for.body
  %type10 = bitcast i64* %7 to %struct.tree_type*, !dbg !4417
  %mode11 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type10, i64 0, i32 6, !dbg !4417
  %bf.load12 = load i32, i32* %mode11, align 4, !dbg !4417
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !4417
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !4417
  br label %cond.end, !dbg !4417

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear13, %cond.false ], !dbg !4417
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4398, metadata !DIExpression()), !dbg !4418
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4405
  %call14 = call %struct.rtx_def* @function_arg(%struct.ix86_args* nonnull %args_so_far, i32 %cond, %union.tree_node* null, i32 1) #6, !dbg !4419
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !4402, metadata !DIExpression()), !dbg !4418
  %tobool = icmp eq %struct.rtx_def* %call14, null, !dbg !4420
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !4422

lor.lhs.false:                                    ; preds = %cond.end
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call14, i64 0, i32 0, !dbg !4423
  %bf.load15 = load i32, i32* %8, align 8, !dbg !4423
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4423
  %cmp17 = icmp eq i32 %bf.clear16, 37, !dbg !4423
  br i1 %cmp17, label %lor.lhs.false18, label %cleanup, !dbg !4424

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %bf.lshr20 = lshr i32 %bf.load15, 16, !dbg !4425
  %bf.clear21 = and i32 %bf.lshr20, 255, !dbg !4425
  %cmp22 = icmp eq i32 %bf.clear21, %cond, !dbg !4426
  br i1 %cmp22, label %lor.lhs.false23, label %cleanup, !dbg !4427

lor.lhs.false23:                                  ; preds = %lor.lhs.false18
  %idxprom = zext i32 %cond to i64, !dbg !4428
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4428
  %9 = load i8, i8* %arrayidx, align 1, !dbg !4428
  %cmp24 = icmp eq i8 %9, 2, !dbg !4429
  br i1 %cmp24, label %if.end, label %cleanup, !dbg !4430

if.end:                                           ; preds = %lor.lhs.false23
  %arrayidx48 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %args, i64 %indvars.iv, !dbg !4431
  %10 = bitcast %struct.rtx_def** %arrayidx48 to i64*, !dbg !4431
  %11 = bitcast %struct.rtx_def** %arrayidx48 to i32**, !dbg !4435
  %arrayidx103 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4435
  br label %for.cond27, !dbg !4437

for.cond27:                                       ; preds = %for.inc, %if.end
  %link.0.in = phi %struct.rtx_def** [ %rt_rtx, %if.end ], [ %rt_rtx114, %for.inc ]
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !4409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !4403, metadata !DIExpression()), !dbg !4418
  %cond2 = icmp eq %struct.rtx_def* %link.0, null, !dbg !4438
  br i1 %cond2, label %cleanup.loopexit, label %for.body29, !dbg !4438

for.body29:                                       ; preds = %for.cond27
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4439
  %12 = bitcast %union.rtunion_def* %arrayidx32 to i32**, !dbg !4439
  %13 = load i32*, i32** %12, align 8, !dbg !4439
  %bf.load34 = load i32, i32* %13, align 8, !dbg !4439
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !4439
  %cmp36 = icmp eq i32 %bf.clear35, 24, !dbg !4440
  br i1 %cmp36, label %if.then38, label %for.inc, !dbg !4441

if.then38:                                        ; preds = %for.body29
  %arrayidx45 = getelementptr inbounds i32, i32* %13, i64 2, !dbg !4442
  %14 = bitcast i32* %arrayidx45 to i64*, !dbg !4442
  %15 = load i64, i64* %14, align 8, !dbg !4442
  store i64 %15, i64* %10, align 8, !dbg !4443
  %16 = inttoptr i64 %15 to i32*, !dbg !4444
  %bf.load51 = load i32, i32* %16, align 8, !dbg !4444
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !4444
  %cmp53 = icmp eq i32 %bf.clear52, 37, !dbg !4444
  br i1 %cmp53, label %land.lhs.true, label %for.inc, !dbg !4445

land.lhs.true:                                    ; preds = %if.then38
  %17 = inttoptr i64 %15 to %struct.rtx_def*, !dbg !4445
  %call57 = call fastcc i32 @rhs_regno(%struct.rtx_def* %17) #8, !dbg !4446
  %call58 = call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %call14) #8, !dbg !4447
  %cmp59 = icmp eq i32 %call57, %call58, !dbg !4448
  br i1 %cmp59, label %land.lhs.true61, label %for.inc, !dbg !4449

land.lhs.true61:                                  ; preds = %land.lhs.true
  %18 = load i32*, i32** %11, align 8, !dbg !4450
  %bf.load64 = load i32, i32* %18, align 8, !dbg !4450
  %bf.lshr65 = lshr i32 %bf.load64, 16, !dbg !4450
  %bf.clear66 = and i32 %bf.lshr65, 255, !dbg !4450
  %cmp67 = icmp eq i32 %bf.clear66, %cond, !dbg !4451
  %19 = bitcast i32* %18 to %struct.rtx_def*, !dbg !4452
  br i1 %cmp67, label %for.end, label %lor.lhs.false69, !dbg !4452

lor.lhs.false69:                                  ; preds = %land.lhs.true61
  %idxprom75 = zext i32 %bf.clear66 to i64, !dbg !4453
  %arrayidx76 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom75, !dbg !4453
  %20 = load i8, i8* %arrayidx76, align 1, !dbg !4453
  %cmp78 = icmp eq i8 %20, 2, !dbg !4454
  br i1 %cmp78, label %land.lhs.true80, label %for.inc, !dbg !4455

land.lhs.true80:                                  ; preds = %lor.lhs.false69
  %arrayidx87 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom75, !dbg !4456
  %21 = load i8, i8* %arrayidx87, align 1, !dbg !4456
  %cmp90 = icmp ult i8 %21, 5, !dbg !4457
  br i1 %cmp90, label %land.lhs.true92, label %for.inc, !dbg !4458

land.lhs.true92:                                  ; preds = %land.lhs.true80
  %22 = load i8, i8* %arrayidx103, align 1, !dbg !4459
  %cmp106 = icmp ugt i8 %21, %22, !dbg !4460
  br i1 %cmp106, label %for.end, label %for.inc, !dbg !4461

for.inc:                                          ; preds = %for.body29, %land.lhs.true92, %land.lhs.true80, %lor.lhs.false69, %land.lhs.true, %if.then38
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4462
  %rt_rtx114 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !4462
  br label %for.cond27, !dbg !4463, !llvm.loop !4464

for.end:                                          ; preds = %land.lhs.true61, %land.lhs.true92
  %.lcssa = phi %struct.rtx_def* [ %19, %land.lhs.true61 ], [ %19, %land.lhs.true92 ], !dbg !4452
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @scratch, align 8, !dbg !4466
  %call120 = call %struct.rtx_def* @cselib_expand_value_rtx(%struct.rtx_def* %.lcssa, %struct.bitmap_head_def* %24, i32 5) #6, !dbg !4467
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call120, metadata !4404, metadata !DIExpression()), !dbg !4418
  %25 = load i32*, i32** %11, align 8, !dbg !4468
  %bf.load123 = load i32, i32* %25, align 8, !dbg !4468
  %bf.lshr124 = lshr i32 %bf.load123, 16, !dbg !4468
  %bf.clear125 = and i32 %bf.lshr124, 255, !dbg !4468
  %cmp126 = icmp eq i32 %bf.clear125, %cond, !dbg !4470
  br i1 %cmp126, label %if.end141, label %if.then128, !dbg !4471

if.then128:                                       ; preds = %for.end
  %tobool129 = icmp eq %struct.rtx_def* %call120, null, !dbg !4472
  br i1 %tobool129, label %cleanup, label %lor.lhs.false130, !dbg !4475

lor.lhs.false130:                                 ; preds = %if.then128
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call120, i64 0, i32 0, !dbg !4476
  %bf.load131 = load i32, i32* %26, align 8, !dbg !4476
  %bf.clear132 = and i32 %bf.load131, 65535, !dbg !4476
  %cmp133 = icmp eq i32 %bf.clear132, 30, !dbg !4476
  br i1 %cmp133, label %if.end136, label %cleanup, !dbg !4477

if.end136:                                        ; preds = %lor.lhs.false130
  %u137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call120, i64 0, i32 1, !dbg !4478
  %arrayidx138 = bitcast %union.u* %u137 to i64*, !dbg !4478
  %27 = load i64, i64* %arrayidx138, align 8, !dbg !4478
  %call139 = call i64 @trunc_int_for_mode(i64 %27, i32 %cond) #6, !dbg !4478
  %call140 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call139) #6, !dbg !4478
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call140, metadata !4404, metadata !DIExpression()), !dbg !4418
  br label %if.end141, !dbg !4479

if.end141:                                        ; preds = %for.end, %if.end136
  %tmp.0 = phi %struct.rtx_def* [ %call140, %if.end136 ], [ %call120, %for.end ], !dbg !4418
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0, metadata !4404, metadata !DIExpression()), !dbg !4418
  %tobool142 = icmp eq %struct.rtx_def* %tmp.0, null, !dbg !4480
  br i1 %tobool142, label %if.end146, label %if.then143, !dbg !4482

if.then143:                                       ; preds = %if.end141
  store %struct.rtx_def* %tmp.0, %struct.rtx_def** %arrayidx48, align 8, !dbg !4483
  br label %if.end146, !dbg !4484

if.end146:                                        ; preds = %if.end141, %if.then143
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4405
  call void @function_arg_advance(%struct.ix86_args* nonnull %args_so_far, i32 %cond, %union.tree_node* null, i32 1) #6, !dbg !4485
  br label %cleanup, !dbg !4486

cleanup.loopexit:                                 ; preds = %for.cond27
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.then128, %lor.lhs.false23, %lor.lhs.false18, %cond.end, %lor.lhs.false130, %lor.lhs.false, %if.end146
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end146 ], [ false, %lor.lhs.false23 ], [ false, %lor.lhs.false18 ], [ false, %lor.lhs.false ], [ false, %cond.end ], [ false, %lor.lhs.false130 ], [ false, %if.then128 ], [ false, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %for.inc150, label %cleanup160.loopexit

for.inc150:                                       ; preds = %cleanup
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4487
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4488
  call void @llvm.dbg.value(metadata i32 undef, metadata !4397, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4405
  br label %for.cond, !dbg !4489, !llvm.loop !4490

for.end152:                                       ; preds = %for.cond
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %for.cond ]
  %arg.0.lcssa = phi %union.tree_node* [ %arg.0, %for.cond ], !dbg !4405
  %.lcssa11 = phi %union.tree_node* [ %4, %for.cond ], !dbg !4412
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !4397, metadata !DIExpression()), !dbg !4405
  %28 = trunc i64 %indvars.iv.lcssa to i32, !dbg !4405
  call void @llvm.dbg.value(metadata i32 %28, metadata !4397, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata i32 %28, metadata !4397, metadata !DIExpression()), !dbg !4405
  %cmp153 = icmp eq %union.tree_node* %arg.0.lcssa, %.lcssa11, !dbg !4492
  %cmp156 = icmp eq i32 %28, 3, !dbg !4494
  %not.or.cond = and i1 %cmp156, %cmp153, !dbg !4495
  %spec.select3 = zext i1 %not.or.cond to i8, !dbg !4495
  br label %cleanup160, !dbg !4495

cleanup160.loopexit:                              ; preds = %cleanup
  br label %cleanup160, !dbg !4496

cleanup160:                                       ; preds = %cleanup160.loopexit, %for.end152
  %retval.2 = phi i8 [ %spec.select3, %for.end152 ], [ 0, %cleanup160.loopexit ], !dbg !4405
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #7, !dbg !4496
  ret i8 %retval.2, !dbg !4496
}

declare dso_local void @set_mem_size(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @record_store(%struct.rtx_def* %body, %struct.bb_info* %bb_info) unnamed_addr #5 !dbg !4497 {
entry:
  %offset = alloca i64, align 8
  %spill_alias_set = alloca i32, align 4
  %group_id = alloca i32, align 4
  %base = alloca %struct.cselib_val_struct*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body, metadata !4501, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.bb_info* %bb_info, metadata !4502, metadata !DIExpression()), !dbg !4561
  %0 = bitcast i64* %offset to i8*, !dbg !4562
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4562
  call void @llvm.dbg.value(metadata i64 0, metadata !4507, metadata !DIExpression()), !dbg !4561
  store i64 0, i64* %offset, align 8, !dbg !4563
  call void @llvm.dbg.value(metadata i64 0, metadata !4508, metadata !DIExpression()), !dbg !4561
  %1 = bitcast i32* %spill_alias_set to i8*, !dbg !4564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !4564
  %last_insn = getelementptr inbounds %struct.bb_info, %struct.bb_info* %bb_info, i64 0, i32 0, !dbg !4565
  %2 = load %struct.insn_info*, %struct.insn_info** %last_insn, align 8, !dbg !4565
  call void @llvm.dbg.value(metadata %struct.insn_info* %2, metadata !4510, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.store_info* null, metadata !4511, metadata !DIExpression()), !dbg !4561
  %3 = bitcast i32* %group_id to i8*, !dbg !4566
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7, !dbg !4566
  %4 = bitcast %struct.cselib_val_struct** %base to i8*, !dbg !4567
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !4567
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct* null, metadata !4513, metadata !DIExpression()), !dbg !4561
  store %struct.cselib_val_struct* null, %struct.cselib_val_struct** %base, align 8, !dbg !4568
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 0, !dbg !4569
  %bf.load = load i32, i32* %5, align 8, !dbg !4569
  %bf.clear = and i32 %bf.load, 65535, !dbg !4569
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !4571
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !4572

land.lhs.true:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 25, !dbg !4573
  br i1 %cmp3, label %if.end, label %cleanup, !dbg !4574

if.end:                                           ; preds = %land.lhs.true, %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4575
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4575
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4575
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4503, metadata !DIExpression()), !dbg !4561
  %insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %2, i64 0, i32 5, !dbg !4576
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4576
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %7, i32 6, %struct.rtx_def* %6) #6, !dbg !4577
  %cmp4 = icmp ne %struct.rtx_def* %call, null, !dbg !4578
  call void @llvm.dbg.value(metadata i1 %cmp4, metadata !4517, metadata !DIExpression()), !dbg !4561
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !4579
  %bf.load6 = load i32, i32* %8, align 8, !dbg !4579
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !4579
  %cmp8 = icmp eq i32 %bf.clear7, 43, !dbg !4579
  br i1 %cmp8, label %if.end13, label %if.then10, !dbg !4581

if.then10:                                        ; preds = %if.end
  br i1 %cmp4, label %cleanup, label %if.then11, !dbg !4582

if.then11:                                        ; preds = %if.then10
  %cannot_delete = getelementptr inbounds %struct.insn_info, %struct.insn_info* %2, i64 0, i32 0, !dbg !4584
  store i8 1, i8* %cannot_delete, align 8, !dbg !4586
  br label %cleanup, !dbg !4587

if.end13:                                         ; preds = %if.end
  %bf.clear15 = and i32 %bf.load6, 16711680, !dbg !4588
  %cmp16 = icmp eq i32 %bf.clear15, 65536, !dbg !4590
  br i1 %cmp16, label %if.then18, label %if.end188, !dbg !4591

if.then18:                                        ; preds = %if.end13
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4592
  %9 = bitcast %union.rtunion_def* %arrayidx21 to i32**, !dbg !4592
  %10 = load i32*, i32** %9, align 8, !dbg !4592
  %bf.load23 = load i32, i32* %10, align 8, !dbg !4592
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4592
  %cmp25 = icmp eq i32 %bf.clear24, 38, !dbg !4595
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !4596

if.then27:                                        ; preds = %if.then18
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4597
  %tobool28 = icmp eq %struct._IO_FILE* %11, null, !dbg !4597
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !4600

if.then29:                                        ; preds = %if.then27
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.50, i64 0, i64 0)) #6, !dbg !4601
  br label %if.end31, !dbg !4601

if.end31:                                         ; preds = %if.then27, %if.then29
  tail call fastcc void @add_wild_read(%struct.bb_info* %bb_info) #8, !dbg !4602
  %cannot_delete32 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %2, i64 0, i32 0, !dbg !4603
  store i8 1, i8* %cannot_delete32, align 8, !dbg !4604
  br label %cleanup, !dbg !4605

if.else:                                          ; preds = %if.then18
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4606
  %rt_mem = bitcast %union.rtunion_def* %12 to %struct.mem_attrs**, !dbg !4606
  %13 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4606
  %cmp36 = icmp eq %struct.mem_attrs* %13, null, !dbg !4606
  br i1 %cmp36, label %cond.false, label %cond.true, !dbg !4608

cond.true:                                        ; preds = %if.else
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %13, i64 0, i32 2, !dbg !4606
  %14 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !4606
  %tobool42 = icmp eq %struct.rtx_def* %14, null, !dbg !4606
  br i1 %tobool42, label %if.then181, label %lor.lhs.false, !dbg !4606

cond.false:                                       ; preds = %if.else
  br i1 true, label %if.then181, label %cond.true48, !dbg !4608

cond.true48:                                      ; preds = %cond.false
  br i1 undef, label %cond.true48.if.then181_crit_edge, label %cond.true48.lor.lhs.false_crit_edge, !dbg !4606

cond.true48.lor.lhs.false_crit_edge:              ; preds = %cond.true48
  br label %lor.lhs.false, !dbg !4606

cond.true48.if.then181_crit_edge:                 ; preds = %cond.true48
  br label %if.then181, !dbg !4606

lor.lhs.false:                                    ; preds = %cond.true48.lor.lhs.false_crit_edge, %cond.true
  %15 = phi %struct.rtx_def* [ undef, %cond.true48.lor.lhs.false_crit_edge ], [ %14, %cond.true ]
  br i1 %cmp36, label %cond.false70, label %cond.true64, !dbg !4609

cond.true64:                                      ; preds = %lor.lhs.false
  br label %cond.end86, !dbg !4609

cond.false70:                                     ; preds = %lor.lhs.false
  %bf.lshr78 = lshr i32 %bf.load6, 16, !dbg !4609
  %bf.clear79 = and i32 %bf.lshr78, 255, !dbg !4609
  %idxprom80 = zext i32 %bf.clear79 to i64, !dbg !4609
  %arrayidx81 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom80, !dbg !4609
  %16 = load i8, i8* %arrayidx81, align 1, !dbg !4609
  %conv83 = zext i8 %16 to i64, !dbg !4609
  %call84 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv83) #6, !dbg !4609
  br label %cond.end86, !dbg !4609

cond.end86:                                       ; preds = %cond.false70, %cond.true64
  %cond87 = phi %struct.rtx_def* [ %15, %cond.true64 ], [ %call84, %cond.false70 ], !dbg !4609
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond87, i64 0, i32 0, !dbg !4609
  %bf.load88 = load i32, i32* %17, align 8, !dbg !4609
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !4609
  %cmp90 = icmp eq i32 %bf.clear89, 30, !dbg !4609
  br i1 %cmp90, label %lor.lhs.false92, label %if.then181, !dbg !4610

lor.lhs.false92:                                  ; preds = %cond.end86
  %bf.load93 = load i32, i32* %5, align 8, !dbg !4611
  %bf.clear94 = and i32 %bf.load93, 65535, !dbg !4611
  %cmp95 = icmp eq i32 %bf.clear94, 23, !dbg !4612
  br i1 %cmp95, label %lor.lhs.false97, label %if.then181, !dbg !4613

lor.lhs.false97:                                  ; preds = %lor.lhs.false92
  %18 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4614
  %cmp102 = icmp eq %struct.mem_attrs* %18, null, !dbg !4614
  br i1 %cmp102, label %cond.false110, label %cond.true104, !dbg !4614

cond.true104:                                     ; preds = %lor.lhs.false97
  %size109 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %18, i64 0, i32 2, !dbg !4614
  %19 = load %struct.rtx_def*, %struct.rtx_def** %size109, align 8, !dbg !4614
  br label %cond.end128, !dbg !4614

cond.false110:                                    ; preds = %lor.lhs.false97
  %bf.load117 = load i32, i32* %8, align 8, !dbg !4614
  %bf.lshr118 = lshr i32 %bf.load117, 16, !dbg !4614
  %bf.clear119 = and i32 %bf.lshr118, 255, !dbg !4614
  %idxprom120 = zext i32 %bf.clear119 to i64, !dbg !4614
  %arrayidx121 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom120, !dbg !4614
  %20 = load i8, i8* %arrayidx121, align 1, !dbg !4614
  %conv123 = zext i8 %20 to i64, !dbg !4614
  %call124 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv123) #6, !dbg !4614
  br label %cond.end128, !dbg !4614

cond.end128:                                      ; preds = %cond.false110, %cond.true104
  %cond129 = phi %struct.rtx_def* [ %19, %cond.true104 ], [ %call124, %cond.false110 ], !dbg !4614
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond129, i64 0, i32 1, !dbg !4614
  %arrayidx131 = bitcast %union.u* %u130 to i64*, !dbg !4614
  %21 = load i64, i64* %arrayidx131, align 8, !dbg !4614
  %cmp132 = icmp slt i64 %21, 1, !dbg !4615
  br i1 %cmp132, label %if.then181, label %lor.lhs.false134, !dbg !4616

lor.lhs.false134:                                 ; preds = %cond.end128
  %22 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4617
  %cmp139 = icmp eq %struct.mem_attrs* %22, null, !dbg !4617
  br i1 %cmp139, label %cond.false147, label %cond.true141, !dbg !4617

cond.true141:                                     ; preds = %lor.lhs.false134
  %size146 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %22, i64 0, i32 2, !dbg !4617
  %23 = load %struct.rtx_def*, %struct.rtx_def** %size146, align 8, !dbg !4617
  br label %cond.end165, !dbg !4617

cond.false147:                                    ; preds = %lor.lhs.false134
  %bf.load154 = load i32, i32* %8, align 8, !dbg !4617
  %bf.lshr155 = lshr i32 %bf.load154, 16, !dbg !4617
  %bf.clear156 = and i32 %bf.lshr155, 255, !dbg !4617
  %idxprom157 = zext i32 %bf.clear156 to i64, !dbg !4617
  %arrayidx158 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom157, !dbg !4617
  %24 = load i8, i8* %arrayidx158, align 1, !dbg !4617
  %conv160 = zext i8 %24 to i64, !dbg !4617
  %call161 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv160) #6, !dbg !4617
  br label %cond.end165, !dbg !4617

cond.end165:                                      ; preds = %cond.false147, %cond.true141
  %cond166 = phi %struct.rtx_def* [ %23, %cond.true141 ], [ %call161, %cond.false147 ], !dbg !4617
  %u167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond166, i64 0, i32 1, !dbg !4617
  %arrayidx169 = bitcast %union.u* %u167 to i64*, !dbg !4617
  %25 = load i64, i64* %arrayidx169, align 8, !dbg !4617
  %cmp170 = icmp sgt i64 %25, 65536, !dbg !4618
  br i1 %cmp170, label %if.then181, label %lor.lhs.false172, !dbg !4619

lor.lhs.false172:                                 ; preds = %cond.end165
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4620
  %27 = bitcast %union.rtunion_def* %26 to i32**, !dbg !4620
  %28 = load i32*, i32** %27, align 8, !dbg !4620
  %bf.load177 = load i32, i32* %28, align 8, !dbg !4620
  %bf.clear178 = and i32 %bf.load177, 65535, !dbg !4620
  %cmp179 = icmp eq i32 %bf.clear178, 30, !dbg !4620
  br i1 %cmp179, label %lor.lhs.false172.if.end188_crit_edge, label %if.then181, !dbg !4621

lor.lhs.false172.if.end188_crit_edge:             ; preds = %lor.lhs.false172
  %bf.load189.pre = load i32, i32* %8, align 8, !dbg !4622
  br label %if.end188, !dbg !4621

if.then181:                                       ; preds = %cond.true48.if.then181_crit_edge, %cond.true, %lor.lhs.false92, %cond.false, %lor.lhs.false172, %cond.end165, %cond.end128, %cond.end86
  br i1 %cmp4, label %cleanup, label %if.then183, !dbg !4624

if.then183:                                       ; preds = %if.then181
  %cannot_delete184 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %2, i64 0, i32 0, !dbg !4626
  store i8 1, i8* %cannot_delete184, align 8, !dbg !4629
  tail call fastcc void @clear_rhs_from_active_local_stores() #8, !dbg !4630
  br label %cleanup, !dbg !4631

if.end188:                                        ; preds = %lor.lhs.false172.if.end188_crit_edge, %if.end13
  %bf.load189 = phi i32 [ %bf.load189.pre, %lor.lhs.false172.if.end188_crit_edge ], [ %bf.load6, %if.end13 ], !dbg !4622
  %bf.clear191 = and i32 %bf.load189, 134217728, !dbg !4622
  %tobool192 = icmp eq i32 %bf.clear191, 0, !dbg !4622
  br i1 %tobool192, label %if.end195, label %if.then193, !dbg !4632

if.then193:                                       ; preds = %if.end188
  %cannot_delete194 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %2, i64 0, i32 0, !dbg !4633
  store i8 1, i8* %cannot_delete194, align 8, !dbg !4634
  br label %if.end195, !dbg !4635

if.end195:                                        ; preds = %if.end188, %if.then193
  call void @llvm.dbg.value(metadata i64* %offset, metadata !4507, metadata !DIExpression(DW_OP_deref)), !dbg !4561
  call void @llvm.dbg.value(metadata i32* %spill_alias_set, metadata !4509, metadata !DIExpression(DW_OP_deref)), !dbg !4561
  call void @llvm.dbg.value(metadata i32* %group_id, metadata !4512, metadata !DIExpression(DW_OP_deref)), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct** %base, metadata !4513, metadata !DIExpression(DW_OP_deref)), !dbg !4561
  %call196 = call fastcc zeroext i8 @canon_address(%struct.rtx_def* %6, i32* nonnull %spill_alias_set, i32* nonnull %group_id, i64* nonnull %offset, %struct.cselib_val_struct** nonnull %base) #8, !dbg !4636
  %tobool197 = icmp eq i8 %call196, 0, !dbg !4636
  br i1 %tobool197, label %if.then198, label %if.end199, !dbg !4638

if.then198:                                       ; preds = %if.end195
  call fastcc void @clear_rhs_from_active_local_stores() #8, !dbg !4639
  br label %cleanup, !dbg !4641

if.end199:                                        ; preds = %if.end195
  %bf.load200 = load i32, i32* %8, align 8, !dbg !4642
  %bf.clear202 = and i32 %bf.load200, 16711680, !dbg !4642
  %cmp203 = icmp eq i32 %bf.clear202, 65536, !dbg !4644
  br i1 %cmp203, label %if.then205, label %if.else241, !dbg !4645

if.then205:                                       ; preds = %if.end199
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4646
  %rt_mem209 = bitcast %union.rtunion_def* %29 to %struct.mem_attrs**, !dbg !4646
  %30 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem209, align 8, !dbg !4646
  %cmp210 = icmp eq %struct.mem_attrs* %30, null, !dbg !4646
  br i1 %cmp210, label %cond.false218, label %cond.true212, !dbg !4646

cond.true212:                                     ; preds = %if.then205
  %size217 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %30, i64 0, i32 2, !dbg !4646
  %31 = load %struct.rtx_def*, %struct.rtx_def** %size217, align 8, !dbg !4646
  br label %cond.end236, !dbg !4646

cond.false218:                                    ; preds = %if.then205
  %bf.lshr226 = lshr i32 %bf.load200, 16, !dbg !4646
  %bf.clear227 = and i32 %bf.lshr226, 255, !dbg !4646
  %idxprom228 = zext i32 %bf.clear227 to i64, !dbg !4646
  %arrayidx229 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom228, !dbg !4646
  %32 = load i8, i8* %arrayidx229, align 1, !dbg !4646
  %conv231 = zext i8 %32 to i64, !dbg !4646
  %call232 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv231) #6, !dbg !4646
  br label %cond.end236, !dbg !4646

cond.end236:                                      ; preds = %cond.false218, %cond.true212
  %cond237 = phi %struct.rtx_def* [ %31, %cond.true212 ], [ %call232, %cond.false218 ], !dbg !4646
  %u238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond237, i64 0, i32 1, !dbg !4646
  %arrayidx240 = bitcast %union.u* %u238 to i64*, !dbg !4646
  %33 = load i64, i64* %arrayidx240, align 8, !dbg !4646
  call void @llvm.dbg.value(metadata i64 %33, metadata !4508, metadata !DIExpression()), !dbg !4561
  br label %if.end256, !dbg !4647

if.else241:                                       ; preds = %if.end199
  %bf.lshr243 = lshr i32 %bf.load200, 16, !dbg !4648
  %bf.clear244 = and i32 %bf.lshr243, 255, !dbg !4648
  %idxprom245 = zext i32 %bf.clear244 to i64, !dbg !4648
  %arrayidx246 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom245, !dbg !4648
  %34 = load i8, i8* %arrayidx246, align 1, !dbg !4648
  %conv248 = zext i8 %34 to i64, !dbg !4648
  call void @llvm.dbg.value(metadata i64 %conv248, metadata !4508, metadata !DIExpression()), !dbg !4561
  %cmp250 = icmp ult i8 %34, 65, !dbg !4650
  br i1 %cmp250, label %if.end256, label %cond.true252, !dbg !4650

cond.true252:                                     ; preds = %if.else241
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32 1386, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4650
  br label %if.end256, !dbg !4650

if.end256:                                        ; preds = %cond.true252, %if.else241, %cond.end236
  %width.0 = phi i64 [ %33, %cond.end236 ], [ %conv248, %if.else241 ], [ %conv248, %cond.true252 ], !dbg !4651
  call void @llvm.dbg.value(metadata i64 %width.0, metadata !4508, metadata !DIExpression()), !dbg !4561
  %35 = load i32, i32* %spill_alias_set, align 4, !dbg !4652
  call void @llvm.dbg.value(metadata i32 %35, metadata !4509, metadata !DIExpression()), !dbg !4561
  %tobool257 = icmp eq i32 %35, 0, !dbg !4652
  br i1 %tobool257, label %if.else290, label %if.then258, !dbg !4653

if.then258:                                       ; preds = %if.end256
  %36 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !4654
  %store1_p = getelementptr inbounds %struct.group_info, %struct.group_info* %36, i64 0, i32 7, !dbg !4655
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store1_p, align 8, !dbg !4655
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %37, metadata !4518, metadata !DIExpression()), !dbg !4656
  %store2_p = getelementptr inbounds %struct.group_info, %struct.group_info* %36, i64 0, i32 9, !dbg !4657
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2_p, align 8, !dbg !4657
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %38, metadata !4521, metadata !DIExpression()), !dbg !4656
  %bf.load259 = load i32, i32* %8, align 8, !dbg !4658
  %bf.clear261 = and i32 %bf.load259, 16711680, !dbg !4658
  %cmp262 = icmp eq i32 %bf.clear261, 65536, !dbg !4658
  br i1 %cmp262, label %cond.true264, label %cond.end266, !dbg !4658

cond.true264:                                     ; preds = %if.then258
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32 1394, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4658
  %.pre = load i32, i32* %spill_alias_set, align 4, !dbg !4659
  br label %cond.end266, !dbg !4658

cond.end266:                                      ; preds = %if.then258, %cond.true264
  %39 = phi i32 [ %35, %if.then258 ], [ %.pre, %cond.true264 ], !dbg !4659
  call void @llvm.dbg.value(metadata i32 %39, metadata !4509, metadata !DIExpression()), !dbg !4561
  %call268 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %37, i32 %39) #6, !dbg !4661
  %tobool269 = icmp eq i32 %call268, 0, !dbg !4661
  %40 = load i32, i32* %spill_alias_set, align 4, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %40, metadata !4509, metadata !DIExpression()), !dbg !4561
  br i1 %tobool269, label %if.else272, label %if.then270, !dbg !4663

if.then270:                                       ; preds = %cond.end266
  %call271 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %38, i32 %40) #6, !dbg !4664
  br label %if.end274, !dbg !4664

if.else272:                                       ; preds = %cond.end266
  %call273 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %37, i32 %40) #6, !dbg !4665
  br label %if.end274

if.end274:                                        ; preds = %if.else272, %if.then270
  %41 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !4666
  %offset_map_size_p = getelementptr inbounds %struct.group_info, %struct.group_info* %41, i64 0, i32 14, !dbg !4668
  %42 = load i32, i32* %offset_map_size_p, align 4, !dbg !4668
  %43 = load i32, i32* %spill_alias_set, align 4, !dbg !4669
  call void @llvm.dbg.value(metadata i32 %43, metadata !4509, metadata !DIExpression()), !dbg !4561
  %cmp275 = icmp slt i32 %42, %43, !dbg !4670
  br i1 %cmp275, label %if.then277, label %if.end279, !dbg !4671

if.then277:                                       ; preds = %if.end274
  call void @llvm.dbg.value(metadata i32 %43, metadata !4509, metadata !DIExpression()), !dbg !4561
  store i32 %43, i32* %offset_map_size_p, align 4, !dbg !4672
  br label %if.end279, !dbg !4673

if.end279:                                        ; preds = %if.then277, %if.end274
  %44 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @rtx_store_info_pool, align 8, !dbg !4674
  %call280 = call i8* @pool_alloc(%struct.alloc_pool_def* %44) #6, !dbg !4675
  %45 = bitcast i8* %call280 to %struct.store_info*, !dbg !4676
  call void @llvm.dbg.value(metadata %struct.store_info* %45, metadata !4511, metadata !DIExpression()), !dbg !4561
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4677
  %tobool281 = icmp eq %struct._IO_FILE* %46, null, !dbg !4677
  br i1 %tobool281, label %if.end344, label %if.then282, !dbg !4679

if.then282:                                       ; preds = %if.end279
  %47 = load i32, i32* %spill_alias_set, align 4, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %47, metadata !4509, metadata !DIExpression()), !dbg !4561
  %bf.load283 = load i32, i32* %8, align 8, !dbg !4681
  %bf.lshr284 = lshr i32 %bf.load283, 16, !dbg !4681
  %bf.clear285 = and i32 %bf.lshr284, 255, !dbg !4681
  %idxprom286 = zext i32 %bf.clear285 to i64, !dbg !4681
  %arrayidx287 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom286, !dbg !4681
  %48 = load i8*, i8** %arrayidx287, align 8, !dbg !4681
  %call288 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %46, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i64 0, i64 0), i32 %47, i8* %48) #6, !dbg !4682
  br label %if.end344, !dbg !4682

if.else290:                                       ; preds = %if.end256
  %49 = load i32, i32* %group_id, align 4, !dbg !4683
  call void @llvm.dbg.value(metadata i32 %49, metadata !4512, metadata !DIExpression()), !dbg !4561
  %cmp291 = icmp sgt i32 %49, -1, !dbg !4684
  br i1 %cmp291, label %if.then293, label %if.else308, !dbg !4685

if.then293:                                       ; preds = %if.else290
  %50 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !4686
  %base296 = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %50, i64 0, i32 0, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %49, metadata !4512, metadata !DIExpression()), !dbg !4561
  %call300 = call fastcc %struct.group_info* @VEC_group_info_t_base_index(%struct.VEC_group_info_t_base* %base296, i32 %49) #8, !dbg !4686
  call void @llvm.dbg.value(metadata %struct.group_info* %call300, metadata !4522, metadata !DIExpression()), !dbg !4687
  %51 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @rtx_store_info_pool, align 8, !dbg !4688
  %call301 = call i8* @pool_alloc(%struct.alloc_pool_def* %51) #6, !dbg !4689
  %52 = bitcast i8* %call301 to %struct.store_info*, !dbg !4690
  call void @llvm.dbg.value(metadata %struct.store_info* %52, metadata !4511, metadata !DIExpression()), !dbg !4561
  %53 = load i64, i64* %offset, align 8, !dbg !4691
  call void @llvm.dbg.value(metadata i64 %53, metadata !4507, metadata !DIExpression()), !dbg !4561
  call fastcc void @set_usage_bits(%struct.group_info* %call300, i64 %53, i64 %width.0) #8, !dbg !4692
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4693
  %tobool302 = icmp eq %struct._IO_FILE* %54, null, !dbg !4693
  br i1 %tobool302, label %if.end344, label %if.then303, !dbg !4695

if.then303:                                       ; preds = %if.then293
  %55 = load i32, i32* %group_id, align 4, !dbg !4696
  call void @llvm.dbg.value(metadata i32 %55, metadata !4512, metadata !DIExpression()), !dbg !4561
  %56 = load i64, i64* %offset, align 8, !dbg !4697
  call void @llvm.dbg.value(metadata i64 %56, metadata !4507, metadata !DIExpression()), !dbg !4561
  %conv304 = trunc i64 %56 to i32, !dbg !4698
  call void @llvm.dbg.value(metadata i64 %56, metadata !4507, metadata !DIExpression()), !dbg !4561
  %add = add nsw i64 %56, %width.0, !dbg !4699
  %conv305 = trunc i64 %add to i32, !dbg !4700
  %call306 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %54, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.52, i64 0, i64 0), i32 %55, i32 %conv304, i32 %conv305) #6, !dbg !4701
  br label %if.end344, !dbg !4701

if.else308:                                       ; preds = %if.else290
  %arrayidx311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4702
  %rt_rtx312 = bitcast %union.rtunion_def* %arrayidx311 to %struct.rtx_def**, !dbg !4702
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx312, align 8, !dbg !4702
  %call313 = call %struct.rtx_def* @find_base_term(%struct.rtx_def* %57) #6, !dbg !4703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call313, metadata !4525, metadata !DIExpression()), !dbg !4704
  %tobool314 = icmp eq %struct.rtx_def* %call313, null, !dbg !4705
  br i1 %tobool314, label %if.then333, label %lor.lhs.false315, !dbg !4707

lor.lhs.false315:                                 ; preds = %if.else308
  %58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call313, i64 0, i32 0, !dbg !4708
  %bf.load316 = load i32, i32* %58, align 8, !dbg !4708
  %bf.clear317 = and i32 %bf.load316, 65535, !dbg !4708
  %cmp318 = icmp eq i32 %bf.clear317, 6, !dbg !4709
  br i1 %cmp318, label %land.lhs.true320, label %if.end334, !dbg !4710

land.lhs.true320:                                 ; preds = %lor.lhs.false315
  %bf.clear323 = and i32 %bf.load316, 16711680, !dbg !4711
  %cmp324 = icmp eq i32 %bf.clear323, 1048576, !dbg !4712
  br i1 %cmp324, label %land.lhs.true326, label %if.end334, !dbg !4713

land.lhs.true326:                                 ; preds = %land.lhs.true320
  %arrayidx329 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call313, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4714
  %rt_rtx330 = bitcast %union.rtunion_def* %arrayidx329 to %struct.rtx_def**, !dbg !4714
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx330, align 8, !dbg !4714
  %60 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !4715
  %cmp331 = icmp eq %struct.rtx_def* %59, %60, !dbg !4716
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !4717

if.then333:                                       ; preds = %if.else308, %land.lhs.true326
  %stack_pointer_based = getelementptr inbounds %struct.insn_info, %struct.insn_info* %2, i64 0, i32 3, !dbg !4718
  store i8 1, i8* %stack_pointer_based, align 1, !dbg !4719
  br label %if.end334, !dbg !4720

if.end334:                                        ; preds = %if.then333, %land.lhs.true326, %land.lhs.true320, %lor.lhs.false315
  %contains_cselib_groups = getelementptr inbounds %struct.insn_info, %struct.insn_info* %2, i64 0, i32 4, !dbg !4721
  store i8 1, i8* %contains_cselib_groups, align 4, !dbg !4722
  %61 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @cse_store_info_pool, align 8, !dbg !4723
  %call335 = call i8* @pool_alloc(%struct.alloc_pool_def* %61) #6, !dbg !4724
  %62 = bitcast i8* %call335 to %struct.store_info*, !dbg !4725
  call void @llvm.dbg.value(metadata %struct.store_info* %62, metadata !4511, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata i32 -1, metadata !4512, metadata !DIExpression()), !dbg !4561
  store i32 -1, i32* %group_id, align 4, !dbg !4726
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4727
  %tobool336 = icmp eq %struct._IO_FILE* %63, null, !dbg !4727
  br i1 %tobool336, label %if.end344, label %if.then337, !dbg !4729

if.then337:                                       ; preds = %if.end334
  %64 = load i64, i64* %offset, align 8, !dbg !4730
  call void @llvm.dbg.value(metadata i64 %64, metadata !4507, metadata !DIExpression()), !dbg !4561
  %conv338 = trunc i64 %64 to i32, !dbg !4731
  call void @llvm.dbg.value(metadata i64 %64, metadata !4507, metadata !DIExpression()), !dbg !4561
  %add339 = add nsw i64 %64, %width.0, !dbg !4732
  %conv340 = trunc i64 %add339 to i32, !dbg !4733
  %call341 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %63, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53, i64 0, i64 0), i32 %conv338, i32 %conv340) #6, !dbg !4734
  br label %if.end344, !dbg !4734

if.end344:                                        ; preds = %if.end279, %if.then293, %if.end334, %if.then303, %if.then337, %if.then282
  %store_info.1 = phi %struct.store_info* [ %45, %if.then282 ], [ %45, %if.end279 ], [ %52, %if.then303 ], [ %52, %if.then293 ], [ %62, %if.then337 ], [ %62, %if.end334 ], !dbg !4735
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.1, metadata !4511, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4504, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4505, metadata !DIExpression()), !dbg !4561
  %bf.load345 = load i32, i32* %5, align 8, !dbg !4736
  %bf.clear346 = and i32 %bf.load345, 65535, !dbg !4736
  %cmp347 = icmp ne i32 %bf.clear346, 23, !dbg !4737
  %65 = load i32, i32* @reload_completed, align 4, !dbg !4738
  %tobool350 = icmp ne i32 %65, 0, !dbg !4738
  %or.cond = or i1 %cmp347, %tobool350, !dbg !4739
  br i1 %or.cond, label %if.end487, label %land.lhs.true351, !dbg !4739

land.lhs.true351:                                 ; preds = %if.end344
  %66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4740
  %67 = bitcast %union.rtunion_def* %66 to i32**, !dbg !4740
  %68 = load i32*, i32** %67, align 8, !dbg !4740
  %bf.load356 = load i32, i32* %68, align 8, !dbg !4740
  %bf.clear357 = and i32 %bf.load356, 65535, !dbg !4740
  %cmp358 = icmp eq i32 %bf.clear357, 37, !dbg !4740
  %69 = bitcast i32* %68 to %struct.rtx_def*, !dbg !4741
  br i1 %cmp358, label %land.lhs.true380, label %lor.lhs.false360, !dbg !4741

lor.lhs.false360:                                 ; preds = %land.lhs.true351
  %cmp367 = icmp eq i32 %bf.clear357, 39, !dbg !4742
  br i1 %cmp367, label %land.lhs.true380, label %lor.lhs.false369, !dbg !4743

lor.lhs.false369:                                 ; preds = %lor.lhs.false360
  %idxprom376 = zext i32 %bf.clear357 to i64, !dbg !4744
  %arrayidx377 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom376, !dbg !4744
  %70 = load i32, i32* %arrayidx377, align 4, !dbg !4744
  %cmp378 = icmp eq i32 %70, 9, !dbg !4744
  br i1 %cmp378, label %land.lhs.true380, label %if.end487, !dbg !4745

land.lhs.true380:                                 ; preds = %lor.lhs.false369, %lor.lhs.false360, %land.lhs.true351
  %bf.load381 = load i32, i32* %8, align 8, !dbg !4746
  %bf.clear383 = and i32 %bf.load381, 134217728, !dbg !4746
  %tobool384 = icmp eq i32 %bf.clear383, 0, !dbg !4746
  br i1 %tobool384, label %land.lhs.true385, label %if.end487, !dbg !4747

land.lhs.true385:                                 ; preds = %land.lhs.true380
  %bf.lshr387 = lshr i32 %bf.load381, 16, !dbg !4748
  %bf.clear388 = and i32 %bf.lshr387, 255, !dbg !4748
  %idxprom389 = zext i32 %bf.clear388 to i64, !dbg !4748
  %arrayidx390 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom389, !dbg !4748
  %71 = load i8, i8* %arrayidx390, align 1, !dbg !4748
  %cmp392 = icmp eq i8 %71, 8, !dbg !4748
  br i1 %cmp392, label %land.lhs.true421, label %lor.lhs.false394, !dbg !4748

lor.lhs.false394:                                 ; preds = %land.lhs.true385
  %cmp401 = icmp eq i8 %71, 9, !dbg !4748
  br i1 %cmp401, label %land.lhs.true421, label %lor.lhs.false403, !dbg !4748

lor.lhs.false403:                                 ; preds = %lor.lhs.false394
  %cmp410 = icmp eq i8 %71, 11, !dbg !4748
  br i1 %cmp410, label %land.lhs.true421, label %lor.lhs.false412, !dbg !4748

lor.lhs.false412:                                 ; preds = %lor.lhs.false403
  %cmp419 = icmp eq i8 %71, 17, !dbg !4748
  br i1 %cmp419, label %land.lhs.true421, label %if.then423, !dbg !4749

land.lhs.true421:                                 ; preds = %lor.lhs.false412, %lor.lhs.false403, %lor.lhs.false394, %land.lhs.true385
  %72 = load i32, i32* @flag_float_store, align 4, !dbg !4750
  %tobool422 = icmp eq i32 %72, 0, !dbg !4751
  br i1 %tobool422, label %if.then423, label %if.end487, !dbg !4752

if.then423:                                       ; preds = %land.lhs.true421, %lor.lhs.false412
  call void @llvm.dbg.value(metadata %struct.rtx_def* %69, metadata !4504, metadata !DIExpression()), !dbg !4561
  %idxprom430 = zext i32 %bf.clear357 to i64, !dbg !4753
  %arrayidx431 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom430, !dbg !4753
  %73 = load i32, i32* %arrayidx431, align 4, !dbg !4753
  %cmp432 = icmp eq i32 %73, 9, !dbg !4753
  br i1 %cmp432, label %if.end465, label %if.else435, !dbg !4754

if.else435:                                       ; preds = %if.then423
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4755
  %u437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i64 0, i32 1, !dbg !4755
  %75 = getelementptr inbounds %union.u, %union.u* %u437, i64 1, i32 0, i32 0, i64 0, !dbg !4755
  %rt_rtx440 = bitcast %union.rtunion_def* %75 to %struct.rtx_def**, !dbg !4755
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx440, align 8, !dbg !4755
  %cmp441 = icmp eq %struct.rtx_def* %76, %body, !dbg !4756
  br i1 %cmp441, label %if.then443, label %if.end465, !dbg !4757

if.then443:                                       ; preds = %if.else435
  %call445 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %74, i32 4, %struct.rtx_def* null) #6, !dbg !4758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call445, metadata !4527, metadata !DIExpression()), !dbg !4759
  %tobool446 = icmp eq %struct.rtx_def* %call445, null, !dbg !4760
  br i1 %tobool446, label %if.end465, label %land.lhs.true447, !dbg !4762

land.lhs.true447:                                 ; preds = %if.then443
  %arrayidx450 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call445, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4763
  %77 = bitcast %union.rtunion_def* %arrayidx450 to i32**, !dbg !4763
  %78 = load i32*, i32** %77, align 8, !dbg !4763
  %bf.load452 = load i32, i32* %78, align 8, !dbg !4763
  %bf.clear453 = and i32 %bf.load452, 65535, !dbg !4763
  %idxprom454 = zext i32 %bf.clear453 to i64, !dbg !4763
  %arrayidx455 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom454, !dbg !4763
  %79 = load i32, i32* %arrayidx455, align 4, !dbg !4763
  %cmp456 = icmp eq i32 %79, 9, !dbg !4763
  br i1 %cmp456, label %if.then458, label %if.end465, !dbg !4764

if.then458:                                       ; preds = %land.lhs.true447
  %80 = bitcast i32* %78 to %struct.rtx_def*, !dbg !4764
  call void @llvm.dbg.value(metadata %struct.rtx_def* %80, metadata !4505, metadata !DIExpression()), !dbg !4561
  br label %if.end465, !dbg !4765

if.end465:                                        ; preds = %if.then443, %if.else435, %if.then458, %land.lhs.true447, %if.then423
  %const_rhs.2 = phi %struct.rtx_def* [ %69, %if.then423 ], [ null, %if.else435 ], [ %80, %if.then458 ], [ null, %land.lhs.true447 ], [ null, %if.then443 ], !dbg !4766
  call void @llvm.dbg.value(metadata %struct.rtx_def* %const_rhs.2, metadata !4505, metadata !DIExpression()), !dbg !4561
  %cmp466 = icmp eq %struct.rtx_def* %const_rhs.2, null, !dbg !4767
  br i1 %cmp466, label %land.lhs.true468, label %if.end487, !dbg !4768

land.lhs.true468:                                 ; preds = %if.end465
  %bf.load469 = load i32, i32* %68, align 8, !dbg !4769
  %bf.clear470 = and i32 %bf.load469, 65535, !dbg !4769
  %cmp471 = icmp eq i32 %bf.clear470, 37, !dbg !4769
  br i1 %cmp471, label %if.then473, label %if.end487, !dbg !4770

if.then473:                                       ; preds = %land.lhs.true468
  %81 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @scratch, align 8, !dbg !4771
  %call475 = call %struct.rtx_def* @cselib_expand_value_rtx(%struct.rtx_def* %69, %struct.bitmap_head_def* %81, i32 5) #6, !dbg !4772
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call475, metadata !4533, metadata !DIExpression()), !dbg !4773
  %tobool476 = icmp eq %struct.rtx_def* %call475, null, !dbg !4774
  br i1 %tobool476, label %if.end487, label %land.lhs.true477, !dbg !4776

land.lhs.true477:                                 ; preds = %if.then473
  %82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call475, i64 0, i32 0, !dbg !4777
  %bf.load478 = load i32, i32* %82, align 8, !dbg !4777
  %bf.clear479 = and i32 %bf.load478, 65535, !dbg !4777
  %idxprom480 = zext i32 %bf.clear479 to i64, !dbg !4777
  %arrayidx481 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom480, !dbg !4777
  %83 = load i32, i32* %arrayidx481, align 4, !dbg !4777
  %cmp482 = icmp eq i32 %83, 9, !dbg !4777
  %spec.select = select i1 %cmp482, %struct.rtx_def* %call475, %struct.rtx_def* null, !dbg !4778
  br label %if.end487, !dbg !4778

if.end487:                                        ; preds = %land.lhs.true421, %if.then473, %land.lhs.true380, %land.lhs.true477, %if.end465, %land.lhs.true468, %if.end344, %lor.lhs.false369
  %const_rhs.5 = phi %struct.rtx_def* [ null, %land.lhs.true380 ], [ null, %land.lhs.true421 ], [ null, %lor.lhs.false369 ], [ null, %if.end344 ], [ null, %land.lhs.true468 ], [ %const_rhs.2, %if.end465 ], [ null, %if.then473 ], [ %spec.select, %land.lhs.true477 ], !dbg !4561
  %rhs.0 = phi %struct.rtx_def* [ null, %land.lhs.true380 ], [ null, %land.lhs.true421 ], [ null, %lor.lhs.false369 ], [ null, %if.end344 ], [ %69, %land.lhs.true468 ], [ %69, %if.end465 ], [ %69, %if.then473 ], [ %69, %land.lhs.true477 ], !dbg !4561
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rhs.0, metadata !4504, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.rtx_def* %const_rhs.5, metadata !4505, metadata !DIExpression()), !dbg !4561
  %84 = load %struct.insn_info*, %struct.insn_info** @active_local_stores, align 8, !dbg !4779
  call void @llvm.dbg.value(metadata %struct.insn_info* %84, metadata !4514, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.insn_info* null, metadata !4515, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.insn_info* null, metadata !4516, metadata !DIExpression()), !dbg !4561
  %call488 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %6) #6, !dbg !4780
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call488, metadata !4503, metadata !DIExpression()), !dbg !4561
  %85 = load i32, i32* %spill_alias_set, align 4, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %85, metadata !4509, metadata !DIExpression()), !dbg !4561
  %tobool489 = icmp eq i32 %85, 0, !dbg !4781
  br i1 %tobool489, label %if.else491, label %if.end509, !dbg !4782

if.else491:                                       ; preds = %if.end487
  %86 = load i32, i32* %group_id, align 4, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %86, metadata !4512, metadata !DIExpression()), !dbg !4561
  %cmp492 = icmp slt i32 %86, 0, !dbg !4784
  br i1 %cmp492, label %if.then494, label %if.else495, !dbg !4785

if.then494:                                       ; preds = %if.else491
  %87 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %base, align 8, !dbg !4786
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct* %87, metadata !4513, metadata !DIExpression()), !dbg !4561
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %87, i64 0, i32 2, !dbg !4787
  br label %if.end504, !dbg !4788

if.else495:                                       ; preds = %if.else491
  %88 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !4789
  %base499 = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %88, i64 0, i32 0, !dbg !4789
  call void @llvm.dbg.value(metadata i32 %86, metadata !4512, metadata !DIExpression()), !dbg !4561
  %call503 = call fastcc %struct.group_info* @VEC_group_info_t_base_index(%struct.VEC_group_info_t_base* %base499, i32 %86) #8, !dbg !4789
  call void @llvm.dbg.value(metadata %struct.group_info* %call503, metadata !4536, metadata !DIExpression()), !dbg !4790
  %canon_base_addr = getelementptr inbounds %struct.group_info, %struct.group_info* %call503, i64 0, i32 5, !dbg !4791
  br label %if.end504

if.end504:                                        ; preds = %if.else495, %if.then494
  %mem_addr.0.in = phi %struct.rtx_def** [ %val_rtx, %if.then494 ], [ %canon_base_addr, %if.else495 ]
  %mem_addr.0 = load %struct.rtx_def*, %struct.rtx_def** %mem_addr.0.in, align 8, !dbg !4792
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem_addr.0, metadata !4506, metadata !DIExpression()), !dbg !4561
  %89 = load i64, i64* %offset, align 8, !dbg !4793
  call void @llvm.dbg.value(metadata i64 %89, metadata !4507, metadata !DIExpression()), !dbg !4561
  %tobool505 = icmp eq i64 %89, 0, !dbg !4793
  br i1 %tobool505, label %if.end509, label %if.then506, !dbg !4795

if.then506:                                       ; preds = %if.end504
  call void @llvm.dbg.value(metadata i64 %89, metadata !4507, metadata !DIExpression()), !dbg !4561
  %call507 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %mem_addr.0, i64 %89) #6, !dbg !4796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call507, metadata !4506, metadata !DIExpression()), !dbg !4561
  br label %if.end509, !dbg !4797

if.end509:                                        ; preds = %if.end504, %if.end487, %if.then506
  %mem_addr.2 = phi %struct.rtx_def* [ null, %if.end487 ], [ %call507, %if.then506 ], [ %mem_addr.0, %if.end504 ], !dbg !4798
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem_addr.2, metadata !4506, metadata !DIExpression()), !dbg !4561
  %90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call488, i64 0, i32 0, !dbg !4799
  %tobool574 = icmp ne %struct.rtx_def* %const_rhs.5, null, !dbg !4801
  %conv587 = trunc i64 %width.0 to i32, !dbg !4801
  br label %while.cond, !dbg !4802

while.cond:                                       ; preds = %if.end698, %if.end509
  %redundant_reason.0 = phi %struct.insn_info* [ null, %if.end509 ], [ %redundant_reason.8, %if.end698 ], !dbg !4803
  %last.0 = phi %struct.insn_info* [ null, %if.end509 ], [ %last.1, %if.end698 ], !dbg !4804
  %ptr.0 = phi %struct.insn_info* [ %84, %if.end509 ], [ %91, %if.end698 ], !dbg !4561
  call void @llvm.dbg.value(metadata %struct.insn_info* %ptr.0, metadata !4514, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.insn_info* %last.0, metadata !4515, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.insn_info* %redundant_reason.0, metadata !4516, metadata !DIExpression()), !dbg !4561
  %tobool510 = icmp eq %struct.insn_info* %ptr.0, null, !dbg !4802
  br i1 %tobool510, label %while.end699, label %while.body, !dbg !4802

while.body:                                       ; preds = %while.cond
  %next_local_store = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 9, !dbg !4805
  %91 = load %struct.insn_info*, %struct.insn_info** %next_local_store, align 8, !dbg !4805
  call void @llvm.dbg.value(metadata %struct.insn_info* %91, metadata !4541, metadata !DIExpression()), !dbg !4806
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 6, !dbg !4807
  call void @llvm.dbg.value(metadata i8 1, metadata !4544, metadata !DIExpression()), !dbg !4806
  br label %while.cond511, !dbg !4808

while.cond511:                                    ; preds = %while.body513, %while.body
  %s_info.0.in = phi %struct.store_info** [ %store_rec, %while.body ], [ %next514, %while.body513 ]
  %s_info.0 = load %struct.store_info*, %struct.store_info** %s_info.0.in, align 8, !dbg !4806
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info.0, metadata !4543, metadata !DIExpression()), !dbg !4806
  %is_set = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0, i64 0, i32 0, !dbg !4809
  %92 = load i8, i8* %is_set, align 8, !dbg !4809
  %tobool512 = icmp eq i8 %92, 0, !dbg !4810
  br i1 %tobool512, label %while.body513, label %while.end, !dbg !4808

while.body513:                                    ; preds = %while.cond511
  %next514 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0, i64 0, i32 10, !dbg !4811
  br label %while.cond511, !dbg !4808, !llvm.loop !4812

while.end:                                        ; preds = %while.cond511
  %s_info.0.lcssa = phi %struct.store_info* [ %s_info.0, %while.cond511 ], !dbg !4806
  %alias_set = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 6, !dbg !4813
  %93 = load i32, i32* %alias_set, align 8, !dbg !4813
  %94 = load i32, i32* %spill_alias_set, align 4, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %94, metadata !4509, metadata !DIExpression()), !dbg !4561
  %cmp515 = icmp eq i32 %93, %94, !dbg !4815
  br i1 %cmp515, label %if.else518, label %if.end678, !dbg !4816

if.else518:                                       ; preds = %while.end
  %tobool520 = icmp eq i32 %93, 0, !dbg !4817
  br i1 %tobool520, label %if.else551, label %if.then521, !dbg !4818

if.then521:                                       ; preds = %if.else518
  %call524 = call fastcc %struct.clear_alias_mode_holder* @clear_alias_set_lookup(i32 %93) #8, !dbg !4819
  call void @llvm.dbg.value(metadata %struct.clear_alias_mode_holder* %call524, metadata !4545, metadata !DIExpression()), !dbg !4820
  %bf.load525 = load i32, i32* %90, align 8, !dbg !4821
  %mem528 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 4, !dbg !4822
  %95 = bitcast %struct.rtx_def** %mem528 to i32**, !dbg !4822
  %96 = load i32*, i32** %95, align 8, !dbg !4822
  %bf.load529 = load i32, i32* %96, align 8, !dbg !4822
  %bf.lshr5267 = xor i32 %bf.load525, %bf.load529, !dbg !4823
  %97 = and i32 %bf.lshr5267, 16711680, !dbg !4823
  %cmp532 = icmp eq i32 %97, 0, !dbg !4823
  br i1 %cmp532, label %land.lhs.true534, label %if.end541, !dbg !4824

land.lhs.true534:                                 ; preds = %if.then521
  %bf.lshr536 = lshr i32 %bf.load525, 16, !dbg !4825
  %bf.clear537 = and i32 %bf.lshr536, 255, !dbg !4825
  %mode = getelementptr inbounds %struct.clear_alias_mode_holder, %struct.clear_alias_mode_holder* %call524, i64 0, i32 1, !dbg !4826
  %98 = load i32, i32* %mode, align 4, !dbg !4826
  %cmp538 = icmp eq i32 %bf.clear537, %98, !dbg !4827
  br i1 %cmp538, label %if.then540, label %if.end541, !dbg !4828

if.then540:                                       ; preds = %land.lhs.true534
  call void @llvm.dbg.value(metadata i8 1, metadata !4544, metadata !DIExpression()), !dbg !4806
  call fastcc void @set_all_positions_unneeded(%struct.store_info* %s_info.0.lcssa) #8, !dbg !4829
  br label %if.end541, !dbg !4831

if.end541:                                        ; preds = %if.then540, %land.lhs.true534, %if.then521
  call void @llvm.dbg.value(metadata i8 1, metadata !4544, metadata !DIExpression()), !dbg !4806
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4832
  %tobool542 = icmp eq %struct._IO_FILE* %99, null, !dbg !4832
  br i1 %tobool542, label %if.end678, label %if.then543, !dbg !4834

if.then543:                                       ; preds = %if.end541
  %insn544 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 5, !dbg !4835
  %100 = load %struct.rtx_def*, %struct.rtx_def** %insn544, align 8, !dbg !4835
  %arrayidx547 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4835
  %rt_int = bitcast %union.rtunion_def* %arrayidx547 to i32*, !dbg !4835
  %101 = load i32, i32* %rt_int, align 8, !dbg !4835
  %102 = load i32, i32* %alias_set, align 8, !dbg !4836
  %call549 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %99, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.54, i64 0, i64 0), i32 %101, i32 %102) #6, !dbg !4837
  br label %if.end678, !dbg !4837

if.else551:                                       ; preds = %if.else518
  %group_id552 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 2, !dbg !4838
  %103 = load i32, i32* %group_id552, align 4, !dbg !4838
  %104 = load i32, i32* %group_id, align 4, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %104, metadata !4512, metadata !DIExpression()), !dbg !4561
  %cmp553 = icmp eq i32 %103, %104, !dbg !4840
  br i1 %cmp553, label %land.lhs.true555, label %if.else659, !dbg !4841

land.lhs.true555:                                 ; preds = %if.else551
  %cse_base = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 3, !dbg !4842
  %105 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %cse_base, align 8, !dbg !4842
  %106 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %base, align 8, !dbg !4843
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct* %106, metadata !4513, metadata !DIExpression()), !dbg !4561
  %cmp556 = icmp eq %struct.cselib_val_struct* %105, %106, !dbg !4844
  br i1 %cmp556, label %if.then558, label %if.else659, !dbg !4845

if.then558:                                       ; preds = %land.lhs.true555
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4846
  %tobool559 = icmp eq %struct._IO_FILE* %107, null, !dbg !4846
  br i1 %tobool559, label %if.end570, label %if.then560, !dbg !4848

if.then560:                                       ; preds = %if.then558
  %insn561 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 5, !dbg !4849
  %108 = load %struct.rtx_def*, %struct.rtx_def** %insn561, align 8, !dbg !4849
  %arrayidx564 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4849
  %rt_int565 = bitcast %union.rtunion_def* %arrayidx564 to i32*, !dbg !4849
  %109 = load i32, i32* %rt_int565, align 8, !dbg !4849
  %begin = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 7, !dbg !4850
  %110 = load i64, i64* %begin, align 8, !dbg !4850
  %conv567 = trunc i64 %110 to i32, !dbg !4851
  %end = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 8, !dbg !4852
  %111 = load i64, i64* %end, align 8, !dbg !4852
  %conv568 = trunc i64 %111 to i32, !dbg !4853
  %call569 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %107, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.55, i64 0, i64 0), i32 %109, i32 %103, i32 %conv567, i32 %conv568) #6, !dbg !4854
  br label %if.end570, !dbg !4854

if.end570:                                        ; preds = %if.then558, %if.then560
  %const_rhs571 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 12, !dbg !4855
  %112 = load %struct.rtx_def*, %struct.rtx_def** %const_rhs571, align 8, !dbg !4855
  %tobool572 = icmp ne %struct.rtx_def* %112, null, !dbg !4856
  %or.cond1 = and i1 %tobool572, %tobool574, !dbg !4857
  br i1 %or.cond1, label %land.lhs.true575, label %if.end641, !dbg !4857

land.lhs.true575:                                 ; preds = %if.end570
  %113 = load i64, i64* %offset, align 8, !dbg !4858
  call void @llvm.dbg.value(metadata i64 %113, metadata !4507, metadata !DIExpression()), !dbg !4561
  %begin576 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 7, !dbg !4859
  %114 = load i64, i64* %begin576, align 8, !dbg !4859
  %cmp577 = icmp slt i64 %113, %114, !dbg !4860
  br i1 %cmp577, label %if.end641, label %land.lhs.true579, !dbg !4861

land.lhs.true579:                                 ; preds = %land.lhs.true575
  call void @llvm.dbg.value(metadata i64 %113, metadata !4507, metadata !DIExpression()), !dbg !4561
  %add580 = add nsw i64 %113, %width.0, !dbg !4862
  %end581 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 8, !dbg !4863
  %115 = load i64, i64* %end581, align 8, !dbg !4863
  %cmp582 = icmp sgt i64 %add580, %115, !dbg !4864
  br i1 %cmp582, label %if.end641, label %land.lhs.true584, !dbg !4865

land.lhs.true584:                                 ; preds = %land.lhs.true579
  call void @llvm.dbg.value(metadata i64 %113, metadata !4507, metadata !DIExpression()), !dbg !4561
  %sub = sub nsw i64 %113, %114, !dbg !4866
  %conv586 = trunc i64 %sub to i32, !dbg !4867
  %call588 = call fastcc zeroext i8 @all_positions_needed_p(%struct.store_info* %s_info.0.lcssa, i32 %conv586, i32 %conv587) #8, !dbg !4868
  %tobool590 = icmp eq i8 %call588, 0, !dbg !4868
  br i1 %tobool590, label %if.end641, label %if.then591, !dbg !4869

if.then591:                                       ; preds = %land.lhs.true584
  %bf.load592 = load i32, i32* %90, align 8, !dbg !4870
  %bf.clear594 = and i32 %bf.load592, 16711680, !dbg !4870
  %cmp595 = icmp eq i32 %bf.clear594, 65536, !dbg !4871
  br i1 %cmp595, label %if.then597, label %if.else610, !dbg !4872

if.then597:                                       ; preds = %if.then591
  %mem598 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 4, !dbg !4873
  %116 = bitcast %struct.rtx_def** %mem598 to i32**, !dbg !4873
  %117 = load i32*, i32** %116, align 8, !dbg !4873
  %bf.load599 = load i32, i32* %117, align 8, !dbg !4873
  %bf.clear601 = and i32 %bf.load599, 16711680, !dbg !4873
  %cmp602 = icmp eq i32 %bf.clear601, 65536, !dbg !4876
  br i1 %cmp602, label %land.lhs.true604, label %if.end641, !dbg !4877

land.lhs.true604:                                 ; preds = %if.then597
  %118 = load %struct.rtx_def*, %struct.rtx_def** %const_rhs571, align 8, !dbg !4878
  %cmp606 = icmp eq %struct.rtx_def* %118, %const_rhs.5, !dbg !4879
  %spec.select2 = select i1 %cmp606, %struct.insn_info* %ptr.0, %struct.insn_info* %redundant_reason.0, !dbg !4880
  br label %if.end641, !dbg !4880

if.else610:                                       ; preds = %if.then591
  %119 = load %struct.rtx_def*, %struct.rtx_def** %const_rhs571, align 8, !dbg !4881
  %120 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4882
  %cmp612 = icmp eq %struct.rtx_def* %119, %120, !dbg !4883
  %cmp615 = icmp eq %struct.rtx_def* %const_rhs.5, %120, !dbg !4884
  %or.cond3 = and i1 %cmp612, %cmp615, !dbg !4885
  br i1 %or.cond3, label %if.end641, label %if.else618, !dbg !4885

if.else618:                                       ; preds = %if.else610
  call void @start_sequence() #6, !dbg !4886
  %bf.load619 = load i32, i32* %90, align 8, !dbg !4887
  %bf.lshr620 = lshr i32 %bf.load619, 16, !dbg !4887
  %bf.clear621 = and i32 %bf.lshr620, 255, !dbg !4887
  %121 = load i64, i64* %offset, align 8, !dbg !4888
  call void @llvm.dbg.value(metadata i64 %121, metadata !4507, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata i64 %121, metadata !4507, metadata !DIExpression()), !dbg !4561
  %add622 = add nsw i64 %121, %width.0, !dbg !4889
  %122 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4890
  %arrayidx626 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i64 0, i32 1, i32 0, i32 1, !dbg !4890
  %rt_bb = bitcast %struct.object_block** %arrayidx626 to %struct.basic_block_def**, !dbg !4890
  %123 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4890
  %call627 = call fastcc %struct.rtx_def* @get_stored_val(%struct.store_info* %s_info.0.lcssa, i32 %bf.clear621, i64 %121, i64 %add622, %struct.basic_block_def* %123, i8 zeroext 1) #8, !dbg !4891
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call627, metadata !4552, metadata !DIExpression()), !dbg !4892
  %call628 = call %struct.rtx_def* @get_insns() #6, !dbg !4893
  %cmp629 = icmp ne %struct.rtx_def* %call628, null, !dbg !4895
  call void @end_sequence() #6, !dbg !4896
  %tobool6336 = icmp eq %struct.rtx_def* %call627, null, !dbg !4897
  %tobool633 = or i1 %tobool6336, %cmp629, !dbg !4897
  br i1 %tobool633, label %if.end641, label %land.lhs.true634, !dbg !4899

land.lhs.true634:                                 ; preds = %if.else618
  %call635 = call i32 @rtx_equal_p(%struct.rtx_def* %call627, %struct.rtx_def* nonnull %const_rhs.5) #6, !dbg !4900
  %tobool636 = icmp eq i32 %call635, 0, !dbg !4900
  %spec.select5 = select i1 %tobool636, %struct.insn_info* %redundant_reason.0, %struct.insn_info* %ptr.0, !dbg !4901
  br label %if.end641, !dbg !4901

if.end641:                                        ; preds = %if.else618, %land.lhs.true584, %land.lhs.true579, %land.lhs.true575, %land.lhs.true634, %land.lhs.true604, %if.then597, %if.else610, %if.end570
  %redundant_reason.5 = phi %struct.insn_info* [ %redundant_reason.0, %land.lhs.true584 ], [ %redundant_reason.0, %land.lhs.true579 ], [ %redundant_reason.0, %land.lhs.true575 ], [ %redundant_reason.0, %if.end570 ], [ %redundant_reason.0, %if.then597 ], [ %spec.select2, %land.lhs.true604 ], [ %ptr.0, %if.else610 ], [ %redundant_reason.0, %if.else618 ], [ %spec.select5, %land.lhs.true634 ], !dbg !4561
  call void @llvm.dbg.value(metadata %struct.insn_info* %redundant_reason.5, metadata !4516, metadata !DIExpression()), !dbg !4561
  %124 = load i64, i64* %offset, align 8, !dbg !4902
  call void @llvm.dbg.value(metadata i64 %124, metadata !4507, metadata !DIExpression()), !dbg !4561
  %begin642 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 7, !dbg !4902
  %125 = load i64, i64* %begin642, align 8, !dbg !4902
  %cmp643 = icmp sgt i64 %124, %125, !dbg !4902
  br i1 %cmp643, label %cond.true645, label %cond.false646, !dbg !4902

cond.true645:                                     ; preds = %if.end641
  br label %cond.end648, !dbg !4902

cond.false646:                                    ; preds = %if.end641
  br label %cond.end648, !dbg !4902

cond.end648:                                      ; preds = %cond.false646, %cond.true645
  %cond649 = phi i64 [ %124, %cond.true645 ], [ %125, %cond.false646 ], !dbg !4902
  call void @llvm.dbg.value(metadata i64 %cond649, metadata !4549, metadata !DIExpression()), !dbg !4904
  %end653 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 8, !dbg !4905
  br label %for.cond, !dbg !4907

for.cond:                                         ; preds = %for.body, %cond.end648
  %126 = phi i64 [ %124, %cond.end648 ], [ %.pre11, %for.body ], !dbg !4908
  %i.0 = phi i64 [ %cond649, %cond.end648 ], [ %inc, %for.body ], !dbg !4909
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4549, metadata !DIExpression()), !dbg !4904
  call void @llvm.dbg.value(metadata i64 %126, metadata !4507, metadata !DIExpression()), !dbg !4561
  %add650 = add nsw i64 %126, %width.0, !dbg !4910
  %cmp651 = icmp slt i64 %i.0, %add650, !dbg !4911
  br i1 %cmp651, label %land.rhs, label %if.end678.loopexit, !dbg !4912

land.rhs:                                         ; preds = %for.cond
  %127 = load i64, i64* %end653, align 8, !dbg !4905
  %cmp654 = icmp slt i64 %i.0, %127, !dbg !4913
  br i1 %cmp654, label %for.body, label %if.end678.loopexit, !dbg !4914

for.body:                                         ; preds = %land.rhs
  %128 = load i64, i64* %begin642, align 8, !dbg !4915
  %sub657 = sub nsw i64 %i.0, %128, !dbg !4916
  %conv658 = trunc i64 %sub657 to i32, !dbg !4917
  call fastcc void @set_position_unneeded(%struct.store_info* %s_info.0.lcssa, i32 %conv658) #8, !dbg !4918
  %inc = add nsw i64 %i.0, 1, !dbg !4919
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4549, metadata !DIExpression()), !dbg !4904
  %.pre11 = load i64, i64* %offset, align 8, !dbg !4908
  br label %for.cond, !dbg !4920, !llvm.loop !4921

if.else659:                                       ; preds = %land.lhs.true555, %if.else551
  %rhs660 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 11, !dbg !4923
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rhs660, align 8, !dbg !4923
  %tobool661 = icmp eq %struct.rtx_def* %129, null, !dbg !4925
  br i1 %tobool661, label %if.end678, label %if.then662, !dbg !4926

if.then662:                                       ; preds = %if.else659
  %mem663 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 4, !dbg !4927
  %130 = load %struct.rtx_def*, %struct.rtx_def** %mem663, align 8, !dbg !4927
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i64 0, i32 0, !dbg !4930
  %bf.load665 = load i32, i32* %.cast, align 8, !dbg !4930
  %bf.lshr666 = lshr i32 %bf.load665, 16, !dbg !4930
  %bf.clear667 = and i32 %bf.lshr666, 255, !dbg !4930
  %mem_addr668 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 5, !dbg !4931
  %131 = load %struct.rtx_def*, %struct.rtx_def** %mem_addr668, align 8, !dbg !4931
  %call669 = call i32 @canon_true_dependence(%struct.rtx_def* %130, i32 %bf.clear667, %struct.rtx_def* %131, %struct.rtx_def* %call488, %struct.rtx_def* %mem_addr.2, i8 (%struct.rtx_def*, i8)* nonnull @rtx_varies_p) #6, !dbg !4932
  %tobool670 = icmp eq i32 %call669, 0, !dbg !4932
  br i1 %tobool670, label %if.end678, label %if.then671, !dbg !4933

if.then671:                                       ; preds = %if.then662
  store %struct.rtx_def* null, %struct.rtx_def** %rhs660, align 8, !dbg !4934
  %const_rhs673 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info.0.lcssa, i64 0, i32 12, !dbg !4936
  store %struct.rtx_def* null, %struct.rtx_def** %const_rhs673, align 8, !dbg !4937
  br label %if.end678, !dbg !4938

if.end678.loopexit:                               ; preds = %for.cond, %land.rhs
  br label %if.end678, !dbg !4939

if.end678:                                        ; preds = %if.end678.loopexit, %if.end541, %if.then662, %if.else659, %while.end, %if.then543, %if.then671
  %redundant_reason.8 = phi %struct.insn_info* [ %redundant_reason.0, %while.end ], [ %redundant_reason.0, %if.then543 ], [ %redundant_reason.0, %if.end541 ], [ %redundant_reason.0, %if.then662 ], [ %redundant_reason.0, %if.then671 ], [ %redundant_reason.0, %if.else659 ], [ %redundant_reason.5, %if.end678.loopexit ], !dbg !4803
  %del.2 = phi i8 [ 0, %while.end ], [ 1, %if.then543 ], [ 1, %if.end541 ], [ 1, %if.then662 ], [ 1, %if.then671 ], [ 1, %if.else659 ], [ 1, %if.end678.loopexit ], !dbg !4941
  call void @llvm.dbg.value(metadata i8 %del.2, metadata !4544, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata %struct.insn_info* %redundant_reason.8, metadata !4516, metadata !DIExpression()), !dbg !4561
  %call679 = call fastcc zeroext i8 @any_positions_needed_p(%struct.store_info* %s_info.0.lcssa) #8, !dbg !4939
  %tobool681 = icmp eq i8 %call679, 0, !dbg !4939
  br i1 %tobool681, label %lor.lhs.false682, label %if.then686, !dbg !4942

lor.lhs.false682:                                 ; preds = %if.end678
  %cannot_delete683 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 0, !dbg !4943
  %132 = load i8, i8* %cannot_delete683, align 8, !dbg !4943
  %tobool685 = icmp eq i8 %132, 0, !dbg !4944
  br i1 %tobool685, label %if.end687, label %if.then686, !dbg !4945

if.then686:                                       ; preds = %lor.lhs.false682, %if.end678
  call void @llvm.dbg.value(metadata i8 0, metadata !4544, metadata !DIExpression()), !dbg !4806
  br label %if.end687, !dbg !4946

if.end687:                                        ; preds = %lor.lhs.false682, %if.then686
  %del.3 = phi i8 [ 0, %if.then686 ], [ %del.2, %lor.lhs.false682 ], !dbg !4806
  call void @llvm.dbg.value(metadata i8 %del.3, metadata !4544, metadata !DIExpression()), !dbg !4806
  %tobool688 = icmp eq i8 %del.3, 0, !dbg !4947
  br i1 %tobool688, label %if.end698, label %if.then689, !dbg !4948

if.then689:                                       ; preds = %if.end687
  call void @llvm.dbg.value(metadata %struct.insn_info* %ptr.0, metadata !4558, metadata !DIExpression()), !dbg !4949
  %tobool690 = icmp eq %struct.insn_info* %last.0, null, !dbg !4950
  %133 = bitcast %struct.insn_info** %next_local_store to i64*, !dbg !4952
  %134 = load i64, i64* %133, align 8, !dbg !4952
  br i1 %tobool690, label %if.else694, label %if.then691, !dbg !4953

if.then691:                                       ; preds = %if.then689
  %next_local_store693 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %last.0, i64 0, i32 9, !dbg !4954
  %135 = bitcast %struct.insn_info** %next_local_store693 to i64*, !dbg !4955
  store i64 %134, i64* %135, align 8, !dbg !4955
  br label %if.end696, !dbg !4956

if.else694:                                       ; preds = %if.then689
  store i64 %134, i64* bitcast (%struct.insn_info** @active_local_stores to i64*), align 8, !dbg !4957
  br label %if.end696

if.end696:                                        ; preds = %if.else694, %if.then691
  call fastcc void @delete_dead_store_insn(%struct.insn_info* nonnull %ptr.0) #8, !dbg !4958
  br label %if.end698, !dbg !4959

if.end698:                                        ; preds = %if.end687, %if.end696
  %last.1 = phi %struct.insn_info* [ %last.0, %if.end696 ], [ %ptr.0, %if.end687 ], !dbg !4561
  call void @llvm.dbg.value(metadata %struct.insn_info* %last.1, metadata !4515, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.insn_info* %91, metadata !4514, metadata !DIExpression()), !dbg !4561
  br label %while.cond, !dbg !4802, !llvm.loop !4960

while.end699:                                     ; preds = %while.cond
  %redundant_reason.0.lcssa = phi %struct.insn_info* [ %redundant_reason.0, %while.cond ], !dbg !4803
  call void @llvm.dbg.value(metadata %struct.insn_info* %redundant_reason.0.lcssa, metadata !4516, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.insn_info* %redundant_reason.0.lcssa, metadata !4516, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata %struct.insn_info* %redundant_reason.0.lcssa, metadata !4516, metadata !DIExpression()), !dbg !4561
  %store_rec700 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %2, i64 0, i32 6, !dbg !4962
  %136 = bitcast %struct.store_info** %store_rec700 to i64*, !dbg !4962
  %137 = load i64, i64* %136, align 8, !dbg !4962
  %next701 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 10, !dbg !4963
  %138 = bitcast %struct.store_info** %next701 to i64*, !dbg !4964
  store i64 %137, i64* %138, align 8, !dbg !4964
  store %struct.store_info* %store_info.1, %struct.store_info** %store_rec700, align 8, !dbg !4965
  %mem703 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 4, !dbg !4966
  store %struct.rtx_def* %call488, %struct.rtx_def** %mem703, align 8, !dbg !4967
  %139 = load i32, i32* %spill_alias_set, align 4, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %139, metadata !4509, metadata !DIExpression()), !dbg !4561
  %alias_set704 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 6, !dbg !4969
  store i32 %139, i32* %alias_set704, align 8, !dbg !4970
  %mem_addr705 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 5, !dbg !4971
  store %struct.rtx_def* %mem_addr.2, %struct.rtx_def** %mem_addr705, align 8, !dbg !4972
  %140 = bitcast %struct.cselib_val_struct** %base to i64*, !dbg !4973
  %141 = load i64, i64* %140, align 8, !dbg !4973
  %cse_base706 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 3, !dbg !4974
  %142 = bitcast %struct.cselib_val_struct** %cse_base706 to i64*, !dbg !4975
  store i64 %141, i64* %142, align 8, !dbg !4975
  %cmp707 = icmp sgt i64 %width.0, 64, !dbg !4976
  %is_large = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 1, !dbg !4978
  br i1 %cmp707, label %if.then709, label %if.else713, !dbg !4979

if.then709:                                       ; preds = %while.end699
  store i8 1, i8* %is_large, align 1, !dbg !4980
  %count = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 9, i32 0, i32 1, !dbg !4982
  store i32 0, i32* %count, align 8, !dbg !4983
  %call710 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4984
  %bmap = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 9, i32 0, i32 0, !dbg !4985
  store %struct.bitmap_head_def* %call710, %struct.bitmap_head_def** %bmap, align 8, !dbg !4986
  br label %if.end718, !dbg !4987

if.else713:                                       ; preds = %while.end699
  store i8 0, i8* %is_large, align 1, !dbg !4988
  %call716 = call fastcc i64 @lowpart_bitmask(i32 %conv587) #8, !dbg !4990
  %positions_needed717 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 9, !dbg !4991
  %small_bitmask = bitcast %union.anon.0* %positions_needed717 to i64*, !dbg !4992
  store i64 %call716, i64* %small_bitmask, align 8, !dbg !4993
  br label %if.end718

if.end718:                                        ; preds = %if.else713, %if.then709
  %143 = load i32, i32* %group_id, align 4, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %143, metadata !4512, metadata !DIExpression()), !dbg !4561
  %group_id719 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 2, !dbg !4995
  store i32 %143, i32* %group_id719, align 4, !dbg !4996
  %144 = load i64, i64* %offset, align 8, !dbg !4997
  call void @llvm.dbg.value(metadata i64 %144, metadata !4507, metadata !DIExpression()), !dbg !4561
  %begin720 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 7, !dbg !4998
  store i64 %144, i64* %begin720, align 8, !dbg !4999
  call void @llvm.dbg.value(metadata i64 %144, metadata !4507, metadata !DIExpression()), !dbg !4561
  %add721 = add nsw i64 %144, %width.0, !dbg !5000
  %end722 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 8, !dbg !5001
  store i64 %add721, i64* %end722, align 8, !dbg !5002
  %bf.load723 = load i32, i32* %5, align 8, !dbg !5003
  %bf.clear724 = and i32 %bf.load723, 65535, !dbg !5003
  %cmp725 = icmp eq i32 %bf.clear724, 23, !dbg !5004
  %conv727 = zext i1 %cmp725 to i8, !dbg !5003
  %is_set728 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 0, !dbg !5005
  store i8 %conv727, i8* %is_set728, align 8, !dbg !5006
  %rhs729 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 11, !dbg !5007
  store %struct.rtx_def* %rhs.0, %struct.rtx_def** %rhs729, align 8, !dbg !5008
  %const_rhs730 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 12, !dbg !5009
  store %struct.rtx_def* %const_rhs.5, %struct.rtx_def** %const_rhs730, align 8, !dbg !5010
  %redundant_reason731 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.1, i64 0, i32 13, !dbg !5011
  store %struct.insn_info* %redundant_reason.0.lcssa, %struct.insn_info** %redundant_reason731, align 8, !dbg !5012
  %cond735 = zext i1 %cmp725 to i32, !dbg !5013
  br label %cleanup, !dbg !5014

cleanup:                                          ; preds = %land.lhs.true, %if.then181, %if.then183, %if.then10, %if.then11, %if.end718, %if.then198, %if.end31
  %retval.0 = phi i32 [ 0, %if.end31 ], [ %cond735, %if.end718 ], [ 0, %if.then198 ], [ 0, %land.lhs.true ], [ 0, %if.then11 ], [ 0, %if.then10 ], [ 0, %if.then183 ], [ 0, %if.then181 ], !dbg !4561
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !5015
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7, !dbg !5015
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !5015
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5015
  ret i32 %retval.0, !dbg !5015
}

declare dso_local i32 @volatile_refs_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @insn_could_throw_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @check_mem_read_rtx(%struct.rtx_def** %loc, i8* %data) #5 !dbg !5016 {
entry:
  %offset = alloca i64, align 8
  %spill_alias_set = alloca i32, align 4
  %base = alloca %struct.cselib_val_struct*, align 8
  %group_id = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !5020, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.value(metadata i8* %data, metadata !5021, metadata !DIExpression()), !dbg !5056
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !5057
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5022, metadata !DIExpression()), !dbg !5056
  %1 = bitcast i64* %offset to i8*, !dbg !5058
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !5058
  call void @llvm.dbg.value(metadata i64 0, metadata !5026, metadata !DIExpression()), !dbg !5056
  store i64 0, i64* %offset, align 8, !dbg !5059
  call void @llvm.dbg.value(metadata i64 0, metadata !5027, metadata !DIExpression()), !dbg !5056
  %2 = bitcast i32* %spill_alias_set to i8*, !dbg !5060
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #7, !dbg !5060
  call void @llvm.dbg.value(metadata i32 0, metadata !5028, metadata !DIExpression()), !dbg !5056
  store i32 0, i32* %spill_alias_set, align 4, !dbg !5061
  %3 = bitcast %struct.cselib_val_struct** %base to i8*, !dbg !5062
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !5062
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct* null, metadata !5029, metadata !DIExpression()), !dbg !5056
  store %struct.cselib_val_struct* null, %struct.cselib_val_struct** %base, align 8, !dbg !5063
  %4 = bitcast i32* %group_id to i8*, !dbg !5064
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7, !dbg !5064
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !5065
  br i1 %tobool, label %cleanup313, label %lor.lhs.false, !dbg !5067

lor.lhs.false:                                    ; preds = %entry
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5068
  %bf.load = load i32, i32* %5, align 8, !dbg !5068
  %bf.clear = and i32 %bf.load, 65535, !dbg !5068
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !5068
  br i1 %cmp, label %if.end, label %cleanup313, !dbg !5069

if.end:                                           ; preds = %lor.lhs.false
  %6 = bitcast i8* %data to %struct.bb_info*, !dbg !5070
  call void @llvm.dbg.value(metadata %struct.bb_info* %6, metadata !5024, metadata !DIExpression()), !dbg !5056
  %last_insn = bitcast i8* %data to %struct.insn_info**, !dbg !5071
  %7 = load %struct.insn_info*, %struct.insn_info** %last_insn, align 8, !dbg !5071
  call void @llvm.dbg.value(metadata %struct.insn_info* %7, metadata !5025, metadata !DIExpression()), !dbg !5056
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5072
  %rt_mem = bitcast %union.rtunion_def* %8 to %struct.mem_attrs**, !dbg !5072
  %9 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5072
  %cmp1 = icmp eq %struct.mem_attrs* %9, null, !dbg !5072
  br i1 %cmp1, label %cond.end, label %cond.false, !dbg !5072

cond.false:                                       ; preds = %if.end
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %9, i64 0, i32 3, !dbg !5072
  %10 = load i32, i32* %alias, align 8, !dbg !5072
  br label %cond.end, !dbg !5072

cond.end:                                         ; preds = %if.end, %cond.false
  %cond = phi i32 [ %10, %cond.false ], [ 0, %if.end ], !dbg !5072
  %cmp6 = icmp eq i32 %cond, -1, !dbg !5074
  br i1 %cmp6, label %if.then11, label %lor.lhs.false7, !dbg !5075

lor.lhs.false7:                                   ; preds = %cond.end
  %bf.clear9 = and i32 %bf.load, 134217728, !dbg !5076
  %tobool10 = icmp eq i32 %bf.clear9, 0, !dbg !5077
  br i1 %tobool10, label %if.end15, label %if.then11, !dbg !5078

if.then11:                                        ; preds = %lor.lhs.false7, %cond.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5079
  %tobool12 = icmp eq %struct._IO_FILE* %11, null, !dbg !5079
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !5082

if.then13:                                        ; preds = %if.then11
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !5083
  br label %if.end14, !dbg !5083

if.end14:                                         ; preds = %if.then11, %if.then13
  tail call fastcc void @add_wild_read(%struct.bb_info* %6) #8, !dbg !5084
  %cannot_delete = getelementptr inbounds %struct.insn_info, %struct.insn_info* %7, i64 0, i32 0, !dbg !5085
  store i8 1, i8* %cannot_delete, align 8, !dbg !5086
  br label %cleanup313, !dbg !5087

if.end15:                                         ; preds = %lor.lhs.false7
  %bf.clear18 = and i32 %bf.load, 67108864, !dbg !5088
  %tobool19 = icmp eq i32 %bf.clear18, 0, !dbg !5088
  br i1 %tobool19, label %if.end21, label %cleanup313, !dbg !5090

if.end21:                                         ; preds = %if.end15
  call void @llvm.dbg.value(metadata i64* %offset, metadata !5026, metadata !DIExpression(DW_OP_deref)), !dbg !5056
  call void @llvm.dbg.value(metadata i32* %spill_alias_set, metadata !5028, metadata !DIExpression(DW_OP_deref)), !dbg !5056
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct** %base, metadata !5029, metadata !DIExpression(DW_OP_deref)), !dbg !5056
  call void @llvm.dbg.value(metadata i32* %group_id, metadata !5030, metadata !DIExpression(DW_OP_deref)), !dbg !5056
  %call22 = call fastcc zeroext i8 @canon_address(%struct.rtx_def* nonnull %0, i32* nonnull %spill_alias_set, i32* nonnull %group_id, i64* nonnull %offset, %struct.cselib_val_struct** nonnull %base) #8, !dbg !5091
  %tobool23 = icmp eq i8 %call22, 0, !dbg !5091
  br i1 %tobool23, label %if.then24, label %if.end29, !dbg !5093

if.then24:                                        ; preds = %if.end21
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5094
  %tobool25 = icmp eq %struct._IO_FILE* %12, null, !dbg !5094
  br i1 %tobool25, label %if.end28, label %if.then26, !dbg !5097

if.then26:                                        ; preds = %if.then24
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !5098
  br label %if.end28, !dbg !5098

if.end28:                                         ; preds = %if.then24, %if.then26
  call fastcc void @add_wild_read(%struct.bb_info* %6) #8, !dbg !5099
  br label %cleanup313, !dbg !5100

if.end29:                                         ; preds = %if.end21
  %bf.load30 = load i32, i32* %5, align 8, !dbg !5101
  %bf.clear32 = and i32 %bf.load30, 16711680, !dbg !5101
  %cmp33 = icmp eq i32 %bf.clear32, 65536, !dbg !5103
  br i1 %cmp33, label %if.end40, label %if.else, !dbg !5104

if.else:                                          ; preds = %if.end29
  %bf.lshr36 = lshr i32 %bf.load30, 16, !dbg !5105
  %bf.clear37 = and i32 %bf.lshr36, 255, !dbg !5105
  %idxprom = zext i32 %bf.clear37 to i64, !dbg !5105
  %arrayidx38 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5105
  %13 = load i8, i8* %arrayidx38, align 1, !dbg !5105
  %conv39 = zext i8 %13 to i64, !dbg !5105
  call void @llvm.dbg.value(metadata i64 %conv39, metadata !5027, metadata !DIExpression()), !dbg !5056
  br label %if.end40

if.end40:                                         ; preds = %if.end29, %if.else
  %width.0 = phi i64 [ %conv39, %if.else ], [ -1, %if.end29 ], !dbg !5106
  call void @llvm.dbg.value(metadata i64 %width.0, metadata !5027, metadata !DIExpression()), !dbg !5056
  %14 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @read_info_pool, align 8, !dbg !5107
  %call41 = call i8* @pool_alloc(%struct.alloc_pool_def* %14) #6, !dbg !5108
  %15 = bitcast i8* %call41 to %struct.read_info*, !dbg !5109
  call void @llvm.dbg.value(metadata %struct.read_info* %15, metadata !5031, metadata !DIExpression()), !dbg !5056
  %16 = load i32, i32* %group_id, align 4, !dbg !5110
  call void @llvm.dbg.value(metadata i32 %16, metadata !5030, metadata !DIExpression()), !dbg !5056
  %group_id42 = bitcast i8* %call41 to i32*, !dbg !5111
  store i32 %16, i32* %group_id42, align 8, !dbg !5112
  %mem43 = getelementptr inbounds i8, i8* %call41, i64 16, !dbg !5113
  %17 = bitcast i8* %mem43 to %struct.rtx_def**, !dbg !5113
  store %struct.rtx_def* %0, %struct.rtx_def** %17, align 8, !dbg !5114
  %18 = load i32, i32* %spill_alias_set, align 4, !dbg !5115
  call void @llvm.dbg.value(metadata i32 %18, metadata !5028, metadata !DIExpression()), !dbg !5056
  %alias_set = getelementptr inbounds i8, i8* %call41, i64 4, !dbg !5116
  %19 = bitcast i8* %alias_set to i32*, !dbg !5116
  store i32 %18, i32* %19, align 4, !dbg !5117
  %20 = load i64, i64* %offset, align 8, !dbg !5118
  call void @llvm.dbg.value(metadata i64 %20, metadata !5026, metadata !DIExpression()), !dbg !5056
  %conv44 = trunc i64 %20 to i32, !dbg !5118
  %begin = getelementptr inbounds i8, i8* %call41, i64 8, !dbg !5119
  %21 = bitcast i8* %begin to i32*, !dbg !5119
  store i32 %conv44, i32* %21, align 8, !dbg !5120
  call void @llvm.dbg.value(metadata i64 %20, metadata !5026, metadata !DIExpression()), !dbg !5056
  %add = add nsw i64 %20, %width.0, !dbg !5121
  %conv45 = trunc i64 %add to i32, !dbg !5122
  %end = getelementptr inbounds i8, i8* %call41, i64 12, !dbg !5123
  %22 = bitcast i8* %end to i32*, !dbg !5123
  store i32 %conv45, i32* %22, align 4, !dbg !5124
  %read_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %7, i64 0, i32 7, !dbg !5125
  %23 = bitcast %struct.read_info** %read_rec to i64*, !dbg !5125
  %24 = load i64, i64* %23, align 8, !dbg !5125
  %next = getelementptr inbounds i8, i8* %call41, i64 24, !dbg !5126
  %25 = bitcast i8* %next to i64*, !dbg !5127
  store i64 %24, i64* %25, align 8, !dbg !5127
  %26 = bitcast %struct.read_info** %read_rec to i8**, !dbg !5128
  store i8* %call41, i8** %26, align 8, !dbg !5128
  call void @llvm.dbg.value(metadata i32 %18, metadata !5028, metadata !DIExpression()), !dbg !5056
  %tobool47 = icmp eq i32 %18, 0, !dbg !5129
  br i1 %tobool47, label %if.else49, label %if.end66, !dbg !5130

if.else49:                                        ; preds = %if.end40
  %27 = load i32, i32* %group_id, align 4, !dbg !5131
  call void @llvm.dbg.value(metadata i32 %27, metadata !5030, metadata !DIExpression()), !dbg !5056
  %cmp50 = icmp slt i32 %27, 0, !dbg !5132
  br i1 %cmp50, label %if.then52, label %if.else53, !dbg !5133

if.then52:                                        ; preds = %if.else49
  %28 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %base, align 8, !dbg !5134
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct* %28, metadata !5029, metadata !DIExpression()), !dbg !5056
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %28, i64 0, i32 2, !dbg !5135
  br label %if.end61, !dbg !5136

if.else53:                                        ; preds = %if.else49
  %29 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !5137
  %base56 = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %29, i64 0, i32 0, !dbg !5137
  call void @llvm.dbg.value(metadata i32 %27, metadata !5030, metadata !DIExpression()), !dbg !5056
  %call60 = call fastcc %struct.group_info* @VEC_group_info_t_base_index(%struct.VEC_group_info_t_base* %base56, i32 %27) #8, !dbg !5137
  call void @llvm.dbg.value(metadata %struct.group_info* %call60, metadata !5032, metadata !DIExpression()), !dbg !5138
  %canon_base_addr = getelementptr inbounds %struct.group_info, %struct.group_info* %call60, i64 0, i32 5, !dbg !5139
  %.pre = load i64, i64* %offset, align 8, !dbg !5140
  br label %if.end61

if.end61:                                         ; preds = %if.else53, %if.then52
  %30 = phi i64 [ %20, %if.then52 ], [ %.pre, %if.else53 ], !dbg !5140
  %mem_addr.0.in = phi %struct.rtx_def** [ %val_rtx, %if.then52 ], [ %canon_base_addr, %if.else53 ]
  %mem_addr.0 = load %struct.rtx_def*, %struct.rtx_def** %mem_addr.0.in, align 8, !dbg !5142
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem_addr.0, metadata !5023, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.value(metadata i64 %30, metadata !5026, metadata !DIExpression()), !dbg !5056
  %tobool62 = icmp eq i64 %30, 0, !dbg !5140
  br i1 %tobool62, label %if.end66, label %if.then63, !dbg !5143

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.value(metadata i64 %30, metadata !5026, metadata !DIExpression()), !dbg !5056
  %call64 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %mem_addr.0, i64 %30) #6, !dbg !5144
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !5023, metadata !DIExpression()), !dbg !5056
  br label %if.end66, !dbg !5145

if.end66:                                         ; preds = %if.end61, %if.end40, %if.then63
  %mem_addr.2 = phi %struct.rtx_def* [ null, %if.end40 ], [ %call64, %if.then63 ], [ %mem_addr.0, %if.end61 ], !dbg !5146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem_addr.2, metadata !5023, metadata !DIExpression()), !dbg !5056
  %31 = load i32, i32* %spill_alias_set, align 4, !dbg !5147
  call void @llvm.dbg.value(metadata i32 %31, metadata !5028, metadata !DIExpression()), !dbg !5056
  %tobool67 = icmp eq i32 %31, 0, !dbg !5147
  br i1 %tobool67, label %if.else95, label %if.then68, !dbg !5148

if.then68:                                        ; preds = %if.end66
  %32 = load %struct.insn_info*, %struct.insn_info** @active_local_stores, align 8, !dbg !5149
  call void @llvm.dbg.value(metadata %struct.insn_info* %32, metadata !5037, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata %struct.insn_info* null, metadata !5040, metadata !DIExpression()), !dbg !5150
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5151
  %tobool69 = icmp eq %struct._IO_FILE* %33, null, !dbg !5151
  br i1 %tobool69, label %if.end72, label %if.then70, !dbg !5153

if.then70:                                        ; preds = %if.then68
  call void @llvm.dbg.value(metadata i32 %31, metadata !5028, metadata !DIExpression()), !dbg !5056
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %33, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 %31) #6, !dbg !5154
  br label %if.end72, !dbg !5154

if.end72:                                         ; preds = %if.then68, %if.then70
  br label %while.cond, !dbg !5155

while.cond:                                       ; preds = %if.end92, %if.end72
  %last.0 = phi %struct.insn_info* [ null, %if.end72 ], [ %last.1, %if.end92 ], !dbg !5156
  %i_ptr.0 = phi %struct.insn_info* [ %32, %if.end72 ], [ %41, %if.end92 ], !dbg !5150
  call void @llvm.dbg.value(metadata %struct.insn_info* %i_ptr.0, metadata !5037, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata %struct.insn_info* %last.0, metadata !5040, metadata !DIExpression()), !dbg !5150
  %tobool73 = icmp eq %struct.insn_info* %i_ptr.0, null, !dbg !5155
  br i1 %tobool73, label %if.end312.loopexit, label %while.body, !dbg !5155

while.body:                                       ; preds = %while.cond
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 6, !dbg !5157
  br label %while.cond74, !dbg !5158

while.cond74:                                     ; preds = %while.body76, %while.body
  %store_info.0.in = phi %struct.store_info** [ %store_rec, %while.body ], [ %next77, %while.body76 ]
  %store_info.0 = load %struct.store_info*, %struct.store_info** %store_info.0.in, align 8, !dbg !5159
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.0, metadata !5041, metadata !DIExpression()), !dbg !5159
  %is_set = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 0, !dbg !5160
  %34 = load i8, i8* %is_set, align 8, !dbg !5160
  %tobool75 = icmp eq i8 %34, 0, !dbg !5161
  br i1 %tobool75, label %while.body76, label %while.end, !dbg !5158

while.body76:                                     ; preds = %while.cond74
  %next77 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 10, !dbg !5162
  br label %while.cond74, !dbg !5158, !llvm.loop !5163

while.end:                                        ; preds = %while.cond74
  %store_info.0.lcssa = phi %struct.store_info* [ %store_info.0, %while.cond74 ], !dbg !5159
  %alias_set78 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0.lcssa, i64 0, i32 6, !dbg !5164
  %35 = load i32, i32* %alias_set78, align 8, !dbg !5164
  %36 = load i32, i32* %spill_alias_set, align 4, !dbg !5166
  call void @llvm.dbg.value(metadata i32 %36, metadata !5028, metadata !DIExpression()), !dbg !5056
  %cmp79 = icmp eq i32 %35, %36, !dbg !5167
  br i1 %cmp79, label %if.then81, label %if.end92, !dbg !5168

if.then81:                                        ; preds = %while.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5169
  %tobool82 = icmp eq %struct._IO_FILE* %37, null, !dbg !5169
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !5172

if.then83:                                        ; preds = %if.then81
  call fastcc void @dump_insn_info(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), %struct.insn_info* nonnull %i_ptr.0) #8, !dbg !5173
  br label %if.end84, !dbg !5173

if.end84:                                         ; preds = %if.then81, %if.then83
  %tobool85 = icmp eq %struct.insn_info* %last.0, null, !dbg !5174
  %next_local_store = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 9, !dbg !5176
  %38 = bitcast %struct.insn_info** %next_local_store to i64*, !dbg !5176
  %39 = load i64, i64* %38, align 8, !dbg !5176
  br i1 %tobool85, label %if.else88, label %if.then86, !dbg !5177

if.then86:                                        ; preds = %if.end84
  %next_local_store87 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %last.0, i64 0, i32 9, !dbg !5178
  %40 = bitcast %struct.insn_info** %next_local_store87 to i64*, !dbg !5179
  store i64 %39, i64* %40, align 8, !dbg !5179
  br label %if.end92, !dbg !5180

if.else88:                                        ; preds = %if.end84
  store i64 %39, i64* bitcast (%struct.insn_info** @active_local_stores to i64*), align 8, !dbg !5181
  br label %if.end92

if.end92:                                         ; preds = %while.end, %if.then86, %if.else88
  %last.1 = phi %struct.insn_info* [ null, %if.else88 ], [ %last.0, %if.then86 ], [ %i_ptr.0, %while.end ], !dbg !5150
  call void @llvm.dbg.value(metadata %struct.insn_info* %last.1, metadata !5040, metadata !DIExpression()), !dbg !5150
  %next_local_store93 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr.0, i64 0, i32 9, !dbg !5182
  %41 = load %struct.insn_info*, %struct.insn_info** %next_local_store93, align 8, !dbg !5182
  call void @llvm.dbg.value(metadata %struct.insn_info* %41, metadata !5037, metadata !DIExpression()), !dbg !5150
  br label %while.cond, !dbg !5155, !llvm.loop !5183

if.else95:                                        ; preds = %if.end66
  %42 = load i32, i32* %group_id, align 4, !dbg !5185
  call void @llvm.dbg.value(metadata i32 %42, metadata !5030, metadata !DIExpression()), !dbg !5056
  %cmp96 = icmp sgt i32 %42, -1, !dbg !5186
  %43 = load %struct.insn_info*, %struct.insn_info** @active_local_stores, align 8, !dbg !5187
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5187
  %tobool101 = icmp ne %struct._IO_FILE* %44, null, !dbg !5187
  br i1 %cmp96, label %if.then98, label %if.else211, !dbg !5188

if.then98:                                        ; preds = %if.else95
  call void @llvm.dbg.value(metadata %struct.insn_info* %43, metadata !5043, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.value(metadata %struct.insn_info* null, metadata !5046, metadata !DIExpression()), !dbg !5189
  br i1 %tobool101, label %if.then102, label %if.end113, !dbg !5190

if.then102:                                       ; preds = %if.then98
  %cmp103 = icmp eq i64 %width.0, -1, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %42, metadata !5030, metadata !DIExpression()), !dbg !5056
  br i1 %cmp103, label %if.then105, label %if.else107, !dbg !5195

if.then105:                                       ; preds = %if.then102
  %call106 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %44, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28, i64 0, i64 0), i32 %42) #6, !dbg !5196
  br label %if.end113, !dbg !5196

if.else107:                                       ; preds = %if.then102
  %45 = load i64, i64* %offset, align 8, !dbg !5197
  call void @llvm.dbg.value(metadata i64 %45, metadata !5026, metadata !DIExpression()), !dbg !5056
  %conv108 = trunc i64 %45 to i32, !dbg !5198
  call void @llvm.dbg.value(metadata i64 %45, metadata !5026, metadata !DIExpression()), !dbg !5056
  %add109 = add nsw i64 %45, %width.0, !dbg !5199
  %conv110 = trunc i64 %add109 to i32, !dbg !5200
  %call111 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %44, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i64 0, i64 0), i32 %42, i32 %conv108, i32 %conv110) #6, !dbg !5201
  br label %if.end113

if.end113:                                        ; preds = %if.then105, %if.else107, %if.then98
  %cmp143 = icmp eq i64 %width.0, -1, !dbg !5202
  %conv167 = trunc i64 %width.0 to i32, !dbg !5207
  %regs_live = getelementptr inbounds i8, i8* %data, i64 48, !dbg !5207
  %46 = bitcast i8* %regs_live to %struct.bitmap_head_def**, !dbg !5207
  br label %while.cond114, !dbg !5210

while.cond114:                                    ; preds = %cleanup, %if.end113
  %i_ptr99.0 = phi %struct.insn_info* [ %43, %if.end113 ], [ %i_ptr99.1, %cleanup ], !dbg !5189
  %last100.0 = phi %struct.insn_info* [ null, %if.end113 ], [ %last100.2, %cleanup ], !dbg !5211
  call void @llvm.dbg.value(metadata %struct.insn_info* %last100.0, metadata !5046, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.value(metadata %struct.insn_info* %i_ptr99.0, metadata !5043, metadata !DIExpression()), !dbg !5189
  %tobool115 = icmp eq %struct.insn_info* %i_ptr99.0, null, !dbg !5210
  br i1 %tobool115, label %cleanup207, label %while.body116, !dbg !5210

while.body116:                                    ; preds = %while.cond114
  call void @llvm.dbg.value(metadata i8 0, metadata !5047, metadata !DIExpression()), !dbg !5212
  %store_rec118 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr99.0, i64 0, i32 6, !dbg !5213
  br label %while.cond119, !dbg !5214

while.cond119:                                    ; preds = %while.body123, %while.body116
  %store_info117.0.in = phi %struct.store_info** [ %store_rec118, %while.body116 ], [ %next124, %while.body123 ]
  %store_info117.0 = load %struct.store_info*, %struct.store_info** %store_info117.0.in, align 8, !dbg !5212
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info117.0, metadata !5049, metadata !DIExpression()), !dbg !5212
  %is_set120 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0, i64 0, i32 0, !dbg !5215
  %47 = load i8, i8* %is_set120, align 8, !dbg !5215
  %tobool121 = icmp eq i8 %47, 0, !dbg !5216
  br i1 %tobool121, label %while.body123, label %while.end125, !dbg !5214

while.body123:                                    ; preds = %while.cond119
  %next124 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0, i64 0, i32 10, !dbg !5217
  br label %while.cond119, !dbg !5214, !llvm.loop !5218

while.end125:                                     ; preds = %while.cond119
  %store_info117.0.lcssa = phi %struct.store_info* [ %store_info117.0, %while.cond119 ], !dbg !5212
  %group_id126 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0.lcssa, i64 0, i32 2, !dbg !5219
  %48 = load i32, i32* %group_id126, align 4, !dbg !5219
  %cmp127 = icmp slt i32 %48, 0, !dbg !5220
  br i1 %cmp127, label %if.then129, label %if.else138, !dbg !5221

if.then129:                                       ; preds = %while.end125
  %mem130 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0.lcssa, i64 0, i32 4, !dbg !5222
  %49 = load %struct.rtx_def*, %struct.rtx_def** %mem130, align 8, !dbg !5222
  %.cast6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 0, !dbg !5223
  %bf.load132 = load i32, i32* %.cast6, align 8, !dbg !5223
  %bf.lshr133 = lshr i32 %bf.load132, 16, !dbg !5223
  %bf.clear134 = and i32 %bf.lshr133, 255, !dbg !5223
  %mem_addr135 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0.lcssa, i64 0, i32 5, !dbg !5224
  %50 = load %struct.rtx_def*, %struct.rtx_def** %mem_addr135, align 8, !dbg !5224
  %call136 = call i32 @canon_true_dependence(%struct.rtx_def* %49, i32 %bf.clear134, %struct.rtx_def* %50, %struct.rtx_def* nonnull %0, %struct.rtx_def* %mem_addr.2, i8 (%struct.rtx_def*, i8)* nonnull @rtx_varies_p) #6, !dbg !5225
  %conv137 = trunc i32 %call136 to i8, !dbg !5225
  call void @llvm.dbg.value(metadata i8 %conv137, metadata !5047, metadata !DIExpression()), !dbg !5212
  br label %if.end189, !dbg !5226

if.else138:                                       ; preds = %while.end125
  %51 = load i32, i32* %group_id, align 4, !dbg !5227
  call void @llvm.dbg.value(metadata i32 %51, metadata !5030, metadata !DIExpression()), !dbg !5056
  %cmp140 = icmp eq i32 %51, %48, !dbg !5228
  br i1 %cmp140, label %if.then142, label %if.end189, !dbg !5229

if.then142:                                       ; preds = %if.else138
  br i1 %cmp143, label %if.then145, label %if.else154, !dbg !5230

if.then145:                                       ; preds = %if.then142
  %mem146 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0.lcssa, i64 0, i32 4, !dbg !5231
  %52 = load %struct.rtx_def*, %struct.rtx_def** %mem146, align 8, !dbg !5231
  %.cast5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 0, !dbg !5232
  %bf.load148 = load i32, i32* %.cast5, align 8, !dbg !5232
  %bf.lshr149 = lshr i32 %bf.load148, 16, !dbg !5232
  %bf.clear150 = and i32 %bf.lshr149, 255, !dbg !5232
  %mem_addr151 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0.lcssa, i64 0, i32 5, !dbg !5233
  %53 = load %struct.rtx_def*, %struct.rtx_def** %mem_addr151, align 8, !dbg !5233
  %call152 = call i32 @canon_true_dependence(%struct.rtx_def* %52, i32 %bf.clear150, %struct.rtx_def* %53, %struct.rtx_def* nonnull %0, %struct.rtx_def* %mem_addr.2, i8 (%struct.rtx_def*, i8)* nonnull @rtx_varies_p) #6, !dbg !5234
  %conv153 = trunc i32 %call152 to i8, !dbg !5234
  call void @llvm.dbg.value(metadata i8 %conv153, metadata !5047, metadata !DIExpression()), !dbg !5212
  br label %if.end189, !dbg !5235

if.else154:                                       ; preds = %if.then142
  %rhs = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0.lcssa, i64 0, i32 11, !dbg !5236
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !5236
  %tobool155 = icmp eq %struct.rtx_def* %54, null, !dbg !5237
  br i1 %tobool155, label %if.end176, label %land.lhs.true, !dbg !5238

land.lhs.true:                                    ; preds = %if.else154
  %55 = load i64, i64* %offset, align 8, !dbg !5239
  call void @llvm.dbg.value(metadata i64 %55, metadata !5026, metadata !DIExpression()), !dbg !5056
  %begin156 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0.lcssa, i64 0, i32 7, !dbg !5240
  %56 = load i64, i64* %begin156, align 8, !dbg !5240
  %cmp157 = icmp slt i64 %55, %56, !dbg !5241
  br i1 %cmp157, label %if.end176, label %land.lhs.true159, !dbg !5242

land.lhs.true159:                                 ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i64 %55, metadata !5026, metadata !DIExpression()), !dbg !5056
  %add160 = add nsw i64 %55, %width.0, !dbg !5243
  %end161 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0.lcssa, i64 0, i32 8, !dbg !5244
  %57 = load i64, i64* %end161, align 8, !dbg !5244
  %cmp162 = icmp sgt i64 %add160, %57, !dbg !5245
  br i1 %cmp162, label %if.end176, label %land.lhs.true164, !dbg !5246

land.lhs.true164:                                 ; preds = %land.lhs.true159
  call void @llvm.dbg.value(metadata i64 %55, metadata !5026, metadata !DIExpression()), !dbg !5056
  %sub = sub nsw i64 %55, %56, !dbg !5247
  %conv166 = trunc i64 %sub to i32, !dbg !5248
  %call168 = call fastcc zeroext i8 @all_positions_needed_p(%struct.store_info* %store_info117.0.lcssa, i32 %conv166, i32 %conv167) #8, !dbg !5249
  %tobool170 = icmp eq i8 %call168, 0, !dbg !5249
  br i1 %tobool170, label %if.end176, label %land.lhs.true171, !dbg !5250

land.lhs.true171:                                 ; preds = %land.lhs.true164
  %58 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %46, align 8, !dbg !5251
  %call172 = call fastcc zeroext i8 @replace_read(%struct.store_info* %store_info117.0.lcssa, %struct.insn_info* nonnull %i_ptr99.0, %struct.read_info* %15, %struct.insn_info* %7, %struct.rtx_def** %loc, %struct.bitmap_head_def* %58) #8, !dbg !5252
  %tobool174 = icmp eq i8 %call172, 0, !dbg !5252
  br i1 %tobool174, label %if.end176, label %cleanup, !dbg !5253

if.end176:                                        ; preds = %land.lhs.true171, %land.lhs.true164, %land.lhs.true159, %land.lhs.true, %if.else154
  %59 = load i64, i64* %offset, align 8, !dbg !5254
  call void @llvm.dbg.value(metadata i64 %59, metadata !5026, metadata !DIExpression()), !dbg !5056
  %end177 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0.lcssa, i64 0, i32 8, !dbg !5256
  %60 = load i64, i64* %end177, align 8, !dbg !5256
  %cmp178 = icmp slt i64 %59, %60, !dbg !5257
  br i1 %cmp178, label %land.lhs.true180, label %if.end189, !dbg !5258

land.lhs.true180:                                 ; preds = %if.end176
  call void @llvm.dbg.value(metadata i64 %59, metadata !5026, metadata !DIExpression()), !dbg !5056
  %add181 = add nsw i64 %59, %width.0, !dbg !5259
  %begin182 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info117.0.lcssa, i64 0, i32 7, !dbg !5260
  %61 = load i64, i64* %begin182, align 8, !dbg !5260
  %cmp183 = icmp sgt i64 %add181, %61, !dbg !5261
  %spec.select = zext i1 %cmp183 to i8, !dbg !5262
  br label %if.end189, !dbg !5262

if.end189:                                        ; preds = %land.lhs.true180, %if.else138, %if.end176, %if.then145, %if.then129
  %remove.3 = phi i8 [ %conv137, %if.then129 ], [ 0, %if.else138 ], [ %conv153, %if.then145 ], [ 0, %if.end176 ], [ %spec.select, %land.lhs.true180 ], !dbg !5263
  call void @llvm.dbg.value(metadata i8 %remove.3, metadata !5047, metadata !DIExpression()), !dbg !5212
  %tobool190 = icmp eq i8 %remove.3, 0, !dbg !5264
  br i1 %tobool190, label %if.end203, label %if.then191, !dbg !5266

if.then191:                                       ; preds = %if.end189
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5267
  %tobool192 = icmp eq %struct._IO_FILE* %62, null, !dbg !5267
  br i1 %tobool192, label %if.end194, label %if.then193, !dbg !5270

if.then193:                                       ; preds = %if.then191
  call fastcc void @dump_insn_info(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), %struct.insn_info* nonnull %i_ptr99.0) #8, !dbg !5271
  br label %if.end194, !dbg !5271

if.end194:                                        ; preds = %if.then191, %if.then193
  %tobool195 = icmp eq %struct.insn_info* %last100.0, null, !dbg !5272
  %next_local_store197 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr99.0, i64 0, i32 9, !dbg !5274
  %63 = bitcast %struct.insn_info** %next_local_store197 to i64*, !dbg !5274
  %64 = load i64, i64* %63, align 8, !dbg !5274
  br i1 %tobool195, label %if.else199, label %if.then196, !dbg !5275

if.then196:                                       ; preds = %if.end194
  %next_local_store198 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %last100.0, i64 0, i32 9, !dbg !5276
  %65 = bitcast %struct.insn_info** %next_local_store198 to i64*, !dbg !5277
  store i64 %64, i64* %65, align 8, !dbg !5277
  br label %if.end203, !dbg !5278

if.else199:                                       ; preds = %if.end194
  store i64 %64, i64* bitcast (%struct.insn_info** @active_local_stores to i64*), align 8, !dbg !5279
  br label %if.end203

if.end203:                                        ; preds = %if.end189, %if.then196, %if.else199
  %last100.1 = phi %struct.insn_info* [ null, %if.else199 ], [ %last100.0, %if.then196 ], [ %i_ptr99.0, %if.end189 ], !dbg !5189
  call void @llvm.dbg.value(metadata %struct.insn_info* %last100.1, metadata !5046, metadata !DIExpression()), !dbg !5189
  %next_local_store204 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr99.0, i64 0, i32 9, !dbg !5280
  %66 = load %struct.insn_info*, %struct.insn_info** %next_local_store204, align 8, !dbg !5280
  call void @llvm.dbg.value(metadata %struct.insn_info* %66, metadata !5043, metadata !DIExpression()), !dbg !5189
  br label %cleanup, !dbg !5281

cleanup:                                          ; preds = %land.lhs.true171, %if.end203
  %i_ptr99.1 = phi %struct.insn_info* [ %66, %if.end203 ], [ %i_ptr99.0, %land.lhs.true171 ], !dbg !5189
  %last100.2 = phi %struct.insn_info* [ %last100.1, %if.end203 ], [ %last100.0, %land.lhs.true171 ], !dbg !5211
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end203 ], [ false, %land.lhs.true171 ]
  call void @llvm.dbg.value(metadata %struct.insn_info* %last100.2, metadata !5046, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.value(metadata %struct.insn_info* %i_ptr99.1, metadata !5043, metadata !DIExpression()), !dbg !5189
  br i1 %cleanup.dest.slot.0, label %while.cond114, label %cleanup207, !llvm.loop !5282

cleanup207:                                       ; preds = %while.cond114, %cleanup
  br label %cleanup313

if.else211:                                       ; preds = %if.else95
  call void @llvm.dbg.value(metadata %struct.insn_info* %43, metadata !5050, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata %struct.insn_info* null, metadata !5052, metadata !DIExpression()), !dbg !5283
  br i1 %tobool101, label %if.then215, label %if.end218, !dbg !5284

if.then215:                                       ; preds = %if.else211
  %call216 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %44, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !5285
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5288
  call void @print_inline_rtx(%struct._IO_FILE* %67, %struct.rtx_def* nonnull %0, i32 0) #6, !dbg !5289
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5290
  %call217 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !5291
  br label %if.end218, !dbg !5292

if.end218:                                        ; preds = %if.then215, %if.else211
  %cmp249 = icmp eq i64 %width.0, -1, !dbg !5293
  %conv264 = trunc i64 %width.0 to i32, !dbg !5293
  %regs_live269 = getelementptr inbounds i8, i8* %data, i64 48, !dbg !5293
  %69 = bitcast i8* %regs_live269 to %struct.bitmap_head_def**, !dbg !5293
  br i1 %cmp249, label %if.end218.if.end218.split_crit_edge, label %if.end218.split.us, !dbg !5295

if.end218.if.end218.split_crit_edge:              ; preds = %if.end218
  br label %while.cond219, !dbg !5295

if.end218.split.us:                               ; preds = %if.end218
  br label %while.cond219.us, !dbg !5295

while.cond219.us:                                 ; preds = %cleanup302.us, %if.end218.split.us
  %i_ptr212.0.us = phi %struct.insn_info* [ %43, %if.end218.split.us ], [ %i_ptr212.1.us, %cleanup302.us ], !dbg !5296
  %last213.0.us = phi %struct.insn_info* [ null, %if.end218.split.us ], [ %last213.2.us, %cleanup302.us ], !dbg !5297
  call void @llvm.dbg.value(metadata %struct.insn_info* %last213.0.us, metadata !5052, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata %struct.insn_info* %i_ptr212.0.us, metadata !5050, metadata !DIExpression()), !dbg !5283
  %tobool220.us = icmp eq %struct.insn_info* %i_ptr212.0.us, null, !dbg !5295
  br i1 %tobool220.us, label %cleanup307.us-lcssa.us, label %while.body221.us, !dbg !5295

while.body221.us:                                 ; preds = %while.cond219.us
  call void @llvm.dbg.value(metadata i8 0, metadata !5053, metadata !DIExpression()), !dbg !5298
  %store_rec224.us = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr212.0.us, i64 0, i32 6, !dbg !5299
  %70 = load %struct.store_info*, %struct.store_info** %store_rec224.us, align 8, !dbg !5299
  call void @llvm.dbg.value(metadata %struct.store_info* %70, metadata !5055, metadata !DIExpression()), !dbg !5298
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5300
  %tobool225.us = icmp eq %struct._IO_FILE* %71, null, !dbg !5300
  br i1 %tobool225.us, label %if.end231.us, label %if.then226.us, !dbg !5302

if.then226.us:                                    ; preds = %while.body221.us
  %insn.us = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr212.0.us, i64 0, i32 5, !dbg !5303
  %72 = load %struct.rtx_def*, %struct.rtx_def** %insn.us, align 8, !dbg !5303
  %arrayidx229.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5303
  %rt_int.us = bitcast %union.rtunion_def* %arrayidx229.us to i32*, !dbg !5303
  %73 = load i32, i32* %rt_int.us, align 8, !dbg !5303
  %call230.us = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %71, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %73) #6, !dbg !5304
  br label %if.end231.us, !dbg !5304

if.end231.us:                                     ; preds = %if.then226.us, %while.body221.us
  br label %while.cond232.us, !dbg !5305

while.cond232.us:                                 ; preds = %while.body236.us, %if.end231.us
  %store_info223.0.us = phi %struct.store_info* [ %70, %if.end231.us ], [ %91, %while.body236.us ], !dbg !5298
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info223.0.us, metadata !5055, metadata !DIExpression()), !dbg !5298
  %is_set233.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.us, i64 0, i32 0, !dbg !5306
  %74 = load i8, i8* %is_set233.us, align 8, !dbg !5306
  %tobool234.us = icmp eq i8 %74, 0, !dbg !5307
  br i1 %tobool234.us, label %while.body236.us, label %while.end238.us, !dbg !5305

while.end238.us:                                  ; preds = %while.cond232.us
  %store_info223.0.us.lcssa = phi %struct.store_info* [ %store_info223.0.us, %while.cond232.us ], !dbg !5298
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info223.0.us.lcssa, metadata !5055, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info223.0.us.lcssa, metadata !5055, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info223.0.us.lcssa, metadata !5055, metadata !DIExpression()), !dbg !5298
  %rhs239.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.us.lcssa, i64 0, i32 11, !dbg !5308
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rhs239.us, align 8, !dbg !5308
  %tobool240.us = icmp eq %struct.rtx_def* %75, null, !dbg !5309
  br i1 %tobool240.us, label %if.end274.us, label %land.lhs.true241.us, !dbg !5310

land.lhs.true241.us:                              ; preds = %while.end238.us
  %group_id242.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.us.lcssa, i64 0, i32 2, !dbg !5311
  %76 = load i32, i32* %group_id242.us, align 4, !dbg !5311
  %cmp243.us = icmp eq i32 %76, -1, !dbg !5312
  br i1 %cmp243.us, label %land.lhs.true245.us, label %if.end274.us, !dbg !5313

land.lhs.true245.us:                              ; preds = %land.lhs.true241.us
  %cse_base.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.us.lcssa, i64 0, i32 3, !dbg !5314
  %77 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %cse_base.us, align 8, !dbg !5314
  %78 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %base, align 8, !dbg !5315
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct* %78, metadata !5029, metadata !DIExpression()), !dbg !5056
  %cmp246.us = icmp eq %struct.cselib_val_struct* %77, %78, !dbg !5316
  br i1 %cmp246.us, label %land.lhs.true251.us, label %if.end274.us, !dbg !5317

land.lhs.true251.us:                              ; preds = %land.lhs.true245.us
  %79 = load i64, i64* %offset, align 8, !dbg !5318
  call void @llvm.dbg.value(metadata i64 %79, metadata !5026, metadata !DIExpression()), !dbg !5056
  %begin252.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.us.lcssa, i64 0, i32 7, !dbg !5319
  %80 = load i64, i64* %begin252.us, align 8, !dbg !5319
  %cmp253.us = icmp slt i64 %79, %80, !dbg !5320
  br i1 %cmp253.us, label %if.end274.us, label %land.lhs.true255.us, !dbg !5321

land.lhs.true255.us:                              ; preds = %land.lhs.true251.us
  call void @llvm.dbg.value(metadata i64 %79, metadata !5026, metadata !DIExpression()), !dbg !5056
  %add256.us = add nsw i64 %79, %width.0, !dbg !5322
  %end257.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.us.lcssa, i64 0, i32 8, !dbg !5323
  %81 = load i64, i64* %end257.us, align 8, !dbg !5323
  %cmp258.us = icmp sgt i64 %add256.us, %81, !dbg !5324
  br i1 %cmp258.us, label %if.end274.us, label %land.lhs.true260.us, !dbg !5325

land.lhs.true260.us:                              ; preds = %land.lhs.true255.us
  call void @llvm.dbg.value(metadata i64 %79, metadata !5026, metadata !DIExpression()), !dbg !5056
  %sub262.us = sub nsw i64 %79, %80, !dbg !5326
  %conv263.us = trunc i64 %sub262.us to i32, !dbg !5327
  %call265.us = call fastcc zeroext i8 @all_positions_needed_p(%struct.store_info* %store_info223.0.us.lcssa, i32 %conv263.us, i32 %conv264) #8, !dbg !5328
  %tobool267.us = icmp eq i8 %call265.us, 0, !dbg !5328
  br i1 %tobool267.us, label %if.end274.us, label %land.lhs.true268.us, !dbg !5329

land.lhs.true268.us:                              ; preds = %land.lhs.true260.us
  %82 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %69, align 8, !dbg !5330
  %call270.us = call fastcc zeroext i8 @replace_read(%struct.store_info* %store_info223.0.us.lcssa, %struct.insn_info* nonnull %i_ptr212.0.us, %struct.read_info* %15, %struct.insn_info* %7, %struct.rtx_def** %loc, %struct.bitmap_head_def* %82) #8, !dbg !5331
  %tobool272.us = icmp eq i8 %call270.us, 0, !dbg !5331
  br i1 %tobool272.us, label %if.end274.us, label %cleanup302.us, !dbg !5332

if.end274.us:                                     ; preds = %land.lhs.true268.us, %land.lhs.true260.us, %land.lhs.true255.us, %land.lhs.true251.us, %land.lhs.true245.us, %land.lhs.true241.us, %while.end238.us
  %alias_set275.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.us.lcssa, i64 0, i32 6, !dbg !5333
  %83 = load i32, i32* %alias_set275.us, align 8, !dbg !5333
  %tobool276.us = icmp eq i32 %83, 0, !dbg !5335
  br i1 %tobool276.us, label %if.then277.us, label %if.end286.us, !dbg !5336

if.then277.us:                                    ; preds = %if.end274.us
  %mem278.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.us.lcssa, i64 0, i32 4, !dbg !5337
  %84 = load %struct.rtx_def*, %struct.rtx_def** %mem278.us, align 8, !dbg !5337
  %.cast.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i64 0, i32 0, !dbg !5338
  %bf.load280.us = load i32, i32* %.cast.us, align 8, !dbg !5338
  %bf.lshr281.us = lshr i32 %bf.load280.us, 16, !dbg !5338
  %bf.clear282.us = and i32 %bf.lshr281.us, 255, !dbg !5338
  %mem_addr283.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.us.lcssa, i64 0, i32 5, !dbg !5339
  %85 = load %struct.rtx_def*, %struct.rtx_def** %mem_addr283.us, align 8, !dbg !5339
  %call284.us = call i32 @canon_true_dependence(%struct.rtx_def* %84, i32 %bf.clear282.us, %struct.rtx_def* %85, %struct.rtx_def* nonnull %0, %struct.rtx_def* %mem_addr.2, i8 (%struct.rtx_def*, i8)* nonnull @rtx_varies_p) #6, !dbg !5340
  %conv285.us = trunc i32 %call284.us to i8, !dbg !5340
  call void @llvm.dbg.value(metadata i8 %conv285.us, metadata !5053, metadata !DIExpression()), !dbg !5298
  br label %if.end286.us, !dbg !5341

if.end286.us:                                     ; preds = %if.then277.us, %if.end274.us
  %remove222.0.us = phi i8 [ 0, %if.end274.us ], [ %conv285.us, %if.then277.us ], !dbg !5298
  call void @llvm.dbg.value(metadata i8 %remove222.0.us, metadata !5053, metadata !DIExpression()), !dbg !5298
  %tobool287.us = icmp eq i8 %remove222.0.us, 0, !dbg !5342
  br i1 %tobool287.us, label %if.end300.us, label %if.then288.us, !dbg !5344

if.then288.us:                                    ; preds = %if.end286.us
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5345
  %tobool289.us = icmp eq %struct._IO_FILE* %86, null, !dbg !5345
  br i1 %tobool289.us, label %if.end291.us, label %if.then290.us, !dbg !5348

if.then290.us:                                    ; preds = %if.then288.us
  call fastcc void @dump_insn_info(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), %struct.insn_info* nonnull %i_ptr212.0.us) #8, !dbg !5349
  br label %if.end291.us, !dbg !5349

if.end291.us:                                     ; preds = %if.then290.us, %if.then288.us
  %tobool292.us = icmp eq %struct.insn_info* %last213.0.us, null, !dbg !5350
  %next_local_store294.us = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr212.0.us, i64 0, i32 9, !dbg !5352
  %87 = bitcast %struct.insn_info** %next_local_store294.us to i64*, !dbg !5352
  %88 = load i64, i64* %87, align 8, !dbg !5352
  br i1 %tobool292.us, label %if.else296.us, label %if.then293.us, !dbg !5353

if.then293.us:                                    ; preds = %if.end291.us
  %next_local_store295.us = getelementptr inbounds %struct.insn_info, %struct.insn_info* %last213.0.us, i64 0, i32 9, !dbg !5354
  %89 = bitcast %struct.insn_info** %next_local_store295.us to i64*, !dbg !5355
  store i64 %88, i64* %89, align 8, !dbg !5355
  br label %if.end300.us, !dbg !5356

if.else296.us:                                    ; preds = %if.end291.us
  store i64 %88, i64* bitcast (%struct.insn_info** @active_local_stores to i64*), align 8, !dbg !5357
  br label %if.end300.us

if.end300.us:                                     ; preds = %if.else296.us, %if.then293.us, %if.end286.us
  %last213.1.us = phi %struct.insn_info* [ null, %if.else296.us ], [ %last213.0.us, %if.then293.us ], [ %i_ptr212.0.us, %if.end286.us ], !dbg !5283
  call void @llvm.dbg.value(metadata %struct.insn_info* %last213.1.us, metadata !5052, metadata !DIExpression()), !dbg !5283
  %next_local_store301.us = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr212.0.us, i64 0, i32 9, !dbg !5358
  %90 = load %struct.insn_info*, %struct.insn_info** %next_local_store301.us, align 8, !dbg !5358
  call void @llvm.dbg.value(metadata %struct.insn_info* %90, metadata !5050, metadata !DIExpression()), !dbg !5283
  br label %cleanup302.us, !dbg !5359

cleanup302.us:                                    ; preds = %if.end300.us, %land.lhs.true268.us
  %cleanup.dest.slot.2.us = phi i1 [ true, %if.end300.us ], [ false, %land.lhs.true268.us ]
  %i_ptr212.1.us = phi %struct.insn_info* [ %90, %if.end300.us ], [ %i_ptr212.0.us, %land.lhs.true268.us ], !dbg !5283
  %last213.2.us = phi %struct.insn_info* [ %last213.1.us, %if.end300.us ], [ %last213.0.us, %land.lhs.true268.us ], !dbg !5297
  call void @llvm.dbg.value(metadata %struct.insn_info* %last213.2.us, metadata !5052, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata %struct.insn_info* %i_ptr212.1.us, metadata !5050, metadata !DIExpression()), !dbg !5283
  br i1 %cleanup.dest.slot.2.us, label %while.cond219.us, label %cleanup307.us-lcssa.us, !llvm.loop !5360

while.body236.us:                                 ; preds = %while.cond232.us
  %next237.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.us, i64 0, i32 10, !dbg !5361
  %91 = load %struct.store_info*, %struct.store_info** %next237.us, align 8, !dbg !5361
  call void @llvm.dbg.value(metadata %struct.store_info* %91, metadata !5055, metadata !DIExpression()), !dbg !5298
  br label %while.cond232.us, !dbg !5305, !llvm.loop !5362

cleanup307.us-lcssa.us:                           ; preds = %cleanup302.us, %while.cond219.us
  br label %cleanup307

while.cond219:                                    ; preds = %if.end300, %if.end218.if.end218.split_crit_edge
  %i_ptr212.0 = phi %struct.insn_info* [ %43, %if.end218.if.end218.split_crit_edge ], [ %105, %if.end300 ], !dbg !5296
  %last213.0 = phi %struct.insn_info* [ null, %if.end218.if.end218.split_crit_edge ], [ %last213.1, %if.end300 ], !dbg !5297
  call void @llvm.dbg.value(metadata %struct.insn_info* %last213.0, metadata !5052, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata %struct.insn_info* %i_ptr212.0, metadata !5050, metadata !DIExpression()), !dbg !5283
  %tobool220 = icmp eq %struct.insn_info* %i_ptr212.0, null, !dbg !5295
  br i1 %tobool220, label %cleanup307.us-lcssa.loopexit, label %while.body221, !dbg !5295

while.body221:                                    ; preds = %while.cond219
  call void @llvm.dbg.value(metadata i8 0, metadata !5053, metadata !DIExpression()), !dbg !5298
  %store_rec224 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr212.0, i64 0, i32 6, !dbg !5299
  %92 = load %struct.store_info*, %struct.store_info** %store_rec224, align 8, !dbg !5299
  call void @llvm.dbg.value(metadata %struct.store_info* %92, metadata !5055, metadata !DIExpression()), !dbg !5298
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5300
  %tobool225 = icmp eq %struct._IO_FILE* %93, null, !dbg !5300
  br i1 %tobool225, label %if.end231, label %if.then226, !dbg !5302

if.then226:                                       ; preds = %while.body221
  %insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr212.0, i64 0, i32 5, !dbg !5303
  %94 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5303
  %arrayidx229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5303
  %rt_int = bitcast %union.rtunion_def* %arrayidx229 to i32*, !dbg !5303
  %95 = load i32, i32* %rt_int, align 8, !dbg !5303
  %call230 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %93, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %95) #6, !dbg !5304
  br label %if.end231, !dbg !5304

if.end231:                                        ; preds = %while.body221, %if.then226
  br label %while.cond232, !dbg !5305

while.cond232:                                    ; preds = %while.body236, %if.end231
  %store_info223.0 = phi %struct.store_info* [ %92, %if.end231 ], [ %97, %while.body236 ], !dbg !5298
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info223.0, metadata !5055, metadata !DIExpression()), !dbg !5298
  %is_set233 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0, i64 0, i32 0, !dbg !5306
  %96 = load i8, i8* %is_set233, align 8, !dbg !5306
  %tobool234 = icmp eq i8 %96, 0, !dbg !5307
  br i1 %tobool234, label %while.body236, label %while.end238, !dbg !5305

while.body236:                                    ; preds = %while.cond232
  %next237 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0, i64 0, i32 10, !dbg !5361
  %97 = load %struct.store_info*, %struct.store_info** %next237, align 8, !dbg !5361
  call void @llvm.dbg.value(metadata %struct.store_info* %97, metadata !5055, metadata !DIExpression()), !dbg !5298
  br label %while.cond232, !dbg !5305, !llvm.loop !5362

while.end238:                                     ; preds = %while.cond232
  %store_info223.0.lcssa = phi %struct.store_info* [ %store_info223.0, %while.cond232 ], !dbg !5298
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info223.0.lcssa, metadata !5055, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info223.0.lcssa, metadata !5055, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info223.0.lcssa, metadata !5055, metadata !DIExpression()), !dbg !5298
  br label %if.end274, !dbg !5310

land.lhs.true241:                                 ; No predecessors!
  unreachable, !dbg !5313

land.lhs.true245:                                 ; No predecessors!
  unreachable, !dbg !5317

if.end274:                                        ; preds = %while.end238
  %alias_set275 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.lcssa, i64 0, i32 6, !dbg !5333
  %98 = load i32, i32* %alias_set275, align 8, !dbg !5333
  %tobool276 = icmp eq i32 %98, 0, !dbg !5335
  br i1 %tobool276, label %if.then277, label %if.end286, !dbg !5336

if.then277:                                       ; preds = %if.end274
  %mem278 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.lcssa, i64 0, i32 4, !dbg !5337
  %99 = load %struct.rtx_def*, %struct.rtx_def** %mem278, align 8, !dbg !5337
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i64 0, i32 0, !dbg !5338
  %bf.load280 = load i32, i32* %.cast, align 8, !dbg !5338
  %bf.lshr281 = lshr i32 %bf.load280, 16, !dbg !5338
  %bf.clear282 = and i32 %bf.lshr281, 255, !dbg !5338
  %mem_addr283 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info223.0.lcssa, i64 0, i32 5, !dbg !5339
  %100 = load %struct.rtx_def*, %struct.rtx_def** %mem_addr283, align 8, !dbg !5339
  %call284 = call i32 @canon_true_dependence(%struct.rtx_def* %99, i32 %bf.clear282, %struct.rtx_def* %100, %struct.rtx_def* nonnull %0, %struct.rtx_def* %mem_addr.2, i8 (%struct.rtx_def*, i8)* nonnull @rtx_varies_p) #6, !dbg !5340
  %conv285 = trunc i32 %call284 to i8, !dbg !5340
  call void @llvm.dbg.value(metadata i8 %conv285, metadata !5053, metadata !DIExpression()), !dbg !5298
  br label %if.end286, !dbg !5341

if.end286:                                        ; preds = %if.end274, %if.then277
  %remove222.0 = phi i8 [ 0, %if.end274 ], [ %conv285, %if.then277 ], !dbg !5298
  call void @llvm.dbg.value(metadata i8 %remove222.0, metadata !5053, metadata !DIExpression()), !dbg !5298
  %tobool287 = icmp eq i8 %remove222.0, 0, !dbg !5342
  br i1 %tobool287, label %if.end300, label %if.then288, !dbg !5344

if.then288:                                       ; preds = %if.end286
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5345
  %tobool289 = icmp eq %struct._IO_FILE* %101, null, !dbg !5345
  br i1 %tobool289, label %if.end291, label %if.then290, !dbg !5348

if.then290:                                       ; preds = %if.then288
  call fastcc void @dump_insn_info(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), %struct.insn_info* nonnull %i_ptr212.0) #8, !dbg !5349
  br label %if.end291, !dbg !5349

if.end291:                                        ; preds = %if.then288, %if.then290
  %tobool292 = icmp eq %struct.insn_info* %last213.0, null, !dbg !5350
  %next_local_store294 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr212.0, i64 0, i32 9, !dbg !5352
  %102 = bitcast %struct.insn_info** %next_local_store294 to i64*, !dbg !5352
  %103 = load i64, i64* %102, align 8, !dbg !5352
  br i1 %tobool292, label %if.else296, label %if.then293, !dbg !5353

if.then293:                                       ; preds = %if.end291
  %next_local_store295 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %last213.0, i64 0, i32 9, !dbg !5354
  %104 = bitcast %struct.insn_info** %next_local_store295 to i64*, !dbg !5355
  store i64 %103, i64* %104, align 8, !dbg !5355
  br label %if.end300, !dbg !5356

if.else296:                                       ; preds = %if.end291
  store i64 %103, i64* bitcast (%struct.insn_info** @active_local_stores to i64*), align 8, !dbg !5357
  br label %if.end300

if.end300:                                        ; preds = %if.end286, %if.then293, %if.else296
  %last213.1 = phi %struct.insn_info* [ null, %if.else296 ], [ %last213.0, %if.then293 ], [ %i_ptr212.0, %if.end286 ], !dbg !5283
  call void @llvm.dbg.value(metadata %struct.insn_info* %last213.1, metadata !5052, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata %struct.insn_info* undef, metadata !5050, metadata !DIExpression()), !dbg !5283
  %next_local_store301 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %i_ptr212.0, i64 0, i32 9, !dbg !5358
  %105 = load %struct.insn_info*, %struct.insn_info** %next_local_store301, align 8, !dbg !5358
  call void @llvm.dbg.value(metadata %struct.insn_info* %105, metadata !5050, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata %struct.insn_info* %last213.1, metadata !5052, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata %struct.insn_info* %105, metadata !5050, metadata !DIExpression()), !dbg !5283
  br i1 true, label %while.cond219, label %if.end300.cleanup307.us-lcssa_crit_edge, !llvm.loop !5360

if.end300.cleanup307.us-lcssa_crit_edge:          ; preds = %if.end300
  br label %cleanup307.us-lcssa

cleanup307.us-lcssa.loopexit:                     ; preds = %while.cond219
  br label %cleanup307.us-lcssa

cleanup307.us-lcssa:                              ; preds = %cleanup307.us-lcssa.loopexit, %if.end300.cleanup307.us-lcssa_crit_edge
  br label %cleanup307

cleanup307:                                       ; preds = %cleanup307.us-lcssa.us, %cleanup307.us-lcssa
  br label %cleanup313

if.end312.loopexit:                               ; preds = %while.cond
  br label %if.end312, !dbg !5363

if.end312:                                        ; preds = %if.end312.loopexit
  br label %cleanup313, !dbg !5363

cleanup313:                                       ; preds = %cleanup307, %cleanup207, %if.end15, %entry, %lor.lhs.false, %if.end312, %if.end28, %if.end14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7, !dbg !5364
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !5364
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #7, !dbg !5364
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !5364
  ret i32 0, !dbg !5364
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @canon_address(%struct.rtx_def* %mem, i32* %alias_set_out, i32* %group_id, i64* %offset, %struct.cselib_val_struct** %base) unnamed_addr #5 !dbg !5365 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !5372, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata i32* %alias_set_out, metadata !5373, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata i32* %group_id, metadata !5374, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata i64* %offset, metadata !5375, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct** %base, metadata !5376, metadata !DIExpression()), !dbg !5394
  %0 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !5395
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5396
  %rt_mem = bitcast %union.rtunion_def* %1 to %struct.mem_attrs**, !dbg !5396
  %2 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5396
  %cmp = icmp eq %struct.mem_attrs* %2, null, !dbg !5396
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !5396

cond.false:                                       ; preds = %entry
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 5, !dbg !5396
  %3 = load i8, i8* %addrspace, align 8, !dbg !5396
  br label %cond.end, !dbg !5396

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i8 [ %3, %cond.false ], [ 0, %entry ]
  %call = tail call i32 %0(i8 zeroext %cond) #6, !dbg !5397
  call void @llvm.dbg.value(metadata i32 %call, metadata !5377, metadata !DIExpression()), !dbg !5394
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5398
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !5398
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5398
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !5378, metadata !DIExpression()), !dbg !5394
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !5399
  %tobool = icmp eq %struct.bitmap_head_def* %5, null, !dbg !5399
  br i1 %tobool, label %if.end49, label %if.then, !dbg !5400

if.then:                                          ; preds = %cond.end
  %6 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5401
  %cmp13 = icmp eq %struct.mem_attrs* %6, null, !dbg !5401
  br i1 %cmp13, label %cond.end21, label %cond.false16, !dbg !5401

cond.false16:                                     ; preds = %if.then
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %6, i64 0, i32 3, !dbg !5401
  %7 = load i32, i32* %alias, align 8, !dbg !5401
  br label %cond.end21, !dbg !5401

cond.end21:                                       ; preds = %if.then, %cond.false16
  %cond22 = phi i32 [ %7, %cond.false16 ], [ 0, %if.then ], !dbg !5401
  call void @llvm.dbg.value(metadata i32 %cond22, metadata !5382, metadata !DIExpression()), !dbg !5402
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5403
  %tobool23 = icmp eq %struct._IO_FILE* %8, null, !dbg !5403
  br i1 %tobool23, label %if.end, label %if.then24, !dbg !5405

if.then24:                                        ; preds = %cond.end21
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.33, i64 0, i64 0), i32 %cond22) #6, !dbg !5406
  %.pre = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @clear_alias_sets, align 8, !dbg !5407
  br label %if.end, !dbg !5406

if.end:                                           ; preds = %cond.end21, %if.then24
  %9 = phi %struct.bitmap_head_def* [ %5, %cond.end21 ], [ %.pre, %if.then24 ], !dbg !5407
  %call26 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %9, i32 %cond22) #6, !dbg !5408
  %tobool27 = icmp eq i32 %call26, 0, !dbg !5408
  br i1 %tobool27, label %cleanup48, label %if.then28, !dbg !5409

if.then28:                                        ; preds = %if.end
  %call30 = tail call fastcc %struct.clear_alias_mode_holder* @clear_alias_set_lookup(i32 %cond22) #8, !dbg !5410
  call void @llvm.dbg.value(metadata %struct.clear_alias_mode_holder* %call30, metadata !5385, metadata !DIExpression()), !dbg !5411
  %mode = getelementptr inbounds %struct.clear_alias_mode_holder, %struct.clear_alias_mode_holder* %call30, i64 0, i32 1, !dbg !5412
  %10 = load i32, i32* %mode, align 4, !dbg !5412
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !5414
  %bf.load = load i32, i32* %11, align 8, !dbg !5414
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5414
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5414
  %cmp31 = icmp eq i32 %10, %bf.clear, !dbg !5415
  br i1 %cmp31, label %if.end46, label %if.then33, !dbg !5416

if.then33:                                        ; preds = %if.then28
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5417
  %tobool34 = icmp eq %struct._IO_FILE* %12, null, !dbg !5417
  br i1 %tobool34, label %if.end44, label %if.then35, !dbg !5420

if.then35:                                        ; preds = %if.then33
  %idxprom = zext i32 %10 to i64, !dbg !5421
  %arrayidx37 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom, !dbg !5421
  %13 = load i8*, i8** %arrayidx37, align 8, !dbg !5421
  %idxprom41 = zext i32 %bf.clear to i64, !dbg !5422
  %arrayidx42 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom41, !dbg !5422
  %14 = load i8*, i8** %arrayidx42, align 8, !dbg !5422
  %call43 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.34, i64 0, i64 0), i32 %cond22, i8* %13, i8* %14) #6, !dbg !5423
  br label %if.end44, !dbg !5423

if.end44:                                         ; preds = %if.then33, %if.then35
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @disqualified_clear_alias_sets, align 8, !dbg !5424
  %call45 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %15, i32 %cond22) #6, !dbg !5425
  br label %cleanup48, !dbg !5426

if.end46:                                         ; preds = %if.then28
  store i32 %cond22, i32* %alias_set_out, align 4, !dbg !5427
  %16 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !5428
  %id = getelementptr inbounds %struct.group_info, %struct.group_info* %16, i64 0, i32 1, !dbg !5429
  %17 = load i32, i32* %id, align 8, !dbg !5429
  store i32 %17, i32* %group_id, align 4, !dbg !5430
  br label %cleanup48, !dbg !5431

cleanup48:                                        ; preds = %if.end, %if.end44, %if.end46
  %cleanup.dest.slot.1 = phi i1 [ false, %if.end46 ], [ false, %if.end44 ], [ true, %if.end ]
  %retval.1 = phi i8 [ 1, %if.end46 ], [ 0, %if.end44 ], [ undef, %if.end ]
  br i1 %cleanup.dest.slot.1, label %if.end49, label %cleanup157

if.end49:                                         ; preds = %cond.end, %cleanup48
  store i32 0, i32* %alias_set_out, align 4, !dbg !5432
  %call50 = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %4, i32 %call, i32 1) #6, !dbg !5433
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5434
  %tobool51 = icmp eq %struct._IO_FILE* %18, null, !dbg !5434
  br i1 %tobool51, label %if.end55, label %if.then52, !dbg !5436

if.then52:                                        ; preds = %if.end49
  %call53 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !5437
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5439
  tail call void @print_inline_rtx(%struct._IO_FILE* %19, %struct.rtx_def* %4, i32 0) #6, !dbg !5440
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5441
  %call54 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !5442
  br label %if.end55, !dbg !5443

if.end55:                                         ; preds = %if.end49, %if.then52
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5380, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata i32 0, metadata !5381, metadata !DIExpression()), !dbg !5394
  br label %for.cond, !dbg !5444

for.cond:                                         ; preds = %for.inc, %if.end55
  %address.0 = phi %struct.rtx_def* [ null, %if.end55 ], [ %address.2, %for.inc ], !dbg !5394
  %expanded.0 = phi i32 [ 0, %if.end55 ], [ %inc, %for.inc ], !dbg !5445
  call void @llvm.dbg.value(metadata i32 %expanded.0, metadata !5381, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.0, metadata !5380, metadata !DIExpression()), !dbg !5394
  %exitcond = icmp eq i32 %expanded.0, 2, !dbg !5446
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5447

for.body:                                         ; preds = %for.cond
  %tobool58 = icmp eq i32 %expanded.0, 0, !dbg !5448
  br i1 %tobool58, label %if.end64, label %if.then59, !dbg !5450

if.then59:                                        ; preds = %for.body
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @scratch, align 8, !dbg !5451
  %call60 = tail call %struct.rtx_def* @cselib_expand_value_rtx(%struct.rtx_def* %4, %struct.bitmap_head_def* %21, i32 5) #6, !dbg !5453
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call60, metadata !5379, metadata !DIExpression()), !dbg !5394
  %tobool61 = icmp eq %struct.rtx_def* %call60, null, !dbg !5454
  br i1 %tobool61, label %for.end, label %if.end64, !dbg !5456

if.end64:                                         ; preds = %if.then59, %for.body
  %expanded_address.0 = phi %struct.rtx_def* [ %call60, %if.then59 ], [ %4, %for.body ], !dbg !5457
  call void @llvm.dbg.value(metadata %struct.rtx_def* %expanded_address.0, metadata !5379, metadata !DIExpression()), !dbg !5394
  %call65 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %expanded_address.0) #6, !dbg !5458
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call65, metadata !5380, metadata !DIExpression()), !dbg !5394
  store i64 0, i64* %offset, align 8, !dbg !5459
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5460
  %tobool66 = icmp eq %struct._IO_FILE* %22, null, !dbg !5460
  br i1 %tobool66, label %if.end75, label %if.then67, !dbg !5462

if.then67:                                        ; preds = %if.end64
  br i1 %tobool58, label %if.end72, label %if.then69, !dbg !5463

if.then69:                                        ; preds = %if.then67
  %call70 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !5465
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5468
  tail call void @print_inline_rtx(%struct._IO_FILE* %23, %struct.rtx_def* %expanded_address.0, i32 0) #6, !dbg !5469
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5470
  %call71 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !5471
  %.pre3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5472
  br label %if.end72, !dbg !5473

if.end72:                                         ; preds = %if.then67, %if.then69
  %25 = phi %struct._IO_FILE* [ %22, %if.then67 ], [ %.pre3, %if.then69 ], !dbg !5472
  %call73 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !5474
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5475
  tail call void @print_inline_rtx(%struct._IO_FILE* %26, %struct.rtx_def* %call65, i32 0) #6, !dbg !5476
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5477
  %call74 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !5478
  br label %if.end75, !dbg !5479

if.end75:                                         ; preds = %if.end64, %if.end72
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call65, i64 0, i32 0, !dbg !5480
  %bf.load76 = load i32, i32* %28, align 8, !dbg !5480
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !5480
  %cmp78 = icmp eq i32 %bf.clear77, 35, !dbg !5482
  br i1 %cmp78, label %if.then80, label %if.end85, !dbg !5483

if.then80:                                        ; preds = %if.end75
  %arrayidx83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call65, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5484
  %rt_rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**, !dbg !5484
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !5484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !5380, metadata !DIExpression()), !dbg !5394
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 0, !dbg !5485
  %bf.load86.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !5487
  br label %if.end85, !dbg !5488

if.end85:                                         ; preds = %if.then80, %if.end75
  %bf.load86 = phi i32 [ %bf.load86.pre, %if.then80 ], [ %bf.load76, %if.end75 ], !dbg !5487
  %address.1 = phi %struct.rtx_def* [ %29, %if.then80 ], [ %call65, %if.end75 ], !dbg !5489
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.1, metadata !5380, metadata !DIExpression()), !dbg !5394
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !5487
  %cmp88 = icmp eq i32 %bf.clear87, 49, !dbg !5490
  br i1 %cmp88, label %land.lhs.true, label %if.end109, !dbg !5491

land.lhs.true:                                    ; preds = %if.end85
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %address.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5492
  %31 = bitcast %union.rtunion_def* %30 to i32**, !dbg !5492
  %32 = load i32*, i32** %31, align 8, !dbg !5492
  %bf.load94 = load i32, i32* %32, align 8, !dbg !5492
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !5492
  %cmp96 = icmp eq i32 %bf.clear95, 30, !dbg !5492
  br i1 %cmp96, label %if.then98, label %if.end109, !dbg !5493

if.then98:                                        ; preds = %land.lhs.true
  %u103 = getelementptr inbounds i32, i32* %32, i64 2, !dbg !5494
  %arrayidx104 = bitcast i32* %u103 to i64*, !dbg !5494
  %33 = load i64, i64* %arrayidx104, align 8, !dbg !5494
  store i64 %33, i64* %offset, align 8, !dbg !5496
  %arrayidx107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %address.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5497
  %rt_rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**, !dbg !5497
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx108, align 8, !dbg !5497
  call void @llvm.dbg.value(metadata %struct.rtx_def* %34, metadata !5380, metadata !DIExpression()), !dbg !5394
  br label %if.end109, !dbg !5498

if.end109:                                        ; preds = %if.then98, %land.lhs.true, %if.end85
  %address.2 = phi %struct.rtx_def* [ %34, %if.then98 ], [ %address.1, %land.lhs.true ], [ %address.1, %if.end85 ], !dbg !5489
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.2, metadata !5380, metadata !DIExpression()), !dbg !5394
  %35 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5499
  %cmp114 = icmp eq %struct.mem_attrs* %35, null, !dbg !5499
  br i1 %cmp114, label %cond.end124, label %cond.false117, !dbg !5499

cond.false117:                                    ; preds = %if.end109
  %addrspace122 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %35, i64 0, i32 5, !dbg !5499
  %36 = load i8, i8* %addrspace122, align 8, !dbg !5499
  %conv123 = zext i8 %36 to i32, !dbg !5499
  br label %cond.end124, !dbg !5499

cond.end124:                                      ; preds = %if.end109, %cond.false117
  %cond125 = phi i32 [ %conv123, %cond.false117 ], [ 0, %if.end109 ], !dbg !5499
  %cmp126 = icmp eq i32 %cond125, 0, !dbg !5499
  br i1 %cmp126, label %land.lhs.true128, label %for.inc, !dbg !5500

land.lhs.true128:                                 ; preds = %cond.end124
  %call129 = tail call fastcc zeroext i8 @const_or_frame_p(%struct.rtx_def* %address.2) #8, !dbg !5501
  %tobool131 = icmp eq i8 %call129, 0, !dbg !5501
  br i1 %tobool131, label %for.inc, label %if.then132, !dbg !5502

if.then132:                                       ; preds = %land.lhs.true128
  %address.2.lcssa = phi %struct.rtx_def* [ %address.2, %land.lhs.true128 ], !dbg !5489
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.2.lcssa, metadata !5380, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.2.lcssa, metadata !5380, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.2.lcssa, metadata !5380, metadata !DIExpression()), !dbg !5394
  %call133 = tail call fastcc %struct.group_info* @get_group_info(%struct.rtx_def* %address.2.lcssa) #8, !dbg !5503
  call void @llvm.dbg.value(metadata %struct.group_info* %call133, metadata !5388, metadata !DIExpression()), !dbg !5504
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5505
  %tobool134 = icmp eq %struct._IO_FILE* %37, null, !dbg !5505
  br i1 %tobool134, label %if.end139, label %if.then135, !dbg !5507

if.then135:                                       ; preds = %if.then132
  %id136 = getelementptr inbounds %struct.group_info, %struct.group_info* %call133, i64 0, i32 1, !dbg !5508
  %38 = load i32, i32* %id136, align 8, !dbg !5508
  %39 = load i64, i64* %offset, align 8, !dbg !5509
  %conv137 = trunc i64 %39 to i32, !dbg !5510
  %call138 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %37, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0), i32 %38, i32 %conv137) #6, !dbg !5511
  br label %if.end139, !dbg !5511

if.end139:                                        ; preds = %if.then132, %if.then135
  store %struct.cselib_val_struct* null, %struct.cselib_val_struct** %base, align 8, !dbg !5512
  %id140 = getelementptr inbounds %struct.group_info, %struct.group_info* %call133, i64 0, i32 1, !dbg !5513
  %40 = load i32, i32* %id140, align 8, !dbg !5513
  store i32 %40, i32* %group_id, align 4, !dbg !5514
  br label %cleanup157

for.inc:                                          ; preds = %land.lhs.true128, %cond.end124
  %inc = add nuw nsw i32 %expanded.0, 1, !dbg !5515
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5381, metadata !DIExpression()), !dbg !5394
  br label %for.cond, !dbg !5516, !llvm.loop !5517

for.end:                                          ; preds = %for.cond, %if.then59
  %address.0.lcssa = phi %struct.rtx_def* [ %address.0, %for.cond ], [ %address.0, %if.then59 ], !dbg !5394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.0.lcssa, metadata !5380, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.0.lcssa, metadata !5380, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.0.lcssa, metadata !5380, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.0.lcssa, metadata !5380, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.0.lcssa, metadata !5380, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %address.0.lcssa, metadata !5380, metadata !DIExpression()), !dbg !5394
  %call143 = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %address.0.lcssa, i32 %call, i32 1) #6, !dbg !5519
  store %struct.cselib_val_struct* %call143, %struct.cselib_val_struct** %base, align 8, !dbg !5520
  store i32 -1, i32* %group_id, align 4, !dbg !5521
  %41 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %base, align 8, !dbg !5522
  %cmp144 = icmp eq %struct.cselib_val_struct* %41, null, !dbg !5524
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5394
  %tobool147 = icmp ne %struct._IO_FILE* %42, null, !dbg !5394
  br i1 %cmp144, label %if.then146, label %if.end151, !dbg !5525

if.then146:                                       ; preds = %for.end
  br i1 %tobool147, label %if.then148, label %cleanup157, !dbg !5526

if.then148:                                       ; preds = %if.then146
  %call149 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %42, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !5528
  br label %cleanup157, !dbg !5528

if.end151:                                        ; preds = %for.end
  br i1 %tobool147, label %if.then153, label %cleanup157, !dbg !5530

if.then153:                                       ; preds = %if.end151
  %uid = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %41, i64 0, i32 1, !dbg !5531
  %43 = load i32, i32* %uid, align 4, !dbg !5531
  %hash = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %41, i64 0, i32 0, !dbg !5533
  %44 = load i32, i32* %hash, align 8, !dbg !5533
  %45 = load i64, i64* %offset, align 8, !dbg !5534
  %conv154 = trunc i64 %45 to i32, !dbg !5535
  %call155 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %42, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40, i64 0, i64 0), i32 %43, i32 %44, i32 %conv154) #6, !dbg !5536
  br label %cleanup157, !dbg !5536

cleanup157:                                       ; preds = %if.end151, %if.then153, %if.then146, %if.then148, %cleanup48, %if.end139
  %retval.2 = phi i8 [ %retval.1, %cleanup48 ], [ 1, %if.end139 ], [ 0, %if.then148 ], [ 0, %if.then146 ], [ 1, %if.then153 ], [ 1, %if.end151 ], !dbg !5394
  ret i8 %retval.2, !dbg !5537
}

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) local_unnamed_addr #2

declare dso_local i32 @canon_true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8 (%struct.rtx_def*, i8)*) local_unnamed_addr #2

declare dso_local zeroext i8 @rtx_varies_p(%struct.rtx_def*, i8 zeroext) #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @all_positions_needed_p(%struct.store_info* %s_info, i32 %start, i32 %width) unnamed_addr #0 !dbg !5538 {
entry:
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info, metadata !5542, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata i32 %start, metadata !5543, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata i32 %width, metadata !5544, metadata !DIExpression()), !dbg !5550
  %is_large = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 1, !dbg !5551
  %0 = load i8, i8* %is_large, align 1, !dbg !5551
  %tobool = icmp eq i8 %0, 0, !dbg !5551
  br i1 %tobool, label %if.else, label %if.then, !dbg !5552

if.then:                                          ; preds = %entry
  %add = add nsw i32 %start, %width, !dbg !5553
  call void @llvm.dbg.value(metadata i32 %add, metadata !5545, metadata !DIExpression()), !dbg !5554
  %bmap = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 9, i32 0, i32 0, !dbg !5555
  br label %while.cond, !dbg !5557

while.cond:                                       ; preds = %while.body, %if.then
  %start.addr.0 = phi i32 [ %start, %if.then ], [ %inc, %while.body ]
  call void @llvm.dbg.value(metadata i32 %start.addr.0, metadata !5543, metadata !DIExpression()), !dbg !5550
  %cmp = icmp slt i32 %start.addr.0, %add, !dbg !5558
  br i1 %cmp, label %while.body, label %return.loopexit, !dbg !5557

while.body:                                       ; preds = %while.cond
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %bmap, align 8, !dbg !5555
  %inc = add nsw i32 %start.addr.0, 1, !dbg !5559
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5543, metadata !DIExpression()), !dbg !5550
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %1, i32 %start.addr.0) #6, !dbg !5560
  %tobool1 = icmp eq i32 %call, 0, !dbg !5560
  br i1 %tobool1, label %while.cond, label %return.loopexit, !dbg !5561, !llvm.loop !5562

if.else:                                          ; preds = %entry
  %call3 = tail call fastcc i64 @lowpart_bitmask(i32 %width) #8, !dbg !5564
  %sh_prom = zext i32 %start to i64, !dbg !5565
  %shl = shl i64 %call3, %sh_prom, !dbg !5565
  call void @llvm.dbg.value(metadata i64 %shl, metadata !5548, metadata !DIExpression()), !dbg !5566
  %positions_needed4 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 9, !dbg !5567
  %small_bitmask = bitcast %union.anon.0* %positions_needed4 to i64*, !dbg !5568
  %2 = load i64, i64* %small_bitmask, align 8, !dbg !5568
  %and = and i64 %2, %shl, !dbg !5569
  %cmp5 = icmp eq i64 %and, %shl, !dbg !5570
  %conv6 = zext i1 %cmp5 to i8, !dbg !5571
  br label %return

return.loopexit:                                  ; preds = %while.cond, %while.body
  %retval.1.ph = phi i8 [ 1, %while.cond ], [ 0, %while.body ]
  br label %return, !dbg !5572

return:                                           ; preds = %return.loopexit, %if.else
  %retval.1 = phi i8 [ %conv6, %if.else ], [ %retval.1.ph, %return.loopexit ], !dbg !5573
  ret i8 %retval.1, !dbg !5572
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @replace_read(%struct.store_info* %store_info, %struct.insn_info* %store_insn, %struct.read_info* %read_info, %struct.insn_info* %read_insn, %struct.rtx_def** %loc, %struct.bitmap_head_def* %regs_live) unnamed_addr #5 !dbg !5574 {
entry:
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info, metadata !5578, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.value(metadata %struct.insn_info* %store_insn, metadata !5579, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.value(metadata %struct.read_info* %read_info, metadata !5580, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.value(metadata %struct.insn_info* %read_insn, metadata !5581, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !5582, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %regs_live, metadata !5583, metadata !DIExpression()), !dbg !5596
  %mem = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info, i64 0, i32 4, !dbg !5597
  %0 = bitcast %struct.rtx_def** %mem to i32**, !dbg !5597
  %1 = load i32*, i32** %0, align 8, !dbg !5597
  %bf.load = load i32, i32* %1, align 8, !dbg !5597
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5597
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5597
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5584, metadata !DIExpression()), !dbg !5596
  %mem1 = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info, i64 0, i32 4, !dbg !5598
  %2 = bitcast %struct.rtx_def** %mem1 to i32**, !dbg !5598
  %3 = load i32*, i32** %2, align 8, !dbg !5598
  %bf.load2 = load i32, i32* %3, align 8, !dbg !5598
  %bf.lshr3 = lshr i32 %bf.load2, 16, !dbg !5598
  %bf.clear4 = and i32 %bf.lshr3, 255, !dbg !5598
  call void @llvm.dbg.value(metadata i32 %bf.clear4, metadata !5585, metadata !DIExpression()), !dbg !5596
  %call = tail call zeroext i8 @dbg_cnt(i32 10) #6, !dbg !5599
  %tobool = icmp eq i8 %call, 0, !dbg !5599
  br i1 %tobool, label %cleanup74, label %if.end, !dbg !5601

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5602
  %tobool5 = icmp eq %struct._IO_FILE* %4, null, !dbg !5602
  br i1 %tobool5, label %if.end16, label %if.then6, !dbg !5604

if.then6:                                         ; preds = %if.end
  %idxprom = zext i32 %bf.clear4 to i64, !dbg !5605
  %arrayidx = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom, !dbg !5605
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !5605
  %insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %read_insn, i64 0, i32 5, !dbg !5606
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5606
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5606
  %rt_int = bitcast %union.rtunion_def* %arrayidx7 to i32*, !dbg !5606
  %7 = load i32, i32* %rt_int, align 8, !dbg !5606
  %idxprom8 = zext i32 %bf.clear to i64, !dbg !5607
  %arrayidx9 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %idxprom8, !dbg !5607
  %8 = load i8*, i8** %arrayidx9, align 8, !dbg !5607
  %insn10 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %store_insn, i64 0, i32 5, !dbg !5608
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn10, align 8, !dbg !5608
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5608
  %rt_int14 = bitcast %union.rtunion_def* %arrayidx13 to i32*, !dbg !5608
  %10 = load i32, i32* %rt_int14, align 8, !dbg !5608
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.41, i64 0, i64 0), i8* %5, i32 %7, i8* %8, i32 %10) #6, !dbg !5609
  br label %if.end16, !dbg !5609

if.end16:                                         ; preds = %if.end, %if.then6
  tail call void @start_sequence() #6, !dbg !5610
  %insn17 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %read_insn, i64 0, i32 5, !dbg !5611
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn17, align 8, !dbg !5611
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 1, !dbg !5611
  %rt_bb = bitcast %struct.object_block** %arrayidx20 to %struct.basic_block_def**, !dbg !5611
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5611
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !5589, metadata !DIExpression()), !dbg !5596
  %begin = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info, i64 0, i32 2, !dbg !5612
  %13 = load i32, i32* %begin, align 8, !dbg !5612
  %conv = sext i32 %13 to i64, !dbg !5613
  %end = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info, i64 0, i32 3, !dbg !5614
  %14 = load i32, i32* %end, align 4, !dbg !5614
  %conv21 = sext i32 %14 to i64, !dbg !5615
  %call22 = tail call fastcc %struct.rtx_def* @get_stored_val(%struct.store_info* %store_info, i32 %bf.clear4, i64 %conv, i64 %conv21, %struct.basic_block_def* %12, i8 zeroext 0) #8, !dbg !5616
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !5588, metadata !DIExpression()), !dbg !5596
  %cmp = icmp eq %struct.rtx_def* %call22, null, !dbg !5617
  br i1 %cmp, label %if.then24, label %if.end29, !dbg !5619

if.then24:                                        ; preds = %if.end16
  tail call void @end_sequence() #6, !dbg !5620
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5622
  %tobool25 = icmp eq %struct._IO_FILE* %15, null, !dbg !5622
  br i1 %tobool25, label %cleanup74, label %if.then26, !dbg !5624

if.then26:                                        ; preds = %if.then24
  %call27 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %15, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !5625
  br label %cleanup74, !dbg !5625

if.end29:                                         ; preds = %if.end16
  %call30 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear4, %struct.rtx_def* nonnull %call22) #6, !dbg !5626
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !5588, metadata !DIExpression()), !dbg !5596
  %call31 = tail call %struct.rtx_def* @get_insns() #6, !dbg !5627
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !5586, metadata !DIExpression()), !dbg !5596
  tail call void @end_sequence() #6, !dbg !5628
  %cmp32 = icmp eq %struct.rtx_def* %call31, null, !dbg !5629
  br i1 %cmp32, label %if.end52, label %if.then34, !dbg !5630

if.then34:                                        ; preds = %if.end29
  %call35 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5631
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call35, metadata !5590, metadata !DIExpression()), !dbg !5632
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !5587, metadata !DIExpression()), !dbg !5596
  %16 = bitcast %struct.bitmap_head_def* %call35 to i8*, !dbg !5633
  br label %for.cond, !dbg !5636

for.cond:                                         ; preds = %for.body, %if.then34
  %this_insn.0 = phi %struct.rtx_def* [ %call31, %if.then34 ], [ %20, %for.body ], !dbg !5637
  call void @llvm.dbg.value(metadata %struct.rtx_def* %this_insn.0, metadata !5587, metadata !DIExpression()), !dbg !5596
  %cmp36 = icmp eq %struct.rtx_def* %this_insn.0, null, !dbg !5638
  br i1 %cmp36, label %for.end, label %for.body, !dbg !5639

for.body:                                         ; preds = %for.cond
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %this_insn.0, i64 0, i32 1, !dbg !5640
  %17 = getelementptr inbounds %union.u, %union.u* %u38, i64 1, i32 0, i32 0, i64 0, !dbg !5640
  %rt_rtx = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !5640
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5640
  tail call void @note_stores(%struct.rtx_def* %18, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @look_for_hardregs, i8* %16) #6, !dbg !5641
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %this_insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5642
  %rt_rtx44 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !5642
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !5642
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !5587, metadata !DIExpression()), !dbg !5596
  br label %for.cond, !dbg !5643, !llvm.loop !5644

for.end:                                          ; preds = %for.cond
  tail call void @bitmap_and_into(%struct.bitmap_head_def* %call35, %struct.bitmap_head_def* %regs_live) #6, !dbg !5646
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %call35, i64 0, i32 0, !dbg !5647
  %21 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !5647
  %tobool45 = icmp eq %struct.bitmap_element_def* %21, null, !dbg !5647
  br i1 %tobool45, label %if.end51, label %if.then46, !dbg !5649

if.then46:                                        ; preds = %for.end
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5650
  %tobool47 = icmp eq %struct._IO_FILE* %22, null, !dbg !5650
  br i1 %tobool47, label %if.end50, label %if.then48, !dbg !5653

if.then48:                                        ; preds = %if.then46
  %call49 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !5654
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5656
  tail call void @df_print_regset(%struct._IO_FILE* %23, %struct.bitmap_head_def* %call35) #6, !dbg !5657
  br label %if.end50, !dbg !5658

if.end50:                                         ; preds = %if.then46, %if.then48
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call35) #6, !dbg !5659
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5590, metadata !DIExpression()), !dbg !5632
  br label %cleanup, !dbg !5660

if.end51:                                         ; preds = %for.end
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call35) #6, !dbg !5661
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5590, metadata !DIExpression()), !dbg !5632
  br label %cleanup, !dbg !5662

cleanup:                                          ; preds = %if.end51, %if.end50
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end50 ], [ true, %if.end51 ]
  br i1 %cleanup.dest.slot.0, label %if.end52, label %cleanup74

if.end52:                                         ; preds = %if.end29, %cleanup
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn17, align 8, !dbg !5663
  %call54 = tail call zeroext i8 @validate_change(%struct.rtx_def* %24, %struct.rtx_def** %loc, %struct.rtx_def* %call30, i8 zeroext 0) #6, !dbg !5664
  %tobool55 = icmp eq i8 %call54, 0, !dbg !5664
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !5665

if.then56:                                        ; preds = %if.end52
  %25 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @deferred_change_pool, align 8, !dbg !5666
  %call57 = tail call i8* @pool_alloc(%struct.alloc_pool_def* %25) #6, !dbg !5667
  call void @llvm.dbg.value(metadata i8* %call57, metadata !5593, metadata !DIExpression()), !dbg !5668
  %insn58 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %store_insn, i64 0, i32 5, !dbg !5669
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn58, align 8, !dbg !5669
  %call59 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call31, %struct.rtx_def* %26) #6, !dbg !5670
  %27 = bitcast %struct.rtx_def** %mem1 to i64*, !dbg !5671
  %28 = load i64, i64* %27, align 8, !dbg !5671
  %29 = bitcast %struct.rtx_def** %loc to i64*, !dbg !5672
  store i64 %28, i64* %29, align 8, !dbg !5672
  %30 = load i64, i64* bitcast (%struct.deferred_change** @deferred_change_list to i64*), align 8, !dbg !5673
  %next = getelementptr inbounds i8, i8* %call57, i64 16, !dbg !5674
  %31 = bitcast i8* %next to i64*, !dbg !5675
  store i64 %30, i64* %31, align 8, !dbg !5675
  store i8* %call57, i8** bitcast (%struct.deferred_change** @deferred_change_list to i8**), align 8, !dbg !5676
  %loc61 = bitcast i8* %call57 to %struct.rtx_def***, !dbg !5677
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc61, align 8, !dbg !5678
  %reg = getelementptr inbounds i8, i8* %call57, i64 8, !dbg !5679
  %32 = bitcast i8* %reg to %struct.rtx_def**, !dbg !5679
  store %struct.rtx_def* %call30, %struct.rtx_def** %32, align 8, !dbg !5680
  %next62 = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info, i64 0, i32 5, !dbg !5681
  %33 = bitcast %struct.read_info** %next62 to i64*, !dbg !5681
  %34 = load i64, i64* %33, align 8, !dbg !5681
  %read_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %read_insn, i64 0, i32 7, !dbg !5682
  %35 = bitcast %struct.read_info** %read_rec to i64*, !dbg !5683
  store i64 %34, i64* %35, align 8, !dbg !5683
  %36 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @read_info_pool, align 8, !dbg !5684
  %37 = bitcast %struct.read_info* %read_info to i8*, !dbg !5685
  tail call void @pool_free(%struct.alloc_pool_def* %36, i8* %37) #6, !dbg !5686
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5687
  %tobool63 = icmp eq %struct._IO_FILE* %38, null, !dbg !5687
  br i1 %tobool63, label %cleanup74, label %if.then64, !dbg !5689

if.then64:                                        ; preds = %if.then56
  %call65 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %38, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !5690
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5692
  tail call void @print_simple_rtl(%struct._IO_FILE* %39, %struct.rtx_def* %call30) #6, !dbg !5693
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5694
  %call66 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !5695
  br label %cleanup74, !dbg !5696

if.else:                                          ; preds = %if.end52
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5697
  %tobool69 = icmp eq %struct._IO_FILE* %41, null, !dbg !5697
  br i1 %tobool69, label %cleanup74, label %if.then70, !dbg !5700

if.then70:                                        ; preds = %if.else
  %call71 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %41, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !5701
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5703
  tail call void @print_simple_rtl(%struct._IO_FILE* %42, %struct.rtx_def* %call30) #6, !dbg !5704
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5705
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !5706
  br label %cleanup74, !dbg !5707

cleanup74:                                        ; preds = %if.then24, %if.then56, %if.else, %entry, %if.then70, %if.then64, %if.then26, %cleanup
  %retval.1 = phi i8 [ 0, %cleanup ], [ 0, %entry ], [ 0, %if.then26 ], [ 0, %if.then24 ], [ 1, %if.then64 ], [ 1, %if.then56 ], [ 0, %if.then70 ], [ 0, %if.else ], !dbg !5596
  ret i8 %retval.1, !dbg !5708
}

declare dso_local void @print_inline_rtx(%struct._IO_FILE*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.clear_alias_mode_holder* @clear_alias_set_lookup(i32 %alias_set) unnamed_addr #5 !dbg !5709 {
entry:
  %tmp_holder = alloca %struct.clear_alias_mode_holder, align 4
  call void @llvm.dbg.value(metadata i32 %alias_set, metadata !5713, metadata !DIExpression()), !dbg !5716
  %0 = bitcast %struct.clear_alias_mode_holder* %tmp_holder to i8*, !dbg !5717
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5717
  %alias_set1 = getelementptr inbounds %struct.clear_alias_mode_holder, %struct.clear_alias_mode_holder* %tmp_holder, i64 0, i32 0, !dbg !5718
  store i32 %alias_set, i32* %alias_set1, align 4, !dbg !5719
  %1 = load %struct.htab*, %struct.htab** @clear_alias_mode_table, align 8, !dbg !5720
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 0) #6, !dbg !5721
  call void @llvm.dbg.value(metadata i8** %call, metadata !5715, metadata !DIExpression()), !dbg !5716
  %2 = load i8*, i8** %call, align 8, !dbg !5722
  %tobool = icmp eq i8* %2, null, !dbg !5722
  br i1 %tobool, label %cond.true, label %entry.cond.end_crit_edge, !dbg !5722

entry.cond.end_crit_edge:                         ; preds = %entry
  %3 = bitcast i8* %2 to %struct.clear_alias_mode_holder*, !dbg !5722
  br label %cond.end, !dbg !5722

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32 636, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5722
  %.phi.trans.insert = bitcast i8** %call to %struct.clear_alias_mode_holder**, !dbg !5716
  %.pre = load %struct.clear_alias_mode_holder*, %struct.clear_alias_mode_holder** %.phi.trans.insert, align 8, !dbg !5723
  br label %cond.end, !dbg !5722

cond.end:                                         ; preds = %entry.cond.end_crit_edge, %cond.true
  %4 = phi %struct.clear_alias_mode_holder* [ %3, %entry.cond.end_crit_edge ], [ %.pre, %cond.true ], !dbg !5723
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5724
  ret %struct.clear_alias_mode_holder* %4, !dbg !5725
}

declare dso_local %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @cselib_expand_value_rtx(%struct.rtx_def*, %struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @const_or_frame_p(%struct.rtx_def* %x) unnamed_addr #5 !dbg !5726 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5730, metadata !DIExpression()), !dbg !5731
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5732
  %bf.load = load i32, i32* %0, align 8, !dbg !5732
  %trunc = trunc i32 %bf.load to i16, !dbg !5733
  switch i16 %trunc, label %sw.default [
    i16 35, label %return
    i16 30, label %return
    i16 32, label %return
    i16 33, label %return
    i16 45, label %return
    i16 44, label %return
    i16 37, label %sw.bb1
  ], !dbg !5733

sw.bb1:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !5734
  %cmp = icmp eq %struct.rtx_def* %1, %x, !dbg !5737
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !5738
  %cmp2 = icmp eq %struct.rtx_def* %2, %x, !dbg !5739
  %or.cond = or i1 %cmp, %cmp2, !dbg !5740
  br i1 %or.cond, label %return, label %lor.lhs.false3, !dbg !5740

lor.lhs.false3:                                   ; preds = %sw.bb1
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !5741
  %cmp4 = icmp eq %struct.rtx_def* %3, %x, !dbg !5742
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false5, !dbg !5743

land.lhs.true:                                    ; preds = %lor.lhs.false3
  %4 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !5744
  %tobool = icmp eq i8 %4, 0, !dbg !5744
  br i1 %tobool, label %lor.lhs.false5, label %return, !dbg !5745

lor.lhs.false5:                                   ; preds = %land.lhs.true, %lor.lhs.false3
  %5 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !5746
  %cmp6 = icmp eq %struct.rtx_def* %5, %x, !dbg !5747
  %spec.select = zext i1 %cmp6 to i8, !dbg !5748
  ret i8 %spec.select, !dbg !5748

sw.default:                                       ; preds = %entry
  br label %return, !dbg !5749

return:                                           ; preds = %land.lhs.true, %sw.bb1, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %land.lhs.true ], [ 1, %sw.bb1 ], !dbg !5750
  ret i8 %retval.0, !dbg !5751
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @lowpart_bitmask(i32 %n) unnamed_addr #5 !dbg !5752 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, metadata !5756, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata i64 -1, metadata !5757, metadata !DIExpression()), !dbg !5758
  %sub = sub nsw i32 64, %n, !dbg !5759
  %sh_prom = zext i32 %sub to i64, !dbg !5760
  %shr = lshr i64 -1, %sh_prom, !dbg !5760
  ret i64 %shr, !dbg !5761
}

declare dso_local void @start_sequence() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @get_stored_val(%struct.store_info* %store_info, i32 %read_mode, i64 %read_begin, i64 %read_end, %struct.basic_block_def* %bb, i8 zeroext %require_cst) unnamed_addr #5 !dbg !5762 {
entry:
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info, metadata !5766, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 %read_mode, metadata !5767, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i64 %read_begin, metadata !5768, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i64 %read_end, metadata !5769, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5770, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i8 %require_cst, metadata !5771, metadata !DIExpression()), !dbg !5785
  %mem = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info, i64 0, i32 4, !dbg !5786
  %0 = bitcast %struct.rtx_def** %mem to i32**, !dbg !5786
  %1 = load i32*, i32** %0, align 8, !dbg !5786
  %bf.load = load i32, i32* %1, align 8, !dbg !5786
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5786
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5786
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5772, metadata !DIExpression()), !dbg !5785
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !5787
  br i1 %cmp, label %if.end, label %if.else, !dbg !5789

if.else:                                          ; preds = %entry
  %begin = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info, i64 0, i32 7, !dbg !5790
  %2 = load i64, i64* %begin, align 8, !dbg !5790
  %sub = sub nsw i64 %read_begin, %2, !dbg !5792
  %conv = trunc i64 %sub to i32, !dbg !5793
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5773, metadata !DIExpression()), !dbg !5785
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  %shift.0 = phi i32 [ %conv, %if.else ], [ 0, %entry ], !dbg !5794
  call void @llvm.dbg.value(metadata i32 %shift.0, metadata !5773, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 undef, metadata !5774, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 %shift.0, metadata !5773, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shl, DW_OP_stack_value)), !dbg !5785
  %tobool = icmp eq i32 %shift.0, 0, !dbg !5795
  br i1 %tobool, label %if.else5, label %if.then3, !dbg !5796

if.then3:                                         ; preds = %if.end
  %mul = shl nsw i32 %shift.0, 3, !dbg !5797
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5773, metadata !DIExpression()), !dbg !5785
  %idxprom = zext i32 %read_mode to i64, !dbg !5798
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5798
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5798
  %conv2 = zext i8 %3 to i32, !dbg !5798
  %add = add nsw i32 %shift.0, %conv2, !dbg !5799
  call void @llvm.dbg.value(metadata i32 %add, metadata !5774, metadata !DIExpression()), !dbg !5785
  %call = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %bb) #6, !dbg !5800
  %call4 = tail call fastcc %struct.rtx_def* @find_shift_sequence(i32 %add, %struct.store_info* %store_info, i32 %read_mode, i32 %mul, i8 zeroext %call, i8 zeroext %require_cst) #8, !dbg !5801
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !5775, metadata !DIExpression()), !dbg !5785
  br label %if.end69, !dbg !5802

if.else5:                                         ; preds = %if.end
  br i1 %cmp, label %if.then8, label %if.else47, !dbg !5803

if.then8:                                         ; preds = %if.else5
  %rhs = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info, i64 0, i32 11, !dbg !5804
  %4 = bitcast %struct.rtx_def** %rhs to i32**, !dbg !5804
  %5 = load i32*, i32** %4, align 8, !dbg !5804
  %bf.load9 = load i32, i32* %5, align 8, !dbg !5804
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !5804
  %cmp11 = icmp eq i32 %bf.clear10, 30, !dbg !5804
  br i1 %cmp11, label %cond.end, label %cond.true, !dbg !5804

cond.true:                                        ; preds = %if.then8
  tail call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32 1835, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5804
  br label %cond.end, !dbg !5804

cond.end:                                         ; preds = %if.then8, %cond.true
  %call13 = tail call i32 @int_mode_for_mode(i32 %read_mode) #6, !dbg !5805
  call void @llvm.dbg.value(metadata i32 %call13, metadata !5772, metadata !DIExpression()), !dbg !5785
  %cmp14 = icmp eq i32 %call13, 1, !dbg !5806
  br i1 %cmp14, label %if.end69, label %if.else17, !dbg !5807

if.else17:                                        ; preds = %cond.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !5808
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5809
  %cmp19 = icmp eq %struct.rtx_def* %6, %7, !dbg !5810
  br i1 %cmp19, label %if.then21, label %if.else23, !dbg !5811

if.then21:                                        ; preds = %if.else17
  %call22 = tail call %struct.rtx_def* @extract_low_bits(i32 %read_mode, i32 %call13, %struct.rtx_def* %6) #6, !dbg !5812
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !5775, metadata !DIExpression()), !dbg !5785
  br label %if.end69, !dbg !5813

if.else23:                                        ; preds = %if.else17
  %idxprom24 = zext i32 %call13 to i64, !dbg !5814
  %arrayidx25 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom24, !dbg !5814
  %8 = load i8, i8* %arrayidx25, align 1, !dbg !5814
  %cmp31 = icmp ugt i8 %8, 8, !dbg !5815
  br i1 %cmp31, label %if.end69, label %if.else34, !dbg !5816

if.else34:                                        ; preds = %if.else23
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, !dbg !5817
  %arrayidx36 = bitcast %union.u* %u to i64*, !dbg !5817
  %9 = load i64, i64* %arrayidx36, align 8, !dbg !5817
  %and = and i64 %9, 255, !dbg !5818
  call void @llvm.dbg.value(metadata i64 %and, metadata !5776, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i32 8, metadata !5784, metadata !DIExpression()), !dbg !5819
  br label %while.cond, !dbg !5820

while.cond:                                       ; preds = %while.body, %if.else34
  %c.0 = phi i64 [ %and, %if.else34 ], [ %or, %while.body ], !dbg !5819
  %shift37.0 = phi i32 [ 8, %if.else34 ], [ %shl40, %while.body ], !dbg !5819
  call void @llvm.dbg.value(metadata i32 %shift37.0, metadata !5784, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i64 %c.0, metadata !5776, metadata !DIExpression()), !dbg !5819
  %cmp38 = icmp slt i32 %shift37.0, 64, !dbg !5821
  br i1 %cmp38, label %while.body, label %while.end, !dbg !5820

while.body:                                       ; preds = %while.cond
  %sh_prom = zext i32 %shift37.0 to i64, !dbg !5822
  %shl = shl i64 %c.0, %sh_prom, !dbg !5822
  %or = or i64 %c.0, %shl, !dbg !5824
  call void @llvm.dbg.value(metadata i64 %or, metadata !5776, metadata !DIExpression()), !dbg !5819
  %shl40 = shl i32 %shift37.0, 1, !dbg !5825
  call void @llvm.dbg.value(metadata i32 %shl40, metadata !5784, metadata !DIExpression()), !dbg !5819
  br label %while.cond, !dbg !5820, !llvm.loop !5826

while.end:                                        ; preds = %while.cond
  %c.0.lcssa = phi i64 [ %c.0, %while.cond ], !dbg !5819
  call void @llvm.dbg.value(metadata i64 %c.0.lcssa, metadata !5776, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i64 %c.0.lcssa, metadata !5776, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i64 %c.0.lcssa, metadata !5776, metadata !DIExpression()), !dbg !5819
  %call41 = tail call i64 @trunc_int_for_mode(i64 %c.0.lcssa, i32 %call13) #6, !dbg !5828
  %call42 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call41) #6, !dbg !5828
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !5775, metadata !DIExpression()), !dbg !5785
  %call43 = tail call %struct.rtx_def* @extract_low_bits(i32 %read_mode, i32 %call13, %struct.rtx_def* %call42) #6, !dbg !5829
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call43, metadata !5775, metadata !DIExpression()), !dbg !5785
  br label %if.end69

if.else47:                                        ; preds = %if.else5
  %const_rhs = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info, i64 0, i32 12, !dbg !5830
  %10 = load %struct.rtx_def*, %struct.rtx_def** %const_rhs, align 8, !dbg !5830
  %tobool48 = icmp eq %struct.rtx_def* %10, null, !dbg !5832
  br i1 %tobool48, label %if.else63, label %land.lhs.true, !dbg !5833

land.lhs.true:                                    ; preds = %if.else47
  %tobool50 = icmp eq i8 %require_cst, 0, !dbg !5834
  br i1 %tobool50, label %lor.lhs.false, label %if.then59, !dbg !5835

lor.lhs.false:                                    ; preds = %land.lhs.true
  %idxprom51 = zext i32 %read_mode to i64, !dbg !5836
  %arrayidx52 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom51, !dbg !5836
  %11 = load i8, i8* %arrayidx52, align 1, !dbg !5836
  %idxprom54 = zext i32 %bf.clear to i64, !dbg !5837
  %arrayidx55 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom54, !dbg !5837
  %12 = load i8, i8* %arrayidx55, align 1, !dbg !5837
  %cmp57 = icmp eq i8 %11, %12, !dbg !5838
  br i1 %cmp57, label %if.else63, label %if.then59, !dbg !5839

if.then59:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %call61 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* nonnull %10) #6, !dbg !5840
  %call62 = tail call %struct.rtx_def* @extract_low_bits(i32 %read_mode, i32 %bf.clear, %struct.rtx_def* %call61) #6, !dbg !5841
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call62, metadata !5775, metadata !DIExpression()), !dbg !5785
  br label %if.end69, !dbg !5842

if.else63:                                        ; preds = %lor.lhs.false, %if.else47
  %rhs64 = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info, i64 0, i32 11, !dbg !5843
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rhs64, align 8, !dbg !5843
  %call65 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %13) #6, !dbg !5844
  %call66 = tail call %struct.rtx_def* @extract_low_bits(i32 %read_mode, i32 %bf.clear, %struct.rtx_def* %call65) #6, !dbg !5845
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call66, metadata !5775, metadata !DIExpression()), !dbg !5785
  br label %if.end69

if.end69:                                         ; preds = %if.then21, %if.else23, %while.end, %cond.end, %if.else63, %if.then59, %if.then3
  %read_reg.5 = phi %struct.rtx_def* [ %call4, %if.then3 ], [ null, %cond.end ], [ %call22, %if.then21 ], [ %call43, %while.end ], [ null, %if.else23 ], [ %call62, %if.then59 ], [ %call66, %if.else63 ], !dbg !5846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %read_reg.5, metadata !5775, metadata !DIExpression()), !dbg !5785
  %tobool71 = icmp ne i8 %require_cst, 0, !dbg !5847
  %tobool73 = icmp ne %struct.rtx_def* %read_reg.5, null, !dbg !5849
  %or.cond = and i1 %tobool71, %tobool73, !dbg !5850
  br i1 %or.cond, label %land.lhs.true74, label %if.end82, !dbg !5850

land.lhs.true74:                                  ; preds = %if.end69
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %read_reg.5, i64 0, i32 0, !dbg !5851
  %bf.load75 = load i32, i32* %14, align 8, !dbg !5851
  %bf.clear76 = and i32 %bf.load75, 65535, !dbg !5851
  %idxprom77 = zext i32 %bf.clear76 to i64, !dbg !5851
  %arrayidx78 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom77, !dbg !5851
  %15 = load i32, i32* %arrayidx78, align 4, !dbg !5851
  %cmp79 = icmp eq i32 %15, 9, !dbg !5851
  %spec.select = select i1 %cmp79, %struct.rtx_def* %read_reg.5, %struct.rtx_def* null, !dbg !5852
  ret %struct.rtx_def* %spec.select, !dbg !5852

if.end82:                                         ; preds = %if.end69
  call void @llvm.dbg.value(metadata %struct.rtx_def* %read_reg.5, metadata !5775, metadata !DIExpression()), !dbg !5785
  ret %struct.rtx_def* %read_reg.5, !dbg !5853
}

declare dso_local void @end_sequence() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @look_for_hardregs(%struct.rtx_def* %x, %struct.rtx_def* %pat, i8* %data) #5 !dbg !5854 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5861, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !5862, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.value(metadata i8* %data, metadata !5863, metadata !DIExpression()), !dbg !5869
  %0 = bitcast i8* %data to %struct.bitmap_head_def*, !dbg !5870
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %0, metadata !5864, metadata !DIExpression()), !dbg !5869
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5871
  %bf.load = load i32, i32* %1, align 8, !dbg !5871
  %bf.clear = and i32 %bf.load, 65535, !dbg !5871
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5871
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5872

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5873
  %cmp1 = icmp ult i32 %call, 53, !dbg !5874
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5875

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5876
  call void @llvm.dbg.value(metadata i32 %call2, metadata !5865, metadata !DIExpression()), !dbg !5877
  %idxprom = sext i32 %call2 to i64, !dbg !5878
  %bf.load3 = load i32, i32* %1, align 8, !dbg !5879
  %bf.lshr = lshr i32 %bf.load3, 16, !dbg !5879
  %bf.clear4 = and i32 %bf.lshr, 255, !dbg !5879
  %idxprom5 = zext i32 %bf.clear4 to i64, !dbg !5878
  %arrayidx6 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom5, !dbg !5878
  %2 = load i8, i8* %arrayidx6, align 1, !dbg !5878
  %conv = zext i8 %2 to i32, !dbg !5878
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5868, metadata !DIExpression()), !dbg !5877
  br label %while.cond, !dbg !5880

while.cond:                                       ; preds = %while.body, %if.then
  %n.0 = phi i32 [ %conv, %if.then ], [ %dec, %while.body ], !dbg !5877
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !5868, metadata !DIExpression()), !dbg !5877
  %dec = add nsw i32 %n.0, -1, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %dec, metadata !5868, metadata !DIExpression()), !dbg !5877
  %cmp7 = icmp sgt i32 %n.0, 0, !dbg !5882
  br i1 %cmp7, label %while.body, label %if.end.loopexit, !dbg !5880

while.body:                                       ; preds = %while.cond
  %add = add nsw i32 %call2, %dec, !dbg !5883
  %call9 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %add) #6, !dbg !5884
  br label %while.cond, !dbg !5880, !llvm.loop !5885

if.end.loopexit:                                  ; preds = %while.cond
  br label %if.end, !dbg !5887

if.end:                                           ; preds = %if.end.loopexit, %land.lhs.true, %entry
  ret void, !dbg !5887
}

declare dso_local void @bitmap_and_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @df_print_regset(%struct._IO_FILE*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @print_simple_rtl(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @find_shift_sequence(i32 %access_size, %struct.store_info* %store_info, i32 %read_mode, i32 %shift, i8 zeroext %speed, i8 zeroext %require_cst) unnamed_addr #5 !dbg !5888 {
entry:
  call void @llvm.dbg.value(metadata i32 %access_size, metadata !5892, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info, metadata !5893, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 %read_mode, metadata !5894, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 %shift, metadata !5895, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i8 %speed, metadata !5896, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i8 %require_cst, metadata !5897, metadata !DIExpression()), !dbg !5914
  %mem = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info, i64 0, i32 4, !dbg !5915
  %0 = bitcast %struct.rtx_def** %mem to i32**, !dbg !5915
  %1 = load i32*, i32** %0, align 8, !dbg !5915
  %bf.load = load i32, i32* %1, align 8, !dbg !5915
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5915
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5915
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5898, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5900, metadata !DIExpression()), !dbg !5914
  %mul = shl nsw i32 %access_size, 3, !dbg !5916
  %call = tail call i32 @smallest_mode_for_size(i32 %mul, i32 2) #6, !dbg !5917
  call void @llvm.dbg.value(metadata i32 %call, metadata !5899, metadata !DIExpression()), !dbg !5914
  %const_rhs = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info, i64 0, i32 12, !dbg !5918
  %conv17 = sext i32 %shift to i64, !dbg !5919
  %tobool48 = icmp eq i8 %require_cst, 0, !dbg !5922
  %rhs = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info, i64 0, i32 11, !dbg !5924
  %2 = bitcast %struct.rtx_def** %rhs to i32**, !dbg !5924
  br label %for.cond, !dbg !5926

for.cond:                                         ; preds = %for.inc144, %entry
  %new_mode.0 = phi i32 [ %call, %entry ], [ %conv147, %for.inc144 ], !dbg !5927
  %read_reg.0 = phi %struct.rtx_def* [ null, %entry ], [ %read_reg.1, %for.inc144 ], !dbg !5928
  %retval.0 = phi %struct.rtx_def* [ undef, %entry ], [ %retval.3, %for.inc144 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %read_reg.0, metadata !5900, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 %new_mode.0, metadata !5899, metadata !DIExpression()), !dbg !5914
  %idxprom = zext i32 %new_mode.0 to i64, !dbg !5929
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5929
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5929
  %cmp = icmp ult i8 %3, 5, !dbg !5930
  br i1 %cmp, label %for.body, label %for.end148, !dbg !5931

for.body:                                         ; preds = %for.cond
  %4 = load %struct.rtx_def*, %struct.rtx_def** %const_rhs, align 8, !dbg !5932
  %tobool = icmp eq %struct.rtx_def* %4, null, !dbg !5933
  br i1 %tobool, label %if.end47, label %if.then, !dbg !5934

if.then:                                          ; preds = %for.body
  %call6 = tail call i32 @subreg_lowpart_offset(i32 %new_mode.0, i32 %bf.clear) #6, !dbg !5935
  call void @llvm.dbg.value(metadata i32 %call6, metadata !5910, metadata !DIExpression()), !dbg !5936
  %5 = load %struct.rtx_def*, %struct.rtx_def** %const_rhs, align 8, !dbg !5937
  %call8 = tail call %struct.rtx_def* @simplify_subreg(i32 %new_mode.0, %struct.rtx_def* %5, i32 %bf.clear, i32 %call6) #6, !dbg !5938
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !5913, metadata !DIExpression()), !dbg !5936
  %tobool9 = icmp eq %struct.rtx_def* %call8, null, !dbg !5939
  br i1 %tobool9, label %if.end45, label %land.lhs.true, !dbg !5940

land.lhs.true:                                    ; preds = %if.then
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call8, i64 0, i32 0, !dbg !5941
  %bf.load10 = load i32, i32* %6, align 8, !dbg !5941
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !5941
  %idxprom12 = zext i32 %bf.clear11 to i64, !dbg !5941
  %arrayidx13 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom12, !dbg !5941
  %7 = load i32, i32* %arrayidx13, align 4, !dbg !5941
  %cmp14 = icmp eq i32 %7, 9, !dbg !5941
  br i1 %cmp14, label %if.then16, label %if.end45, !dbg !5942

if.then16:                                        ; preds = %land.lhs.true
  %call18 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv17) #6, !dbg !5943
  %call19 = tail call %struct.rtx_def* @simplify_const_binary_operation(i32 68, i32 %new_mode.0, %struct.rtx_def* nonnull %call8, %struct.rtx_def* %call18) #6, !dbg !5944
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !5913, metadata !DIExpression()), !dbg !5936
  %tobool20 = icmp eq %struct.rtx_def* %call19, null, !dbg !5945
  br i1 %tobool20, label %if.end45, label %land.lhs.true21, !dbg !5947

land.lhs.true21:                                  ; preds = %if.then16
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call19, i64 0, i32 0, !dbg !5948
  %bf.load22 = load i32, i32* %8, align 8, !dbg !5948
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !5948
  %idxprom24 = zext i32 %bf.clear23 to i64, !dbg !5948
  %arrayidx25 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom24, !dbg !5948
  %9 = load i32, i32* %arrayidx25, align 4, !dbg !5948
  %cmp26 = icmp eq i32 %9, 9, !dbg !5948
  br i1 %cmp26, label %if.then28, label %if.end45, !dbg !5949

if.then28:                                        ; preds = %land.lhs.true21
  %call29 = tail call i32 @subreg_lowpart_offset(i32 %read_mode, i32 %new_mode.0) #6, !dbg !5950
  call void @llvm.dbg.value(metadata i32 %call29, metadata !5910, metadata !DIExpression()), !dbg !5936
  %call30 = tail call %struct.rtx_def* @simplify_subreg(i32 %read_mode, %struct.rtx_def* nonnull %call19, i32 %new_mode.0, i32 %call29) #6, !dbg !5952
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !5913, metadata !DIExpression()), !dbg !5936
  %tobool31 = icmp eq %struct.rtx_def* %call30, null, !dbg !5953
  br i1 %tobool31, label %if.end45, label %land.lhs.true32, !dbg !5955

land.lhs.true32:                                  ; preds = %if.then28
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call30, i64 0, i32 0, !dbg !5956
  %bf.load33 = load i32, i32* %10, align 8, !dbg !5956
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !5956
  %idxprom35 = zext i32 %bf.clear34 to i64, !dbg !5956
  %arrayidx36 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom35, !dbg !5956
  %11 = load i32, i32* %arrayidx36, align 4, !dbg !5956
  %cmp37 = icmp eq i32 %11, 9, !dbg !5956
  br i1 %cmp37, label %land.lhs.true39, label %if.end45, !dbg !5957

land.lhs.true39:                                  ; preds = %land.lhs.true32
  %call40 = tail call i32 @rtx_cost(%struct.rtx_def* nonnull %call30, i32 23, i8 zeroext %speed) #6, !dbg !5958
  %cmp41 = icmp slt i32 %call40, 5, !dbg !5959
  br i1 %cmp41, label %cleanup, label %if.end45, !dbg !5960

if.end45:                                         ; preds = %if.then28, %if.then16, %if.then, %land.lhs.true21, %land.lhs.true39, %land.lhs.true32, %land.lhs.true
  br label %cleanup, !dbg !5961

cleanup:                                          ; preds = %land.lhs.true39, %if.end45
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end45 ], [ 1, %land.lhs.true39 ]
  %retval.1 = phi %struct.rtx_def* [ %retval.0, %if.end45 ], [ %call30, %land.lhs.true39 ]
  %cond = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond, label %if.end47, label %cleanup137

if.end47:                                         ; preds = %for.body, %cleanup
  %retval.2 = phi %struct.rtx_def* [ %retval.0, %for.body ], [ %retval.1, %cleanup ]
  br i1 %tobool48, label %if.end50, label %cleanup137, !dbg !5962

if.end50:                                         ; preds = %if.end47
  %12 = load i32*, i32** %2, align 8, !dbg !5963
  %bf.load70 = load i32, i32* %12, align 8, !dbg !5963
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !5963
  %idxprom72 = zext i32 %bf.clear71 to i64, !dbg !5963
  %arrayidx73 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom72, !dbg !5963
  %13 = load i32, i32* %arrayidx73, align 4, !dbg !5963
  %cmp74 = icmp eq i32 %13, 9, !dbg !5963
  br i1 %cmp74, label %if.end80, label %land.lhs.true76, !dbg !5964

land.lhs.true76:                                  ; preds = %if.end50
  %call77 = tail call zeroext i8 @ix86_modes_tieable_p(i32 %new_mode.0, i32 %bf.clear) #6, !dbg !5965
  %tobool78 = icmp eq i8 %call77, 0, !dbg !5965
  br i1 %tobool78, label %cleanup137, label %if.end80, !dbg !5966

if.end80:                                         ; preds = %land.lhs.true76, %if.end50
  %call81 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %new_mode.0) #6, !dbg !5967
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call81, metadata !5905, metadata !DIExpression()), !dbg !5968
  tail call void @start_sequence() #6, !dbg !5969
  %call83 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv17) #6, !dbg !5970
  %call84 = tail call %struct.rtx_def* @expand_binop(i32 %new_mode.0, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 45), %struct.rtx_def* %call81, %struct.rtx_def* %call83, %struct.rtx_def* %call81, i32 1, i32 0) #6, !dbg !5971
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !5901, metadata !DIExpression()), !dbg !5968
  %call85 = tail call %struct.rtx_def* @get_insns() #6, !dbg !5972
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call85, metadata !5906, metadata !DIExpression()), !dbg !5968
  tail call void @end_sequence() #6, !dbg !5973
  %cmp86 = icmp ne %struct.rtx_def* %call84, %call81, !dbg !5974
  %cmp88 = icmp eq %struct.rtx_def* %call85, null, !dbg !5976
  %or.cond = or i1 %cmp86, %cmp88, !dbg !5977
  br i1 %or.cond, label %cleanup137, label %for.cond92.preheader, !dbg !5977

for.cond92.preheader:                             ; preds = %if.end80
  br label %for.cond92, !dbg !5978

for.cond92:                                       ; preds = %for.cond92.preheader, %for.inc
  %insn.0 = phi %struct.rtx_def* [ %18, %for.inc ], [ %call85, %for.cond92.preheader ], !dbg !5980
  %cost.0 = phi i32 [ %cost.1, %for.inc ], [ 0, %for.cond92.preheader ], !dbg !5968
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !5909, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5907, metadata !DIExpression()), !dbg !5968
  %cmp93 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5981
  br i1 %cmp93, label %for.end, label %for.body95, !dbg !5978

for.body95:                                       ; preds = %for.cond92
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5983
  %bf.load96 = load i32, i32* %14, align 8, !dbg !5983
  %bf.clear97 = and i32 %bf.load96, 65535, !dbg !5983
  %cmp98 = icmp eq i32 %bf.clear97, 8, !dbg !5983
  br i1 %cmp98, label %if.then115, label %lor.lhs.false100, !dbg !5983

lor.lhs.false100:                                 ; preds = %for.body95
  %cmp103 = icmp eq i32 %bf.clear97, 7, !dbg !5983
  br i1 %cmp103, label %if.then115, label %lor.lhs.false105, !dbg !5983

lor.lhs.false105:                                 ; preds = %lor.lhs.false100
  %cmp108 = icmp eq i32 %bf.clear97, 9, !dbg !5983
  br i1 %cmp108, label %if.then115, label %lor.lhs.false110, !dbg !5983

lor.lhs.false110:                                 ; preds = %lor.lhs.false105
  %cmp113 = icmp eq i32 %bf.clear97, 10, !dbg !5983
  br i1 %cmp113, label %if.then115, label %for.inc, !dbg !5985

if.then115:                                       ; preds = %lor.lhs.false110, %lor.lhs.false105, %lor.lhs.false100, %for.body95
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !5986
  %15 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5986
  %rt_rtx = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !5986
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5986
  %call117 = tail call i32 @insn_rtx_cost(%struct.rtx_def* %16, i8 zeroext %speed) #6, !dbg !5987
  %add = add nsw i32 %cost.0, %call117, !dbg !5988
  call void @llvm.dbg.value(metadata i32 %add, metadata !5909, metadata !DIExpression()), !dbg !5968
  br label %for.inc, !dbg !5989

for.inc:                                          ; preds = %lor.lhs.false110, %if.then115
  %cost.1 = phi i32 [ %add, %if.then115 ], [ %cost.0, %lor.lhs.false110 ], !dbg !5968
  call void @llvm.dbg.value(metadata i32 %cost.1, metadata !5909, metadata !DIExpression()), !dbg !5968
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5990
  %rt_rtx122 = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !5990
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx122, align 8, !dbg !5990
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !5907, metadata !DIExpression()), !dbg !5968
  br label %for.cond92, !dbg !5991, !llvm.loop !5992

for.end:                                          ; preds = %for.cond92
  %cost.0.lcssa = phi i32 [ %cost.0, %for.cond92 ], !dbg !5968
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !5909, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !5909, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !5909, metadata !DIExpression()), !dbg !5968
  %cmp123 = icmp sgt i32 %cost.0.lcssa, 4, !dbg !5994
  br i1 %cmp123, label %cleanup137, label %if.end126, !dbg !5996

if.end126:                                        ; preds = %for.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !5997
  %call128 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %19) #6, !dbg !5998
  %call129 = tail call %struct.rtx_def* @extract_low_bits(i32 %new_mode.0, i32 %bf.clear, %struct.rtx_def* %call128) #6, !dbg !5999
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call129, metadata !5908, metadata !DIExpression()), !dbg !5968
  %cmp130 = icmp eq %struct.rtx_def* %call129, null, !dbg !6000
  br i1 %cmp130, label %cleanup137, label %if.end133, !dbg !6002

if.end133:                                        ; preds = %if.end126
  %call134 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call81, %struct.rtx_def* nonnull %call129) #6, !dbg !6003
  %call135 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call85) #6, !dbg !6004
  %call136 = tail call %struct.rtx_def* @extract_low_bits(i32 %read_mode, i32 %new_mode.0, %struct.rtx_def* %call81) #6, !dbg !6005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call136, metadata !5900, metadata !DIExpression()), !dbg !5914
  br label %cleanup137, !dbg !6006

cleanup137:                                       ; preds = %land.lhs.true76, %if.end47, %if.end126, %for.end, %if.end80, %cleanup, %if.end133
  %read_reg.1 = phi %struct.rtx_def* [ %read_reg.0, %cleanup ], [ %call136, %if.end133 ], [ %read_reg.0, %if.end47 ], [ %read_reg.0, %land.lhs.true76 ], [ %read_reg.0, %if.end80 ], [ %read_reg.0, %for.end ], [ %read_reg.0, %if.end126 ], !dbg !5914
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 2, %if.end133 ], [ 1, %if.end47 ], [ 4, %land.lhs.true76 ], [ 4, %if.end80 ], [ 4, %for.end ], [ 4, %if.end126 ]
  %retval.3 = phi %struct.rtx_def* [ %retval.1, %cleanup ], [ %retval.2, %if.end133 ], [ null, %if.end47 ], [ %retval.2, %land.lhs.true76 ], [ %retval.2, %if.end80 ], [ %retval.2, %for.end ], [ %retval.2, %if.end126 ], !dbg !5968
  call void @llvm.dbg.value(metadata %struct.rtx_def* %read_reg.1, metadata !5900, metadata !DIExpression()), !dbg !5914
  switch i32 %cleanup.dest.slot.1, label %cleanup149.loopexit [
    i32 4, label %for.inc144
    i32 2, label %for.end148
  ]

for.inc144:                                       ; preds = %cleanup137
  %arrayidx146 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !6007
  %20 = load i8, i8* %arrayidx146, align 1, !dbg !6007
  %conv147 = zext i8 %20 to i32, !dbg !6007
  call void @llvm.dbg.value(metadata i32 %conv147, metadata !5899, metadata !DIExpression()), !dbg !5914
  br label %for.cond, !dbg !6008, !llvm.loop !6009

for.end148:                                       ; preds = %cleanup137, %for.cond
  %read_reg.2 = phi %struct.rtx_def* [ %read_reg.1, %cleanup137 ], [ %read_reg.0, %for.cond ], !dbg !5928
  call void @llvm.dbg.value(metadata %struct.rtx_def* %read_reg.2, metadata !5900, metadata !DIExpression()), !dbg !5914
  br label %cleanup149, !dbg !6011

cleanup149.loopexit:                              ; preds = %cleanup137
  %retval.3.lcssa = phi %struct.rtx_def* [ %retval.3, %cleanup137 ], !dbg !5968
  br label %cleanup149, !dbg !6012

cleanup149:                                       ; preds = %cleanup149.loopexit, %for.end148
  %retval.4 = phi %struct.rtx_def* [ %read_reg.2, %for.end148 ], [ %retval.3.lcssa, %cleanup149.loopexit ], !dbg !5914
  ret %struct.rtx_def* %retval.4, !dbg !6012
}

declare dso_local zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local i32 @int_mode_for_mode(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @extract_low_bits(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #2

declare dso_local i64 @trunc_int_for_mode(i64, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @smallest_mode_for_size(i32, i32) local_unnamed_addr #2

declare dso_local i32 @subreg_lowpart_offset(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @simplify_const_binary_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @rtx_cost(%struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @ix86_modes_tieable_p(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @expand_binop(i32, %struct.optab_d*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local i32 @insn_rtx_cost(%struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !6013 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6017, metadata !DIExpression()), !dbg !6018
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6019
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6019
  %0 = load i32, i32* %rt_uint, align 8, !dbg !6019
  ret i32 %0, !dbg !6020
}

declare dso_local void @init_cumulative_args(%struct.ix86_args*, %union.tree_node*, %struct.rtx_def*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @function_arg(%struct.ix86_args*, i32, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @function_arg_advance(%struct.ix86_args*, i32, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_rhs_from_active_local_stores() unnamed_addr #5 !dbg !6021 {
entry:
  br label %while.cond, !dbg !6026

while.cond:                                       ; preds = %while.end, %entry
  %ptr.0.in = phi %struct.insn_info** [ @active_local_stores, %entry ], [ %next_local_store, %while.end ]
  %ptr.0 = load %struct.insn_info*, %struct.insn_info** %ptr.0.in, align 8, !dbg !6027
  call void @llvm.dbg.value(metadata %struct.insn_info* %ptr.0, metadata !6023, metadata !DIExpression()), !dbg !6027
  %tobool = icmp eq %struct.insn_info* %ptr.0, null, !dbg !6026
  br i1 %tobool, label %while.end4, label %while.body, !dbg !6026

while.body:                                       ; preds = %while.cond
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 6, !dbg !6028
  br label %while.cond1, !dbg !6029

while.cond1:                                      ; preds = %while.body3, %while.body
  %store_info.0.in = phi %struct.store_info** [ %store_rec, %while.body ], [ %next, %while.body3 ]
  %store_info.0 = load %struct.store_info*, %struct.store_info** %store_info.0.in, align 8, !dbg !6030
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.0, metadata !6024, metadata !DIExpression()), !dbg !6030
  %is_set = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 0, !dbg !6031
  %0 = load i8, i8* %is_set, align 8, !dbg !6031
  %tobool2 = icmp eq i8 %0, 0, !dbg !6032
  br i1 %tobool2, label %while.body3, label %while.end, !dbg !6029

while.body3:                                      ; preds = %while.cond1
  %next = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0, i64 0, i32 10, !dbg !6033
  br label %while.cond1, !dbg !6029, !llvm.loop !6034

while.end:                                        ; preds = %while.cond1
  %store_info.0.lcssa = phi %struct.store_info* [ %store_info.0, %while.cond1 ], !dbg !6030
  %rhs = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0.lcssa, i64 0, i32 11, !dbg !6035
  store %struct.rtx_def* null, %struct.rtx_def** %rhs, align 8, !dbg !6036
  %const_rhs = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.0.lcssa, i64 0, i32 12, !dbg !6037
  store %struct.rtx_def* null, %struct.rtx_def** %const_rhs, align 8, !dbg !6038
  %next_local_store = getelementptr inbounds %struct.insn_info, %struct.insn_info* %ptr.0, i64 0, i32 9, !dbg !6039
  br label %while.cond, !dbg !6026, !llvm.loop !6040

while.end4:                                       ; preds = %while.cond
  ret void, !dbg !6042
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_usage_bits(%struct.group_info* %group, i64 %offset, i64 %width) unnamed_addr #5 !dbg !6043 {
entry:
  call void @llvm.dbg.value(metadata %struct.group_info* %group, metadata !6047, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.value(metadata i64 %offset, metadata !6048, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.value(metadata i64 %width, metadata !6049, metadata !DIExpression()), !dbg !6058
  %cmp = icmp sgt i64 %offset, -65536, !dbg !6059
  %add = add nsw i64 %offset, %width, !dbg !6060
  %cmp1 = icmp slt i64 %add, 65536, !dbg !6061
  %or.cond = and i1 %cmp, %cmp1, !dbg !6062
  br i1 %or.cond, label %for.cond.preheader, label %if.end27, !dbg !6062

for.cond.preheader:                               ; preds = %entry
  %store1_p = getelementptr inbounds %struct.group_info, %struct.group_info* %group, i64 0, i32 7, !dbg !6063
  %store2_p = getelementptr inbounds %struct.group_info, %struct.group_info* %group, i64 0, i32 9, !dbg !6063
  %store1_n = getelementptr inbounds %struct.group_info, %struct.group_info* %group, i64 0, i32 6, !dbg !6066
  %store2_n = getelementptr inbounds %struct.group_info, %struct.group_info* %group, i64 0, i32 8, !dbg !6066
  %offset_map_size_p = getelementptr inbounds %struct.group_info, %struct.group_info* %group, i64 0, i32 14, !dbg !6068
  %offset_map_size_n = getelementptr inbounds %struct.group_info, %struct.group_info* %group, i64 0, i32 13, !dbg !6074
  br label %for.cond, !dbg !6077

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i64 [ %inc, %for.inc ], [ %offset, %for.cond.preheader ], !dbg !6078
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6050, metadata !DIExpression()), !dbg !6058
  %cmp3 = icmp slt i64 %i.0, %add, !dbg !6079
  br i1 %cmp3, label %for.body, label %if.end27.loopexit, !dbg !6077

for.body:                                         ; preds = %for.cond
  %cmp4 = icmp slt i64 %i.0, 0, !dbg !6080
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !6081

if.then5:                                         ; preds = %for.body
  %sub = sub nsw i64 0, %i.0, !dbg !6082
  br label %if.end, !dbg !6083

if.else:                                          ; preds = %for.body
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %store1.0.in = phi %struct.bitmap_head_def** [ %store1_n, %if.then5 ], [ %store1_p, %if.else ]
  %store2.0.in = phi %struct.bitmap_head_def** [ %store2_n, %if.then5 ], [ %store2_p, %if.else ]
  %ai.0.in = phi i64 [ %sub, %if.then5 ], [ %i.0, %if.else ]
  %ai.0 = trunc i64 %ai.0.in to i32, !dbg !6084
  %store2.0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store2.0.in, align 8, !dbg !6084
  %store1.0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %store1.0.in, align 8, !dbg !6084
  call void @llvm.dbg.value(metadata i32 %ai.0, metadata !6057, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %store2.0, metadata !6056, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %store1.0, metadata !6051, metadata !DIExpression()), !dbg !6085
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %store1.0, i32 %ai.0) #6, !dbg !6086
  %tobool = icmp eq i32 %call, 0, !dbg !6086
  br i1 %tobool, label %if.else9, label %if.then7, !dbg !6087

if.then7:                                         ; preds = %if.end
  %call8 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %store2.0, i32 %ai.0) #6, !dbg !6088
  br label %for.inc, !dbg !6088

if.else9:                                         ; preds = %if.end
  %call10 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %store1.0, i32 %ai.0) #6, !dbg !6089
  br i1 %cmp4, label %if.then13, label %if.else19, !dbg !6090

if.then13:                                        ; preds = %if.else9
  %0 = load i32, i32* %offset_map_size_n, align 8, !dbg !6091
  %cmp14 = icmp slt i32 %0, %ai.0, !dbg !6092
  br i1 %cmp14, label %if.then16, label %for.inc, !dbg !6093

if.then16:                                        ; preds = %if.then13
  store i32 %ai.0, i32* %offset_map_size_n, align 8, !dbg !6094
  br label %for.inc, !dbg !6095

if.else19:                                        ; preds = %if.else9
  %1 = load i32, i32* %offset_map_size_p, align 4, !dbg !6096
  %cmp20 = icmp slt i32 %1, %ai.0, !dbg !6097
  br i1 %cmp20, label %if.then22, label %for.inc, !dbg !6098

if.then22:                                        ; preds = %if.else19
  store i32 %ai.0, i32* %offset_map_size_p, align 4, !dbg !6099
  br label %for.inc, !dbg !6100

for.inc:                                          ; preds = %if.then7, %if.else19, %if.then22, %if.then13, %if.then16
  %inc = add nsw i64 %i.0, 1, !dbg !6101
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6050, metadata !DIExpression()), !dbg !6058
  br label %for.cond, !dbg !6102, !llvm.loop !6103

if.end27.loopexit:                                ; preds = %for.cond
  br label %if.end27, !dbg !6105

if.end27:                                         ; preds = %if.end27.loopexit, %entry
  ret void, !dbg !6105
}

declare dso_local %struct.rtx_def* @find_base_term(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_all_positions_unneeded(%struct.store_info* %s_info) unnamed_addr #0 !dbg !6106 {
entry:
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info, metadata !6110, metadata !DIExpression()), !dbg !6115
  %is_large = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 1, !dbg !6116
  %0 = load i8, i8* %is_large, align 1, !dbg !6116
  %tobool = icmp eq i8 %0, 0, !dbg !6116
  br i1 %tobool, label %if.else, label %if.then, !dbg !6117

if.then:                                          ; preds = %entry
  %end1 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 8, !dbg !6118
  %1 = load i64, i64* %end1, align 8, !dbg !6118
  %begin = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 7, !dbg !6119
  %2 = load i64, i64* %begin, align 8, !dbg !6119
  %sub = sub nsw i64 %1, %2, !dbg !6120
  %conv = trunc i64 %sub to i32, !dbg !6121
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6114, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata i32 0, metadata !6111, metadata !DIExpression()), !dbg !6122
  %bmap = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 9, i32 0, i32 0, !dbg !6123
  br label %for.cond, !dbg !6126

for.cond:                                         ; preds = %for.body, %if.then
  %pos.0 = phi i32 [ 0, %if.then ], [ %inc, %for.body ], !dbg !6127
  call void @llvm.dbg.value(metadata i32 %pos.0, metadata !6111, metadata !DIExpression()), !dbg !6122
  %cmp = icmp slt i32 %pos.0, %conv, !dbg !6128
  br i1 %cmp, label %for.body, label %for.end, !dbg !6129

for.body:                                         ; preds = %for.cond
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %bmap, align 8, !dbg !6130
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %pos.0) #6, !dbg !6131
  %inc = add nuw nsw i32 %pos.0, 1, !dbg !6132
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6111, metadata !DIExpression()), !dbg !6122
  br label %for.cond, !dbg !6133, !llvm.loop !6134

for.end:                                          ; preds = %for.cond
  %count = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 9, i32 0, i32 1, !dbg !6136
  store i32 %conv, i32* %count, align 8, !dbg !6137
  br label %if.end, !dbg !6138

if.else:                                          ; preds = %entry
  %positions_needed5 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 9, !dbg !6139
  %small_bitmask = bitcast %union.anon.0* %positions_needed5 to i64*, !dbg !6140
  store i64 0, i64* %small_bitmask, align 8, !dbg !6141
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  ret void, !dbg !6142
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_position_unneeded(%struct.store_info* %s_info, i32 %pos) unnamed_addr #0 !dbg !6143 {
entry:
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info, metadata !6147, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata i32 %pos, metadata !6148, metadata !DIExpression()), !dbg !6149
  %is_large = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 1, !dbg !6150
  %0 = load i8, i8* %is_large, align 1, !dbg !6150
  %tobool = icmp eq i8 %0, 0, !dbg !6150
  br i1 %tobool, label %if.else, label %if.then, !dbg !6152

if.then:                                          ; preds = %entry
  %bmap = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 9, i32 0, i32 0, !dbg !6153
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %bmap, align 8, !dbg !6153
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %1, i32 %pos) #6, !dbg !6156
  %tobool1 = icmp eq i32 %call, 0, !dbg !6156
  br i1 %tobool1, label %if.then2, label %if.end10, !dbg !6157

if.then2:                                         ; preds = %if.then
  %count = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 9, i32 0, i32 1, !dbg !6158
  %2 = load i32, i32* %count, align 8, !dbg !6160
  %inc = add nsw i32 %2, 1, !dbg !6160
  store i32 %inc, i32* %count, align 8, !dbg !6160
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %bmap, align 8, !dbg !6161
  %call8 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %pos) #6, !dbg !6162
  br label %if.end10, !dbg !6163

if.else:                                          ; preds = %entry
  %sh_prom = zext i32 %pos to i64, !dbg !6164
  %shl = shl i64 1, %sh_prom, !dbg !6164
  %neg = xor i64 %shl, -1, !dbg !6165
  %positions_needed9 = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 9, !dbg !6166
  %small_bitmask = bitcast %union.anon.0* %positions_needed9 to i64*, !dbg !6167
  %4 = load i64, i64* %small_bitmask, align 8, !dbg !6168
  %and = and i64 %4, %neg, !dbg !6168
  store i64 %and, i64* %small_bitmask, align 8, !dbg !6168
  br label %if.end10

if.end10:                                         ; preds = %if.then, %if.then2, %if.else
  ret void, !dbg !6169
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @any_positions_needed_p(%struct.store_info* %s_info) unnamed_addr #0 !dbg !6170 {
entry:
  call void @llvm.dbg.value(metadata %struct.store_info* %s_info, metadata !6174, metadata !DIExpression()), !dbg !6175
  %is_large = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 1, !dbg !6176
  %0 = load i8, i8* %is_large, align 1, !dbg !6176
  %tobool = icmp eq i8 %0, 0, !dbg !6176
  br i1 %tobool, label %if.else, label %if.then, !dbg !6178

if.then:                                          ; preds = %entry
  %count = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 9, i32 0, i32 1, !dbg !6179
  %1 = load i32, i32* %count, align 8, !dbg !6179
  %conv = sext i32 %1 to i64, !dbg !6180
  %end = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 8, !dbg !6181
  %2 = load i64, i64* %end, align 8, !dbg !6181
  %begin = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 7, !dbg !6182
  %3 = load i64, i64* %begin, align 8, !dbg !6182
  %sub = sub nsw i64 %2, %3, !dbg !6183
  %cmp = icmp sgt i64 %sub, %conv, !dbg !6184
  br label %return, !dbg !6185

if.else:                                          ; preds = %entry
  %positions_needed = getelementptr inbounds %struct.store_info, %struct.store_info* %s_info, i64 0, i32 9, !dbg !6186
  %small_bitmask = bitcast %union.anon.0* %positions_needed to i64*, !dbg !6187
  %4 = load i64, i64* %small_bitmask, align 8, !dbg !6187
  %cmp4 = icmp ne i64 %4, 0, !dbg !6188
  br label %return, !dbg !6189

return:                                           ; preds = %if.else, %if.then
  %retval.0.in = phi i1 [ %cmp, %if.then ], [ %cmp4, %if.else ]
  %retval.0 = zext i1 %retval.0.in to i8, !dbg !6186
  ret i8 %retval.0, !dbg !6190
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6191 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6195, metadata !DIExpression()), !dbg !6196
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !6197
  %tobool = icmp eq i8 %call, 0, !dbg !6197
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6197

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6197
  br label %cond.end, !dbg !6197

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6198
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6198
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6198
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6198

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6198
  br label %cond.end5, !dbg !6198

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6198
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !6198
  ret %struct.edge_def* %call7, !dbg !6199
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6200 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6204, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6205, metadata !DIExpression()), !dbg !6206
  br label %land.end, !dbg !6207

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6207
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6207
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6207
  ret %struct.edge_def* %0, !dbg !6207
}

; Function Attrs: nounwind uwtable
define internal fastcc void @check_for_inc_dec(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !6208 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6212, metadata !DIExpression()), !dbg !6214
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6212, metadata !DIExpression()), !dbg !6214
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 2, %struct.rtx_def* null) #6, !dbg !6215
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6213, metadata !DIExpression()), !dbg !6214
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !6216
  br i1 %tobool, label %if.end, label %if.then, !dbg !6218

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.rtx_def* %insn to i8*, !dbg !6218
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn.addr, metadata !6212, metadata !DIExpression(DW_OP_deref)), !dbg !6214
  %call1 = call i32 @for_each_rtx(%struct.rtx_def** nonnull %insn.addr, i32 (%struct.rtx_def**, i8*)* nonnull @replace_inc_dec_mem, i8* %0) #6, !dbg !6219
  br label %if.end, !dbg !6219

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6220
}

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @replace_inc_dec_mem(%struct.rtx_def** %r, i8* %d) #5 !dbg !6221 {
entry:
  %data = alloca %struct.insn_size, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def** %r, metadata !6223, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.value(metadata i8* %d, metadata !6224, metadata !DIExpression()), !dbg !6229
  %0 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !6230
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !6225, metadata !DIExpression()), !dbg !6229
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !6231
  br i1 %cmp, label %cleanup, label %land.lhs.true, !dbg !6232

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !6233
  %bf.load = load i32, i32* %1, align 8, !dbg !6233
  %bf.clear = and i32 %bf.load, 65535, !dbg !6233
  %cmp1 = icmp eq i32 %bf.clear, 43, !dbg !6233
  br i1 %cmp1, label %if.then, label %cleanup, !dbg !6234

if.then:                                          ; preds = %land.lhs.true
  %2 = bitcast %struct.insn_size* %data to i8*, !dbg !6235
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #7, !dbg !6235
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6236
  %bf.clear3 = and i32 %bf.lshr, 255, !dbg !6236
  %idxprom = zext i32 %bf.clear3 to i64, !dbg !6236
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6236
  %3 = load i8, i8* %arrayidx, align 1, !dbg !6236
  %conv4 = zext i8 %3 to i32, !dbg !6236
  %size = getelementptr inbounds %struct.insn_size, %struct.insn_size* %data, i64 0, i32 0, !dbg !6237
  store i32 %conv4, i32* %size, align 8, !dbg !6238
  %insn = getelementptr inbounds %struct.insn_size, %struct.insn_size* %data, i64 0, i32 1, !dbg !6239
  %4 = bitcast %struct.rtx_def** %insn to i8**, !dbg !6240
  store i8* %d, i8** %4, align 8, !dbg !6240
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6241
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !6241
  %call = call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx, i32 (%struct.rtx_def**, i8*)* nonnull @replace_inc_dec, i8* nonnull %2) #6, !dbg !6242
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #7, !dbg !6243
  br label %cleanup

cleanup:                                          ; preds = %entry, %land.lhs.true, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !6229
  ret i32 %retval.0, !dbg !6244
}

; Function Attrs: nounwind uwtable
define internal i32 @replace_inc_dec(%struct.rtx_def** %r, i8* %d) #5 !dbg !6245 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %r, metadata !6247, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8* %d, metadata !6248, metadata !DIExpression()), !dbg !6261
  %0 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !6262
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !6249, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8* %d, metadata !6250, metadata !DIExpression()), !dbg !6261
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !6263
  %bf.load = load i32, i32* %1, align 8, !dbg !6263
  %trunc = trunc i32 %bf.load to i16, !dbg !6264
  switch i16 %trunc, label %cleanup [
    i16 75, label %sw.bb
    i16 77, label %sw.bb
    i16 74, label %sw.bb9
    i16 76, label %sw.bb9
    i16 78, label %sw.bb29
    i16 79, label %sw.bb29
  ], !dbg !6264

sw.bb:                                            ; preds = %entry, %entry
  call void @llvm.dbg.value(metadata i8* %d, metadata !6250, metadata !DIExpression()), !dbg !6261
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6265
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6265
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6265
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6251, metadata !DIExpression()), !dbg !6266
  %size = bitcast i8* %d to i32*, !dbg !6267
  %3 = load i32, i32* %size, align 8, !dbg !6267
  %conv = sext i32 %3 to i64, !dbg !6268
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !6269
  %bf.load1 = load i32, i32* %4, align 8, !dbg !6269
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !6269
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !6269
  %call = tail call %struct.rtx_def* @gen_int_mode(i64 %conv, i32 %bf.clear2) #6, !dbg !6270
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6254, metadata !DIExpression()), !dbg !6266
  %bf.load3 = load i32, i32* %4, align 8, !dbg !6271
  %bf.lshr4 = lshr i32 %bf.load3, 16, !dbg !6271
  %bf.clear5 = and i32 %bf.lshr4, 255, !dbg !6271
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear5, %struct.rtx_def* %2, %struct.rtx_def* %call) #6, !dbg !6271
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call6) #6, !dbg !6271
  %insn = getelementptr inbounds i8, i8* %d, i64 8, !dbg !6272
  %5 = bitcast i8* %insn to %struct.rtx_def**, !dbg !6272
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !6272
  %call8 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call7, %struct.rtx_def* %6) #6, !dbg !6273
  br label %cleanup

sw.bb9:                                           ; preds = %entry, %entry
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6274
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !6274
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !6274
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !6255, metadata !DIExpression()), !dbg !6275
  %size16 = bitcast i8* %d to i32*, !dbg !6276
  %8 = load i32, i32* %size16, align 8, !dbg !6276
  %sub = sub nsw i32 0, %8, !dbg !6277
  %conv17 = sext i32 %sub to i64, !dbg !6277
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !6278
  %bf.load18 = load i32, i32* %9, align 8, !dbg !6278
  %bf.lshr19 = lshr i32 %bf.load18, 16, !dbg !6278
  %bf.clear20 = and i32 %bf.lshr19, 255, !dbg !6278
  %call21 = tail call %struct.rtx_def* @gen_int_mode(i64 %conv17, i32 %bf.clear20) #6, !dbg !6279
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !6257, metadata !DIExpression()), !dbg !6275
  %bf.load22 = load i32, i32* %9, align 8, !dbg !6280
  %bf.lshr23 = lshr i32 %bf.load22, 16, !dbg !6280
  %bf.clear24 = and i32 %bf.lshr23, 255, !dbg !6280
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear24, %struct.rtx_def* %7, %struct.rtx_def* %call21) #6, !dbg !6280
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %7, %struct.rtx_def* %call25) #6, !dbg !6280
  %insn27 = getelementptr inbounds i8, i8* %d, i64 8, !dbg !6281
  %10 = bitcast i8* %insn27 to %struct.rtx_def**, !dbg !6281
  %11 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8, !dbg !6281
  %call28 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call26, %struct.rtx_def* %11) #6, !dbg !6282
  br label %cleanup

sw.bb29:                                          ; preds = %entry, %entry
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6283
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !6283
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !6283
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !6258, metadata !DIExpression()), !dbg !6284
  %arrayidx37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6285
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !6285
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !6285
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !6260, metadata !DIExpression()), !dbg !6284
  %call39 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %13, %struct.rtx_def* %12) #6, !dbg !6286
  %insn40 = getelementptr inbounds i8, i8* %d, i64 8, !dbg !6287
  %14 = bitcast i8* %insn40 to %struct.rtx_def**, !dbg !6287
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8, !dbg !6287
  %call41 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call39, %struct.rtx_def* %15) #6, !dbg !6288
  br label %cleanup

cleanup:                                          ; preds = %entry, %sw.bb29, %sw.bb9, %sw.bb
  %retval.0 = phi i32 [ -1, %sw.bb29 ], [ -1, %sw.bb9 ], [ -1, %sw.bb ], [ 0, %entry ], !dbg !6289
  ret i32 %retval.0, !dbg !6290
}

declare dso_local %struct.rtx_def* @gen_int_mode(i64, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_group_info_t_base_iterate(%struct.VEC_group_info_t_base* %vec_, i32 %ix_, %struct.group_info** %ptr) unnamed_addr #0 !dbg !6291 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_group_info_t_base* %vec_, metadata !6295, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6296, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata %struct.group_info** %ptr, metadata !6297, metadata !DIExpression()), !dbg !6298
  %tobool = icmp eq %struct.VEC_group_info_t_base* %vec_, null, !dbg !6299
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6299

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_group_info_t_base, %struct.VEC_group_info_t_base* %vec_, i64 0, i32 0, !dbg !6299
  %0 = load i32, i32* %num, align 8, !dbg !6299
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6299
  br i1 %cmp, label %if.then, label %if.else, !dbg !6301

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6302
  %arrayidx = getelementptr inbounds %struct.VEC_group_info_t_base, %struct.VEC_group_info_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6302
  %1 = load %struct.group_info*, %struct.group_info** %arrayidx, align 8, !dbg !6302
  br label %return, !dbg !6302

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6304

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.group_info* [ null, %if.else ], [ %1, %if.then ], !dbg !6306
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6306
  store %struct.group_info* %storemerge, %struct.group_info** %ptr, align 8, !dbg !6306
  ret i32 %retval.0, !dbg !6301
}

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i64 @bitmap_count_bits(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @bitmap_print(%struct._IO_FILE*, %struct.bitmap_head_def*, i8*, i8*) local_unnamed_addr #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !6307 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6316, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !6317, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata i32 0, metadata !6318, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6319, metadata !DIExpression()), !dbg !6320
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !6321
  %1 = load i64, i64* %0, align 8, !dbg !6321
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !6322
  store i64 %1, i64* %2, align 8, !dbg !6322
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !6323
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !6324
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !6325
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !6328
  br label %while.body, !dbg !6328

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !6329
  br i1 %tobool, label %if.then, label %if.end, !dbg !6330

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !6331
  br label %while.end, !dbg !6333

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !6334

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !6328, !llvm.loop !6335

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !6337

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !6337
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !6339
  %7 = load i32, i32* %indx9, align 8, !dbg !6339
  %cmp11 = icmp eq i32 %7, 0, !dbg !6340
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !6341

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !6342
  %8 = load i32, i32* %indx14, align 8, !dbg !6342
  %mul = shl i32 %8, 7, !dbg !6343
  call void @llvm.dbg.value(metadata i32 %mul, metadata !6318, metadata !DIExpression()), !dbg !6320
  br label %if.end15, !dbg !6344

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !6318, metadata !DIExpression()), !dbg !6320
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !6345
  store i32 0, i32* %word_no, align 8, !dbg !6346
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !6347
  %9 = load i64, i64* %arrayidx, align 8, !dbg !6347
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6348
  store i64 %9, i64* %bits21, align 8, !dbg !6349
  %tobool23 = icmp eq i64 %9, 0, !dbg !6350
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !6350
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %add, metadata !6318, metadata !DIExpression()), !dbg !6320
  store i32 %add, i32* %bit_no, align 4, !dbg !6352
  ret void, !dbg !6353
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !6354 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6358, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6359, metadata !DIExpression()), !dbg !6363
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6364
  %0 = load i64, i64* %bits, align 8, !dbg !6364
  %tobool = icmp eq i64 %0, 0, !dbg !6365
  br i1 %tobool, label %if.end, label %next_bit, !dbg !6366

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !6367
  br label %next_bit, !dbg !6370

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !6360), !dbg !6371
  br label %while.cond, !dbg !6370

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !6372
  %and = and i64 %2, 1, !dbg !6373
  %tobool2 = icmp eq i64 %and, 0, !dbg !6374
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !6370

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !6375
  store i64 %shr, i64* %bits, align 8, !dbg !6375
  %3 = load i32, i32* %bit_no, align 4, !dbg !6377
  %add = add i32 %3, 1, !dbg !6377
  store i32 %add, i32* %bit_no, align 4, !dbg !6377
  %.pre = load i64, i64* %bits, align 8, !dbg !6372
  br label %while.cond, !dbg !6370, !llvm.loop !6378

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !6380
  %sub = add i32 %4, 63, !dbg !6381
  %div = and i32 %sub, -64, !dbg !6382
  store i32 %div, i32* %bit_no, align 4, !dbg !6383
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !6384
  %5 = load i32, i32* %word_no, align 8, !dbg !6385
  %inc = add i32 %5, 1, !dbg !6385
  store i32 %inc, i32* %word_no, align 8, !dbg !6385
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !6386
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !6386
  br label %while.body6, !dbg !6387

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !6388

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !6389
  %cmp = icmp eq i32 %8, 2, !dbg !6390
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !6386
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !6388

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !6367
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !6367
  %10 = load i64, i64* %arrayidx, align 8, !dbg !6367
  store i64 %10, i64* %bits, align 8, !dbg !6391
  %tobool14 = icmp eq i64 %10, 0, !dbg !6392
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !6394

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !6395
  %add17 = add i32 %11, 64, !dbg !6395
  store i32 %add17, i32* %bit_no, align 4, !dbg !6395
  %12 = load i32, i32* %word_no, align 8, !dbg !6396
  %inc19 = add i32 %12, 1, !dbg !6396
  store i32 %inc19, i32* %word_no, align 8, !dbg !6396
  br label %while.cond7, !dbg !6388, !llvm.loop !6397

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !6386
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !6399
  %14 = load i64, i64* %13, align 8, !dbg !6399
  store i64 %14, i64* %6, align 8, !dbg !6400
  %tobool24 = icmp eq i64 %14, 0, !dbg !6401
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !6403

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !6403
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !6404
  %16 = load i32, i32* %indx, align 8, !dbg !6404
  %mul28 = shl i32 %16, 7, !dbg !6405
  store i32 %mul28, i32* %bit_no, align 4, !dbg !6406
  store i32 0, i32* %word_no, align 8, !dbg !6407
  br label %while.body6, !dbg !6387, !llvm.loop !6408

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !6410

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !6410

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !6363
  ret i8 %retval.0, !dbg !6410
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !6411 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6415, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6416, metadata !DIExpression()), !dbg !6417
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6418
  %0 = load i64, i64* %bits, align 8, !dbg !6419
  %shr = lshr i64 %0, 1, !dbg !6419
  store i64 %shr, i64* %bits, align 8, !dbg !6419
  %1 = load i32, i32* %bit_no, align 4, !dbg !6420
  %add = add i32 %1, 1, !dbg !6420
  store i32 %add, i32* %bit_no, align 4, !dbg !6420
  ret void, !dbg !6421
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step3_exit_block_scan(%struct.bb_info* %bb_info) unnamed_addr #5 !dbg !6422 {
entry:
  %group = alloca %struct.group_info*, align 8
  call void @llvm.dbg.value(metadata %struct.bb_info* %bb_info, metadata !6424, metadata !DIExpression()), !dbg !6429
  %0 = load i8, i8* @stores_off_frame_dead_at_return, align 1, !dbg !6430
  %tobool = icmp eq i8 %0, 0, !dbg !6430
  br i1 %tobool, label %if.end8, label %if.then, !dbg !6431

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.group_info** %group to i8*, !dbg !6432
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6432
  call void @llvm.dbg.value(metadata i32 0, metadata !6425, metadata !DIExpression()), !dbg !6433
  %gen = getelementptr inbounds %struct.bb_info, %struct.bb_info* %bb_info, i64 0, i32 2, !dbg !6434
  br label %for.cond, !dbg !6439

for.cond:                                         ; preds = %for.inc, %if.then
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !6440
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6425, metadata !DIExpression()), !dbg !6433
  %2 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !6441
  %base = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %2, i64 0, i32 0, !dbg !6441
  call void @llvm.dbg.value(metadata %struct.group_info** %group, metadata !6428, metadata !DIExpression(DW_OP_deref)), !dbg !6433
  %call = call fastcc i32 @VEC_group_info_t_base_iterate(%struct.VEC_group_info_t_base* %base, i32 %i.0, %struct.group_info** nonnull %group) #8, !dbg !6441
  %tobool2 = icmp eq i32 %call, 0, !dbg !6442
  br i1 %tobool2, label %for.end, label %for.body, !dbg !6442

for.body:                                         ; preds = %for.cond
  %3 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !6443
  call void @llvm.dbg.value(metadata %struct.group_info* %3, metadata !6428, metadata !DIExpression()), !dbg !6433
  %process_globally = getelementptr inbounds %struct.group_info, %struct.group_info* %3, i64 0, i32 2, !dbg !6444
  %4 = load i8, i8* %process_globally, align 4, !dbg !6444
  %tobool3 = icmp eq i8 %4, 0, !dbg !6443
  br i1 %tobool3, label %for.inc, label %land.lhs.true, !dbg !6445

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.group_info* %3, metadata !6428, metadata !DIExpression()), !dbg !6433
  %frame_related = getelementptr inbounds %struct.group_info, %struct.group_info* %3, i64 0, i32 3, !dbg !6446
  %5 = load i8, i8* %frame_related, align 1, !dbg !6446
  %tobool5 = icmp eq i8 %5, 0, !dbg !6447
  br i1 %tobool5, label %for.inc, label %if.then6, !dbg !6448

if.then6:                                         ; preds = %land.lhs.true
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !6449
  call void @llvm.dbg.value(metadata %struct.group_info* %3, metadata !6428, metadata !DIExpression()), !dbg !6433
  %group_kill = getelementptr inbounds %struct.group_info, %struct.group_info* %3, i64 0, i32 10, !dbg !6450
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill, align 8, !dbg !6450
  %call7 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %6, %struct.bitmap_head_def* %7) #6, !dbg !6451
  br label %for.inc, !dbg !6451

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then6
  %inc = add i32 %i.0, 1, !dbg !6452
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6425, metadata !DIExpression()), !dbg !6433
  br label %for.cond, !dbg !6453, !llvm.loop !6454

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6456
  br label %if.end8, !dbg !6457

if.end8:                                          ; preds = %entry, %for.end
  ret void, !dbg !6458
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dse_step3_scan(i8 zeroext %for_spills, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !6459 {
entry:
  call void @llvm.dbg.value(metadata i8 %for_spills, metadata !6463, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6464, metadata !DIExpression()), !dbg !6467
  %0 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !6468
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6469
  %1 = load i32, i32* %index, align 8, !dbg !6469
  %idxprom = sext i32 %1 to i64, !dbg !6468
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %0, i64 %idxprom, !dbg !6468
  %2 = load %struct.bb_info*, %struct.bb_info** %arrayidx, align 8, !dbg !6468
  call void @llvm.dbg.value(metadata %struct.bb_info* %2, metadata !6465, metadata !DIExpression()), !dbg !6467
  %tobool = icmp eq i8 %for_spills, 0, !dbg !6470
  br i1 %tobool, label %if.else, label %if.then, !dbg !6472

if.then:                                          ; preds = %entry
  %last_insn = getelementptr inbounds %struct.bb_info, %struct.bb_info* %2, i64 0, i32 0, !dbg !6473
  %3 = load %struct.insn_info*, %struct.insn_info** %last_insn, align 8, !dbg !6473
  call void @llvm.dbg.value(metadata %struct.insn_info* %3, metadata !6466, metadata !DIExpression()), !dbg !6467
  br label %if.end, !dbg !6474

if.else:                                          ; preds = %entry
  %call = tail call fastcc %struct.insn_info* @find_insn_before_first_wild_read(%struct.bb_info* %2) #8, !dbg !6475
  call void @llvm.dbg.value(metadata %struct.insn_info* %call, metadata !6466, metadata !DIExpression()), !dbg !6467
  %last_insn1.phi.trans.insert = getelementptr inbounds %struct.bb_info, %struct.bb_info* %2, i64 0, i32 0, !dbg !6476
  %.pre = load %struct.insn_info*, %struct.insn_info** %last_insn1.phi.trans.insert, align 8, !dbg !6478
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = phi %struct.insn_info* [ %3, %if.then ], [ %.pre, %if.else ], !dbg !6478
  %insn_info.0 = phi %struct.insn_info* [ %3, %if.then ], [ %call, %if.else ], !dbg !6479
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info.0, metadata !6466, metadata !DIExpression()), !dbg !6467
  %cmp = icmp eq %struct.insn_info* %insn_info.0, %4, !dbg !6480
  %kill = getelementptr inbounds %struct.bb_info, %struct.bb_info* %2, i64 0, i32 3, !dbg !6476
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !6476
  %tobool3 = icmp ne %struct.bitmap_head_def* %5, null, !dbg !6476
  br i1 %cmp, label %if.then2, label %if.else10, !dbg !6481

if.then2:                                         ; preds = %if.end
  br i1 %tobool3, label %if.then4, label %if.else6, !dbg !6482

if.then4:                                         ; preds = %if.then2
  tail call void @bitmap_clear(%struct.bitmap_head_def* nonnull %5) #6, !dbg !6484
  br label %if.end17, !dbg !6484

if.else6:                                         ; preds = %if.then2
  %call7 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !6486
  store %struct.bitmap_head_def* %call7, %struct.bitmap_head_def** %kill, align 8, !dbg !6487
  br label %if.end17

if.else10:                                        ; preds = %if.end
  br i1 %tobool3, label %if.then13, label %if.end17, !dbg !6488

if.then13:                                        ; preds = %if.else10
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %5) #6, !dbg !6489
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill, align 8, !dbg !6489
  br label %if.end17, !dbg !6489

if.end17:                                         ; preds = %if.else10, %if.then13, %if.then4, %if.else6
  %gen = getelementptr inbounds %struct.bb_info, %struct.bb_info* %2, i64 0, i32 2, !dbg !6491
  br i1 %tobool, label %if.end17.split.us, label %if.end17.if.end17.split_crit_edge, !dbg !6496

if.end17.if.end17.split_crit_edge:                ; preds = %if.end17
  br label %while.cond, !dbg !6496

if.end17.split.us:                                ; preds = %if.end17
  br label %while.cond.us, !dbg !6496

while.cond.us:                                    ; preds = %if.end49.us, %if.end17.split.us
  %insn_info.1.us = phi %struct.insn_info* [ %insn_info.0, %if.end17.split.us ], [ %13, %if.end49.us ], !dbg !6467
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info.1.us, metadata !6466, metadata !DIExpression()), !dbg !6467
  %tobool18.us = icmp eq %struct.insn_info* %insn_info.1.us, null, !dbg !6496
  br i1 %tobool18.us, label %while.end.us-lcssa.us, label %while.body.us, !dbg !6496

while.body.us:                                    ; preds = %while.cond.us
  %insn.us = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.1.us, i64 0, i32 5, !dbg !6497
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.us, align 8, !dbg !6497
  %tobool19.us = icmp eq %struct.rtx_def* %6, null, !dbg !6498
  br i1 %tobool19.us, label %if.end49.us, label %land.lhs.true.us, !dbg !6499

land.lhs.true.us:                                 ; preds = %while.body.us
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !6499
  %bf.load.us = load i32, i32* %7, align 8, !dbg !6500
  %bf.clear.us = and i32 %bf.load.us, 65535, !dbg !6500
  %cmp21.us = icmp eq i32 %bf.clear.us, 8, !dbg !6500
  br i1 %cmp21.us, label %if.then36.us, label %lor.lhs.false.us, !dbg !6500

lor.lhs.false.us:                                 ; preds = %land.lhs.true.us
  %cmp25.us = icmp eq i32 %bf.clear.us, 7, !dbg !6500
  br i1 %cmp25.us, label %if.then36.us, label %lor.lhs.false26.us, !dbg !6500

lor.lhs.false26.us:                               ; preds = %lor.lhs.false.us
  %cmp30.us = icmp eq i32 %bf.clear.us, 9, !dbg !6500
  br i1 %cmp30.us, label %if.then36.us, label %lor.lhs.false31.us, !dbg !6500

lor.lhs.false31.us:                               ; preds = %lor.lhs.false26.us
  %cmp35.us = icmp eq i32 %bf.clear.us, 10, !dbg !6500
  br i1 %cmp35.us, label %if.then36.us, label %if.end49.us, !dbg !6501

if.then36.us:                                     ; preds = %lor.lhs.false31.us, %lor.lhs.false26.us, %lor.lhs.false.us, %land.lhs.true.us
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !6491
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !6491
  %store_rec.us = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.1.us, i64 0, i32 6, !dbg !6491
  %10 = load %struct.store_info*, %struct.store_info** %store_rec.us, align 8, !dbg !6491
  tail call fastcc void @scan_stores_nospill(%struct.store_info* %10, %struct.bitmap_head_def* %9, %struct.bitmap_head_def* %8) #8, !dbg !6502
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !6504
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !6505
  tail call fastcc void @scan_reads_nospill(%struct.insn_info* nonnull %insn_info.1.us, %struct.bitmap_head_def* %11, %struct.bitmap_head_def* %12) #8, !dbg !6506
  br label %if.end49.us

if.end49.us:                                      ; preds = %if.then36.us, %lor.lhs.false31.us, %while.body.us
  %prev_insn.us = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.1.us, i64 0, i32 8, !dbg !6507
  %13 = load %struct.insn_info*, %struct.insn_info** %prev_insn.us, align 8, !dbg !6507
  call void @llvm.dbg.value(metadata %struct.insn_info* %13, metadata !6466, metadata !DIExpression()), !dbg !6467
  br label %while.cond.us, !dbg !6496, !llvm.loop !6508

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  br label %while.end, !dbg !6510

while.cond:                                       ; preds = %if.end49, %if.end17.if.end17.split_crit_edge
  %insn_info.1 = phi %struct.insn_info* [ %insn_info.0, %if.end17.if.end17.split_crit_edge ], [ %22, %if.end49 ], !dbg !6467
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info.1, metadata !6466, metadata !DIExpression()), !dbg !6467
  %tobool18 = icmp eq %struct.insn_info* %insn_info.1, null, !dbg !6496
  br i1 %tobool18, label %while.end.us-lcssa, label %while.body, !dbg !6496

while.body:                                       ; preds = %while.cond
  %insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.1, i64 0, i32 5, !dbg !6497
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6497
  %tobool19 = icmp eq %struct.rtx_def* %14, null, !dbg !6498
  br i1 %tobool19, label %if.end49, label %land.lhs.true, !dbg !6499

land.lhs.true:                                    ; preds = %while.body
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !6499
  %bf.load = load i32, i32* %15, align 8, !dbg !6500
  %bf.clear = and i32 %bf.load, 65535, !dbg !6500
  %cmp21 = icmp eq i32 %bf.clear, 8, !dbg !6500
  br i1 %cmp21, label %if.then36, label %lor.lhs.false, !dbg !6500

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp25 = icmp eq i32 %bf.clear, 7, !dbg !6500
  br i1 %cmp25, label %if.then36, label %lor.lhs.false26, !dbg !6500

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %cmp30 = icmp eq i32 %bf.clear, 9, !dbg !6500
  br i1 %cmp30, label %if.then36, label %lor.lhs.false31, !dbg !6500

lor.lhs.false31:                                  ; preds = %lor.lhs.false26
  %cmp35 = icmp eq i32 %bf.clear, 10, !dbg !6500
  br i1 %cmp35, label %if.then36, label %if.end49, !dbg !6501

if.then36:                                        ; preds = %lor.lhs.false31, %lor.lhs.false26, %lor.lhs.false, %land.lhs.true
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !6491
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !6491
  %store_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.1, i64 0, i32 6, !dbg !6491
  %18 = load %struct.store_info*, %struct.store_info** %store_rec, align 8, !dbg !6491
  tail call fastcc void @scan_stores_spill(%struct.store_info* %18, %struct.bitmap_head_def* %17, %struct.bitmap_head_def* %16) #8, !dbg !6511
  %read_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.1, i64 0, i32 7, !dbg !6513
  %19 = load %struct.read_info*, %struct.read_info** %read_rec, align 8, !dbg !6513
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !6514
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !6515
  tail call fastcc void @scan_reads_spill(%struct.read_info* %19, %struct.bitmap_head_def* %20, %struct.bitmap_head_def* %21) #8, !dbg !6516
  br label %if.end49, !dbg !6517

if.end49:                                         ; preds = %while.body, %if.then36, %lor.lhs.false31
  %prev_insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.1, i64 0, i32 8, !dbg !6507
  %22 = load %struct.insn_info*, %struct.insn_info** %prev_insn, align 8, !dbg !6507
  call void @llvm.dbg.value(metadata %struct.insn_info* %22, metadata !6466, metadata !DIExpression()), !dbg !6467
  br label %while.cond, !dbg !6496, !llvm.loop !6508

while.end.us-lcssa:                               ; preds = %while.cond
  br label %while.end, !dbg !6510

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  ret void, !dbg !6510
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_reachable_blocks(%struct.simple_bitmap_def* %unreachable_blocks, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !6518 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %unreachable_blocks, metadata !6522, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6523, metadata !DIExpression()), !dbg !6532
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !6533
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6533
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6534
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6534
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6535
  %2 = load i32, i32* %index, align 8, !dbg !6535
  %div = lshr i32 %2, 6, !dbg !6535
  %idxprom = zext i32 %div to i64, !dbg !6535
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %unreachable_blocks, i64 0, i32 3, i64 %idxprom, !dbg !6535
  %3 = load i64, i64* %arrayidx, align 8, !dbg !6535
  %rem = and i32 %2, 63, !dbg !6535
  %sh_prom = zext i32 %rem to i64, !dbg !6535
  %4 = shl i64 1, %sh_prom, !dbg !6535
  %5 = and i64 %3, %4, !dbg !6535
  %tobool = icmp eq i64 %5, 0, !dbg !6535
  br i1 %tobool, label %if.end, label %if.then, !dbg !6537

if.then:                                          ; preds = %entry
  tail call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %unreachable_blocks, i32 %2) #8, !dbg !6538
  %6 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6540
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7, !dbg !6540
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !6540
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !6540
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6540
  %8 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !6540
  store i32 %8, i32* %7, align 8, !dbg !6540
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6540
  %10 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !6540
  store %struct.VEC_edge_gc** %10, %struct.VEC_edge_gc*** %9, align 8, !dbg !6540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !6540
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7, !dbg !6540
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6542
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6542
  br label %for.cond, !dbg !6540

for.cond:                                         ; preds = %for.body, %if.then
  %13 = load i32, i32* %11, align 8, !dbg !6544
  %14 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !6544
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6524, metadata !DIExpression(DW_OP_deref)), !dbg !6532
  %call3 = call fastcc zeroext i8 @ei_cond(i32 %13, %struct.VEC_edge_gc** %14, %struct.edge_def** nonnull %e) #8, !dbg !6544
  %tobool4 = icmp eq i8 %call3, 0, !dbg !6540
  br i1 %tobool4, label %if.end.loopexit, label %for.body, !dbg !6540

for.body:                                         ; preds = %for.cond
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6545
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !6524, metadata !DIExpression()), !dbg !6532
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 0, !dbg !6547
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6547
  call fastcc void @mark_reachable_blocks(%struct.simple_bitmap_def* %unreachable_blocks, %struct.basic_block_def* %16) #8, !dbg !6548
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6525, metadata !DIExpression(DW_OP_deref)), !dbg !6532
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !6544
  br label %for.cond, !dbg !6544, !llvm.loop !6549

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !6551

if.end:                                           ; preds = %if.end.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !6551
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6551
  ret void, !dbg !6551
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* %i, %struct.simple_bitmap_def* %bmp, i32 %min) unnamed_addr #0 !dbg !6552 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !6560, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %bmp, metadata !6561, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 0, metadata !6562, metadata !DIExpression()), !dbg !6563
  %word_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 2, !dbg !6564
  store i32 0, i32* %word_num, align 4, !dbg !6565
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !6566
  store i32 0, i32* %bit_num, align 8, !dbg !6567
  %size = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %bmp, i64 0, i32 2, !dbg !6568
  %0 = load i32, i32* %size, align 4, !dbg !6568
  %size1 = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 1, !dbg !6569
  store i32 %0, i32* %size1, align 8, !dbg !6570
  %arraydecay = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %bmp, i64 0, i32 3, i64 0, !dbg !6571
  %ptr = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 0, !dbg !6572
  store i64* %arraydecay, i64** %ptr, align 8, !dbg !6573
  %cmp = icmp eq i32 %0, 0, !dbg !6574
  br i1 %cmp, label %if.then, label %if.else, !dbg !6576

if.then:                                          ; preds = %entry
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !6577
  store i64 0, i64* %word, align 8, !dbg !6578
  br label %if.end, !dbg !6579

if.else:                                          ; preds = %entry
  %1 = load i64, i64* %arraydecay, align 8, !dbg !6580
  %word7 = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !6581
  store i64 %1, i64* %word7, align 8, !dbg !6582
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6583
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* %i, i32* %n) unnamed_addr #0 !dbg !6584 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !6588, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i32* %n, metadata !6589, metadata !DIExpression()), !dbg !6590
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !6591
  %word_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 2, !dbg !6594
  %size = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 1, !dbg !6596
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !6594
  %ptr = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 0, !dbg !6591
  %.pre = load i64, i64* %word, align 8, !dbg !6598
  br label %for.cond, !dbg !6599

for.cond:                                         ; preds = %if.end, %entry
  %0 = phi i64 [ %4, %if.end ], [ %.pre, %entry ], !dbg !6598
  %cmp = icmp eq i64 %0, 0, !dbg !6600
  br i1 %cmp, label %for.body, label %for.cond6.preheader, !dbg !6601

for.cond6.preheader:                              ; preds = %for.cond
  %.lcssa4 = phi i64 [ %0, %for.cond ], !dbg !6598
  %.pre1 = load i32, i32* %bit_num, align 8, !dbg !6590
  br label %for.cond6, !dbg !6602

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %word_num, align 4, !dbg !6604
  %inc = add i32 %1, 1, !dbg !6604
  store i32 %inc, i32* %word_num, align 4, !dbg !6604
  %2 = load i32, i32* %size, align 8, !dbg !6605
  %cmp2 = icmp ult i32 %inc, %2, !dbg !6606
  br i1 %cmp2, label %if.end, label %return.loopexit, !dbg !6607

if.end:                                           ; preds = %for.body
  %mul = shl i32 %inc, 6, !dbg !6608
  store i32 %mul, i32* %bit_num, align 8, !dbg !6609
  %3 = load i64*, i64** %ptr, align 8, !dbg !6610
  %idxprom = zext i32 %inc to i64, !dbg !6611
  %arrayidx = getelementptr inbounds i64, i64* %3, i64 %idxprom, !dbg !6611
  %4 = load i64, i64* %arrayidx, align 8, !dbg !6611
  store i64 %4, i64* %word, align 8, !dbg !6612
  br label %for.cond, !dbg !6613, !llvm.loop !6614

for.cond6:                                        ; preds = %for.cond6.preheader, %for.body9
  %5 = phi i32 [ %.pre1, %for.cond6.preheader ], [ %inc11, %for.body9 ], !dbg !6590
  %6 = phi i64 [ %.lcssa4, %for.cond6.preheader ], [ %shr, %for.body9 ], !dbg !6616
  %and = and i64 %6, 1, !dbg !6618
  %cmp8 = icmp eq i64 %and, 0, !dbg !6619
  br i1 %cmp8, label %for.body9, label %for.end14, !dbg !6602

for.body9:                                        ; preds = %for.cond6
  %inc11 = add i32 %5, 1, !dbg !6620
  store i32 %inc11, i32* %bit_num, align 8, !dbg !6620
  %shr = lshr i64 %6, 1, !dbg !6621
  store i64 %shr, i64* %word, align 8, !dbg !6621
  br label %for.cond6, !dbg !6622, !llvm.loop !6623

for.end14:                                        ; preds = %for.cond6
  %.lcssa = phi i32 [ %5, %for.cond6 ], !dbg !6590
  store i32 %.lcssa, i32* %n, align 4, !dbg !6625
  br label %return, !dbg !6626

return.loopexit:                                  ; preds = %for.body
  br label %return, !dbg !6627

return:                                           ; preds = %return.loopexit, %for.end14
  %retval.0 = phi i8 [ 1, %for.end14 ], [ 0, %return.loopexit ], !dbg !6590
  ret i8 %retval.0, !dbg !6627
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* %i) unnamed_addr #0 !dbg !6628 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !6632, metadata !DIExpression()), !dbg !6633
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !6634
  %0 = load i64, i64* %word, align 8, !dbg !6635
  %shr = lshr i64 %0, 1, !dbg !6635
  store i64 %shr, i64* %word, align 8, !dbg !6635
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !6636
  %1 = load i32, i32* %bit_num, align 8, !dbg !6637
  %inc = add i32 %1, 1, !dbg !6637
  store i32 %inc, i32* %bit_num, align 8, !dbg !6637
  ret void, !dbg !6638
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.insn_info* @find_insn_before_first_wild_read(%struct.bb_info* %bb_info) unnamed_addr #5 !dbg !6639 {
entry:
  call void @llvm.dbg.value(metadata %struct.bb_info* %bb_info, metadata !6643, metadata !DIExpression()), !dbg !6646
  %last_insn = getelementptr inbounds %struct.bb_info, %struct.bb_info* %bb_info, i64 0, i32 0, !dbg !6647
  call void @llvm.dbg.value(metadata %struct.insn_info* null, metadata !6645, metadata !DIExpression()), !dbg !6646
  br label %while.cond, !dbg !6648

while.cond:                                       ; preds = %if.end4, %entry
  %last_wild_read.0 = phi %struct.insn_info* [ null, %entry ], [ %last_wild_read.1, %if.end4 ], !dbg !6646
  %insn_info.0.in = phi %struct.insn_info** [ %last_insn, %entry ], [ %prev_insn5, %if.end4 ]
  %insn_info.0 = load %struct.insn_info*, %struct.insn_info** %insn_info.0.in, align 8, !dbg !6646
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info.0, metadata !6644, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.value(metadata %struct.insn_info* %last_wild_read.0, metadata !6645, metadata !DIExpression()), !dbg !6646
  %tobool = icmp eq %struct.insn_info* %insn_info.0, null, !dbg !6648
  br i1 %tobool, label %while.end, label %while.body, !dbg !6648

while.body:                                       ; preds = %while.cond
  %wild_read = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 1, !dbg !6649
  %0 = load i8, i8* %wild_read, align 1, !dbg !6649
  %tobool1 = icmp eq i8 %0, 0, !dbg !6652
  br i1 %tobool1, label %if.end4, label %if.then, !dbg !6653

if.then:                                          ; preds = %while.body
  %prev_insn = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 8, !dbg !6654
  %1 = load %struct.insn_info*, %struct.insn_info** %prev_insn, align 8, !dbg !6654
  call void @llvm.dbg.value(metadata %struct.insn_info* %1, metadata !6645, metadata !DIExpression()), !dbg !6646
  %tobool2 = icmp eq %struct.insn_info* %1, null, !dbg !6656
  br i1 %tobool2, label %cleanup.loopexit, label %if.end4, !dbg !6658

if.end4:                                          ; preds = %if.then, %while.body
  %last_wild_read.1 = phi %struct.insn_info* [ %last_wild_read.0, %while.body ], [ %1, %if.then ], !dbg !6646
  call void @llvm.dbg.value(metadata %struct.insn_info* %last_wild_read.1, metadata !6645, metadata !DIExpression()), !dbg !6646
  %prev_insn5 = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info.0, i64 0, i32 8, !dbg !6659
  br label %while.cond, !dbg !6648, !llvm.loop !6660

while.end:                                        ; preds = %while.cond
  %last_wild_read.0.lcssa = phi %struct.insn_info* [ %last_wild_read.0, %while.cond ], !dbg !6646
  call void @llvm.dbg.value(metadata %struct.insn_info* %last_wild_read.0.lcssa, metadata !6645, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.value(metadata %struct.insn_info* %last_wild_read.0.lcssa, metadata !6645, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.value(metadata %struct.insn_info* %last_wild_read.0.lcssa, metadata !6645, metadata !DIExpression()), !dbg !6646
  %tobool6 = icmp eq %struct.insn_info* %last_wild_read.0.lcssa, null, !dbg !6662
  br i1 %tobool6, label %if.else, label %cleanup, !dbg !6664

if.else:                                          ; preds = %while.end
  %2 = load %struct.insn_info*, %struct.insn_info** %last_insn, align 8, !dbg !6665
  br label %cleanup, !dbg !6666

cleanup.loopexit:                                 ; preds = %if.then
  br label %cleanup, !dbg !6667

cleanup:                                          ; preds = %cleanup.loopexit, %while.end, %if.else
  %retval.0 = phi %struct.insn_info* [ %2, %if.else ], [ %last_wild_read.0.lcssa, %while.end ], [ null, %cleanup.loopexit ], !dbg !6646
  ret %struct.insn_info* %retval.0, !dbg !6667
}

; Function Attrs: nounwind uwtable
define internal fastcc void @scan_stores_spill(%struct.store_info* %store_info, %struct.bitmap_head_def* %gen, %struct.bitmap_head_def* %kill) unnamed_addr #5 !dbg !6668 {
entry:
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info, metadata !6672, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %gen, metadata !6673, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %kill, metadata !6674, metadata !DIExpression()), !dbg !6679
  %tobool6 = icmp eq %struct.bitmap_head_def* %kill, null, !dbg !6680
  br i1 %tobool6, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !6684

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %while.cond, !dbg !6684

entry.split.us:                                   ; preds = %entry
  br label %while.cond.us, !dbg !6684

while.cond.us:                                    ; preds = %if.end10.us, %entry.split.us
  %store_info.addr.0.us = phi %struct.store_info* [ %store_info, %entry.split.us ], [ %2, %if.end10.us ]
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.addr.0.us, metadata !6672, metadata !DIExpression()), !dbg !6679
  %tobool.us = icmp eq %struct.store_info* %store_info.addr.0.us, null, !dbg !6684
  br i1 %tobool.us, label %while.end.us-lcssa.us, label %while.body.us, !dbg !6684

while.body.us:                                    ; preds = %while.cond.us
  %alias_set.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0.us, i64 0, i32 6, !dbg !6685
  %0 = load i32, i32* %alias_set.us, align 8, !dbg !6685
  %tobool1.us = icmp eq i32 %0, 0, !dbg !6686
  br i1 %tobool1.us, label %if.end10.us, label %if.then.us, !dbg !6687

if.then.us:                                       ; preds = %while.body.us
  %1 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !6688
  %conv.us = sext i32 %0 to i64, !dbg !6689
  %call.us = tail call fastcc i32 @get_bitmap_index(%struct.group_info* %1, i64 %conv.us) #8, !dbg !6690
  call void @llvm.dbg.value(metadata i32 %call.us, metadata !6675, metadata !DIExpression()), !dbg !6691
  %cmp.us = icmp eq i32 %call.us, 0, !dbg !6692
  br i1 %cmp.us, label %if.end10.us, label %if.then4.us, !dbg !6693

if.then4.us:                                      ; preds = %if.then.us
  %call5.us = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %gen, i32 %call.us) #6, !dbg !6694
  br label %if.end10.us, !dbg !6695

if.end10.us:                                      ; preds = %if.then4.us, %if.then.us, %while.body.us
  %next.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0.us, i64 0, i32 10, !dbg !6696
  %2 = load %struct.store_info*, %struct.store_info** %next.us, align 8, !dbg !6696
  call void @llvm.dbg.value(metadata %struct.store_info* %2, metadata !6672, metadata !DIExpression()), !dbg !6679
  br label %while.cond.us, !dbg !6684, !llvm.loop !6697

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  br label %while.end, !dbg !6699

while.cond:                                       ; preds = %if.end10, %entry.entry.split_crit_edge
  %store_info.addr.0 = phi %struct.store_info* [ %store_info, %entry.entry.split_crit_edge ], [ %5, %if.end10 ]
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.addr.0, metadata !6672, metadata !DIExpression()), !dbg !6679
  %tobool = icmp eq %struct.store_info* %store_info.addr.0, null, !dbg !6684
  br i1 %tobool, label %while.end.us-lcssa, label %while.body, !dbg !6684

while.body:                                       ; preds = %while.cond
  %alias_set = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0, i64 0, i32 6, !dbg !6685
  %3 = load i32, i32* %alias_set, align 8, !dbg !6685
  %tobool1 = icmp eq i32 %3, 0, !dbg !6686
  br i1 %tobool1, label %if.end10, label %if.then, !dbg !6687

if.then:                                          ; preds = %while.body
  %4 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !6688
  %conv = sext i32 %3 to i64, !dbg !6689
  %call = tail call fastcc i32 @get_bitmap_index(%struct.group_info* %4, i64 %conv) #8, !dbg !6690
  call void @llvm.dbg.value(metadata i32 %call, metadata !6675, metadata !DIExpression()), !dbg !6691
  %cmp = icmp eq i32 %call, 0, !dbg !6692
  br i1 %cmp, label %if.end10, label %if.then4, !dbg !6693

if.then4:                                         ; preds = %if.then
  %call5 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %gen, i32 %call) #6, !dbg !6694
  %call8 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* nonnull %kill, i32 %call) #6, !dbg !6700
  br label %if.end10, !dbg !6700

if.end10:                                         ; preds = %if.then, %while.body, %if.then4
  %next = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0, i64 0, i32 10, !dbg !6696
  %5 = load %struct.store_info*, %struct.store_info** %next, align 8, !dbg !6696
  call void @llvm.dbg.value(metadata %struct.store_info* %5, metadata !6672, metadata !DIExpression()), !dbg !6679
  br label %while.cond, !dbg !6684, !llvm.loop !6697

while.end.us-lcssa:                               ; preds = %while.cond
  br label %while.end, !dbg !6699

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  ret void, !dbg !6699
}

; Function Attrs: nounwind uwtable
define internal fastcc void @scan_reads_spill(%struct.read_info* %read_info, %struct.bitmap_head_def* %gen, %struct.bitmap_head_def* %kill) unnamed_addr #5 !dbg !6701 {
entry:
  call void @llvm.dbg.value(metadata %struct.read_info* %read_info, metadata !6705, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %gen, metadata !6706, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %kill, metadata !6707, metadata !DIExpression()), !dbg !6712
  %tobool5 = icmp eq %struct.bitmap_head_def* %kill, null, !dbg !6713
  br i1 %tobool5, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !6717

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %while.cond, !dbg !6717

entry.split.us:                                   ; preds = %entry
  br label %while.cond.us, !dbg !6717

while.cond.us:                                    ; preds = %if.end10.us, %entry.split.us
  %read_info.addr.0.us = phi %struct.read_info* [ %read_info, %entry.split.us ], [ %2, %if.end10.us ]
  call void @llvm.dbg.value(metadata %struct.read_info* %read_info.addr.0.us, metadata !6705, metadata !DIExpression()), !dbg !6712
  %tobool.us = icmp eq %struct.read_info* %read_info.addr.0.us, null, !dbg !6717
  br i1 %tobool.us, label %while.end.us-lcssa.us, label %while.body.us, !dbg !6717

while.body.us:                                    ; preds = %while.cond.us
  %alias_set.us = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info.addr.0.us, i64 0, i32 1, !dbg !6718
  %0 = load i32, i32* %alias_set.us, align 4, !dbg !6718
  %tobool1.us = icmp eq i32 %0, 0, !dbg !6719
  br i1 %tobool1.us, label %if.end10.us, label %if.then.us, !dbg !6720

if.then.us:                                       ; preds = %while.body.us
  %1 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !6721
  %conv.us = sext i32 %0 to i64, !dbg !6722
  %call.us = tail call fastcc i32 @get_bitmap_index(%struct.group_info* %1, i64 %conv.us) #8, !dbg !6723
  call void @llvm.dbg.value(metadata i32 %call.us, metadata !6708, metadata !DIExpression()), !dbg !6724
  %cmp.us = icmp eq i32 %call.us, 0, !dbg !6725
  br i1 %cmp.us, label %if.end10.us, label %if.then4.us, !dbg !6726

if.then4.us:                                      ; preds = %if.then.us
  %call8.us = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %gen, i32 %call.us) #6, !dbg !6727
  br label %if.end10.us, !dbg !6728

if.end10.us:                                      ; preds = %if.then4.us, %if.then.us, %while.body.us
  %next.us = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info.addr.0.us, i64 0, i32 5, !dbg !6729
  %2 = load %struct.read_info*, %struct.read_info** %next.us, align 8, !dbg !6729
  call void @llvm.dbg.value(metadata %struct.read_info* %2, metadata !6705, metadata !DIExpression()), !dbg !6712
  br label %while.cond.us, !dbg !6717, !llvm.loop !6730

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  br label %while.end, !dbg !6732

while.cond:                                       ; preds = %if.end10, %entry.entry.split_crit_edge
  %read_info.addr.0 = phi %struct.read_info* [ %read_info, %entry.entry.split_crit_edge ], [ %5, %if.end10 ]
  call void @llvm.dbg.value(metadata %struct.read_info* %read_info.addr.0, metadata !6705, metadata !DIExpression()), !dbg !6712
  %tobool = icmp eq %struct.read_info* %read_info.addr.0, null, !dbg !6717
  br i1 %tobool, label %while.end.us-lcssa, label %while.body, !dbg !6717

while.body:                                       ; preds = %while.cond
  %alias_set = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info.addr.0, i64 0, i32 1, !dbg !6718
  %3 = load i32, i32* %alias_set, align 4, !dbg !6718
  %tobool1 = icmp eq i32 %3, 0, !dbg !6719
  br i1 %tobool1, label %if.end10, label %if.then, !dbg !6720

if.then:                                          ; preds = %while.body
  %4 = load %struct.group_info*, %struct.group_info** @clear_alias_group, align 8, !dbg !6721
  %conv = sext i32 %3 to i64, !dbg !6722
  %call = tail call fastcc i32 @get_bitmap_index(%struct.group_info* %4, i64 %conv) #8, !dbg !6723
  call void @llvm.dbg.value(metadata i32 %call, metadata !6708, metadata !DIExpression()), !dbg !6724
  %cmp = icmp eq i32 %call, 0, !dbg !6725
  br i1 %cmp, label %if.end10, label %if.then4, !dbg !6726

if.then4:                                         ; preds = %if.then
  %call7 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %kill, i32 %call) #6, !dbg !6733
  %call8 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %gen, i32 %call) #6, !dbg !6727
  br label %if.end10, !dbg !6728

if.end10:                                         ; preds = %if.then, %while.body, %if.then4
  %next = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info.addr.0, i64 0, i32 5, !dbg !6729
  %5 = load %struct.read_info*, %struct.read_info** %next, align 8, !dbg !6729
  call void @llvm.dbg.value(metadata %struct.read_info* %5, metadata !6705, metadata !DIExpression()), !dbg !6712
  br label %while.cond, !dbg !6717, !llvm.loop !6730

while.end.us-lcssa:                               ; preds = %while.cond
  br label %while.end, !dbg !6732

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  ret void, !dbg !6732
}

; Function Attrs: nounwind uwtable
define internal fastcc void @scan_stores_nospill(%struct.store_info* %store_info, %struct.bitmap_head_def* %gen, %struct.bitmap_head_def* %kill) unnamed_addr #5 !dbg !6734 {
entry:
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info, metadata !6736, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %gen, metadata !6737, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %kill, metadata !6738, metadata !DIExpression()), !dbg !6747
  %tobool7 = icmp eq %struct.bitmap_head_def* %kill, null, !dbg !6748
  br i1 %tobool7, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !6752

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %while.cond, !dbg !6752

entry.split.us:                                   ; preds = %entry
  br label %while.cond.us, !dbg !6752

while.cond.us:                                    ; preds = %if.end11.us, %entry.split.us
  %store_info.addr.0.us = phi %struct.store_info* [ %store_info, %entry.split.us ], [ %4, %if.end11.us ]
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.addr.0.us, metadata !6736, metadata !DIExpression()), !dbg !6747
  %tobool.us = icmp eq %struct.store_info* %store_info.addr.0.us, null, !dbg !6752
  br i1 %tobool.us, label %while.end.us-lcssa.us, label %while.body.us, !dbg !6752

while.body.us:                                    ; preds = %while.cond.us
  %0 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !6753
  %base.us = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %0, i64 0, i32 0, !dbg !6753
  %group_id.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0.us, i64 0, i32 2, !dbg !6753
  %1 = load i32, i32* %group_id.us, align 4, !dbg !6753
  %call.us = tail call fastcc %struct.group_info* @VEC_group_info_t_base_index(%struct.VEC_group_info_t_base* %base.us, i32 %1) #8, !dbg !6753
  call void @llvm.dbg.value(metadata %struct.group_info* %call.us, metadata !6741, metadata !DIExpression()), !dbg !6754
  %process_globally.us = getelementptr inbounds %struct.group_info, %struct.group_info* %call.us, i64 0, i32 2, !dbg !6755
  %2 = load i8, i8* %process_globally.us, align 4, !dbg !6755
  %tobool2.us = icmp eq i8 %2, 0, !dbg !6756
  br i1 %tobool2.us, label %if.end11.us, label %if.then.us, !dbg !6757

if.then.us:                                       ; preds = %while.body.us
  call void @llvm.dbg.value(metadata i64 undef, metadata !6739, metadata !DIExpression()), !dbg !6754
  %end.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0.us, i64 0, i32 8, !dbg !6758
  %begin.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0.us, i64 0, i32 7, !dbg !6759
  %3 = load i64, i64* %begin.us, align 8, !dbg !6759
  call void @llvm.dbg.value(metadata i64 %3, metadata !6739, metadata !DIExpression()), !dbg !6754
  br label %for.cond.us.us, !dbg !6760

if.end11.us:                                      ; preds = %if.end11.loopexit.us-lcssa.us.us, %while.body.us
  %next.us = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0.us, i64 0, i32 10, !dbg !6761
  %4 = load %struct.store_info*, %struct.store_info** %next.us, align 8, !dbg !6761
  call void @llvm.dbg.value(metadata %struct.store_info* %4, metadata !6736, metadata !DIExpression()), !dbg !6747
  br label %while.cond.us, !dbg !6752, !llvm.loop !6762

for.cond.us.us:                                   ; preds = %if.then.us, %for.inc.us.us
  %i.0.us.us = phi i64 [ %3, %if.then.us ], [ %inc.us.us, %for.inc.us.us ], !dbg !6764
  call void @llvm.dbg.value(metadata i64 %i.0.us.us, metadata !6739, metadata !DIExpression()), !dbg !6754
  %5 = load i64, i64* %end.us, align 8, !dbg !6765
  %cmp.us.us = icmp slt i64 %i.0.us.us, %5, !dbg !6766
  br i1 %cmp.us.us, label %for.body.us.us, label %if.end11.loopexit.us-lcssa.us.us, !dbg !6767

for.body.us.us:                                   ; preds = %for.cond.us.us
  %call3.us.us = tail call fastcc i32 @get_bitmap_index(%struct.group_info* %call.us, i64 %i.0.us.us) #8, !dbg !6768
  call void @llvm.dbg.value(metadata i32 %call3.us.us, metadata !6742, metadata !DIExpression()), !dbg !6769
  %cmp4.us.us = icmp eq i32 %call3.us.us, 0, !dbg !6770
  br i1 %cmp4.us.us, label %for.inc.us.us, label %if.then5.us.us, !dbg !6771

if.then5.us.us:                                   ; preds = %for.body.us.us
  %call6.us.us = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %gen, i32 %call3.us.us) #6, !dbg !6772
  br label %for.inc.us.us, !dbg !6773

for.inc.us.us:                                    ; preds = %if.then5.us.us, %for.body.us.us
  %inc.us.us = add nsw i64 %i.0.us.us, 1, !dbg !6774
  call void @llvm.dbg.value(metadata i64 %inc.us.us, metadata !6739, metadata !DIExpression()), !dbg !6754
  br label %for.cond.us.us, !dbg !6775, !llvm.loop !6776

if.end11.loopexit.us-lcssa.us.us:                 ; preds = %for.cond.us.us
  br label %if.end11.us, !dbg !6761

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  br label %while.end, !dbg !6778

while.cond:                                       ; preds = %if.end11, %entry.entry.split_crit_edge
  %store_info.addr.0 = phi %struct.store_info* [ %store_info, %entry.entry.split_crit_edge ], [ %11, %if.end11 ]
  call void @llvm.dbg.value(metadata %struct.store_info* %store_info.addr.0, metadata !6736, metadata !DIExpression()), !dbg !6747
  %tobool = icmp eq %struct.store_info* %store_info.addr.0, null, !dbg !6752
  br i1 %tobool, label %while.end.us-lcssa, label %while.body, !dbg !6752

while.body:                                       ; preds = %while.cond
  %6 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !6753
  %base = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %6, i64 0, i32 0, !dbg !6753
  %group_id = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0, i64 0, i32 2, !dbg !6753
  %7 = load i32, i32* %group_id, align 4, !dbg !6753
  %call = tail call fastcc %struct.group_info* @VEC_group_info_t_base_index(%struct.VEC_group_info_t_base* %base, i32 %7) #8, !dbg !6753
  call void @llvm.dbg.value(metadata %struct.group_info* %call, metadata !6741, metadata !DIExpression()), !dbg !6754
  %process_globally = getelementptr inbounds %struct.group_info, %struct.group_info* %call, i64 0, i32 2, !dbg !6755
  %8 = load i8, i8* %process_globally, align 4, !dbg !6755
  %tobool2 = icmp eq i8 %8, 0, !dbg !6756
  br i1 %tobool2, label %if.end11, label %if.then, !dbg !6757

if.then:                                          ; preds = %while.body
  %begin = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0, i64 0, i32 7, !dbg !6759
  %9 = load i64, i64* %begin, align 8, !dbg !6759
  call void @llvm.dbg.value(metadata i64 %9, metadata !6739, metadata !DIExpression()), !dbg !6754
  %end = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0, i64 0, i32 8, !dbg !6758
  br label %for.cond, !dbg !6760

for.cond:                                         ; preds = %for.inc, %if.then
  %i.0 = phi i64 [ %9, %if.then ], [ %inc, %for.inc ], !dbg !6764
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6739, metadata !DIExpression()), !dbg !6754
  %10 = load i64, i64* %end, align 8, !dbg !6765
  %cmp = icmp slt i64 %i.0, %10, !dbg !6766
  br i1 %cmp, label %for.body, label %if.end11.loopexit.us-lcssa, !dbg !6767

for.body:                                         ; preds = %for.cond
  %call3 = tail call fastcc i32 @get_bitmap_index(%struct.group_info* %call, i64 %i.0) #8, !dbg !6768
  call void @llvm.dbg.value(metadata i32 %call3, metadata !6742, metadata !DIExpression()), !dbg !6769
  %cmp4 = icmp eq i32 %call3, 0, !dbg !6770
  br i1 %cmp4, label %for.inc, label %if.then5, !dbg !6771

if.then5:                                         ; preds = %for.body
  %call6 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %gen, i32 %call3) #6, !dbg !6772
  %call9 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* nonnull %kill, i32 %call3) #6, !dbg !6779
  br label %for.inc, !dbg !6779

for.inc:                                          ; preds = %for.body, %if.then5
  %inc = add nsw i64 %i.0, 1, !dbg !6774
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6739, metadata !DIExpression()), !dbg !6754
  br label %for.cond, !dbg !6775, !llvm.loop !6776

if.end11.loopexit.us-lcssa:                       ; preds = %for.cond
  br label %if.end11, !dbg !6761

if.end11:                                         ; preds = %if.end11.loopexit.us-lcssa, %while.body
  %next = getelementptr inbounds %struct.store_info, %struct.store_info* %store_info.addr.0, i64 0, i32 10, !dbg !6761
  %11 = load %struct.store_info*, %struct.store_info** %next, align 8, !dbg !6761
  call void @llvm.dbg.value(metadata %struct.store_info* %11, metadata !6736, metadata !DIExpression()), !dbg !6747
  br label %while.cond, !dbg !6752, !llvm.loop !6762

while.end.us-lcssa:                               ; preds = %while.cond
  br label %while.end, !dbg !6778

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  ret void, !dbg !6778
}

; Function Attrs: nounwind uwtable
define internal fastcc void @scan_reads_nospill(%struct.insn_info* %insn_info, %struct.bitmap_head_def* %gen, %struct.bitmap_head_def* %kill) unnamed_addr #5 !dbg !6780 {
entry:
  %group = alloca %struct.group_info*, align 8
  call void @llvm.dbg.value(metadata %struct.insn_info* %insn_info, metadata !6784, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %gen, metadata !6785, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %kill, metadata !6786, metadata !DIExpression()), !dbg !6805
  %read_rec = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 7, !dbg !6806
  %0 = load %struct.read_info*, %struct.read_info** %read_rec, align 8, !dbg !6806
  call void @llvm.dbg.value(metadata %struct.read_info* %0, metadata !6787, metadata !DIExpression()), !dbg !6805
  %1 = bitcast %struct.group_info** %group to i8*, !dbg !6807
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6807
  %frame_read = getelementptr inbounds %struct.insn_info, %struct.insn_info* %insn_info, i64 0, i32 2, !dbg !6808
  %2 = load i8, i8* %frame_read, align 2, !dbg !6808
  %tobool = icmp eq i8 %2, 0, !dbg !6810
  br i1 %tobool, label %if.end13, label %for.cond.preheader, !dbg !6811

for.cond.preheader:                               ; preds = %entry
  %tobool7 = icmp eq %struct.bitmap_head_def* %kill, null, !dbg !6812
  br i1 %tobool7, label %for.cond.preheader.split.us, label %for.cond.preheader.for.cond.preheader.split_crit_edge, !dbg !6819

for.cond.preheader.for.cond.preheader.split_crit_edge: ; preds = %for.cond.preheader
  br label %for.cond, !dbg !6819

for.cond.preheader.split.us:                      ; preds = %for.cond.preheader
  br label %for.cond.us, !dbg !6819

for.cond.us:                                      ; preds = %for.inc.us, %for.cond.preheader.split.us
  %i.0.us = phi i32 [ %inc.us, %for.inc.us ], [ 0, %for.cond.preheader.split.us ], !dbg !6820
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !6788, metadata !DIExpression()), !dbg !6805
  %3 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !6821
  %base.us = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %3, i64 0, i32 0, !dbg !6821
  call void @llvm.dbg.value(metadata %struct.group_info** %group, metadata !6789, metadata !DIExpression(DW_OP_deref)), !dbg !6805
  %call.us = call fastcc i32 @VEC_group_info_t_base_iterate(%struct.VEC_group_info_t_base* %base.us, i32 %i.0.us, %struct.group_info** nonnull %group) #8, !dbg !6821
  %tobool2.us = icmp eq i32 %call.us, 0, !dbg !6819
  br i1 %tobool2.us, label %if.end13.loopexit.us-lcssa.us, label %for.body.us, !dbg !6819

for.body.us:                                      ; preds = %for.cond.us
  %4 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !6822
  call void @llvm.dbg.value(metadata %struct.group_info* %4, metadata !6789, metadata !DIExpression()), !dbg !6805
  %process_globally.us = getelementptr inbounds %struct.group_info, %struct.group_info* %4, i64 0, i32 2, !dbg !6823
  %5 = load i8, i8* %process_globally.us, align 4, !dbg !6823
  %tobool3.us = icmp eq i8 %5, 0, !dbg !6822
  br i1 %tobool3.us, label %for.inc.us, label %land.lhs.true.us, !dbg !6824

land.lhs.true.us:                                 ; preds = %for.body.us
  call void @llvm.dbg.value(metadata %struct.group_info* %4, metadata !6789, metadata !DIExpression()), !dbg !6805
  %frame_related.us = getelementptr inbounds %struct.group_info, %struct.group_info* %4, i64 0, i32 3, !dbg !6825
  %6 = load i8, i8* %frame_related.us, align 1, !dbg !6825
  %tobool5.us = icmp eq i8 %6, 0, !dbg !6826
  br i1 %tobool5.us, label %for.inc.us, label %if.then6.us, !dbg !6827

if.then6.us:                                      ; preds = %land.lhs.true.us
  call void @llvm.dbg.value(metadata %struct.group_info* %4, metadata !6789, metadata !DIExpression()), !dbg !6805
  %group_kill10.us = getelementptr inbounds %struct.group_info, %struct.group_info* %4, i64 0, i32 10, !dbg !6828
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill10.us, align 8, !dbg !6828
  %call11.us = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %gen, %struct.bitmap_head_def* %7) #6, !dbg !6829
  br label %for.inc.us, !dbg !6830

for.inc.us:                                       ; preds = %if.then6.us, %land.lhs.true.us, %for.body.us
  %inc.us = add nuw nsw i32 %i.0.us, 1, !dbg !6831
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !6788, metadata !DIExpression()), !dbg !6805
  br label %for.cond.us, !dbg !6832, !llvm.loop !6833

if.end13.loopexit.us-lcssa.us:                    ; preds = %for.cond.us
  br label %if.end13.loopexit, !dbg !6835

for.cond:                                         ; preds = %for.cond.preheader.for.cond.preheader.split_crit_edge, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader.for.cond.preheader.split_crit_edge ], !dbg !6820
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6788, metadata !DIExpression()), !dbg !6805
  %8 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !6821
  %base = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %8, i64 0, i32 0, !dbg !6821
  call void @llvm.dbg.value(metadata %struct.group_info** %group, metadata !6789, metadata !DIExpression(DW_OP_deref)), !dbg !6805
  %call = call fastcc i32 @VEC_group_info_t_base_iterate(%struct.VEC_group_info_t_base* %base, i32 %i.0, %struct.group_info** nonnull %group) #8, !dbg !6821
  %tobool2 = icmp eq i32 %call, 0, !dbg !6819
  br i1 %tobool2, label %if.end13.loopexit.us-lcssa, label %for.body, !dbg !6819

for.body:                                         ; preds = %for.cond
  %9 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !6822
  call void @llvm.dbg.value(metadata %struct.group_info* %9, metadata !6789, metadata !DIExpression()), !dbg !6805
  %process_globally = getelementptr inbounds %struct.group_info, %struct.group_info* %9, i64 0, i32 2, !dbg !6823
  %10 = load i8, i8* %process_globally, align 4, !dbg !6823
  %tobool3 = icmp eq i8 %10, 0, !dbg !6822
  br i1 %tobool3, label %for.inc, label %land.lhs.true, !dbg !6824

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.group_info* %9, metadata !6789, metadata !DIExpression()), !dbg !6805
  %frame_related = getelementptr inbounds %struct.group_info, %struct.group_info* %9, i64 0, i32 3, !dbg !6825
  %11 = load i8, i8* %frame_related, align 1, !dbg !6825
  %tobool5 = icmp eq i8 %11, 0, !dbg !6826
  br i1 %tobool5, label %for.inc, label %if.then6, !dbg !6827

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.group_info* %9, metadata !6789, metadata !DIExpression()), !dbg !6805
  %group_kill = getelementptr inbounds %struct.group_info, %struct.group_info* %9, i64 0, i32 10, !dbg !6836
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill, align 8, !dbg !6836
  %call9 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* nonnull %kill, %struct.bitmap_head_def* %12) #6, !dbg !6837
  %13 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !6838
  call void @llvm.dbg.value(metadata %struct.group_info* %13, metadata !6789, metadata !DIExpression()), !dbg !6805
  %group_kill10 = getelementptr inbounds %struct.group_info, %struct.group_info* %13, i64 0, i32 10, !dbg !6828
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill10, align 8, !dbg !6828
  %call11 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %gen, %struct.bitmap_head_def* %14) #6, !dbg !6829
  br label %for.inc, !dbg !6830

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then6
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6831
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6788, metadata !DIExpression()), !dbg !6805
  br label %for.cond, !dbg !6832, !llvm.loop !6833

if.end13.loopexit.us-lcssa:                       ; preds = %for.cond
  br label %if.end13.loopexit, !dbg !6835

if.end13.loopexit:                                ; preds = %if.end13.loopexit.us-lcssa.us, %if.end13.loopexit.us-lcssa
  br label %if.end13, !dbg !6835

if.end13:                                         ; preds = %if.end13.loopexit, %entry
  %tobool70 = icmp eq %struct.bitmap_head_def* %kill, null, !dbg !6839
  br label %while.cond, !dbg !6835

while.cond:                                       ; preds = %for.end82, %if.end13
  %read_info.0 = phi %struct.read_info* [ %0, %if.end13 ], [ %35, %for.end82 ], !dbg !6805
  call void @llvm.dbg.value(metadata %struct.read_info* %read_info.0, metadata !6787, metadata !DIExpression()), !dbg !6805
  %tobool14 = icmp eq %struct.read_info* %read_info.0, null, !dbg !6835
  br i1 %tobool14, label %while.end, label %for.cond15.preheader, !dbg !6835

for.cond15.preheader:                             ; preds = %while.cond
  %group_id = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info.0, i64 0, i32 0, !dbg !6844
  %mem = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info.0, i64 0, i32 4, !dbg !6845
  %begin = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info.0, i64 0, i32 2, !dbg !6846
  %end = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info.0, i64 0, i32 3, !dbg !6846
  br label %for.cond15, !dbg !6847

for.cond15:                                       ; preds = %for.cond15.preheader, %for.inc80
  %i.1 = phi i32 [ %inc81, %for.inc80 ], [ 0, %for.cond15.preheader ], !dbg !6848
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6788, metadata !DIExpression()), !dbg !6805
  %15 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !6849
  %base18 = getelementptr inbounds %struct.VEC_group_info_t_heap, %struct.VEC_group_info_t_heap* %15, i64 0, i32 0, !dbg !6849
  call void @llvm.dbg.value(metadata %struct.group_info** %group, metadata !6789, metadata !DIExpression(DW_OP_deref)), !dbg !6805
  %call22 = call fastcc i32 @VEC_group_info_t_base_iterate(%struct.VEC_group_info_t_base* %base18, i32 %i.1, %struct.group_info** nonnull %group) #8, !dbg !6849
  %tobool23 = icmp eq i32 %call22, 0, !dbg !6847
  br i1 %tobool23, label %for.end82, label %for.body24, !dbg !6847

for.body24:                                       ; preds = %for.cond15
  %16 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !6850
  call void @llvm.dbg.value(metadata %struct.group_info* %16, metadata !6789, metadata !DIExpression()), !dbg !6805
  %process_globally25 = getelementptr inbounds %struct.group_info, %struct.group_info* %16, i64 0, i32 2, !dbg !6851
  %17 = load i8, i8* %process_globally25, align 4, !dbg !6851
  %tobool26 = icmp eq i8 %17, 0, !dbg !6850
  br i1 %tobool26, label %for.inc80, label %if.then27, !dbg !6852

if.then27:                                        ; preds = %for.body24
  %18 = load i32, i32* %group_id, align 8, !dbg !6853
  %cmp = icmp eq i32 %i.1, %18, !dbg !6854
  br i1 %cmp, label %if.then29, label %if.else62, !dbg !6855

if.then29:                                        ; preds = %if.then27
  %19 = load i32, i32* %begin, align 8, !dbg !6856
  %20 = load i32, i32* %end, align 4, !dbg !6857
  %cmp30 = icmp sgt i32 %19, %20, !dbg !6858
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !6859

if.then32:                                        ; preds = %if.then29
  br i1 %tobool70, label %if.end37, label %if.then34, !dbg !6860

if.then34:                                        ; preds = %if.then32
  call void @llvm.dbg.value(metadata %struct.group_info* %16, metadata !6789, metadata !DIExpression()), !dbg !6805
  %group_kill35 = getelementptr inbounds %struct.group_info, %struct.group_info* %16, i64 0, i32 10, !dbg !6862
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill35, align 8, !dbg !6862
  %call36 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* nonnull %kill, %struct.bitmap_head_def* %21) #6, !dbg !6864
  %.pre2 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !6865
  br label %if.end37, !dbg !6864

if.end37:                                         ; preds = %if.then32, %if.then34
  %22 = phi %struct.group_info* [ %16, %if.then32 ], [ %.pre2, %if.then34 ], !dbg !6865
  call void @llvm.dbg.value(metadata %struct.group_info* %22, metadata !6789, metadata !DIExpression()), !dbg !6805
  %group_kill38 = getelementptr inbounds %struct.group_info, %struct.group_info* %22, i64 0, i32 10, !dbg !6866
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill38, align 8, !dbg !6866
  %call39 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %gen, %struct.bitmap_head_def* %23) #6, !dbg !6867
  br label %for.inc80, !dbg !6868

if.else:                                          ; preds = %if.then29
  %conv41 = sext i32 %19 to i64, !dbg !6869
  call void @llvm.dbg.value(metadata i64 %conv41, metadata !6790, metadata !DIExpression()), !dbg !6870
  br i1 %tobool70, label %if.else.split.us, label %if.else.if.else.split_crit_edge, !dbg !6871

if.else.if.else.split_crit_edge:                  ; preds = %if.else
  br label %for.cond42, !dbg !6871

if.else.split.us:                                 ; preds = %if.else
  br label %for.cond42.us, !dbg !6871

for.cond42.us:                                    ; preds = %for.inc58.us, %if.else.split.us
  %24 = phi i32 [ %20, %if.else.split.us ], [ %.pre1, %for.inc58.us ], !dbg !6872
  %j.0.us = phi i64 [ %conv41, %if.else.split.us ], [ %inc59.us, %for.inc58.us ], !dbg !6873
  call void @llvm.dbg.value(metadata i64 %j.0.us, metadata !6790, metadata !DIExpression()), !dbg !6870
  %conv44.us = sext i32 %24 to i64, !dbg !6874
  %cmp45.us = icmp slt i64 %j.0.us, %conv44.us, !dbg !6875
  br i1 %cmp45.us, label %for.body47.us, label %for.inc80.loopexit.us-lcssa.us, !dbg !6876

for.body47.us:                                    ; preds = %for.cond42.us
  %25 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !6877
  call void @llvm.dbg.value(metadata %struct.group_info* %25, metadata !6789, metadata !DIExpression()), !dbg !6805
  %call48.us = call fastcc i32 @get_bitmap_index(%struct.group_info* %25, i64 %j.0.us) #8, !dbg !6878
  call void @llvm.dbg.value(metadata i32 %call48.us, metadata !6801, metadata !DIExpression()), !dbg !6879
  %cmp49.us = icmp eq i32 %call48.us, 0, !dbg !6880
  br i1 %cmp49.us, label %for.inc58.us, label %if.then51.us, !dbg !6882

if.then51.us:                                     ; preds = %for.body47.us
  %call56.us = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %gen, i32 %call48.us) #6, !dbg !6883
  br label %for.inc58.us, !dbg !6885

for.inc58.us:                                     ; preds = %if.then51.us, %for.body47.us
  %inc59.us = add nsw i64 %j.0.us, 1, !dbg !6886
  call void @llvm.dbg.value(metadata i64 %inc59.us, metadata !6790, metadata !DIExpression()), !dbg !6870
  %.pre1 = load i32, i32* %end, align 4, !dbg !6872
  br label %for.cond42.us, !dbg !6887, !llvm.loop !6888

for.inc80.loopexit.us-lcssa.us:                   ; preds = %for.cond42.us
  br label %for.inc80.loopexit, !dbg !6890

for.cond42:                                       ; preds = %for.inc58, %if.else.if.else.split_crit_edge
  %26 = phi i32 [ %20, %if.else.if.else.split_crit_edge ], [ %.pre, %for.inc58 ], !dbg !6872
  %j.0 = phi i64 [ %conv41, %if.else.if.else.split_crit_edge ], [ %inc59, %for.inc58 ], !dbg !6873
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !6790, metadata !DIExpression()), !dbg !6870
  %conv44 = sext i32 %26 to i64, !dbg !6874
  %cmp45 = icmp slt i64 %j.0, %conv44, !dbg !6875
  br i1 %cmp45, label %for.body47, label %for.inc80.loopexit.us-lcssa, !dbg !6876

for.body47:                                       ; preds = %for.cond42
  %27 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !6877
  call void @llvm.dbg.value(metadata %struct.group_info* %27, metadata !6789, metadata !DIExpression()), !dbg !6805
  %call48 = call fastcc i32 @get_bitmap_index(%struct.group_info* %27, i64 %j.0) #8, !dbg !6878
  call void @llvm.dbg.value(metadata i32 %call48, metadata !6801, metadata !DIExpression()), !dbg !6879
  %cmp49 = icmp eq i32 %call48, 0, !dbg !6880
  br i1 %cmp49, label %for.inc58, label %if.then51, !dbg !6882

if.then51:                                        ; preds = %for.body47
  %call54 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %kill, i32 %call48) #6, !dbg !6891
  %call56 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %gen, i32 %call48) #6, !dbg !6883
  br label %for.inc58, !dbg !6885

for.inc58:                                        ; preds = %for.body47, %if.then51
  %inc59 = add nsw i64 %j.0, 1, !dbg !6886
  call void @llvm.dbg.value(metadata i64 %inc59, metadata !6790, metadata !DIExpression()), !dbg !6870
  %.pre = load i32, i32* %end, align 4, !dbg !6872
  br label %for.cond42, !dbg !6887, !llvm.loop !6888

if.else62:                                        ; preds = %if.then27
  %cmp64 = icmp slt i32 %18, 0, !dbg !6893
  br i1 %cmp64, label %land.lhs.true66, label %for.inc80, !dbg !6894

land.lhs.true66:                                  ; preds = %if.else62
  call void @llvm.dbg.value(metadata %struct.group_info* %16, metadata !6789, metadata !DIExpression()), !dbg !6805
  %base_mem = getelementptr inbounds %struct.group_info, %struct.group_info* %16, i64 0, i32 4, !dbg !6895
  %28 = load %struct.rtx_def*, %struct.rtx_def** %base_mem, align 8, !dbg !6895
  call void @llvm.dbg.value(metadata %struct.group_info* %16, metadata !6789, metadata !DIExpression()), !dbg !6805
  %canon_base_addr = getelementptr inbounds %struct.group_info, %struct.group_info* %16, i64 0, i32 5, !dbg !6896
  %29 = load %struct.rtx_def*, %struct.rtx_def** %canon_base_addr, align 8, !dbg !6896
  %30 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !6897
  %call67 = call i32 @canon_true_dependence(%struct.rtx_def* %28, i32 14, %struct.rtx_def* %29, %struct.rtx_def* %30, %struct.rtx_def* null, i8 (%struct.rtx_def*, i8)* nonnull @rtx_varies_p) #6, !dbg !6898
  %tobool68 = icmp eq i32 %call67, 0, !dbg !6898
  br i1 %tobool68, label %for.inc80, label %if.then69, !dbg !6899

if.then69:                                        ; preds = %land.lhs.true66
  br i1 %tobool70, label %if.end74, label %if.then71, !dbg !6900

if.then71:                                        ; preds = %if.then69
  %31 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !6901
  call void @llvm.dbg.value(metadata %struct.group_info* %31, metadata !6789, metadata !DIExpression()), !dbg !6805
  %group_kill72 = getelementptr inbounds %struct.group_info, %struct.group_info* %31, i64 0, i32 10, !dbg !6902
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill72, align 8, !dbg !6902
  %call73 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* nonnull %kill, %struct.bitmap_head_def* %32) #6, !dbg !6903
  br label %if.end74, !dbg !6903

if.end74:                                         ; preds = %if.then69, %if.then71
  %33 = load %struct.group_info*, %struct.group_info** %group, align 8, !dbg !6904
  call void @llvm.dbg.value(metadata %struct.group_info* %33, metadata !6789, metadata !DIExpression()), !dbg !6805
  %group_kill75 = getelementptr inbounds %struct.group_info, %struct.group_info* %33, i64 0, i32 10, !dbg !6905
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %group_kill75, align 8, !dbg !6905
  %call76 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %gen, %struct.bitmap_head_def* %34) #6, !dbg !6906
  br label %for.inc80, !dbg !6907

for.inc80.loopexit.us-lcssa:                      ; preds = %for.cond42
  br label %for.inc80.loopexit, !dbg !6890

for.inc80.loopexit:                               ; preds = %for.inc80.loopexit.us-lcssa.us, %for.inc80.loopexit.us-lcssa
  br label %for.inc80, !dbg !6890

for.inc80:                                        ; preds = %for.inc80.loopexit, %land.lhs.true66, %for.body24, %if.else62, %if.end74, %if.end37
  %inc81 = add nuw nsw i32 %i.1, 1, !dbg !6890
  call void @llvm.dbg.value(metadata i32 %inc81, metadata !6788, metadata !DIExpression()), !dbg !6805
  br label %for.cond15, !dbg !6908, !llvm.loop !6909

for.end82:                                        ; preds = %for.cond15
  %next = getelementptr inbounds %struct.read_info, %struct.read_info* %read_info.0, i64 0, i32 5, !dbg !6911
  %35 = load %struct.read_info*, %struct.read_info** %next, align 8, !dbg !6911
  call void @llvm.dbg.value(metadata %struct.read_info* %35, metadata !6787, metadata !DIExpression()), !dbg !6805
  br label %while.cond, !dbg !6835, !llvm.loop !6912

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !6914
  ret void, !dbg !6914
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_bitmap_index(%struct.group_info* %group_info, i64 %offset) unnamed_addr #5 !dbg !6915 {
entry:
  call void @llvm.dbg.value(metadata %struct.group_info* %group_info, metadata !6919, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.value(metadata i64 %offset, metadata !6920, metadata !DIExpression()), !dbg !6924
  %cmp = icmp slt i64 %offset, 0, !dbg !6925
  br i1 %cmp, label %if.then, label %if.else, !dbg !6926

if.then:                                          ; preds = %entry
  %sub = sub nsw i64 0, %offset, !dbg !6927
  call void @llvm.dbg.value(metadata i64 %sub, metadata !6921, metadata !DIExpression()), !dbg !6928
  %offset_map_size_n = getelementptr inbounds %struct.group_info, %struct.group_info* %group_info, i64 0, i32 13, !dbg !6929
  %0 = load i32, i32* %offset_map_size_n, align 8, !dbg !6929
  %conv = sext i32 %0 to i64, !dbg !6931
  %cmp1 = icmp slt i64 %sub, %conv, !dbg !6932
  br i1 %cmp1, label %if.end, label %return, !dbg !6933

if.end:                                           ; preds = %if.then
  %offset_map_n = getelementptr inbounds %struct.group_info, %struct.group_info* %group_info, i64 0, i32 11, !dbg !6934
  %1 = load i32*, i32** %offset_map_n, align 8, !dbg !6934
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %sub, !dbg !6935
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6935
  br label %return, !dbg !6936

if.else:                                          ; preds = %entry
  %offset_map_size_p = getelementptr inbounds %struct.group_info, %struct.group_info* %group_info, i64 0, i32 14, !dbg !6937
  %3 = load i32, i32* %offset_map_size_p, align 4, !dbg !6937
  %conv4 = sext i32 %3 to i64, !dbg !6940
  %cmp5 = icmp sgt i64 %conv4, %offset, !dbg !6941
  br i1 %cmp5, label %if.end8, label %return, !dbg !6942

if.end8:                                          ; preds = %if.else
  %offset_map_p = getelementptr inbounds %struct.group_info, %struct.group_info* %group_info, i64 0, i32 12, !dbg !6943
  %4 = load i32*, i32** %offset_map_p, align 8, !dbg !6943
  %arrayidx9 = getelementptr inbounds i32, i32* %4, i64 %offset, !dbg !6944
  %5 = load i32, i32* %arrayidx9, align 4, !dbg !6944
  br label %return, !dbg !6945

return:                                           ; preds = %if.then, %if.else, %if.end, %if.end8
  %retval.1 = phi i32 [ %5, %if.end8 ], [ %2, %if.end ], [ 0, %if.then ], [ 0, %if.else ], !dbg !6946
  ret i32 %retval.1, !dbg !6947
}

declare dso_local zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !6948 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !6952, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !6953, metadata !DIExpression()), !dbg !6957
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !6958
  %0 = load i8*, i8** %popcount, align 8, !dbg !6958
  %tobool = icmp eq i8* %0, null, !dbg !6959
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !6960

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !6961
  %.pre2 = zext i32 %.pre to i64, !dbg !6962
  %.pre3 = shl i64 1, %.pre2, !dbg !6962
  %.pre4 = lshr i32 %bitno, 6, !dbg !6963
  %.pre5 = zext i32 %.pre4 to i64, !dbg !6964
  br label %if.end7, !dbg !6960

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !6965
  %idxprom = zext i32 %div to i64, !dbg !6965
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !6965
  %1 = load i64, i64* %arrayidx, align 8, !dbg !6965
  %rem = and i32 %bitno, 63, !dbg !6965
  %sh_prom = zext i32 %rem to i64, !dbg !6965
  %2 = shl i64 1, %sh_prom, !dbg !6966
  %3 = and i64 %1, %2, !dbg !6966
  %tobool1 = icmp eq i64 %3, 0, !dbg !6966
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !6968

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !6969
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !6970
  %dec = add i8 %4, -1, !dbg !6970
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !6970
  br label %if.end7, !dbg !6969

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !6964
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !6962
  %neg = xor i64 %shl.pre-phi, -1, !dbg !6971
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !6964
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !6972
  %and14 = and i64 %5, %neg, !dbg !6972
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !6972
  ret void, !dbg !6973
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !6974 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !6978, metadata !DIExpression()), !dbg !6980
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !6981
  store i32 0, i32* %index, align 8, !dbg !6982
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !6983
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !6984
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !6985
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !6985
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !6985
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !6986 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !6992, metadata !DIExpression()), !dbg !6993
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !6994
  %tobool = icmp eq i8 %call, 0, !dbg !6994
  br i1 %tobool, label %if.then, label %if.else, !dbg !6996

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !6997
  br label %return, !dbg !6999

if.else:                                          ; preds = %entry
  br label %return, !dbg !7000

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !7002
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !7002
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !7002
  ret i8 %retval.0, !dbg !7003
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !7004 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !7009, metadata !DIExpression()), !dbg !7010
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !7011
  %0 = load i32, i32* %index, align 8, !dbg !7011
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !7011
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !7011
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #8, !dbg !7011
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !7011
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7011

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !7011
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !7011
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #8, !dbg !7011
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !7011
  br label %cond.end, !dbg !7011

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7011
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !7011
  %cmp = icmp ult i32 %0, %call2, !dbg !7011
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !7011

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7011
  br label %cond.end5, !dbg !7011

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !7012
  %inc = add i32 %5, 1, !dbg !7012
  store i32 %inc, i32* %index, align 8, !dbg !7012
  ret void, !dbg !7013
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !7014 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !7019
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !7019
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7019

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !7019
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !7019
  br label %cond.end, !dbg !7019

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7019
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !7019
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !7020
  %conv3 = zext i1 %cmp to i8, !dbg !7021
  ret i8 %conv3, !dbg !7022
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !7023 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !7028
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !7028
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7028

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !7028
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !7028
  br label %cond.end, !dbg !7028

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7028
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #8, !dbg !7028
  ret %struct.edge_def* %call2, !dbg !7029
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !7030 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !7035
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7035

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7035
  br label %cond.end, !dbg !7035

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !7036
  ret %struct.VEC_edge_gc* %0, !dbg !7037
}

declare dso_local void @df_simple_dataflow(i32, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, %struct.bitmap_head_def*, i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @dse_confluence_0(%struct.basic_block_def* %bb) #5 !dbg !7038 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7042, metadata !DIExpression()), !dbg !7044
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7045
  %0 = load i32, i32* %index, align 8, !dbg !7045
  call void @llvm.dbg.value(metadata %struct.bb_info* undef, metadata !7043, metadata !DIExpression()), !dbg !7044
  %cmp = icmp eq i32 %0, 1, !dbg !7046
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !7048

if.end:                                           ; preds = %entry
  %1 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !7049
  %idxprom = sext i32 %0 to i64, !dbg !7049
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %1, i64 %idxprom, !dbg !7049
  %2 = load %struct.bb_info*, %struct.bb_info** %arrayidx, align 8, !dbg !7049
  call void @llvm.dbg.value(metadata %struct.bb_info* %2, metadata !7043, metadata !DIExpression()), !dbg !7044
  %out = getelementptr inbounds %struct.bb_info, %struct.bb_info* %2, i64 0, i32 5, !dbg !7050
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7050
  %tobool = icmp eq %struct.bitmap_head_def* %3, null, !dbg !7052
  br i1 %tobool, label %if.then2, label %cleanup.cont, !dbg !7053

if.then2:                                         ; preds = %if.end
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7054
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %out, align 8, !dbg !7056
  %4 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !7057
  %arrayidx5 = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %4, i64 1, !dbg !7057
  %5 = load %struct.bb_info*, %struct.bb_info** %arrayidx5, align 8, !dbg !7057
  %gen = getelementptr inbounds %struct.bb_info, %struct.bb_info* %5, i64 0, i32 2, !dbg !7058
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !7058
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %6) #6, !dbg !7059
  br label %cleanup.cont, !dbg !7060

cleanup.cont:                                     ; preds = %if.end, %entry, %if.then2
  ret void, !dbg !7061
}

; Function Attrs: nounwind uwtable
define internal void @dse_confluence_n(%struct.edge_def* %e) #5 !dbg !7062 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !7066, metadata !DIExpression()), !dbg !7069
  %0 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !7070
  call void @llvm.dbg.value(metadata %struct.bb_info* undef, metadata !7067, metadata !DIExpression()), !dbg !7069
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !7071
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7071
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !7072
  %2 = load i32, i32* %index1, align 8, !dbg !7072
  %idxprom2 = sext i32 %2 to i64, !dbg !7073
  %arrayidx3 = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %0, i64 %idxprom2, !dbg !7073
  %3 = load %struct.bb_info*, %struct.bb_info** %arrayidx3, align 8, !dbg !7073
  call void @llvm.dbg.value(metadata %struct.bb_info* %3, metadata !7068, metadata !DIExpression()), !dbg !7069
  %in = getelementptr inbounds %struct.bb_info, %struct.bb_info* %3, i64 0, i32 4, !dbg !7074
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7074
  %tobool = icmp eq %struct.bitmap_head_def* %4, null, !dbg !7076
  br i1 %tobool, label %if.end11, label %if.then, !dbg !7077

if.then:                                          ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !7078
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7078
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 9, !dbg !7079
  %6 = load i32, i32* %index, align 8, !dbg !7079
  %idxprom = sext i32 %6 to i64, !dbg !7070
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %0, i64 %idxprom, !dbg !7070
  %7 = load %struct.bb_info*, %struct.bb_info** %arrayidx, align 8, !dbg !7070
  call void @llvm.dbg.value(metadata %struct.bb_info* %7, metadata !7067, metadata !DIExpression()), !dbg !7069
  %out = getelementptr inbounds %struct.bb_info, %struct.bb_info* %7, i64 0, i32 5, !dbg !7080
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7080
  %tobool4 = icmp eq %struct.bitmap_head_def* %8, null, !dbg !7083
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !7084

if.then5:                                         ; preds = %if.then
  tail call void @bitmap_and_into(%struct.bitmap_head_def* nonnull %8, %struct.bitmap_head_def* nonnull %4) #6, !dbg !7085
  br label %if.end11, !dbg !7085

if.else:                                          ; preds = %if.then
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7086
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %out, align 8, !dbg !7088
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7089
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %9) #6, !dbg !7090
  br label %if.end11

if.end11:                                         ; preds = %entry, %if.then5, %if.else
  ret void, !dbg !7091
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @dse_transfer_function(i32 %bb_index) #5 !dbg !7092 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !7096, metadata !DIExpression()), !dbg !7098
  %0 = load %struct.bb_info**, %struct.bb_info*** @bb_table, align 8, !dbg !7099
  %idxprom = sext i32 %bb_index to i64, !dbg !7099
  %arrayidx = getelementptr inbounds %struct.bb_info*, %struct.bb_info** %0, i64 %idxprom, !dbg !7099
  %1 = load %struct.bb_info*, %struct.bb_info** %arrayidx, align 8, !dbg !7099
  call void @llvm.dbg.value(metadata %struct.bb_info* %1, metadata !7097, metadata !DIExpression()), !dbg !7098
  %kill = getelementptr inbounds %struct.bb_info, %struct.bb_info* %1, i64 0, i32 3, !dbg !7100
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !7100
  %tobool = icmp eq %struct.bitmap_head_def* %2, null, !dbg !7102
  br i1 %tobool, label %if.else16, label %if.then, !dbg !7103

if.then:                                          ; preds = %entry
  %out = getelementptr inbounds %struct.bb_info, %struct.bb_info* %1, i64 0, i32 5, !dbg !7104
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7104
  %tobool1 = icmp eq %struct.bitmap_head_def* %3, null, !dbg !7107
  br i1 %tobool1, label %cleanup, label %if.then2, !dbg !7108

if.then2:                                         ; preds = %if.then
  %in = getelementptr inbounds %struct.bb_info, %struct.bb_info* %1, i64 0, i32 4, !dbg !7109
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7109
  %tobool3 = icmp eq %struct.bitmap_head_def* %4, null, !dbg !7112
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !7113

if.then4:                                         ; preds = %if.then2
  %gen = getelementptr inbounds %struct.bb_info, %struct.bb_info* %1, i64 0, i32 2, !dbg !7114
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !7114
  %call = tail call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* nonnull %4, %struct.bitmap_head_def* %5, %struct.bitmap_head_def* nonnull %3, %struct.bitmap_head_def* nonnull %2) #6, !dbg !7115
  br label %cleanup, !dbg !7116

if.else:                                          ; preds = %if.then2
  %call8 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7117
  store %struct.bitmap_head_def* %call8, %struct.bitmap_head_def** %in, align 8, !dbg !7119
  %gen11 = getelementptr inbounds %struct.bb_info, %struct.bb_info* %1, i64 0, i32 2, !dbg !7120
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen11, align 8, !dbg !7120
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7121
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !7122
  %call14 = tail call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %call8, %struct.bitmap_head_def* %6, %struct.bitmap_head_def* %7, %struct.bitmap_head_def* %8) #6, !dbg !7123
  br label %cleanup, !dbg !7124

if.else16:                                        ; preds = %entry
  %in17 = getelementptr inbounds %struct.bb_info, %struct.bb_info* %1, i64 0, i32 4, !dbg !7125
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in17, align 8, !dbg !7125
  %tobool18 = icmp eq %struct.bitmap_head_def* %9, null, !dbg !7128
  br i1 %tobool18, label %if.else20, label %cleanup, !dbg !7129

if.else20:                                        ; preds = %if.else16
  %call21 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7130
  store %struct.bitmap_head_def* %call21, %struct.bitmap_head_def** %in17, align 8, !dbg !7132
  %gen24 = getelementptr inbounds %struct.bb_info, %struct.bb_info* %1, i64 0, i32 2, !dbg !7133
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen24, align 8, !dbg !7133
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call21, %struct.bitmap_head_def* %10) #6, !dbg !7134
  br label %cleanup, !dbg !7135

cleanup:                                          ; preds = %if.then, %if.else16, %if.else20, %if.else, %if.then4
  %retval.0 = phi i8 [ %call, %if.then4 ], [ 1, %if.else ], [ 1, %if.else20 ], [ 0, %if.then ], [ 0, %if.else16 ], !dbg !7136
  ret i8 %retval.0, !dbg !7137
}

declare dso_local i32* @df_get_postorder(i32) local_unnamed_addr #2

declare dso_local i32 @df_get_n_blocks(i32) local_unnamed_addr #2

declare dso_local void @df_print_bb_index(%struct.basic_block_def*, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

declare dso_local void @end_alias_analysis() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_group_info_t_heap_free(%struct.VEC_group_info_t_heap** %vec_) unnamed_addr #0 !dbg !7138 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_group_info_t_heap** @rtx_group_vec, metadata !7142, metadata !DIExpression()), !dbg !7143
  %0 = load %struct.VEC_group_info_t_heap*, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !7144
  %tobool = icmp eq %struct.VEC_group_info_t_heap* %0, null, !dbg !7144
  br i1 %tobool, label %if.end, label %if.then, !dbg !7146

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_group_info_t_heap* %0 to i8*, !dbg !7146
  tail call void @free(i8* nonnull %1) #6, !dbg !7144
  br label %if.end, !dbg !7144

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_group_info_t_heap* null, %struct.VEC_group_info_t_heap** @rtx_group_vec, align 8, !dbg !7146
  ret void, !dbg !7146
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2021, !2022, !2023}
!llvm.ident = !{!2024}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "clear_alias_sets", scope: !2, file: !3, line: 555, type: !1839, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !725, globals: !1921, nameTableKind: None)
!3 = !DIFile(filename: "dse.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !317, !323, !328, !333, !352, !359, !366, !560, !703}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !135, line: 104, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !142, line: 74, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316}
!144 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!150 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!151 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!152 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!154 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!155 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!156 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!157 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!158 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!159 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!160 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!162 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!163 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!164 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!165 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!166 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!167 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!168 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!169 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!170 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!171 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!172 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!173 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!174 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!175 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!176 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!177 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!178 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!179 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!180 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!181 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!182 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!183 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!184 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!185 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!186 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!187 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!188 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!189 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!190 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!191 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!192 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!193 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!194 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!195 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!196 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!197 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!198 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!199 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!200 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!201 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!202 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!203 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!204 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!205 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!206 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!207 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!208 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!209 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!210 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!211 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!212 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!213 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!214 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!215 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!216 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!217 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!218 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!219 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!220 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!221 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!222 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!223 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!224 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!225 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!226 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!227 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!228 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!229 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!230 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!231 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!232 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!233 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!234 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!235 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!236 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!237 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!238 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!239 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!240 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!241 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!242 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!243 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!244 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!245 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!246 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!247 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!248 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!249 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!250 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!251 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!252 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!253 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!254 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!255 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!256 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!257 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!258 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!259 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!260 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!261 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!262 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!263 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!264 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!265 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!266 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!267 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!268 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!269 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!270 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!271 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!272 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!273 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!274 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!275 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!276 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!277 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!278 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!279 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!280 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!281 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!282 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!283 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!284 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!285 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!286 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!287 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!288 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!289 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!290 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!291 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!292 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!293 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!294 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!295 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!296 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!297 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!298 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!299 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!300 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!301 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!302 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!303 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!304 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!305 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!306 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!307 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!308 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!309 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!310 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!311 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!312 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!313 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!314 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!315 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!316 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!317 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !318, line: 363, baseType: !7, size: 32, elements: !319)
!318 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!319 = !{!320, !321, !322}
!320 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!321 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!322 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!323 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !318, line: 355, baseType: !7, size: 32, elements: !324)
!324 = !{!325, !326, !327}
!325 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!326 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!327 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !329, line: 474, baseType: !7, size: 32, elements: !330)
!329 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!330 = !{!331, !332}
!331 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!332 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!333 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !334, line: 280, baseType: !7, size: 32, elements: !335)
!334 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!335 = !{!336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351}
!336 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!337 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !334, line: 1817, baseType: !7, size: 32, elements: !353)
!353 = !{!354, !355, !356, !357, !358}
!354 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !334, line: 1805, baseType: !7, size: 32, elements: !360)
!360 = !{!361, !362, !363, !364, !365}
!361 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!366 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !334, line: 39, baseType: !7, size: 32, elements: !367)
!367 = !{!368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559}
!368 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!369 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!370 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!371 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!372 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!373 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!374 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!375 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!376 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!377 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!378 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!379 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!380 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!381 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!382 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!383 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!384 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!385 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!386 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!387 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!388 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!389 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!390 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!391 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!392 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!393 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!394 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!395 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!396 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!397 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!398 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!399 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!400 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!401 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!402 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!403 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!404 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!405 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!406 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!407 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!408 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!409 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!410 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!411 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!412 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!413 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!414 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!415 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!416 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!417 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!418 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!419 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!420 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!421 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!422 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!423 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!424 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!425 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!426 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!427 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!428 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!429 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!430 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!431 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!432 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!433 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!434 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!435 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!436 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!437 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!438 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!439 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!440 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!441 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!442 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!443 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!444 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!445 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!446 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!447 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!448 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!449 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!450 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!451 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!452 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!453 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!454 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!455 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!456 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!457 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!458 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!459 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!460 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!461 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!462 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!463 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!464 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!465 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!466 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!467 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!468 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!469 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!470 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!471 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!472 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!473 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!474 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!475 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!476 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!477 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!478 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!479 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!480 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!481 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!482 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!483 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!484 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!485 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!486 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!487 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!488 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!489 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!490 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!491 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!492 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!493 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!494 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!495 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!496 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!497 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!498 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!499 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!500 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!501 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!502 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!503 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!504 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!505 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!506 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!507 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!508 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!509 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!510 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!511 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!512 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!513 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!514 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!515 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!516 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!517 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!518 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!519 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!520 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!521 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!522 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!523 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!524 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!525 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!526 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!527 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!528 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!529 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!530 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!531 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!532 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!533 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!534 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!535 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!536 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!537 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!538 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!539 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!540 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!541 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!542 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!543 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!544 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!545 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!546 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!547 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!548 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!549 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!550 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!551 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!552 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!553 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!554 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!555 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!556 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!557 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!558 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!559 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!560 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !561, line: 45, baseType: !7, size: 32, elements: !562)
!561 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!562 = !{!563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702}
!563 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!564 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!565 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!566 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!567 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!568 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!569 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!570 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!571 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!572 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!573 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!574 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!575 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!576 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!577 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!578 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!579 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!580 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!581 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!582 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!583 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!584 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!585 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!586 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!587 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!588 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!589 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!590 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!591 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!592 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!593 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!594 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!595 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!596 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!597 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!598 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!599 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!600 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!601 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!602 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!603 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!604 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!605 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!606 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!607 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!608 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!609 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!610 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!611 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!612 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!613 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!614 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!615 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!616 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!617 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!618 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!619 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!620 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!621 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!622 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!623 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!624 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!625 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!626 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!627 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!628 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!629 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!630 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!631 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!632 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!633 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!634 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!635 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!636 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!637 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!638 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!639 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!640 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!641 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!642 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!643 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!644 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!645 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!646 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!647 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!648 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!649 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!650 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!651 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!652 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!653 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!654 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!655 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!656 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!657 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!658 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!659 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!660 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!661 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!662 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!663 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!664 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!665 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!666 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!667 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!668 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!669 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!670 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!671 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!672 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!673 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!674 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!675 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!676 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!677 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!678 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!679 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!680 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!681 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!682 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!683 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!684 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!685 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!686 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!687 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!688 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!689 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!690 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!691 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!692 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!693 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!694 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!695 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!696 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!697 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!698 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!699 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!700 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!701 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!702 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!703 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !704, line: 36, baseType: !7, size: 32, elements: !705)
!704 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!705 = !{!706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724}
!706 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!707 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!708 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!709 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!710 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!711 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!712 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!713 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!714 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!715 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!716 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!717 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!718 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!719 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!720 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!721 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!722 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!723 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!724 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!725 = !{!726, !727, !728, !729, !732, !733, !735, !742, !744, !1864, !1885, !1887, !7, !745, !560, !1839, !1899, !750, !897, !366, !760, !739, !5, !1907, !1846, !851, !1908, !868, !703, !1818, !1916, !1881}
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!728 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !731)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clear_alias_mode_holder", file: !3, line: 569, size: 64, elements: !737)
!737 = !{!738, !741}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !736, file: !3, line: 571, baseType: !739, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !740, line: 31, baseType: !728)
!740 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!741 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !736, file: !3, line: 572, baseType: !5, size: 32, offset: 32)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !736)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "bb_info_t", file: !3, line: 449, baseType: !746)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bb_info", file: !3, line: 391, size: 448, elements: !748)
!748 = !{!749, !1858, !1859, !1860, !1861, !1862, !1863}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "last_insn", scope: !747, file: !3, line: 397, baseType: !750, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "insn_info_t", file: !3, line: 384, baseType: !751)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "insn_info", file: !3, line: 314, size: 384, elements: !753)
!753 = !{!754, !755, !756, !757, !758, !759, !1817, !1845, !1856, !1857}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_delete", scope: !752, file: !3, line: 320, baseType: !727, size: 8)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "wild_read", scope: !752, file: !3, line: 326, baseType: !727, size: 8, offset: 8)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "frame_read", scope: !752, file: !3, line: 346, baseType: !727, size: 8, offset: 16)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "stack_pointer_based", scope: !752, file: !3, line: 350, baseType: !727, size: 8, offset: 24)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "contains_cselib_groups", scope: !752, file: !3, line: 355, baseType: !727, size: 8, offset: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !752, file: !3, line: 358, baseType: !760, size: 64, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !761, line: 50, baseType: !762)
!761 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !561, line: 240, size: 384, elements: !764)
!764 = !{!765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !763, file: !561, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !763, file: !561, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !763, file: !561, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !763, file: !561, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !763, file: !561, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !763, file: !561, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !763, file: !561, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !763, file: !561, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !763, file: !561, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !763, file: !561, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !763, file: !561, line: 321, baseType: !776, size: 320, offset: 64)
!776 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !561, line: 315, size: 320, elements: !777)
!777 = !{!778, !1784, !1786, !1815, !1816}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !776, file: !561, line: 316, baseType: !779, size: 64)
!779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !780, size: 64, elements: !795)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !561, line: 183, baseType: !781)
!781 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !561, line: 166, size: 64, elements: !782)
!782 = !{!783, !784, !785, !786, !787, !797, !798, !810, !834, !896, !1762, !1763, !1774, !1781}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !781, file: !561, line: 168, baseType: !728, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !781, file: !561, line: 169, baseType: !7, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !781, file: !561, line: 170, baseType: !733, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !781, file: !561, line: 171, baseType: !760, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !781, file: !561, line: 172, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !761, line: 53, baseType: !789)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !561, line: 359, size: 128, elements: !791)
!791 = !{!792, !793}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !790, file: !561, line: 360, baseType: !728, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !790, file: !561, line: 361, baseType: !794, size: 64, offset: 64)
!794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 64, elements: !795)
!795 = !{!796}
!796 = !DISubrange(count: 1)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !781, file: !561, line: 173, baseType: !5, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !781, file: !561, line: 174, baseType: !799, size: 32)
!799 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !561, line: 133, baseType: !800)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !561, line: 115, size: 32, elements: !801)
!801 = !{!802, !803, !804, !805, !806, !807, !808, !809}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !800, file: !561, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !800, file: !561, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !800, file: !561, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !800, file: !561, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !800, file: !561, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !800, file: !561, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !800, file: !561, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !800, file: !561, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !781, file: !561, line: 175, baseType: !811, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !813, line: 23, size: 320, elements: !814)
!813 = !DIFile(filename: "./cselib.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!814 = !{!815, !816, !817, !818, !825, !833}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !812, file: !813, line: 25, baseType: !7, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !812, file: !813, line: 28, baseType: !728, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "val_rtx", scope: !812, file: !813, line: 31, baseType: !760, size: 64, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "locs", scope: !812, file: !813, line: 35, baseType: !819, size: 64, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_loc_list", file: !813, line: 45, size: 192, elements: !821)
!821 = !{!822, !823, !824}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !820, file: !813, line: 47, baseType: !819, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !820, file: !813, line: 49, baseType: !760, size: 64, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "setting_insn", scope: !820, file: !813, line: 51, baseType: !760, size: 64, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !812, file: !813, line: 39, baseType: !826, size: 64, offset: 192)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_list", file: !813, line: 55, size: 128, elements: !828)
!828 = !{!829, !830}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !827, file: !813, line: 56, baseType: !826, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "elt", scope: !827, file: !813, line: 57, baseType: !831, size: 64, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "cselib_val", file: !813, line: 42, baseType: !812)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "next_containing_mem", scope: !812, file: !813, line: 41, baseType: !811, size: 64, offset: 256)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !781, file: !561, line: 176, baseType: !835, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !837, line: 75, size: 256, elements: !838)
!837 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!838 = !{!839, !854, !855, !856}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !836, file: !837, line: 76, baseType: !840, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !837, line: 68, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !837, line: 63, size: 320, elements: !843)
!843 = !{!844, !846, !847, !848}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !842, file: !837, line: 64, baseType: !845, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !842, file: !837, line: 65, baseType: !845, size: 64, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !842, file: !837, line: 66, baseType: !7, size: 32, offset: 128)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !842, file: !837, line: 67, baseType: !849, size: 128, offset: 192)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !850, size: 128, elements: !852)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !837, line: 29, baseType: !851)
!851 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!852 = !{!853}
!853 = !DISubrange(count: 2)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !836, file: !837, line: 77, baseType: !840, size: 64, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !836, file: !837, line: 78, baseType: !7, size: 32, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !836, file: !837, line: 79, baseType: !857, size: 64, offset: 192)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !837, line: 49, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !837, line: 45, size: 832, elements: !860)
!860 = !{!861, !862, !863}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !859, file: !837, line: 46, baseType: !845, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !859, file: !837, line: 47, baseType: !835, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !859, file: !837, line: 48, baseType: !864, size: 704, offset: 128)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !865, line: 164, size: 704, elements: !866)
!865 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!866 = !{!867, !869, !879, !880, !881, !882, !883, !884, !888, !892, !893, !894, !895}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !864, file: !865, line: 166, baseType: !868, size: 64)
!868 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !864, file: !865, line: 167, baseType: !870, size: 64, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !865, line: 157, size: 192, elements: !872)
!872 = !{!873, !874, !875}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !871, file: !865, line: 159, baseType: !730, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !871, file: !865, line: 160, baseType: !870, size: 64, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !871, file: !865, line: 161, baseType: !876, size: 32, offset: 128)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 32, elements: !877)
!877 = !{!878}
!878 = !DISubrange(count: 4)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !864, file: !865, line: 168, baseType: !730, size: 64, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !864, file: !865, line: 169, baseType: !730, size: 64, offset: 192)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !864, file: !865, line: 170, baseType: !730, size: 64, offset: 256)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !864, file: !865, line: 171, baseType: !868, size: 64, offset: 320)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !864, file: !865, line: 172, baseType: !728, size: 32, offset: 384)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !864, file: !865, line: 176, baseType: !885, size: 64, offset: 448)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DISubroutineType(types: !887)
!887 = !{!870, !732, !868}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !864, file: !865, line: 177, baseType: !889, size: 64, offset: 512)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DISubroutineType(types: !891)
!891 = !{null, !732, !870}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !864, file: !865, line: 178, baseType: !732, size: 64, offset: 576)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !864, file: !865, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !864, file: !865, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !864, file: !865, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !781, file: !561, line: 177, baseType: !897, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !761, line: 56, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !334, line: 3371, size: 1792, elements: !900)
!900 = !{!901, !934, !940, !951, !970, !981, !986, !993, !999, !1012, !1024, !1062, !1067, !1095, !1103, !1104, !1109, !1118, !1124, !1129, !1133, !1137, !1388, !1435, !1441, !1448, !1455, !1481, !1506, !1523, !1535, !1557, !1572, !1744}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !899, file: !334, line: 3372, baseType: !902, size: 64)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !334, line: 360, size: 64, elements: !903)
!903 = !{!904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !902, file: !334, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !902, file: !334, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !902, file: !334, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !902, file: !334, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !902, file: !334, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !902, file: !334, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !902, file: !334, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !902, file: !334, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !902, file: !334, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !902, file: !334, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !902, file: !334, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !902, file: !334, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !902, file: !334, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !902, file: !334, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !902, file: !334, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !902, file: !334, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !902, file: !334, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !902, file: !334, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !902, file: !334, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !902, file: !334, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !902, file: !334, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !902, file: !334, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !902, file: !334, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !902, file: !334, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !902, file: !334, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !902, file: !334, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !902, file: !334, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !902, file: !334, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !902, file: !334, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !902, file: !334, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !899, file: !334, line: 3373, baseType: !935, size: 192)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !334, line: 402, size: 192, elements: !936)
!936 = !{!937, !938, !939}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !935, file: !334, line: 403, baseType: !902, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !935, file: !334, line: 404, baseType: !897, size: 64, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !935, file: !334, line: 405, baseType: !897, size: 64, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !899, file: !334, line: 3374, baseType: !941, size: 320)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !334, line: 1384, size: 320, elements: !942)
!942 = !{!943, !944}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !941, file: !334, line: 1385, baseType: !935, size: 192)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !941, file: !334, line: 1386, baseType: !945, size: 128, offset: 192)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !946, line: 58, baseType: !947)
!946 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !946, line: 54, size: 128, elements: !948)
!948 = !{!949, !950}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !947, file: !946, line: 56, baseType: !851, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !947, file: !946, line: 57, baseType: !868, size: 64, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !899, file: !334, line: 3375, baseType: !952, size: 256)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !334, line: 1397, size: 256, elements: !953)
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !952, file: !334, line: 1398, baseType: !935, size: 192)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !952, file: !334, line: 1399, baseType: !956, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !958, line: 52, size: 256, elements: !959)
!958 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!959 = !{!960, !961, !962, !963, !964, !965, !966}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !957, file: !958, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !957, file: !958, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !957, file: !958, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !957, file: !958, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !957, file: !958, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !957, file: !958, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !957, file: !958, line: 62, baseType: !967, size: 192, offset: 64)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !851, size: 192, elements: !968)
!968 = !{!969}
!969 = !DISubrange(count: 3)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !899, file: !334, line: 3376, baseType: !971, size: 256)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !334, line: 1408, size: 256, elements: !972)
!972 = !{!973, !974}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !971, file: !334, line: 1409, baseType: !935, size: 192)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !971, file: !334, line: 1410, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !977, line: 27, size: 192, elements: !978)
!977 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!978 = !{!979, !980}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !976, file: !977, line: 29, baseType: !945, size: 128)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !976, file: !977, line: 30, baseType: !5, size: 32, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !899, file: !334, line: 3377, baseType: !982, size: 256)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !334, line: 1437, size: 256, elements: !983)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !982, file: !334, line: 1438, baseType: !935, size: 192)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !982, file: !334, line: 1439, baseType: !897, size: 64, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !899, file: !334, line: 3378, baseType: !987, size: 256)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !334, line: 1418, size: 256, elements: !988)
!988 = !{!989, !990, !991}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !987, file: !334, line: 1419, baseType: !935, size: 192)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !987, file: !334, line: 1420, baseType: !728, size: 32, offset: 192)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !987, file: !334, line: 1421, baseType: !992, size: 8, offset: 224)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 8, elements: !795)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !899, file: !334, line: 3379, baseType: !994, size: 320)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !334, line: 1428, size: 320, elements: !995)
!995 = !{!996, !997, !998}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !994, file: !334, line: 1429, baseType: !935, size: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !994, file: !334, line: 1430, baseType: !897, size: 64, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !994, file: !334, line: 1431, baseType: !897, size: 64, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !899, file: !334, line: 3380, baseType: !1000, size: 320)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !334, line: 1460, size: 320, elements: !1001)
!1001 = !{!1002, !1003}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1000, file: !334, line: 1461, baseType: !935, size: 192)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1000, file: !334, line: 1462, baseType: !1004, size: 128, offset: 192)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1005, line: 31, size: 128, elements: !1006)
!1005 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1006 = !{!1007, !1010, !1011}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1004, file: !1005, line: 32, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1004, file: !1005, line: 33, baseType: !7, size: 32, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1004, file: !1005, line: 34, baseType: !7, size: 32, offset: 96)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !899, file: !334, line: 3381, baseType: !1013, size: 384)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !334, line: 2507, size: 384, elements: !1014)
!1014 = !{!1015, !1016, !1021, !1022, !1023}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1013, file: !334, line: 2508, baseType: !935, size: 192)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1013, file: !334, line: 2509, baseType: !1017, size: 32, offset: 192)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1018, line: 58, baseType: !1019)
!1018 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1020, line: 44, baseType: !7)
!1020 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1013, file: !334, line: 2510, baseType: !7, size: 32, offset: 224)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1013, file: !334, line: 2511, baseType: !897, size: 64, offset: 256)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1013, file: !334, line: 2512, baseType: !897, size: 64, offset: 320)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !899, file: !334, line: 3382, baseType: !1025, size: 896)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !334, line: 2652, size: 896, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1025, file: !334, line: 2653, baseType: !1013, size: 384)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1025, file: !334, line: 2654, baseType: !897, size: 64, offset: 384)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1025, file: !334, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1025, file: !334, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1025, file: !334, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1025, file: !334, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1025, file: !334, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1025, file: !334, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1025, file: !334, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1025, file: !334, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1025, file: !334, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1025, file: !334, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1025, file: !334, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1025, file: !334, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1025, file: !334, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1025, file: !334, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1025, file: !334, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1025, file: !334, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1025, file: !334, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1025, file: !334, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1025, file: !334, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1025, file: !334, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1025, file: !334, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1025, file: !334, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1025, file: !334, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1025, file: !334, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1025, file: !334, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1025, file: !334, line: 2703, baseType: !7, size: 32, offset: 512)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1025, file: !334, line: 2705, baseType: !897, size: 64, offset: 576)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1025, file: !334, line: 2706, baseType: !897, size: 64, offset: 640)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1025, file: !334, line: 2707, baseType: !897, size: 64, offset: 704)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1025, file: !334, line: 2708, baseType: !897, size: 64, offset: 768)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1025, file: !334, line: 2711, baseType: !1060, size: 64, offset: 832)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !334, line: 2711, flags: DIFlagFwdDecl)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !899, file: !334, line: 3383, baseType: !1063, size: 960)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !334, line: 2756, size: 960, elements: !1064)
!1064 = !{!1065, !1066}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1063, file: !334, line: 2757, baseType: !1025, size: 896)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1063, file: !334, line: 2758, baseType: !760, size: 64, offset: 896)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !899, file: !334, line: 3384, baseType: !1068, size: 1472)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !334, line: 3114, size: 1472, elements: !1069)
!1069 = !{!1070, !1091, !1092, !1093, !1094}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1068, file: !334, line: 3115, baseType: !1071, size: 1216)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !334, line: 2984, size: 1216, elements: !1072)
!1072 = !{!1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1071, file: !334, line: 2985, baseType: !1063, size: 960)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1071, file: !334, line: 2986, baseType: !897, size: 64, offset: 960)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1071, file: !334, line: 2987, baseType: !897, size: 64, offset: 1024)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1071, file: !334, line: 2988, baseType: !897, size: 64, offset: 1088)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1071, file: !334, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1071, file: !334, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1071, file: !334, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1071, file: !334, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1071, file: !334, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1071, file: !334, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1071, file: !334, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1071, file: !334, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1071, file: !334, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1071, file: !334, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1071, file: !334, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1071, file: !334, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1071, file: !334, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1071, file: !334, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1068, file: !334, line: 3117, baseType: !897, size: 64, offset: 1216)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1068, file: !334, line: 3119, baseType: !897, size: 64, offset: 1280)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1068, file: !334, line: 3121, baseType: !897, size: 64, offset: 1344)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1068, file: !334, line: 3123, baseType: !897, size: 64, offset: 1408)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !899, file: !334, line: 3385, baseType: !1096, size: 1088)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !334, line: 2874, size: 1088, elements: !1097)
!1097 = !{!1098, !1099, !1100}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1096, file: !334, line: 2875, baseType: !1063, size: 960)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1096, file: !334, line: 2876, baseType: !760, size: 64, offset: 960)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1096, file: !334, line: 2877, baseType: !1101, size: 64, offset: 1024)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !334, line: 2856, flags: DIFlagFwdDecl)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !899, file: !334, line: 3386, baseType: !1071, size: 1216)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !899, file: !334, line: 3387, baseType: !1105, size: 1280)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !334, line: 3093, size: 1280, elements: !1106)
!1106 = !{!1107, !1108}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1105, file: !334, line: 3094, baseType: !1071, size: 1216)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1105, file: !334, line: 3095, baseType: !1101, size: 64, offset: 1216)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !899, file: !334, line: 3388, baseType: !1110, size: 1216)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !334, line: 2824, size: 1216, elements: !1111)
!1111 = !{!1112, !1113, !1114, !1115, !1116, !1117}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1110, file: !334, line: 2825, baseType: !1025, size: 896)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1110, file: !334, line: 2827, baseType: !897, size: 64, offset: 896)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1110, file: !334, line: 2828, baseType: !897, size: 64, offset: 960)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1110, file: !334, line: 2829, baseType: !897, size: 64, offset: 1024)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1110, file: !334, line: 2830, baseType: !897, size: 64, offset: 1088)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1110, file: !334, line: 2831, baseType: !897, size: 64, offset: 1152)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !899, file: !334, line: 3389, baseType: !1119, size: 1024)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !334, line: 2850, size: 1024, elements: !1120)
!1120 = !{!1121, !1122, !1123}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1119, file: !334, line: 2851, baseType: !1063, size: 960)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1119, file: !334, line: 2852, baseType: !728, size: 32, offset: 960)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1119, file: !334, line: 2853, baseType: !728, size: 32, offset: 992)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !899, file: !334, line: 3390, baseType: !1125, size: 1024)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !334, line: 2857, size: 1024, elements: !1126)
!1126 = !{!1127, !1128}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1125, file: !334, line: 2858, baseType: !1063, size: 960)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1125, file: !334, line: 2859, baseType: !1101, size: 64, offset: 960)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !899, file: !334, line: 3391, baseType: !1130, size: 960)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !334, line: 2862, size: 960, elements: !1131)
!1131 = !{!1132}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1130, file: !334, line: 2863, baseType: !1063, size: 960)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !899, file: !334, line: 3392, baseType: !1134, size: 1472)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !334, line: 3304, size: 1472, elements: !1135)
!1135 = !{!1136}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1134, file: !334, line: 3305, baseType: !1068, size: 1472)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !899, file: !334, line: 3393, baseType: !1138, size: 1792)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !334, line: 3248, size: 1792, elements: !1139)
!1139 = !{!1140, !1141, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1138, file: !334, line: 3249, baseType: !1068, size: 1472)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1138, file: !334, line: 3251, baseType: !1142, size: 64, offset: 1472)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1144, line: 463, size: 1152, elements: !1145)
!1144 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1145 = !{!1146, !1149, !1253, !1254, !1257, !1260, !1312, !1313, !1314, !1315, !1316, !1340, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1143, file: !1144, line: 464, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1144, line: 464, flags: DIFlagFwdDecl)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1143, file: !1144, line: 467, baseType: !1150, size: 64, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !318, line: 374, size: 640, elements: !1152)
!1152 = !{!1153, !1228, !1229, !1242, !1243, !1244, !1245, !1246, !1247, !1249, !1251, !1252}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1151, file: !318, line: 377, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !761, line: 111, baseType: !1155)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !318, line: 217, size: 832, elements: !1157)
!1157 = !{!1158, !1193, !1194, !1195, !1198, !1202, !1203, !1204, !1222, !1223, !1224, !1225, !1226, !1227}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1156, file: !318, line: 219, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !318, line: 151, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !318, line: 151, size: 128, elements: !1162)
!1162 = !{!1163}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1161, file: !318, line: 151, baseType: !1164, size: 128)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !318, line: 150, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !318, line: 150, size: 128, elements: !1166)
!1166 = !{!1167, !1168, !1169}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1165, file: !318, line: 150, baseType: !7, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1165, file: !318, line: 150, baseType: !7, size: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1165, file: !318, line: 150, baseType: !1170, size: 64, offset: 64)
!1170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1171, size: 64, elements: !795)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !761, line: 108, baseType: !1172)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !318, line: 122, size: 512, elements: !1174)
!1174 = !{!1175, !1176, !1177, !1185, !1186, !1187, !1188, !1189, !1190, !1191}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1173, file: !318, line: 124, baseType: !1155, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1173, file: !318, line: 125, baseType: !1155, size: 64, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1173, file: !318, line: 131, baseType: !1178, size: 64, offset: 128)
!1178 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !318, line: 128, size: 64, elements: !1179)
!1179 = !{!1180, !1184}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1178, file: !318, line: 129, baseType: !1181, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !761, line: 66, baseType: !1182)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !761, line: 65, flags: DIFlagFwdDecl)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1178, file: !318, line: 130, baseType: !760, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1173, file: !318, line: 134, baseType: !732, size: 64, offset: 192)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1173, file: !318, line: 137, baseType: !897, size: 64, offset: 256)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1173, file: !318, line: 138, baseType: !1017, size: 32, offset: 320)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1173, file: !318, line: 142, baseType: !7, size: 32, offset: 352)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1173, file: !318, line: 144, baseType: !728, size: 32, offset: 384)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1173, file: !318, line: 145, baseType: !728, size: 32, offset: 416)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1173, file: !318, line: 146, baseType: !1192, size: 64, offset: 448)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !318, line: 119, baseType: !868)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1156, file: !318, line: 220, baseType: !1159, size: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1156, file: !318, line: 223, baseType: !732, size: 64, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1156, file: !318, line: 226, baseType: !1196, size: 64, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !318, line: 185, flags: DIFlagFwdDecl)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1156, file: !318, line: 229, baseType: !1199, size: 128, offset: 256)
!1199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1200, size: 128, elements: !852)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !318, line: 229, flags: DIFlagFwdDecl)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1156, file: !318, line: 232, baseType: !1155, size: 64, offset: 384)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1156, file: !318, line: 233, baseType: !1155, size: 64, offset: 448)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1156, file: !318, line: 238, baseType: !1205, size: 64, offset: 512)
!1205 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !318, line: 235, size: 64, elements: !1206)
!1206 = !{!1207, !1213}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1205, file: !318, line: 236, baseType: !1208, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !318, line: 273, size: 128, elements: !1210)
!1210 = !{!1211, !1212}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1209, file: !318, line: 275, baseType: !1181, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1209, file: !318, line: 278, baseType: !1181, size: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1205, file: !318, line: 237, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !318, line: 259, size: 320, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1215, file: !318, line: 261, baseType: !760, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1215, file: !318, line: 262, baseType: !760, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1215, file: !318, line: 266, baseType: !760, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1215, file: !318, line: 267, baseType: !760, size: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1215, file: !318, line: 270, baseType: !728, size: 32, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1156, file: !318, line: 241, baseType: !1192, size: 64, offset: 576)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1156, file: !318, line: 244, baseType: !728, size: 32, offset: 640)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1156, file: !318, line: 247, baseType: !728, size: 32, offset: 672)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1156, file: !318, line: 250, baseType: !728, size: 32, offset: 704)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1156, file: !318, line: 253, baseType: !728, size: 32, offset: 736)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1156, file: !318, line: 256, baseType: !728, size: 32, offset: 768)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1151, file: !318, line: 378, baseType: !1154, size: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1151, file: !318, line: 381, baseType: !1230, size: 64, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !318, line: 282, baseType: !1232)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !318, line: 282, size: 128, elements: !1233)
!1233 = !{!1234}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1232, file: !318, line: 282, baseType: !1235, size: 128)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !318, line: 281, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !318, line: 281, size: 128, elements: !1237)
!1237 = !{!1238, !1239, !1240}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1236, file: !318, line: 281, baseType: !7, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1236, file: !318, line: 281, baseType: !7, size: 32, offset: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1236, file: !318, line: 281, baseType: !1241, size: 64, offset: 64)
!1241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1154, size: 64, elements: !795)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1151, file: !318, line: 384, baseType: !728, size: 32, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1151, file: !318, line: 387, baseType: !728, size: 32, offset: 224)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1151, file: !318, line: 390, baseType: !728, size: 32, offset: 256)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1151, file: !318, line: 394, baseType: !1230, size: 64, offset: 320)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1151, file: !318, line: 396, baseType: !317, size: 32, offset: 384)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1151, file: !318, line: 399, baseType: !1248, size: 64, offset: 416)
!1248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 64, elements: !852)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1151, file: !318, line: 402, baseType: !1250, size: 64, offset: 480)
!1250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !852)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1151, file: !318, line: 406, baseType: !728, size: 32, offset: 544)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1151, file: !318, line: 409, baseType: !728, size: 32, offset: 576)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1143, file: !1144, line: 470, baseType: !1182, size: 64, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1143, file: !1144, line: 473, baseType: !1255, size: 64, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1144, line: 166, flags: DIFlagFwdDecl)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1143, file: !1144, line: 476, baseType: !1258, size: 64, offset: 256)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1144, line: 476, flags: DIFlagFwdDecl)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1143, file: !1144, line: 479, baseType: !1261, size: 64, offset: 320)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1262, line: 144, baseType: !1263)
!1262 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1262, line: 100, size: 896, elements: !1265)
!1265 = !{!1266, !1274, !1279, !1284, !1286, !1289, !1290, !1291, !1292, !1293, !1298, !1300, !1301, !1306, !1311}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1264, file: !1262, line: 102, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1262, line: 52, baseType: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!1271, !1272}
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1262, line: 47, baseType: !7)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1264, file: !1262, line: 105, baseType: !1275, size: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1262, line: 59, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!728, !1272, !1272}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1264, file: !1262, line: 108, baseType: !1280, size: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1262, line: 63, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{null, !732}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1264, file: !1262, line: 111, baseType: !1285, size: 64, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1264, file: !1262, line: 114, baseType: !1287, size: 64, offset: 256)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1288, line: 46, baseType: !851)
!1288 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1264, file: !1262, line: 117, baseType: !1287, size: 64, offset: 320)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1264, file: !1262, line: 120, baseType: !1287, size: 64, offset: 384)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1264, file: !1262, line: 124, baseType: !7, size: 32, offset: 448)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1264, file: !1262, line: 128, baseType: !7, size: 32, offset: 480)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1264, file: !1262, line: 131, baseType: !1294, size: 64, offset: 512)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1262, line: 75, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!732, !1287, !1287}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1264, file: !1262, line: 132, baseType: !1299, size: 64, offset: 576)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1262, line: 78, baseType: !1281)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1264, file: !1262, line: 135, baseType: !732, size: 64, offset: 640)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1264, file: !1262, line: 136, baseType: !1302, size: 64, offset: 704)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1262, line: 82, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!732, !732, !1287, !1287}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1264, file: !1262, line: 137, baseType: !1307, size: 64, offset: 768)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1262, line: 83, baseType: !1308)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{null, !732, !732}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1264, file: !1262, line: 141, baseType: !7, size: 32, offset: 832)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1143, file: !1144, line: 484, baseType: !897, size: 64, offset: 384)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1143, file: !1144, line: 488, baseType: !897, size: 64, offset: 448)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1143, file: !1144, line: 493, baseType: !897, size: 64, offset: 512)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1143, file: !1144, line: 496, baseType: !897, size: 64, offset: 576)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1143, file: !1144, line: 501, baseType: !1317, size: 64, offset: 640)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !329, line: 2355, size: 576, elements: !1319)
!1319 = !{!1320, !1323, !1324, !1325, !1326, !1328, !1329, !1334, !1335, !1336, !1337, !1338, !1339}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1318, file: !329, line: 2356, baseType: !1321, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !329, line: 2356, flags: DIFlagFwdDecl)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1318, file: !329, line: 2357, baseType: !733, size: 64, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1318, file: !329, line: 2358, baseType: !728, size: 32, offset: 128)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1318, file: !329, line: 2359, baseType: !728, size: 32, offset: 160)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1318, file: !329, line: 2360, baseType: !1327, size: 128, offset: 192)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !728, size: 128, elements: !877)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1318, file: !329, line: 2364, baseType: !728, size: 32, offset: 320)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1318, file: !329, line: 2367, baseType: !1330, size: 128, offset: 384)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !329, line: 2349, size: 128, elements: !1331)
!1331 = !{!1332, !1333}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1330, file: !329, line: 2351, baseType: !760, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1330, file: !329, line: 2352, baseType: !868, size: 64, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1318, file: !329, line: 2371, baseType: !328, size: 32, offset: 512)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1318, file: !329, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1318, file: !329, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1318, file: !329, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1318, file: !329, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1318, file: !329, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1143, file: !1144, line: 504, baseType: !1341, size: 64, offset: 704)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1144, line: 504, flags: DIFlagFwdDecl)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1143, file: !1144, line: 507, baseType: !1261, size: 64, offset: 768)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1143, file: !1144, line: 510, baseType: !728, size: 32, offset: 832)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1143, file: !1144, line: 513, baseType: !728, size: 32, offset: 864)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1143, file: !1144, line: 516, baseType: !1017, size: 32, offset: 896)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1143, file: !1144, line: 519, baseType: !1017, size: 32, offset: 928)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1143, file: !1144, line: 522, baseType: !7, size: 32, offset: 960)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1143, file: !1144, line: 523, baseType: !7, size: 32, offset: 992)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1143, file: !1144, line: 528, baseType: !733, size: 64, offset: 1024)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1143, file: !1144, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1143, file: !1144, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1143, file: !1144, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1143, file: !1144, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1143, file: !1144, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1143, file: !1144, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1143, file: !1144, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1143, file: !1144, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1143, file: !1144, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1143, file: !1144, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1143, file: !1144, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1143, file: !1144, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1143, file: !1144, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1143, file: !1144, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1143, file: !1144, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1143, file: !1144, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1138, file: !334, line: 3254, baseType: !897, size: 64, offset: 1536)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1138, file: !334, line: 3257, baseType: !897, size: 64, offset: 1600)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1138, file: !334, line: 3258, baseType: !897, size: 64, offset: 1664)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1138, file: !334, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1138, file: !334, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1138, file: !334, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1138, file: !334, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1138, file: !334, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1138, file: !334, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1138, file: !334, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1138, file: !334, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1138, file: !334, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1138, file: !334, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1138, file: !334, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1138, file: !334, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1138, file: !334, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1138, file: !334, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1138, file: !334, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1138, file: !334, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1138, file: !334, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1138, file: !334, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !899, file: !334, line: 3394, baseType: !1389, size: 1344)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !334, line: 2279, size: 1344, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1389, file: !334, line: 2280, baseType: !935, size: 192)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1389, file: !334, line: 2281, baseType: !897, size: 64, offset: 192)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1389, file: !334, line: 2282, baseType: !897, size: 64, offset: 256)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1389, file: !334, line: 2283, baseType: !897, size: 64, offset: 320)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1389, file: !334, line: 2284, baseType: !897, size: 64, offset: 384)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1389, file: !334, line: 2285, baseType: !7, size: 32, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1389, file: !334, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1389, file: !334, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1389, file: !334, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1389, file: !334, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1389, file: !334, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1389, file: !334, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1389, file: !334, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1389, file: !334, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1389, file: !334, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1389, file: !334, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1389, file: !334, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1389, file: !334, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1389, file: !334, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1389, file: !334, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1389, file: !334, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1389, file: !334, line: 2305, baseType: !7, size: 32, offset: 512)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1389, file: !334, line: 2306, baseType: !739, size: 32, offset: 544)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1389, file: !334, line: 2307, baseType: !897, size: 64, offset: 576)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1389, file: !334, line: 2308, baseType: !897, size: 64, offset: 640)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1389, file: !334, line: 2314, baseType: !1417, size: 64, offset: 704)
!1417 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !334, line: 2309, size: 64, elements: !1418)
!1418 = !{!1419, !1420, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1417, file: !334, line: 2310, baseType: !728, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1417, file: !334, line: 2311, baseType: !733, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1417, file: !334, line: 2312, baseType: !1422, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !334, line: 2277, flags: DIFlagFwdDecl)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1389, file: !334, line: 2315, baseType: !897, size: 64, offset: 768)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1389, file: !334, line: 2316, baseType: !897, size: 64, offset: 832)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1389, file: !334, line: 2317, baseType: !897, size: 64, offset: 896)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1389, file: !334, line: 2318, baseType: !897, size: 64, offset: 960)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1389, file: !334, line: 2319, baseType: !897, size: 64, offset: 1024)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1389, file: !334, line: 2320, baseType: !897, size: 64, offset: 1088)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1389, file: !334, line: 2321, baseType: !897, size: 64, offset: 1152)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1389, file: !334, line: 2322, baseType: !897, size: 64, offset: 1216)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1389, file: !334, line: 2324, baseType: !1433, size: 64, offset: 1280)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !334, line: 2324, flags: DIFlagFwdDecl)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !899, file: !334, line: 3395, baseType: !1436, size: 320)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !334, line: 1469, size: 320, elements: !1437)
!1437 = !{!1438, !1439, !1440}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1436, file: !334, line: 1470, baseType: !935, size: 192)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1436, file: !334, line: 1471, baseType: !897, size: 64, offset: 192)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1436, file: !334, line: 1472, baseType: !897, size: 64, offset: 256)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !899, file: !334, line: 3396, baseType: !1442, size: 320)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !334, line: 1482, size: 320, elements: !1443)
!1443 = !{!1444, !1445, !1446}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1442, file: !334, line: 1483, baseType: !935, size: 192)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1442, file: !334, line: 1484, baseType: !728, size: 32, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1442, file: !334, line: 1485, baseType: !1447, size: 64, offset: 256)
!1447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !897, size: 64, elements: !795)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !899, file: !334, line: 3397, baseType: !1449, size: 384)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !334, line: 1829, size: 384, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1449, file: !334, line: 1830, baseType: !935, size: 192)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1449, file: !334, line: 1831, baseType: !1017, size: 32, offset: 192)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1449, file: !334, line: 1832, baseType: !897, size: 64, offset: 256)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1449, file: !334, line: 1835, baseType: !1447, size: 64, offset: 320)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !899, file: !334, line: 3398, baseType: !1456, size: 704)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !334, line: 1898, size: 704, elements: !1457)
!1457 = !{!1458, !1459, !1460, !1464, !1465, !1468}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1456, file: !334, line: 1899, baseType: !935, size: 192)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1456, file: !334, line: 1902, baseType: !897, size: 64, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1456, file: !334, line: 1905, baseType: !1461, size: 64, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !761, line: 58, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !761, line: 57, flags: DIFlagFwdDecl)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1456, file: !334, line: 1908, baseType: !7, size: 32, offset: 320)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1456, file: !334, line: 1911, baseType: !1466, size: 64, offset: 384)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !334, line: 1876, flags: DIFlagFwdDecl)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1456, file: !334, line: 1914, baseType: !1469, size: 256, offset: 448)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !334, line: 1883, size: 256, elements: !1470)
!1470 = !{!1471, !1473, !1474, !1479}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1469, file: !334, line: 1884, baseType: !1472, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1469, file: !334, line: 1885, baseType: !1472, size: 64, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1469, file: !334, line: 1891, baseType: !1475, size: 64, offset: 128)
!1475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1469, file: !334, line: 1891, size: 64, elements: !1476)
!1476 = !{!1477, !1478}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1475, file: !334, line: 1891, baseType: !1461, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1475, file: !334, line: 1891, baseType: !897, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1469, file: !334, line: 1892, baseType: !1480, size: 64, offset: 192)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !899, file: !334, line: 3399, baseType: !1482, size: 704)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !334, line: 2008, size: 704, elements: !1483)
!1483 = !{!1484, !1485, !1486, !1487, !1488, !1489, !1501, !1502, !1503, !1504, !1505}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1482, file: !334, line: 2009, baseType: !935, size: 192)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1482, file: !334, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1482, file: !334, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1482, file: !334, line: 2014, baseType: !1017, size: 32, offset: 224)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1482, file: !334, line: 2016, baseType: !897, size: 64, offset: 256)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1482, file: !334, line: 2017, baseType: !1490, size: 64, offset: 320)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !334, line: 183, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !334, line: 183, size: 128, elements: !1493)
!1493 = !{!1494}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1492, file: !334, line: 183, baseType: !1495, size: 128)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !334, line: 182, baseType: !1496)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !334, line: 182, size: 128, elements: !1497)
!1497 = !{!1498, !1499, !1500}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1496, file: !334, line: 182, baseType: !7, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1496, file: !334, line: 182, baseType: !7, size: 32, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1496, file: !334, line: 182, baseType: !1447, size: 64, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1482, file: !334, line: 2019, baseType: !897, size: 64, offset: 384)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1482, file: !334, line: 2020, baseType: !897, size: 64, offset: 448)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1482, file: !334, line: 2021, baseType: !897, size: 64, offset: 512)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1482, file: !334, line: 2022, baseType: !897, size: 64, offset: 576)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1482, file: !334, line: 2023, baseType: !897, size: 64, offset: 640)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !899, file: !334, line: 3400, baseType: !1507, size: 832)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !334, line: 2430, size: 832, elements: !1508)
!1508 = !{!1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1507, file: !334, line: 2431, baseType: !935, size: 192)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1507, file: !334, line: 2433, baseType: !897, size: 64, offset: 192)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1507, file: !334, line: 2434, baseType: !897, size: 64, offset: 256)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1507, file: !334, line: 2435, baseType: !897, size: 64, offset: 320)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1507, file: !334, line: 2436, baseType: !897, size: 64, offset: 384)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1507, file: !334, line: 2437, baseType: !1490, size: 64, offset: 448)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1507, file: !334, line: 2438, baseType: !897, size: 64, offset: 512)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1507, file: !334, line: 2440, baseType: !897, size: 64, offset: 576)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1507, file: !334, line: 2441, baseType: !897, size: 64, offset: 640)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1507, file: !334, line: 2443, baseType: !1519, size: 128, offset: 704)
!1519 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !334, line: 182, baseType: !1520)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !334, line: 182, size: 128, elements: !1521)
!1521 = !{!1522}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1520, file: !334, line: 182, baseType: !1495, size: 128)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !899, file: !334, line: 3401, baseType: !1524, size: 320)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !334, line: 3327, size: 320, elements: !1525)
!1525 = !{!1526, !1527, !1534}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1524, file: !334, line: 3329, baseType: !935, size: 192)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1524, file: !334, line: 3330, baseType: !1528, size: 64, offset: 192)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !334, line: 3320, size: 192, elements: !1530)
!1530 = !{!1531, !1532, !1533}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1529, file: !334, line: 3322, baseType: !1528, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1529, file: !334, line: 3323, baseType: !1528, size: 64, offset: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1529, file: !334, line: 3324, baseType: !897, size: 64, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1524, file: !334, line: 3331, baseType: !1528, size: 64, offset: 256)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !899, file: !334, line: 3402, baseType: !1536, size: 256)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !334, line: 1540, size: 256, elements: !1537)
!1537 = !{!1538, !1539}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1536, file: !334, line: 1541, baseType: !935, size: 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1536, file: !334, line: 1542, baseType: !1540, size: 64, offset: 192)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !334, line: 1538, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !334, line: 1538, size: 192, elements: !1543)
!1543 = !{!1544}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1542, file: !334, line: 1538, baseType: !1545, size: 192)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !334, line: 1537, baseType: !1546)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !334, line: 1537, size: 192, elements: !1547)
!1547 = !{!1548, !1549, !1550}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1546, file: !334, line: 1537, baseType: !7, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1546, file: !334, line: 1537, baseType: !7, size: 32, offset: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1546, file: !334, line: 1537, baseType: !1551, size: 128, offset: 64)
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 128, elements: !795)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !334, line: 1535, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !334, line: 1532, size: 128, elements: !1554)
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1553, file: !334, line: 1533, baseType: !897, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1553, file: !334, line: 1534, baseType: !897, size: 64, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !899, file: !334, line: 3403, baseType: !1558, size: 512)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !334, line: 1938, size: 512, elements: !1559)
!1559 = !{!1560, !1561, !1562, !1563, !1569, !1570, !1571}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1558, file: !334, line: 1939, baseType: !935, size: 192)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1558, file: !334, line: 1940, baseType: !1017, size: 32, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1558, file: !334, line: 1941, baseType: !333, size: 32, offset: 224)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1558, file: !334, line: 1946, baseType: !1564, size: 32, offset: 256)
!1564 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !334, line: 1942, size: 32, elements: !1565)
!1565 = !{!1566, !1567, !1568}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1564, file: !334, line: 1943, baseType: !352, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1564, file: !334, line: 1944, baseType: !359, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1564, file: !334, line: 1945, baseType: !366, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1558, file: !334, line: 1950, baseType: !1181, size: 64, offset: 320)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1558, file: !334, line: 1951, baseType: !1181, size: 64, offset: 384)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1558, file: !334, line: 1953, baseType: !1447, size: 64, offset: 448)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !899, file: !334, line: 3404, baseType: !1573, size: 1664)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !334, line: 3337, size: 1664, elements: !1574)
!1574 = !{!1575, !1576}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1573, file: !334, line: 3338, baseType: !935, size: 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1573, file: !334, line: 3341, baseType: !1577, size: 1472, offset: 192)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1578, line: 410, size: 1472, elements: !1579)
!1578 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1579 = !{!1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1577, file: !1578, line: 412, baseType: !728, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1577, file: !1578, line: 413, baseType: !728, size: 32, offset: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1577, file: !1578, line: 414, baseType: !728, size: 32, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1577, file: !1578, line: 415, baseType: !728, size: 32, offset: 96)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1577, file: !1578, line: 416, baseType: !728, size: 32, offset: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1577, file: !1578, line: 417, baseType: !728, size: 32, offset: 160)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1577, file: !1578, line: 418, baseType: !727, size: 8, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1577, file: !1578, line: 419, baseType: !727, size: 8, offset: 200)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1577, file: !1578, line: 420, baseType: !1589, size: 8, offset: 208)
!1589 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1577, file: !1578, line: 421, baseType: !1589, size: 8, offset: 216)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1577, file: !1578, line: 422, baseType: !1589, size: 8, offset: 224)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1577, file: !1578, line: 423, baseType: !1589, size: 8, offset: 232)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1577, file: !1578, line: 424, baseType: !1589, size: 8, offset: 240)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1577, file: !1578, line: 425, baseType: !1589, size: 8, offset: 248)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1577, file: !1578, line: 426, baseType: !1589, size: 8, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1577, file: !1578, line: 427, baseType: !1589, size: 8, offset: 264)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1577, file: !1578, line: 428, baseType: !1589, size: 8, offset: 272)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1577, file: !1578, line: 429, baseType: !1589, size: 8, offset: 280)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1577, file: !1578, line: 430, baseType: !1589, size: 8, offset: 288)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1577, file: !1578, line: 431, baseType: !1589, size: 8, offset: 296)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1577, file: !1578, line: 432, baseType: !1589, size: 8, offset: 304)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1577, file: !1578, line: 433, baseType: !1589, size: 8, offset: 312)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1577, file: !1578, line: 434, baseType: !1589, size: 8, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1577, file: !1578, line: 435, baseType: !1589, size: 8, offset: 328)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1577, file: !1578, line: 436, baseType: !1589, size: 8, offset: 336)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1577, file: !1578, line: 437, baseType: !1589, size: 8, offset: 344)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1577, file: !1578, line: 438, baseType: !1589, size: 8, offset: 352)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1577, file: !1578, line: 439, baseType: !1589, size: 8, offset: 360)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1577, file: !1578, line: 440, baseType: !1589, size: 8, offset: 368)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1577, file: !1578, line: 441, baseType: !1589, size: 8, offset: 376)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1577, file: !1578, line: 442, baseType: !1589, size: 8, offset: 384)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1577, file: !1578, line: 443, baseType: !1589, size: 8, offset: 392)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1577, file: !1578, line: 444, baseType: !1589, size: 8, offset: 400)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1577, file: !1578, line: 445, baseType: !1589, size: 8, offset: 408)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1577, file: !1578, line: 446, baseType: !1589, size: 8, offset: 416)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1577, file: !1578, line: 447, baseType: !1589, size: 8, offset: 424)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1577, file: !1578, line: 448, baseType: !1589, size: 8, offset: 432)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1577, file: !1578, line: 449, baseType: !1589, size: 8, offset: 440)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1577, file: !1578, line: 450, baseType: !1589, size: 8, offset: 448)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1577, file: !1578, line: 451, baseType: !1589, size: 8, offset: 456)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1577, file: !1578, line: 452, baseType: !1589, size: 8, offset: 464)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1577, file: !1578, line: 453, baseType: !1589, size: 8, offset: 472)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1577, file: !1578, line: 454, baseType: !1589, size: 8, offset: 480)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1577, file: !1578, line: 455, baseType: !1589, size: 8, offset: 488)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1577, file: !1578, line: 456, baseType: !1589, size: 8, offset: 496)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1577, file: !1578, line: 457, baseType: !1589, size: 8, offset: 504)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1577, file: !1578, line: 458, baseType: !1589, size: 8, offset: 512)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1577, file: !1578, line: 459, baseType: !1589, size: 8, offset: 520)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1577, file: !1578, line: 460, baseType: !1589, size: 8, offset: 528)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1577, file: !1578, line: 461, baseType: !1589, size: 8, offset: 536)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1577, file: !1578, line: 462, baseType: !1589, size: 8, offset: 544)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1577, file: !1578, line: 463, baseType: !1589, size: 8, offset: 552)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1577, file: !1578, line: 464, baseType: !1589, size: 8, offset: 560)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1577, file: !1578, line: 465, baseType: !1589, size: 8, offset: 568)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1577, file: !1578, line: 466, baseType: !1589, size: 8, offset: 576)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1577, file: !1578, line: 467, baseType: !1589, size: 8, offset: 584)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1577, file: !1578, line: 468, baseType: !1589, size: 8, offset: 592)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1577, file: !1578, line: 469, baseType: !1589, size: 8, offset: 600)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1577, file: !1578, line: 470, baseType: !1589, size: 8, offset: 608)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1577, file: !1578, line: 471, baseType: !1589, size: 8, offset: 616)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1577, file: !1578, line: 472, baseType: !1589, size: 8, offset: 624)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1577, file: !1578, line: 473, baseType: !1589, size: 8, offset: 632)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1577, file: !1578, line: 474, baseType: !1589, size: 8, offset: 640)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1577, file: !1578, line: 475, baseType: !1589, size: 8, offset: 648)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1577, file: !1578, line: 476, baseType: !1589, size: 8, offset: 656)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1577, file: !1578, line: 477, baseType: !1589, size: 8, offset: 664)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1577, file: !1578, line: 478, baseType: !1589, size: 8, offset: 672)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1577, file: !1578, line: 479, baseType: !1589, size: 8, offset: 680)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1577, file: !1578, line: 480, baseType: !1589, size: 8, offset: 688)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1577, file: !1578, line: 481, baseType: !1589, size: 8, offset: 696)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1577, file: !1578, line: 482, baseType: !1589, size: 8, offset: 704)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1577, file: !1578, line: 483, baseType: !1589, size: 8, offset: 712)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1577, file: !1578, line: 484, baseType: !1589, size: 8, offset: 720)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1577, file: !1578, line: 485, baseType: !1589, size: 8, offset: 728)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1577, file: !1578, line: 486, baseType: !1589, size: 8, offset: 736)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1577, file: !1578, line: 487, baseType: !1589, size: 8, offset: 744)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1577, file: !1578, line: 488, baseType: !1589, size: 8, offset: 752)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1577, file: !1578, line: 489, baseType: !1589, size: 8, offset: 760)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1577, file: !1578, line: 490, baseType: !1589, size: 8, offset: 768)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1577, file: !1578, line: 491, baseType: !1589, size: 8, offset: 776)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1577, file: !1578, line: 492, baseType: !1589, size: 8, offset: 784)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1577, file: !1578, line: 493, baseType: !1589, size: 8, offset: 792)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1577, file: !1578, line: 494, baseType: !1589, size: 8, offset: 800)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1577, file: !1578, line: 495, baseType: !1589, size: 8, offset: 808)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1577, file: !1578, line: 496, baseType: !1589, size: 8, offset: 816)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1577, file: !1578, line: 497, baseType: !1589, size: 8, offset: 824)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1577, file: !1578, line: 498, baseType: !1589, size: 8, offset: 832)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1577, file: !1578, line: 499, baseType: !1589, size: 8, offset: 840)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1577, file: !1578, line: 500, baseType: !1589, size: 8, offset: 848)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1577, file: !1578, line: 501, baseType: !1589, size: 8, offset: 856)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1577, file: !1578, line: 502, baseType: !1589, size: 8, offset: 864)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1577, file: !1578, line: 503, baseType: !1589, size: 8, offset: 872)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1577, file: !1578, line: 504, baseType: !1589, size: 8, offset: 880)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1577, file: !1578, line: 505, baseType: !1589, size: 8, offset: 888)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1577, file: !1578, line: 506, baseType: !1589, size: 8, offset: 896)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1577, file: !1578, line: 507, baseType: !1589, size: 8, offset: 904)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1577, file: !1578, line: 508, baseType: !1589, size: 8, offset: 912)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1577, file: !1578, line: 509, baseType: !1589, size: 8, offset: 920)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1577, file: !1578, line: 510, baseType: !1589, size: 8, offset: 928)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1577, file: !1578, line: 511, baseType: !1589, size: 8, offset: 936)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1577, file: !1578, line: 512, baseType: !1589, size: 8, offset: 944)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1577, file: !1578, line: 513, baseType: !1589, size: 8, offset: 952)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1577, file: !1578, line: 514, baseType: !1589, size: 8, offset: 960)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1577, file: !1578, line: 515, baseType: !1589, size: 8, offset: 968)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1577, file: !1578, line: 516, baseType: !1589, size: 8, offset: 976)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1577, file: !1578, line: 517, baseType: !1589, size: 8, offset: 984)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1577, file: !1578, line: 518, baseType: !1589, size: 8, offset: 992)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1577, file: !1578, line: 519, baseType: !1589, size: 8, offset: 1000)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1577, file: !1578, line: 520, baseType: !1589, size: 8, offset: 1008)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1577, file: !1578, line: 521, baseType: !1589, size: 8, offset: 1016)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1577, file: !1578, line: 522, baseType: !1589, size: 8, offset: 1024)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1577, file: !1578, line: 523, baseType: !1589, size: 8, offset: 1032)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1577, file: !1578, line: 524, baseType: !1589, size: 8, offset: 1040)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1577, file: !1578, line: 525, baseType: !1589, size: 8, offset: 1048)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1577, file: !1578, line: 526, baseType: !1589, size: 8, offset: 1056)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1577, file: !1578, line: 527, baseType: !1589, size: 8, offset: 1064)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1577, file: !1578, line: 528, baseType: !1589, size: 8, offset: 1072)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1577, file: !1578, line: 529, baseType: !1589, size: 8, offset: 1080)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1577, file: !1578, line: 530, baseType: !1589, size: 8, offset: 1088)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1577, file: !1578, line: 531, baseType: !1589, size: 8, offset: 1096)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1577, file: !1578, line: 532, baseType: !1589, size: 8, offset: 1104)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1577, file: !1578, line: 533, baseType: !1589, size: 8, offset: 1112)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1577, file: !1578, line: 534, baseType: !1589, size: 8, offset: 1120)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1577, file: !1578, line: 535, baseType: !1589, size: 8, offset: 1128)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1577, file: !1578, line: 536, baseType: !1589, size: 8, offset: 1136)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1577, file: !1578, line: 537, baseType: !1589, size: 8, offset: 1144)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1577, file: !1578, line: 538, baseType: !1589, size: 8, offset: 1152)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1577, file: !1578, line: 539, baseType: !1589, size: 8, offset: 1160)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1577, file: !1578, line: 540, baseType: !1589, size: 8, offset: 1168)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1577, file: !1578, line: 541, baseType: !1589, size: 8, offset: 1176)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1577, file: !1578, line: 542, baseType: !1589, size: 8, offset: 1184)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1577, file: !1578, line: 543, baseType: !1589, size: 8, offset: 1192)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1577, file: !1578, line: 544, baseType: !1589, size: 8, offset: 1200)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1577, file: !1578, line: 545, baseType: !1589, size: 8, offset: 1208)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1577, file: !1578, line: 546, baseType: !1589, size: 8, offset: 1216)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1577, file: !1578, line: 547, baseType: !1589, size: 8, offset: 1224)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1577, file: !1578, line: 548, baseType: !1589, size: 8, offset: 1232)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1577, file: !1578, line: 549, baseType: !1589, size: 8, offset: 1240)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1577, file: !1578, line: 550, baseType: !1589, size: 8, offset: 1248)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1577, file: !1578, line: 551, baseType: !1589, size: 8, offset: 1256)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1577, file: !1578, line: 552, baseType: !1589, size: 8, offset: 1264)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1577, file: !1578, line: 553, baseType: !1589, size: 8, offset: 1272)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1577, file: !1578, line: 554, baseType: !1589, size: 8, offset: 1280)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1577, file: !1578, line: 555, baseType: !1589, size: 8, offset: 1288)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1577, file: !1578, line: 556, baseType: !1589, size: 8, offset: 1296)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1577, file: !1578, line: 557, baseType: !1589, size: 8, offset: 1304)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1577, file: !1578, line: 558, baseType: !1589, size: 8, offset: 1312)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1577, file: !1578, line: 559, baseType: !1589, size: 8, offset: 1320)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1577, file: !1578, line: 560, baseType: !1589, size: 8, offset: 1328)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1577, file: !1578, line: 561, baseType: !1589, size: 8, offset: 1336)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1577, file: !1578, line: 562, baseType: !1589, size: 8, offset: 1344)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1577, file: !1578, line: 563, baseType: !1589, size: 8, offset: 1352)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1577, file: !1578, line: 564, baseType: !1589, size: 8, offset: 1360)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1577, file: !1578, line: 565, baseType: !1589, size: 8, offset: 1368)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1577, file: !1578, line: 566, baseType: !1589, size: 8, offset: 1376)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1577, file: !1578, line: 567, baseType: !1589, size: 8, offset: 1384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1577, file: !1578, line: 568, baseType: !1589, size: 8, offset: 1392)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1577, file: !1578, line: 569, baseType: !1589, size: 8, offset: 1400)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1577, file: !1578, line: 570, baseType: !1589, size: 8, offset: 1408)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1577, file: !1578, line: 571, baseType: !1589, size: 8, offset: 1416)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1577, file: !1578, line: 572, baseType: !1589, size: 8, offset: 1424)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1577, file: !1578, line: 573, baseType: !1589, size: 8, offset: 1432)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1577, file: !1578, line: 574, baseType: !1589, size: 8, offset: 1440)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !899, file: !334, line: 3405, baseType: !1745, size: 384)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !334, line: 3352, size: 384, elements: !1746)
!1746 = !{!1747, !1748}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1745, file: !334, line: 3353, baseType: !935, size: 192)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1745, file: !334, line: 3356, baseType: !1749, size: 192, offset: 192)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1578, line: 578, size: 192, elements: !1750)
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1749, file: !1578, line: 580, baseType: !728, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1749, file: !1578, line: 581, baseType: !728, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1749, file: !1578, line: 582, baseType: !728, size: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1749, file: !1578, line: 583, baseType: !728, size: 32, offset: 96)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1749, file: !1578, line: 584, baseType: !727, size: 8, offset: 128)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1749, file: !1578, line: 585, baseType: !727, size: 8, offset: 136)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1749, file: !1578, line: 586, baseType: !727, size: 8, offset: 144)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1749, file: !1578, line: 587, baseType: !727, size: 8, offset: 152)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1749, file: !1578, line: 588, baseType: !727, size: 8, offset: 160)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1749, file: !1578, line: 589, baseType: !727, size: 8, offset: 168)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1749, file: !1578, line: 590, baseType: !727, size: 8, offset: 176)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !781, file: !561, line: 178, baseType: !1155, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !781, file: !561, line: 179, baseType: !1764, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !561, line: 150, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !561, line: 142, size: 320, elements: !1767)
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1766, file: !561, line: 144, baseType: !897, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1766, file: !561, line: 145, baseType: !760, size: 64, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1766, file: !561, line: 146, baseType: !760, size: 64, offset: 128)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1766, file: !561, line: 147, baseType: !739, size: 32, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1766, file: !561, line: 148, baseType: !7, size: 32, offset: 224)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1766, file: !561, line: 149, baseType: !727, size: 8, offset: 256)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !781, file: !561, line: 180, baseType: !1775, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !561, line: 162, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !561, line: 159, size: 128, elements: !1778)
!1778 = !{!1779, !1780}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1777, file: !561, line: 160, baseType: !897, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1777, file: !561, line: 161, baseType: !868, size: 64, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !781, file: !561, line: 181, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !561, line: 181, flags: DIFlagFwdDecl)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !776, file: !561, line: 317, baseType: !1785, size: 64)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !868, size: 64, elements: !795)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !776, file: !561, line: 318, baseType: !1787, size: 320)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !561, line: 188, size: 320, elements: !1788)
!1788 = !{!1789, !1791, !1814}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1787, file: !561, line: 190, baseType: !1790, size: 192)
!1790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !780, size: 192, elements: !968)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1787, file: !561, line: 193, baseType: !1792, size: 64, offset: 192)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !561, line: 206, size: 320, elements: !1794)
!1794 = !{!1795, !1799, !1800, !1801, !1813}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1793, file: !561, line: 208, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !761, line: 62, baseType: !1798)
!1798 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !761, line: 61, flags: DIFlagFwdDecl)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1793, file: !561, line: 211, baseType: !7, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1793, file: !561, line: 214, baseType: !868, size: 64, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1793, file: !561, line: 224, baseType: !1802, size: 64, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !561, line: 202, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !561, line: 202, size: 128, elements: !1805)
!1805 = !{!1806}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1804, file: !561, line: 202, baseType: !1807, size: 128)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !561, line: 200, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !561, line: 200, size: 128, elements: !1809)
!1809 = !{!1810, !1811, !1812}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1808, file: !561, line: 200, baseType: !7, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1808, file: !561, line: 200, baseType: !7, size: 32, offset: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1808, file: !561, line: 200, baseType: !794, size: 64, offset: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1793, file: !561, line: 234, baseType: !1802, size: 64, offset: 256)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1787, file: !561, line: 197, baseType: !868, size: 64, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !776, file: !561, line: 319, baseType: !957, size: 256)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !776, file: !561, line: 320, baseType: !976, size: 192)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "store_rec", scope: !752, file: !3, line: 365, baseType: !1818, size: 64, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "store_info_t", file: !3, line: 283, baseType: !1819)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "store_info", file: !3, line: 207, size: 832, elements: !1821)
!1821 = !{!1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1841, !1842, !1843, !1844}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "is_set", scope: !1820, file: !3, line: 211, baseType: !727, size: 8)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "is_large", scope: !1820, file: !3, line: 214, baseType: !727, size: 8, offset: 8)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "group_id", scope: !1820, file: !3, line: 219, baseType: !728, size: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "cse_base", scope: !1820, file: !3, line: 222, baseType: !831, size: 64, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1820, file: !3, line: 225, baseType: !760, size: 64, offset: 128)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "mem_addr", scope: !1820, file: !3, line: 228, baseType: !760, size: 64, offset: 192)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1820, file: !3, line: 231, baseType: !739, size: 32, offset: 256)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1820, file: !3, line: 235, baseType: !868, size: 64, offset: 320)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1820, file: !3, line: 235, baseType: !868, size: 64, offset: 384)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "positions_needed", scope: !1820, file: !3, line: 254, baseType: !1832, size: 128, offset: 448)
!1832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1820, file: !3, line: 237, size: 128, elements: !1833)
!1833 = !{!1834, !1835}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "small_bitmask", scope: !1832, file: !3, line: 242, baseType: !851, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "large", scope: !1832, file: !3, line: 253, baseType: !1836, size: 128)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1832, file: !3, line: 244, size: 128, elements: !1837)
!1837 = !{!1838, !1840}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1836, file: !3, line: 248, baseType: !1839, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !761, line: 47, baseType: !835)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1836, file: !3, line: 252, baseType: !728, size: 32, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1820, file: !3, line: 257, baseType: !1819, size: 64, offset: 576)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1820, file: !3, line: 262, baseType: !760, size: 64, offset: 640)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "const_rhs", scope: !1820, file: !3, line: 266, baseType: !760, size: 64, offset: 704)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "redundant_reason", scope: !1820, file: !3, line: 271, baseType: !751, size: 64, offset: 768)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "read_rec", scope: !752, file: !3, line: 371, baseType: !1846, size: 64, offset: 192)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_info_t", file: !3, line: 308, baseType: !1847)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "read_info", file: !3, line: 289, size: 256, elements: !1849)
!1849 = !{!1850, !1851, !1852, !1853, !1854, !1855}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "group_id", scope: !1848, file: !3, line: 292, baseType: !728, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1848, file: !3, line: 295, baseType: !739, size: 32, offset: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1848, file: !3, line: 300, baseType: !728, size: 32, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1848, file: !3, line: 300, baseType: !728, size: 32, offset: 96)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1848, file: !3, line: 303, baseType: !760, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1848, file: !3, line: 306, baseType: !1847, size: 64, offset: 192)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "prev_insn", scope: !752, file: !3, line: 374, baseType: !751, size: 64, offset: 256)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "next_local_store", scope: !752, file: !3, line: 381, baseType: !751, size: 64, offset: 320)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "apply_wild_read", scope: !747, file: !3, line: 406, baseType: !727, size: 8, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !747, file: !3, line: 413, baseType: !1839, size: 64, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !747, file: !3, line: 417, baseType: !1839, size: 64, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !747, file: !3, line: 427, baseType: !1839, size: 64, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !747, file: !3, line: 438, baseType: !1839, size: 64, offset: 320)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "regs_live", scope: !747, file: !3, line: 446, baseType: !1839, size: 64, offset: 384)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_group_info_t", file: !3, line: 514, baseType: !1865)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !3, line: 459, size: 768, elements: !1868)
!1868 = !{!1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1882, !1883, !1884}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_base", scope: !1867, file: !3, line: 462, baseType: !760, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1867, file: !3, line: 466, baseType: !728, size: 32, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "process_globally", scope: !1867, file: !3, line: 470, baseType: !727, size: 8, offset: 96)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !1867, file: !3, line: 474, baseType: !727, size: 8, offset: 104)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "base_mem", scope: !1867, file: !3, line: 478, baseType: !760, size: 64, offset: 128)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "canon_base_addr", scope: !1867, file: !3, line: 481, baseType: !760, size: 64, offset: 192)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "store1_n", scope: !1867, file: !3, line: 499, baseType: !1839, size: 64, offset: 256)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "store1_p", scope: !1867, file: !3, line: 499, baseType: !1839, size: 64, offset: 320)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "store2_n", scope: !1867, file: !3, line: 499, baseType: !1839, size: 64, offset: 384)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "store2_p", scope: !1867, file: !3, line: 499, baseType: !1839, size: 64, offset: 448)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "group_kill", scope: !1867, file: !3, line: 504, baseType: !1839, size: 64, offset: 512)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "offset_map_n", scope: !1867, file: !3, line: 510, baseType: !1881, size: 64, offset: 576)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "offset_map_p", scope: !1867, file: !3, line: 510, baseType: !1881, size: 64, offset: 640)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "offset_map_size_n", scope: !1867, file: !3, line: 511, baseType: !728, size: 32, offset: 704)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "offset_map_size_p", scope: !1867, file: !3, line: 511, baseType: !728, size: 32, offset: 736)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "group_info_t", file: !3, line: 513, baseType: !1886)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_group_info_t_heap", file: !3, line: 524, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_group_info_t_heap", file: !3, line: 524, size: 128, elements: !1890)
!1890 = !{!1891}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1889, file: !3, line: 524, baseType: !1892, size: 128)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_group_info_t_base", file: !3, line: 523, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_group_info_t_base", file: !3, line: 523, size: 128, elements: !1894)
!1894 = !{!1895, !1896, !1897}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1893, file: !3, line: 523, baseType: !7, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1893, file: !3, line: 523, baseType: !7, size: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1893, file: !3, line: 523, baseType: !1898, size: 64, offset: 64)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1885, size: 64, elements: !795)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_bb_info", file: !1901, line: 826, size: 256, elements: !1902)
!1901 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1902 = !{!1903, !1904, !1905, !1906}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1900, file: !1901, line: 829, baseType: !1839, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1900, file: !1901, line: 831, baseType: !1839, size: 64, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1900, file: !1901, line: 834, baseType: !1839, size: 64, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !1900, file: !1901, line: 835, baseType: !1839, size: 64, offset: 192)
!1907 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "deferred_change_t", file: !3, line: 543, baseType: !1909)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deferred_change", file: !3, line: 531, size: 192, elements: !1911)
!1911 = !{!1912, !1914, !1915}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1910, file: !3, line: 535, baseType: !1913, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1910, file: !3, line: 538, baseType: !760, size: 64, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1910, file: !3, line: 540, baseType: !1909, size: 64, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "insn_size", file: !3, line: 809, size: 128, elements: !1918)
!1918 = !{!1919, !1920}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1917, file: !3, line: 810, baseType: !728, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1917, file: !3, line: 811, baseType: !760, size: 64, offset: 64)
!1921 = !{!1922, !1950, !1952, !1954, !0, !1977, !1979, !1981, !1983, !1985, !1987, !1989, !1991, !1993, !1995, !1997, !1999, !2001, !2003, !2005, !2007, !2009, !2011, !2013, !2015, !2017, !2019}
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "pass_rtl_dse1", scope: !2, file: !3, line: 3880, type: !1924, isLocal: false, isDefinition: true)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !135, line: 162, size: 640, elements: !1925)
!1925 = !{!1926}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1924, file: !135, line: 164, baseType: !1927, size: 640)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !135, line: 114, size: 640, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1935, !1939, !1941, !1942, !1943, !1945, !1946, !1947, !1948, !1949}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1927, file: !135, line: 117, baseType: !134, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1927, file: !135, line: 121, baseType: !733, size: 64, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !1927, file: !135, line: 125, baseType: !1932, size: 64, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!727}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1927, file: !135, line: 130, baseType: !1936, size: 64, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!7}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !1927, file: !135, line: 133, baseType: !1940, size: 64, offset: 256)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1927, file: !135, line: 136, baseType: !1940, size: 64, offset: 320)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !1927, file: !135, line: 139, baseType: !728, size: 32, offset: 384)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !1927, file: !135, line: 143, baseType: !1944, size: 32, offset: 416)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !142, line: 80, baseType: !141)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !1927, file: !135, line: 146, baseType: !7, size: 32, offset: 448)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !1927, file: !135, line: 147, baseType: !7, size: 32, offset: 480)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !1927, file: !135, line: 148, baseType: !7, size: 32, offset: 512)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !1927, file: !135, line: 151, baseType: !7, size: 32, offset: 544)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !1927, file: !135, line: 152, baseType: !7, size: 32, offset: 576)
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "pass_rtl_dse2", scope: !2, file: !3, line: 3901, type: !1924, isLocal: false, isDefinition: true)
!1952 = !DIGlobalVariableExpression(var: !1953, expr: !DIExpression())
!1953 = distinct !DIGlobalVariable(name: "clear_alias_mode_table", scope: !2, file: !3, line: 566, type: !1261, isLocal: true, isDefinition: true)
!1954 = !DIGlobalVariableExpression(var: !1955, expr: !DIExpression())
!1955 = distinct !DIGlobalVariable(name: "clear_alias_mode_pool", scope: !2, file: !3, line: 575, type: !1956, isLocal: true, isDefinition: true)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !1957, line: 58, baseType: !1958)
!1957 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !1957, line: 32, size: 704, elements: !1960)
!1960 = !{!1961, !1962, !1963, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1959, file: !1957, line: 34, baseType: !733, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !1959, file: !1957, line: 38, baseType: !1287, size: 64, offset: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !1959, file: !1957, line: 41, baseType: !1964, size: 64, offset: 128)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !1957, line: 30, baseType: !1965)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !1957, line: 26, size: 64, elements: !1967)
!1967 = !{!1968}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1966, file: !1957, line: 28, baseType: !1965, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !1959, file: !1957, line: 45, baseType: !730, size: 64, offset: 192)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !1959, file: !1957, line: 49, baseType: !1287, size: 64, offset: 256)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !1959, file: !1957, line: 51, baseType: !1287, size: 64, offset: 320)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !1959, file: !1957, line: 52, baseType: !1287, size: 64, offset: 384)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !1959, file: !1957, line: 53, baseType: !1287, size: 64, offset: 448)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !1959, file: !1957, line: 54, baseType: !1964, size: 64, offset: 512)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1959, file: !1957, line: 55, baseType: !1287, size: 64, offset: 576)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !1959, file: !1957, line: 56, baseType: !1287, size: 64, offset: 640)
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "disqualified_clear_alias_sets", scope: !2, file: !3, line: 560, type: !1839, isLocal: true, isDefinition: true)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "scratch", scope: !2, file: !3, line: 203, type: !1839, isLocal: true, isDefinition: true)
!1981 = !DIGlobalVariableExpression(var: !1982, expr: !DIExpression())
!1982 = distinct !DIGlobalVariable(name: "rtx_store_info_pool", scope: !2, file: !3, line: 285, type: !1956, isLocal: true, isDefinition: true)
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "read_info_pool", scope: !2, file: !3, line: 309, type: !1956, isLocal: true, isDefinition: true)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "insn_info_pool", scope: !2, file: !3, line: 385, type: !1956, isLocal: true, isDefinition: true)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "bb_info_pool", scope: !2, file: !3, line: 450, type: !1956, isLocal: true, isDefinition: true)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(name: "rtx_group_info_pool", scope: !2, file: !3, line: 515, type: !1956, isLocal: true, isDefinition: true)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!1992 = distinct !DIGlobalVariable(name: "deferred_change_pool", scope: !2, file: !3, line: 544, type: !1956, isLocal: true, isDefinition: true)
!1993 = !DIGlobalVariableExpression(var: !1994, expr: !DIExpression())
!1994 = distinct !DIGlobalVariable(name: "rtx_group_table", scope: !2, file: !3, line: 518, type: !1261, isLocal: true, isDefinition: true)
!1995 = !DIGlobalVariableExpression(var: !1996, expr: !DIExpression())
!1996 = distinct !DIGlobalVariable(name: "bb_table", scope: !2, file: !3, line: 453, type: !744, isLocal: true, isDefinition: true)
!1997 = !DIGlobalVariableExpression(var: !1998, expr: !DIExpression())
!1998 = distinct !DIGlobalVariable(name: "rtx_group_next_id", scope: !2, file: !3, line: 521, type: !728, isLocal: true, isDefinition: true)
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(name: "stores_off_frame_dead_at_return", scope: !2, file: !3, line: 579, type: !727, isLocal: true, isDefinition: true)
!2001 = !DIGlobalVariableExpression(var: !2002, expr: !DIExpression())
!2002 = distinct !DIGlobalVariable(name: "rtx_group_vec", scope: !2, file: !3, line: 526, type: !1887, isLocal: true, isDefinition: true)
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "clear_alias_group", scope: !2, file: !3, line: 563, type: !1885, isLocal: true, isDefinition: true)
!2005 = !DIGlobalVariableExpression(var: !2006, expr: !DIExpression())
!2006 = distinct !DIGlobalVariable(name: "all_blocks", scope: !2, file: !3, line: 586, type: !1839, isLocal: true, isDefinition: true)
!2007 = !DIGlobalVariableExpression(var: !2008, expr: !DIExpression())
!2008 = distinct !DIGlobalVariable(name: "cse_store_info_pool", scope: !2, file: !3, line: 284, type: !1956, isLocal: true, isDefinition: true)
!2009 = !DIGlobalVariableExpression(var: !2010, expr: !DIExpression())
!2010 = distinct !DIGlobalVariable(name: "active_local_stores", scope: !2, file: !3, line: 389, type: !750, isLocal: true, isDefinition: true)
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "deferred_change_list", scope: !2, file: !3, line: 546, type: !1908, isLocal: true, isDefinition: true)
!2013 = !DIGlobalVariableExpression(var: !2014, expr: !DIExpression())
!2014 = distinct !DIGlobalVariable(name: "current_position", scope: !2, file: !3, line: 589, type: !7, isLocal: true, isDefinition: true)
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "locally_deleted", scope: !2, file: !3, line: 583, type: !728, isLocal: true, isDefinition: true)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "globally_deleted", scope: !2, file: !3, line: 582, type: !728, isLocal: true, isDefinition: true)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "spill_deleted", scope: !2, file: !3, line: 584, type: !728, isLocal: true, isDefinition: true)
!2021 = !{i32 2, !"Dwarf Version", i32 4}
!2022 = !{i32 2, !"Debug Info Version", i32 3}
!2023 = !{i32 1, !"wchar_size", i32 4}
!2024 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2025 = distinct !DISubprogram(name: "vprintf", scope: !2026, file: !2026, line: 39, type: !2027, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2037)
!2026 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2027 = !DISubroutineType(types: !2028)
!2028 = !{!728, !2029, !2030}
!2029 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !733)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2032)
!2032 = !{!2033, !2034, !2035, !2036}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2031, file: !3, baseType: !7, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2031, file: !3, baseType: !7, size: 32, offset: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2031, file: !3, baseType: !732, size: 64, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2031, file: !3, baseType: !732, size: 64, offset: 128)
!2037 = !{!2038, !2039}
!2038 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2025, file: !2026, line: 39, type: !2029)
!2039 = !DILocalVariable(name: "__arg", arg: 2, scope: !2025, file: !2026, line: 39, type: !2030)
!2040 = !DILocation(line: 0, scope: !2025)
!2041 = !DILocation(line: 41, column: 20, scope: !2025)
!2042 = !DILocation(line: 41, column: 10, scope: !2025)
!2043 = !DILocation(line: 41, column: 3, scope: !2025)
!2044 = distinct !DISubprogram(name: "getchar", scope: !2026, file: !2026, line: 47, type: !2045, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2047)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!728}
!2047 = !{}
!2048 = !DILocation(line: 49, column: 16, scope: !2044)
!2049 = !DILocation(line: 49, column: 10, scope: !2044)
!2050 = !DILocation(line: 49, column: 3, scope: !2044)
!2051 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2026, file: !2026, line: 56, type: !2052, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2104)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!728, !2054}
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2056, line: 7, baseType: !2057)
!2056 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2058, line: 49, size: 1728, elements: !2059)
!2058 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2059 = !{!2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2075, !2077, !2078, !2079, !2082, !2083, !2084, !2085, !2088, !2090, !2093, !2096, !2097, !2098, !2099, !2100}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2057, file: !2058, line: 51, baseType: !728, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2057, file: !2058, line: 54, baseType: !730, size: 64, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2057, file: !2058, line: 55, baseType: !730, size: 64, offset: 128)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2057, file: !2058, line: 56, baseType: !730, size: 64, offset: 192)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2057, file: !2058, line: 57, baseType: !730, size: 64, offset: 256)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2057, file: !2058, line: 58, baseType: !730, size: 64, offset: 320)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2057, file: !2058, line: 59, baseType: !730, size: 64, offset: 384)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2057, file: !2058, line: 60, baseType: !730, size: 64, offset: 448)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2057, file: !2058, line: 61, baseType: !730, size: 64, offset: 512)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2057, file: !2058, line: 64, baseType: !730, size: 64, offset: 576)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2057, file: !2058, line: 65, baseType: !730, size: 64, offset: 640)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2057, file: !2058, line: 66, baseType: !730, size: 64, offset: 704)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2057, file: !2058, line: 68, baseType: !2073, size: 64, offset: 768)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2058, line: 36, flags: DIFlagFwdDecl)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2057, file: !2058, line: 70, baseType: !2076, size: 64, offset: 832)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2057, file: !2058, line: 72, baseType: !728, size: 32, offset: 896)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2057, file: !2058, line: 73, baseType: !728, size: 32, offset: 928)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2057, file: !2058, line: 74, baseType: !2080, size: 64, offset: 960)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2081, line: 152, baseType: !868)
!2081 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2057, file: !2058, line: 77, baseType: !1907, size: 16, offset: 1024)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2057, file: !2058, line: 78, baseType: !1589, size: 8, offset: 1040)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2057, file: !2058, line: 79, baseType: !992, size: 8, offset: 1048)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2057, file: !2058, line: 81, baseType: !2086, size: 64, offset: 1088)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2058, line: 43, baseType: null)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2057, file: !2058, line: 89, baseType: !2089, size: 64, offset: 1152)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2081, line: 153, baseType: !868)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2057, file: !2058, line: 91, baseType: !2091, size: 64, offset: 1216)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2058, line: 37, flags: DIFlagFwdDecl)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2057, file: !2058, line: 92, baseType: !2094, size: 64, offset: 1280)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2058, line: 38, flags: DIFlagFwdDecl)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2057, file: !2058, line: 93, baseType: !2076, size: 64, offset: 1344)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2057, file: !2058, line: 94, baseType: !732, size: 64, offset: 1408)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2057, file: !2058, line: 95, baseType: !1287, size: 64, offset: 1472)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2057, file: !2058, line: 96, baseType: !728, size: 32, offset: 1536)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2057, file: !2058, line: 98, baseType: !2101, size: 160, offset: 1568)
!2101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 160, elements: !2102)
!2102 = !{!2103}
!2103 = !DISubrange(count: 20)
!2104 = !{!2105}
!2105 = !DILocalVariable(name: "__fp", arg: 1, scope: !2051, file: !2026, line: 56, type: !2054)
!2106 = !DILocation(line: 0, scope: !2051)
!2107 = !DILocation(line: 58, column: 10, scope: !2051)
!2108 = !DILocation(line: 58, column: 3, scope: !2051)
!2109 = distinct !DISubprogram(name: "getc_unlocked", scope: !2026, file: !2026, line: 66, type: !2052, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2110)
!2110 = !{!2111}
!2111 = !DILocalVariable(name: "__fp", arg: 1, scope: !2109, file: !2026, line: 66, type: !2054)
!2112 = !DILocation(line: 0, scope: !2109)
!2113 = !DILocation(line: 68, column: 10, scope: !2109)
!2114 = !DILocation(line: 68, column: 3, scope: !2109)
!2115 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2026, file: !2026, line: 73, type: !2045, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2047)
!2116 = !DILocation(line: 75, column: 10, scope: !2115)
!2117 = !DILocation(line: 75, column: 3, scope: !2115)
!2118 = distinct !DISubprogram(name: "putchar", scope: !2026, file: !2026, line: 82, type: !2119, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2121)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{!728, !728}
!2121 = !{!2122}
!2122 = !DILocalVariable(name: "__c", arg: 1, scope: !2118, file: !2026, line: 82, type: !728)
!2123 = !DILocation(line: 0, scope: !2118)
!2124 = !DILocation(line: 84, column: 21, scope: !2118)
!2125 = !DILocation(line: 84, column: 10, scope: !2118)
!2126 = !DILocation(line: 84, column: 3, scope: !2118)
!2127 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2026, file: !2026, line: 91, type: !2128, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2130)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{!728, !728, !2054}
!2130 = !{!2131, !2132}
!2131 = !DILocalVariable(name: "__c", arg: 1, scope: !2127, file: !2026, line: 91, type: !728)
!2132 = !DILocalVariable(name: "__stream", arg: 2, scope: !2127, file: !2026, line: 91, type: !2054)
!2133 = !DILocation(line: 0, scope: !2127)
!2134 = !DILocation(line: 93, column: 10, scope: !2127)
!2135 = !DILocation(line: 93, column: 3, scope: !2127)
!2136 = distinct !DISubprogram(name: "putc_unlocked", scope: !2026, file: !2026, line: 101, type: !2128, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2137)
!2137 = !{!2138, !2139}
!2138 = !DILocalVariable(name: "__c", arg: 1, scope: !2136, file: !2026, line: 101, type: !728)
!2139 = !DILocalVariable(name: "__stream", arg: 2, scope: !2136, file: !2026, line: 101, type: !2054)
!2140 = !DILocation(line: 0, scope: !2136)
!2141 = !DILocation(line: 103, column: 10, scope: !2136)
!2142 = !DILocation(line: 103, column: 3, scope: !2136)
!2143 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2026, file: !2026, line: 108, type: !2119, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2144)
!2144 = !{!2145}
!2145 = !DILocalVariable(name: "__c", arg: 1, scope: !2143, file: !2026, line: 108, type: !728)
!2146 = !DILocation(line: 0, scope: !2143)
!2147 = !DILocation(line: 110, column: 10, scope: !2143)
!2148 = !DILocation(line: 110, column: 3, scope: !2143)
!2149 = distinct !DISubprogram(name: "getline", scope: !2026, file: !2026, line: 118, type: !2150, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2154)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{!2152, !729, !2153, !2054}
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2081, line: 193, baseType: !868)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!2154 = !{!2155, !2156, !2157}
!2155 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2149, file: !2026, line: 118, type: !729)
!2156 = !DILocalVariable(name: "__n", arg: 2, scope: !2149, file: !2026, line: 118, type: !2153)
!2157 = !DILocalVariable(name: "__stream", arg: 3, scope: !2149, file: !2026, line: 118, type: !2054)
!2158 = !DILocation(line: 0, scope: !2149)
!2159 = !DILocation(line: 120, column: 10, scope: !2149)
!2160 = !DILocation(line: 120, column: 3, scope: !2149)
!2161 = distinct !DISubprogram(name: "feof_unlocked", scope: !2026, file: !2026, line: 128, type: !2052, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2162)
!2162 = !{!2163}
!2163 = !DILocalVariable(name: "__stream", arg: 1, scope: !2161, file: !2026, line: 128, type: !2054)
!2164 = !DILocation(line: 0, scope: !2161)
!2165 = !DILocation(line: 130, column: 10, scope: !2161)
!2166 = !DILocation(line: 130, column: 3, scope: !2161)
!2167 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2026, file: !2026, line: 135, type: !2052, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2168)
!2168 = !{!2169}
!2169 = !DILocalVariable(name: "__stream", arg: 1, scope: !2167, file: !2026, line: 135, type: !2054)
!2170 = !DILocation(line: 0, scope: !2167)
!2171 = !DILocation(line: 137, column: 10, scope: !2167)
!2172 = !DILocation(line: 137, column: 3, scope: !2167)
!2173 = distinct !DISubprogram(name: "tolower", scope: !2174, file: !2174, line: 207, type: !2119, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2175)
!2174 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2175 = !{!2176}
!2176 = !DILocalVariable(name: "__c", arg: 1, scope: !2173, file: !2174, line: 207, type: !728)
!2177 = !DILocation(line: 0, scope: !2173)
!2178 = !DILocation(line: 209, column: 22, scope: !2173)
!2179 = !DILocation(line: 209, column: 39, scope: !2173)
!2180 = !DILocation(line: 209, column: 38, scope: !2173)
!2181 = !DILocation(line: 209, column: 37, scope: !2173)
!2182 = !DILocation(line: 209, column: 10, scope: !2173)
!2183 = !DILocation(line: 209, column: 3, scope: !2173)
!2184 = distinct !DISubprogram(name: "toupper", scope: !2174, file: !2174, line: 213, type: !2119, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2185)
!2185 = !{!2186}
!2186 = !DILocalVariable(name: "__c", arg: 1, scope: !2184, file: !2174, line: 213, type: !728)
!2187 = !DILocation(line: 0, scope: !2184)
!2188 = !DILocation(line: 215, column: 22, scope: !2184)
!2189 = !DILocation(line: 215, column: 39, scope: !2184)
!2190 = !DILocation(line: 215, column: 38, scope: !2184)
!2191 = !DILocation(line: 215, column: 37, scope: !2184)
!2192 = !DILocation(line: 215, column: 10, scope: !2184)
!2193 = !DILocation(line: 215, column: 3, scope: !2184)
!2194 = distinct !DISubprogram(name: "atoi", scope: !2195, file: !2195, line: 361, type: !2196, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2198)
!2195 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!728, !733}
!2198 = !{!2199}
!2199 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2194, file: !2195, line: 361, type: !733)
!2200 = !DILocation(line: 0, scope: !2194)
!2201 = !DILocation(line: 363, column: 16, scope: !2194)
!2202 = !DILocation(line: 363, column: 10, scope: !2194)
!2203 = !DILocation(line: 363, column: 3, scope: !2194)
!2204 = distinct !DISubprogram(name: "atol", scope: !2195, file: !2195, line: 366, type: !2205, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2207)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{!868, !733}
!2207 = !{!2208}
!2208 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2204, file: !2195, line: 366, type: !733)
!2209 = !DILocation(line: 0, scope: !2204)
!2210 = !DILocation(line: 368, column: 10, scope: !2204)
!2211 = !DILocation(line: 368, column: 3, scope: !2204)
!2212 = distinct !DISubprogram(name: "atoll", scope: !2195, file: !2195, line: 373, type: !2213, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2216)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!2215, !733}
!2215 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2216 = !{!2217}
!2217 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2212, file: !2195, line: 373, type: !733)
!2218 = !DILocation(line: 0, scope: !2212)
!2219 = !DILocation(line: 375, column: 10, scope: !2212)
!2220 = !DILocation(line: 375, column: 3, scope: !2212)
!2221 = distinct !DISubprogram(name: "bsearch", scope: !2222, file: !2222, line: 20, type: !2223, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2226)
!2222 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2223 = !DISubroutineType(types: !2224)
!2224 = !{!732, !1272, !1272, !1287, !1287, !2225}
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2195, line: 808, baseType: !1276)
!2226 = !{!2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236}
!2227 = !DILocalVariable(name: "__key", arg: 1, scope: !2221, file: !2222, line: 20, type: !1272)
!2228 = !DILocalVariable(name: "__base", arg: 2, scope: !2221, file: !2222, line: 20, type: !1272)
!2229 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2221, file: !2222, line: 20, type: !1287)
!2230 = !DILocalVariable(name: "__size", arg: 4, scope: !2221, file: !2222, line: 20, type: !1287)
!2231 = !DILocalVariable(name: "__compar", arg: 5, scope: !2221, file: !2222, line: 21, type: !2225)
!2232 = !DILocalVariable(name: "__l", scope: !2221, file: !2222, line: 23, type: !1287)
!2233 = !DILocalVariable(name: "__u", scope: !2221, file: !2222, line: 23, type: !1287)
!2234 = !DILocalVariable(name: "__idx", scope: !2221, file: !2222, line: 23, type: !1287)
!2235 = !DILocalVariable(name: "__p", scope: !2221, file: !2222, line: 24, type: !1272)
!2236 = !DILocalVariable(name: "__comparison", scope: !2221, file: !2222, line: 25, type: !728)
!2237 = !DILocation(line: 0, scope: !2221)
!2238 = !DILocation(line: 29, column: 3, scope: !2221)
!2239 = !DILocation(line: 27, column: 7, scope: !2221)
!2240 = !DILocation(line: 29, column: 14, scope: !2221)
!2241 = !DILocation(line: 31, column: 20, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2221, file: !2222, line: 30, column: 5)
!2243 = !DILocation(line: 31, column: 27, scope: !2242)
!2244 = !DILocation(line: 32, column: 56, scope: !2242)
!2245 = !DILocation(line: 32, column: 47, scope: !2242)
!2246 = !DILocation(line: 33, column: 22, scope: !2242)
!2247 = !DILocation(line: 34, column: 24, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2242, file: !2222, line: 34, column: 11)
!2249 = !DILocation(line: 34, column: 11, scope: !2242)
!2250 = !DILocation(line: 36, column: 29, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2248, file: !2222, line: 36, column: 16)
!2252 = !DILocation(line: 36, column: 16, scope: !2248)
!2253 = !DILocation(line: 37, column: 14, scope: !2251)
!2254 = distinct !{!2254, !2238, !2255}
!2255 = !DILocation(line: 40, column: 5, scope: !2221)
!2256 = !DILocation(line: 43, column: 1, scope: !2221)
!2257 = distinct !DISubprogram(name: "atof", scope: !2258, file: !2258, line: 25, type: !2259, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2262)
!2258 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!2261, !733}
!2261 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2262 = !{!2263}
!2263 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2257, file: !2258, line: 25, type: !733)
!2264 = !DILocation(line: 0, scope: !2257)
!2265 = !DILocation(line: 27, column: 10, scope: !2257)
!2266 = !DILocation(line: 27, column: 3, scope: !2257)
!2267 = distinct !DISubprogram(name: "strtoimax", scope: !2268, file: !2268, line: 324, type: !2269, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2275)
!2268 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2269 = !DISubroutineType(types: !2270)
!2270 = !{!2271, !2029, !2274, !728}
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2272, line: 101, baseType: !2273)
!2272 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2081, line: 72, baseType: !868)
!2274 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !729)
!2275 = !{!2276, !2277, !2278}
!2276 = !DILocalVariable(name: "nptr", arg: 1, scope: !2267, file: !2268, line: 324, type: !2029)
!2277 = !DILocalVariable(name: "endptr", arg: 2, scope: !2267, file: !2268, line: 324, type: !2274)
!2278 = !DILocalVariable(name: "base", arg: 3, scope: !2267, file: !2268, line: 324, type: !728)
!2279 = !DILocation(line: 0, scope: !2267)
!2280 = !DILocation(line: 327, column: 10, scope: !2267)
!2281 = !DILocation(line: 327, column: 3, scope: !2267)
!2282 = distinct !DISubprogram(name: "strtoumax", scope: !2268, file: !2268, line: 336, type: !2283, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2287)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!2285, !2029, !2274, !728}
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2272, line: 102, baseType: !2286)
!2286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2081, line: 73, baseType: !851)
!2287 = !{!2288, !2289, !2290}
!2288 = !DILocalVariable(name: "nptr", arg: 1, scope: !2282, file: !2268, line: 336, type: !2029)
!2289 = !DILocalVariable(name: "endptr", arg: 2, scope: !2282, file: !2268, line: 336, type: !2274)
!2290 = !DILocalVariable(name: "base", arg: 3, scope: !2282, file: !2268, line: 336, type: !728)
!2291 = !DILocation(line: 0, scope: !2282)
!2292 = !DILocation(line: 339, column: 10, scope: !2282)
!2293 = !DILocation(line: 339, column: 3, scope: !2282)
!2294 = distinct !DISubprogram(name: "wcstoimax", scope: !2268, file: !2268, line: 348, type: !2295, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2304)
!2295 = !DISubroutineType(types: !2296)
!2296 = !{!2271, !2297, !2301, !728}
!2297 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2298)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2300)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2268, line: 34, baseType: !728)
!2301 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2302)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2304 = !{!2305, !2306, !2307}
!2305 = !DILocalVariable(name: "nptr", arg: 1, scope: !2294, file: !2268, line: 348, type: !2297)
!2306 = !DILocalVariable(name: "endptr", arg: 2, scope: !2294, file: !2268, line: 348, type: !2301)
!2307 = !DILocalVariable(name: "base", arg: 3, scope: !2294, file: !2268, line: 348, type: !728)
!2308 = !DILocation(line: 0, scope: !2294)
!2309 = !DILocation(line: 351, column: 10, scope: !2294)
!2310 = !DILocation(line: 351, column: 3, scope: !2294)
!2311 = distinct !DISubprogram(name: "wcstoumax", scope: !2268, file: !2268, line: 362, type: !2312, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!2285, !2297, !2301, !728}
!2314 = !{!2315, !2316, !2317}
!2315 = !DILocalVariable(name: "nptr", arg: 1, scope: !2311, file: !2268, line: 362, type: !2297)
!2316 = !DILocalVariable(name: "endptr", arg: 2, scope: !2311, file: !2268, line: 362, type: !2301)
!2317 = !DILocalVariable(name: "base", arg: 3, scope: !2311, file: !2268, line: 362, type: !728)
!2318 = !DILocation(line: 0, scope: !2311)
!2319 = !DILocation(line: 365, column: 10, scope: !2311)
!2320 = !DILocation(line: 365, column: 3, scope: !2311)
!2321 = distinct !DISubprogram(name: "stat", scope: !2322, file: !2322, line: 453, type: !2323, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2360)
!2322 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2323 = !DISubroutineType(types: !2324)
!2324 = !{!728, !733, !2325}
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2327, line: 46, size: 1152, elements: !2328)
!2327 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2328 = !{!2329, !2331, !2333, !2335, !2337, !2339, !2341, !2342, !2343, !2344, !2346, !2348, !2356, !2357, !2358}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2326, file: !2327, line: 48, baseType: !2330, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2081, line: 145, baseType: !851)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2326, file: !2327, line: 53, baseType: !2332, size: 64, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2081, line: 148, baseType: !851)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2326, file: !2327, line: 61, baseType: !2334, size: 64, offset: 128)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2081, line: 151, baseType: !851)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2326, file: !2327, line: 62, baseType: !2336, size: 32, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2081, line: 150, baseType: !7)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2326, file: !2327, line: 64, baseType: !2338, size: 32, offset: 224)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2081, line: 146, baseType: !7)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2326, file: !2327, line: 65, baseType: !2340, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2081, line: 147, baseType: !7)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2326, file: !2327, line: 67, baseType: !728, size: 32, offset: 288)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2326, file: !2327, line: 69, baseType: !2330, size: 64, offset: 320)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2326, file: !2327, line: 74, baseType: !2080, size: 64, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2326, file: !2327, line: 78, baseType: !2345, size: 64, offset: 448)
!2345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2081, line: 174, baseType: !868)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2326, file: !2327, line: 80, baseType: !2347, size: 64, offset: 512)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2081, line: 179, baseType: !868)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2326, file: !2327, line: 91, baseType: !2349, size: 128, offset: 576)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2350, line: 10, size: 128, elements: !2351)
!2350 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2351 = !{!2352, !2354}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2349, file: !2350, line: 12, baseType: !2353, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2081, line: 160, baseType: !868)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2349, file: !2350, line: 16, baseType: !2355, size: 64, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2081, line: 196, baseType: !868)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2326, file: !2327, line: 92, baseType: !2349, size: 128, offset: 704)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2326, file: !2327, line: 93, baseType: !2349, size: 128, offset: 832)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2326, file: !2327, line: 106, baseType: !2359, size: 192, offset: 960)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2355, size: 192, elements: !968)
!2360 = !{!2361, !2362}
!2361 = !DILocalVariable(name: "__path", arg: 1, scope: !2321, file: !2322, line: 453, type: !733)
!2362 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2321, file: !2322, line: 453, type: !2325)
!2363 = !DILocation(line: 0, scope: !2321)
!2364 = !DILocation(line: 455, column: 10, scope: !2321)
!2365 = !DILocation(line: 455, column: 3, scope: !2321)
!2366 = distinct !DISubprogram(name: "lstat", scope: !2322, file: !2322, line: 460, type: !2323, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2367)
!2367 = !{!2368, !2369}
!2368 = !DILocalVariable(name: "__path", arg: 1, scope: !2366, file: !2322, line: 460, type: !733)
!2369 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2366, file: !2322, line: 460, type: !2325)
!2370 = !DILocation(line: 0, scope: !2366)
!2371 = !DILocation(line: 462, column: 10, scope: !2366)
!2372 = !DILocation(line: 462, column: 3, scope: !2366)
!2373 = distinct !DISubprogram(name: "fstat", scope: !2322, file: !2322, line: 467, type: !2374, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2376)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!728, !728, !2325}
!2376 = !{!2377, !2378}
!2377 = !DILocalVariable(name: "__fd", arg: 1, scope: !2373, file: !2322, line: 467, type: !728)
!2378 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2373, file: !2322, line: 467, type: !2325)
!2379 = !DILocation(line: 0, scope: !2373)
!2380 = !DILocation(line: 469, column: 10, scope: !2373)
!2381 = !DILocation(line: 469, column: 3, scope: !2373)
!2382 = distinct !DISubprogram(name: "fstatat", scope: !2322, file: !2322, line: 474, type: !2383, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2385)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{!728, !728, !733, !2325, !728}
!2385 = !{!2386, !2387, !2388, !2389}
!2386 = !DILocalVariable(name: "__fd", arg: 1, scope: !2382, file: !2322, line: 474, type: !728)
!2387 = !DILocalVariable(name: "__filename", arg: 2, scope: !2382, file: !2322, line: 474, type: !733)
!2388 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2382, file: !2322, line: 474, type: !2325)
!2389 = !DILocalVariable(name: "__flag", arg: 4, scope: !2382, file: !2322, line: 474, type: !728)
!2390 = !DILocation(line: 0, scope: !2382)
!2391 = !DILocation(line: 477, column: 10, scope: !2382)
!2392 = !DILocation(line: 477, column: 3, scope: !2382)
!2393 = distinct !DISubprogram(name: "mknod", scope: !2322, file: !2322, line: 483, type: !2394, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2396)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{!728, !733, !2336, !2330}
!2396 = !{!2397, !2398, !2399}
!2397 = !DILocalVariable(name: "__path", arg: 1, scope: !2393, file: !2322, line: 483, type: !733)
!2398 = !DILocalVariable(name: "__mode", arg: 2, scope: !2393, file: !2322, line: 483, type: !2336)
!2399 = !DILocalVariable(name: "__dev", arg: 3, scope: !2393, file: !2322, line: 483, type: !2330)
!2400 = !DILocation(line: 0, scope: !2393)
!2401 = !DILocation(line: 485, column: 10, scope: !2393)
!2402 = !DILocation(line: 485, column: 3, scope: !2393)
!2403 = distinct !DISubprogram(name: "mknodat", scope: !2322, file: !2322, line: 491, type: !2404, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2406)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{!728, !728, !733, !2336, !2330}
!2406 = !{!2407, !2408, !2409, !2410}
!2407 = !DILocalVariable(name: "__fd", arg: 1, scope: !2403, file: !2322, line: 491, type: !728)
!2408 = !DILocalVariable(name: "__path", arg: 2, scope: !2403, file: !2322, line: 491, type: !733)
!2409 = !DILocalVariable(name: "__mode", arg: 3, scope: !2403, file: !2322, line: 491, type: !2336)
!2410 = !DILocalVariable(name: "__dev", arg: 4, scope: !2403, file: !2322, line: 491, type: !2330)
!2411 = !DILocation(line: 0, scope: !2403)
!2412 = !DILocation(line: 494, column: 10, scope: !2403)
!2413 = !DILocation(line: 494, column: 3, scope: !2403)
!2414 = distinct !DISubprogram(name: "stat64", scope: !2322, file: !2322, line: 502, type: !2415, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2437)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!728, !733, !2417}
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2327, line: 119, size: 1152, elements: !2419)
!2419 = !{!2420, !2421, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2433, !2434, !2435, !2436}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2418, file: !2327, line: 121, baseType: !2330, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2418, file: !2327, line: 123, baseType: !2422, size: 64, offset: 64)
!2422 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2081, line: 149, baseType: !851)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2418, file: !2327, line: 124, baseType: !2334, size: 64, offset: 128)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2418, file: !2327, line: 125, baseType: !2336, size: 32, offset: 192)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2418, file: !2327, line: 132, baseType: !2338, size: 32, offset: 224)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2418, file: !2327, line: 133, baseType: !2340, size: 32, offset: 256)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2418, file: !2327, line: 135, baseType: !728, size: 32, offset: 288)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2418, file: !2327, line: 136, baseType: !2330, size: 64, offset: 320)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2418, file: !2327, line: 137, baseType: !2080, size: 64, offset: 384)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2418, file: !2327, line: 143, baseType: !2345, size: 64, offset: 448)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2418, file: !2327, line: 144, baseType: !2432, size: 64, offset: 512)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2081, line: 180, baseType: !868)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2418, file: !2327, line: 152, baseType: !2349, size: 128, offset: 576)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2418, file: !2327, line: 153, baseType: !2349, size: 128, offset: 704)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2418, file: !2327, line: 154, baseType: !2349, size: 128, offset: 832)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2418, file: !2327, line: 164, baseType: !2359, size: 192, offset: 960)
!2437 = !{!2438, !2439}
!2438 = !DILocalVariable(name: "__path", arg: 1, scope: !2414, file: !2322, line: 502, type: !733)
!2439 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2414, file: !2322, line: 502, type: !2417)
!2440 = !DILocation(line: 0, scope: !2414)
!2441 = !DILocation(line: 504, column: 10, scope: !2414)
!2442 = !DILocation(line: 504, column: 3, scope: !2414)
!2443 = distinct !DISubprogram(name: "lstat64", scope: !2322, file: !2322, line: 509, type: !2415, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2444)
!2444 = !{!2445, !2446}
!2445 = !DILocalVariable(name: "__path", arg: 1, scope: !2443, file: !2322, line: 509, type: !733)
!2446 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2443, file: !2322, line: 509, type: !2417)
!2447 = !DILocation(line: 0, scope: !2443)
!2448 = !DILocation(line: 511, column: 10, scope: !2443)
!2449 = !DILocation(line: 511, column: 3, scope: !2443)
!2450 = distinct !DISubprogram(name: "fstat64", scope: !2322, file: !2322, line: 516, type: !2451, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2453)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!728, !728, !2417}
!2453 = !{!2454, !2455}
!2454 = !DILocalVariable(name: "__fd", arg: 1, scope: !2450, file: !2322, line: 516, type: !728)
!2455 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2450, file: !2322, line: 516, type: !2417)
!2456 = !DILocation(line: 0, scope: !2450)
!2457 = !DILocation(line: 518, column: 10, scope: !2450)
!2458 = !DILocation(line: 518, column: 3, scope: !2450)
!2459 = distinct !DISubprogram(name: "fstatat64", scope: !2322, file: !2322, line: 523, type: !2460, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2462)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{!728, !728, !733, !2417, !728}
!2462 = !{!2463, !2464, !2465, !2466}
!2463 = !DILocalVariable(name: "__fd", arg: 1, scope: !2459, file: !2322, line: 523, type: !728)
!2464 = !DILocalVariable(name: "__filename", arg: 2, scope: !2459, file: !2322, line: 523, type: !733)
!2465 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2459, file: !2322, line: 523, type: !2417)
!2466 = !DILocalVariable(name: "__flag", arg: 4, scope: !2459, file: !2322, line: 523, type: !728)
!2467 = !DILocation(line: 0, scope: !2459)
!2468 = !DILocation(line: 526, column: 10, scope: !2459)
!2469 = !DILocation(line: 526, column: 3, scope: !2459)
!2470 = distinct !DISubprogram(name: "dse_record_singleton_alias_set", scope: !3, file: !3, line: 2941, type: !2471, scopeLine: 2943, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2473)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{null, !739, !5}
!2473 = !{!2474, !2475, !2476, !2477, !2478}
!2474 = !DILocalVariable(name: "alias_set", arg: 1, scope: !2470, file: !3, line: 2941, type: !739)
!2475 = !DILocalVariable(name: "mode", arg: 2, scope: !2470, file: !3, line: 2942, type: !5)
!2476 = !DILocalVariable(name: "tmp_holder", scope: !2470, file: !3, line: 2944, type: !736)
!2477 = !DILocalVariable(name: "entry", scope: !2470, file: !3, line: 2945, type: !735)
!2478 = !DILocalVariable(name: "slot", scope: !2470, file: !3, line: 2946, type: !1285)
!2479 = !DILocation(line: 0, scope: !2470)
!2480 = !DILocation(line: 2944, column: 3, scope: !2470)
!2481 = !DILocation(line: 2950, column: 9, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2470, file: !3, line: 2950, column: 7)
!2483 = !DILocation(line: 2950, column: 25, scope: !2482)
!2484 = !DILocation(line: 2950, column: 21, scope: !2482)
!2485 = !DILocation(line: 2953, column: 8, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2470, file: !3, line: 2953, column: 7)
!2487 = !DILocation(line: 2953, column: 7, scope: !2470)
!2488 = !DILocation(line: 2955, column: 26, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2486, file: !3, line: 2954, column: 5)
!2490 = !DILocation(line: 2955, column: 24, scope: !2489)
!2491 = !DILocation(line: 2956, column: 39, scope: !2489)
!2492 = !DILocation(line: 2956, column: 37, scope: !2489)
!2493 = !DILocation(line: 2957, column: 32, scope: !2489)
!2494 = !DILocation(line: 2957, column: 30, scope: !2489)
!2495 = !DILocation(line: 2959, column: 31, scope: !2489)
!2496 = !DILocation(line: 2959, column: 29, scope: !2489)
!2497 = !DILocation(line: 2963, column: 19, scope: !2470)
!2498 = !DILocation(line: 2961, column: 5, scope: !2489)
!2499 = !DILocation(line: 2963, column: 3, scope: !2470)
!2500 = !DILocation(line: 2965, column: 14, scope: !2470)
!2501 = !DILocation(line: 2965, column: 24, scope: !2470)
!2502 = !DILocation(line: 2967, column: 26, scope: !2470)
!2503 = !DILocation(line: 2967, column: 10, scope: !2470)
!2504 = !DILocation(line: 2968, column: 3, scope: !2470)
!2505 = !DILocation(line: 2971, column: 52, scope: !2470)
!2506 = !DILocation(line: 2971, column: 40, scope: !2470)
!2507 = !DILocation(line: 2970, column: 9, scope: !2470)
!2508 = !DILocation(line: 2972, column: 10, scope: !2470)
!2509 = !DILocation(line: 2972, column: 20, scope: !2470)
!2510 = !DILocation(line: 2973, column: 10, scope: !2470)
!2511 = !DILocation(line: 2973, column: 15, scope: !2470)
!2512 = !DILocation(line: 2974, column: 1, scope: !2470)
!2513 = distinct !DISubprogram(name: "gate_dse", scope: !3, file: !3, line: 3861, type: !1933, scopeLine: 3862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2047)
!2514 = !DILocation(line: 3863, column: 10, scope: !2513)
!2515 = !DILocation(line: 3863, column: 23, scope: !2513)
!2516 = !DILocation(line: 3863, column: 26, scope: !2513)
!2517 = !DILocation(line: 3863, column: 3, scope: !2513)
!2518 = distinct !DISubprogram(name: "clear_alias_mode_hash", scope: !3, file: !3, line: 618, type: !1269, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2519)
!2519 = !{!2520, !2521}
!2520 = !DILocalVariable(name: "p", arg: 1, scope: !2518, file: !3, line: 618, type: !1272)
!2521 = !DILocalVariable(name: "holder", scope: !2518, file: !3, line: 620, type: !742)
!2522 = !DILocation(line: 0, scope: !2518)
!2523 = !DILocation(line: 622, column: 18, scope: !2518)
!2524 = !DILocation(line: 622, column: 3, scope: !2518)
!2525 = distinct !DISubprogram(name: "clear_alias_mode_eq", scope: !3, file: !3, line: 607, type: !1277, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2526)
!2526 = !{!2527, !2528, !2529, !2530}
!2527 = !DILocalVariable(name: "p1", arg: 1, scope: !2525, file: !3, line: 607, type: !1272)
!2528 = !DILocalVariable(name: "p2", arg: 2, scope: !2525, file: !3, line: 607, type: !1272)
!2529 = !DILocalVariable(name: "h1", scope: !2525, file: !3, line: 609, type: !742)
!2530 = !DILocalVariable(name: "h2", scope: !2525, file: !3, line: 611, type: !742)
!2531 = !DILocation(line: 0, scope: !2525)
!2532 = !DILocation(line: 613, column: 14, scope: !2525)
!2533 = !DILocation(line: 613, column: 31, scope: !2525)
!2534 = !DILocation(line: 613, column: 24, scope: !2525)
!2535 = !DILocation(line: 613, column: 3, scope: !2525)
!2536 = distinct !DISubprogram(name: "dse_invalidate_singleton_alias_set", scope: !3, file: !3, line: 2980, type: !2537, scopeLine: 2981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2539)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{null, !739}
!2539 = !{!2540}
!2540 = !DILocalVariable(name: "alias_set", arg: 1, scope: !2536, file: !3, line: 2980, type: !739)
!2541 = !DILocation(line: 0, scope: !2536)
!2542 = !DILocation(line: 2982, column: 9, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 2982, column: 7)
!2544 = !DILocation(line: 2982, column: 25, scope: !2543)
!2545 = !DILocation(line: 2982, column: 21, scope: !2543)
!2546 = !DILocation(line: 2985, column: 21, scope: !2536)
!2547 = !DILocation(line: 2985, column: 3, scope: !2536)
!2548 = !DILocation(line: 2986, column: 1, scope: !2536)
!2549 = distinct !DISubprogram(name: "gate_dse1", scope: !3, file: !3, line: 3867, type: !1933, scopeLine: 3868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2047)
!2550 = !DILocation(line: 3869, column: 10, scope: !2549)
!2551 = !DILocation(line: 3869, column: 19, scope: !2549)
!2552 = !DILocation(line: 3869, column: 26, scope: !2549)
!2553 = !DILocation(line: 3869, column: 23, scope: !2549)
!2554 = !DILocation(line: 3870, column: 8, scope: !2549)
!2555 = !DILocation(line: 3870, column: 5, scope: !2549)
!2556 = !DILocation(line: 3869, column: 3, scope: !2549)
!2557 = distinct !DISubprogram(name: "rest_of_handle_dse", scope: !3, file: !3, line: 3805, type: !1937, scopeLine: 3806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2558)
!2558 = !{!2559}
!2559 = !DILocalVariable(name: "did_global", scope: !2557, file: !3, line: 3807, type: !727)
!2560 = !DILocation(line: 0, scope: !2557)
!2561 = !DILocation(line: 3809, column: 3, scope: !2557)
!2562 = !DILocation(line: 3813, column: 3, scope: !2557)
!2563 = !DILocation(line: 3814, column: 3, scope: !2557)
!2564 = !DILocation(line: 3816, column: 3, scope: !2557)
!2565 = !DILocation(line: 3817, column: 3, scope: !2557)
!2566 = !DILocation(line: 3818, column: 3, scope: !2557)
!2567 = !DILocation(line: 3819, column: 7, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2557, file: !3, line: 3819, column: 7)
!2569 = !DILocation(line: 3819, column: 7, scope: !2557)
!2570 = !DILocation(line: 3821, column: 7, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !2568, file: !3, line: 3820, column: 5)
!2572 = !DILocation(line: 3822, column: 7, scope: !2571)
!2573 = !DILocation(line: 3824, column: 11, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 3824, column: 11)
!2575 = !DILocation(line: 3824, column: 11, scope: !2571)
!2576 = !DILocation(line: 3825, column: 2, scope: !2574)
!2577 = !DILocation(line: 3826, column: 7, scope: !2571)
!2578 = !DILocation(line: 3827, column: 7, scope: !2571)
!2579 = !DILocation(line: 3828, column: 7, scope: !2571)
!2580 = !DILocation(line: 3829, column: 5, scope: !2571)
!2581 = !DILocation(line: 3836, column: 7, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2557, file: !3, line: 3836, column: 7)
!2583 = !DILocation(line: 3836, column: 24, scope: !2582)
!2584 = !DILocation(line: 3836, column: 27, scope: !2582)
!2585 = !DILocation(line: 3836, column: 7, scope: !2557)
!2586 = !DILocation(line: 3838, column: 12, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2588, file: !3, line: 3838, column: 11)
!2588 = distinct !DILexicalBlock(scope: !2582, file: !3, line: 3837, column: 5)
!2589 = !DILocation(line: 3838, column: 11, scope: !2588)
!2590 = !DILocation(line: 3840, column: 4, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 3839, column: 2)
!2592 = !DILocation(line: 3841, column: 4, scope: !2591)
!2593 = !DILocation(line: 3842, column: 2, scope: !2591)
!2594 = !DILocation(line: 3844, column: 11, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2588, file: !3, line: 3844, column: 11)
!2596 = !DILocation(line: 3844, column: 11, scope: !2588)
!2597 = !DILocation(line: 3845, column: 2, scope: !2595)
!2598 = !DILocation(line: 3846, column: 7, scope: !2588)
!2599 = !DILocation(line: 3847, column: 7, scope: !2588)
!2600 = !DILocation(line: 3848, column: 7, scope: !2588)
!2601 = !DILocation(line: 3849, column: 5, scope: !2588)
!2602 = !DILocation(line: 3851, column: 3, scope: !2557)
!2603 = !DILocation(line: 3852, column: 3, scope: !2557)
!2604 = !DILocation(line: 3854, column: 7, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2557, file: !3, line: 3854, column: 7)
!2606 = !DILocation(line: 3854, column: 7, scope: !2557)
!2607 = !DILocation(line: 3856, column: 7, scope: !2605)
!2608 = !DILocation(line: 3856, column: 24, scope: !2605)
!2609 = !DILocation(line: 3856, column: 42, scope: !2605)
!2610 = !DILocation(line: 3855, column: 5, scope: !2605)
!2611 = !DILocation(line: 3857, column: 3, scope: !2557)
!2612 = distinct !DISubprogram(name: "gate_dse2", scope: !3, file: !3, line: 3874, type: !1933, scopeLine: 3875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2047)
!2613 = !DILocation(line: 3876, column: 10, scope: !2612)
!2614 = !DILocation(line: 3876, column: 19, scope: !2612)
!2615 = !DILocation(line: 3876, column: 26, scope: !2612)
!2616 = !DILocation(line: 3876, column: 23, scope: !2612)
!2617 = !DILocation(line: 3877, column: 8, scope: !2612)
!2618 = !DILocation(line: 3877, column: 5, scope: !2612)
!2619 = !DILocation(line: 3876, column: 3, scope: !2612)
!2620 = distinct !DISubprogram(name: "dse_step0", scope: !3, file: !3, line: 732, type: !2621, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2047)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{null}
!2623 = !DILocation(line: 734, column: 19, scope: !2620)
!2624 = !DILocation(line: 735, column: 20, scope: !2620)
!2625 = !DILocation(line: 736, column: 17, scope: !2620)
!2626 = !DILocation(line: 738, column: 13, scope: !2620)
!2627 = !DILocation(line: 738, column: 11, scope: !2620)
!2628 = !DILocation(line: 741, column: 7, scope: !2620)
!2629 = !DILocation(line: 741, column: 5, scope: !2620)
!2630 = !DILocation(line: 744, column: 7, scope: !2620)
!2631 = !DILocation(line: 744, column: 5, scope: !2620)
!2632 = !DILocation(line: 747, column: 7, scope: !2620)
!2633 = !DILocation(line: 747, column: 5, scope: !2620)
!2634 = !DILocation(line: 750, column: 7, scope: !2620)
!2635 = !DILocation(line: 750, column: 5, scope: !2620)
!2636 = !DILocation(line: 753, column: 7, scope: !2620)
!2637 = !DILocation(line: 753, column: 5, scope: !2620)
!2638 = !DILocation(line: 756, column: 7, scope: !2620)
!2639 = !DILocation(line: 756, column: 5, scope: !2620)
!2640 = !DILocation(line: 759, column: 21, scope: !2620)
!2641 = !DILocation(line: 759, column: 19, scope: !2620)
!2642 = !DILocation(line: 762, column: 14, scope: !2620)
!2643 = !DILocation(line: 762, column: 12, scope: !2620)
!2644 = !DILocation(line: 763, column: 21, scope: !2620)
!2645 = !DILocation(line: 765, column: 38, scope: !2620)
!2646 = !DILocation(line: 765, column: 44, scope: !2620)
!2647 = !DILocation(line: 765, column: 37, scope: !2620)
!2648 = !DILocation(line: 765, column: 35, scope: !2620)
!2649 = !DILocation(line: 767, column: 3, scope: !2620)
!2650 = !DILocation(line: 769, column: 7, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 769, column: 7)
!2652 = !DILocation(line: 769, column: 7, scope: !2620)
!2653 = !DILocation(line: 770, column: 25, scope: !2651)
!2654 = !DILocation(line: 770, column: 5, scope: !2651)
!2655 = !DILocation(line: 0, scope: !2651)
!2656 = !DILocation(line: 773, column: 1, scope: !2620)
!2657 = distinct !DISubprogram(name: "dse_step1", scope: !3, file: !3, line: 2615, type: !2621, scopeLine: 2616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2658)
!2658 = !{!2659, !2660, !2661, !2665, !2666, !2669, !2672, !2674, !2678, !2680, !2684}
!2659 = !DILocalVariable(name: "bb", scope: !2657, file: !3, line: 2617, type: !1154)
!2660 = !DILocalVariable(name: "regs_live", scope: !2657, file: !3, line: 2618, type: !1839)
!2661 = !DILocalVariable(name: "ptr", scope: !2662, file: !3, line: 2627, type: !750)
!2662 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 2626, column: 5)
!2663 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 2625, column: 3)
!2664 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 2625, column: 3)
!2665 = !DILocalVariable(name: "bb_info", scope: !2662, file: !3, line: 2628, type: !745)
!2666 = !DILocalVariable(name: "insn", scope: !2667, file: !3, line: 2642, type: !760)
!2667 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 2641, column: 2)
!2668 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 2640, column: 11)
!2669 = !DILocalVariable(name: "i_ptr", scope: !2670, file: !3, line: 2675, type: !750)
!2670 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 2674, column: 6)
!2671 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 2669, column: 8)
!2672 = !DILocalVariable(name: "store_info", scope: !2673, file: !3, line: 2678, type: !1818)
!2673 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 2677, column: 3)
!2674 = !DILocalVariable(name: "group", scope: !2675, file: !3, line: 2688, type: !1885)
!2675 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 2687, column: 9)
!2676 = distinct !DILexicalBlock(scope: !2677, file: !3, line: 2686, column: 11)
!2677 = distinct !DILexicalBlock(scope: !2673, file: !3, line: 2683, column: 9)
!2678 = !DILocalVariable(name: "next", scope: !2679, file: !3, line: 2702, type: !1908)
!2679 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 2701, column: 6)
!2680 = !DILocalVariable(name: "s_info", scope: !2681, file: !3, line: 2719, type: !1818)
!2681 = distinct !DILexicalBlock(scope: !2682, file: !3, line: 2718, column: 3)
!2682 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 2717, column: 12)
!2683 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 2716, column: 6)
!2684 = !DILocalVariable(name: "s_info", scope: !2685, file: !3, line: 2742, type: !1818)
!2685 = distinct !DILexicalBlock(scope: !2682, file: !3, line: 2741, column: 3)
!2686 = !DILocation(line: 2618, column: 22, scope: !2657)
!2687 = !DILocation(line: 0, scope: !2657)
!2688 = !DILocation(line: 2620, column: 3, scope: !2657)
!2689 = !DILocation(line: 2621, column: 16, scope: !2657)
!2690 = !DILocation(line: 2621, column: 14, scope: !2657)
!2691 = !DILocation(line: 2622, column: 3, scope: !2657)
!2692 = !DILocation(line: 2623, column: 19, scope: !2657)
!2693 = !DILocation(line: 2623, column: 3, scope: !2657)
!2694 = !DILocation(line: 2625, column: 3, scope: !2664)
!2695 = !DILocation(line: 0, scope: !2664)
!2696 = !DILocation(line: 2628, column: 51, scope: !2662)
!2697 = !DILocation(line: 2628, column: 39, scope: !2662)
!2698 = !DILocation(line: 2628, column: 27, scope: !2662)
!2699 = !DILocation(line: 0, scope: !2662)
!2700 = !DILocation(line: 2630, column: 7, scope: !2662)
!2701 = !DILocation(line: 2631, column: 23, scope: !2662)
!2702 = !DILocation(line: 2631, column: 39, scope: !2662)
!2703 = !DILocation(line: 2631, column: 7, scope: !2662)
!2704 = !DILocation(line: 2632, column: 16, scope: !2662)
!2705 = !DILocation(line: 2632, column: 26, scope: !2662)
!2706 = !DILocation(line: 2634, column: 31, scope: !2662)
!2707 = !DILocation(line: 2634, column: 7, scope: !2662)
!2708 = !DILocation(line: 2635, column: 7, scope: !2662)
!2709 = !DILocation(line: 2637, column: 7, scope: !2662)
!2710 = !DILocation(line: 2637, column: 20, scope: !2662)
!2711 = !DILocation(line: 2637, column: 27, scope: !2662)
!2712 = !DILocation(line: 2638, column: 27, scope: !2662)
!2713 = !DILocation(line: 2640, column: 15, scope: !2668)
!2714 = !DILocation(line: 2640, column: 21, scope: !2668)
!2715 = !DILocation(line: 2640, column: 11, scope: !2662)
!2716 = !DILocation(line: 2645, column: 8, scope: !2667)
!2717 = !DILocation(line: 2645, column: 6, scope: !2667)
!2718 = !DILocation(line: 2647, column: 24, scope: !2667)
!2719 = !DILocation(line: 2648, column: 4, scope: !2667)
!2720 = !DILocation(line: 2651, column: 4, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 2651, column: 4)
!2722 = !DILocation(line: 0, scope: !2721)
!2723 = !DILocation(line: 0, scope: !2667)
!2724 = !DILocation(line: 2651, column: 4, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2721, file: !3, line: 2651, column: 4)
!2726 = !DILocation(line: 2653, column: 12, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2728, file: !3, line: 2653, column: 12)
!2728 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 2652, column: 6)
!2729 = !DILocation(line: 2653, column: 12, scope: !2728)
!2730 = !DILocation(line: 2654, column: 3, scope: !2727)
!2731 = !DILocation(line: 2655, column: 8, scope: !2728)
!2732 = !DILocation(line: 2656, column: 12, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2728, file: !3, line: 2656, column: 12)
!2734 = !DILocation(line: 2656, column: 12, scope: !2728)
!2735 = !DILocation(line: 2657, column: 3, scope: !2733)
!2736 = distinct !{!2736, !2720, !2737}
!2737 = !DILocation(line: 2658, column: 6, scope: !2721)
!2738 = !DILocation(line: 2669, column: 8, scope: !2671)
!2739 = !DILocation(line: 2670, column: 8, scope: !2671)
!2740 = !DILocation(line: 2670, column: 12, scope: !2671)
!2741 = !DILocation(line: 2670, column: 35, scope: !2671)
!2742 = !DILocation(line: 2671, column: 5, scope: !2671)
!2743 = !DILocation(line: 2671, column: 9, scope: !2671)
!2744 = !DILocation(line: 2672, column: 9, scope: !2671)
!2745 = !DILocation(line: 2672, column: 12, scope: !2671)
!2746 = !DILocation(line: 2672, column: 32, scope: !2671)
!2747 = !DILocation(line: 2672, column: 29, scope: !2671)
!2748 = !DILocation(line: 2673, column: 20, scope: !2671)
!2749 = !DILocation(line: 2673, column: 14, scope: !2671)
!2750 = !DILocation(line: 2673, column: 9, scope: !2671)
!2751 = !DILocation(line: 2676, column: 8, scope: !2670)
!2752 = !DILocation(line: 0, scope: !2670)
!2753 = !DILocation(line: 2678, column: 38, scope: !2673)
!2754 = !DILocation(line: 2681, column: 5, scope: !2673)
!2755 = !DILocation(line: 0, scope: !2673)
!2756 = !DILocation(line: 2681, column: 25, scope: !2673)
!2757 = !DILocation(line: 2681, column: 12, scope: !2673)
!2758 = !DILocation(line: 2682, column: 32, scope: !2673)
!2759 = distinct !{!2759, !2754, !2758}
!2760 = !DILocation(line: 2683, column: 21, scope: !2677)
!2761 = !DILocation(line: 2683, column: 9, scope: !2677)
!2762 = !DILocation(line: 2683, column: 31, scope: !2677)
!2763 = !DILocation(line: 2683, column: 42, scope: !2677)
!2764 = !DILocation(line: 2683, column: 35, scope: !2677)
!2765 = !DILocation(line: 2683, column: 9, scope: !2673)
!2766 = !DILocation(line: 2684, column: 7, scope: !2677)
!2767 = !DILocation(line: 2686, column: 23, scope: !2676)
!2768 = !DILocation(line: 2686, column: 32, scope: !2676)
!2769 = !DILocation(line: 2686, column: 11, scope: !2677)
!2770 = !DILocation(line: 2689, column: 8, scope: !2675)
!2771 = !DILocation(line: 0, scope: !2675)
!2772 = !DILocation(line: 2690, column: 15, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2675, file: !3, line: 2690, column: 8)
!2774 = !DILocation(line: 2690, column: 8, scope: !2773)
!2775 = !DILocation(line: 2690, column: 29, scope: !2773)
!2776 = !DILocation(line: 2690, column: 40, scope: !2773)
!2777 = !DILocation(line: 2690, column: 33, scope: !2773)
!2778 = !DILocation(line: 2690, column: 8, scope: !2675)
!2779 = !DILocation(line: 2691, column: 6, scope: !2773)
!2780 = !DILocation(line: 2694, column: 20, scope: !2673)
!2781 = distinct !{!2781, !2751, !2782}
!2782 = !DILocation(line: 2695, column: 3, scope: !2670)
!2783 = !DILocation(line: 2700, column: 4, scope: !2667)
!2784 = !DILocation(line: 2700, column: 11, scope: !2667)
!2785 = !DILocation(line: 2702, column: 55, scope: !2679)
!2786 = !DILocation(line: 2706, column: 59, scope: !2679)
!2787 = !DILocation(line: 2706, column: 31, scope: !2679)
!2788 = !DILocation(line: 2706, column: 35, scope: !2679)
!2789 = !DILocation(line: 2707, column: 19, scope: !2679)
!2790 = !DILocation(line: 2707, column: 41, scope: !2679)
!2791 = !DILocation(line: 2707, column: 8, scope: !2679)
!2792 = !DILocation(line: 2708, column: 29, scope: !2679)
!2793 = distinct !{!2793, !2783, !2794}
!2794 = !DILocation(line: 2709, column: 6, scope: !2667)
!2795 = !DILocation(line: 2714, column: 19, scope: !2667)
!2796 = !DILocation(line: 2715, column: 4, scope: !2667)
!2797 = !DILocation(line: 2717, column: 17, scope: !2682)
!2798 = !DILocation(line: 2717, column: 12, scope: !2682)
!2799 = !DILocation(line: 0, scope: !2682)
!2800 = !DILocation(line: 2717, column: 12, scope: !2683)
!2801 = !DILocation(line: 2720, column: 5, scope: !2681)
!2802 = !DILocation(line: 2745, column: 5, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2685, file: !3, line: 2745, column: 5)
!2804 = !DILocation(line: 0, scope: !2681)
!2805 = !DILocation(line: 2720, column: 19, scope: !2681)
!2806 = !DILocation(line: 2720, column: 31, scope: !2681)
!2807 = !DILocation(line: 2720, column: 22, scope: !2681)
!2808 = !DILocation(line: 2721, column: 24, scope: !2681)
!2809 = distinct !{!2809, !2801, !2808}
!2810 = !DILocation(line: 2723, column: 20, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2681, file: !3, line: 2722, column: 9)
!2812 = !DILocation(line: 2723, column: 12, scope: !2811)
!2813 = !DILocation(line: 2724, column: 9, scope: !2811)
!2814 = !DILocation(line: 2724, column: 38, scope: !2811)
!2815 = !DILocation(line: 2724, column: 12, scope: !2811)
!2816 = !DILocation(line: 2725, column: 9, scope: !2811)
!2817 = !DILocation(line: 2725, column: 18, scope: !2811)
!2818 = !DILocation(line: 2725, column: 13, scope: !2811)
!2819 = !DILocation(line: 2722, column: 9, scope: !2681)
!2820 = !DILocation(line: 2727, column: 13, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 2727, column: 13)
!2822 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 2726, column: 7)
!2823 = !DILocation(line: 2727, column: 13, scope: !2822)
!2824 = !DILocation(line: 2732, column: 6, scope: !2821)
!2825 = !DILocation(line: 2733, column: 6, scope: !2821)
!2826 = !DILocation(line: 2728, column: 4, scope: !2821)
!2827 = !DILocation(line: 2734, column: 9, scope: !2822)
!2828 = !DILocation(line: 2735, column: 7, scope: !2822)
!2829 = !DILocation(line: 2737, column: 32, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2681, file: !3, line: 2736, column: 9)
!2831 = !DILocation(line: 2737, column: 7, scope: !2830)
!2832 = !DILocation(line: 2738, column: 5, scope: !2681)
!2833 = !DILocation(line: 2739, column: 3, scope: !2681)
!2834 = !DILocation(line: 0, scope: !2803)
!2835 = !DILocation(line: 0, scope: !2685)
!2836 = !DILocation(line: 2746, column: 19, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 2746, column: 11)
!2838 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 2745, column: 5)
!2839 = !DILocation(line: 2746, column: 11, scope: !2837)
!2840 = !DILocation(line: 2746, column: 11, scope: !2838)
!2841 = !DILocation(line: 2748, column: 4, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2837, file: !3, line: 2747, column: 9)
!2843 = !DILocation(line: 2749, column: 21, scope: !2842)
!2844 = !DILocation(line: 2750, column: 9, scope: !2842)
!2845 = !DILocation(line: 2745, column: 60, scope: !2838)
!2846 = !DILocation(line: 2745, column: 5, scope: !2838)
!2847 = distinct !{!2847, !2802, !2848}
!2848 = !DILocation(line: 2750, column: 9, scope: !2803)
!2849 = !DILocation(line: 2752, column: 19, scope: !2683)
!2850 = distinct !{!2850, !2796, !2851}
!2851 = !DILocation(line: 2753, column: 6, scope: !2667)
!2852 = !DILocation(line: 2755, column: 21, scope: !2667)
!2853 = !DILocation(line: 2755, column: 4, scope: !2667)
!2854 = !DILocation(line: 2756, column: 2, scope: !2667)
!2855 = !DILocation(line: 2757, column: 26, scope: !2662)
!2856 = !DILocation(line: 2625, column: 3, scope: !2663)
!2857 = distinct !{!2857, !2694, !2858}
!2858 = !DILocation(line: 2758, column: 5, scope: !2664)
!2859 = !DILocation(line: 2760, column: 3, scope: !2657)
!2860 = !DILocation(line: 2761, column: 3, scope: !2657)
!2861 = !DILocation(line: 2762, column: 15, scope: !2657)
!2862 = !DILocation(line: 2762, column: 3, scope: !2657)
!2863 = !DILocation(line: 2763, column: 1, scope: !2657)
!2864 = distinct !DISubprogram(name: "dse_step2_init", scope: !3, file: !3, line: 2775, type: !2621, scopeLine: 2776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2865)
!2865 = !{!2866, !2867}
!2866 = !DILocalVariable(name: "i", scope: !2864, file: !3, line: 2777, type: !7)
!2867 = !DILocalVariable(name: "group", scope: !2864, file: !3, line: 2778, type: !1885)
!2868 = !DILocation(line: 2778, column: 3, scope: !2864)
!2869 = !DILocation(line: 0, scope: !2864)
!2870 = !DILocation(line: 2780, column: 8, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2864, file: !3, line: 2780, column: 3)
!2872 = !DILocation(line: 0, scope: !2871)
!2873 = !DILocation(line: 2780, column: 15, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2780, column: 3)
!2875 = !DILocation(line: 2780, column: 3, scope: !2871)
!2876 = !DILocation(line: 2796, column: 11, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 2796, column: 11)
!2878 = distinct !DILexicalBlock(scope: !2874, file: !3, line: 2781, column: 5)
!2879 = !DILocation(line: 2796, column: 43, scope: !2877)
!2880 = !DILocation(line: 2796, column: 46, scope: !2877)
!2881 = !DILocation(line: 2796, column: 53, scope: !2877)
!2882 = !DILocation(line: 2796, column: 11, scope: !2878)
!2883 = !DILocation(line: 2798, column: 28, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 2797, column: 2)
!2885 = !DILocation(line: 2798, column: 45, scope: !2884)
!2886 = !DILocation(line: 2798, column: 4, scope: !2884)
!2887 = !DILocation(line: 2799, column: 21, scope: !2884)
!2888 = !DILocation(line: 2799, column: 28, scope: !2884)
!2889 = !DILocation(line: 2799, column: 45, scope: !2884)
!2890 = !DILocation(line: 2799, column: 4, scope: !2884)
!2891 = !DILocation(line: 2800, column: 8, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 2800, column: 8)
!2893 = !DILocation(line: 2800, column: 8, scope: !2884)
!2894 = !DILocation(line: 2801, column: 6, scope: !2892)
!2895 = !DILocation(line: 2804, column: 7, scope: !2878)
!2896 = !DILocation(line: 2804, column: 14, scope: !2878)
!2897 = !DILocation(line: 2804, column: 31, scope: !2878)
!2898 = !DILocation(line: 2805, column: 29, scope: !2878)
!2899 = !DILocation(line: 2805, column: 7, scope: !2878)
!2900 = !DILocation(line: 2805, column: 14, scope: !2878)
!2901 = !DILocation(line: 2805, column: 27, scope: !2878)
!2902 = !DILocation(line: 2806, column: 14, scope: !2878)
!2903 = !DILocation(line: 2806, column: 31, scope: !2878)
!2904 = !DILocation(line: 2807, column: 29, scope: !2878)
!2905 = !DILocation(line: 2807, column: 7, scope: !2878)
!2906 = !DILocation(line: 2807, column: 14, scope: !2878)
!2907 = !DILocation(line: 2807, column: 27, scope: !2878)
!2908 = !DILocation(line: 2808, column: 14, scope: !2878)
!2909 = !DILocation(line: 2808, column: 31, scope: !2878)
!2910 = !DILocation(line: 2809, column: 11, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 2809, column: 11)
!2912 = !DILocation(line: 2809, column: 11, scope: !2878)
!2913 = !DILocation(line: 2812, column: 37, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2911, file: !3, line: 2810, column: 2)
!2915 = !DILocation(line: 2812, column: 11, scope: !2914)
!2916 = !DILocation(line: 2812, column: 6, scope: !2914)
!2917 = !DILocation(line: 2813, column: 30, scope: !2914)
!2918 = !DILocation(line: 2813, column: 37, scope: !2914)
!2919 = !DILocation(line: 2813, column: 11, scope: !2914)
!2920 = !DILocation(line: 2813, column: 6, scope: !2914)
!2921 = !DILocation(line: 2811, column: 4, scope: !2914)
!2922 = !DILocation(line: 2814, column: 18, scope: !2914)
!2923 = !DILocation(line: 2814, column: 29, scope: !2914)
!2924 = !DILocation(line: 2814, column: 36, scope: !2914)
!2925 = !DILocation(line: 2814, column: 4, scope: !2914)
!2926 = !DILocation(line: 2815, column: 18, scope: !2914)
!2927 = !DILocation(line: 2815, column: 29, scope: !2914)
!2928 = !DILocation(line: 2815, column: 36, scope: !2914)
!2929 = !DILocation(line: 2815, column: 4, scope: !2914)
!2930 = !DILocation(line: 2816, column: 2, scope: !2914)
!2931 = !DILocation(line: 2780, column: 69, scope: !2874)
!2932 = !DILocation(line: 2780, column: 3, scope: !2874)
!2933 = distinct !{!2933, !2875, !2934}
!2934 = !DILocation(line: 2817, column: 5, scope: !2871)
!2935 = !DILocation(line: 2818, column: 1, scope: !2864)
!2936 = distinct !DISubprogram(name: "dse_step2_nospill", scope: !3, file: !3, line: 2824, type: !1933, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2937)
!2937 = !{!2938, !2939, !2940, !2951}
!2938 = !DILocalVariable(name: "i", scope: !2936, file: !3, line: 2826, type: !7)
!2939 = !DILocalVariable(name: "group", scope: !2936, file: !3, line: 2827, type: !1885)
!2940 = !DILocalVariable(name: "bi", scope: !2941, file: !3, line: 2834, type: !2944)
!2941 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 2833, column: 5)
!2942 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 2832, column: 3)
!2943 = distinct !DILexicalBlock(scope: !2936, file: !3, line: 2832, column: 3)
!2944 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !837, line: 218, baseType: !2945)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !837, line: 203, size: 256, elements: !2946)
!2946 = !{!2947, !2948, !2949, !2950}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !2945, file: !837, line: 206, baseType: !840, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !2945, file: !837, line: 209, baseType: !840, size: 64, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !2945, file: !837, line: 212, baseType: !7, size: 32, offset: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2945, file: !837, line: 217, baseType: !850, size: 64, offset: 192)
!2951 = !DILocalVariable(name: "j", scope: !2941, file: !3, line: 2835, type: !7)
!2952 = !DILocation(line: 2827, column: 3, scope: !2936)
!2953 = !DILocation(line: 2830, column: 20, scope: !2936)
!2954 = !DILocation(line: 0, scope: !2936)
!2955 = !DILocation(line: 0, scope: !2941)
!2956 = !DILocation(line: 2832, column: 8, scope: !2943)
!2957 = !DILocation(line: 0, scope: !2943)
!2958 = !DILocation(line: 2832, column: 15, scope: !2942)
!2959 = !DILocation(line: 2832, column: 3, scope: !2943)
!2960 = !DILocation(line: 2834, column: 7, scope: !2941)
!2961 = !DILocation(line: 2835, column: 7, scope: !2941)
!2962 = !DILocation(line: 2837, column: 11, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2941, file: !3, line: 2837, column: 11)
!2964 = !DILocation(line: 2837, column: 20, scope: !2963)
!2965 = !DILocation(line: 2837, column: 17, scope: !2963)
!2966 = !DILocation(line: 2837, column: 11, scope: !2941)
!2967 = !DILocation(line: 2840, column: 22, scope: !2941)
!2968 = !DILocation(line: 2840, column: 60, scope: !2941)
!2969 = !DILocation(line: 2840, column: 53, scope: !2941)
!2970 = !DILocation(line: 2840, column: 51, scope: !2941)
!2971 = !DILocation(line: 2840, column: 7, scope: !2941)
!2972 = !DILocation(line: 2841, column: 15, scope: !2941)
!2973 = !DILocation(line: 2841, column: 22, scope: !2941)
!2974 = !DILocation(line: 2841, column: 60, scope: !2941)
!2975 = !DILocation(line: 2841, column: 53, scope: !2941)
!2976 = !DILocation(line: 2841, column: 51, scope: !2941)
!2977 = !DILocation(line: 2841, column: 7, scope: !2941)
!2978 = !DILocation(line: 2842, column: 21, scope: !2941)
!2979 = !DILocation(line: 2842, column: 28, scope: !2941)
!2980 = !DILocation(line: 2842, column: 7, scope: !2941)
!2981 = !DILocation(line: 2844, column: 7, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2941, file: !3, line: 2844, column: 7)
!2983 = !DILocation(line: 2844, column: 7, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2982, file: !3, line: 2844, column: 7)
!2985 = !DILocation(line: 2846, column: 27, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 2845, column: 2)
!2987 = !DILocation(line: 2846, column: 39, scope: !2986)
!2988 = !DILocation(line: 2846, column: 4, scope: !2986)
!2989 = !DILocation(line: 2847, column: 45, scope: !2986)
!2990 = !DILocation(line: 2847, column: 4, scope: !2986)
!2991 = !DILocation(line: 2847, column: 11, scope: !2986)
!2992 = !DILocation(line: 2847, column: 24, scope: !2986)
!2993 = !DILocation(line: 2847, column: 27, scope: !2986)
!2994 = !DILocation(line: 2848, column: 4, scope: !2986)
!2995 = !DILocation(line: 2848, column: 11, scope: !2986)
!2996 = !DILocation(line: 2848, column: 28, scope: !2986)
!2997 = distinct !{!2997, !2981, !2998}
!2998 = !DILocation(line: 2849, column: 2, scope: !2982)
!2999 = !DILocation(line: 2850, column: 7, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2941, file: !3, line: 2850, column: 7)
!3001 = !DILocation(line: 2850, column: 7, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 2850, column: 7)
!3003 = !DILocation(line: 2852, column: 20, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 2851, column: 2)
!3005 = !DILocation(line: 2852, column: 27, scope: !3004)
!3006 = !DILocation(line: 2852, column: 39, scope: !3004)
!3007 = !DILocation(line: 2852, column: 4, scope: !3004)
!3008 = !DILocation(line: 2853, column: 45, scope: !3004)
!3009 = !DILocation(line: 2853, column: 4, scope: !3004)
!3010 = !DILocation(line: 2853, column: 11, scope: !3004)
!3011 = !DILocation(line: 2853, column: 24, scope: !3004)
!3012 = !DILocation(line: 2853, column: 27, scope: !3004)
!3013 = !DILocation(line: 2854, column: 4, scope: !3004)
!3014 = !DILocation(line: 2854, column: 11, scope: !3004)
!3015 = !DILocation(line: 2854, column: 28, scope: !3004)
!3016 = distinct !{!3016, !2999, !3017}
!3017 = !DILocation(line: 2855, column: 2, scope: !3000)
!3018 = !DILocation(line: 2856, column: 5, scope: !2942)
!3019 = !DILocation(line: 2832, column: 69, scope: !2942)
!3020 = !DILocation(line: 2832, column: 3, scope: !2942)
!3021 = distinct !{!3021, !2959, !3022}
!3022 = !DILocation(line: 2856, column: 5, scope: !2943)
!3023 = !DILocation(line: 2857, column: 10, scope: !2936)
!3024 = !DILocation(line: 2857, column: 27, scope: !2936)
!3025 = !DILocation(line: 2858, column: 1, scope: !2936)
!3026 = !DILocation(line: 2857, column: 3, scope: !2936)
!3027 = distinct !DISubprogram(name: "dse_step3", scope: !3, file: !3, line: 3300, type: !3028, scopeLine: 3301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3030)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{null, !727}
!3030 = !{!3031, !3032, !3033, !3044, !3055, !3056, !3057, !3061, !3067, !3070}
!3031 = !DILocalVariable(name: "for_spills", arg: 1, scope: !3027, file: !3, line: 3300, type: !727)
!3032 = !DILocalVariable(name: "bb", scope: !3027, file: !3, line: 3302, type: !1154)
!3033 = !DILocalVariable(name: "unreachable_blocks", scope: !3027, file: !3, line: 3303, type: !3034)
!3034 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !3035, line: 45, baseType: !3036)
!3035 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !3035, line: 39, size: 192, elements: !3038)
!3038 = !{!3039, !3040, !3041, !3042}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !3037, file: !3035, line: 41, baseType: !726, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !3037, file: !3035, line: 42, baseType: !7, size: 32, offset: 64)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3037, file: !3035, line: 43, baseType: !7, size: 32, offset: 96)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !3037, file: !3035, line: 44, baseType: !3043, size: 64, offset: 128)
!3043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !851, size: 64, elements: !795)
!3044 = !DILocalVariable(name: "sbi", scope: !3027, file: !3, line: 3304, type: !3045)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap_iterator", file: !3035, line: 111, baseType: !3046)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3035, line: 96, size: 256, elements: !3047)
!3047 = !{!3048, !3051, !3052, !3053, !3054}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3046, file: !3035, line: 98, baseType: !3049, size: 64)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3046, file: !3035, line: 101, baseType: !7, size: 32, offset: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "word_num", scope: !3046, file: !3035, line: 104, baseType: !7, size: 32, offset: 96)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "bit_num", scope: !3046, file: !3035, line: 107, baseType: !7, size: 32, offset: 128)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !3046, file: !3035, line: 110, baseType: !851, size: 64, offset: 192)
!3055 = !DILocalVariable(name: "all_ones", scope: !3027, file: !3, line: 3305, type: !1839)
!3056 = !DILocalVariable(name: "i", scope: !3027, file: !3, line: 3306, type: !7)
!3057 = !DILocalVariable(name: "bb_info", scope: !3058, file: !3, line: 3312, type: !745)
!3058 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 3311, column: 5)
!3059 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 3310, column: 3)
!3060 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 3310, column: 3)
!3061 = !DILocalVariable(name: "bb_info", scope: !3062, file: !3, line: 3342, type: !745)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !3, line: 3341, column: 2)
!3063 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 3340, column: 11)
!3064 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 3339, column: 5)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 3338, column: 3)
!3066 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 3338, column: 3)
!3067 = !DILocalVariable(name: "j", scope: !3068, file: !3, line: 3345, type: !7)
!3068 = distinct !DILexicalBlock(scope: !3069, file: !3, line: 3344, column: 6)
!3069 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 3343, column: 8)
!3070 = !DILocalVariable(name: "group", scope: !3068, file: !3, line: 3346, type: !1885)
!3071 = !DILocation(line: 0, scope: !3027)
!3072 = !DILocation(line: 3303, column: 47, scope: !3027)
!3073 = !DILocation(line: 3303, column: 32, scope: !3027)
!3074 = !DILocation(line: 3304, column: 3, scope: !3027)
!3075 = !DILocation(line: 3306, column: 3, scope: !3027)
!3076 = !DILocation(line: 3308, column: 3, scope: !3027)
!3077 = !DILocation(line: 3310, column: 3, scope: !3060)
!3078 = !DILocation(line: 0, scope: !3060)
!3079 = !DILocation(line: 3312, column: 27, scope: !3058)
!3080 = !DILocation(line: 3312, column: 40, scope: !3058)
!3081 = !DILocation(line: 0, scope: !3058)
!3082 = !DILocation(line: 3313, column: 20, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 3313, column: 11)
!3084 = !DILocation(line: 3313, column: 11, scope: !3083)
!3085 = !DILocation(line: 3313, column: 11, scope: !3058)
!3086 = !DILocation(line: 3314, column: 2, scope: !3083)
!3087 = !DILocation(line: 3316, column: 17, scope: !3083)
!3088 = !DILocation(line: 3316, column: 15, scope: !3083)
!3089 = !DILocation(line: 3318, column: 15, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 3318, column: 11)
!3091 = !DILocation(line: 3318, column: 21, scope: !3090)
!3092 = !DILocation(line: 3318, column: 11, scope: !3058)
!3093 = !DILocation(line: 3320, column: 26, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 3320, column: 16)
!3095 = !DILocation(line: 3320, column: 16, scope: !3090)
!3096 = !DILocation(line: 3321, column: 2, scope: !3094)
!3097 = !DILocation(line: 3323, column: 2, scope: !3094)
!3098 = !DILocation(line: 3324, column: 11, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 3324, column: 11)
!3100 = !DILocation(line: 3324, column: 34, scope: !3099)
!3101 = !DILocation(line: 3324, column: 11, scope: !3058)
!3102 = !DILocation(line: 3325, column: 2, scope: !3099)
!3103 = !DILocation(line: 3329, column: 20, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 3329, column: 11)
!3105 = !DILocation(line: 3329, column: 11, scope: !3104)
!3106 = !DILocation(line: 3329, column: 11, scope: !3058)
!3107 = !DILocation(line: 3330, column: 2, scope: !3104)
!3108 = !DILocation(line: 3331, column: 20, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 3331, column: 11)
!3110 = !DILocation(line: 3331, column: 11, scope: !3109)
!3111 = !DILocation(line: 3331, column: 11, scope: !3058)
!3112 = !DILocation(line: 3332, column: 2, scope: !3109)
!3113 = !DILocation(line: 3310, column: 3, scope: !3059)
!3114 = distinct !{!3114, !3077, !3115}
!3115 = !DILocation(line: 3333, column: 5, scope: !3060)
!3116 = !DILocation(line: 3338, column: 3, scope: !3066)
!3117 = !DILocation(line: 0, scope: !3068)
!3118 = !DILocation(line: 3305, column: 10, scope: !3027)
!3119 = !DILocation(line: 3338, column: 3, scope: !3065)
!3120 = !DILocation(line: 3340, column: 25, scope: !3063)
!3121 = !DILocation(line: 3340, column: 37, scope: !3063)
!3122 = !DILocation(line: 3340, column: 11, scope: !3063)
!3123 = !DILocation(line: 3340, column: 11, scope: !3064)
!3124 = !DILocation(line: 3342, column: 24, scope: !3062)
!3125 = !DILocation(line: 3342, column: 33, scope: !3062)
!3126 = !DILocation(line: 0, scope: !3062)
!3127 = !DILocation(line: 3343, column: 9, scope: !3069)
!3128 = !DILocation(line: 3343, column: 8, scope: !3062)
!3129 = !DILocation(line: 3346, column: 8, scope: !3068)
!3130 = !DILocation(line: 3348, column: 19, scope: !3068)
!3131 = !DILocation(line: 3349, column: 13, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 3349, column: 8)
!3133 = !DILocation(line: 0, scope: !3132)
!3134 = !DILocation(line: 3349, column: 20, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 3349, column: 8)
!3136 = !DILocation(line: 3349, column: 8, scope: !3132)
!3137 = !DILocation(line: 3350, column: 30, scope: !3135)
!3138 = !DILocation(line: 3350, column: 37, scope: !3135)
!3139 = !DILocation(line: 3350, column: 3, scope: !3135)
!3140 = !DILocation(line: 3349, column: 74, scope: !3135)
!3141 = !DILocation(line: 3349, column: 8, scope: !3135)
!3142 = distinct !{!3142, !3136, !3143}
!3143 = !DILocation(line: 3350, column: 47, scope: !3132)
!3144 = !DILocation(line: 3351, column: 6, scope: !3069)
!3145 = !DILocation(line: 3351, column: 6, scope: !3068)
!3146 = !DILocation(line: 3352, column: 18, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 3352, column: 8)
!3148 = !DILocation(line: 3352, column: 9, scope: !3147)
!3149 = !DILocation(line: 3352, column: 8, scope: !3062)
!3150 = !DILocation(line: 3354, column: 23, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 3353, column: 6)
!3152 = !DILocation(line: 3354, column: 21, scope: !3151)
!3153 = !DILocation(line: 3355, column: 8, scope: !3151)
!3154 = !DILocation(line: 3356, column: 6, scope: !3151)
!3155 = distinct !{!3155, !3116, !3156}
!3156 = !DILocation(line: 3358, column: 5, scope: !3066)
!3157 = !DILocation(line: 3360, column: 7, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 3360, column: 7)
!3159 = !DILocation(line: 3360, column: 7, scope: !3027)
!3160 = !DILocation(line: 3361, column: 5, scope: !3158)
!3161 = !DILocation(line: 3362, column: 3, scope: !3027)
!3162 = !DILocation(line: 3363, column: 1, scope: !3027)
!3163 = distinct !DISubprogram(name: "dse_step4", scope: !3, file: !3, line: 3477, type: !2621, scopeLine: 3478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3164)
!3164 = !{!3165, !3168}
!3165 = !DILocalVariable(name: "bb", scope: !3166, file: !3, line: 3485, type: !1154)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 3484, column: 5)
!3167 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 3483, column: 7)
!3168 = !DILocalVariable(name: "bb_info", scope: !3169, file: !3, line: 3490, type: !745)
!3169 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 3489, column: 2)
!3170 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 3488, column: 7)
!3171 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 3488, column: 7)
!3172 = !DILocation(line: 3481, column: 12, scope: !3163)
!3173 = !DILocation(line: 3481, column: 24, scope: !3163)
!3174 = !DILocation(line: 3482, column: 9, scope: !3163)
!3175 = !DILocation(line: 3479, column: 3, scope: !3163)
!3176 = !DILocation(line: 3483, column: 7, scope: !3167)
!3177 = !DILocation(line: 3483, column: 7, scope: !3163)
!3178 = !DILocation(line: 3487, column: 7, scope: !3166)
!3179 = !DILocation(line: 3488, column: 7, scope: !3171)
!3180 = !DILocation(line: 0, scope: !3171)
!3181 = !DILocation(line: 0, scope: !3166)
!3182 = !DILocation(line: 3490, column: 24, scope: !3169)
!3183 = !DILocation(line: 3490, column: 37, scope: !3169)
!3184 = !DILocation(line: 0, scope: !3169)
!3185 = !DILocation(line: 3492, column: 27, scope: !3169)
!3186 = !DILocation(line: 3492, column: 4, scope: !3169)
!3187 = !DILocation(line: 3493, column: 17, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 3493, column: 8)
!3189 = !DILocation(line: 3493, column: 8, scope: !3188)
!3190 = !DILocation(line: 0, scope: !3188)
!3191 = !DILocation(line: 3493, column: 8, scope: !3169)
!3192 = !DILocation(line: 3494, column: 6, scope: !3188)
!3193 = !DILocation(line: 3496, column: 6, scope: !3188)
!3194 = !DILocation(line: 3497, column: 17, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 3497, column: 8)
!3196 = !DILocation(line: 3497, column: 8, scope: !3195)
!3197 = !DILocation(line: 0, scope: !3195)
!3198 = !DILocation(line: 3497, column: 8, scope: !3169)
!3199 = !DILocation(line: 3498, column: 6, scope: !3195)
!3200 = !DILocation(line: 3500, column: 6, scope: !3195)
!3201 = !DILocation(line: 3501, column: 17, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 3501, column: 8)
!3203 = !DILocation(line: 3501, column: 8, scope: !3202)
!3204 = !DILocation(line: 0, scope: !3202)
!3205 = !DILocation(line: 3501, column: 8, scope: !3169)
!3206 = !DILocation(line: 3502, column: 6, scope: !3202)
!3207 = !DILocation(line: 3504, column: 6, scope: !3202)
!3208 = !DILocation(line: 3505, column: 17, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 3505, column: 8)
!3210 = !DILocation(line: 3505, column: 8, scope: !3209)
!3211 = !DILocation(line: 0, scope: !3209)
!3212 = !DILocation(line: 3505, column: 8, scope: !3169)
!3213 = !DILocation(line: 3506, column: 6, scope: !3209)
!3214 = !DILocation(line: 3508, column: 6, scope: !3209)
!3215 = !DILocation(line: 3488, column: 7, scope: !3170)
!3216 = distinct !{!3216, !3179, !3217}
!3217 = !DILocation(line: 3509, column: 2, scope: !3171)
!3218 = !DILocation(line: 3511, column: 1, scope: !3163)
!3219 = distinct !DISubprogram(name: "dse_step5_nospill", scope: !3, file: !3, line: 3523, type: !2621, scopeLine: 3524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3220)
!3220 = !{!3221, !3222, !3226, !3227, !3228, !3230, !3233, !3236, !3237}
!3221 = !DILocalVariable(name: "bb", scope: !3219, file: !3, line: 3525, type: !1154)
!3222 = !DILocalVariable(name: "bb_info", scope: !3223, file: !3, line: 3528, type: !745)
!3223 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 3527, column: 5)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 3526, column: 3)
!3225 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 3526, column: 3)
!3226 = !DILocalVariable(name: "insn_info", scope: !3223, file: !3, line: 3529, type: !750)
!3227 = !DILocalVariable(name: "v", scope: !3223, file: !3, line: 3530, type: !1839)
!3228 = !DILocalVariable(name: "deleted", scope: !3229, file: !3, line: 3534, type: !727)
!3229 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 3533, column: 2)
!3230 = !DILocalVariable(name: "store_info", scope: !3231, file: !3, line: 3549, type: !1818)
!3231 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 3548, column: 6)
!3232 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 3544, column: 8)
!3233 = !DILocalVariable(name: "i", scope: !3234, file: !3, line: 3562, type: !868)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 3561, column: 3)
!3235 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 3558, column: 12)
!3236 = !DILocalVariable(name: "group_info", scope: !3234, file: !3, line: 3563, type: !1885)
!3237 = !DILocalVariable(name: "index", scope: !3238, file: !3, line: 3568, type: !728)
!3238 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 3567, column: 7)
!3239 = distinct !DILexicalBlock(scope: !3240, file: !3, line: 3566, column: 5)
!3240 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 3566, column: 5)
!3241 = !DILocation(line: 3526, column: 3, scope: !3225)
!3242 = !DILocation(line: 3526, column: 3, scope: !3224)
!3243 = !DILocation(line: 0, scope: !3225)
!3244 = !DILocation(line: 0, scope: !3219)
!3245 = !DILocation(line: 3528, column: 27, scope: !3223)
!3246 = !DILocation(line: 3528, column: 40, scope: !3223)
!3247 = !DILocation(line: 0, scope: !3223)
!3248 = !DILocation(line: 3529, column: 40, scope: !3223)
!3249 = !DILocation(line: 3530, column: 27, scope: !3223)
!3250 = !DILocation(line: 0, scope: !3232)
!3251 = !DILocation(line: 3532, column: 7, scope: !3223)
!3252 = !DILocation(line: 0, scope: !3229)
!3253 = !DILocation(line: 3535, column: 8, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 3535, column: 8)
!3255 = !DILocation(line: 3535, column: 18, scope: !3254)
!3256 = !DILocation(line: 3535, column: 32, scope: !3254)
!3257 = !DILocation(line: 3535, column: 21, scope: !3254)
!3258 = !DILocation(line: 3535, column: 8, scope: !3229)
!3259 = !DILocation(line: 3538, column: 10, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 3536, column: 6)
!3261 = !DILocation(line: 3537, column: 8, scope: !3260)
!3262 = !DILocation(line: 3539, column: 22, scope: !3260)
!3263 = !DILocation(line: 3539, column: 8, scope: !3260)
!3264 = !DILocation(line: 3540, column: 6, scope: !3260)
!3265 = !DILocation(line: 3544, column: 19, scope: !3232)
!3266 = !DILocation(line: 3544, column: 8, scope: !3232)
!3267 = !DILocation(line: 3545, column: 8, scope: !3232)
!3268 = !DILocation(line: 3545, column: 11, scope: !3232)
!3269 = !DILocation(line: 3546, column: 8, scope: !3232)
!3270 = !DILocation(line: 3546, column: 24, scope: !3232)
!3271 = !DILocation(line: 3546, column: 13, scope: !3232)
!3272 = !DILocation(line: 3547, column: 8, scope: !3232)
!3273 = !DILocation(line: 3547, column: 13, scope: !3232)
!3274 = !DILocation(line: 3544, column: 8, scope: !3229)
!3275 = !DILocation(line: 3549, column: 45, scope: !3231)
!3276 = !DILocation(line: 3555, column: 8, scope: !3231)
!3277 = !DILocation(line: 0, scope: !3231)
!3278 = !DILocation(line: 3555, column: 28, scope: !3231)
!3279 = !DILocation(line: 3555, column: 15, scope: !3231)
!3280 = !DILocation(line: 3556, column: 28, scope: !3231)
!3281 = distinct !{!3281, !3276, !3280}
!3282 = !DILocation(line: 3558, column: 24, scope: !3235)
!3283 = !DILocation(line: 3558, column: 12, scope: !3235)
!3284 = !DILocation(line: 3558, column: 12, scope: !3231)
!3285 = !DILocation(line: 3564, column: 9, scope: !3234)
!3286 = !DILocation(line: 0, scope: !3234)
!3287 = !DILocation(line: 3566, column: 26, scope: !3240)
!3288 = !DILocation(line: 0, scope: !3239)
!3289 = !DILocation(line: 3566, column: 10, scope: !3240)
!3290 = !DILocation(line: 0, scope: !3240)
!3291 = !DILocation(line: 3566, column: 49, scope: !3239)
!3292 = !DILocation(line: 3566, column: 35, scope: !3239)
!3293 = !DILocation(line: 3566, column: 5, scope: !3240)
!3294 = !DILocation(line: 3568, column: 21, scope: !3238)
!3295 = !DILocation(line: 0, scope: !3238)
!3296 = !DILocation(line: 3570, column: 13, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 3570, column: 13)
!3298 = !DILocation(line: 3570, column: 13, scope: !3238)
!3299 = !DILocation(line: 3571, column: 48, scope: !3297)
!3300 = !DILocation(line: 3571, column: 4, scope: !3297)
!3301 = !DILocation(line: 3572, column: 19, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 3572, column: 13)
!3303 = !DILocation(line: 3572, column: 24, scope: !3302)
!3304 = !DILocation(line: 3572, column: 28, scope: !3302)
!3305 = !DILocation(line: 3572, column: 13, scope: !3238)
!3306 = !DILocation(line: 3574, column: 10, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 3574, column: 10)
!3308 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 3573, column: 4)
!3309 = !DILocation(line: 3574, column: 10, scope: !3308)
!3310 = !DILocation(line: 3575, column: 51, scope: !3307)
!3311 = !DILocation(line: 3575, column: 8, scope: !3307)
!3312 = !DILocation(line: 3566, column: 55, scope: !3239)
!3313 = !DILocation(line: 3566, column: 5, scope: !3239)
!3314 = distinct !{!3314, !3293, !3315}
!3315 = !DILocation(line: 3579, column: 7, scope: !3240)
!3316 = !DILocation(line: 3581, column: 12, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 3581, column: 12)
!3318 = !DILocation(line: 0, scope: !3235)
!3319 = !DILocation(line: 3581, column: 12, scope: !3231)
!3320 = !DILocation(line: 3583, column: 9, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 3583, column: 9)
!3322 = distinct !DILexicalBlock(scope: !3317, file: !3, line: 3582, column: 3)
!3323 = !DILocation(line: 3583, column: 9, scope: !3322)
!3324 = !DILocation(line: 3585, column: 39, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 3584, column: 7)
!3326 = !DILocation(line: 3585, column: 9, scope: !3325)
!3327 = !DILocation(line: 3586, column: 33, scope: !3325)
!3328 = !DILocation(line: 3586, column: 9, scope: !3325)
!3329 = !DILocation(line: 3587, column: 25, scope: !3325)
!3330 = !DILocation(line: 3588, column: 25, scope: !3325)
!3331 = !DILocation(line: 3589, column: 7, scope: !3325)
!3332 = !DILocation(line: 3595, column: 19, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 3595, column: 8)
!3334 = !DILocation(line: 3595, column: 8, scope: !3333)
!3335 = !DILocation(line: 3596, column: 8, scope: !3333)
!3336 = !DILocation(line: 3596, column: 11, scope: !3333)
!3337 = !DILocation(line: 3597, column: 13, scope: !3333)
!3338 = !DILocation(line: 3597, column: 8, scope: !3333)
!3339 = !DILocation(line: 3595, column: 8, scope: !3229)
!3340 = !DILocation(line: 3599, column: 40, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3333, file: !3, line: 3598, column: 6)
!3342 = !DILocation(line: 3599, column: 8, scope: !3341)
!3343 = !DILocation(line: 3600, column: 23, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 3600, column: 12)
!3345 = !DILocation(line: 3600, column: 12, scope: !3344)
!3346 = !DILocation(line: 3600, column: 12, scope: !3341)
!3347 = !DILocation(line: 3602, column: 9, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !3, line: 3602, column: 9)
!3349 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 3601, column: 3)
!3350 = !DILocation(line: 3602, column: 9, scope: !3349)
!3351 = !DILocation(line: 3603, column: 7, scope: !3348)
!3352 = !DILocation(line: 3604, column: 5, scope: !3349)
!3353 = !DILocation(line: 3605, column: 3, scope: !3349)
!3354 = !DILocation(line: 3606, column: 28, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 3606, column: 17)
!3356 = !DILocation(line: 3606, column: 17, scope: !3355)
!3357 = !DILocation(line: 3606, column: 17, scope: !3344)
!3358 = !DILocation(line: 3608, column: 9, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 3608, column: 9)
!3360 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 3607, column: 3)
!3361 = !DILocation(line: 3608, column: 9, scope: !3360)
!3362 = !DILocation(line: 3609, column: 7, scope: !3359)
!3363 = !DILocation(line: 3610, column: 5, scope: !3360)
!3364 = !DILocation(line: 3611, column: 3, scope: !3360)
!3365 = !DILocation(line: 3614, column: 27, scope: !3229)
!3366 = distinct !{!3366, !3251, !3367}
!3367 = !DILocation(line: 3615, column: 2, scope: !3223)
!3368 = !DILocation(line: 0, scope: !3224)
!3369 = distinct !{!3369, !3241, !3370}
!3370 = !DILocation(line: 3616, column: 5, scope: !3225)
!3371 = !DILocation(line: 3617, column: 1, scope: !3219)
!3372 = distinct !DISubprogram(name: "dse_step2_spill", scope: !3, file: !3, line: 2864, type: !1933, scopeLine: 2865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3373)
!3373 = !{!3374, !3375, !3376}
!3374 = !DILocalVariable(name: "j", scope: !3372, file: !3, line: 2866, type: !7)
!3375 = !DILocalVariable(name: "group", scope: !3372, file: !3, line: 2867, type: !1885)
!3376 = !DILocalVariable(name: "bi", scope: !3372, file: !3, line: 2868, type: !2944)
!3377 = !DILocation(line: 2866, column: 3, scope: !3372)
!3378 = !DILocation(line: 2867, column: 24, scope: !3372)
!3379 = !DILocation(line: 0, scope: !3372)
!3380 = !DILocation(line: 2868, column: 3, scope: !3372)
!3381 = !DILocation(line: 2872, column: 20, scope: !3372)
!3382 = !DILocation(line: 2874, column: 7, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 2874, column: 7)
!3384 = !DILocation(line: 2874, column: 7, scope: !3372)
!3385 = !DILocation(line: 2876, column: 32, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 2875, column: 5)
!3387 = !DILocation(line: 2876, column: 7, scope: !3386)
!3388 = !DILocation(line: 2878, column: 21, scope: !3386)
!3389 = !DILocation(line: 2878, column: 32, scope: !3386)
!3390 = !DILocation(line: 2878, column: 7, scope: !3386)
!3391 = !DILocation(line: 2880, column: 5, scope: !3386)
!3392 = !DILocation(line: 2882, column: 18, scope: !3372)
!3393 = !DILocation(line: 2882, column: 56, scope: !3372)
!3394 = !DILocation(line: 2882, column: 49, scope: !3372)
!3395 = !DILocation(line: 2882, column: 47, scope: !3372)
!3396 = !DILocation(line: 2882, column: 3, scope: !3372)
!3397 = !DILocation(line: 2883, column: 18, scope: !3372)
!3398 = !DILocation(line: 2883, column: 56, scope: !3372)
!3399 = !DILocation(line: 2883, column: 49, scope: !3372)
!3400 = !DILocation(line: 2883, column: 47, scope: !3372)
!3401 = !DILocation(line: 2883, column: 3, scope: !3372)
!3402 = !DILocation(line: 2884, column: 24, scope: !3372)
!3403 = !DILocation(line: 2884, column: 3, scope: !3372)
!3404 = !DILocation(line: 2887, column: 33, scope: !3372)
!3405 = !DILocation(line: 2887, column: 43, scope: !3372)
!3406 = !DILocation(line: 2887, column: 3, scope: !3372)
!3407 = !DILocation(line: 2891, column: 3, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 2891, column: 3)
!3409 = !DILocation(line: 0, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 2892, column: 5)
!3411 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 2891, column: 3)
!3412 = !DILocation(line: 2891, column: 3, scope: !3411)
!3413 = !DILocation(line: 2893, column: 30, scope: !3410)
!3414 = !DILocation(line: 2893, column: 42, scope: !3410)
!3415 = !DILocation(line: 2893, column: 7, scope: !3410)
!3416 = !DILocation(line: 2894, column: 48, scope: !3410)
!3417 = !DILocation(line: 2894, column: 14, scope: !3410)
!3418 = !DILocation(line: 2894, column: 27, scope: !3410)
!3419 = !DILocation(line: 2894, column: 7, scope: !3410)
!3420 = !DILocation(line: 2894, column: 30, scope: !3410)
!3421 = !DILocation(line: 2895, column: 31, scope: !3410)
!3422 = distinct !{!3422, !3407, !3423}
!3423 = !DILocation(line: 2896, column: 5, scope: !3408)
!3424 = !DILocation(line: 2898, column: 10, scope: !3372)
!3425 = !DILocation(line: 2898, column: 27, scope: !3372)
!3426 = !DILocation(line: 2899, column: 1, scope: !3372)
!3427 = !DILocation(line: 2898, column: 3, scope: !3372)
!3428 = distinct !DISubprogram(name: "dse_step5_spill", scope: !3, file: !3, line: 3621, type: !2621, scopeLine: 3622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3429)
!3429 = !{!3430, !3431, !3435, !3436, !3437, !3439, !3442}
!3430 = !DILocalVariable(name: "bb", scope: !3428, file: !3, line: 3623, type: !1154)
!3431 = !DILocalVariable(name: "bb_info", scope: !3432, file: !3, line: 3626, type: !745)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 3625, column: 5)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !3, line: 3624, column: 3)
!3434 = distinct !DILexicalBlock(scope: !3428, file: !3, line: 3624, column: 3)
!3435 = !DILocalVariable(name: "insn_info", scope: !3432, file: !3, line: 3627, type: !750)
!3436 = !DILocalVariable(name: "v", scope: !3432, file: !3, line: 3628, type: !1839)
!3437 = !DILocalVariable(name: "deleted", scope: !3438, file: !3, line: 3632, type: !727)
!3438 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 3631, column: 2)
!3439 = !DILocalVariable(name: "store_info", scope: !3440, file: !3, line: 3641, type: !1818)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 3639, column: 6)
!3441 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 3635, column: 8)
!3442 = !DILocalVariable(name: "index", scope: !3443, file: !3, line: 3648, type: !728)
!3443 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 3647, column: 7)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 3646, column: 9)
!3445 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 3645, column: 3)
!3446 = !DILocation(line: 3624, column: 3, scope: !3434)
!3447 = !DILocation(line: 3624, column: 3, scope: !3433)
!3448 = !DILocation(line: 0, scope: !3434)
!3449 = !DILocation(line: 0, scope: !3428)
!3450 = !DILocation(line: 3626, column: 27, scope: !3432)
!3451 = !DILocation(line: 3626, column: 40, scope: !3432)
!3452 = !DILocation(line: 0, scope: !3432)
!3453 = !DILocation(line: 3627, column: 40, scope: !3432)
!3454 = !DILocation(line: 3628, column: 27, scope: !3432)
!3455 = !DILocation(line: 0, scope: !3441)
!3456 = !DILocation(line: 3630, column: 7, scope: !3432)
!3457 = !DILocation(line: 0, scope: !3438)
!3458 = !DILocation(line: 3635, column: 19, scope: !3441)
!3459 = !DILocation(line: 3635, column: 8, scope: !3441)
!3460 = !DILocation(line: 3636, column: 8, scope: !3441)
!3461 = !DILocation(line: 3636, column: 11, scope: !3441)
!3462 = !DILocation(line: 3637, column: 8, scope: !3441)
!3463 = !DILocation(line: 3637, column: 24, scope: !3441)
!3464 = !DILocation(line: 3637, column: 13, scope: !3441)
!3465 = !DILocation(line: 3638, column: 8, scope: !3441)
!3466 = !DILocation(line: 3638, column: 13, scope: !3441)
!3467 = !DILocation(line: 3635, column: 8, scope: !3438)
!3468 = !DILocation(line: 3641, column: 45, scope: !3440)
!3469 = !DILocation(line: 3644, column: 8, scope: !3440)
!3470 = !DILocation(line: 0, scope: !3440)
!3471 = !DILocation(line: 3646, column: 21, scope: !3444)
!3472 = !DILocation(line: 3646, column: 9, scope: !3444)
!3473 = !DILocation(line: 3646, column: 9, scope: !3445)
!3474 = !DILocation(line: 3648, column: 39, scope: !3443)
!3475 = !DILocation(line: 3649, column: 11, scope: !3443)
!3476 = !DILocation(line: 3648, column: 21, scope: !3443)
!3477 = !DILocation(line: 0, scope: !3443)
!3478 = !DILocation(line: 3650, column: 19, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 3650, column: 13)
!3480 = !DILocation(line: 3650, column: 24, scope: !3479)
!3481 = !DILocation(line: 3650, column: 28, scope: !3479)
!3482 = !DILocation(line: 3650, column: 13, scope: !3443)
!3483 = !DILocation(line: 0, scope: !3444)
!3484 = !DILocation(line: 3658, column: 30, scope: !3445)
!3485 = distinct !{!3485, !3469, !3486}
!3486 = !DILocation(line: 3659, column: 3, scope: !3440)
!3487 = !DILocation(line: 3660, column: 12, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 3660, column: 12)
!3489 = !DILocation(line: 3660, column: 20, scope: !3488)
!3490 = !DILocation(line: 3660, column: 23, scope: !3488)
!3491 = !DILocation(line: 3660, column: 12, scope: !3440)
!3492 = !DILocation(line: 3662, column: 9, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 3662, column: 9)
!3494 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 3661, column: 3)
!3495 = !DILocation(line: 3662, column: 9, scope: !3494)
!3496 = !DILocation(line: 3664, column: 9, scope: !3493)
!3497 = !DILocation(line: 3663, column: 7, scope: !3493)
!3498 = !DILocation(line: 3665, column: 35, scope: !3494)
!3499 = !DILocation(line: 3665, column: 5, scope: !3494)
!3500 = !DILocation(line: 3666, column: 29, scope: !3494)
!3501 = !DILocation(line: 3666, column: 5, scope: !3494)
!3502 = !DILocation(line: 3667, column: 18, scope: !3494)
!3503 = !DILocation(line: 3668, column: 21, scope: !3494)
!3504 = !DILocation(line: 3669, column: 3, scope: !3494)
!3505 = !DILocation(line: 3672, column: 19, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 3672, column: 8)
!3507 = !DILocation(line: 3672, column: 8, scope: !3506)
!3508 = !DILocation(line: 3673, column: 8, scope: !3506)
!3509 = !DILocation(line: 3673, column: 11, scope: !3506)
!3510 = !DILocation(line: 3674, column: 13, scope: !3506)
!3511 = !DILocation(line: 3674, column: 8, scope: !3506)
!3512 = !DILocation(line: 3672, column: 8, scope: !3438)
!3513 = !DILocation(line: 3676, column: 38, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 3675, column: 6)
!3515 = !DILocation(line: 3676, column: 8, scope: !3514)
!3516 = !DILocation(line: 3677, column: 37, scope: !3514)
!3517 = !DILocation(line: 3677, column: 8, scope: !3514)
!3518 = !DILocation(line: 3678, column: 6, scope: !3514)
!3519 = !DILocation(line: 3680, column: 27, scope: !3438)
!3520 = distinct !{!3520, !3456, !3521}
!3521 = !DILocation(line: 3681, column: 2, scope: !3432)
!3522 = !DILocation(line: 0, scope: !3433)
!3523 = distinct !{!3523, !3446, !3524}
!3524 = !DILocation(line: 3682, column: 5, scope: !3434)
!3525 = !DILocation(line: 3683, column: 1, scope: !3428)
!3526 = distinct !DISubprogram(name: "dse_step6", scope: !3, file: !3, line: 3695, type: !2621, scopeLine: 3696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3527)
!3527 = !{!3528, !3529, !3533, !3534, !3538}
!3528 = !DILocalVariable(name: "bb", scope: !3526, file: !3, line: 3697, type: !1154)
!3529 = !DILocalVariable(name: "bb_info", scope: !3530, file: !3, line: 3701, type: !745)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 3700, column: 5)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 3699, column: 3)
!3532 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 3699, column: 3)
!3533 = !DILocalVariable(name: "insn_info", scope: !3530, file: !3, line: 3702, type: !750)
!3534 = !DILocalVariable(name: "s_info", scope: !3535, file: !3, line: 3712, type: !1818)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 3711, column: 6)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 3708, column: 8)
!3537 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 3705, column: 2)
!3538 = !DILocalVariable(name: "rinsn", scope: !3539, file: !3, line: 3721, type: !760)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !3, line: 3720, column: 3)
!3540 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 3716, column: 12)
!3541 = !DILocation(line: 3699, column: 3, scope: !3532)
!3542 = !DILocation(line: 0, scope: !3532)
!3543 = !DILocation(line: 0, scope: !3526)
!3544 = !DILocation(line: 3701, column: 27, scope: !3530)
!3545 = !DILocation(line: 3701, column: 40, scope: !3530)
!3546 = !DILocation(line: 0, scope: !3530)
!3547 = !DILocation(line: 3702, column: 40, scope: !3530)
!3548 = !DILocation(line: 3704, column: 7, scope: !3530)
!3549 = !DILocation(line: 3708, column: 19, scope: !3536)
!3550 = !DILocation(line: 3708, column: 8, scope: !3536)
!3551 = !DILocation(line: 3709, column: 8, scope: !3536)
!3552 = !DILocation(line: 3709, column: 11, scope: !3536)
!3553 = !DILocation(line: 3710, column: 8, scope: !3536)
!3554 = !DILocation(line: 3710, column: 23, scope: !3536)
!3555 = !DILocation(line: 3710, column: 12, scope: !3536)
!3556 = !DILocation(line: 3708, column: 8, scope: !3537)
!3557 = !DILocation(line: 3712, column: 41, scope: !3535)
!3558 = !DILocation(line: 3714, column: 8, scope: !3535)
!3559 = !DILocation(line: 0, scope: !3535)
!3560 = !DILocation(line: 3714, column: 22, scope: !3535)
!3561 = !DILocation(line: 3714, column: 34, scope: !3535)
!3562 = !DILocation(line: 3714, column: 25, scope: !3535)
!3563 = !DILocation(line: 3715, column: 20, scope: !3535)
!3564 = distinct !{!3564, !3558, !3563}
!3565 = !DILocation(line: 3717, column: 16, scope: !3540)
!3566 = !DILocation(line: 3717, column: 8, scope: !3540)
!3567 = !DILocation(line: 3718, column: 5, scope: !3540)
!3568 = !DILocation(line: 3718, column: 34, scope: !3540)
!3569 = !DILocation(line: 3718, column: 8, scope: !3540)
!3570 = !DILocation(line: 3719, column: 5, scope: !3540)
!3571 = !DILocation(line: 3719, column: 8, scope: !3540)
!3572 = !DILocation(line: 3716, column: 12, scope: !3535)
!3573 = !DILocation(line: 0, scope: !3539)
!3574 = !DILocation(line: 3722, column: 9, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 3722, column: 9)
!3576 = !DILocation(line: 3722, column: 9, scope: !3539)
!3577 = !DILocation(line: 3727, column: 6, scope: !3575)
!3578 = !DILocation(line: 3728, column: 6, scope: !3575)
!3579 = !DILocation(line: 3723, column: 7, scope: !3575)
!3580 = !DILocation(line: 3729, column: 5, scope: !3539)
!3581 = !DILocation(line: 3730, column: 3, scope: !3539)
!3582 = !DILocation(line: 3732, column: 27, scope: !3537)
!3583 = distinct !{!3583, !3548, !3584}
!3584 = !DILocation(line: 3733, column: 2, scope: !3530)
!3585 = !DILocation(line: 3699, column: 3, scope: !3531)
!3586 = distinct !{!3586, !3541, !3587}
!3587 = !DILocation(line: 3734, column: 5, scope: !3532)
!3588 = !DILocation(line: 3735, column: 1, scope: !3526)
!3589 = distinct !DISubprogram(name: "dse_step7", scope: !3, file: !3, line: 3744, type: !3028, scopeLine: 3745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3590)
!3590 = !{!3591, !3592, !3593, !3594, !3595}
!3591 = !DILocalVariable(name: "global_done", arg: 1, scope: !3589, file: !3, line: 3744, type: !727)
!3592 = !DILocalVariable(name: "i", scope: !3589, file: !3, line: 3746, type: !7)
!3593 = !DILocalVariable(name: "group", scope: !3589, file: !3, line: 3747, type: !1885)
!3594 = !DILocalVariable(name: "bb", scope: !3589, file: !3, line: 3748, type: !1154)
!3595 = !DILocalVariable(name: "bb_info", scope: !3596, file: !3, line: 3764, type: !745)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !3, line: 3763, column: 7)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 3762, column: 5)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 3762, column: 5)
!3599 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 3761, column: 7)
!3600 = !DILocation(line: 0, scope: !3589)
!3601 = !DILocation(line: 3747, column: 3, scope: !3589)
!3602 = !DILocation(line: 3750, column: 8, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 3750, column: 3)
!3604 = !DILocation(line: 0, scope: !3603)
!3605 = !DILocation(line: 3750, column: 15, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 3750, column: 3)
!3607 = !DILocation(line: 3750, column: 3, scope: !3603)
!3608 = !DILocation(line: 3752, column: 13, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 3751, column: 5)
!3610 = !DILocation(line: 3752, column: 20, scope: !3609)
!3611 = !DILocation(line: 3752, column: 7, scope: !3609)
!3612 = !DILocation(line: 3753, column: 13, scope: !3609)
!3613 = !DILocation(line: 3753, column: 20, scope: !3609)
!3614 = !DILocation(line: 3753, column: 7, scope: !3609)
!3615 = !DILocation(line: 3754, column: 7, scope: !3609)
!3616 = !DILocation(line: 3755, column: 7, scope: !3609)
!3617 = !DILocation(line: 3756, column: 7, scope: !3609)
!3618 = !DILocation(line: 3757, column: 7, scope: !3609)
!3619 = !DILocation(line: 3758, column: 7, scope: !3609)
!3620 = !DILocation(line: 3750, column: 69, scope: !3606)
!3621 = !DILocation(line: 3750, column: 3, scope: !3606)
!3622 = distinct !{!3622, !3607, !3623}
!3623 = !DILocation(line: 3759, column: 5, scope: !3603)
!3624 = !DILocation(line: 3761, column: 7, scope: !3599)
!3625 = !DILocation(line: 3761, column: 7, scope: !3589)
!3626 = !DILocation(line: 3762, column: 5, scope: !3598)
!3627 = !DILocation(line: 0, scope: !3598)
!3628 = !DILocation(line: 3764, column: 22, scope: !3596)
!3629 = !DILocation(line: 3764, column: 35, scope: !3596)
!3630 = !DILocation(line: 0, scope: !3596)
!3631 = !DILocation(line: 3765, column: 2, scope: !3596)
!3632 = !DILocation(line: 3766, column: 15, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 3766, column: 6)
!3634 = !DILocation(line: 3766, column: 6, scope: !3633)
!3635 = !DILocation(line: 3766, column: 6, scope: !3596)
!3636 = !DILocation(line: 3767, column: 4, scope: !3633)
!3637 = !DILocation(line: 3768, column: 15, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 3768, column: 6)
!3639 = !DILocation(line: 3768, column: 6, scope: !3638)
!3640 = !DILocation(line: 3768, column: 6, scope: !3596)
!3641 = !DILocation(line: 3769, column: 4, scope: !3638)
!3642 = !DILocation(line: 3770, column: 15, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 3770, column: 6)
!3644 = !DILocation(line: 3770, column: 6, scope: !3643)
!3645 = !DILocation(line: 3770, column: 6, scope: !3596)
!3646 = !DILocation(line: 3771, column: 4, scope: !3643)
!3647 = !DILocation(line: 3762, column: 5, scope: !3597)
!3648 = distinct !{!3648, !3626, !3649}
!3649 = !DILocation(line: 3772, column: 7, scope: !3598)
!3650 = !DILocation(line: 3774, column: 7, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 3774, column: 7)
!3652 = !DILocation(line: 3774, column: 7, scope: !3589)
!3653 = !DILocation(line: 3776, column: 7, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 3775, column: 5)
!3655 = !DILocation(line: 3777, column: 7, scope: !3654)
!3656 = !DILocation(line: 3778, column: 24, scope: !3654)
!3657 = !DILocation(line: 3778, column: 7, scope: !3654)
!3658 = !DILocation(line: 3779, column: 20, scope: !3654)
!3659 = !DILocation(line: 3779, column: 7, scope: !3654)
!3660 = !DILocation(line: 3780, column: 5, scope: !3654)
!3661 = !DILocation(line: 3782, column: 3, scope: !3589)
!3662 = !DILocation(line: 3783, column: 9, scope: !3589)
!3663 = !DILocation(line: 3783, column: 3, scope: !3589)
!3664 = !DILocation(line: 3784, column: 16, scope: !3589)
!3665 = !DILocation(line: 3784, column: 3, scope: !3589)
!3666 = !DILocation(line: 3785, column: 3, scope: !3589)
!3667 = !DILocation(line: 3786, column: 3, scope: !3589)
!3668 = !DILocation(line: 3787, column: 3, scope: !3589)
!3669 = !DILocation(line: 3789, column: 20, scope: !3589)
!3670 = !DILocation(line: 3789, column: 3, scope: !3589)
!3671 = !DILocation(line: 3790, column: 20, scope: !3589)
!3672 = !DILocation(line: 3790, column: 3, scope: !3589)
!3673 = !DILocation(line: 3791, column: 20, scope: !3589)
!3674 = !DILocation(line: 3791, column: 3, scope: !3589)
!3675 = !DILocation(line: 3792, column: 20, scope: !3589)
!3676 = !DILocation(line: 3792, column: 3, scope: !3589)
!3677 = !DILocation(line: 3793, column: 20, scope: !3589)
!3678 = !DILocation(line: 3793, column: 3, scope: !3589)
!3679 = !DILocation(line: 3794, column: 20, scope: !3589)
!3680 = !DILocation(line: 3794, column: 3, scope: !3589)
!3681 = !DILocation(line: 3795, column: 1, scope: !3589)
!3682 = distinct !DISubprogram(name: "invariant_group_base_hash", scope: !3, file: !3, line: 655, type: !1269, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3683)
!3683 = !{!3684, !3685, !3686}
!3684 = !DILocalVariable(name: "p", arg: 1, scope: !3682, file: !3, line: 655, type: !1272)
!3685 = !DILocalVariable(name: "gi", scope: !3682, file: !3, line: 657, type: !1864)
!3686 = !DILocalVariable(name: "do_not_record", scope: !3682, file: !3, line: 658, type: !728)
!3687 = !DILocation(line: 0, scope: !3682)
!3688 = !DILocation(line: 658, column: 3, scope: !3682)
!3689 = !DILocation(line: 659, column: 24, scope: !3682)
!3690 = !DILocation(line: 659, column: 10, scope: !3682)
!3691 = !DILocation(line: 660, column: 1, scope: !3682)
!3692 = !DILocation(line: 659, column: 3, scope: !3682)
!3693 = distinct !DISubprogram(name: "invariant_group_base_eq", scope: !3, file: !3, line: 646, type: !1277, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3694)
!3694 = !{!3695, !3696, !3697, !3698}
!3695 = !DILocalVariable(name: "p1", arg: 1, scope: !3693, file: !3, line: 646, type: !1272)
!3696 = !DILocalVariable(name: "p2", arg: 2, scope: !3693, file: !3, line: 646, type: !1272)
!3697 = !DILocalVariable(name: "gi1", scope: !3693, file: !3, line: 648, type: !1864)
!3698 = !DILocalVariable(name: "gi2", scope: !3693, file: !3, line: 649, type: !1864)
!3699 = !DILocation(line: 0, scope: !3693)
!3700 = !DILocation(line: 650, column: 28, scope: !3693)
!3701 = !DILocation(line: 650, column: 43, scope: !3693)
!3702 = !DILocation(line: 650, column: 10, scope: !3693)
!3703 = !DILocation(line: 650, column: 3, scope: !3693)
!3704 = distinct !DISubprogram(name: "get_group_info", scope: !3, file: !3, line: 666, type: !3705, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3707)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!1885, !760}
!3707 = !{!3708, !3709, !3710, !3711}
!3708 = !DILocalVariable(name: "base", arg: 1, scope: !3704, file: !3, line: 666, type: !760)
!3709 = !DILocalVariable(name: "tmp_gi", scope: !3704, file: !3, line: 668, type: !1867)
!3710 = !DILocalVariable(name: "gi", scope: !3704, file: !3, line: 669, type: !1885)
!3711 = !DILocalVariable(name: "slot", scope: !3704, file: !3, line: 670, type: !1285)
!3712 = !DILocation(line: 0, scope: !3704)
!3713 = !DILocation(line: 668, column: 3, scope: !3704)
!3714 = !DILocation(line: 672, column: 7, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3704, file: !3, line: 672, column: 7)
!3716 = !DILocation(line: 672, column: 7, scope: !3704)
!3717 = !DILocation(line: 676, column: 14, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 673, column: 5)
!3719 = !DILocation(line: 676, column: 23, scope: !3718)
!3720 = !DILocation(line: 677, column: 30, scope: !3718)
!3721 = !DILocation(line: 677, column: 14, scope: !3718)
!3722 = !DILocation(line: 678, column: 27, scope: !3718)
!3723 = !DILocation(line: 703, column: 10, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3704, file: !3, line: 703, column: 7)
!3725 = !DILocation(line: 703, column: 7, scope: !3704)
!3726 = !DILocation(line: 682, column: 12, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 682, column: 11)
!3728 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 681, column: 5)
!3729 = !DILocation(line: 682, column: 11, scope: !3728)
!3730 = !DILocation(line: 685, column: 33, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 683, column: 2)
!3732 = !DILocation(line: 685, column: 21, scope: !3731)
!3733 = !DILocation(line: 685, column: 6, scope: !3731)
!3734 = !DILocation(line: 684, column: 22, scope: !3731)
!3735 = !DILocation(line: 686, column: 4, scope: !3731)
!3736 = !DILocation(line: 687, column: 30, scope: !3731)
!3737 = !DILocation(line: 687, column: 8, scope: !3731)
!3738 = !DILocation(line: 687, column: 11, scope: !3731)
!3739 = !DILocation(line: 688, column: 19, scope: !3731)
!3740 = !DILocation(line: 688, column: 8, scope: !3731)
!3741 = !DILocation(line: 688, column: 17, scope: !3731)
!3742 = !DILocation(line: 689, column: 19, scope: !3731)
!3743 = !DILocation(line: 689, column: 8, scope: !3731)
!3744 = !DILocation(line: 689, column: 17, scope: !3731)
!3745 = !DILocation(line: 690, column: 19, scope: !3731)
!3746 = !DILocation(line: 690, column: 8, scope: !3731)
!3747 = !DILocation(line: 690, column: 17, scope: !3731)
!3748 = !DILocation(line: 691, column: 19, scope: !3731)
!3749 = !DILocation(line: 691, column: 8, scope: !3731)
!3750 = !DILocation(line: 691, column: 17, scope: !3731)
!3751 = !DILocation(line: 692, column: 21, scope: !3731)
!3752 = !DILocation(line: 692, column: 8, scope: !3731)
!3753 = !DILocation(line: 692, column: 19, scope: !3731)
!3754 = !DILocation(line: 693, column: 8, scope: !3731)
!3755 = !DILocation(line: 693, column: 25, scope: !3731)
!3756 = !DILocation(line: 694, column: 8, scope: !3731)
!3757 = !DILocation(line: 694, column: 26, scope: !3731)
!3758 = !DILocation(line: 695, column: 8, scope: !3731)
!3759 = !DILocation(line: 695, column: 26, scope: !3731)
!3760 = !DILocation(line: 696, column: 8, scope: !3731)
!3761 = !DILocation(line: 696, column: 21, scope: !3731)
!3762 = !DILocation(line: 697, column: 8, scope: !3731)
!3763 = !DILocation(line: 697, column: 21, scope: !3731)
!3764 = !DILocation(line: 698, column: 4, scope: !3731)
!3765 = !DILocation(line: 700, column: 14, scope: !3728)
!3766 = !DILocation(line: 699, column: 2, scope: !3731)
!3767 = !DILocation(line: 700, column: 7, scope: !3728)
!3768 = !DILocation(line: 705, column: 47, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3724, file: !3, line: 704, column: 5)
!3770 = !DILocation(line: 705, column: 35, scope: !3769)
!3771 = !DILocation(line: 705, column: 20, scope: !3769)
!3772 = !DILocation(line: 705, column: 13, scope: !3769)
!3773 = !DILocation(line: 706, column: 11, scope: !3769)
!3774 = !DILocation(line: 706, column: 20, scope: !3769)
!3775 = !DILocation(line: 707, column: 33, scope: !3769)
!3776 = !DILocation(line: 707, column: 11, scope: !3769)
!3777 = !DILocation(line: 707, column: 14, scope: !3769)
!3778 = !DILocation(line: 708, column: 22, scope: !3769)
!3779 = !DILocation(line: 708, column: 11, scope: !3769)
!3780 = !DILocation(line: 708, column: 20, scope: !3769)
!3781 = !DILocation(line: 709, column: 29, scope: !3769)
!3782 = !DILocation(line: 709, column: 11, scope: !3769)
!3783 = !DILocation(line: 709, column: 27, scope: !3769)
!3784 = !DILocation(line: 710, column: 22, scope: !3769)
!3785 = !DILocation(line: 710, column: 11, scope: !3769)
!3786 = !DILocation(line: 710, column: 20, scope: !3769)
!3787 = !DILocation(line: 711, column: 22, scope: !3769)
!3788 = !DILocation(line: 711, column: 11, scope: !3769)
!3789 = !DILocation(line: 711, column: 20, scope: !3769)
!3790 = !DILocation(line: 712, column: 22, scope: !3769)
!3791 = !DILocation(line: 712, column: 11, scope: !3769)
!3792 = !DILocation(line: 712, column: 20, scope: !3769)
!3793 = !DILocation(line: 713, column: 22, scope: !3769)
!3794 = !DILocation(line: 713, column: 11, scope: !3769)
!3795 = !DILocation(line: 713, column: 20, scope: !3769)
!3796 = !DILocation(line: 714, column: 24, scope: !3769)
!3797 = !DILocation(line: 714, column: 11, scope: !3769)
!3798 = !DILocation(line: 714, column: 22, scope: !3769)
!3799 = !DILocation(line: 715, column: 11, scope: !3769)
!3800 = !DILocation(line: 715, column: 28, scope: !3769)
!3801 = !DILocation(line: 717, column: 11, scope: !3769)
!3802 = !DILocation(line: 717, column: 8, scope: !3769)
!3803 = !DILocation(line: 717, column: 30, scope: !3769)
!3804 = !DILocation(line: 717, column: 2, scope: !3769)
!3805 = !DILocation(line: 716, column: 11, scope: !3769)
!3806 = !DILocation(line: 716, column: 25, scope: !3769)
!3807 = !DILocation(line: 718, column: 11, scope: !3769)
!3808 = !DILocation(line: 718, column: 29, scope: !3769)
!3809 = !DILocation(line: 719, column: 11, scope: !3769)
!3810 = !DILocation(line: 719, column: 29, scope: !3769)
!3811 = !DILocation(line: 720, column: 11, scope: !3769)
!3812 = !DILocation(line: 720, column: 24, scope: !3769)
!3813 = !DILocation(line: 721, column: 11, scope: !3769)
!3814 = !DILocation(line: 721, column: 24, scope: !3769)
!3815 = !DILocation(line: 722, column: 7, scope: !3769)
!3816 = !DILocation(line: 723, column: 5, scope: !3769)
!3817 = !DILocation(line: 726, column: 1, scope: !3704)
!3818 = distinct !DISubprogram(name: "VEC_group_info_t_heap_safe_push", scope: !3, file: !3, line: 524, type: !3819, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3823)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!3821, !3822, !1885}
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!3823 = !{!3824, !3825}
!3824 = !DILocalVariable(name: "vec_", arg: 1, scope: !3818, file: !3, line: 524, type: !3822)
!3825 = !DILocalVariable(name: "obj_", arg: 2, scope: !3818, file: !3, line: 524, type: !1885)
!3826 = !DILocation(line: 0, scope: !3818)
!3827 = !DILocation(line: 524, column: 1, scope: !3818)
!3828 = distinct !DISubprogram(name: "VEC_group_info_t_heap_reserve", scope: !3, file: !3, line: 524, type: !3829, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3831)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!728, !3822, !728}
!3831 = !{!3832, !3833, !3834}
!3832 = !DILocalVariable(name: "vec_", arg: 1, scope: !3828, file: !3, line: 524, type: !3822)
!3833 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3828, file: !3, line: 524, type: !728)
!3834 = !DILocalVariable(name: "extend", scope: !3828, file: !3, line: 524, type: !728)
!3835 = !DILocation(line: 0, scope: !3828)
!3836 = !DILocation(line: 524, column: 1, scope: !3828)
!3837 = !DILocation(line: 524, column: 1, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 524, column: 1)
!3839 = distinct !DISubprogram(name: "VEC_group_info_t_base_quick_push", scope: !3, file: !3, line: 523, type: !3840, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3843)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{!3821, !3842, !1885}
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!3843 = !{!3844, !3845, !3846}
!3844 = !DILocalVariable(name: "vec_", arg: 1, scope: !3839, file: !3, line: 523, type: !3842)
!3845 = !DILocalVariable(name: "obj_", arg: 2, scope: !3839, file: !3, line: 523, type: !1885)
!3846 = !DILocalVariable(name: "slot_", scope: !3839, file: !3, line: 523, type: !3821)
!3847 = !DILocation(line: 0, scope: !3839)
!3848 = !DILocation(line: 523, column: 1, scope: !3839)
!3849 = distinct !DISubprogram(name: "VEC_group_info_t_base_space", scope: !3, file: !3, line: 523, type: !3850, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3852)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{!728, !3842, !728}
!3852 = !{!3853, !3854}
!3853 = !DILocalVariable(name: "vec_", arg: 1, scope: !3849, file: !3, line: 523, type: !3842)
!3854 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3849, file: !3, line: 523, type: !728)
!3855 = !DILocation(line: 0, scope: !3849)
!3856 = !DILocation(line: 523, column: 1, scope: !3849)
!3857 = distinct !DISubprogram(name: "df_lr_get_bb_info", scope: !1901, file: !1901, line: 1052, type: !3858, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3860)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{!1899, !7}
!3860 = !{!3861}
!3861 = !DILocalVariable(name: "index", arg: 1, scope: !3857, file: !1901, line: 1052, type: !7)
!3862 = !DILocation(line: 0, scope: !3857)
!3863 = !DILocation(line: 1054, column: 15, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3857, file: !1901, line: 1054, column: 7)
!3865 = !DILocation(line: 1054, column: 22, scope: !3864)
!3866 = !DILocation(line: 1054, column: 13, scope: !3864)
!3867 = !DILocation(line: 1054, column: 7, scope: !3857)
!3868 = !DILocation(line: 1055, column: 44, scope: !3864)
!3869 = !DILocation(line: 1055, column: 37, scope: !3864)
!3870 = !DILocation(line: 1055, column: 5, scope: !3864)
!3871 = !DILocation(line: 0, scope: !3864)
!3872 = !DILocation(line: 1058, column: 1, scope: !3857)
!3873 = distinct !DISubprogram(name: "remove_useless_values", scope: !3, file: !3, line: 2573, type: !3874, scopeLine: 2574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3876)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{null, !831}
!3876 = !{!3877, !3878, !3879, !3880, !3882}
!3877 = !DILocalVariable(name: "base", arg: 1, scope: !3873, file: !3, line: 2573, type: !831)
!3878 = !DILocalVariable(name: "insn_info", scope: !3873, file: !3, line: 2575, type: !750)
!3879 = !DILocalVariable(name: "last", scope: !3873, file: !3, line: 2576, type: !750)
!3880 = !DILocalVariable(name: "store_info", scope: !3881, file: !3, line: 2580, type: !1818)
!3881 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 2579, column: 5)
!3882 = !DILocalVariable(name: "del", scope: !3881, file: !3, line: 2581, type: !727)
!3883 = !DILocation(line: 0, scope: !3873)
!3884 = !DILocation(line: 2578, column: 3, scope: !3873)
!3885 = !DILocation(line: 2576, column: 15, scope: !3873)
!3886 = !DILocation(line: 2580, column: 44, scope: !3881)
!3887 = !DILocation(line: 0, scope: !3881)
!3888 = !DILocation(line: 2585, column: 7, scope: !3881)
!3889 = !DILocation(line: 2587, column: 21, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 2587, column: 8)
!3891 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 2586, column: 2)
!3892 = !DILocation(line: 2587, column: 30, scope: !3890)
!3893 = !DILocation(line: 2588, column: 8, scope: !3890)
!3894 = !DILocation(line: 2588, column: 24, scope: !3890)
!3895 = !DILocation(line: 2588, column: 33, scope: !3890)
!3896 = !DILocation(line: 2587, column: 8, scope: !3891)
!3897 = !DILocation(line: 2593, column: 29, scope: !3891)
!3898 = distinct !{!3898, !3888, !3899}
!3899 = !DILocation(line: 2594, column: 2, scope: !3881)
!3900 = !DILocation(line: 2596, column: 11, scope: !3881)
!3901 = !DILocation(line: 2598, column: 8, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !3, line: 2598, column: 8)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 2597, column: 2)
!3904 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 2596, column: 11)
!3905 = !DILocation(line: 0, scope: !3902)
!3906 = !DILocation(line: 2598, column: 8, scope: !3903)
!3907 = !DILocation(line: 2599, column: 12, scope: !3902)
!3908 = !DILocation(line: 2599, column: 29, scope: !3902)
!3909 = !DILocation(line: 2599, column: 6, scope: !3902)
!3910 = !DILocation(line: 2601, column: 26, scope: !3902)
!3911 = !DILocation(line: 2602, column: 4, scope: !3903)
!3912 = !DILocation(line: 2603, column: 2, scope: !3903)
!3913 = !DILocation(line: 2607, column: 30, scope: !3881)
!3914 = distinct !{!3914, !3884, !3915}
!3915 = !DILocation(line: 2608, column: 5, scope: !3873)
!3916 = !DILocation(line: 2609, column: 1, scope: !3873)
!3917 = distinct !DISubprogram(name: "scan_insn", scope: !3, file: !3, line: 2376, type: !3918, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3920)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{null, !745, !760}
!3920 = !{!3921, !3922, !3923, !3924, !3925, !3926, !3929, !3930, !3933, !3936, !3939, !3940, !3942, !3946, !3950, !3953}
!3921 = !DILocalVariable(name: "bb_info", arg: 1, scope: !3917, file: !3, line: 2376, type: !745)
!3922 = !DILocalVariable(name: "insn", arg: 2, scope: !3917, file: !3, line: 2376, type: !760)
!3923 = !DILocalVariable(name: "body", scope: !3917, file: !3, line: 2378, type: !760)
!3924 = !DILocalVariable(name: "insn_info", scope: !3917, file: !3, line: 2379, type: !750)
!3925 = !DILocalVariable(name: "mems_found", scope: !3917, file: !3, line: 2380, type: !728)
!3926 = !DILocalVariable(name: "const_call", scope: !3927, file: !3, line: 2413, type: !727)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 2412, column: 5)
!3928 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 2411, column: 7)
!3929 = !DILocalVariable(name: "memset_call", scope: !3927, file: !3, line: 2414, type: !897)
!3930 = !DILocalVariable(name: "call", scope: !3931, file: !3, line: 2425, type: !760)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 2424, column: 2)
!3932 = distinct !DILexicalBlock(scope: !3927, file: !3, line: 2423, column: 11)
!3933 = !DILocalVariable(name: "symbol", scope: !3934, file: !3, line: 2434, type: !760)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 2433, column: 6)
!3935 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 2430, column: 8)
!3936 = !DILocalVariable(name: "i_ptr", scope: !3937, file: !3, line: 2449, type: !750)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 2448, column: 2)
!3938 = distinct !DILexicalBlock(scope: !3927, file: !3, line: 2447, column: 11)
!3939 = !DILocalVariable(name: "last", scope: !3937, file: !3, line: 2450, type: !750)
!3940 = !DILocalVariable(name: "remove_store", scope: !3941, file: !3, line: 2464, type: !727)
!3941 = distinct !DILexicalBlock(scope: !3937, file: !3, line: 2463, column: 6)
!3942 = !DILocalVariable(name: "store_info", scope: !3943, file: !3, line: 2473, type: !1818)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 2472, column: 3)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 2471, column: 17)
!3945 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 2467, column: 12)
!3946 = !DILocalVariable(name: "args", scope: !3947, file: !3, line: 2503, type: !3949)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 2502, column: 6)
!3948 = distinct !DILexicalBlock(scope: !3937, file: !3, line: 2501, column: 8)
!3949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 192, elements: !968)
!3950 = !DILocalVariable(name: "mem", scope: !3951, file: !3, line: 2509, type: !760)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !3, line: 2508, column: 3)
!3952 = distinct !DILexicalBlock(scope: !3947, file: !3, line: 2504, column: 12)
!3953 = !DILocalVariable(name: "i", scope: !3954, file: !3, line: 2543, type: !728)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 2542, column: 5)
!3955 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 2541, column: 7)
!3956 = !DILocation(line: 0, scope: !3917)
!3957 = !DILocation(line: 2379, column: 53, scope: !3917)
!3958 = !DILocation(line: 2379, column: 41, scope: !3917)
!3959 = !DILocation(line: 2381, column: 3, scope: !3917)
!3960 = !DILocation(line: 2383, column: 7, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 2383, column: 7)
!3962 = !DILocation(line: 2383, column: 7, scope: !3917)
!3963 = !DILocation(line: 2385, column: 7, scope: !3961)
!3964 = !DILocation(line: 2384, column: 5, scope: !3961)
!3965 = !DILocation(line: 2387, column: 35, scope: !3917)
!3966 = !DILocation(line: 2387, column: 14, scope: !3917)
!3967 = !DILocation(line: 2387, column: 24, scope: !3917)
!3968 = !DILocation(line: 2388, column: 14, scope: !3917)
!3969 = !DILocation(line: 2388, column: 19, scope: !3917)
!3970 = !DILocation(line: 2389, column: 22, scope: !3917)
!3971 = !DILocation(line: 2391, column: 7, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 2391, column: 7)
!3973 = !DILocation(line: 2391, column: 7, scope: !3917)
!3974 = !DILocation(line: 2393, column: 32, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 2392, column: 5)
!3976 = !DILocation(line: 2394, column: 7, scope: !3975)
!3977 = !DILocation(line: 2399, column: 7, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 2399, column: 7)
!3979 = !DILocation(line: 2400, column: 7, scope: !3978)
!3980 = !DILocation(line: 2400, column: 10, scope: !3978)
!3981 = !DILocation(line: 2400, column: 36, scope: !3978)
!3982 = !DILocation(line: 2401, column: 7, scope: !3978)
!3983 = !DILocation(line: 2401, column: 10, scope: !3978)
!3984 = !DILocation(line: 2399, column: 7, scope: !3917)
!3985 = !DILocation(line: 2403, column: 7, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 2402, column: 5)
!3987 = !DILocation(line: 2404, column: 32, scope: !3986)
!3988 = !DILocation(line: 2405, column: 7, scope: !3986)
!3989 = !DILocation(line: 2409, column: 15, scope: !3917)
!3990 = !DILocation(line: 2409, column: 51, scope: !3917)
!3991 = !DILocation(line: 2409, column: 3, scope: !3917)
!3992 = !DILocation(line: 2411, column: 7, scope: !3928)
!3993 = !DILocation(line: 2411, column: 7, scope: !3917)
!3994 = !DILocation(line: 0, scope: !3927)
!3995 = !DILocation(line: 2416, column: 32, scope: !3927)
!3996 = !DILocation(line: 2422, column: 20, scope: !3927)
!3997 = !DILocation(line: 2423, column: 12, scope: !3932)
!3998 = !DILocation(line: 2423, column: 11, scope: !3927)
!3999 = !DILocation(line: 2425, column: 15, scope: !3931)
!4000 = !DILocation(line: 0, scope: !3931)
!4001 = !DILocation(line: 2426, column: 8, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 2426, column: 8)
!4003 = !DILocation(line: 2426, column: 24, scope: !4002)
!4004 = !DILocation(line: 2426, column: 8, scope: !3931)
!4005 = !DILocation(line: 2427, column: 13, scope: !4002)
!4006 = !DILocation(line: 0, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 2428, column: 8)
!4008 = !DILocation(line: 2428, column: 8, scope: !4007)
!4009 = !DILocation(line: 2427, column: 6, scope: !4002)
!4010 = !DILocation(line: 2428, column: 24, scope: !4007)
!4011 = !DILocation(line: 2428, column: 8, scope: !3931)
!4012 = !DILocation(line: 2429, column: 13, scope: !4007)
!4013 = !DILocation(line: 0, scope: !3935)
!4014 = !DILocation(line: 2430, column: 8, scope: !3935)
!4015 = !DILocation(line: 2429, column: 6, scope: !4007)
!4016 = !DILocation(line: 2430, column: 24, scope: !3935)
!4017 = !DILocation(line: 2431, column: 8, scope: !3935)
!4018 = !DILocation(line: 2431, column: 11, scope: !3935)
!4019 = !DILocation(line: 2432, column: 8, scope: !3935)
!4020 = !DILocation(line: 2432, column: 11, scope: !3935)
!4021 = !DILocation(line: 2432, column: 47, scope: !3935)
!4022 = !DILocation(line: 2430, column: 8, scope: !3931)
!4023 = !DILocation(line: 0, scope: !3934)
!4024 = !DILocation(line: 2435, column: 12, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 2435, column: 12)
!4026 = !DILocation(line: 2436, column: 5, scope: !4025)
!4027 = !DILocation(line: 2436, column: 8, scope: !4025)
!4028 = !DILocation(line: 2436, column: 45, scope: !4025)
!4029 = !DILocation(line: 2435, column: 12, scope: !3934)
!4030 = !DILocation(line: 2438, column: 10, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 2438, column: 9)
!4032 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 2437, column: 3)
!4033 = !DILocation(line: 2439, column: 10, scope: !4031)
!4034 = !DILocation(line: 2440, column: 10, scope: !4031)
!4035 = !DILocation(line: 2440, column: 14, scope: !4031)
!4036 = !DILocation(line: 2441, column: 7, scope: !4031)
!4037 = !DILocation(line: 2442, column: 9, scope: !4031)
!4038 = !DILocation(line: 2442, column: 12, scope: !4031)
!4039 = !DILocation(line: 2442, column: 40, scope: !4031)
!4040 = !DILocation(line: 2442, column: 37, scope: !4031)
!4041 = !DILocation(line: 2438, column: 9, scope: !4032)
!4042 = !DILocation(line: 2443, column: 21, scope: !4031)
!4043 = !DILocation(line: 2447, column: 11, scope: !3938)
!4044 = !DILocation(line: 2447, column: 25, scope: !3938)
!4045 = !DILocation(line: 2447, column: 22, scope: !3938)
!4046 = !DILocation(line: 2449, column: 24, scope: !3937)
!4047 = !DILocation(line: 0, scope: !3937)
!4048 = !DILocation(line: 2452, column: 8, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !3937, file: !3, line: 2452, column: 8)
!4050 = !DILocation(line: 2452, column: 8, scope: !3937)
!4051 = !DILocation(line: 2454, column: 8, scope: !4049)
!4052 = !DILocation(line: 2454, column: 41, scope: !4049)
!4053 = !DILocation(line: 2453, column: 6, scope: !4049)
!4054 = !DILocation(line: 2457, column: 8, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !3937, file: !3, line: 2457, column: 8)
!4056 = !DILocation(line: 2457, column: 8, scope: !3937)
!4057 = !DILocation(line: 2458, column: 17, scope: !4055)
!4058 = !DILocation(line: 2458, column: 28, scope: !4055)
!4059 = !DILocation(line: 2458, column: 6, scope: !4055)
!4060 = !DILocation(line: 0, scope: !3944)
!4061 = !DILocation(line: 2462, column: 4, scope: !3937)
!4062 = !DILocation(line: 2450, column: 16, scope: !3937)
!4063 = !DILocation(line: 0, scope: !3941)
!4064 = !DILocation(line: 2467, column: 19, scope: !3945)
!4065 = !DILocation(line: 2467, column: 12, scope: !3945)
!4066 = !DILocation(line: 2467, column: 12, scope: !3941)
!4067 = !DILocation(line: 2471, column: 28, scope: !3944)
!4068 = !DILocation(line: 2471, column: 17, scope: !3944)
!4069 = !DILocation(line: 2471, column: 17, scope: !3945)
!4070 = !DILocation(line: 2473, column: 38, scope: !3943)
!4071 = !DILocation(line: 2476, column: 5, scope: !3943)
!4072 = !DILocation(line: 0, scope: !3943)
!4073 = !DILocation(line: 2476, column: 25, scope: !3943)
!4074 = !DILocation(line: 2476, column: 12, scope: !3943)
!4075 = !DILocation(line: 2477, column: 32, scope: !3943)
!4076 = distinct !{!4076, !4071, !4075}
!4077 = !DILocation(line: 2479, column: 21, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !3943, file: !3, line: 2479, column: 9)
!4079 = !DILocation(line: 2479, column: 30, scope: !4078)
!4080 = !DILocation(line: 2480, column: 9, scope: !4078)
!4081 = !DILocation(line: 2480, column: 12, scope: !4078)
!4082 = !DILocation(line: 2481, column: 32, scope: !4078)
!4083 = !DILocation(line: 2479, column: 9, scope: !3943)
!4084 = !DILocation(line: 0, scope: !3945)
!4085 = !DILocation(line: 2485, column: 12, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 2485, column: 12)
!4087 = !DILocation(line: 2485, column: 12, scope: !3941)
!4088 = !DILocation(line: 2487, column: 9, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 2487, column: 9)
!4090 = distinct !DILexicalBlock(scope: !4086, file: !3, line: 2486, column: 3)
!4091 = !DILocation(line: 2487, column: 9, scope: !4090)
!4092 = !DILocation(line: 2488, column: 7, scope: !4089)
!4093 = !DILocation(line: 2490, column: 9, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 2490, column: 9)
!4095 = !DILocation(line: 0, scope: !4094)
!4096 = !DILocation(line: 2490, column: 9, scope: !4090)
!4097 = !DILocation(line: 2491, column: 13, scope: !4094)
!4098 = !DILocation(line: 2491, column: 30, scope: !4094)
!4099 = !DILocation(line: 2491, column: 7, scope: !4094)
!4100 = !DILocation(line: 2493, column: 27, scope: !4094)
!4101 = !DILocation(line: 2498, column: 23, scope: !3941)
!4102 = distinct !{!4102, !4061, !4103}
!4103 = !DILocation(line: 2499, column: 6, scope: !3937)
!4104 = !DILocation(line: 2501, column: 8, scope: !3948)
!4105 = !DILocation(line: 2501, column: 8, scope: !3937)
!4106 = !DILocation(line: 2503, column: 8, scope: !3947)
!4107 = !DILocation(line: 2503, column: 12, scope: !3947)
!4108 = !DILocation(line: 2504, column: 46, scope: !3952)
!4109 = !DILocation(line: 2504, column: 12, scope: !3952)
!4110 = !DILocation(line: 2505, column: 5, scope: !3952)
!4111 = !DILocation(line: 2505, column: 8, scope: !3952)
!4112 = !DILocation(line: 2506, column: 5, scope: !3952)
!4113 = !DILocation(line: 2506, column: 8, scope: !3952)
!4114 = !DILocation(line: 2507, column: 5, scope: !3952)
!4115 = !DILocation(line: 2507, column: 8, scope: !3952)
!4116 = !DILocation(line: 2507, column: 25, scope: !3952)
!4117 = !DILocation(line: 2504, column: 12, scope: !3947)
!4118 = !DILocation(line: 2509, column: 37, scope: !3951)
!4119 = !DILocation(line: 2509, column: 15, scope: !3951)
!4120 = !DILocation(line: 0, scope: !3951)
!4121 = !DILocation(line: 2510, column: 24, scope: !3951)
!4122 = !DILocation(line: 2510, column: 5, scope: !3951)
!4123 = !DILocation(line: 2511, column: 12, scope: !3951)
!4124 = !DILocation(line: 2512, column: 19, scope: !3951)
!4125 = !DILocation(line: 2513, column: 9, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !3951, file: !3, line: 2513, column: 9)
!4127 = !DILocation(line: 2513, column: 9, scope: !3951)
!4128 = !DILocation(line: 2514, column: 7, scope: !4126)
!4129 = !DILocation(line: 2515, column: 20, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !3951, file: !3, line: 2515, column: 9)
!4131 = !DILocation(line: 2515, column: 9, scope: !3951)
!4132 = !DILocation(line: 2517, column: 39, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 2516, column: 7)
!4134 = !DILocation(line: 2517, column: 20, scope: !4133)
!4135 = !DILocation(line: 2517, column: 37, scope: !4133)
!4136 = !DILocation(line: 2518, column: 29, scope: !4133)
!4137 = !DILocation(line: 2519, column: 7, scope: !4133)
!4138 = !DILocation(line: 2521, column: 6, scope: !3948)
!4139 = !DILocation(line: 2521, column: 6, scope: !3947)
!4140 = !DILocation(line: 2526, column: 2, scope: !3938)
!4141 = !DILocation(line: 2533, column: 8, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 2533, column: 7)
!4143 = !DILocation(line: 2533, column: 34, scope: !4142)
!4144 = !DILocation(line: 2534, column: 7, scope: !4142)
!4145 = !DILocation(line: 2534, column: 10, scope: !4142)
!4146 = !DILocation(line: 2535, column: 7, scope: !4142)
!4147 = !DILocation(line: 2535, column: 10, scope: !4142)
!4148 = !DILocation(line: 2536, column: 7, scope: !4142)
!4149 = !DILocation(line: 2536, column: 11, scope: !4142)
!4150 = !DILocation(line: 2536, column: 10, scope: !4142)
!4151 = !DILocation(line: 2537, column: 7, scope: !4142)
!4152 = !DILocation(line: 2537, column: 10, scope: !4142)
!4153 = !DILocation(line: 2533, column: 7, scope: !3917)
!4154 = !DILocation(line: 2538, column: 30, scope: !4142)
!4155 = !DILocation(line: 2538, column: 5, scope: !4142)
!4156 = !DILocation(line: 2540, column: 10, scope: !3917)
!4157 = !DILocation(line: 2541, column: 7, scope: !3955)
!4158 = !DILocation(line: 2541, column: 23, scope: !3955)
!4159 = !DILocation(line: 2541, column: 7, scope: !3917)
!4160 = !DILocation(line: 0, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 2544, column: 7)
!4162 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 2544, column: 7)
!4163 = !DILocation(line: 2544, column: 7, scope: !4162)
!4164 = !DILocation(line: 0, scope: !3954)
!4165 = !DILocation(line: 2544, column: 23, scope: !4161)
!4166 = !DILocation(line: 2544, column: 21, scope: !4161)
!4167 = !DILocation(line: 2545, column: 30, scope: !4161)
!4168 = !DILocation(line: 2545, column: 16, scope: !4161)
!4169 = !DILocation(line: 2545, column: 13, scope: !4161)
!4170 = !DILocation(line: 2544, column: 43, scope: !4161)
!4171 = !DILocation(line: 2544, column: 7, scope: !4161)
!4172 = distinct !{!4172, !4163, !4173}
!4173 = !DILocation(line: 2545, column: 59, scope: !4162)
!4174 = !DILocation(line: 2548, column: 19, scope: !3955)
!4175 = !DILocation(line: 2550, column: 7, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 2550, column: 7)
!4177 = !DILocation(line: 2550, column: 7, scope: !3917)
!4178 = !DILocation(line: 2552, column: 30, scope: !4176)
!4179 = !DILocation(line: 2552, column: 19, scope: !4176)
!4180 = !DILocation(line: 2551, column: 5, scope: !4176)
!4181 = !DILocation(line: 2558, column: 18, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 2558, column: 7)
!4183 = !DILocation(line: 2558, column: 7, scope: !3917)
!4184 = !DILocation(line: 2560, column: 37, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 2559, column: 5)
!4186 = !DILocation(line: 2560, column: 18, scope: !4185)
!4187 = !DILocation(line: 2560, column: 35, scope: !4185)
!4188 = !DILocation(line: 2561, column: 27, scope: !4185)
!4189 = !DILocation(line: 2562, column: 5, scope: !4185)
!4190 = !DILocation(line: 2564, column: 30, scope: !4182)
!4191 = !DILocation(line: 2565, column: 1, scope: !3917)
!4192 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !318, file: !318, line: 150, type: !4193, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4197)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!7, !4195}
!4195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4196, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1164)
!4197 = !{!4198}
!4198 = !DILocalVariable(name: "vec_", arg: 1, scope: !4192, file: !318, line: 150, type: !4195)
!4199 = !DILocation(line: 0, scope: !4192)
!4200 = !DILocation(line: 150, column: 1, scope: !4192)
!4201 = distinct !DISubprogram(name: "single_succ_p", scope: !318, file: !318, line: 626, type: !4202, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4207)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!727, !4204}
!4204 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !761, line: 112, baseType: !4205)
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 64)
!4206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!4207 = !{!4208}
!4208 = !DILocalVariable(name: "bb", arg: 1, scope: !4201, file: !318, line: 626, type: !4204)
!4209 = !DILocation(line: 0, scope: !4201)
!4210 = !DILocation(line: 628, column: 10, scope: !4201)
!4211 = !DILocation(line: 628, column: 33, scope: !4201)
!4212 = !DILocation(line: 628, column: 3, scope: !4201)
!4213 = distinct !DISubprogram(name: "single_succ", scope: !318, file: !318, line: 663, type: !4214, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4216)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!1154, !4204}
!4216 = !{!4217}
!4217 = !DILocalVariable(name: "bb", arg: 1, scope: !4213, file: !318, line: 663, type: !4204)
!4218 = !DILocation(line: 0, scope: !4213)
!4219 = !DILocation(line: 665, column: 10, scope: !4213)
!4220 = !DILocation(line: 665, column: 33, scope: !4213)
!4221 = !DILocation(line: 665, column: 3, scope: !4213)
!4222 = distinct !DISubprogram(name: "delete_dead_store_insn", scope: !3, file: !3, line: 901, type: !4223, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4225)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{null, !750}
!4225 = !{!4226, !4227, !4228}
!4226 = !DILocalVariable(name: "insn_info", arg: 1, scope: !4222, file: !3, line: 901, type: !750)
!4227 = !DILocalVariable(name: "read_info", scope: !4222, file: !3, line: 903, type: !1846)
!4228 = !DILocalVariable(name: "next", scope: !4229, file: !3, line: 925, type: !1846)
!4229 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 924, column: 5)
!4230 = !DILocation(line: 0, scope: !4222)
!4231 = !DILocation(line: 905, column: 8, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 905, column: 7)
!4233 = !DILocation(line: 905, column: 7, scope: !4222)
!4234 = !DILocation(line: 908, column: 33, scope: !4222)
!4235 = !DILocation(line: 908, column: 3, scope: !4222)
!4236 = !DILocation(line: 909, column: 7, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 909, column: 7)
!4238 = !DILocation(line: 909, column: 7, scope: !4222)
!4239 = !DILocation(line: 912, column: 9, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 910, column: 5)
!4241 = !DILocation(line: 911, column: 7, scope: !4240)
!4242 = !DILocation(line: 913, column: 22, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4240, file: !3, line: 913, column: 11)
!4244 = !DILocation(line: 913, column: 33, scope: !4243)
!4245 = !DILocation(line: 913, column: 11, scope: !4243)
!4246 = !DILocation(line: 0, scope: !4243)
!4247 = !DILocation(line: 913, column: 11, scope: !4240)
!4248 = !DILocation(line: 914, column: 2, scope: !4243)
!4249 = !DILocation(line: 917, column: 2, scope: !4243)
!4250 = !DILocation(line: 920, column: 3, scope: !4222)
!4251 = !DILocation(line: 921, column: 26, scope: !4222)
!4252 = !DILocation(line: 923, column: 3, scope: !4222)
!4253 = !DILocation(line: 925, column: 37, scope: !4229)
!4254 = !DILocation(line: 0, scope: !4229)
!4255 = !DILocation(line: 926, column: 18, scope: !4229)
!4256 = !DILocation(line: 926, column: 7, scope: !4229)
!4257 = distinct !{!4257, !4252, !4258}
!4258 = !DILocation(line: 928, column: 5, scope: !4222)
!4259 = !DILocation(line: 929, column: 23, scope: !4222)
!4260 = !DILocation(line: 931, column: 27, scope: !4222)
!4261 = !DILocation(line: 931, column: 3, scope: !4222)
!4262 = !DILocation(line: 932, column: 18, scope: !4222)
!4263 = !DILocation(line: 933, column: 19, scope: !4222)
!4264 = !DILocation(line: 935, column: 14, scope: !4222)
!4265 = !DILocation(line: 935, column: 24, scope: !4222)
!4266 = !DILocation(line: 936, column: 1, scope: !4222)
!4267 = distinct !DISubprogram(name: "VEC_group_info_t_base_index", scope: !3, file: !3, line: 523, type: !4268, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4272)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{!1885, !4270, !7}
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1892)
!4272 = !{!4273, !4274}
!4273 = !DILocalVariable(name: "vec_", arg: 1, scope: !4267, file: !3, line: 523, type: !4270)
!4274 = !DILocalVariable(name: "ix_", arg: 2, scope: !4267, file: !3, line: 523, type: !7)
!4275 = !DILocation(line: 0, scope: !4267)
!4276 = !DILocation(line: 523, column: 1, scope: !4267)
!4277 = distinct !DISubprogram(name: "free_store_info", scope: !3, file: !3, line: 788, type: !4223, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4278)
!4278 = !{!4279, !4280, !4281}
!4279 = !DILocalVariable(name: "insn_info", arg: 1, scope: !4277, file: !3, line: 788, type: !750)
!4280 = !DILocalVariable(name: "store_info", scope: !4277, file: !3, line: 790, type: !1818)
!4281 = !DILocalVariable(name: "next", scope: !4282, file: !3, line: 793, type: !1818)
!4282 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 792, column: 5)
!4283 = !DILocation(line: 0, scope: !4277)
!4284 = !DILocation(line: 790, column: 40, scope: !4277)
!4285 = !DILocation(line: 791, column: 3, scope: !4277)
!4286 = !DILocation(line: 793, column: 39, scope: !4282)
!4287 = !DILocation(line: 0, scope: !4282)
!4288 = !DILocation(line: 794, column: 23, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 794, column: 11)
!4290 = !DILocation(line: 794, column: 11, scope: !4289)
!4291 = !DILocation(line: 794, column: 11, scope: !4282)
!4292 = !DILocation(line: 795, column: 2, scope: !4289)
!4293 = !DILocation(line: 796, column: 23, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 796, column: 11)
!4295 = !DILocation(line: 796, column: 11, scope: !4294)
!4296 = !DILocation(line: 796, column: 11, scope: !4282)
!4297 = !DILocation(line: 797, column: 13, scope: !4294)
!4298 = !DILocation(line: 797, column: 34, scope: !4294)
!4299 = !DILocation(line: 797, column: 2, scope: !4294)
!4300 = !DILocation(line: 799, column: 13, scope: !4294)
!4301 = !DILocation(line: 799, column: 34, scope: !4294)
!4302 = !DILocation(line: 799, column: 2, scope: !4294)
!4303 = distinct !{!4303, !4285, !4304}
!4304 = !DILocation(line: 801, column: 5, scope: !4277)
!4305 = !DILocation(line: 803, column: 14, scope: !4277)
!4306 = !DILocation(line: 803, column: 28, scope: !4277)
!4307 = !DILocation(line: 804, column: 14, scope: !4277)
!4308 = !DILocation(line: 804, column: 37, scope: !4277)
!4309 = !DILocation(line: 805, column: 24, scope: !4277)
!4310 = !DILocation(line: 806, column: 1, scope: !4277)
!4311 = distinct !DISubprogram(name: "add_wild_read", scope: !3, file: !3, line: 989, type: !4312, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4314)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{null, !745}
!4314 = !{!4315, !4316, !4317, !4319}
!4315 = !DILocalVariable(name: "bb_info", arg: 1, scope: !4311, file: !3, line: 989, type: !745)
!4316 = !DILocalVariable(name: "insn_info", scope: !4311, file: !3, line: 991, type: !750)
!4317 = !DILocalVariable(name: "ptr", scope: !4311, file: !3, line: 992, type: !4318)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!4319 = !DILocalVariable(name: "next", scope: !4320, file: !3, line: 996, type: !1846)
!4320 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 995, column: 5)
!4321 = !DILocation(line: 0, scope: !4311)
!4322 = !DILocation(line: 991, column: 36, scope: !4311)
!4323 = !DILocation(line: 992, column: 34, scope: !4311)
!4324 = !DILocation(line: 994, column: 3, scope: !4311)
!4325 = !DILocation(line: 992, column: 16, scope: !4311)
!4326 = !DILocation(line: 994, column: 10, scope: !4311)
!4327 = !DILocation(line: 0, scope: !4320)
!4328 = !DILocation(line: 997, column: 19, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 997, column: 11)
!4330 = !DILocation(line: 997, column: 29, scope: !4329)
!4331 = !DILocation(line: 997, column: 11, scope: !4320)
!4332 = !DILocation(line: 996, column: 34, scope: !4320)
!4333 = !DILocation(line: 999, column: 22, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 998, column: 9)
!4335 = !DILocation(line: 999, column: 38, scope: !4334)
!4336 = !DILocation(line: 999, column: 11, scope: !4334)
!4337 = !DILocation(line: 1000, column: 16, scope: !4334)
!4338 = !DILocation(line: 1001, column: 2, scope: !4334)
!4339 = !DILocation(line: 1003, column: 17, scope: !4329)
!4340 = distinct !{!4340, !4324, !4341}
!4341 = !DILocation(line: 1004, column: 5, scope: !4311)
!4342 = !DILocation(line: 1005, column: 14, scope: !4311)
!4343 = !DILocation(line: 1005, column: 24, scope: !4311)
!4344 = !DILocation(line: 1006, column: 23, scope: !4311)
!4345 = !DILocation(line: 1007, column: 1, scope: !4311)
!4346 = distinct !DISubprogram(name: "check_mem_read_use", scope: !3, file: !3, line: 2305, type: !4347, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4349)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{null, !1913, !732}
!4349 = !{!4350, !4351}
!4350 = !DILocalVariable(name: "loc", arg: 1, scope: !4346, file: !3, line: 2305, type: !1913)
!4351 = !DILocalVariable(name: "data", arg: 2, scope: !4346, file: !3, line: 2305, type: !732)
!4352 = !DILocation(line: 0, scope: !4346)
!4353 = !DILocation(line: 2307, column: 3, scope: !4346)
!4354 = !DILocation(line: 2308, column: 1, scope: !4346)
!4355 = distinct !DISubprogram(name: "dump_insn_info", scope: !3, file: !3, line: 1650, type: !4356, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4358)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{null, !733, !750}
!4358 = !{!4359, !4360}
!4359 = !DILocalVariable(name: "start", arg: 1, scope: !4355, file: !3, line: 1650, type: !733)
!4360 = !DILocalVariable(name: "insn_info", arg: 2, scope: !4355, file: !3, line: 1650, type: !750)
!4361 = !DILocation(line: 0, scope: !4355)
!4362 = !DILocation(line: 1652, column: 12, scope: !4355)
!4363 = !DILocation(line: 1653, column: 5, scope: !4355)
!4364 = !DILocation(line: 1654, column: 16, scope: !4355)
!4365 = !DILocation(line: 1654, column: 5, scope: !4355)
!4366 = !DILocation(line: 1652, column: 3, scope: !4355)
!4367 = !DILocation(line: 1655, column: 1, scope: !4355)
!4368 = distinct !DISubprogram(name: "get_call_args", scope: !3, file: !3, line: 2315, type: !4369, scopeLine: 2316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4371)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{!727, !760, !897, !1913, !728}
!4371 = !{!4372, !4373, !4374, !4375, !4376, !4396, !4397, !4398, !4402, !4403, !4404}
!4372 = !DILocalVariable(name: "call_insn", arg: 1, scope: !4368, file: !3, line: 2315, type: !760)
!4373 = !DILocalVariable(name: "fn", arg: 2, scope: !4368, file: !3, line: 2315, type: !897)
!4374 = !DILocalVariable(name: "args", arg: 3, scope: !4368, file: !3, line: 2315, type: !1913)
!4375 = !DILocalVariable(name: "nargs", arg: 4, scope: !4368, file: !3, line: 2315, type: !728)
!4376 = !DILocalVariable(name: "args_so_far", scope: !4368, file: !3, line: 2317, type: !4377)
!4377 = !DIDerivedType(tag: DW_TAG_typedef, name: "CUMULATIVE_ARGS", file: !329, line: 1598, baseType: !4378)
!4378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ix86_args", file: !329, line: 1579, size: 512, elements: !4379)
!4379 = !{!4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !4378, file: !329, line: 1580, baseType: !728, size: 32)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "nregs", scope: !4378, file: !329, line: 1581, baseType: !728, size: 32, offset: 32)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !4378, file: !329, line: 1582, baseType: !728, size: 32, offset: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "fastcall", scope: !4378, file: !329, line: 1583, baseType: !728, size: 32, offset: 96)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "sse_words", scope: !4378, file: !329, line: 1584, baseType: !728, size: 32, offset: 128)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "sse_nregs", scope: !4378, file: !329, line: 1585, baseType: !728, size: 32, offset: 160)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "warn_avx", scope: !4378, file: !329, line: 1586, baseType: !728, size: 32, offset: 192)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "warn_sse", scope: !4378, file: !329, line: 1587, baseType: !728, size: 32, offset: 224)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "warn_mmx", scope: !4378, file: !329, line: 1588, baseType: !728, size: 32, offset: 256)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "sse_regno", scope: !4378, file: !329, line: 1589, baseType: !728, size: 32, offset: 288)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_words", scope: !4378, file: !329, line: 1590, baseType: !728, size: 32, offset: 320)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_nregs", scope: !4378, file: !329, line: 1591, baseType: !728, size: 32, offset: 352)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_regno", scope: !4378, file: !329, line: 1592, baseType: !728, size: 32, offset: 384)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_vaarg", scope: !4378, file: !329, line: 1593, baseType: !728, size: 32, offset: 416)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "float_in_sse", scope: !4378, file: !329, line: 1594, baseType: !728, size: 32, offset: 448)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !4378, file: !329, line: 1596, baseType: !328, size: 32, offset: 480)
!4396 = !DILocalVariable(name: "arg", scope: !4368, file: !3, line: 2318, type: !897)
!4397 = !DILocalVariable(name: "idx", scope: !4368, file: !3, line: 2319, type: !728)
!4398 = !DILocalVariable(name: "mode", scope: !4399, file: !3, line: 2328, type: !5)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 2327, column: 5)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 2324, column: 3)
!4401 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 2324, column: 3)
!4402 = !DILocalVariable(name: "reg", scope: !4399, file: !3, line: 2329, type: !760)
!4403 = !DILocalVariable(name: "link", scope: !4399, file: !3, line: 2329, type: !760)
!4404 = !DILocalVariable(name: "tmp", scope: !4399, file: !3, line: 2329, type: !760)
!4405 = !DILocation(line: 0, scope: !4368)
!4406 = !DILocation(line: 2317, column: 3, scope: !4368)
!4407 = !DILocation(line: 2321, column: 3, scope: !4368)
!4408 = !DILocation(line: 2323, column: 9, scope: !4368)
!4409 = !DILocation(line: 0, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 2334, column: 7)
!4411 = !DILocation(line: 2324, column: 8, scope: !4401)
!4412 = !DILocation(line: 2325, column: 15, scope: !4400)
!4413 = !DILocation(line: 2325, column: 12, scope: !4400)
!4414 = !DILocation(line: 2325, column: 37, scope: !4400)
!4415 = !DILocation(line: 2325, column: 30, scope: !4400)
!4416 = !DILocation(line: 2324, column: 3, scope: !4401)
!4417 = !DILocation(line: 2328, column: 32, scope: !4399)
!4418 = !DILocation(line: 0, scope: !4399)
!4419 = !DILocation(line: 2329, column: 17, scope: !4399)
!4420 = !DILocation(line: 2330, column: 12, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 2330, column: 11)
!4422 = !DILocation(line: 2330, column: 16, scope: !4421)
!4423 = !DILocation(line: 2330, column: 20, scope: !4421)
!4424 = !DILocation(line: 2330, column: 32, scope: !4421)
!4425 = !DILocation(line: 2330, column: 35, scope: !4421)
!4426 = !DILocation(line: 2330, column: 50, scope: !4421)
!4427 = !DILocation(line: 2331, column: 4, scope: !4421)
!4428 = !DILocation(line: 2331, column: 7, scope: !4421)
!4429 = !DILocation(line: 2331, column: 29, scope: !4421)
!4430 = !DILocation(line: 2330, column: 11, scope: !4399)
!4431 = !DILocation(line: 0, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 2338, column: 4)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2337, column: 6)
!4434 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 2334, column: 7)
!4435 = !DILocation(line: 0, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 2340, column: 10)
!4437 = !DILocation(line: 2334, column: 12, scope: !4410)
!4438 = !DILocation(line: 2334, column: 7, scope: !4410)
!4439 = !DILocation(line: 2337, column: 6, scope: !4433)
!4440 = !DILocation(line: 2337, column: 32, scope: !4433)
!4441 = !DILocation(line: 2337, column: 6, scope: !4434)
!4442 = !DILocation(line: 2339, column: 18, scope: !4432)
!4443 = !DILocation(line: 2339, column: 16, scope: !4432)
!4444 = !DILocation(line: 2340, column: 10, scope: !4436)
!4445 = !DILocation(line: 2341, column: 3, scope: !4436)
!4446 = !DILocation(line: 2341, column: 6, scope: !4436)
!4447 = !DILocation(line: 2341, column: 27, scope: !4436)
!4448 = !DILocation(line: 2341, column: 24, scope: !4436)
!4449 = !DILocation(line: 2342, column: 3, scope: !4436)
!4450 = !DILocation(line: 2342, column: 7, scope: !4436)
!4451 = !DILocation(line: 2342, column: 28, scope: !4436)
!4452 = !DILocation(line: 2343, column: 7, scope: !4436)
!4453 = !DILocation(line: 2343, column: 11, scope: !4436)
!4454 = !DILocation(line: 2343, column: 49, scope: !4436)
!4455 = !DILocation(line: 2344, column: 4, scope: !4436)
!4456 = !DILocation(line: 2344, column: 8, scope: !4436)
!4457 = !DILocation(line: 2345, column: 8, scope: !4436)
!4458 = !DILocation(line: 2346, column: 4, scope: !4436)
!4459 = !DILocation(line: 2347, column: 10, scope: !4436)
!4460 = !DILocation(line: 2347, column: 8, scope: !4436)
!4461 = !DILocation(line: 2340, column: 10, scope: !4432)
!4462 = !DILocation(line: 2336, column: 12, scope: !4434)
!4463 = !DILocation(line: 2334, column: 7, scope: !4434)
!4464 = distinct !{!4464, !4438, !4465}
!4465 = !DILocation(line: 2349, column: 4, scope: !4410)
!4466 = !DILocation(line: 2353, column: 49, scope: !4399)
!4467 = !DILocation(line: 2353, column: 13, scope: !4399)
!4468 = !DILocation(line: 2354, column: 11, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 2354, column: 11)
!4470 = !DILocation(line: 2354, column: 32, scope: !4469)
!4471 = !DILocation(line: 2354, column: 11, scope: !4399)
!4472 = !DILocation(line: 2356, column: 9, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 2356, column: 8)
!4474 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 2355, column: 2)
!4475 = !DILocation(line: 2356, column: 13, scope: !4473)
!4476 = !DILocation(line: 2356, column: 17, scope: !4473)
!4477 = !DILocation(line: 2356, column: 8, scope: !4474)
!4478 = !DILocation(line: 2358, column: 10, scope: !4474)
!4479 = !DILocation(line: 2359, column: 2, scope: !4474)
!4480 = !DILocation(line: 2360, column: 11, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 2360, column: 11)
!4482 = !DILocation(line: 2360, column: 11, scope: !4399)
!4483 = !DILocation(line: 2361, column: 12, scope: !4481)
!4484 = !DILocation(line: 2361, column: 2, scope: !4481)
!4485 = !DILocation(line: 2363, column: 7, scope: !4399)
!4486 = !DILocation(line: 2364, column: 5, scope: !4400)
!4487 = !DILocation(line: 2326, column: 14, scope: !4400)
!4488 = !DILocation(line: 2326, column: 35, scope: !4400)
!4489 = !DILocation(line: 2324, column: 3, scope: !4400)
!4490 = distinct !{!4490, !4416, !4491}
!4491 = !DILocation(line: 2364, column: 5, scope: !4401)
!4492 = !DILocation(line: 2365, column: 11, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 2365, column: 7)
!4494 = !DILocation(line: 2365, column: 36, scope: !4493)
!4495 = !DILocation(line: 2365, column: 29, scope: !4493)
!4496 = !DILocation(line: 2368, column: 1, scope: !4368)
!4497 = distinct !DISubprogram(name: "record_store", scope: !3, file: !3, line: 1306, type: !4498, scopeLine: 1307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4500)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{!728, !760, !745}
!4500 = !{!4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4521, !4522, !4525, !4527, !4533, !4536, !4541, !4543, !4544, !4545, !4549, !4552, !4558}
!4501 = !DILocalVariable(name: "body", arg: 1, scope: !4497, file: !3, line: 1306, type: !760)
!4502 = !DILocalVariable(name: "bb_info", arg: 2, scope: !4497, file: !3, line: 1306, type: !745)
!4503 = !DILocalVariable(name: "mem", scope: !4497, file: !3, line: 1308, type: !760)
!4504 = !DILocalVariable(name: "rhs", scope: !4497, file: !3, line: 1308, type: !760)
!4505 = !DILocalVariable(name: "const_rhs", scope: !4497, file: !3, line: 1308, type: !760)
!4506 = !DILocalVariable(name: "mem_addr", scope: !4497, file: !3, line: 1308, type: !760)
!4507 = !DILocalVariable(name: "offset", scope: !4497, file: !3, line: 1309, type: !868)
!4508 = !DILocalVariable(name: "width", scope: !4497, file: !3, line: 1310, type: !868)
!4509 = !DILocalVariable(name: "spill_alias_set", scope: !4497, file: !3, line: 1311, type: !739)
!4510 = !DILocalVariable(name: "insn_info", scope: !4497, file: !3, line: 1312, type: !750)
!4511 = !DILocalVariable(name: "store_info", scope: !4497, file: !3, line: 1313, type: !1818)
!4512 = !DILocalVariable(name: "group_id", scope: !4497, file: !3, line: 1314, type: !728)
!4513 = !DILocalVariable(name: "base", scope: !4497, file: !3, line: 1315, type: !831)
!4514 = !DILocalVariable(name: "ptr", scope: !4497, file: !3, line: 1316, type: !750)
!4515 = !DILocalVariable(name: "last", scope: !4497, file: !3, line: 1316, type: !750)
!4516 = !DILocalVariable(name: "redundant_reason", scope: !4497, file: !3, line: 1316, type: !750)
!4517 = !DILocalVariable(name: "store_is_unused", scope: !4497, file: !3, line: 1317, type: !727)
!4518 = !DILocalVariable(name: "store1", scope: !4519, file: !3, line: 1391, type: !1839)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 1390, column: 5)
!4520 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1389, column: 7)
!4521 = !DILocalVariable(name: "store2", scope: !4519, file: !3, line: 1392, type: !1839)
!4522 = !DILocalVariable(name: "group", scope: !4523, file: !3, line: 1415, type: !1885)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 1411, column: 5)
!4524 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 1410, column: 12)
!4525 = !DILocalVariable(name: "base_term", scope: !4526, file: !3, line: 1427, type: !760)
!4526 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 1426, column: 5)
!4527 = !DILocalVariable(name: "tem", scope: !4528, file: !3, line: 1460, type: !760)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 1459, column: 2)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 1458, column: 16)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 1456, column: 11)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 1454, column: 5)
!4532 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1444, column: 7)
!4533 = !DILocalVariable(name: "tem", scope: !4534, file: !3, line: 1466, type: !760)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 1465, column: 2)
!4535 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 1464, column: 11)
!4536 = !DILocalVariable(name: "group", scope: !4537, file: !3, line: 1488, type: !1885)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 1487, column: 2)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 1484, column: 11)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 1483, column: 5)
!4540 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1480, column: 7)
!4541 = !DILocalVariable(name: "next", scope: !4542, file: !3, line: 1498, type: !750)
!4542 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1497, column: 5)
!4543 = !DILocalVariable(name: "s_info", scope: !4542, file: !3, line: 1499, type: !1818)
!4544 = !DILocalVariable(name: "del", scope: !4542, file: !3, line: 1500, type: !727)
!4545 = !DILocalVariable(name: "entry", scope: !4546, file: !3, line: 1512, type: !735)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !3, line: 1511, column: 2)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 1510, column: 16)
!4548 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1508, column: 11)
!4549 = !DILocalVariable(name: "i", scope: !4550, file: !3, line: 1532, type: !868)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 1531, column: 2)
!4551 = distinct !DILexicalBlock(scope: !4547, file: !3, line: 1529, column: 16)
!4552 = !DILocalVariable(name: "val", scope: !4553, file: !3, line: 1559, type: !760)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 1558, column: 3)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 1554, column: 17)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 1548, column: 12)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 1547, column: 6)
!4557 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 1541, column: 8)
!4558 = !DILocalVariable(name: "insn_to_delete", scope: !4559, file: !3, line: 1601, type: !750)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 1600, column: 2)
!4560 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1599, column: 11)
!4561 = !DILocation(line: 0, scope: !4497)
!4562 = !DILocation(line: 1309, column: 3, scope: !4497)
!4563 = !DILocation(line: 1309, column: 17, scope: !4497)
!4564 = !DILocation(line: 1311, column: 3, scope: !4497)
!4565 = !DILocation(line: 1312, column: 36, scope: !4497)
!4566 = !DILocation(line: 1314, column: 3, scope: !4497)
!4567 = !DILocation(line: 1315, column: 3, scope: !4497)
!4568 = !DILocation(line: 1315, column: 15, scope: !4497)
!4569 = !DILocation(line: 1319, column: 7, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1319, column: 7)
!4571 = !DILocation(line: 1319, column: 23, scope: !4570)
!4572 = !DILocation(line: 1319, column: 30, scope: !4570)
!4573 = !DILocation(line: 1319, column: 49, scope: !4570)
!4574 = !DILocation(line: 1319, column: 7, scope: !4497)
!4575 = !DILocation(line: 1322, column: 9, scope: !4497)
!4576 = !DILocation(line: 1328, column: 34, scope: !4497)
!4577 = !DILocation(line: 1328, column: 8, scope: !4497)
!4578 = !DILocation(line: 1328, column: 57, scope: !4497)
!4579 = !DILocation(line: 1331, column: 8, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1331, column: 7)
!4581 = !DILocation(line: 1331, column: 7, scope: !4497)
!4582 = !DILocation(line: 1335, column: 11, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 1332, column: 5)
!4584 = !DILocation(line: 1336, column: 13, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1335, column: 11)
!4586 = !DILocation(line: 1336, column: 27, scope: !4585)
!4587 = !DILocation(line: 1336, column: 2, scope: !4585)
!4588 = !DILocation(line: 1341, column: 7, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1341, column: 7)
!4590 = !DILocation(line: 1341, column: 22, scope: !4589)
!4591 = !DILocation(line: 1341, column: 7, scope: !4497)
!4592 = !DILocation(line: 1343, column: 11, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 1343, column: 11)
!4594 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 1342, column: 5)
!4595 = !DILocation(line: 1343, column: 36, scope: !4593)
!4596 = !DILocation(line: 1343, column: 11, scope: !4594)
!4597 = !DILocation(line: 1345, column: 8, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 1345, column: 8)
!4599 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1344, column: 2)
!4600 = !DILocation(line: 1345, column: 8, scope: !4599)
!4601 = !DILocation(line: 1346, column: 6, scope: !4598)
!4602 = !DILocation(line: 1347, column: 4, scope: !4599)
!4603 = !DILocation(line: 1348, column: 15, scope: !4599)
!4604 = !DILocation(line: 1348, column: 29, scope: !4599)
!4605 = !DILocation(line: 1349, column: 4, scope: !4599)
!4606 = !DILocation(line: 1353, column: 17, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1353, column: 16)
!4608 = !DILocation(line: 1354, column: 9, scope: !4607)
!4609 = !DILocation(line: 1354, column: 13, scope: !4607)
!4610 = !DILocation(line: 1355, column: 9, scope: !4607)
!4611 = !DILocation(line: 1355, column: 12, scope: !4607)
!4612 = !DILocation(line: 1355, column: 28, scope: !4607)
!4613 = !DILocation(line: 1356, column: 9, scope: !4607)
!4614 = !DILocation(line: 1356, column: 12, scope: !4607)
!4615 = !DILocation(line: 1356, column: 36, scope: !4607)
!4616 = !DILocation(line: 1357, column: 9, scope: !4607)
!4617 = !DILocation(line: 1357, column: 12, scope: !4607)
!4618 = !DILocation(line: 1357, column: 36, scope: !4607)
!4619 = !DILocation(line: 1358, column: 9, scope: !4607)
!4620 = !DILocation(line: 1358, column: 13, scope: !4607)
!4621 = !DILocation(line: 1353, column: 16, scope: !4593)
!4622 = !DILocation(line: 1372, column: 7, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1372, column: 7)
!4624 = !DILocation(line: 1360, column: 8, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 1359, column: 2)
!4626 = !DILocation(line: 1364, column: 19, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 1361, column: 6)
!4628 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 1360, column: 8)
!4629 = !DILocation(line: 1364, column: 33, scope: !4627)
!4630 = !DILocation(line: 1365, column: 8, scope: !4627)
!4631 = !DILocation(line: 1366, column: 6, scope: !4627)
!4632 = !DILocation(line: 1372, column: 7, scope: !4497)
!4633 = !DILocation(line: 1373, column: 16, scope: !4623)
!4634 = !DILocation(line: 1373, column: 30, scope: !4623)
!4635 = !DILocation(line: 1373, column: 5, scope: !4623)
!4636 = !DILocation(line: 1375, column: 8, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1375, column: 7)
!4638 = !DILocation(line: 1375, column: 7, scope: !4497)
!4639 = !DILocation(line: 1377, column: 7, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 1376, column: 5)
!4641 = !DILocation(line: 1378, column: 7, scope: !4640)
!4642 = !DILocation(line: 1381, column: 7, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1381, column: 7)
!4644 = !DILocation(line: 1381, column: 22, scope: !4643)
!4645 = !DILocation(line: 1381, column: 7, scope: !4497)
!4646 = !DILocation(line: 1382, column: 13, scope: !4643)
!4647 = !DILocation(line: 1382, column: 5, scope: !4643)
!4648 = !DILocation(line: 1385, column: 15, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 1384, column: 5)
!4650 = !DILocation(line: 1386, column: 7, scope: !4649)
!4651 = !DILocation(line: 0, scope: !4643)
!4652 = !DILocation(line: 1389, column: 7, scope: !4520)
!4653 = !DILocation(line: 1389, column: 7, scope: !4497)
!4654 = !DILocation(line: 1391, column: 23, scope: !4519)
!4655 = !DILocation(line: 1391, column: 42, scope: !4519)
!4656 = !DILocation(line: 0, scope: !4519)
!4657 = !DILocation(line: 1392, column: 42, scope: !4519)
!4658 = !DILocation(line: 1394, column: 7, scope: !4519)
!4659 = !DILocation(line: 1396, column: 33, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 1396, column: 11)
!4661 = !DILocation(line: 1396, column: 11, scope: !4660)
!4662 = !DILocation(line: 0, scope: !4660)
!4663 = !DILocation(line: 1396, column: 11, scope: !4519)
!4664 = !DILocation(line: 1397, column: 2, scope: !4660)
!4665 = !DILocation(line: 1399, column: 2, scope: !4660)
!4666 = !DILocation(line: 1401, column: 11, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 1401, column: 11)
!4668 = !DILocation(line: 1401, column: 30, scope: !4667)
!4669 = !DILocation(line: 1401, column: 50, scope: !4667)
!4670 = !DILocation(line: 1401, column: 48, scope: !4667)
!4671 = !DILocation(line: 1401, column: 11, scope: !4519)
!4672 = !DILocation(line: 1402, column: 39, scope: !4667)
!4673 = !DILocation(line: 1402, column: 2, scope: !4667)
!4674 = !DILocation(line: 1404, column: 47, scope: !4519)
!4675 = !DILocation(line: 1404, column: 35, scope: !4519)
!4676 = !DILocation(line: 1404, column: 20, scope: !4519)
!4677 = !DILocation(line: 1406, column: 11, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 1406, column: 11)
!4679 = !DILocation(line: 1406, column: 11, scope: !4519)
!4680 = !DILocation(line: 1408, column: 10, scope: !4678)
!4681 = !DILocation(line: 1408, column: 27, scope: !4678)
!4682 = !DILocation(line: 1407, column: 2, scope: !4678)
!4683 = !DILocation(line: 1410, column: 12, scope: !4524)
!4684 = !DILocation(line: 1410, column: 21, scope: !4524)
!4685 = !DILocation(line: 1410, column: 12, scope: !4520)
!4686 = !DILocation(line: 1416, column: 4, scope: !4523)
!4687 = !DILocation(line: 0, scope: !4523)
!4688 = !DILocation(line: 1418, column: 47, scope: !4523)
!4689 = !DILocation(line: 1418, column: 35, scope: !4523)
!4690 = !DILocation(line: 1418, column: 20, scope: !4523)
!4691 = !DILocation(line: 1419, column: 30, scope: !4523)
!4692 = !DILocation(line: 1419, column: 7, scope: !4523)
!4693 = !DILocation(line: 1421, column: 11, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 1421, column: 11)
!4695 = !DILocation(line: 1421, column: 11, scope: !4523)
!4696 = !DILocation(line: 1423, column: 4, scope: !4694)
!4697 = !DILocation(line: 1423, column: 19, scope: !4694)
!4698 = !DILocation(line: 1423, column: 14, scope: !4694)
!4699 = !DILocation(line: 1423, column: 39, scope: !4694)
!4700 = !DILocation(line: 1423, column: 27, scope: !4694)
!4701 = !DILocation(line: 1422, column: 2, scope: !4694)
!4702 = !DILocation(line: 1427, column: 39, scope: !4526)
!4703 = !DILocation(line: 1427, column: 23, scope: !4526)
!4704 = !DILocation(line: 0, scope: !4526)
!4705 = !DILocation(line: 1428, column: 12, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 1428, column: 11)
!4707 = !DILocation(line: 1429, column: 4, scope: !4706)
!4708 = !DILocation(line: 1429, column: 8, scope: !4706)
!4709 = !DILocation(line: 1429, column: 29, scope: !4706)
!4710 = !DILocation(line: 1430, column: 8, scope: !4706)
!4711 = !DILocation(line: 1430, column: 11, scope: !4706)
!4712 = !DILocation(line: 1430, column: 32, scope: !4706)
!4713 = !DILocation(line: 1431, column: 8, scope: !4706)
!4714 = !DILocation(line: 1431, column: 11, scope: !4706)
!4715 = !DILocation(line: 1431, column: 34, scope: !4706)
!4716 = !DILocation(line: 1431, column: 31, scope: !4706)
!4717 = !DILocation(line: 1428, column: 11, scope: !4526)
!4718 = !DILocation(line: 1432, column: 13, scope: !4706)
!4719 = !DILocation(line: 1432, column: 33, scope: !4706)
!4720 = !DILocation(line: 1432, column: 2, scope: !4706)
!4721 = !DILocation(line: 1433, column: 18, scope: !4526)
!4722 = !DILocation(line: 1433, column: 41, scope: !4526)
!4723 = !DILocation(line: 1435, column: 47, scope: !4526)
!4724 = !DILocation(line: 1435, column: 35, scope: !4526)
!4725 = !DILocation(line: 1435, column: 20, scope: !4526)
!4726 = !DILocation(line: 1436, column: 16, scope: !4526)
!4727 = !DILocation(line: 1438, column: 11, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 1438, column: 11)
!4729 = !DILocation(line: 1438, column: 11, scope: !4526)
!4730 = !DILocation(line: 1440, column: 9, scope: !4728)
!4731 = !DILocation(line: 1440, column: 4, scope: !4728)
!4732 = !DILocation(line: 1440, column: 29, scope: !4728)
!4733 = !DILocation(line: 1440, column: 17, scope: !4728)
!4734 = !DILocation(line: 1439, column: 2, scope: !4728)
!4735 = !DILocation(line: 0, scope: !4520)
!4736 = !DILocation(line: 1444, column: 7, scope: !4532)
!4737 = !DILocation(line: 1444, column: 23, scope: !4532)
!4738 = !DILocation(line: 1446, column: 11, scope: !4532)
!4739 = !DILocation(line: 1446, column: 7, scope: !4532)
!4740 = !DILocation(line: 1447, column: 11, scope: !4532)
!4741 = !DILocation(line: 1448, column: 4, scope: !4532)
!4742 = !DILocation(line: 1448, column: 33, scope: !4532)
!4743 = !DILocation(line: 1449, column: 4, scope: !4532)
!4744 = !DILocation(line: 1449, column: 7, scope: !4532)
!4745 = !DILocation(line: 1450, column: 7, scope: !4532)
!4746 = !DILocation(line: 1450, column: 11, scope: !4532)
!4747 = !DILocation(line: 1453, column: 7, scope: !4532)
!4748 = !DILocation(line: 1453, column: 12, scope: !4532)
!4749 = !DILocation(line: 1453, column: 42, scope: !4532)
!4750 = !DILocation(line: 1453, column: 46, scope: !4532)
!4751 = !DILocation(line: 1453, column: 45, scope: !4532)
!4752 = !DILocation(line: 1444, column: 7, scope: !4497)
!4753 = !DILocation(line: 1456, column: 11, scope: !4530)
!4754 = !DILocation(line: 1456, column: 11, scope: !4531)
!4755 = !DILocation(line: 1458, column: 24, scope: !4529)
!4756 = !DILocation(line: 1458, column: 21, scope: !4529)
!4757 = !DILocation(line: 1458, column: 16, scope: !4530)
!4758 = !DILocation(line: 1460, column: 14, scope: !4528)
!4759 = !DILocation(line: 0, scope: !4528)
!4760 = !DILocation(line: 1461, column: 8, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 1461, column: 8)
!4762 = !DILocation(line: 1461, column: 12, scope: !4761)
!4763 = !DILocation(line: 1461, column: 15, scope: !4761)
!4764 = !DILocation(line: 1461, column: 8, scope: !4528)
!4765 = !DILocation(line: 1462, column: 6, scope: !4761)
!4766 = !DILocation(line: 0, scope: !4530)
!4767 = !DILocation(line: 1464, column: 21, scope: !4535)
!4768 = !DILocation(line: 1464, column: 33, scope: !4535)
!4769 = !DILocation(line: 1464, column: 36, scope: !4535)
!4770 = !DILocation(line: 1464, column: 11, scope: !4531)
!4771 = !DILocation(line: 1466, column: 44, scope: !4534)
!4772 = !DILocation(line: 1466, column: 14, scope: !4534)
!4773 = !DILocation(line: 0, scope: !4534)
!4774 = !DILocation(line: 1468, column: 8, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 1468, column: 8)
!4776 = !DILocation(line: 1468, column: 12, scope: !4775)
!4777 = !DILocation(line: 1468, column: 15, scope: !4775)
!4778 = !DILocation(line: 1468, column: 8, scope: !4534)
!4779 = !DILocation(line: 1475, column: 9, scope: !4497)
!4780 = !DILocation(line: 1478, column: 9, scope: !4497)
!4781 = !DILocation(line: 1480, column: 7, scope: !4540)
!4782 = !DILocation(line: 1480, column: 7, scope: !4497)
!4783 = !DILocation(line: 1484, column: 11, scope: !4538)
!4784 = !DILocation(line: 1484, column: 20, scope: !4538)
!4785 = !DILocation(line: 1484, column: 11, scope: !4539)
!4786 = !DILocation(line: 1485, column: 13, scope: !4538)
!4787 = !DILocation(line: 1485, column: 19, scope: !4538)
!4788 = !DILocation(line: 1485, column: 2, scope: !4538)
!4789 = !DILocation(line: 1489, column: 8, scope: !4537)
!4790 = !DILocation(line: 0, scope: !4537)
!4791 = !DILocation(line: 1490, column: 22, scope: !4537)
!4792 = !DILocation(line: 0, scope: !4538)
!4793 = !DILocation(line: 1492, column: 11, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 1492, column: 11)
!4795 = !DILocation(line: 1492, column: 11, scope: !4539)
!4796 = !DILocation(line: 1493, column: 13, scope: !4794)
!4797 = !DILocation(line: 1493, column: 2, scope: !4794)
!4798 = !DILocation(line: 0, scope: !4540)
!4799 = !DILocation(line: 0, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 1519, column: 8)
!4801 = !DILocation(line: 0, scope: !4557)
!4802 = !DILocation(line: 1496, column: 3, scope: !4497)
!4803 = !DILocation(line: 1477, column: 20, scope: !4497)
!4804 = !DILocation(line: 1476, column: 8, scope: !4497)
!4805 = !DILocation(line: 1498, column: 31, scope: !4542)
!4806 = !DILocation(line: 0, scope: !4542)
!4807 = !DILocation(line: 1499, column: 34, scope: !4542)
!4808 = !DILocation(line: 1505, column: 7, scope: !4542)
!4809 = !DILocation(line: 1505, column: 23, scope: !4542)
!4810 = !DILocation(line: 1505, column: 14, scope: !4542)
!4811 = !DILocation(line: 1506, column: 19, scope: !4542)
!4812 = distinct !{!4812, !4808, !4811}
!4813 = !DILocation(line: 1508, column: 19, scope: !4548)
!4814 = !DILocation(line: 1508, column: 32, scope: !4548)
!4815 = !DILocation(line: 1508, column: 29, scope: !4548)
!4816 = !DILocation(line: 1508, column: 11, scope: !4542)
!4817 = !DILocation(line: 1510, column: 16, scope: !4547)
!4818 = !DILocation(line: 1510, column: 16, scope: !4548)
!4819 = !DILocation(line: 1513, column: 8, scope: !4546)
!4820 = !DILocation(line: 0, scope: !4546)
!4821 = !DILocation(line: 1519, column: 9, scope: !4800)
!4822 = !DILocation(line: 1519, column: 27, scope: !4800)
!4823 = !DILocation(line: 1519, column: 24, scope: !4800)
!4824 = !DILocation(line: 1520, column: 8, scope: !4800)
!4825 = !DILocation(line: 1520, column: 12, scope: !4800)
!4826 = !DILocation(line: 1520, column: 37, scope: !4800)
!4827 = !DILocation(line: 1520, column: 27, scope: !4800)
!4828 = !DILocation(line: 1519, column: 8, scope: !4546)
!4829 = !DILocation(line: 1523, column: 8, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 1521, column: 6)
!4831 = !DILocation(line: 1524, column: 6, scope: !4830)
!4832 = !DILocation(line: 1525, column: 8, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 1525, column: 8)
!4834 = !DILocation(line: 1525, column: 8, scope: !4546)
!4835 = !DILocation(line: 1527, column: 8, scope: !4833)
!4836 = !DILocation(line: 1527, column: 44, scope: !4833)
!4837 = !DILocation(line: 1526, column: 6, scope: !4833)
!4838 = !DILocation(line: 1529, column: 25, scope: !4551)
!4839 = !DILocation(line: 1529, column: 37, scope: !4551)
!4840 = !DILocation(line: 1529, column: 34, scope: !4551)
!4841 = !DILocation(line: 1530, column: 9, scope: !4551)
!4842 = !DILocation(line: 1530, column: 21, scope: !4551)
!4843 = !DILocation(line: 1530, column: 33, scope: !4551)
!4844 = !DILocation(line: 1530, column: 30, scope: !4551)
!4845 = !DILocation(line: 1529, column: 16, scope: !4547)
!4846 = !DILocation(line: 1533, column: 8, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 1533, column: 8)
!4848 = !DILocation(line: 1533, column: 8, scope: !4550)
!4849 = !DILocation(line: 1535, column: 8, scope: !4847)
!4850 = !DILocation(line: 1536, column: 21, scope: !4847)
!4851 = !DILocation(line: 1536, column: 8, scope: !4847)
!4852 = !DILocation(line: 1536, column: 41, scope: !4847)
!4853 = !DILocation(line: 1536, column: 28, scope: !4847)
!4854 = !DILocation(line: 1534, column: 6, scope: !4847)
!4855 = !DILocation(line: 1541, column: 16, scope: !4557)
!4856 = !DILocation(line: 1541, column: 8, scope: !4557)
!4857 = !DILocation(line: 1542, column: 8, scope: !4557)
!4858 = !DILocation(line: 1543, column: 11, scope: !4557)
!4859 = !DILocation(line: 1543, column: 29, scope: !4557)
!4860 = !DILocation(line: 1543, column: 18, scope: !4557)
!4861 = !DILocation(line: 1544, column: 8, scope: !4557)
!4862 = !DILocation(line: 1544, column: 18, scope: !4557)
!4863 = !DILocation(line: 1544, column: 37, scope: !4557)
!4864 = !DILocation(line: 1544, column: 26, scope: !4557)
!4865 = !DILocation(line: 1545, column: 8, scope: !4557)
!4866 = !DILocation(line: 1545, column: 50, scope: !4557)
!4867 = !DILocation(line: 1545, column: 43, scope: !4557)
!4868 = !DILocation(line: 1545, column: 11, scope: !4557)
!4869 = !DILocation(line: 1541, column: 8, scope: !4550)
!4870 = !DILocation(line: 1548, column: 12, scope: !4555)
!4871 = !DILocation(line: 1548, column: 27, scope: !4555)
!4872 = !DILocation(line: 1548, column: 12, scope: !4556)
!4873 = !DILocation(line: 1550, column: 9, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 1550, column: 9)
!4875 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 1549, column: 3)
!4876 = !DILocation(line: 1550, column: 32, scope: !4874)
!4877 = !DILocation(line: 1551, column: 9, scope: !4874)
!4878 = !DILocation(line: 1551, column: 20, scope: !4874)
!4879 = !DILocation(line: 1551, column: 30, scope: !4874)
!4880 = !DILocation(line: 1550, column: 9, scope: !4875)
!4881 = !DILocation(line: 1554, column: 25, scope: !4554)
!4882 = !DILocation(line: 1554, column: 38, scope: !4554)
!4883 = !DILocation(line: 1554, column: 35, scope: !4554)
!4884 = !DILocation(line: 1555, column: 23, scope: !4554)
!4885 = !DILocation(line: 1555, column: 10, scope: !4554)
!4886 = !DILocation(line: 1560, column: 5, scope: !4553)
!4887 = !DILocation(line: 1561, column: 35, scope: !4553)
!4888 = !DILocation(line: 1562, column: 6, scope: !4553)
!4889 = !DILocation(line: 1562, column: 21, scope: !4553)
!4890 = !DILocation(line: 1563, column: 6, scope: !4553)
!4891 = !DILocation(line: 1561, column: 11, scope: !4553)
!4892 = !DILocation(line: 0, scope: !4553)
!4893 = !DILocation(line: 1565, column: 9, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 1565, column: 9)
!4895 = !DILocation(line: 1565, column: 22, scope: !4894)
!4896 = !DILocation(line: 1567, column: 5, scope: !4553)
!4897 = !DILocation(line: 1568, column: 9, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 1568, column: 9)
!4899 = !DILocation(line: 1568, column: 13, scope: !4898)
!4900 = !DILocation(line: 1568, column: 16, scope: !4898)
!4901 = !DILocation(line: 1568, column: 9, scope: !4553)
!4902 = !DILocation(line: 1573, column: 13, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 1573, column: 4)
!4904 = !DILocation(line: 0, scope: !4550)
!4905 = !DILocation(line: 1574, column: 43, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 1573, column: 4)
!4907 = !DILocation(line: 1573, column: 9, scope: !4903)
!4908 = !DILocation(line: 1574, column: 13, scope: !4906)
!4909 = !DILocation(line: 0, scope: !4903)
!4910 = !DILocation(line: 1574, column: 20, scope: !4906)
!4911 = !DILocation(line: 1574, column: 11, scope: !4906)
!4912 = !DILocation(line: 1574, column: 28, scope: !4906)
!4913 = !DILocation(line: 1574, column: 33, scope: !4906)
!4914 = !DILocation(line: 1573, column: 4, scope: !4903)
!4915 = !DILocation(line: 1576, column: 49, scope: !4906)
!4916 = !DILocation(line: 1576, column: 39, scope: !4906)
!4917 = !DILocation(line: 1576, column: 37, scope: !4906)
!4918 = !DILocation(line: 1576, column: 6, scope: !4906)
!4919 = !DILocation(line: 1575, column: 10, scope: !4906)
!4920 = !DILocation(line: 1573, column: 4, scope: !4906)
!4921 = distinct !{!4921, !4914, !4922}
!4922 = !DILocation(line: 1576, column: 54, scope: !4903)
!4923 = !DILocation(line: 1578, column: 24, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 1578, column: 16)
!4925 = !DILocation(line: 1578, column: 16, scope: !4924)
!4926 = !DILocation(line: 1578, column: 16, scope: !4551)
!4927 = !DILocation(line: 1583, column: 39, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1583, column: 8)
!4929 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 1582, column: 2)
!4930 = !DILocation(line: 1584, column: 10, scope: !4928)
!4931 = !DILocation(line: 1585, column: 18, scope: !4928)
!4932 = !DILocation(line: 1583, column: 8, scope: !4928)
!4933 = !DILocation(line: 1583, column: 8, scope: !4929)
!4934 = !DILocation(line: 1588, column: 20, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 1587, column: 6)
!4936 = !DILocation(line: 1589, column: 16, scope: !4935)
!4937 = !DILocation(line: 1589, column: 26, scope: !4935)
!4938 = !DILocation(line: 1590, column: 6, scope: !4935)
!4939 = !DILocation(line: 1595, column: 11, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1595, column: 11)
!4941 = !DILocation(line: 0, scope: !4548)
!4942 = !DILocation(line: 1596, column: 4, scope: !4940)
!4943 = !DILocation(line: 1596, column: 12, scope: !4940)
!4944 = !DILocation(line: 1596, column: 7, scope: !4940)
!4945 = !DILocation(line: 1595, column: 11, scope: !4542)
!4946 = !DILocation(line: 1597, column: 2, scope: !4940)
!4947 = !DILocation(line: 1599, column: 11, scope: !4560)
!4948 = !DILocation(line: 1599, column: 11, scope: !4542)
!4949 = !DILocation(line: 0, scope: !4559)
!4950 = !DILocation(line: 1603, column: 8, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 1603, column: 8)
!4952 = !DILocation(line: 0, scope: !4951)
!4953 = !DILocation(line: 1603, column: 8, scope: !4559)
!4954 = !DILocation(line: 1604, column: 12, scope: !4951)
!4955 = !DILocation(line: 1604, column: 29, scope: !4951)
!4956 = !DILocation(line: 1604, column: 6, scope: !4951)
!4957 = !DILocation(line: 1606, column: 26, scope: !4951)
!4958 = !DILocation(line: 1608, column: 4, scope: !4559)
!4959 = !DILocation(line: 1609, column: 2, scope: !4559)
!4960 = distinct !{!4960, !4802, !4961}
!4961 = !DILocation(line: 1614, column: 5, scope: !4497)
!4962 = !DILocation(line: 1617, column: 33, scope: !4497)
!4963 = !DILocation(line: 1617, column: 15, scope: !4497)
!4964 = !DILocation(line: 1617, column: 20, scope: !4497)
!4965 = !DILocation(line: 1618, column: 24, scope: !4497)
!4966 = !DILocation(line: 1619, column: 15, scope: !4497)
!4967 = !DILocation(line: 1619, column: 19, scope: !4497)
!4968 = !DILocation(line: 1620, column: 27, scope: !4497)
!4969 = !DILocation(line: 1620, column: 15, scope: !4497)
!4970 = !DILocation(line: 1620, column: 25, scope: !4497)
!4971 = !DILocation(line: 1621, column: 15, scope: !4497)
!4972 = !DILocation(line: 1621, column: 24, scope: !4497)
!4973 = !DILocation(line: 1622, column: 26, scope: !4497)
!4974 = !DILocation(line: 1622, column: 15, scope: !4497)
!4975 = !DILocation(line: 1622, column: 24, scope: !4497)
!4976 = !DILocation(line: 1623, column: 13, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1623, column: 7)
!4978 = !DILocation(line: 0, scope: !4977)
!4979 = !DILocation(line: 1623, column: 7, scope: !4497)
!4980 = !DILocation(line: 1625, column: 28, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 1624, column: 5)
!4982 = !DILocation(line: 1626, column: 42, scope: !4981)
!4983 = !DILocation(line: 1626, column: 48, scope: !4981)
!4984 = !DILocation(line: 1627, column: 49, scope: !4981)
!4985 = !DILocation(line: 1627, column: 42, scope: !4981)
!4986 = !DILocation(line: 1627, column: 47, scope: !4981)
!4987 = !DILocation(line: 1628, column: 5, scope: !4981)
!4988 = !DILocation(line: 1631, column: 28, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 1630, column: 5)
!4990 = !DILocation(line: 1632, column: 52, scope: !4989)
!4991 = !DILocation(line: 1632, column: 19, scope: !4989)
!4992 = !DILocation(line: 1632, column: 36, scope: !4989)
!4993 = !DILocation(line: 1632, column: 50, scope: !4989)
!4994 = !DILocation(line: 1634, column: 26, scope: !4497)
!4995 = !DILocation(line: 1634, column: 15, scope: !4497)
!4996 = !DILocation(line: 1634, column: 24, scope: !4497)
!4997 = !DILocation(line: 1635, column: 23, scope: !4497)
!4998 = !DILocation(line: 1635, column: 15, scope: !4497)
!4999 = !DILocation(line: 1635, column: 21, scope: !4497)
!5000 = !DILocation(line: 1636, column: 28, scope: !4497)
!5001 = !DILocation(line: 1636, column: 15, scope: !4497)
!5002 = !DILocation(line: 1636, column: 19, scope: !4497)
!5003 = !DILocation(line: 1637, column: 24, scope: !4497)
!5004 = !DILocation(line: 1637, column: 40, scope: !4497)
!5005 = !DILocation(line: 1637, column: 15, scope: !4497)
!5006 = !DILocation(line: 1637, column: 22, scope: !4497)
!5007 = !DILocation(line: 1638, column: 15, scope: !4497)
!5008 = !DILocation(line: 1638, column: 19, scope: !4497)
!5009 = !DILocation(line: 1639, column: 15, scope: !4497)
!5010 = !DILocation(line: 1639, column: 25, scope: !4497)
!5011 = !DILocation(line: 1640, column: 15, scope: !4497)
!5012 = !DILocation(line: 1640, column: 32, scope: !4497)
!5013 = !DILocation(line: 1645, column: 10, scope: !4497)
!5014 = !DILocation(line: 1645, column: 3, scope: !4497)
!5015 = !DILocation(line: 1646, column: 1, scope: !4497)
!5016 = distinct !DISubprogram(name: "check_mem_read_rtx", scope: !3, file: !3, line: 2043, type: !5017, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5019)
!5017 = !DISubroutineType(types: !5018)
!5018 = !{!728, !1913, !732}
!5019 = !{!5020, !5021, !5022, !5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5037, !5040, !5041, !5043, !5046, !5047, !5049, !5050, !5052, !5053, !5055}
!5020 = !DILocalVariable(name: "loc", arg: 1, scope: !5016, file: !3, line: 2043, type: !1913)
!5021 = !DILocalVariable(name: "data", arg: 2, scope: !5016, file: !3, line: 2043, type: !732)
!5022 = !DILocalVariable(name: "mem", scope: !5016, file: !3, line: 2045, type: !760)
!5023 = !DILocalVariable(name: "mem_addr", scope: !5016, file: !3, line: 2045, type: !760)
!5024 = !DILocalVariable(name: "bb_info", scope: !5016, file: !3, line: 2046, type: !745)
!5025 = !DILocalVariable(name: "insn_info", scope: !5016, file: !3, line: 2047, type: !750)
!5026 = !DILocalVariable(name: "offset", scope: !5016, file: !3, line: 2048, type: !868)
!5027 = !DILocalVariable(name: "width", scope: !5016, file: !3, line: 2049, type: !868)
!5028 = !DILocalVariable(name: "spill_alias_set", scope: !5016, file: !3, line: 2050, type: !739)
!5029 = !DILocalVariable(name: "base", scope: !5016, file: !3, line: 2051, type: !831)
!5030 = !DILocalVariable(name: "group_id", scope: !5016, file: !3, line: 2052, type: !728)
!5031 = !DILocalVariable(name: "read_info", scope: !5016, file: !3, line: 2053, type: !1846)
!5032 = !DILocalVariable(name: "group", scope: !5033, file: !3, line: 2106, type: !1885)
!5033 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 2105, column: 2)
!5034 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 2102, column: 11)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 2101, column: 5)
!5036 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 2098, column: 7)
!5037 = !DILocalVariable(name: "i_ptr", scope: !5038, file: !3, line: 2119, type: !750)
!5038 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 2118, column: 5)
!5039 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 2117, column: 7)
!5040 = !DILocalVariable(name: "last", scope: !5038, file: !3, line: 2120, type: !750)
!5041 = !DILocalVariable(name: "store_info", scope: !5042, file: !3, line: 2128, type: !1818)
!5042 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 2127, column: 2)
!5043 = !DILocalVariable(name: "i_ptr", scope: !5044, file: !3, line: 2153, type: !750)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 2150, column: 5)
!5045 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 2149, column: 12)
!5046 = !DILocalVariable(name: "last", scope: !5044, file: !3, line: 2154, type: !750)
!5047 = !DILocalVariable(name: "remove", scope: !5048, file: !3, line: 2168, type: !727)
!5048 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 2167, column: 2)
!5049 = !DILocalVariable(name: "store_info", scope: !5048, file: !3, line: 2169, type: !1818)
!5050 = !DILocalVariable(name: "i_ptr", scope: !5051, file: !3, line: 2240, type: !750)
!5051 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 2239, column: 5)
!5052 = !DILocalVariable(name: "last", scope: !5051, file: !3, line: 2241, type: !750)
!5053 = !DILocalVariable(name: "remove", scope: !5054, file: !3, line: 2251, type: !727)
!5054 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 2250, column: 2)
!5055 = !DILocalVariable(name: "store_info", scope: !5054, file: !3, line: 2252, type: !1818)
!5056 = !DILocation(line: 0, scope: !5016)
!5057 = !DILocation(line: 2045, column: 13, scope: !5016)
!5058 = !DILocation(line: 2048, column: 3, scope: !5016)
!5059 = !DILocation(line: 2048, column: 17, scope: !5016)
!5060 = !DILocation(line: 2050, column: 3, scope: !5016)
!5061 = !DILocation(line: 2050, column: 18, scope: !5016)
!5062 = !DILocation(line: 2051, column: 3, scope: !5016)
!5063 = !DILocation(line: 2051, column: 15, scope: !5016)
!5064 = !DILocation(line: 2052, column: 3, scope: !5016)
!5065 = !DILocation(line: 2055, column: 8, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 2055, column: 7)
!5067 = !DILocation(line: 2055, column: 12, scope: !5066)
!5068 = !DILocation(line: 2055, column: 16, scope: !5066)
!5069 = !DILocation(line: 2055, column: 7, scope: !5016)
!5070 = !DILocation(line: 2058, column: 13, scope: !5016)
!5071 = !DILocation(line: 2059, column: 24, scope: !5016)
!5072 = !DILocation(line: 2061, column: 8, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 2061, column: 7)
!5074 = !DILocation(line: 2061, column: 28, scope: !5073)
!5075 = !DILocation(line: 2062, column: 7, scope: !5073)
!5076 = !DILocation(line: 2062, column: 11, scope: !5073)
!5077 = !DILocation(line: 2062, column: 10, scope: !5073)
!5078 = !DILocation(line: 2061, column: 7, scope: !5016)
!5079 = !DILocation(line: 2064, column: 11, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 2064, column: 11)
!5081 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 2063, column: 5)
!5082 = !DILocation(line: 2064, column: 11, scope: !5081)
!5083 = !DILocation(line: 2065, column: 2, scope: !5080)
!5084 = !DILocation(line: 2066, column: 7, scope: !5081)
!5085 = !DILocation(line: 2067, column: 18, scope: !5081)
!5086 = !DILocation(line: 2067, column: 32, scope: !5081)
!5087 = !DILocation(line: 2068, column: 7, scope: !5081)
!5088 = !DILocation(line: 2073, column: 7, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 2073, column: 7)
!5090 = !DILocation(line: 2073, column: 7, scope: !5016)
!5091 = !DILocation(line: 2076, column: 8, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 2076, column: 7)
!5093 = !DILocation(line: 2076, column: 7, scope: !5016)
!5094 = !DILocation(line: 2078, column: 11, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 2078, column: 11)
!5096 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 2077, column: 5)
!5097 = !DILocation(line: 2078, column: 11, scope: !5096)
!5098 = !DILocation(line: 2079, column: 2, scope: !5095)
!5099 = !DILocation(line: 2080, column: 7, scope: !5096)
!5100 = !DILocation(line: 2081, column: 7, scope: !5096)
!5101 = !DILocation(line: 2084, column: 7, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 2084, column: 7)
!5103 = !DILocation(line: 2084, column: 22, scope: !5102)
!5104 = !DILocation(line: 2084, column: 7, scope: !5016)
!5105 = !DILocation(line: 2087, column: 13, scope: !5102)
!5106 = !DILocation(line: 0, scope: !5102)
!5107 = !DILocation(line: 2089, column: 41, scope: !5016)
!5108 = !DILocation(line: 2089, column: 29, scope: !5016)
!5109 = !DILocation(line: 2089, column: 15, scope: !5016)
!5110 = !DILocation(line: 2090, column: 25, scope: !5016)
!5111 = !DILocation(line: 2090, column: 14, scope: !5016)
!5112 = !DILocation(line: 2090, column: 23, scope: !5016)
!5113 = !DILocation(line: 2091, column: 14, scope: !5016)
!5114 = !DILocation(line: 2091, column: 18, scope: !5016)
!5115 = !DILocation(line: 2092, column: 26, scope: !5016)
!5116 = !DILocation(line: 2092, column: 14, scope: !5016)
!5117 = !DILocation(line: 2092, column: 24, scope: !5016)
!5118 = !DILocation(line: 2093, column: 22, scope: !5016)
!5119 = !DILocation(line: 2093, column: 14, scope: !5016)
!5120 = !DILocation(line: 2093, column: 20, scope: !5016)
!5121 = !DILocation(line: 2094, column: 27, scope: !5016)
!5122 = !DILocation(line: 2094, column: 20, scope: !5016)
!5123 = !DILocation(line: 2094, column: 14, scope: !5016)
!5124 = !DILocation(line: 2094, column: 18, scope: !5016)
!5125 = !DILocation(line: 2095, column: 32, scope: !5016)
!5126 = !DILocation(line: 2095, column: 14, scope: !5016)
!5127 = !DILocation(line: 2095, column: 19, scope: !5016)
!5128 = !DILocation(line: 2096, column: 23, scope: !5016)
!5129 = !DILocation(line: 2098, column: 7, scope: !5036)
!5130 = !DILocation(line: 2098, column: 7, scope: !5016)
!5131 = !DILocation(line: 2102, column: 11, scope: !5034)
!5132 = !DILocation(line: 2102, column: 20, scope: !5034)
!5133 = !DILocation(line: 2102, column: 11, scope: !5035)
!5134 = !DILocation(line: 2103, column: 13, scope: !5034)
!5135 = !DILocation(line: 2103, column: 19, scope: !5034)
!5136 = !DILocation(line: 2103, column: 2, scope: !5034)
!5137 = !DILocation(line: 2107, column: 8, scope: !5033)
!5138 = !DILocation(line: 0, scope: !5033)
!5139 = !DILocation(line: 2108, column: 22, scope: !5033)
!5140 = !DILocation(line: 2110, column: 11, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 2110, column: 11)
!5142 = !DILocation(line: 0, scope: !5034)
!5143 = !DILocation(line: 2110, column: 11, scope: !5035)
!5144 = !DILocation(line: 2111, column: 13, scope: !5141)
!5145 = !DILocation(line: 2111, column: 2, scope: !5141)
!5146 = !DILocation(line: 0, scope: !5036)
!5147 = !DILocation(line: 2117, column: 7, scope: !5039)
!5148 = !DILocation(line: 2117, column: 7, scope: !5016)
!5149 = !DILocation(line: 2119, column: 27, scope: !5038)
!5150 = !DILocation(line: 0, scope: !5038)
!5151 = !DILocation(line: 2122, column: 11, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 2122, column: 11)
!5153 = !DILocation(line: 2122, column: 11, scope: !5038)
!5154 = !DILocation(line: 2123, column: 2, scope: !5152)
!5155 = !DILocation(line: 2126, column: 7, scope: !5038)
!5156 = !DILocation(line: 2120, column: 19, scope: !5038)
!5157 = !DILocation(line: 2128, column: 37, scope: !5042)
!5158 = !DILocation(line: 2131, column: 4, scope: !5042)
!5159 = !DILocation(line: 0, scope: !5042)
!5160 = !DILocation(line: 2131, column: 24, scope: !5042)
!5161 = !DILocation(line: 2131, column: 11, scope: !5042)
!5162 = !DILocation(line: 2132, column: 31, scope: !5042)
!5163 = distinct !{!5163, !5158, !5162}
!5164 = !DILocation(line: 2134, column: 20, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5042, file: !3, line: 2134, column: 8)
!5166 = !DILocation(line: 2134, column: 33, scope: !5165)
!5167 = !DILocation(line: 2134, column: 30, scope: !5165)
!5168 = !DILocation(line: 2134, column: 8, scope: !5042)
!5169 = !DILocation(line: 2136, column: 12, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5171, file: !3, line: 2136, column: 12)
!5171 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 2135, column: 6)
!5172 = !DILocation(line: 2136, column: 12, scope: !5171)
!5173 = !DILocation(line: 2137, column: 3, scope: !5170)
!5174 = !DILocation(line: 2139, column: 12, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5171, file: !3, line: 2139, column: 12)
!5176 = !DILocation(line: 0, scope: !5175)
!5177 = !DILocation(line: 2139, column: 12, scope: !5171)
!5178 = !DILocation(line: 2140, column: 9, scope: !5175)
!5179 = !DILocation(line: 2140, column: 26, scope: !5175)
!5180 = !DILocation(line: 2140, column: 3, scope: !5175)
!5181 = !DILocation(line: 2142, column: 23, scope: !5175)
!5182 = !DILocation(line: 2146, column: 19, scope: !5042)
!5183 = distinct !{!5183, !5155, !5184}
!5184 = !DILocation(line: 2147, column: 2, scope: !5038)
!5185 = !DILocation(line: 2149, column: 12, scope: !5045)
!5186 = !DILocation(line: 2149, column: 21, scope: !5045)
!5187 = !DILocation(line: 0, scope: !5045)
!5188 = !DILocation(line: 2149, column: 12, scope: !5039)
!5189 = !DILocation(line: 0, scope: !5044)
!5190 = !DILocation(line: 2156, column: 11, scope: !5044)
!5191 = !DILocation(line: 2158, column: 14, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 2158, column: 8)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 2157, column: 2)
!5194 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 2156, column: 11)
!5195 = !DILocation(line: 2158, column: 8, scope: !5193)
!5196 = !DILocation(line: 2159, column: 6, scope: !5192)
!5197 = !DILocation(line: 2163, column: 23, scope: !5192)
!5198 = !DILocation(line: 2163, column: 18, scope: !5192)
!5199 = !DILocation(line: 2163, column: 43, scope: !5192)
!5200 = !DILocation(line: 2163, column: 31, scope: !5192)
!5201 = !DILocation(line: 2162, column: 6, scope: !5192)
!5202 = !DILocation(line: 0, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 2189, column: 12)
!5204 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 2186, column: 6)
!5205 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 2185, column: 13)
!5206 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 2176, column: 8)
!5207 = !DILocation(line: 0, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 2200, column: 9)
!5209 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 2199, column: 3)
!5210 = !DILocation(line: 2166, column: 7, scope: !5044)
!5211 = !DILocation(line: 2154, column: 19, scope: !5044)
!5212 = !DILocation(line: 0, scope: !5048)
!5213 = !DILocation(line: 2169, column: 37, scope: !5048)
!5214 = !DILocation(line: 2172, column: 4, scope: !5048)
!5215 = !DILocation(line: 2172, column: 24, scope: !5048)
!5216 = !DILocation(line: 2172, column: 11, scope: !5048)
!5217 = !DILocation(line: 2173, column: 31, scope: !5048)
!5218 = distinct !{!5218, !5214, !5217}
!5219 = !DILocation(line: 2176, column: 20, scope: !5206)
!5220 = !DILocation(line: 2176, column: 29, scope: !5206)
!5221 = !DILocation(line: 2176, column: 8, scope: !5048)
!5222 = !DILocation(line: 2180, column: 45, scope: !5206)
!5223 = !DILocation(line: 2181, column: 12, scope: !5206)
!5224 = !DILocation(line: 2182, column: 24, scope: !5206)
!5225 = !DILocation(line: 2180, column: 10, scope: !5206)
!5226 = !DILocation(line: 2179, column: 6, scope: !5206)
!5227 = !DILocation(line: 2185, column: 13, scope: !5205)
!5228 = !DILocation(line: 2185, column: 22, scope: !5205)
!5229 = !DILocation(line: 2185, column: 13, scope: !5206)
!5230 = !DILocation(line: 2189, column: 12, scope: !5204)
!5231 = !DILocation(line: 2191, column: 42, scope: !5203)
!5232 = !DILocation(line: 2192, column: 9, scope: !5203)
!5233 = !DILocation(line: 2193, column: 21, scope: !5203)
!5234 = !DILocation(line: 2191, column: 7, scope: !5203)
!5235 = !DILocation(line: 2190, column: 3, scope: !5203)
!5236 = !DILocation(line: 2200, column: 21, scope: !5208)
!5237 = !DILocation(line: 2200, column: 9, scope: !5208)
!5238 = !DILocation(line: 2201, column: 9, scope: !5208)
!5239 = !DILocation(line: 2201, column: 12, scope: !5208)
!5240 = !DILocation(line: 2201, column: 34, scope: !5208)
!5241 = !DILocation(line: 2201, column: 19, scope: !5208)
!5242 = !DILocation(line: 2202, column: 9, scope: !5208)
!5243 = !DILocation(line: 2202, column: 19, scope: !5208)
!5244 = !DILocation(line: 2202, column: 42, scope: !5208)
!5245 = !DILocation(line: 2202, column: 27, scope: !5208)
!5246 = !DILocation(line: 2203, column: 9, scope: !5208)
!5247 = !DILocation(line: 2204, column: 15, scope: !5208)
!5248 = !DILocation(line: 2204, column: 8, scope: !5208)
!5249 = !DILocation(line: 2203, column: 12, scope: !5208)
!5250 = !DILocation(line: 2206, column: 9, scope: !5208)
!5251 = !DILocation(line: 2207, column: 37, scope: !5208)
!5252 = !DILocation(line: 2206, column: 12, scope: !5208)
!5253 = !DILocation(line: 2200, column: 9, scope: !5209)
!5254 = !DILocation(line: 2212, column: 10, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 2212, column: 9)
!5256 = !DILocation(line: 2212, column: 31, scope: !5255)
!5257 = !DILocation(line: 2212, column: 17, scope: !5255)
!5258 = !DILocation(line: 2213, column: 9, scope: !5255)
!5259 = !DILocation(line: 2213, column: 20, scope: !5255)
!5260 = !DILocation(line: 2213, column: 42, scope: !5255)
!5261 = !DILocation(line: 2213, column: 28, scope: !5255)
!5262 = !DILocation(line: 2212, column: 9, scope: !5209)
!5263 = !DILocation(line: 0, scope: !5206)
!5264 = !DILocation(line: 2223, column: 8, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 2223, column: 8)
!5266 = !DILocation(line: 2223, column: 8, scope: !5048)
!5267 = !DILocation(line: 2225, column: 12, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 2225, column: 12)
!5269 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 2224, column: 6)
!5270 = !DILocation(line: 2225, column: 12, scope: !5269)
!5271 = !DILocation(line: 2226, column: 3, scope: !5268)
!5272 = !DILocation(line: 2228, column: 12, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 2228, column: 12)
!5274 = !DILocation(line: 0, scope: !5273)
!5275 = !DILocation(line: 2228, column: 12, scope: !5269)
!5276 = !DILocation(line: 2229, column: 9, scope: !5273)
!5277 = !DILocation(line: 2229, column: 26, scope: !5273)
!5278 = !DILocation(line: 2229, column: 3, scope: !5273)
!5279 = !DILocation(line: 2231, column: 23, scope: !5273)
!5280 = !DILocation(line: 2235, column: 19, scope: !5048)
!5281 = !DILocation(line: 2236, column: 2, scope: !5044)
!5282 = distinct !{!5282, !5210, !5281}
!5283 = !DILocation(line: 0, scope: !5051)
!5284 = !DILocation(line: 2242, column: 11, scope: !5051)
!5285 = !DILocation(line: 2244, column: 4, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 2243, column: 2)
!5287 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 2242, column: 11)
!5288 = !DILocation(line: 2245, column: 22, scope: !5286)
!5289 = !DILocation(line: 2245, column: 4, scope: !5286)
!5290 = !DILocation(line: 2246, column: 13, scope: !5286)
!5291 = !DILocation(line: 2246, column: 4, scope: !5286)
!5292 = !DILocation(line: 2247, column: 2, scope: !5286)
!5293 = !DILocation(line: 0, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 2264, column: 8)
!5295 = !DILocation(line: 2249, column: 7, scope: !5051)
!5296 = !DILocation(line: 2240, column: 19, scope: !5051)
!5297 = !DILocation(line: 2241, column: 19, scope: !5051)
!5298 = !DILocation(line: 0, scope: !5054)
!5299 = !DILocation(line: 2252, column: 37, scope: !5054)
!5300 = !DILocation(line: 2254, column: 8, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 2254, column: 8)
!5302 = !DILocation(line: 2254, column: 8, scope: !5054)
!5303 = !DILocation(line: 2256, column: 8, scope: !5301)
!5304 = !DILocation(line: 2255, column: 6, scope: !5301)
!5305 = !DILocation(line: 2259, column: 4, scope: !5054)
!5306 = !DILocation(line: 2259, column: 24, scope: !5054)
!5307 = !DILocation(line: 2259, column: 11, scope: !5054)
!5308 = !DILocation(line: 2264, column: 20, scope: !5294)
!5309 = !DILocation(line: 2264, column: 8, scope: !5294)
!5310 = !DILocation(line: 2265, column: 8, scope: !5294)
!5311 = !DILocation(line: 2265, column: 23, scope: !5294)
!5312 = !DILocation(line: 2265, column: 32, scope: !5294)
!5313 = !DILocation(line: 2266, column: 8, scope: !5294)
!5314 = !DILocation(line: 2266, column: 23, scope: !5294)
!5315 = !DILocation(line: 2266, column: 35, scope: !5294)
!5316 = !DILocation(line: 2266, column: 32, scope: !5294)
!5317 = !DILocation(line: 2267, column: 8, scope: !5294)
!5318 = !DILocation(line: 2268, column: 11, scope: !5294)
!5319 = !DILocation(line: 2268, column: 33, scope: !5294)
!5320 = !DILocation(line: 2268, column: 18, scope: !5294)
!5321 = !DILocation(line: 2269, column: 8, scope: !5294)
!5322 = !DILocation(line: 2269, column: 18, scope: !5294)
!5323 = !DILocation(line: 2269, column: 41, scope: !5294)
!5324 = !DILocation(line: 2269, column: 26, scope: !5294)
!5325 = !DILocation(line: 2270, column: 8, scope: !5294)
!5326 = !DILocation(line: 2271, column: 14, scope: !5294)
!5327 = !DILocation(line: 2271, column: 7, scope: !5294)
!5328 = !DILocation(line: 2270, column: 11, scope: !5294)
!5329 = !DILocation(line: 2272, column: 8, scope: !5294)
!5330 = !DILocation(line: 2273, column: 20, scope: !5294)
!5331 = !DILocation(line: 2272, column: 11, scope: !5294)
!5332 = !DILocation(line: 2264, column: 8, scope: !5054)
!5333 = !DILocation(line: 2276, column: 21, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 2276, column: 8)
!5335 = !DILocation(line: 2276, column: 9, scope: !5334)
!5336 = !DILocation(line: 2276, column: 8, scope: !5054)
!5337 = !DILocation(line: 2277, column: 50, scope: !5334)
!5338 = !DILocation(line: 2278, column: 10, scope: !5334)
!5339 = !DILocation(line: 2279, column: 22, scope: !5334)
!5340 = !DILocation(line: 2277, column: 15, scope: !5334)
!5341 = !DILocation(line: 2277, column: 6, scope: !5334)
!5342 = !DILocation(line: 2282, column: 8, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 2282, column: 8)
!5344 = !DILocation(line: 2282, column: 8, scope: !5054)
!5345 = !DILocation(line: 2284, column: 12, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 2284, column: 12)
!5347 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 2283, column: 6)
!5348 = !DILocation(line: 2284, column: 12, scope: !5347)
!5349 = !DILocation(line: 2285, column: 3, scope: !5346)
!5350 = !DILocation(line: 2287, column: 12, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 2287, column: 12)
!5352 = !DILocation(line: 0, scope: !5351)
!5353 = !DILocation(line: 2287, column: 12, scope: !5347)
!5354 = !DILocation(line: 2288, column: 9, scope: !5351)
!5355 = !DILocation(line: 2288, column: 26, scope: !5351)
!5356 = !DILocation(line: 2288, column: 3, scope: !5351)
!5357 = !DILocation(line: 2290, column: 23, scope: !5351)
!5358 = !DILocation(line: 2294, column: 19, scope: !5054)
!5359 = !DILocation(line: 2295, column: 2, scope: !5051)
!5360 = distinct !{!5360, !5295, !5359}
!5361 = !DILocation(line: 2260, column: 31, scope: !5054)
!5362 = distinct !{!5362, !5305, !5361}
!5363 = !DILocation(line: 2297, column: 3, scope: !5016)
!5364 = !DILocation(line: 2298, column: 1, scope: !5016)
!5365 = distinct !DISubprogram(name: "canon_address", scope: !3, file: !3, line: 1063, type: !5366, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5371)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{!727, !760, !5368, !1881, !5369, !5370}
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!5371 = !{!5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5381, !5382, !5385, !5388}
!5372 = !DILocalVariable(name: "mem", arg: 1, scope: !5365, file: !3, line: 1063, type: !760)
!5373 = !DILocalVariable(name: "alias_set_out", arg: 2, scope: !5365, file: !3, line: 1064, type: !5368)
!5374 = !DILocalVariable(name: "group_id", arg: 3, scope: !5365, file: !3, line: 1065, type: !1881)
!5375 = !DILocalVariable(name: "offset", arg: 4, scope: !5365, file: !3, line: 1066, type: !5369)
!5376 = !DILocalVariable(name: "base", arg: 5, scope: !5365, file: !3, line: 1067, type: !5370)
!5377 = !DILocalVariable(name: "address_mode", scope: !5365, file: !3, line: 1069, type: !5)
!5378 = !DILocalVariable(name: "mem_address", scope: !5365, file: !3, line: 1071, type: !760)
!5379 = !DILocalVariable(name: "expanded_address", scope: !5365, file: !3, line: 1072, type: !760)
!5380 = !DILocalVariable(name: "address", scope: !5365, file: !3, line: 1072, type: !760)
!5381 = !DILocalVariable(name: "expanded", scope: !5365, file: !3, line: 1073, type: !728)
!5382 = !DILocalVariable(name: "alias_set", scope: !5383, file: !3, line: 1081, type: !739)
!5383 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1079, column: 5)
!5384 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 1078, column: 7)
!5385 = !DILocalVariable(name: "entry", scope: !5386, file: !3, line: 1086, type: !735)
!5386 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 1085, column: 2)
!5387 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 1084, column: 11)
!5388 = !DILocalVariable(name: "group", scope: !5389, file: !3, line: 1179, type: !1885)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 1178, column: 2)
!5390 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 1176, column: 11)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 1123, column: 5)
!5392 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 1122, column: 3)
!5393 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 1122, column: 3)
!5394 = !DILocation(line: 0, scope: !5365)
!5395 = !DILocation(line: 1070, column: 26, scope: !5365)
!5396 = !DILocation(line: 1070, column: 40, scope: !5365)
!5397 = !DILocation(line: 1070, column: 7, scope: !5365)
!5398 = !DILocation(line: 1071, column: 21, scope: !5365)
!5399 = !DILocation(line: 1078, column: 7, scope: !5384)
!5400 = !DILocation(line: 1078, column: 7, scope: !5365)
!5401 = !DILocation(line: 1081, column: 34, scope: !5383)
!5402 = !DILocation(line: 0, scope: !5383)
!5403 = !DILocation(line: 1082, column: 11, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 1082, column: 11)
!5405 = !DILocation(line: 1082, column: 11, scope: !5383)
!5406 = !DILocation(line: 1083, column: 2, scope: !5404)
!5407 = !DILocation(line: 1084, column: 25, scope: !5387)
!5408 = !DILocation(line: 1084, column: 11, scope: !5387)
!5409 = !DILocation(line: 1084, column: 11, scope: !5383)
!5410 = !DILocation(line: 1087, column: 8, scope: !5386)
!5411 = !DILocation(line: 0, scope: !5386)
!5412 = !DILocation(line: 1090, column: 15, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 1090, column: 8)
!5414 = !DILocation(line: 1090, column: 23, scope: !5413)
!5415 = !DILocation(line: 1090, column: 20, scope: !5413)
!5416 = !DILocation(line: 1090, column: 8, scope: !5386)
!5417 = !DILocation(line: 1092, column: 12, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 1092, column: 12)
!5419 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 1091, column: 6)
!5420 = !DILocation(line: 1092, column: 12, scope: !5419)
!5421 = !DILocation(line: 1095, column: 22, scope: !5418)
!5422 = !DILocation(line: 1096, column: 5, scope: !5418)
!5423 = !DILocation(line: 1093, column: 3, scope: !5418)
!5424 = !DILocation(line: 1098, column: 24, scope: !5419)
!5425 = !DILocation(line: 1098, column: 8, scope: !5419)
!5426 = !DILocation(line: 1099, column: 8, scope: !5419)
!5427 = !DILocation(line: 1102, column: 19, scope: !5386)
!5428 = !DILocation(line: 1103, column: 16, scope: !5386)
!5429 = !DILocation(line: 1103, column: 35, scope: !5386)
!5430 = !DILocation(line: 1103, column: 14, scope: !5386)
!5431 = !DILocation(line: 1104, column: 4, scope: !5386)
!5432 = !DILocation(line: 1108, column: 18, scope: !5365)
!5433 = !DILocation(line: 1110, column: 3, scope: !5365)
!5434 = !DILocation(line: 1112, column: 7, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 1112, column: 7)
!5436 = !DILocation(line: 1112, column: 7, scope: !5365)
!5437 = !DILocation(line: 1114, column: 7, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 1113, column: 5)
!5439 = !DILocation(line: 1115, column: 25, scope: !5438)
!5440 = !DILocation(line: 1115, column: 7, scope: !5438)
!5441 = !DILocation(line: 1116, column: 16, scope: !5438)
!5442 = !DILocation(line: 1116, column: 7, scope: !5438)
!5443 = !DILocation(line: 1117, column: 5, scope: !5438)
!5444 = !DILocation(line: 1122, column: 8, scope: !5393)
!5445 = !DILocation(line: 0, scope: !5393)
!5446 = !DILocation(line: 1122, column: 31, scope: !5392)
!5447 = !DILocation(line: 1122, column: 3, scope: !5393)
!5448 = !DILocation(line: 1124, column: 11, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 1124, column: 11)
!5450 = !DILocation(line: 1124, column: 11, scope: !5391)
!5451 = !DILocation(line: 1137, column: 13, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 1125, column: 2)
!5453 = !DILocation(line: 1136, column: 23, scope: !5452)
!5454 = !DILocation(line: 1141, column: 9, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1141, column: 8)
!5456 = !DILocation(line: 1141, column: 8, scope: !5452)
!5457 = !DILocation(line: 0, scope: !5449)
!5458 = !DILocation(line: 1148, column: 17, scope: !5391)
!5459 = !DILocation(line: 1150, column: 15, scope: !5391)
!5460 = !DILocation(line: 1152, column: 11, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 1152, column: 11)
!5462 = !DILocation(line: 1152, column: 11, scope: !5391)
!5463 = !DILocation(line: 1154, column: 8, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1153, column: 2)
!5465 = !DILocation(line: 1156, column: 8, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 1155, column: 6)
!5467 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 1154, column: 8)
!5468 = !DILocation(line: 1157, column: 26, scope: !5466)
!5469 = !DILocation(line: 1157, column: 8, scope: !5466)
!5470 = !DILocation(line: 1158, column: 17, scope: !5466)
!5471 = !DILocation(line: 1158, column: 8, scope: !5466)
!5472 = !DILocation(line: 1161, column: 13, scope: !5464)
!5473 = !DILocation(line: 1159, column: 6, scope: !5466)
!5474 = !DILocation(line: 1161, column: 4, scope: !5464)
!5475 = !DILocation(line: 1162, column: 22, scope: !5464)
!5476 = !DILocation(line: 1162, column: 4, scope: !5464)
!5477 = !DILocation(line: 1163, column: 13, scope: !5464)
!5478 = !DILocation(line: 1163, column: 4, scope: !5464)
!5479 = !DILocation(line: 1164, column: 2, scope: !5464)
!5480 = !DILocation(line: 1166, column: 11, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 1166, column: 11)
!5482 = !DILocation(line: 1166, column: 30, scope: !5481)
!5483 = !DILocation(line: 1166, column: 11, scope: !5391)
!5484 = !DILocation(line: 1167, column: 12, scope: !5481)
!5485 = !DILocation(line: 0, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 1169, column: 11)
!5487 = !DILocation(line: 1169, column: 11, scope: !5486)
!5488 = !DILocation(line: 1167, column: 2, scope: !5481)
!5489 = !DILocation(line: 0, scope: !5391)
!5490 = !DILocation(line: 1169, column: 30, scope: !5486)
!5491 = !DILocation(line: 1170, column: 4, scope: !5486)
!5492 = !DILocation(line: 1170, column: 7, scope: !5486)
!5493 = !DILocation(line: 1169, column: 11, scope: !5391)
!5494 = !DILocation(line: 1172, column: 14, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1171, column: 2)
!5496 = !DILocation(line: 1172, column: 12, scope: !5495)
!5497 = !DILocation(line: 1173, column: 14, scope: !5495)
!5498 = !DILocation(line: 1174, column: 2, scope: !5495)
!5499 = !DILocation(line: 1176, column: 11, scope: !5390)
!5500 = !DILocation(line: 1177, column: 4, scope: !5390)
!5501 = !DILocation(line: 1177, column: 7, scope: !5390)
!5502 = !DILocation(line: 1176, column: 11, scope: !5391)
!5503 = !DILocation(line: 1179, column: 25, scope: !5389)
!5504 = !DILocation(line: 0, scope: !5389)
!5505 = !DILocation(line: 1181, column: 8, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1181, column: 8)
!5507 = !DILocation(line: 1181, column: 8, scope: !5389)
!5508 = !DILocation(line: 1183, column: 15, scope: !5506)
!5509 = !DILocation(line: 1183, column: 24, scope: !5506)
!5510 = !DILocation(line: 1183, column: 19, scope: !5506)
!5511 = !DILocation(line: 1182, column: 6, scope: !5506)
!5512 = !DILocation(line: 1184, column: 10, scope: !5389)
!5513 = !DILocation(line: 1185, column: 23, scope: !5389)
!5514 = !DILocation(line: 1185, column: 14, scope: !5389)
!5515 = !DILocation(line: 1122, column: 44, scope: !5392)
!5516 = !DILocation(line: 1122, column: 3, scope: !5392)
!5517 = distinct !{!5517, !5447, !5518}
!5518 = !DILocation(line: 1188, column: 5, scope: !5393)
!5519 = !DILocation(line: 1190, column: 11, scope: !5365)
!5520 = !DILocation(line: 1190, column: 9, scope: !5365)
!5521 = !DILocation(line: 1191, column: 13, scope: !5365)
!5522 = !DILocation(line: 1193, column: 7, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 1193, column: 7)
!5524 = !DILocation(line: 1193, column: 13, scope: !5523)
!5525 = !DILocation(line: 1193, column: 7, scope: !5365)
!5526 = !DILocation(line: 1195, column: 11, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 1194, column: 5)
!5528 = !DILocation(line: 1196, column: 2, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1195, column: 11)
!5530 = !DILocation(line: 1199, column: 7, scope: !5365)
!5531 = !DILocation(line: 1201, column: 16, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 1199, column: 7)
!5533 = !DILocation(line: 1201, column: 30, scope: !5532)
!5534 = !DILocation(line: 1201, column: 41, scope: !5532)
!5535 = !DILocation(line: 1201, column: 36, scope: !5532)
!5536 = !DILocation(line: 1200, column: 5, scope: !5532)
!5537 = !DILocation(line: 1203, column: 1, scope: !5365)
!5538 = distinct !DISubprogram(name: "all_positions_needed_p", scope: !3, file: !3, line: 1279, type: !5539, scopeLine: 1280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5541)
!5539 = !DISubroutineType(types: !5540)
!5540 = !{!727, !1818, !728, !728}
!5541 = !{!5542, !5543, !5544, !5545, !5548}
!5542 = !DILocalVariable(name: "s_info", arg: 1, scope: !5538, file: !3, line: 1279, type: !1818)
!5543 = !DILocalVariable(name: "start", arg: 2, scope: !5538, file: !3, line: 1279, type: !728)
!5544 = !DILocalVariable(name: "width", arg: 3, scope: !5538, file: !3, line: 1279, type: !728)
!5545 = !DILocalVariable(name: "end", scope: !5546, file: !3, line: 1283, type: !728)
!5546 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 1282, column: 5)
!5547 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 1281, column: 7)
!5548 = !DILocalVariable(name: "mask", scope: !5549, file: !3, line: 1291, type: !851)
!5549 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 1290, column: 5)
!5550 = !DILocation(line: 0, scope: !5538)
!5551 = !DILocation(line: 1281, column: 7, scope: !5547)
!5552 = !DILocation(line: 1281, column: 7, scope: !5538)
!5553 = !DILocation(line: 1283, column: 23, scope: !5546)
!5554 = !DILocation(line: 0, scope: !5546)
!5555 = !DILocation(line: 1285, column: 51, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 1285, column: 6)
!5557 = !DILocation(line: 1284, column: 7, scope: !5546)
!5558 = !DILocation(line: 1284, column: 20, scope: !5546)
!5559 = !DILocation(line: 1285, column: 62, scope: !5556)
!5560 = !DILocation(line: 1285, column: 6, scope: !5556)
!5561 = !DILocation(line: 1285, column: 6, scope: !5546)
!5562 = distinct !{!5562, !5557, !5563}
!5563 = !DILocation(line: 1286, column: 11, scope: !5546)
!5564 = !DILocation(line: 1291, column: 37, scope: !5549)
!5565 = !DILocation(line: 1291, column: 61, scope: !5549)
!5566 = !DILocation(line: 0, scope: !5549)
!5567 = !DILocation(line: 1292, column: 23, scope: !5549)
!5568 = !DILocation(line: 1292, column: 40, scope: !5549)
!5569 = !DILocation(line: 1292, column: 54, scope: !5549)
!5570 = !DILocation(line: 1292, column: 62, scope: !5549)
!5571 = !DILocation(line: 1292, column: 14, scope: !5549)
!5572 = !DILocation(line: 1294, column: 1, scope: !5538)
!5573 = !DILocation(line: 0, scope: !5547)
!5574 = distinct !DISubprogram(name: "replace_read", scope: !3, file: !3, line: 1904, type: !5575, scopeLine: 1907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5577)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!727, !1818, !750, !1846, !750, !1913, !1839}
!5577 = !{!5578, !5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5593}
!5578 = !DILocalVariable(name: "store_info", arg: 1, scope: !5574, file: !3, line: 1904, type: !1818)
!5579 = !DILocalVariable(name: "store_insn", arg: 2, scope: !5574, file: !3, line: 1904, type: !750)
!5580 = !DILocalVariable(name: "read_info", arg: 3, scope: !5574, file: !3, line: 1905, type: !1846)
!5581 = !DILocalVariable(name: "read_insn", arg: 4, scope: !5574, file: !3, line: 1905, type: !750)
!5582 = !DILocalVariable(name: "loc", arg: 5, scope: !5574, file: !3, line: 1905, type: !1913)
!5583 = !DILocalVariable(name: "regs_live", arg: 6, scope: !5574, file: !3, line: 1906, type: !1839)
!5584 = !DILocalVariable(name: "store_mode", scope: !5574, file: !3, line: 1908, type: !5)
!5585 = !DILocalVariable(name: "read_mode", scope: !5574, file: !3, line: 1909, type: !5)
!5586 = !DILocalVariable(name: "insns", scope: !5574, file: !3, line: 1910, type: !760)
!5587 = !DILocalVariable(name: "this_insn", scope: !5574, file: !3, line: 1910, type: !760)
!5588 = !DILocalVariable(name: "read_reg", scope: !5574, file: !3, line: 1910, type: !760)
!5589 = !DILocalVariable(name: "bb", scope: !5574, file: !3, line: 1911, type: !1154)
!5590 = !DILocalVariable(name: "regs_set", scope: !5591, file: !3, line: 1955, type: !1839)
!5591 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 1949, column: 5)
!5592 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 1948, column: 7)
!5593 = !DILocalVariable(name: "deferred_change", scope: !5594, file: !3, line: 1978, type: !1908)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 1977, column: 5)
!5595 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 1976, column: 7)
!5596 = !DILocation(line: 0, scope: !5574)
!5597 = !DILocation(line: 1908, column: 34, scope: !5574)
!5598 = !DILocation(line: 1909, column: 33, scope: !5574)
!5599 = !DILocation(line: 1913, column: 8, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 1913, column: 7)
!5601 = !DILocation(line: 1913, column: 7, scope: !5574)
!5602 = !DILocation(line: 1925, column: 7, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 1925, column: 7)
!5604 = !DILocation(line: 1925, column: 7, scope: !5574)
!5605 = !DILocation(line: 1928, column: 7, scope: !5603)
!5606 = !DILocation(line: 1928, column: 34, scope: !5603)
!5607 = !DILocation(line: 1929, column: 7, scope: !5603)
!5608 = !DILocation(line: 1929, column: 35, scope: !5603)
!5609 = !DILocation(line: 1926, column: 5, scope: !5603)
!5610 = !DILocation(line: 1930, column: 3, scope: !5574)
!5611 = !DILocation(line: 1931, column: 8, scope: !5574)
!5612 = !DILocation(line: 1933, column: 31, scope: !5574)
!5613 = !DILocation(line: 1933, column: 20, scope: !5574)
!5614 = !DILocation(line: 1933, column: 49, scope: !5574)
!5615 = !DILocation(line: 1933, column: 38, scope: !5574)
!5616 = !DILocation(line: 1932, column: 14, scope: !5574)
!5617 = !DILocation(line: 1935, column: 16, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 1935, column: 7)
!5619 = !DILocation(line: 1935, column: 7, scope: !5574)
!5620 = !DILocation(line: 1937, column: 7, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 1936, column: 5)
!5622 = !DILocation(line: 1938, column: 11, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 1938, column: 11)
!5624 = !DILocation(line: 1938, column: 11, scope: !5621)
!5625 = !DILocation(line: 1939, column: 2, scope: !5623)
!5626 = !DILocation(line: 1944, column: 14, scope: !5574)
!5627 = !DILocation(line: 1945, column: 11, scope: !5574)
!5628 = !DILocation(line: 1946, column: 3, scope: !5574)
!5629 = !DILocation(line: 1948, column: 13, scope: !5592)
!5630 = !DILocation(line: 1948, column: 7, scope: !5574)
!5631 = !DILocation(line: 1955, column: 25, scope: !5591)
!5632 = !DILocation(line: 0, scope: !5591)
!5633 = !DILocation(line: 0, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1957, column: 7)
!5635 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 1957, column: 7)
!5636 = !DILocation(line: 1957, column: 12, scope: !5635)
!5637 = !DILocation(line: 0, scope: !5635)
!5638 = !DILocation(line: 1957, column: 41, scope: !5634)
!5639 = !DILocation(line: 1957, column: 7, scope: !5635)
!5640 = !DILocation(line: 1958, column: 15, scope: !5634)
!5641 = !DILocation(line: 1958, column: 2, scope: !5634)
!5642 = !DILocation(line: 1957, column: 66, scope: !5634)
!5643 = !DILocation(line: 1957, column: 7, scope: !5634)
!5644 = distinct !{!5644, !5639, !5645}
!5645 = !DILocation(line: 1958, column: 63, scope: !5635)
!5646 = !DILocation(line: 1960, column: 7, scope: !5591)
!5647 = !DILocation(line: 1961, column: 12, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 1961, column: 11)
!5649 = !DILocation(line: 1961, column: 11, scope: !5591)
!5650 = !DILocation(line: 1963, column: 8, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 1963, column: 8)
!5652 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 1962, column: 2)
!5653 = !DILocation(line: 1963, column: 8, scope: !5652)
!5654 = !DILocation(line: 1965, column: 8, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1964, column: 6)
!5656 = !DILocation(line: 1967, column: 25, scope: !5655)
!5657 = !DILocation(line: 1967, column: 8, scope: !5655)
!5658 = !DILocation(line: 1968, column: 6, scope: !5655)
!5659 = !DILocation(line: 1970, column: 4, scope: !5652)
!5660 = !DILocation(line: 1971, column: 4, scope: !5652)
!5661 = !DILocation(line: 1973, column: 7, scope: !5591)
!5662 = !DILocation(line: 1974, column: 5, scope: !5592)
!5663 = !DILocation(line: 1976, column: 35, scope: !5595)
!5664 = !DILocation(line: 1976, column: 7, scope: !5595)
!5665 = !DILocation(line: 1976, column: 7, scope: !5574)
!5666 = !DILocation(line: 1979, column: 34, scope: !5594)
!5667 = !DILocation(line: 1979, column: 22, scope: !5594)
!5668 = !DILocation(line: 0, scope: !5594)
!5669 = !DILocation(line: 1983, column: 44, scope: !5594)
!5670 = !DILocation(line: 1983, column: 7, scope: !5594)
!5671 = !DILocation(line: 2008, column: 25, scope: !5594)
!5672 = !DILocation(line: 2008, column: 12, scope: !5594)
!5673 = !DILocation(line: 2009, column: 31, scope: !5594)
!5674 = !DILocation(line: 2009, column: 24, scope: !5594)
!5675 = !DILocation(line: 2009, column: 29, scope: !5594)
!5676 = !DILocation(line: 2010, column: 28, scope: !5594)
!5677 = !DILocation(line: 2011, column: 24, scope: !5594)
!5678 = !DILocation(line: 2011, column: 28, scope: !5594)
!5679 = !DILocation(line: 2012, column: 24, scope: !5594)
!5680 = !DILocation(line: 2012, column: 28, scope: !5594)
!5681 = !DILocation(line: 2016, column: 40, scope: !5594)
!5682 = !DILocation(line: 2016, column: 18, scope: !5594)
!5683 = !DILocation(line: 2016, column: 27, scope: !5594)
!5684 = !DILocation(line: 2017, column: 18, scope: !5594)
!5685 = !DILocation(line: 2017, column: 34, scope: !5594)
!5686 = !DILocation(line: 2017, column: 7, scope: !5594)
!5687 = !DILocation(line: 2018, column: 11, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 2018, column: 11)
!5689 = !DILocation(line: 2018, column: 11, scope: !5594)
!5690 = !DILocation(line: 2020, column: 4, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5688, file: !3, line: 2019, column: 2)
!5692 = !DILocation(line: 2021, column: 22, scope: !5691)
!5693 = !DILocation(line: 2021, column: 4, scope: !5691)
!5694 = !DILocation(line: 2022, column: 13, scope: !5691)
!5695 = !DILocation(line: 2022, column: 4, scope: !5691)
!5696 = !DILocation(line: 2023, column: 2, scope: !5691)
!5697 = !DILocation(line: 2028, column: 11, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 2028, column: 11)
!5699 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 2027, column: 5)
!5700 = !DILocation(line: 2028, column: 11, scope: !5699)
!5701 = !DILocation(line: 2030, column: 4, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 2029, column: 2)
!5703 = !DILocation(line: 2031, column: 22, scope: !5702)
!5704 = !DILocation(line: 2031, column: 4, scope: !5702)
!5705 = !DILocation(line: 2032, column: 13, scope: !5702)
!5706 = !DILocation(line: 2032, column: 4, scope: !5702)
!5707 = !DILocation(line: 2033, column: 2, scope: !5702)
!5708 = !DILocation(line: 2036, column: 1, scope: !5574)
!5709 = distinct !DISubprogram(name: "clear_alias_set_lookup", scope: !3, file: !3, line: 629, type: !5710, scopeLine: 630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5712)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{!735, !739}
!5712 = !{!5713, !5714, !5715}
!5713 = !DILocalVariable(name: "alias_set", arg: 1, scope: !5709, file: !3, line: 629, type: !739)
!5714 = !DILocalVariable(name: "tmp_holder", scope: !5709, file: !3, line: 631, type: !736)
!5715 = !DILocalVariable(name: "slot", scope: !5709, file: !3, line: 632, type: !1285)
!5716 = !DILocation(line: 0, scope: !5709)
!5717 = !DILocation(line: 631, column: 3, scope: !5709)
!5718 = !DILocation(line: 634, column: 14, scope: !5709)
!5719 = !DILocation(line: 634, column: 24, scope: !5709)
!5720 = !DILocation(line: 635, column: 26, scope: !5709)
!5721 = !DILocation(line: 635, column: 10, scope: !5709)
!5722 = !DILocation(line: 636, column: 3, scope: !5709)
!5723 = !DILocation(line: 638, column: 45, scope: !5709)
!5724 = !DILocation(line: 639, column: 1, scope: !5709)
!5725 = !DILocation(line: 638, column: 3, scope: !5709)
!5726 = distinct !DISubprogram(name: "const_or_frame_p", scope: !3, file: !3, line: 1015, type: !5727, scopeLine: 1016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5729)
!5727 = !DISubroutineType(types: !5728)
!5728 = !{!727, !760}
!5729 = !{!5730}
!5730 = !DILocalVariable(name: "x", arg: 1, scope: !5726, file: !3, line: 1015, type: !760)
!5731 = !DILocation(line: 0, scope: !5726)
!5732 = !DILocation(line: 1017, column: 11, scope: !5726)
!5733 = !DILocation(line: 1017, column: 3, scope: !5726)
!5734 = !DILocation(line: 1032, column: 16, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 1032, column: 11)
!5736 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 1018, column: 5)
!5737 = !DILocation(line: 1032, column: 13, scope: !5735)
!5738 = !DILocation(line: 1032, column: 42, scope: !5735)
!5739 = !DILocation(line: 1032, column: 39, scope: !5735)
!5740 = !DILocation(line: 1032, column: 34, scope: !5735)
!5741 = !DILocation(line: 1034, column: 13, scope: !5735)
!5742 = !DILocation(line: 1034, column: 10, scope: !5735)
!5743 = !DILocation(line: 1034, column: 29, scope: !5735)
!5744 = !DILocation(line: 1034, column: 32, scope: !5735)
!5745 = !DILocation(line: 1035, column: 4, scope: !5735)
!5746 = !DILocation(line: 1035, column: 12, scope: !5735)
!5747 = !DILocation(line: 1035, column: 9, scope: !5735)
!5748 = !DILocation(line: 1032, column: 11, scope: !5736)
!5749 = !DILocation(line: 1040, column: 7, scope: !5736)
!5750 = !DILocation(line: 0, scope: !5736)
!5751 = !DILocation(line: 1042, column: 1, scope: !5726)
!5752 = distinct !DISubprogram(name: "lowpart_bitmask", scope: !3, file: !3, line: 277, type: !5753, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5755)
!5753 = !DISubroutineType(types: !5754)
!5754 = !{!851, !728}
!5755 = !{!5756, !5757}
!5756 = !DILocalVariable(name: "n", arg: 1, scope: !5752, file: !3, line: 277, type: !728)
!5757 = !DILocalVariable(name: "mask", scope: !5752, file: !3, line: 279, type: !851)
!5758 = !DILocation(line: 0, scope: !5752)
!5759 = !DILocation(line: 280, column: 42, scope: !5752)
!5760 = !DILocation(line: 280, column: 15, scope: !5752)
!5761 = !DILocation(line: 280, column: 3, scope: !5752)
!5762 = distinct !DISubprogram(name: "get_stored_val", scope: !3, file: !3, line: 1804, type: !5763, scopeLine: 1807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5765)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{!760, !1818, !5, !868, !868, !1154, !727}
!5765 = !{!5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5776, !5784}
!5766 = !DILocalVariable(name: "store_info", arg: 1, scope: !5762, file: !3, line: 1804, type: !1818)
!5767 = !DILocalVariable(name: "read_mode", arg: 2, scope: !5762, file: !3, line: 1804, type: !5)
!5768 = !DILocalVariable(name: "read_begin", arg: 3, scope: !5762, file: !3, line: 1805, type: !868)
!5769 = !DILocalVariable(name: "read_end", arg: 4, scope: !5762, file: !3, line: 1805, type: !868)
!5770 = !DILocalVariable(name: "bb", arg: 5, scope: !5762, file: !3, line: 1806, type: !1154)
!5771 = !DILocalVariable(name: "require_cst", arg: 6, scope: !5762, file: !3, line: 1806, type: !727)
!5772 = !DILocalVariable(name: "store_mode", scope: !5762, file: !3, line: 1808, type: !5)
!5773 = !DILocalVariable(name: "shift", scope: !5762, file: !3, line: 1809, type: !728)
!5774 = !DILocalVariable(name: "access_size", scope: !5762, file: !3, line: 1810, type: !728)
!5775 = !DILocalVariable(name: "read_reg", scope: !5762, file: !3, line: 1811, type: !760)
!5776 = !DILocalVariable(name: "c", scope: !5777, file: !3, line: 1846, type: !851)
!5777 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 1845, column: 2)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 1841, column: 16)
!5779 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 1839, column: 16)
!5780 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 1837, column: 11)
!5781 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 1833, column: 5)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1832, column: 12)
!5783 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1828, column: 7)
!5784 = !DILocalVariable(name: "shift", scope: !5777, file: !3, line: 1849, type: !728)
!5785 = !DILocation(line: 0, scope: !5762)
!5786 = !DILocation(line: 1808, column: 34, scope: !5762)
!5787 = !DILocation(line: 1816, column: 18, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1816, column: 7)
!5789 = !DILocation(line: 1816, column: 7, scope: !5762)
!5790 = !DILocation(line: 1821, column: 38, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 1818, column: 12)
!5792 = !DILocation(line: 1821, column: 24, scope: !5791)
!5793 = !DILocation(line: 1821, column: 13, scope: !5791)
!5794 = !DILocation(line: 0, scope: !5788)
!5795 = !DILocation(line: 1828, column: 7, scope: !5783)
!5796 = !DILocation(line: 1828, column: 7, scope: !5762)
!5797 = !DILocation(line: 1826, column: 9, scope: !5762)
!5798 = !DILocation(line: 1823, column: 25, scope: !5762)
!5799 = !DILocation(line: 1823, column: 23, scope: !5762)
!5800 = !DILocation(line: 1830, column: 13, scope: !5783)
!5801 = !DILocation(line: 1829, column: 16, scope: !5783)
!5802 = !DILocation(line: 1829, column: 5, scope: !5783)
!5803 = !DILocation(line: 1832, column: 12, scope: !5783)
!5804 = !DILocation(line: 1835, column: 7, scope: !5781)
!5805 = !DILocation(line: 1836, column: 20, scope: !5781)
!5806 = !DILocation(line: 1837, column: 22, scope: !5780)
!5807 = !DILocation(line: 1837, column: 11, scope: !5781)
!5808 = !DILocation(line: 1839, column: 28, scope: !5779)
!5809 = !DILocation(line: 1839, column: 35, scope: !5779)
!5810 = !DILocation(line: 1839, column: 32, scope: !5779)
!5811 = !DILocation(line: 1839, column: 16, scope: !5780)
!5812 = !DILocation(line: 1840, column: 13, scope: !5779)
!5813 = !DILocation(line: 1840, column: 2, scope: !5779)
!5814 = !DILocation(line: 1841, column: 16, scope: !5778)
!5815 = !DILocation(line: 1841, column: 46, scope: !5778)
!5816 = !DILocation(line: 1841, column: 16, scope: !5779)
!5817 = !DILocation(line: 1847, column: 8, scope: !5777)
!5818 = !DILocation(line: 1848, column: 8, scope: !5777)
!5819 = !DILocation(line: 0, scope: !5777)
!5820 = !DILocation(line: 1850, column: 4, scope: !5777)
!5821 = !DILocation(line: 1850, column: 17, scope: !5777)
!5822 = !DILocation(line: 1852, column: 16, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 1851, column: 6)
!5824 = !DILocation(line: 1852, column: 10, scope: !5823)
!5825 = !DILocation(line: 1853, column: 14, scope: !5823)
!5826 = distinct !{!5826, !5820, !5827}
!5827 = !DILocation(line: 1854, column: 6, scope: !5777)
!5828 = !DILocation(line: 1855, column: 15, scope: !5777)
!5829 = !DILocation(line: 1856, column: 15, scope: !5777)
!5830 = !DILocation(line: 1859, column: 24, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 1859, column: 12)
!5832 = !DILocation(line: 1859, column: 12, scope: !5831)
!5833 = !DILocation(line: 1860, column: 5, scope: !5831)
!5834 = !DILocation(line: 1860, column: 9, scope: !5831)
!5835 = !DILocation(line: 1861, column: 9, scope: !5831)
!5836 = !DILocation(line: 1861, column: 12, scope: !5831)
!5837 = !DILocation(line: 1861, column: 42, scope: !5831)
!5838 = !DILocation(line: 1861, column: 39, scope: !5831)
!5839 = !DILocation(line: 1859, column: 12, scope: !5782)
!5840 = !DILocation(line: 1863, column: 6, scope: !5831)
!5841 = !DILocation(line: 1862, column: 16, scope: !5831)
!5842 = !DILocation(line: 1862, column: 5, scope: !5831)
!5843 = !DILocation(line: 1866, column: 28, scope: !5831)
!5844 = !DILocation(line: 1866, column: 6, scope: !5831)
!5845 = !DILocation(line: 1865, column: 16, scope: !5831)
!5846 = !DILocation(line: 0, scope: !5783)
!5847 = !DILocation(line: 1867, column: 7, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1867, column: 7)
!5849 = !DILocation(line: 1867, column: 22, scope: !5848)
!5850 = !DILocation(line: 1867, column: 19, scope: !5848)
!5851 = !DILocation(line: 1867, column: 35, scope: !5848)
!5852 = !DILocation(line: 1867, column: 7, scope: !5762)
!5853 = !DILocation(line: 1869, column: 3, scope: !5762)
!5854 = distinct !DISubprogram(name: "look_for_hardregs", scope: !3, file: !3, line: 1784, type: !5855, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5860)
!5855 = !DISubroutineType(types: !5856)
!5856 = !{null, !760, !5857, !732}
!5857 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !761, line: 51, baseType: !5858)
!5858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5859, size: 64)
!5859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !763)
!5860 = !{!5861, !5862, !5863, !5864, !5865, !5868}
!5861 = !DILocalVariable(name: "x", arg: 1, scope: !5854, file: !3, line: 1784, type: !760)
!5862 = !DILocalVariable(name: "pat", arg: 2, scope: !5854, file: !3, line: 1784, type: !5857)
!5863 = !DILocalVariable(name: "data", arg: 3, scope: !5854, file: !3, line: 1784, type: !732)
!5864 = !DILocalVariable(name: "regs_set", scope: !5854, file: !3, line: 1786, type: !1839)
!5865 = !DILocalVariable(name: "regno", scope: !5866, file: !3, line: 1791, type: !728)
!5866 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 1790, column: 5)
!5867 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 1788, column: 7)
!5868 = !DILocalVariable(name: "n", scope: !5866, file: !3, line: 1792, type: !728)
!5869 = !DILocation(line: 0, scope: !5854)
!5870 = !DILocation(line: 1786, column: 21, scope: !5854)
!5871 = !DILocation(line: 1788, column: 7, scope: !5867)
!5872 = !DILocation(line: 1789, column: 7, scope: !5867)
!5873 = !DILocation(line: 1789, column: 10, scope: !5867)
!5874 = !DILocation(line: 1789, column: 20, scope: !5867)
!5875 = !DILocation(line: 1788, column: 7, scope: !5854)
!5876 = !DILocation(line: 1791, column: 19, scope: !5866)
!5877 = !DILocation(line: 0, scope: !5866)
!5878 = !DILocation(line: 1792, column: 15, scope: !5866)
!5879 = !DILocation(line: 1792, column: 39, scope: !5866)
!5880 = !DILocation(line: 1793, column: 7, scope: !5866)
!5881 = !DILocation(line: 1793, column: 14, scope: !5866)
!5882 = !DILocation(line: 1793, column: 18, scope: !5866)
!5883 = !DILocation(line: 1794, column: 34, scope: !5866)
!5884 = !DILocation(line: 1794, column: 2, scope: !5866)
!5885 = distinct !{!5885, !5880, !5886}
!5886 = !DILocation(line: 1794, column: 37, scope: !5866)
!5887 = !DILocation(line: 1796, column: 1, scope: !5854)
!5888 = distinct !DISubprogram(name: "find_shift_sequence", scope: !3, file: !3, line: 1667, type: !5889, scopeLine: 1671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5891)
!5889 = !DISubroutineType(types: !5890)
!5890 = !{!760, !728, !1818, !5, !728, !727, !727}
!5891 = !{!5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900, !5901, !5905, !5906, !5907, !5908, !5909, !5910, !5913}
!5892 = !DILocalVariable(name: "access_size", arg: 1, scope: !5888, file: !3, line: 1667, type: !728)
!5893 = !DILocalVariable(name: "store_info", arg: 2, scope: !5888, file: !3, line: 1668, type: !1818)
!5894 = !DILocalVariable(name: "read_mode", arg: 3, scope: !5888, file: !3, line: 1669, type: !5)
!5895 = !DILocalVariable(name: "shift", arg: 4, scope: !5888, file: !3, line: 1670, type: !728)
!5896 = !DILocalVariable(name: "speed", arg: 5, scope: !5888, file: !3, line: 1670, type: !727)
!5897 = !DILocalVariable(name: "require_cst", arg: 6, scope: !5888, file: !3, line: 1670, type: !727)
!5898 = !DILocalVariable(name: "store_mode", scope: !5888, file: !3, line: 1672, type: !5)
!5899 = !DILocalVariable(name: "new_mode", scope: !5888, file: !3, line: 1673, type: !5)
!5900 = !DILocalVariable(name: "read_reg", scope: !5888, file: !3, line: 1674, type: !760)
!5901 = !DILocalVariable(name: "target", scope: !5902, file: !3, line: 1688, type: !760)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 1687, column: 5)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 1683, column: 3)
!5904 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 1683, column: 3)
!5905 = !DILocalVariable(name: "new_reg", scope: !5902, file: !3, line: 1688, type: !760)
!5906 = !DILocalVariable(name: "shift_seq", scope: !5902, file: !3, line: 1688, type: !760)
!5907 = !DILocalVariable(name: "insn", scope: !5902, file: !3, line: 1688, type: !760)
!5908 = !DILocalVariable(name: "new_lhs", scope: !5902, file: !3, line: 1688, type: !760)
!5909 = !DILocalVariable(name: "cost", scope: !5902, file: !3, line: 1689, type: !728)
!5910 = !DILocalVariable(name: "byte", scope: !5911, file: !3, line: 1696, type: !7)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 1695, column: 2)
!5912 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1694, column: 11)
!5913 = !DILocalVariable(name: "ret", scope: !5911, file: !3, line: 1697, type: !760)
!5914 = !DILocation(line: 0, scope: !5888)
!5915 = !DILocation(line: 1672, column: 34, scope: !5888)
!5916 = !DILocation(line: 1683, column: 55, scope: !5904)
!5917 = !DILocation(line: 1683, column: 19, scope: !5904)
!5918 = !DILocation(line: 0, scope: !5912)
!5919 = !DILocation(line: 0, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 1700, column: 6)
!5921 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 1699, column: 8)
!5922 = !DILocation(line: 0, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1714, column: 11)
!5924 = !DILocation(line: 0, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1726, column: 11)
!5926 = !DILocation(line: 1683, column: 8, scope: !5904)
!5927 = !DILocation(line: 0, scope: !5904)
!5928 = !DILocation(line: 1674, column: 7, scope: !5888)
!5929 = !DILocation(line: 1685, column: 8, scope: !5903)
!5930 = !DILocation(line: 1685, column: 36, scope: !5903)
!5931 = !DILocation(line: 1683, column: 3, scope: !5904)
!5932 = !DILocation(line: 1694, column: 23, scope: !5912)
!5933 = !DILocation(line: 1694, column: 11, scope: !5912)
!5934 = !DILocation(line: 1694, column: 11, scope: !5902)
!5935 = !DILocation(line: 1696, column: 24, scope: !5911)
!5936 = !DILocation(line: 0, scope: !5911)
!5937 = !DILocation(line: 1697, column: 53, scope: !5911)
!5938 = !DILocation(line: 1697, column: 14, scope: !5911)
!5939 = !DILocation(line: 1699, column: 8, scope: !5921)
!5940 = !DILocation(line: 1699, column: 12, scope: !5921)
!5941 = !DILocation(line: 1699, column: 15, scope: !5921)
!5942 = !DILocation(line: 1699, column: 8, scope: !5911)
!5943 = !DILocation(line: 1702, column: 17, scope: !5920)
!5944 = !DILocation(line: 1701, column: 14, scope: !5920)
!5945 = !DILocation(line: 1703, column: 12, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1703, column: 12)
!5947 = !DILocation(line: 1703, column: 16, scope: !5946)
!5948 = !DILocation(line: 1703, column: 19, scope: !5946)
!5949 = !DILocation(line: 1703, column: 12, scope: !5920)
!5950 = !DILocation(line: 1705, column: 12, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 1704, column: 3)
!5952 = !DILocation(line: 1706, column: 11, scope: !5951)
!5953 = !DILocation(line: 1707, column: 9, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1707, column: 9)
!5955 = !DILocation(line: 1707, column: 13, scope: !5954)
!5956 = !DILocation(line: 1707, column: 16, scope: !5954)
!5957 = !DILocation(line: 1708, column: 9, scope: !5954)
!5958 = !DILocation(line: 1708, column: 12, scope: !5954)
!5959 = !DILocation(line: 1708, column: 39, scope: !5954)
!5960 = !DILocation(line: 1707, column: 9, scope: !5951)
!5961 = !DILocation(line: 1712, column: 2, scope: !5912)
!5962 = !DILocation(line: 1714, column: 11, scope: !5902)
!5963 = !DILocation(line: 1726, column: 12, scope: !5925)
!5964 = !DILocation(line: 1727, column: 4, scope: !5925)
!5965 = !DILocation(line: 1727, column: 8, scope: !5925)
!5966 = !DILocation(line: 1726, column: 11, scope: !5902)
!5967 = !DILocation(line: 1730, column: 17, scope: !5902)
!5968 = !DILocation(line: 0, scope: !5902)
!5969 = !DILocation(line: 1732, column: 7, scope: !5902)
!5970 = !DILocation(line: 1738, column: 9, scope: !5902)
!5971 = !DILocation(line: 1737, column: 16, scope: !5902)
!5972 = !DILocation(line: 1740, column: 19, scope: !5902)
!5973 = !DILocation(line: 1741, column: 7, scope: !5902)
!5974 = !DILocation(line: 1743, column: 18, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1743, column: 11)
!5976 = !DILocation(line: 1743, column: 42, scope: !5975)
!5977 = !DILocation(line: 1743, column: 29, scope: !5975)
!5978 = !DILocation(line: 1747, column: 7, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1747, column: 7)
!5980 = !DILocation(line: 0, scope: !5979)
!5981 = !DILocation(line: 1747, column: 35, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 1747, column: 7)
!5983 = !DILocation(line: 1748, column: 6, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 1748, column: 6)
!5985 = !DILocation(line: 1748, column: 6, scope: !5982)
!5986 = !DILocation(line: 1749, column: 27, scope: !5984)
!5987 = !DILocation(line: 1749, column: 12, scope: !5984)
!5988 = !DILocation(line: 1749, column: 9, scope: !5984)
!5989 = !DILocation(line: 1749, column: 4, scope: !5984)
!5990 = !DILocation(line: 1747, column: 55, scope: !5982)
!5991 = !DILocation(line: 1747, column: 7, scope: !5982)
!5992 = distinct !{!5992, !5978, !5993}
!5993 = !DILocation(line: 1749, column: 48, scope: !5979)
!5994 = !DILocation(line: 1758, column: 16, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1758, column: 11)
!5996 = !DILocation(line: 1758, column: 11, scope: !5902)
!5997 = !DILocation(line: 1762, column: 29, scope: !5902)
!5998 = !DILocation(line: 1762, column: 7, scope: !5902)
!5999 = !DILocation(line: 1761, column: 17, scope: !5902)
!6000 = !DILocation(line: 1763, column: 19, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1763, column: 11)
!6002 = !DILocation(line: 1763, column: 11, scope: !5902)
!6003 = !DILocation(line: 1770, column: 7, scope: !5902)
!6004 = !DILocation(line: 1771, column: 7, scope: !5902)
!6005 = !DILocation(line: 1772, column: 18, scope: !5902)
!6006 = !DILocation(line: 1773, column: 7, scope: !5902)
!6007 = !DILocation(line: 1686, column: 19, scope: !5903)
!6008 = !DILocation(line: 1683, column: 3, scope: !5903)
!6009 = distinct !{!6009, !5931, !6010}
!6010 = !DILocation(line: 1774, column: 5, scope: !5904)
!6011 = !DILocation(line: 1776, column: 3, scope: !5888)
!6012 = !DILocation(line: 1777, column: 1, scope: !5888)
!6013 = distinct !DISubprogram(name: "rhs_regno", scope: !561, file: !561, line: 1051, type: !6014, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6016)
!6014 = !DISubroutineType(types: !6015)
!6015 = !{!7, !5857}
!6016 = !{!6017}
!6017 = !DILocalVariable(name: "x", arg: 1, scope: !6013, file: !561, line: 1051, type: !5857)
!6018 = !DILocation(line: 0, scope: !6013)
!6019 = !DILocation(line: 1053, column: 10, scope: !6013)
!6020 = !DILocation(line: 1053, column: 3, scope: !6013)
!6021 = distinct !DISubprogram(name: "clear_rhs_from_active_local_stores", scope: !3, file: !3, line: 1209, type: !2621, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6022)
!6022 = !{!6023, !6024}
!6023 = !DILocalVariable(name: "ptr", scope: !6021, file: !3, line: 1211, type: !750)
!6024 = !DILocalVariable(name: "store_info", scope: !6025, file: !3, line: 1215, type: !1818)
!6025 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 1214, column: 5)
!6026 = !DILocation(line: 1213, column: 3, scope: !6021)
!6027 = !DILocation(line: 0, scope: !6021)
!6028 = !DILocation(line: 1215, column: 38, scope: !6025)
!6029 = !DILocation(line: 1217, column: 7, scope: !6025)
!6030 = !DILocation(line: 0, scope: !6025)
!6031 = !DILocation(line: 1217, column: 27, scope: !6025)
!6032 = !DILocation(line: 1217, column: 14, scope: !6025)
!6033 = !DILocation(line: 1218, column: 27, scope: !6025)
!6034 = distinct !{!6034, !6029, !6033}
!6035 = !DILocation(line: 1220, column: 19, scope: !6025)
!6036 = !DILocation(line: 1220, column: 23, scope: !6025)
!6037 = !DILocation(line: 1221, column: 19, scope: !6025)
!6038 = !DILocation(line: 1221, column: 29, scope: !6025)
!6039 = !DILocation(line: 1223, column: 18, scope: !6025)
!6040 = distinct !{!6040, !6026, !6041}
!6041 = !DILocation(line: 1224, column: 5, scope: !6021)
!6042 = !DILocation(line: 1225, column: 1, scope: !6021)
!6043 = distinct !DISubprogram(name: "set_usage_bits", scope: !3, file: !3, line: 943, type: !6044, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6046)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{null, !1885, !868, !868}
!6046 = !{!6047, !6048, !6049, !6050, !6051, !6056, !6057}
!6047 = !DILocalVariable(name: "group", arg: 1, scope: !6043, file: !3, line: 943, type: !1885)
!6048 = !DILocalVariable(name: "offset", arg: 2, scope: !6043, file: !3, line: 943, type: !868)
!6049 = !DILocalVariable(name: "width", arg: 3, scope: !6043, file: !3, line: 943, type: !868)
!6050 = !DILocalVariable(name: "i", scope: !6043, file: !3, line: 945, type: !868)
!6051 = !DILocalVariable(name: "store1", scope: !6052, file: !3, line: 950, type: !1839)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 949, column: 7)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 948, column: 5)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 948, column: 5)
!6055 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 947, column: 7)
!6056 = !DILocalVariable(name: "store2", scope: !6052, file: !3, line: 951, type: !1839)
!6057 = !DILocalVariable(name: "ai", scope: !6052, file: !3, line: 952, type: !728)
!6058 = !DILocation(line: 0, scope: !6043)
!6059 = !DILocation(line: 947, column: 14, scope: !6055)
!6060 = !DILocation(line: 947, column: 38, scope: !6055)
!6061 = !DILocation(line: 947, column: 46, scope: !6055)
!6062 = !DILocation(line: 947, column: 28, scope: !6055)
!6063 = !DILocation(line: 0, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 960, column: 4)
!6065 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 953, column: 6)
!6066 = !DILocation(line: 0, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 954, column: 4)
!6068 = !DILocation(line: 0, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 978, column: 7)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 977, column: 8)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 971, column: 10)
!6072 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 969, column: 4)
!6073 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 966, column: 6)
!6074 = !DILocation(line: 0, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 973, column: 7)
!6076 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 972, column: 8)
!6077 = !DILocation(line: 948, column: 5, scope: !6054)
!6078 = !DILocation(line: 0, scope: !6054)
!6079 = !DILocation(line: 948, column: 21, scope: !6053)
!6080 = !DILocation(line: 953, column: 8, scope: !6065)
!6081 = !DILocation(line: 953, column: 6, scope: !6052)
!6082 = !DILocation(line: 957, column: 11, scope: !6067)
!6083 = !DILocation(line: 958, column: 4, scope: !6067)
!6084 = !DILocation(line: 0, scope: !6065)
!6085 = !DILocation(line: 0, scope: !6052)
!6086 = !DILocation(line: 966, column: 6, scope: !6073)
!6087 = !DILocation(line: 966, column: 6, scope: !6052)
!6088 = !DILocation(line: 967, column: 4, scope: !6073)
!6089 = !DILocation(line: 970, column: 6, scope: !6072)
!6090 = !DILocation(line: 971, column: 10, scope: !6072)
!6091 = !DILocation(line: 973, column: 14, scope: !6075)
!6092 = !DILocation(line: 973, column: 32, scope: !6075)
!6093 = !DILocation(line: 973, column: 7, scope: !6076)
!6094 = !DILocation(line: 974, column: 30, scope: !6075)
!6095 = !DILocation(line: 974, column: 5, scope: !6075)
!6096 = !DILocation(line: 978, column: 14, scope: !6069)
!6097 = !DILocation(line: 978, column: 32, scope: !6069)
!6098 = !DILocation(line: 978, column: 7, scope: !6070)
!6099 = !DILocation(line: 979, column: 30, scope: !6069)
!6100 = !DILocation(line: 979, column: 5, scope: !6069)
!6101 = !DILocation(line: 948, column: 37, scope: !6053)
!6102 = !DILocation(line: 948, column: 5, scope: !6053)
!6103 = distinct !{!6103, !6077, !6104}
!6104 = !DILocation(line: 982, column: 7, scope: !6054)
!6105 = !DILocation(line: 983, column: 1, scope: !6043)
!6106 = distinct !DISubprogram(name: "set_all_positions_unneeded", scope: !3, file: !3, line: 1249, type: !6107, scopeLine: 1250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6109)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{null, !1818}
!6109 = !{!6110, !6111, !6114}
!6110 = !DILocalVariable(name: "s_info", arg: 1, scope: !6106, file: !3, line: 1249, type: !1818)
!6111 = !DILocalVariable(name: "pos", scope: !6112, file: !3, line: 1253, type: !728)
!6112 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 1252, column: 5)
!6113 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 1251, column: 7)
!6114 = !DILocalVariable(name: "end", scope: !6112, file: !3, line: 1253, type: !728)
!6115 = !DILocation(line: 0, scope: !6106)
!6116 = !DILocation(line: 1251, column: 7, scope: !6113)
!6117 = !DILocation(line: 1251, column: 7, scope: !6106)
!6118 = !DILocation(line: 1253, column: 30, scope: !6112)
!6119 = !DILocation(line: 1253, column: 44, scope: !6112)
!6120 = !DILocation(line: 1253, column: 34, scope: !6112)
!6121 = !DILocation(line: 1253, column: 22, scope: !6112)
!6122 = !DILocation(line: 0, scope: !6112)
!6123 = !DILocation(line: 0, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1254, column: 7)
!6125 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1254, column: 7)
!6126 = !DILocation(line: 1254, column: 12, scope: !6125)
!6127 = !DILocation(line: 0, scope: !6125)
!6128 = !DILocation(line: 1254, column: 25, scope: !6124)
!6129 = !DILocation(line: 1254, column: 7, scope: !6125)
!6130 = !DILocation(line: 1255, column: 49, scope: !6124)
!6131 = !DILocation(line: 1255, column: 2, scope: !6124)
!6132 = !DILocation(line: 1254, column: 35, scope: !6124)
!6133 = !DILocation(line: 1254, column: 7, scope: !6124)
!6134 = distinct !{!6134, !6129, !6135}
!6135 = !DILocation(line: 1255, column: 58, scope: !6125)
!6136 = !DILocation(line: 1256, column: 38, scope: !6112)
!6137 = !DILocation(line: 1256, column: 44, scope: !6112)
!6138 = !DILocation(line: 1257, column: 5, scope: !6112)
!6139 = !DILocation(line: 1259, column: 13, scope: !6113)
!6140 = !DILocation(line: 1259, column: 30, scope: !6113)
!6141 = !DILocation(line: 1259, column: 44, scope: !6113)
!6142 = !DILocation(line: 1260, column: 1, scope: !6106)
!6143 = distinct !DISubprogram(name: "set_position_unneeded", scope: !3, file: !3, line: 1231, type: !6144, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6146)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{null, !1818, !728}
!6146 = !{!6147, !6148}
!6147 = !DILocalVariable(name: "s_info", arg: 1, scope: !6143, file: !3, line: 1231, type: !1818)
!6148 = !DILocalVariable(name: "pos", arg: 2, scope: !6143, file: !3, line: 1231, type: !728)
!6149 = !DILocation(line: 0, scope: !6143)
!6150 = !DILocation(line: 1233, column: 7, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 1233, column: 7)
!6152 = !DILocation(line: 1233, column: 7, scope: !6143)
!6153 = !DILocation(line: 1235, column: 57, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 1235, column: 11)
!6155 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 1234, column: 5)
!6156 = !DILocation(line: 1235, column: 12, scope: !6154)
!6157 = !DILocation(line: 1235, column: 11, scope: !6155)
!6158 = !DILocation(line: 1237, column: 35, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 1236, column: 2)
!6160 = !DILocation(line: 1237, column: 40, scope: !6159)
!6161 = !DILocation(line: 1238, column: 51, scope: !6159)
!6162 = !DILocation(line: 1238, column: 4, scope: !6159)
!6163 = !DILocation(line: 1239, column: 2, scope: !6159)
!6164 = !DILocation(line: 1243, column: 41, scope: !6151)
!6165 = !DILocation(line: 1243, column: 10, scope: !6151)
!6166 = !DILocation(line: 1242, column: 13, scope: !6151)
!6167 = !DILocation(line: 1242, column: 30, scope: !6151)
!6168 = !DILocation(line: 1243, column: 7, scope: !6151)
!6169 = !DILocation(line: 1244, column: 1, scope: !6143)
!6170 = distinct !DISubprogram(name: "any_positions_needed_p", scope: !3, file: !3, line: 1265, type: !6171, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6173)
!6171 = !DISubroutineType(types: !6172)
!6172 = !{!727, !1818}
!6173 = !{!6174}
!6174 = !DILocalVariable(name: "s_info", arg: 1, scope: !6170, file: !3, line: 1265, type: !1818)
!6175 = !DILocation(line: 0, scope: !6170)
!6176 = !DILocation(line: 1267, column: 7, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 1267, column: 7)
!6178 = !DILocation(line: 1267, column: 7, scope: !6170)
!6179 = !DILocation(line: 1268, column: 44, scope: !6177)
!6180 = !DILocation(line: 1268, column: 13, scope: !6177)
!6181 = !DILocation(line: 1269, column: 16, scope: !6177)
!6182 = !DILocation(line: 1269, column: 30, scope: !6177)
!6183 = !DILocation(line: 1269, column: 20, scope: !6177)
!6184 = !DILocation(line: 1269, column: 6, scope: !6177)
!6185 = !DILocation(line: 1268, column: 5, scope: !6177)
!6186 = !DILocation(line: 0, scope: !6177)
!6187 = !DILocation(line: 1271, column: 38, scope: !6177)
!6188 = !DILocation(line: 1272, column: 6, scope: !6177)
!6189 = !DILocation(line: 1271, column: 5, scope: !6177)
!6190 = !DILocation(line: 1273, column: 1, scope: !6170)
!6191 = distinct !DISubprogram(name: "single_succ_edge", scope: !318, file: !318, line: 643, type: !6192, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6194)
!6192 = !DISubroutineType(types: !6193)
!6193 = !{!1171, !4204}
!6194 = !{!6195}
!6195 = !DILocalVariable(name: "bb", arg: 1, scope: !6191, file: !318, line: 643, type: !4204)
!6196 = !DILocation(line: 0, scope: !6191)
!6197 = !DILocation(line: 645, column: 3, scope: !6191)
!6198 = !DILocation(line: 646, column: 10, scope: !6191)
!6199 = !DILocation(line: 646, column: 3, scope: !6191)
!6200 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !318, file: !318, line: 150, type: !6201, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6203)
!6201 = !DISubroutineType(types: !6202)
!6202 = !{!1171, !4195, !7}
!6203 = !{!6204, !6205}
!6204 = !DILocalVariable(name: "vec_", arg: 1, scope: !6200, file: !318, line: 150, type: !4195)
!6205 = !DILocalVariable(name: "ix_", arg: 2, scope: !6200, file: !318, line: 150, type: !7)
!6206 = !DILocation(line: 0, scope: !6200)
!6207 = !DILocation(line: 150, column: 1, scope: !6200)
!6208 = distinct !DISubprogram(name: "check_for_inc_dec", scope: !3, file: !3, line: 890, type: !6209, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6211)
!6209 = !DISubroutineType(types: !6210)
!6210 = !{null, !760}
!6211 = !{!6212, !6213}
!6212 = !DILocalVariable(name: "insn", arg: 1, scope: !6208, file: !3, line: 890, type: !760)
!6213 = !DILocalVariable(name: "note", scope: !6208, file: !3, line: 892, type: !760)
!6214 = !DILocation(line: 0, scope: !6208)
!6215 = !DILocation(line: 892, column: 14, scope: !6208)
!6216 = !DILocation(line: 893, column: 7, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 893, column: 7)
!6218 = !DILocation(line: 893, column: 7, scope: !6208)
!6219 = !DILocation(line: 894, column: 5, scope: !6217)
!6220 = !DILocation(line: 895, column: 1, scope: !6208)
!6221 = distinct !DISubprogram(name: "replace_inc_dec_mem", scope: !3, file: !3, line: 869, type: !5017, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6222)
!6222 = !{!6223, !6224, !6225, !6226}
!6223 = !DILocalVariable(name: "r", arg: 1, scope: !6221, file: !3, line: 869, type: !1913)
!6224 = !DILocalVariable(name: "d", arg: 2, scope: !6221, file: !3, line: 869, type: !732)
!6225 = !DILocalVariable(name: "x", scope: !6221, file: !3, line: 871, type: !760)
!6226 = !DILocalVariable(name: "data", scope: !6227, file: !3, line: 874, type: !1917)
!6227 = distinct !DILexicalBlock(scope: !6228, file: !3, line: 873, column: 5)
!6228 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 872, column: 7)
!6229 = !DILocation(line: 0, scope: !6221)
!6230 = !DILocation(line: 871, column: 11, scope: !6221)
!6231 = !DILocation(line: 872, column: 9, scope: !6228)
!6232 = !DILocation(line: 872, column: 21, scope: !6228)
!6233 = !DILocation(line: 872, column: 24, scope: !6228)
!6234 = !DILocation(line: 872, column: 7, scope: !6221)
!6235 = !DILocation(line: 874, column: 7, scope: !6227)
!6236 = !DILocation(line: 876, column: 19, scope: !6227)
!6237 = !DILocation(line: 876, column: 12, scope: !6227)
!6238 = !DILocation(line: 876, column: 17, scope: !6227)
!6239 = !DILocation(line: 877, column: 12, scope: !6227)
!6240 = !DILocation(line: 877, column: 17, scope: !6227)
!6241 = !DILocation(line: 879, column: 22, scope: !6227)
!6242 = !DILocation(line: 879, column: 7, scope: !6227)
!6243 = !DILocation(line: 882, column: 5, scope: !6228)
!6244 = !DILocation(line: 884, column: 1, scope: !6221)
!6245 = distinct !DISubprogram(name: "replace_inc_dec", scope: !3, file: !3, line: 820, type: !5017, scopeLine: 821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6246)
!6246 = !{!6247, !6248, !6249, !6250, !6251, !6254, !6255, !6257, !6258, !6260}
!6247 = !DILocalVariable(name: "r", arg: 1, scope: !6245, file: !3, line: 820, type: !1913)
!6248 = !DILocalVariable(name: "d", arg: 2, scope: !6245, file: !3, line: 820, type: !732)
!6249 = !DILocalVariable(name: "x", scope: !6245, file: !3, line: 822, type: !760)
!6250 = !DILocalVariable(name: "data", scope: !6245, file: !3, line: 823, type: !1916)
!6251 = !DILocalVariable(name: "r1", scope: !6252, file: !3, line: 829, type: !760)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 828, column: 7)
!6253 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 825, column: 5)
!6254 = !DILocalVariable(name: "c", scope: !6252, file: !3, line: 830, type: !760)
!6255 = !DILocalVariable(name: "r1", scope: !6256, file: !3, line: 840, type: !760)
!6256 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 839, column: 7)
!6257 = !DILocalVariable(name: "c", scope: !6256, file: !3, line: 841, type: !760)
!6258 = !DILocalVariable(name: "add", scope: !6259, file: !3, line: 853, type: !760)
!6259 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 850, column: 7)
!6260 = !DILocalVariable(name: "r1", scope: !6259, file: !3, line: 854, type: !760)
!6261 = !DILocation(line: 0, scope: !6245)
!6262 = !DILocation(line: 822, column: 11, scope: !6245)
!6263 = !DILocation(line: 824, column: 11, scope: !6245)
!6264 = !DILocation(line: 824, column: 3, scope: !6245)
!6265 = !DILocation(line: 829, column: 11, scope: !6252)
!6266 = !DILocation(line: 0, scope: !6252)
!6267 = !DILocation(line: 830, column: 30, scope: !6252)
!6268 = !DILocation(line: 830, column: 24, scope: !6252)
!6269 = !DILocation(line: 830, column: 36, scope: !6252)
!6270 = !DILocation(line: 830, column: 10, scope: !6252)
!6271 = !DILocation(line: 831, column: 20, scope: !6252)
!6272 = !DILocation(line: 833, column: 12, scope: !6252)
!6273 = !DILocation(line: 831, column: 2, scope: !6252)
!6274 = !DILocation(line: 840, column: 11, scope: !6256)
!6275 = !DILocation(line: 0, scope: !6256)
!6276 = !DILocation(line: 841, column: 31, scope: !6256)
!6277 = !DILocation(line: 841, column: 24, scope: !6256)
!6278 = !DILocation(line: 841, column: 37, scope: !6256)
!6279 = !DILocation(line: 841, column: 10, scope: !6256)
!6280 = !DILocation(line: 842, column: 20, scope: !6256)
!6281 = !DILocation(line: 844, column: 12, scope: !6256)
!6282 = !DILocation(line: 842, column: 2, scope: !6256)
!6283 = !DILocation(line: 853, column: 12, scope: !6259)
!6284 = !DILocation(line: 0, scope: !6259)
!6285 = !DILocation(line: 854, column: 11, scope: !6259)
!6286 = !DILocation(line: 855, column: 20, scope: !6259)
!6287 = !DILocation(line: 855, column: 59, scope: !6259)
!6288 = !DILocation(line: 855, column: 2, scope: !6259)
!6289 = !DILocation(line: 0, scope: !6253)
!6290 = !DILocation(line: 862, column: 1, scope: !6245)
!6291 = distinct !DISubprogram(name: "VEC_group_info_t_base_iterate", scope: !3, file: !3, line: 523, type: !6292, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6294)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{!728, !4270, !7, !3821}
!6294 = !{!6295, !6296, !6297}
!6295 = !DILocalVariable(name: "vec_", arg: 1, scope: !6291, file: !3, line: 523, type: !4270)
!6296 = !DILocalVariable(name: "ix_", arg: 2, scope: !6291, file: !3, line: 523, type: !7)
!6297 = !DILocalVariable(name: "ptr", arg: 3, scope: !6291, file: !3, line: 523, type: !3821)
!6298 = !DILocation(line: 0, scope: !6291)
!6299 = !DILocation(line: 523, column: 1, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 523, column: 1)
!6301 = !DILocation(line: 523, column: 1, scope: !6291)
!6302 = !DILocation(line: 523, column: 1, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 523, column: 1)
!6304 = !DILocation(line: 523, column: 1, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 523, column: 1)
!6306 = !DILocation(line: 0, scope: !6300)
!6307 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !837, file: !837, line: 224, type: !6308, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6315)
!6308 = !DISubroutineType(types: !6309)
!6309 = !{null, !6310, !6311, !7, !6314}
!6310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!6311 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !761, line: 48, baseType: !6312)
!6312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6313, size: 64)
!6313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !836)
!6314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!6315 = !{!6316, !6317, !6318, !6319}
!6316 = !DILocalVariable(name: "bi", arg: 1, scope: !6307, file: !837, line: 224, type: !6310)
!6317 = !DILocalVariable(name: "map", arg: 2, scope: !6307, file: !837, line: 224, type: !6311)
!6318 = !DILocalVariable(name: "start_bit", arg: 3, scope: !6307, file: !837, line: 225, type: !7)
!6319 = !DILocalVariable(name: "bit_no", arg: 4, scope: !6307, file: !837, line: 225, type: !6314)
!6320 = !DILocation(line: 0, scope: !6307)
!6321 = !DILocation(line: 227, column: 19, scope: !6307)
!6322 = !DILocation(line: 227, column: 12, scope: !6307)
!6323 = !DILocation(line: 228, column: 7, scope: !6307)
!6324 = !DILocation(line: 228, column: 12, scope: !6307)
!6325 = !DILocation(line: 0, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6327, file: !837, line: 233, column: 11)
!6327 = distinct !DILexicalBlock(scope: !6307, file: !837, line: 232, column: 5)
!6328 = !DILocation(line: 231, column: 3, scope: !6307)
!6329 = !DILocation(line: 233, column: 12, scope: !6326)
!6330 = !DILocation(line: 233, column: 11, scope: !6327)
!6331 = !DILocation(line: 235, column: 13, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6326, file: !837, line: 234, column: 2)
!6333 = !DILocation(line: 236, column: 4, scope: !6332)
!6334 = !DILocation(line: 239, column: 11, scope: !6327)
!6335 = distinct !{!6335, !6328, !6336}
!6336 = !DILocation(line: 242, column: 5, scope: !6307)
!6337 = !DILocation(line: 245, column: 11, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6307, file: !837, line: 245, column: 7)
!6339 = !DILocation(line: 245, column: 17, scope: !6338)
!6340 = !DILocation(line: 245, column: 22, scope: !6338)
!6341 = !DILocation(line: 245, column: 7, scope: !6307)
!6342 = !DILocation(line: 246, column: 27, scope: !6338)
!6343 = !DILocation(line: 246, column: 32, scope: !6338)
!6344 = !DILocation(line: 246, column: 5, scope: !6338)
!6345 = !DILocation(line: 249, column: 7, scope: !6307)
!6346 = !DILocation(line: 249, column: 15, scope: !6307)
!6347 = !DILocation(line: 250, column: 14, scope: !6307)
!6348 = !DILocation(line: 251, column: 7, scope: !6307)
!6349 = !DILocation(line: 251, column: 12, scope: !6307)
!6350 = !DILocation(line: 257, column: 16, scope: !6307)
!6351 = !DILocation(line: 257, column: 13, scope: !6307)
!6352 = !DILocation(line: 259, column: 11, scope: !6307)
!6353 = !DILocation(line: 260, column: 1, scope: !6307)
!6354 = distinct !DISubprogram(name: "bmp_iter_set", scope: !837, file: !837, line: 393, type: !6355, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{!727, !6310, !6314}
!6357 = !{!6358, !6359, !6360}
!6358 = !DILocalVariable(name: "bi", arg: 1, scope: !6354, file: !837, line: 393, type: !6310)
!6359 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6354, file: !837, line: 393, type: !6314)
!6360 = !DILabel(scope: !6361, name: "next_bit", file: !837, line: 398)
!6361 = distinct !DILexicalBlock(scope: !6362, file: !837, line: 397, column: 5)
!6362 = distinct !DILexicalBlock(scope: !6354, file: !837, line: 396, column: 7)
!6363 = !DILocation(line: 0, scope: !6354)
!6364 = !DILocation(line: 396, column: 11, scope: !6362)
!6365 = !DILocation(line: 396, column: 7, scope: !6362)
!6366 = !DILocation(line: 396, column: 7, scope: !6354)
!6367 = !DILocation(line: 419, column: 15, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6369, file: !837, line: 418, column: 2)
!6369 = distinct !DILexicalBlock(scope: !6354, file: !837, line: 415, column: 5)
!6370 = !DILocation(line: 399, column: 7, scope: !6361)
!6371 = !DILocation(line: 398, column: 5, scope: !6361)
!6372 = !DILocation(line: 399, column: 20, scope: !6361)
!6373 = !DILocation(line: 399, column: 25, scope: !6361)
!6374 = !DILocation(line: 399, column: 14, scope: !6361)
!6375 = !DILocation(line: 401, column: 13, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6361, file: !837, line: 400, column: 2)
!6377 = !DILocation(line: 402, column: 12, scope: !6376)
!6378 = distinct !{!6378, !6370, !6379}
!6379 = !DILocation(line: 403, column: 2, scope: !6361)
!6380 = !DILocation(line: 410, column: 15, scope: !6354)
!6381 = !DILocation(line: 410, column: 42, scope: !6354)
!6382 = !DILocation(line: 411, column: 26, scope: !6354)
!6383 = !DILocation(line: 410, column: 11, scope: !6354)
!6384 = !DILocation(line: 412, column: 7, scope: !6354)
!6385 = !DILocation(line: 412, column: 14, scope: !6354)
!6386 = !DILocation(line: 0, scope: !6369)
!6387 = !DILocation(line: 414, column: 3, scope: !6354)
!6388 = !DILocation(line: 417, column: 7, scope: !6369)
!6389 = !DILocation(line: 417, column: 18, scope: !6369)
!6390 = !DILocation(line: 417, column: 26, scope: !6369)
!6391 = !DILocation(line: 419, column: 13, scope: !6368)
!6392 = !DILocation(line: 420, column: 8, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6368, file: !837, line: 420, column: 8)
!6394 = !DILocation(line: 420, column: 8, scope: !6368)
!6395 = !DILocation(line: 422, column: 12, scope: !6368)
!6396 = !DILocation(line: 423, column: 15, scope: !6368)
!6397 = distinct !{!6397, !6388, !6398}
!6398 = !DILocation(line: 424, column: 2, scope: !6369)
!6399 = !DILocation(line: 427, column: 28, scope: !6369)
!6400 = !DILocation(line: 427, column: 16, scope: !6369)
!6401 = !DILocation(line: 428, column: 12, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6369, file: !837, line: 428, column: 11)
!6403 = !DILocation(line: 428, column: 11, scope: !6369)
!6404 = !DILocation(line: 430, column: 27, scope: !6369)
!6405 = !DILocation(line: 430, column: 32, scope: !6369)
!6406 = !DILocation(line: 430, column: 15, scope: !6369)
!6407 = !DILocation(line: 431, column: 19, scope: !6369)
!6408 = distinct !{!6408, !6387, !6409}
!6409 = !DILocation(line: 432, column: 5, scope: !6354)
!6410 = !DILocation(line: 433, column: 1, scope: !6354)
!6411 = distinct !DISubprogram(name: "bmp_iter_next", scope: !837, file: !837, line: 382, type: !6412, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6414)
!6412 = !DISubroutineType(types: !6413)
!6413 = !{null, !6310, !6314}
!6414 = !{!6415, !6416}
!6415 = !DILocalVariable(name: "bi", arg: 1, scope: !6411, file: !837, line: 382, type: !6310)
!6416 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6411, file: !837, line: 382, type: !6314)
!6417 = !DILocation(line: 0, scope: !6411)
!6418 = !DILocation(line: 384, column: 7, scope: !6411)
!6419 = !DILocation(line: 384, column: 12, scope: !6411)
!6420 = !DILocation(line: 385, column: 11, scope: !6411)
!6421 = !DILocation(line: 386, column: 1, scope: !6411)
!6422 = distinct !DISubprogram(name: "dse_step3_exit_block_scan", scope: !3, file: !3, line: 3257, type: !4312, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6423)
!6423 = !{!6424, !6425, !6428}
!6424 = !DILocalVariable(name: "bb_info", arg: 1, scope: !6422, file: !3, line: 3257, type: !745)
!6425 = !DILocalVariable(name: "i", scope: !6426, file: !3, line: 3264, type: !7)
!6426 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 3263, column: 5)
!6427 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 3262, column: 7)
!6428 = !DILocalVariable(name: "group", scope: !6426, file: !3, line: 3265, type: !1885)
!6429 = !DILocation(line: 0, scope: !6422)
!6430 = !DILocation(line: 3262, column: 7, scope: !6427)
!6431 = !DILocation(line: 3262, column: 7, scope: !6422)
!6432 = !DILocation(line: 3265, column: 7, scope: !6426)
!6433 = !DILocation(line: 0, scope: !6426)
!6434 = !DILocation(line: 0, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 3269, column: 8)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 3268, column: 2)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 3267, column: 7)
!6438 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 3267, column: 7)
!6439 = !DILocation(line: 3267, column: 12, scope: !6438)
!6440 = !DILocation(line: 0, scope: !6438)
!6441 = !DILocation(line: 3267, column: 19, scope: !6437)
!6442 = !DILocation(line: 3267, column: 7, scope: !6438)
!6443 = !DILocation(line: 3269, column: 8, scope: !6435)
!6444 = !DILocation(line: 3269, column: 15, scope: !6435)
!6445 = !DILocation(line: 3269, column: 32, scope: !6435)
!6446 = !DILocation(line: 3269, column: 42, scope: !6435)
!6447 = !DILocation(line: 3269, column: 35, scope: !6435)
!6448 = !DILocation(line: 3269, column: 8, scope: !6436)
!6449 = !DILocation(line: 3270, column: 32, scope: !6435)
!6450 = !DILocation(line: 3270, column: 44, scope: !6435)
!6451 = !DILocation(line: 3270, column: 6, scope: !6435)
!6452 = !DILocation(line: 3267, column: 73, scope: !6437)
!6453 = !DILocation(line: 3267, column: 7, scope: !6437)
!6454 = distinct !{!6454, !6442, !6455}
!6455 = !DILocation(line: 3271, column: 2, scope: !6438)
!6456 = !DILocation(line: 3272, column: 5, scope: !6427)
!6457 = !DILocation(line: 3272, column: 5, scope: !6426)
!6458 = !DILocation(line: 3273, column: 1, scope: !6422)
!6459 = distinct !DISubprogram(name: "dse_step3_scan", scope: !3, file: !3, line: 3205, type: !6460, scopeLine: 3206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6462)
!6460 = !DISubroutineType(types: !6461)
!6461 = !{null, !727, !1154}
!6462 = !{!6463, !6464, !6465, !6466}
!6463 = !DILocalVariable(name: "for_spills", arg: 1, scope: !6459, file: !3, line: 3205, type: !727)
!6464 = !DILocalVariable(name: "bb", arg: 2, scope: !6459, file: !3, line: 3205, type: !1154)
!6465 = !DILocalVariable(name: "bb_info", scope: !6459, file: !3, line: 3207, type: !745)
!6466 = !DILocalVariable(name: "insn_info", scope: !6459, file: !3, line: 3208, type: !750)
!6467 = !DILocation(line: 0, scope: !6459)
!6468 = !DILocation(line: 3207, column: 23, scope: !6459)
!6469 = !DILocation(line: 3207, column: 36, scope: !6459)
!6470 = !DILocation(line: 3210, column: 7, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 3210, column: 7)
!6472 = !DILocation(line: 3210, column: 7, scope: !6459)
!6473 = !DILocation(line: 3212, column: 26, scope: !6471)
!6474 = !DILocation(line: 3212, column: 5, scope: !6471)
!6475 = !DILocation(line: 3214, column: 17, scope: !6471)
!6476 = !DILocation(line: 0, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 3218, column: 7)
!6478 = !DILocation(line: 3218, column: 29, scope: !6477)
!6479 = !DILocation(line: 0, scope: !6471)
!6480 = !DILocation(line: 3218, column: 17, scope: !6477)
!6481 = !DILocation(line: 3218, column: 7, scope: !6459)
!6482 = !DILocation(line: 3220, column: 11, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 3219, column: 5)
!6484 = !DILocation(line: 3221, column: 2, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6483, file: !3, line: 3220, column: 11)
!6486 = !DILocation(line: 3223, column: 18, scope: !6485)
!6487 = !DILocation(line: 3223, column: 16, scope: !6485)
!6488 = !DILocation(line: 3226, column: 9, scope: !6477)
!6489 = !DILocation(line: 3227, column: 7, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 3226, column: 9)
!6491 = !DILocation(line: 0, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 3236, column: 8)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 3234, column: 2)
!6494 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 3233, column: 11)
!6495 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 3230, column: 5)
!6496 = !DILocation(line: 3229, column: 3, scope: !6459)
!6497 = !DILocation(line: 3233, column: 22, scope: !6494)
!6498 = !DILocation(line: 3233, column: 11, scope: !6494)
!6499 = !DILocation(line: 3233, column: 27, scope: !6494)
!6500 = !DILocation(line: 3233, column: 30, scope: !6494)
!6501 = !DILocation(line: 3233, column: 11, scope: !6495)
!6502 = !DILocation(line: 3243, column: 8, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 3242, column: 6)
!6504 = !DILocation(line: 3244, column: 48, scope: !6503)
!6505 = !DILocation(line: 3244, column: 62, scope: !6503)
!6506 = !DILocation(line: 3244, column: 8, scope: !6503)
!6507 = !DILocation(line: 3248, column: 30, scope: !6495)
!6508 = distinct !{!6508, !6496, !6509}
!6509 = !DILocation(line: 3249, column: 5, scope: !6459)
!6510 = !DILocation(line: 3250, column: 1, scope: !6459)
!6511 = !DILocation(line: 3238, column: 8, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 3237, column: 6)
!6513 = !DILocation(line: 3239, column: 37, scope: !6512)
!6514 = !DILocation(line: 3239, column: 56, scope: !6512)
!6515 = !DILocation(line: 3239, column: 70, scope: !6512)
!6516 = !DILocation(line: 3239, column: 8, scope: !6512)
!6517 = !DILocation(line: 3240, column: 6, scope: !6512)
!6518 = distinct !DISubprogram(name: "mark_reachable_blocks", scope: !3, file: !3, line: 3282, type: !6519, scopeLine: 3283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6521)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{null, !3034, !1154}
!6521 = !{!6522, !6523, !6524, !6525}
!6522 = !DILocalVariable(name: "unreachable_blocks", arg: 1, scope: !6518, file: !3, line: 3282, type: !3034)
!6523 = !DILocalVariable(name: "bb", arg: 2, scope: !6518, file: !3, line: 3282, type: !1154)
!6524 = !DILocalVariable(name: "e", scope: !6518, file: !3, line: 3284, type: !1171)
!6525 = !DILocalVariable(name: "ei", scope: !6518, file: !3, line: 3285, type: !6526)
!6526 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !318, line: 682, baseType: !6527)
!6527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 679, size: 128, elements: !6528)
!6528 = !{!6529, !6530}
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !6527, file: !318, line: 680, baseType: !7, size: 32)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !6527, file: !318, line: 681, baseType: !6531, size: 64, offset: 64)
!6531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!6532 = !DILocation(line: 0, scope: !6518)
!6533 = !DILocation(line: 3284, column: 3, scope: !6518)
!6534 = !DILocation(line: 3285, column: 3, scope: !6518)
!6535 = !DILocation(line: 3287, column: 7, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 3287, column: 7)
!6537 = !DILocation(line: 3287, column: 7, scope: !6518)
!6538 = !DILocation(line: 3289, column: 7, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 3288, column: 5)
!6540 = !DILocation(line: 3290, column: 7, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 3290, column: 7)
!6542 = !DILocation(line: 0, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 3290, column: 7)
!6544 = !DILocation(line: 3290, column: 7, scope: !6543)
!6545 = !DILocation(line: 3292, column: 47, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 3291, column: 2)
!6547 = !DILocation(line: 3292, column: 50, scope: !6546)
!6548 = !DILocation(line: 3292, column: 4, scope: !6546)
!6549 = distinct !{!6549, !6540, !6550}
!6550 = !DILocation(line: 3293, column: 2, scope: !6541)
!6551 = !DILocation(line: 3295, column: 1, scope: !6518)
!6552 = distinct !DISubprogram(name: "sbitmap_iter_init", scope: !3035, file: !3035, line: 117, type: !6553, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6559)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{null, !6555, !6556, !7}
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!6556 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_sbitmap", file: !3035, line: 46, baseType: !6557)
!6557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6558, size: 64)
!6558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3037)
!6559 = !{!6560, !6561, !6562}
!6560 = !DILocalVariable(name: "i", arg: 1, scope: !6552, file: !3035, line: 117, type: !6555)
!6561 = !DILocalVariable(name: "bmp", arg: 2, scope: !6552, file: !3035, line: 117, type: !6556)
!6562 = !DILocalVariable(name: "min", arg: 3, scope: !6552, file: !3035, line: 117, type: !7)
!6563 = !DILocation(line: 0, scope: !6552)
!6564 = !DILocation(line: 119, column: 6, scope: !6552)
!6565 = !DILocation(line: 119, column: 15, scope: !6552)
!6566 = !DILocation(line: 120, column: 6, scope: !6552)
!6567 = !DILocation(line: 120, column: 14, scope: !6552)
!6568 = !DILocation(line: 121, column: 18, scope: !6552)
!6569 = !DILocation(line: 121, column: 6, scope: !6552)
!6570 = !DILocation(line: 121, column: 11, scope: !6552)
!6571 = !DILocation(line: 122, column: 12, scope: !6552)
!6572 = !DILocation(line: 122, column: 6, scope: !6552)
!6573 = !DILocation(line: 122, column: 10, scope: !6552)
!6574 = !DILocation(line: 124, column: 19, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6552, file: !3035, line: 124, column: 7)
!6576 = !DILocation(line: 124, column: 7, scope: !6552)
!6577 = !DILocation(line: 125, column: 8, scope: !6575)
!6578 = !DILocation(line: 125, column: 13, scope: !6575)
!6579 = !DILocation(line: 125, column: 5, scope: !6575)
!6580 = !DILocation(line: 127, column: 16, scope: !6575)
!6581 = !DILocation(line: 127, column: 8, scope: !6575)
!6582 = !DILocation(line: 127, column: 13, scope: !6575)
!6583 = !DILocation(line: 129, column: 1, scope: !6552)
!6584 = distinct !DISubprogram(name: "sbitmap_iter_cond", scope: !3035, file: !3035, line: 136, type: !6585, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6587)
!6585 = !DISubroutineType(types: !6586)
!6586 = !{!727, !6555, !6314}
!6587 = !{!6588, !6589}
!6588 = !DILocalVariable(name: "i", arg: 1, scope: !6584, file: !3035, line: 136, type: !6555)
!6589 = !DILocalVariable(name: "n", arg: 2, scope: !6584, file: !3035, line: 136, type: !6314)
!6590 = !DILocation(line: 0, scope: !6584)
!6591 = !DILocation(line: 0, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !3035, line: 139, column: 3)
!6593 = distinct !DILexicalBlock(scope: !6584, file: !3035, line: 139, column: 3)
!6594 = !DILocation(line: 0, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6592, file: !3035, line: 140, column: 5)
!6596 = !DILocation(line: 0, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6595, file: !3035, line: 144, column: 11)
!6598 = !DILocation(line: 139, column: 13, scope: !6592)
!6599 = !DILocation(line: 139, column: 3, scope: !6584)
!6600 = !DILocation(line: 139, column: 18, scope: !6592)
!6601 = !DILocation(line: 139, column: 3, scope: !6593)
!6602 = !DILocation(line: 151, column: 3, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6584, file: !3035, line: 151, column: 3)
!6604 = !DILocation(line: 141, column: 18, scope: !6595)
!6605 = !DILocation(line: 144, column: 29, scope: !6597)
!6606 = !DILocation(line: 144, column: 23, scope: !6597)
!6607 = !DILocation(line: 144, column: 11, scope: !6595)
!6608 = !DILocation(line: 147, column: 32, scope: !6595)
!6609 = !DILocation(line: 147, column: 18, scope: !6595)
!6610 = !DILocation(line: 139, column: 37, scope: !6592)
!6611 = !DILocation(line: 139, column: 34, scope: !6592)
!6612 = !DILocation(line: 139, column: 32, scope: !6592)
!6613 = !DILocation(line: 139, column: 3, scope: !6592)
!6614 = distinct !{!6614, !6601, !6615}
!6615 = !DILocation(line: 148, column: 5, scope: !6593)
!6616 = !DILocation(line: 151, column: 14, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6603, file: !3035, line: 151, column: 3)
!6618 = !DILocation(line: 151, column: 19, scope: !6617)
!6619 = !DILocation(line: 151, column: 24, scope: !6617)
!6620 = !DILocation(line: 152, column: 15, scope: !6617)
!6621 = !DILocation(line: 151, column: 38, scope: !6617)
!6622 = !DILocation(line: 151, column: 3, scope: !6617)
!6623 = distinct !{!6623, !6602, !6624}
!6624 = !DILocation(line: 152, column: 15, scope: !6603)
!6625 = !DILocation(line: 154, column: 6, scope: !6584)
!6626 = !DILocation(line: 156, column: 3, scope: !6584)
!6627 = !DILocation(line: 157, column: 1, scope: !6584)
!6628 = distinct !DISubprogram(name: "sbitmap_iter_next", scope: !3035, file: !3035, line: 162, type: !6629, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6631)
!6629 = !DISubroutineType(types: !6630)
!6630 = !{null, !6555}
!6631 = !{!6632}
!6632 = !DILocalVariable(name: "i", arg: 1, scope: !6628, file: !3035, line: 162, type: !6555)
!6633 = !DILocation(line: 0, scope: !6628)
!6634 = !DILocation(line: 164, column: 6, scope: !6628)
!6635 = !DILocation(line: 164, column: 11, scope: !6628)
!6636 = !DILocation(line: 165, column: 6, scope: !6628)
!6637 = !DILocation(line: 165, column: 13, scope: !6628)
!6638 = !DILocation(line: 166, column: 1, scope: !6628)
!6639 = distinct !DISubprogram(name: "find_insn_before_first_wild_read", scope: !3, file: !3, line: 3172, type: !6640, scopeLine: 3173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6642)
!6640 = !DISubroutineType(types: !6641)
!6641 = !{!750, !745}
!6642 = !{!6643, !6644, !6645}
!6643 = !DILocalVariable(name: "bb_info", arg: 1, scope: !6639, file: !3, line: 3172, type: !745)
!6644 = !DILocalVariable(name: "insn_info", scope: !6639, file: !3, line: 3174, type: !750)
!6645 = !DILocalVariable(name: "last_wild_read", scope: !6639, file: !3, line: 3175, type: !750)
!6646 = !DILocation(line: 0, scope: !6639)
!6647 = !DILocation(line: 3174, column: 36, scope: !6639)
!6648 = !DILocation(line: 3177, column: 3, scope: !6639)
!6649 = !DILocation(line: 3179, column: 22, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 3179, column: 11)
!6651 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 3178, column: 5)
!6652 = !DILocation(line: 3179, column: 11, scope: !6650)
!6653 = !DILocation(line: 3179, column: 11, scope: !6651)
!6654 = !DILocation(line: 3181, column: 32, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 3180, column: 2)
!6656 = !DILocation(line: 3183, column: 9, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 3183, column: 8)
!6658 = !DILocation(line: 3183, column: 8, scope: !6655)
!6659 = !DILocation(line: 3187, column: 30, scope: !6651)
!6660 = distinct !{!6660, !6648, !6661}
!6661 = !DILocation(line: 3188, column: 5, scope: !6639)
!6662 = !DILocation(line: 3190, column: 7, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 3190, column: 7)
!6664 = !DILocation(line: 3190, column: 7, scope: !6639)
!6665 = !DILocation(line: 3193, column: 21, scope: !6663)
!6666 = !DILocation(line: 3193, column: 5, scope: !6663)
!6667 = !DILocation(line: 3194, column: 1, scope: !6639)
!6668 = distinct !DISubprogram(name: "scan_stores_spill", scope: !3, file: !3, line: 3042, type: !6669, scopeLine: 3043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6671)
!6669 = !DISubroutineType(types: !6670)
!6670 = !{null, !1818, !1839, !1839}
!6671 = !{!6672, !6673, !6674, !6675}
!6672 = !DILocalVariable(name: "store_info", arg: 1, scope: !6668, file: !3, line: 3042, type: !1818)
!6673 = !DILocalVariable(name: "gen", arg: 2, scope: !6668, file: !3, line: 3042, type: !1839)
!6674 = !DILocalVariable(name: "kill", arg: 3, scope: !6668, file: !3, line: 3042, type: !1839)
!6675 = !DILocalVariable(name: "index", scope: !6676, file: !3, line: 3048, type: !728)
!6676 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 3047, column: 2)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 3046, column: 11)
!6678 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 3045, column: 5)
!6679 = !DILocation(line: 0, scope: !6668)
!6680 = !DILocation(line: 0, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 3053, column: 12)
!6682 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 3051, column: 6)
!6683 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 3050, column: 8)
!6684 = !DILocation(line: 3044, column: 3, scope: !6668)
!6685 = !DILocation(line: 3046, column: 23, scope: !6677)
!6686 = !DILocation(line: 3046, column: 11, scope: !6677)
!6687 = !DILocation(line: 3046, column: 11, scope: !6678)
!6688 = !DILocation(line: 3048, column: 34, scope: !6676)
!6689 = !DILocation(line: 3049, column: 6, scope: !6676)
!6690 = !DILocation(line: 3048, column: 16, scope: !6676)
!6691 = !DILocation(line: 0, scope: !6676)
!6692 = !DILocation(line: 3050, column: 14, scope: !6683)
!6693 = !DILocation(line: 3050, column: 8, scope: !6676)
!6694 = !DILocation(line: 3052, column: 8, scope: !6682)
!6695 = !DILocation(line: 3053, column: 12, scope: !6682)
!6696 = !DILocation(line: 3057, column: 32, scope: !6678)
!6697 = distinct !{!6697, !6684, !6698}
!6698 = !DILocation(line: 3058, column: 5, scope: !6668)
!6699 = !DILocation(line: 3059, column: 1, scope: !6668)
!6700 = !DILocation(line: 3054, column: 3, scope: !6681)
!6701 = distinct !DISubprogram(name: "scan_reads_spill", scope: !3, file: !3, line: 3147, type: !6702, scopeLine: 3148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6704)
!6702 = !DISubroutineType(types: !6703)
!6703 = !{null, !1846, !1839, !1839}
!6704 = !{!6705, !6706, !6707, !6708}
!6705 = !DILocalVariable(name: "read_info", arg: 1, scope: !6701, file: !3, line: 3147, type: !1846)
!6706 = !DILocalVariable(name: "gen", arg: 2, scope: !6701, file: !3, line: 3147, type: !1839)
!6707 = !DILocalVariable(name: "kill", arg: 3, scope: !6701, file: !3, line: 3147, type: !1839)
!6708 = !DILocalVariable(name: "index", scope: !6709, file: !3, line: 3153, type: !728)
!6709 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 3152, column: 2)
!6710 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 3151, column: 11)
!6711 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 3150, column: 5)
!6712 = !DILocation(line: 0, scope: !6701)
!6713 = !DILocation(line: 0, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 3157, column: 12)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 3156, column: 6)
!6716 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 3155, column: 8)
!6717 = !DILocation(line: 3149, column: 3, scope: !6701)
!6718 = !DILocation(line: 3151, column: 22, scope: !6710)
!6719 = !DILocation(line: 3151, column: 11, scope: !6710)
!6720 = !DILocation(line: 3151, column: 11, scope: !6711)
!6721 = !DILocation(line: 3153, column: 34, scope: !6709)
!6722 = !DILocation(line: 3154, column: 6, scope: !6709)
!6723 = !DILocation(line: 3153, column: 16, scope: !6709)
!6724 = !DILocation(line: 0, scope: !6709)
!6725 = !DILocation(line: 3155, column: 14, scope: !6716)
!6726 = !DILocation(line: 3155, column: 8, scope: !6709)
!6727 = !DILocation(line: 3159, column: 8, scope: !6715)
!6728 = !DILocation(line: 3160, column: 6, scope: !6715)
!6729 = !DILocation(line: 3163, column: 30, scope: !6711)
!6730 = distinct !{!6730, !6717, !6731}
!6731 = !DILocation(line: 3164, column: 5, scope: !6701)
!6732 = !DILocation(line: 3165, column: 1, scope: !6701)
!6733 = !DILocation(line: 3158, column: 3, scope: !6714)
!6734 = distinct !DISubprogram(name: "scan_stores_nospill", scope: !3, file: !3, line: 3015, type: !6669, scopeLine: 3016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6735)
!6735 = !{!6736, !6737, !6738, !6739, !6741, !6742}
!6736 = !DILocalVariable(name: "store_info", arg: 1, scope: !6734, file: !3, line: 3015, type: !1818)
!6737 = !DILocalVariable(name: "gen", arg: 2, scope: !6734, file: !3, line: 3015, type: !1839)
!6738 = !DILocalVariable(name: "kill", arg: 3, scope: !6734, file: !3, line: 3015, type: !1839)
!6739 = !DILocalVariable(name: "i", scope: !6740, file: !3, line: 3019, type: !868)
!6740 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 3018, column: 5)
!6741 = !DILocalVariable(name: "group_info", scope: !6740, file: !3, line: 3020, type: !1885)
!6742 = !DILocalVariable(name: "index", scope: !6743, file: !3, line: 3025, type: !728)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 3024, column: 4)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 3023, column: 2)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 3023, column: 2)
!6746 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 3022, column: 11)
!6747 = !DILocation(line: 0, scope: !6734)
!6748 = !DILocation(line: 0, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 3029, column: 7)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 3027, column: 8)
!6751 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 3026, column: 10)
!6752 = !DILocation(line: 3017, column: 3, scope: !6734)
!6753 = !DILocation(line: 3021, column: 4, scope: !6740)
!6754 = !DILocation(line: 0, scope: !6740)
!6755 = !DILocation(line: 3022, column: 23, scope: !6746)
!6756 = !DILocation(line: 3022, column: 11, scope: !6746)
!6757 = !DILocation(line: 3022, column: 11, scope: !6740)
!6758 = !DILocation(line: 0, scope: !6744)
!6759 = !DILocation(line: 3023, column: 23, scope: !6745)
!6760 = !DILocation(line: 3023, column: 7, scope: !6745)
!6761 = !DILocation(line: 3033, column: 32, scope: !6740)
!6762 = distinct !{!6762, !6752, !6763}
!6763 = !DILocation(line: 3034, column: 5, scope: !6734)
!6764 = !DILocation(line: 0, scope: !6745)
!6765 = !DILocation(line: 3023, column: 46, scope: !6744)
!6766 = !DILocation(line: 3023, column: 32, scope: !6744)
!6767 = !DILocation(line: 3023, column: 2, scope: !6745)
!6768 = !DILocation(line: 3025, column: 18, scope: !6743)
!6769 = !DILocation(line: 0, scope: !6743)
!6770 = !DILocation(line: 3026, column: 16, scope: !6751)
!6771 = !DILocation(line: 3026, column: 10, scope: !6743)
!6772 = !DILocation(line: 3028, column: 3, scope: !6750)
!6773 = !DILocation(line: 3029, column: 7, scope: !6750)
!6774 = !DILocation(line: 3023, column: 52, scope: !6744)
!6775 = !DILocation(line: 3023, column: 2, scope: !6744)
!6776 = distinct !{!6776, !6767, !6777}
!6777 = !DILocation(line: 3032, column: 4, scope: !6745)
!6778 = !DILocation(line: 3035, column: 1, scope: !6734)
!6779 = !DILocation(line: 3030, column: 5, scope: !6749)
!6780 = distinct !DISubprogram(name: "scan_reads_nospill", scope: !3, file: !3, line: 3066, type: !6781, scopeLine: 3067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6783)
!6781 = !DISubroutineType(types: !6782)
!6782 = !{null, !750, !1839, !1839}
!6783 = !{!6784, !6785, !6786, !6787, !6788, !6789, !6790, !6801}
!6784 = !DILocalVariable(name: "insn_info", arg: 1, scope: !6780, file: !3, line: 3066, type: !750)
!6785 = !DILocalVariable(name: "gen", arg: 2, scope: !6780, file: !3, line: 3066, type: !1839)
!6786 = !DILocalVariable(name: "kill", arg: 3, scope: !6780, file: !3, line: 3066, type: !1839)
!6787 = !DILocalVariable(name: "read_info", scope: !6780, file: !3, line: 3068, type: !1846)
!6788 = !DILocalVariable(name: "i", scope: !6780, file: !3, line: 3069, type: !728)
!6789 = !DILocalVariable(name: "group", scope: !6780, file: !3, line: 3070, type: !1885)
!6790 = !DILocalVariable(name: "j", scope: !6791, file: !3, line: 3103, type: !868)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 3100, column: 7)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 3092, column: 9)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 3091, column: 3)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 3090, column: 12)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 3089, column: 6)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 3088, column: 8)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 3087, column: 2)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 3086, column: 7)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !3, line: 3086, column: 7)
!6800 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 3085, column: 5)
!6801 = !DILocalVariable(name: "index", scope: !6802, file: !3, line: 3106, type: !728)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 3105, column: 4)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 3104, column: 9)
!6804 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3104, column: 9)
!6805 = !DILocation(line: 0, scope: !6780)
!6806 = !DILocation(line: 3068, column: 38, scope: !6780)
!6807 = !DILocation(line: 3070, column: 3, scope: !6780)
!6808 = !DILocation(line: 3073, column: 18, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 3073, column: 7)
!6810 = !DILocation(line: 3073, column: 7, scope: !6809)
!6811 = !DILocation(line: 3073, column: 7, scope: !6780)
!6812 = !DILocation(line: 0, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3078, column: 10)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 3077, column: 4)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 3076, column: 6)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 3075, column: 7)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 3075, column: 7)
!6818 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 3074, column: 5)
!6819 = !DILocation(line: 3075, column: 7, scope: !6817)
!6820 = !DILocation(line: 0, scope: !6817)
!6821 = !DILocation(line: 3075, column: 19, scope: !6816)
!6822 = !DILocation(line: 3076, column: 6, scope: !6815)
!6823 = !DILocation(line: 3076, column: 13, scope: !6815)
!6824 = !DILocation(line: 3076, column: 30, scope: !6815)
!6825 = !DILocation(line: 3076, column: 40, scope: !6815)
!6826 = !DILocation(line: 3076, column: 33, scope: !6815)
!6827 = !DILocation(line: 3076, column: 6, scope: !6816)
!6828 = !DILocation(line: 3080, column: 41, scope: !6814)
!6829 = !DILocation(line: 3080, column: 6, scope: !6814)
!6830 = !DILocation(line: 3081, column: 4, scope: !6814)
!6831 = !DILocation(line: 3075, column: 73, scope: !6816)
!6832 = !DILocation(line: 3075, column: 7, scope: !6816)
!6833 = distinct !{!6833, !6819, !6834}
!6834 = !DILocation(line: 3081, column: 4, scope: !6817)
!6835 = !DILocation(line: 3084, column: 3, scope: !6780)
!6836 = !DILocation(line: 3079, column: 38, scope: !6813)
!6837 = !DILocation(line: 3079, column: 8, scope: !6813)
!6838 = !DILocation(line: 3080, column: 34, scope: !6814)
!6839 = !DILocation(line: 0, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 3131, column: 13)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 3130, column: 7)
!6842 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 3124, column: 9)
!6843 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 3117, column: 3)
!6844 = !DILocation(line: 0, scope: !6794)
!6845 = !DILocation(line: 0, scope: !6842)
!6846 = !DILocation(line: 0, scope: !6792)
!6847 = !DILocation(line: 3086, column: 7, scope: !6799)
!6848 = !DILocation(line: 0, scope: !6799)
!6849 = !DILocation(line: 3086, column: 19, scope: !6798)
!6850 = !DILocation(line: 3088, column: 8, scope: !6796)
!6851 = !DILocation(line: 3088, column: 15, scope: !6796)
!6852 = !DILocation(line: 3088, column: 8, scope: !6797)
!6853 = !DILocation(line: 3090, column: 28, scope: !6794)
!6854 = !DILocation(line: 3090, column: 14, scope: !6794)
!6855 = !DILocation(line: 3090, column: 12, scope: !6795)
!6856 = !DILocation(line: 3092, column: 20, scope: !6792)
!6857 = !DILocation(line: 3092, column: 39, scope: !6792)
!6858 = !DILocation(line: 3092, column: 26, scope: !6792)
!6859 = !DILocation(line: 3092, column: 9, scope: !6793)
!6860 = !DILocation(line: 3095, column: 13, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 3093, column: 7)
!6862 = !DILocation(line: 3096, column: 34, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 3095, column: 13)
!6864 = !DILocation(line: 3096, column: 4, scope: !6863)
!6865 = !DILocation(line: 3097, column: 37, scope: !6861)
!6866 = !DILocation(line: 3097, column: 44, scope: !6861)
!6867 = !DILocation(line: 3097, column: 9, scope: !6861)
!6868 = !DILocation(line: 3098, column: 7, scope: !6861)
!6869 = !DILocation(line: 3104, column: 18, scope: !6804)
!6870 = !DILocation(line: 0, scope: !6791)
!6871 = !DILocation(line: 3104, column: 14, scope: !6804)
!6872 = !DILocation(line: 3104, column: 51, scope: !6803)
!6873 = !DILocation(line: 0, scope: !6804)
!6874 = !DILocation(line: 3104, column: 40, scope: !6803)
!6875 = !DILocation(line: 3104, column: 38, scope: !6803)
!6876 = !DILocation(line: 3104, column: 9, scope: !6804)
!6877 = !DILocation(line: 3106, column: 36, scope: !6802)
!6878 = !DILocation(line: 3106, column: 18, scope: !6802)
!6879 = !DILocation(line: 0, scope: !6802)
!6880 = !DILocation(line: 3107, column: 16, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 3107, column: 10)
!6882 = !DILocation(line: 3107, column: 10, scope: !6802)
!6883 = !DILocation(line: 3111, column: 10, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6881, file: !3, line: 3108, column: 8)
!6885 = !DILocation(line: 3112, column: 8, scope: !6884)
!6886 = !DILocation(line: 3104, column: 57, scope: !6803)
!6887 = !DILocation(line: 3104, column: 9, scope: !6803)
!6888 = distinct !{!6888, !6876, !6889}
!6889 = !DILocation(line: 3113, column: 4, scope: !6804)
!6890 = !DILocation(line: 3086, column: 73, scope: !6798)
!6891 = !DILocation(line: 3110, column: 5, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 3109, column: 14)
!6893 = !DILocation(line: 3124, column: 30, scope: !6842)
!6894 = !DILocation(line: 3125, column: 9, scope: !6842)
!6895 = !DILocation(line: 3125, column: 42, scope: !6842)
!6896 = !DILocation(line: 3127, column: 14, scope: !6842)
!6897 = !DILocation(line: 3128, column: 18, scope: !6842)
!6898 = !DILocation(line: 3125, column: 12, scope: !6842)
!6899 = !DILocation(line: 3124, column: 9, scope: !6843)
!6900 = !DILocation(line: 3131, column: 13, scope: !6841)
!6901 = !DILocation(line: 3132, column: 27, scope: !6840)
!6902 = !DILocation(line: 3132, column: 34, scope: !6840)
!6903 = !DILocation(line: 3132, column: 4, scope: !6840)
!6904 = !DILocation(line: 3133, column: 37, scope: !6841)
!6905 = !DILocation(line: 3133, column: 44, scope: !6841)
!6906 = !DILocation(line: 3133, column: 9, scope: !6841)
!6907 = !DILocation(line: 3134, column: 7, scope: !6841)
!6908 = !DILocation(line: 3086, column: 7, scope: !6798)
!6909 = distinct !{!6909, !6847, !6910}
!6910 = !DILocation(line: 3137, column: 2, scope: !6799)
!6911 = !DILocation(line: 3139, column: 30, scope: !6800)
!6912 = distinct !{!6912, !6835, !6913}
!6913 = !DILocation(line: 3140, column: 5, scope: !6780)
!6914 = !DILocation(line: 3141, column: 1, scope: !6780)
!6915 = distinct !DISubprogram(name: "get_bitmap_index", scope: !3, file: !3, line: 2993, type: !6916, scopeLine: 2994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6918)
!6916 = !DISubroutineType(types: !6917)
!6917 = !{!728, !1885, !868}
!6918 = !{!6919, !6920, !6921}
!6919 = !DILocalVariable(name: "group_info", arg: 1, scope: !6915, file: !3, line: 2993, type: !1885)
!6920 = !DILocalVariable(name: "offset", arg: 2, scope: !6915, file: !3, line: 2993, type: !868)
!6921 = !DILocalVariable(name: "offset_p", scope: !6922, file: !3, line: 2997, type: !868)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 2996, column: 5)
!6923 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 2995, column: 7)
!6924 = !DILocation(line: 0, scope: !6915)
!6925 = !DILocation(line: 2995, column: 14, scope: !6923)
!6926 = !DILocation(line: 2995, column: 7, scope: !6915)
!6927 = !DILocation(line: 2997, column: 32, scope: !6922)
!6928 = !DILocation(line: 0, scope: !6922)
!6929 = !DILocation(line: 2998, column: 35, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 2998, column: 11)
!6931 = !DILocation(line: 2998, column: 23, scope: !6930)
!6932 = !DILocation(line: 2998, column: 20, scope: !6930)
!6933 = !DILocation(line: 2998, column: 11, scope: !6922)
!6934 = !DILocation(line: 3000, column: 26, scope: !6922)
!6935 = !DILocation(line: 3000, column: 14, scope: !6922)
!6936 = !DILocation(line: 3000, column: 7, scope: !6922)
!6937 = !DILocation(line: 3004, column: 33, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 3004, column: 11)
!6939 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 3003, column: 5)
!6940 = !DILocation(line: 3004, column: 21, scope: !6938)
!6941 = !DILocation(line: 3004, column: 18, scope: !6938)
!6942 = !DILocation(line: 3004, column: 11, scope: !6939)
!6943 = !DILocation(line: 3006, column: 26, scope: !6939)
!6944 = !DILocation(line: 3006, column: 14, scope: !6939)
!6945 = !DILocation(line: 3006, column: 7, scope: !6939)
!6946 = !DILocation(line: 0, scope: !6923)
!6947 = !DILocation(line: 3008, column: 1, scope: !6915)
!6948 = distinct !DISubprogram(name: "RESET_BIT", scope: !3035, file: !3035, line: 82, type: !6949, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6951)
!6949 = !DISubroutineType(types: !6950)
!6950 = !{null, !3034, !7}
!6951 = !{!6952, !6953, !6954}
!6952 = !DILocalVariable(name: "map", arg: 1, scope: !6948, file: !3035, line: 82, type: !3034)
!6953 = !DILocalVariable(name: "bitno", arg: 2, scope: !6948, file: !3035, line: 82, type: !7)
!6954 = !DILocalVariable(name: "oldbit", scope: !6955, file: !3035, line: 86, type: !727)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !3035, line: 85, column: 5)
!6956 = distinct !DILexicalBlock(scope: !6948, file: !3035, line: 84, column: 7)
!6957 = !DILocation(line: 0, scope: !6948)
!6958 = !DILocation(line: 84, column: 12, scope: !6956)
!6959 = !DILocation(line: 84, column: 7, scope: !6956)
!6960 = !DILocation(line: 84, column: 7, scope: !6948)
!6961 = !DILocation(line: 92, column: 42, scope: !6948)
!6962 = !DILocation(line: 92, column: 31, scope: !6948)
!6963 = !DILocation(line: 91, column: 19, scope: !6948)
!6964 = !DILocation(line: 91, column: 3, scope: !6948)
!6965 = !DILocation(line: 87, column: 16, scope: !6955)
!6966 = !DILocation(line: 88, column: 11, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6955, file: !3035, line: 88, column: 11)
!6968 = !DILocation(line: 88, column: 11, scope: !6955)
!6969 = !DILocation(line: 89, column: 2, scope: !6967)
!6970 = !DILocation(line: 89, column: 41, scope: !6967)
!6971 = !DILocation(line: 92, column: 8, scope: !6948)
!6972 = !DILocation(line: 92, column: 5, scope: !6948)
!6973 = !DILocation(line: 93, column: 1, scope: !6948)
!6974 = distinct !DISubprogram(name: "ei_start_1", scope: !318, file: !318, line: 696, type: !6975, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6977)
!6975 = !DISubroutineType(types: !6976)
!6976 = !{!6526, !6531}
!6977 = !{!6978, !6979}
!6978 = !DILocalVariable(name: "ev", arg: 1, scope: !6974, file: !318, line: 696, type: !6531)
!6979 = !DILocalVariable(name: "i", scope: !6974, file: !318, line: 698, type: !6526)
!6980 = !DILocation(line: 0, scope: !6974)
!6981 = !DILocation(line: 700, column: 5, scope: !6974)
!6982 = !DILocation(line: 700, column: 11, scope: !6974)
!6983 = !DILocation(line: 701, column: 5, scope: !6974)
!6984 = !DILocation(line: 701, column: 15, scope: !6974)
!6985 = !DILocation(line: 703, column: 3, scope: !6974)
!6986 = distinct !DISubprogram(name: "ei_cond", scope: !318, file: !318, line: 771, type: !6987, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6990)
!6987 = !DISubroutineType(types: !6988)
!6988 = !{!727, !6526, !6989}
!6989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!6990 = !{!6991, !6992}
!6991 = !DILocalVariable(name: "ei", arg: 1, scope: !6986, file: !318, line: 771, type: !6526)
!6992 = !DILocalVariable(name: "p", arg: 2, scope: !6986, file: !318, line: 771, type: !6989)
!6993 = !DILocation(line: 0, scope: !6986)
!6994 = !DILocation(line: 773, column: 8, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6986, file: !318, line: 773, column: 7)
!6996 = !DILocation(line: 773, column: 7, scope: !6986)
!6997 = !DILocation(line: 775, column: 12, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6995, file: !318, line: 774, column: 5)
!6999 = !DILocation(line: 776, column: 7, scope: !6998)
!7000 = !DILocation(line: 781, column: 7, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6995, file: !318, line: 779, column: 5)
!7002 = !DILocation(line: 0, scope: !6995)
!7003 = !DILocation(line: 783, column: 1, scope: !6986)
!7004 = distinct !DISubprogram(name: "ei_next", scope: !318, file: !318, line: 736, type: !7005, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7008)
!7005 = !DISubroutineType(types: !7006)
!7006 = !{null, !7007}
!7007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6526, size: 64)
!7008 = !{!7009}
!7009 = !DILocalVariable(name: "i", arg: 1, scope: !7004, file: !318, line: 736, type: !7007)
!7010 = !DILocation(line: 0, scope: !7004)
!7011 = !DILocation(line: 738, column: 3, scope: !7004)
!7012 = !DILocation(line: 739, column: 11, scope: !7004)
!7013 = !DILocation(line: 740, column: 1, scope: !7004)
!7014 = distinct !DISubprogram(name: "ei_end_p", scope: !318, file: !318, line: 721, type: !7015, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7017)
!7015 = !DISubroutineType(types: !7016)
!7016 = !{!727, !6526}
!7017 = !{!7018}
!7018 = !DILocalVariable(name: "i", arg: 1, scope: !7014, file: !318, line: 721, type: !6526)
!7019 = !DILocation(line: 723, column: 22, scope: !7014)
!7020 = !DILocation(line: 723, column: 19, scope: !7014)
!7021 = !DILocation(line: 723, column: 10, scope: !7014)
!7022 = !DILocation(line: 723, column: 3, scope: !7014)
!7023 = distinct !DISubprogram(name: "ei_edge", scope: !318, file: !318, line: 752, type: !7024, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7026)
!7024 = !DISubroutineType(types: !7025)
!7025 = !{!1171, !6526}
!7026 = !{!7027}
!7027 = !DILocalVariable(name: "i", arg: 1, scope: !7023, file: !318, line: 752, type: !6526)
!7028 = !DILocation(line: 754, column: 10, scope: !7023)
!7029 = !DILocation(line: 754, column: 3, scope: !7023)
!7030 = distinct !DISubprogram(name: "ei_container", scope: !318, file: !318, line: 685, type: !7031, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7033)
!7031 = !DISubroutineType(types: !7032)
!7032 = !{!1159, !6526}
!7033 = !{!7034}
!7034 = !DILocalVariable(name: "i", arg: 1, scope: !7030, file: !318, line: 685, type: !6526)
!7035 = !DILocation(line: 687, column: 3, scope: !7030)
!7036 = !DILocation(line: 688, column: 10, scope: !7030)
!7037 = !DILocation(line: 688, column: 3, scope: !7030)
!7038 = distinct !DISubprogram(name: "dse_confluence_0", scope: !3, file: !3, line: 3381, type: !7039, scopeLine: 3382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7041)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{null, !1154}
!7041 = !{!7042, !7043}
!7042 = !DILocalVariable(name: "bb", arg: 1, scope: !7038, file: !3, line: 3381, type: !1154)
!7043 = !DILocalVariable(name: "bb_info", scope: !7038, file: !3, line: 3383, type: !745)
!7044 = !DILocation(line: 0, scope: !7038)
!7045 = !DILocation(line: 3383, column: 36, scope: !7038)
!7046 = !DILocation(line: 3385, column: 17, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 3385, column: 7)
!7048 = !DILocation(line: 3385, column: 7, scope: !7038)
!7049 = !DILocation(line: 3383, column: 23, scope: !7038)
!7050 = !DILocation(line: 3388, column: 17, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 3388, column: 7)
!7052 = !DILocation(line: 3388, column: 8, scope: !7051)
!7053 = !DILocation(line: 3388, column: 7, scope: !7038)
!7054 = !DILocation(line: 3390, column: 22, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 3389, column: 5)
!7056 = !DILocation(line: 3390, column: 20, scope: !7055)
!7057 = !DILocation(line: 3391, column: 34, scope: !7055)
!7058 = !DILocation(line: 3391, column: 56, scope: !7055)
!7059 = !DILocation(line: 3391, column: 7, scope: !7055)
!7060 = !DILocation(line: 3392, column: 5, scope: !7055)
!7061 = !DILocation(line: 3393, column: 1, scope: !7038)
!7062 = distinct !DISubprogram(name: "dse_confluence_n", scope: !3, file: !3, line: 3400, type: !7063, scopeLine: 3401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7065)
!7063 = !DISubroutineType(types: !7064)
!7064 = !{null, !1171}
!7065 = !{!7066, !7067, !7068}
!7066 = !DILocalVariable(name: "e", arg: 1, scope: !7062, file: !3, line: 3400, type: !1171)
!7067 = !DILocalVariable(name: "src_info", scope: !7062, file: !3, line: 3402, type: !745)
!7068 = !DILocalVariable(name: "dest_info", scope: !7062, file: !3, line: 3403, type: !745)
!7069 = !DILocation(line: 0, scope: !7062)
!7070 = !DILocation(line: 3402, column: 24, scope: !7062)
!7071 = !DILocation(line: 3403, column: 37, scope: !7062)
!7072 = !DILocation(line: 3403, column: 43, scope: !7062)
!7073 = !DILocation(line: 3403, column: 25, scope: !7062)
!7074 = !DILocation(line: 3405, column: 18, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 3405, column: 7)
!7076 = !DILocation(line: 3405, column: 7, scope: !7075)
!7077 = !DILocation(line: 3405, column: 7, scope: !7062)
!7078 = !DILocation(line: 3402, column: 36, scope: !7062)
!7079 = !DILocation(line: 3402, column: 41, scope: !7062)
!7080 = !DILocation(line: 3407, column: 21, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 3407, column: 11)
!7082 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 3406, column: 5)
!7083 = !DILocation(line: 3407, column: 11, scope: !7081)
!7084 = !DILocation(line: 3407, column: 11, scope: !7082)
!7085 = !DILocation(line: 3408, column: 2, scope: !7081)
!7086 = !DILocation(line: 3411, column: 20, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 3410, column: 2)
!7088 = !DILocation(line: 3411, column: 18, scope: !7087)
!7089 = !DILocation(line: 3412, column: 43, scope: !7087)
!7090 = !DILocation(line: 3412, column: 4, scope: !7087)
!7091 = !DILocation(line: 3415, column: 1, scope: !7062)
!7092 = distinct !DISubprogram(name: "dse_transfer_function", scope: !3, file: !3, line: 3435, type: !7093, scopeLine: 3436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7095)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{!727, !728}
!7095 = !{!7096, !7097}
!7096 = !DILocalVariable(name: "bb_index", arg: 1, scope: !7092, file: !3, line: 3435, type: !728)
!7097 = !DILocalVariable(name: "bb_info", scope: !7092, file: !3, line: 3437, type: !745)
!7098 = !DILocation(line: 0, scope: !7092)
!7099 = !DILocation(line: 3437, column: 23, scope: !7092)
!7100 = !DILocation(line: 3439, column: 16, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 3439, column: 7)
!7102 = !DILocation(line: 3439, column: 7, scope: !7101)
!7103 = !DILocation(line: 3439, column: 7, scope: !7092)
!7104 = !DILocation(line: 3441, column: 20, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 3441, column: 11)
!7106 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 3440, column: 5)
!7107 = !DILocation(line: 3441, column: 11, scope: !7105)
!7108 = !DILocation(line: 3441, column: 11, scope: !7106)
!7109 = !DILocation(line: 3444, column: 17, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 3444, column: 8)
!7111 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 3442, column: 2)
!7112 = !DILocation(line: 3444, column: 8, scope: !7110)
!7113 = !DILocation(line: 3444, column: 8, scope: !7111)
!7114 = !DILocation(line: 3445, column: 57, scope: !7110)
!7115 = !DILocation(line: 3445, column: 13, scope: !7110)
!7116 = !DILocation(line: 3445, column: 6, scope: !7110)
!7117 = !DILocation(line: 3449, column: 22, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3448, column: 6)
!7119 = !DILocation(line: 3449, column: 20, scope: !7118)
!7120 = !DILocation(line: 3450, column: 52, scope: !7118)
!7121 = !DILocation(line: 3451, column: 18, scope: !7118)
!7122 = !DILocation(line: 3451, column: 32, scope: !7118)
!7123 = !DILocation(line: 3450, column: 8, scope: !7118)
!7124 = !DILocation(line: 3452, column: 8, scope: !7118)
!7125 = !DILocation(line: 3463, column: 20, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 3463, column: 11)
!7127 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 3460, column: 5)
!7128 = !DILocation(line: 3463, column: 11, scope: !7126)
!7129 = !DILocation(line: 3463, column: 11, scope: !7127)
!7130 = !DILocation(line: 3467, column: 18, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 3466, column: 2)
!7132 = !DILocation(line: 3467, column: 16, scope: !7131)
!7133 = !DILocation(line: 3468, column: 39, scope: !7131)
!7134 = !DILocation(line: 3468, column: 4, scope: !7131)
!7135 = !DILocation(line: 3469, column: 4, scope: !7131)
!7136 = !DILocation(line: 0, scope: !7101)
!7137 = !DILocation(line: 3472, column: 1, scope: !7092)
!7138 = distinct !DISubprogram(name: "VEC_group_info_t_heap_free", scope: !3, file: !3, line: 524, type: !7139, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7141)
!7139 = !DISubroutineType(types: !7140)
!7140 = !{null, !3822}
!7141 = !{!7142}
!7142 = !DILocalVariable(name: "vec_", arg: 1, scope: !7138, file: !3, line: 524, type: !3822)
!7143 = !DILocation(line: 0, scope: !7138)
!7144 = !DILocation(line: 524, column: 1, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 524, column: 1)
!7146 = !DILocation(line: 524, column: 1, scope: !7138)
