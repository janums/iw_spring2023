; ModuleID = 'sel-sched.bc'
source_filename = "sel-sched.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.VEC_sel_global_bb_info_def_heap = type { %struct.VEC_sel_global_bb_info_def_base }
%struct.VEC_sel_global_bb_info_def_base = type { i32, i32, [1 x %struct.sel_global_bb_info_def] }
%struct.sel_global_bb_info_def = type { %struct.bitmap_head_def*, i8 }
%struct.VEC_sel_insn_data_def_heap = type { %struct.VEC_sel_insn_data_def_base }
%struct.VEC_sel_insn_data_def_base = type { i32, i32, [1 x %struct._sel_insn_data] }
%struct._sel_insn_data = type { %struct._expr, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.htab*, %struct.deps, %struct.rtx_def*, i32, i32, i32, i8 }
%struct._expr = type { %struct.vinsn_def*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.VEC_expr_history_def_heap*, i8, i8 }
%struct.vinsn_def = type { %struct.rtx_def*, %struct.idata_def, i32, i32, i32, i32, i8 }
%struct.idata_def = type { i32, %struct.rtx_def*, %struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_expr_history_def_heap = type { %struct.VEC_expr_history_def_base }
%struct.VEC_expr_history_def_base = type { i32, i32, [1 x %struct.expr_history_def_1] }
%struct.expr_history_def_1 = type { i32, %struct.vinsn_def*, %struct.vinsn_def*, i32, i32 }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.deps = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, %struct.deps_reg*, %struct.bitmap_head_def, %struct.bitmap_head_def, i32, i8 }
%struct.deps_reg = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.code_motion_path_driver_info_def = type { i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)*, void (%struct.rtx_def*, %struct._expr*, %struct.cmpd_local_params*, i8*)*, i8 (%struct.rtx_def*, %struct._list_node*, i8*)*, void (%struct.rtx_def*, %struct.rtx_def*, i32, %struct.cmpd_local_params*, i8*)*, void (%struct.cmpd_local_params*, i8*)*, void (%struct.rtx_def*, i8*)*, void (%struct.rtx_def*, %struct.cmpd_local_params*, i8*)*, i32, i8* }
%struct.cmpd_local_params = type { %struct.edge_def*, %struct.edge_def*, %struct._expr*, %struct._expr*, %struct._list_node*, i8 }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct._list_node = type { %struct._list_node*, %union.anon.0 }
%union.anon.0 = type { %struct._fence }
%struct._fence = type { %struct.rtx_def*, i8*, i32, i32, %struct._list_node*, %struct.deps*, i8*, %struct.VEC_rtx_gc*, i32*, i32, %struct.rtx_def*, i32, %struct.rtx_def*, i8 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.spec_info_def = type { i32, %struct._IO_FILE*, i32, i32, i32 }
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.VEC_insn_t_heap = type { %struct.VEC_insn_t_base }
%struct.VEC_insn_t_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_sel_region_bb_info_def_heap = type { %struct.VEC_sel_region_bb_info_def_base }
%struct.VEC_sel_region_bb_info_def_base = type { i32, i32, [1 x %struct.sel_region_bb_info_def] }
%struct.sel_region_bb_info_def = type { %struct.rtx_def*, %struct._list_node*, i32 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.VEC_vinsn_t_heap = type { %struct.VEC_vinsn_t_base }
%struct.VEC_vinsn_t_base = type { i32, i32, [1 x %struct.vinsn_def*] }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.ready_list = type { %struct.rtx_def**, i32, i32, i32, i32 }
%struct.VEC_expr_t_heap = type { %struct.VEC_expr_t_base }
%struct.VEC_expr_t_base = type { i32, i32, [1 x %struct._expr*] }
%struct.reg_rename = type { i64, i64, i8 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.hard_regs_data = type { [87 x i64], [87 x i8], [53 x i64], [87 x i64], i64, i64 }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [14 x %struct.rtx_def**], [14 x i8], i8, i8, i8, [30 x i8], %struct.rtx_def* }
%struct.operand_alternative = type { i8*, i32, i32, i32, i32, i8 }
%struct.reg_info_t = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.haifa_sched_info = type { void ()*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8 (%struct.rtx_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.moveop_static_params = type { %struct.rtx_def*, %struct._expr*, i32, i8 }
%struct._list_iterator = type { %struct._list_node**, i8, i8 }
%struct.VEC_basic_block_heap = type { %struct.VEC_basic_block_base }
%struct.VEC_rtx_heap = type { %struct.VEC_rtx_base }
%struct.flist_tail_def = type { %struct._list_node*, %struct._list_node** }
%struct.succ_iterator = type { i8, %struct.edge_def*, %struct.edge_def*, %struct.edge_iterator, %struct.basic_block_def*, i16, i16, i32, %struct.VEC_edge_heap* }
%struct.VEC_edge_heap = type { %struct.VEC_edge_base }
%struct.rtx_search_arg = type { %struct.rtx_def*, i32 }
%struct.succs_info = type { i16, %struct.VEC_rtx_heap*, %struct.VEC_int_heap*, %struct.VEC_rtx_heap*, i32, i32, i32 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct._bnd = type { %struct.rtx_def*, %struct._list_node*, %struct._list_node*, %struct._list_node*, %struct.deps* }
%struct._def = type { %struct.rtx_def*, i8 }
%struct.fur_static_params = type { %struct.bitmap_head_def*, %struct._list_node**, i8 }
%struct.hard_reg_set_iterator = type { i64*, i16, i16, i64 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_forced_ebb_heads = internal global %struct.bitmap_head_def zeroinitializer, align 8, !dbg !0
@forced_ebb_heads = dso_local local_unnamed_addr global %struct.bitmap_head_def* @_forced_ebb_heads, align 8, !dbg !2061
@blocks_to_reschedule = dso_local local_unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2064
@ignore_first = internal unnamed_addr global i1 false, align 1, !dbg !2354
@sel_global_bb_info = external dso_local local_unnamed_addr global %struct.VEC_sel_global_bb_info_def_heap*, align 8
@.str = private unnamed_addr constant [12 x i8] c"sel-sched.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@s_i_d = external dso_local local_unnamed_addr global %struct.VEC_sel_insn_data_def_heap*, align 8
@sched_luids = external dso_local local_unnamed_addr global %struct.VEC_int_heap*, align 8
@sched_verbose = external dso_local local_unnamed_addr global i32, align 4
@sched_dump_to_dot_p = external dso_local local_unnamed_addr global i8, align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"sel_add_to_insn_priority: insn %d, by %d (now %d+%d).\0A\00", align 1
@sched_dump = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"move_op\00", align 1
@move_op_hooks = dso_local global %struct.code_motion_path_driver_info_def { i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)* @move_op_on_enter, void (%struct.rtx_def*, %struct._expr*, %struct.cmpd_local_params*, i8*)* @move_op_orig_expr_found, i8 (%struct.rtx_def*, %struct._list_node*, i8*)* @move_op_orig_expr_not_found, void (%struct.rtx_def*, %struct.rtx_def*, i32, %struct.cmpd_local_params*, i8*)* @move_op_merge_succs, void (%struct.cmpd_local_params*, i8*)* @move_op_after_merge_succs, void (%struct.rtx_def*, i8*)* @move_op_ascend, void (%struct.rtx_def*, %struct.cmpd_local_params*, i8*)* @move_op_at_first_insn, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0) }, align 8, !dbg !2066
@.str.5 = private unnamed_addr constant [15 x i8] c"find_used_regs\00", align 1
@fur_hooks = dso_local global %struct.code_motion_path_driver_info_def { i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)* @fur_on_enter, void (%struct.rtx_def*, %struct._expr*, %struct.cmpd_local_params*, i8*)* @fur_orig_expr_found, i8 (%struct.rtx_def*, %struct._list_node*, i8*)* @fur_orig_expr_not_found, void (%struct.rtx_def*, %struct.rtx_def*, i32, %struct.cmpd_local_params*, i8*)* @fur_merge_succs, void (%struct.cmpd_local_params*, i8*)* null, void (%struct.rtx_def*, i8*)* null, void (%struct.rtx_def*, %struct.cmpd_local_params*, i8*)* @fur_at_first_insn, i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0) }, align 8, !dbg !2110
@.str.6 = private unnamed_addr constant [22 x i8] c"Scheduling region %d\0A\00", align 1
@pipelining_p = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !2112
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@nr_regions = external dso_local local_unnamed_addr global i32, align 4
@bookkeeping_p = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !2114
@max_insns_to_rename = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2116
@code_motion_path_driver_info = common dso_local local_unnamed_addr global %struct.code_motion_path_driver_info_def* null, align 8, !dbg !2118
@sched_emulate_haifa_p = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2121
@global_level = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2123
@fences = common dso_local local_unnamed_addr global %struct._list_node* null, align 8, !dbg !2125
@.str.7 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@nop_pattern = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@current_originators = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2130
@current_copies = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2132
@first_emitted_uid = internal unnamed_addr global i32 0, align 4, !dbg !2134
@num_insns_scheduled = internal unnamed_addr global i32 0, align 4, !dbg !2136
@max_uid_before_move_op = internal unnamed_addr global i32 0, align 4, !dbg !2138
@stat_bookkeeping_copies = internal unnamed_addr global i32 0, align 4, !dbg !2140
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@spec_info = external dso_local local_unnamed_addr global %struct.spec_info_def*, align 8
@vec_temp_moveop_nops = internal global %struct.VEC_insn_t_heap* null, align 8, !dbg !2142
@.str.8 = private unnamed_addr constant [8 x i8] c"Moving \00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c" through %d: \00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"removed\0A\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"unchanged\0A\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"unchanged (as RHS)\0A\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"changed: \00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"removed (cached)\0A\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"unchanged (cached)\0A\00", align 1
@.str.17 = private unnamed_addr constant [47 x i8] c"unchanged (as RHS, cached, inside insn group)\0A\00", align 1
@enable_schedule_as_rhs_p = internal unnamed_addr global i1 false, align 1, !dbg !2355
@.str.18 = private unnamed_addr constant [28 x i8] c"unchanged (as RHS, cached)\0A\00", align 1
@.str.19 = private unnamed_addr constant [55 x i8] c"removed (cached as RHS, but renaming is now disabled)\0A\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"changed (cached): \00", align 1
@was_target_conflict = internal unnamed_addr global i1 false, align 1, !dbg !2356
@.str.21 = private unnamed_addr constant [26 x i8] c"no bookkeeping required: \00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"only one pred edge: \00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"found existing block: \00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"would create bookkeeping block: \00", align 1
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@.str.25 = private unnamed_addr constant [38 x i8] c"Generating bookkeeping insn (%d->%d)\0A\00", align 1
@.str.26 = private unnamed_addr constant [50 x i8] c"New block is %i, split from bookkeeping block %i\0A\00", align 1
@.str.27 = private unnamed_addr constant [38 x i8] c"Pre-existing bookkeeping block is %i\0A\00", align 1
@current_loop_nest = external dso_local local_unnamed_addr global %struct.loop*, align 8
@sched_split_block = external dso_local local_unnamed_addr global %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, align 8
@sel_region_bb_info = external dso_local local_unnamed_addr global %struct.VEC_sel_region_bb_info_def_heap*, align 8
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@.str.28 = private unnamed_addr constant [30 x i8] c"Swapping block ids %i and %i\0A\00", align 1
@block_to_bb = external dso_local local_unnamed_addr global i32*, align 8
@containing_rgn = external dso_local local_unnamed_addr global i32*, align 8
@current_nr_blocks = external dso_local local_unnamed_addr global i32, align 4
@rgn_bb_table = external dso_local local_unnamed_addr global i32*, align 8
@ebb_head = external dso_local local_unnamed_addr global i32*, align 8
@code_motion_visited_blocks = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2148
@.str.29 = private unnamed_addr constant [32 x i8] c"Swapping code labels %i and %i\0A\00", align 1
@reg_rename_this_tick = internal unnamed_addr global i32 0, align 4, !dbg !2150
@reg_rename_tick = internal global [53 x i32] zeroinitializer, align 16, !dbg !2152
@.str.30 = private unnamed_addr constant [33 x i8] c"Insn %d is ineligible_successor\0A\00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"Insn %d has a valid av set: \00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"Insn %d has a valid empty av set\0A\00", align 1
@max_ws = internal unnamed_addr global i32 0, align 4, !dbg !2157
@.str.33 = private unnamed_addr constant [54 x i8] c"Insn %d is beyond the software lookahead window size\0A\00", align 1
@.str.34 = private unnamed_addr constant [30 x i8] c"Computed av set for insn %d: \00", align 1
@sched_lists_pool = external dso_local local_unnamed_addr global %struct.alloc_pool_def*, align 8
@.str.35 = private unnamed_addr constant [28 x i8] c"successors of bb end (%d): \00", align 1
@.str.36 = private unnamed_addr constant [25 x i8] c"real successors num: %d\0A\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"av_succs (%d): \00", align 1
@vec_bookkeeping_blocked_vinsns = internal global %struct.VEC_vinsn_t_heap* null, align 8, !dbg !2159
@.str.38 = private unnamed_addr constant [17 x i8] c"./sel-sched-ir.h\00", align 1
@flag_sel_sched_pipelining_outer_loops = external dso_local local_unnamed_addr global i32, align 4
@after_recovery = external dso_local local_unnamed_addr global %struct.basic_block_def*, align 8
@exit_insn = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@flag_sel_sched_pipelining = external dso_local local_unnamed_addr global i32, align 4
@preheader_removed = external dso_local local_unnamed_addr global i8, align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@sched_max_luid = external dso_local local_unnamed_addr global i32, align 4
@issue_rate = external dso_local local_unnamed_addr global i32, align 4
@cur_seqno = internal unnamed_addr global i32 0, align 4, !dbg !2162
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@stat_insns_needed_bookkeeping = internal unnamed_addr global i32 0, align 4, !dbg !2164
@stat_renamed_scheduled = internal unnamed_addr global i32 0, align 4, !dbg !2166
@stat_substitutions_total = internal unnamed_addr global i32 0, align 4, !dbg !2168
@.str.39 = private unnamed_addr constant [102 x i8] c"Scheduled %d bookkeeping copies, %d insns needed bookkeeping, %d insns renamed, %d insns substituted\0A\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"\0AScheduling on fences: \00", align 1
@scheduled_something_on_previous_fence = internal unnamed_addr global i1 false, align 1, !dbg !2357
@vec_target_unavailable_vinsns = internal global %struct.VEC_vinsn_t_heap* null, align 8, !dbg !2352
@.str.41 = private unnamed_addr constant [43 x i8] c"Starting fill_insns for insn %d, cycle %d\0A\00", align 1
@can_issue_more = internal unnamed_addr global i32 0, align 4, !dbg !2172
@target_bb = external dso_local local_unnamed_addr global i32, align 4
@.str.42 = private unnamed_addr constant [13 x i8] c"Boundaries: \00", align 1
@.str.43 = private unnamed_addr constant [30 x i8] c"Available exprs (vliw form): \00", align 1
@.str.44 = private unnamed_addr constant [44 x i8] c"Moving expressions up in the insn group...\0A\00", align 1
@.str.45 = private unnamed_addr constant [76 x i8] c"Expr %d removed because it would need bookkeeping, which cannot be created\0A\00", align 1
@ready = external dso_local global %struct.ready_list, align 8
@.str.46 = private unnamed_addr constant [30 x i8] c"Best expression (vliw form): \00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"; cycle %d\0A\00", align 1
@.str.48 = private unnamed_addr constant [21 x i8] c"No best expr found!\0A\00", align 1
@fill_vec_av_set.av_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2174
@fill_vec_av_set.est_ticks_till_branch = internal unnamed_addr global i32 0, align 4, !dbg !2299
@vec_av_set = internal global %struct.VEC_expr_t_heap* null, align 8, !dbg !2301
@.str.49 = private unnamed_addr constant [52 x i8] c"Expr %d is blocked by bookkeeping inserted earlier\0A\00", align 1
@.str.50 = private unnamed_addr constant [41 x i8] c"Expr %d has no suitable target register\0A\00", align 1
@.str.51 = private unnamed_addr constant [44 x i8] c"Pipelining expr %d will likely cause stall\0A\00", align 1
@.str.52 = private unnamed_addr constant [51 x i8] c"Delaying speculation check %d until its first use\0A\00", align 1
@.str.53 = private unnamed_addr constant [46 x i8] c"Expr %d is not ready until cycle %d (cached)\0A\00", align 1
@.str.54 = private unnamed_addr constant [41 x i8] c"Expr %d is not ready yet until cycle %d\0A\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"Expr %d is ok\0A\00", align 1
@.str.56 = private unnamed_addr constant [36 x i8] c"Total ready exprs: %d, stalled: %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [21 x i8] c"Sorted av set (%d): \00", align 1
@.str.58 = private unnamed_addr constant [51 x i8] c"sel_target_adjust_priority: insn %d,  %d+%d = %d.\0A\00", align 1
@find_best_reg_for_expr.reg_rename_data = internal global %struct.reg_rename zeroinitializer, align 8, !dbg !2303
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@.str.59 = private unnamed_addr constant [39 x i8] c"Best expression(s) (sequential form): \00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"%s (\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.63 = private unnamed_addr constant [33 x i8] c"Insn %d is ineligible successor\0A\00", align 1
@.str.64 = private unnamed_addr constant [49 x i8] c"Returned from block %d as it had invalid av set\0A\00", align 1
@.str.65 = private unnamed_addr constant [44 x i8] c"Block %d already visited in this traversal\0A\00", align 1
@.str.66 = private unnamed_addr constant [41 x i8] c"No intersection with av set of block %d\0A\00", align 1
@.str.67 = private unnamed_addr constant [37 x i8] c"Found original operation at insn %d\0A\00", align 1
@.str.68 = private unnamed_addr constant [41 x i8] c"Expr %d removed due to use/set conflict\0A\00", align 1
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@global_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@sel_hrd = internal unnamed_addr global %struct.hard_regs_data zeroinitializer, align 8, !dbg !2326
@call_used_reg_set = external dso_local local_unnamed_addr global i64, align 8
@reg_class_contents = external dso_local local_unnamed_addr global [27 x i64], align 16
@which_alternative = external dso_local local_unnamed_addr global i32, align 4
@recog_data = external dso_local local_unnamed_addr global %struct.recog_data, align 8
@recog_op_alt = external dso_local local_unnamed_addr global [30 x [30 x %struct.operand_alternative]], align 16
@reg_info_p = external dso_local local_unnamed_addr global %struct.reg_info_t*, align 8
@max_regno = external dso_local local_unnamed_addr global i32, align 4
@max_issue_size = internal unnamed_addr global i32 0, align 4, !dbg !2341
@ready_try = external dso_local local_unnamed_addr global i8*, align 8
@.str.69 = private unnamed_addr constant [22 x i8] c"ready after reorder: \00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c":%d; \00", align 1
@.str.71 = private unnamed_addr constant [37 x i8] c"privileged_n: %d insns with SPEC %d\0A\00", align 1
@dfa_lookahead = external dso_local local_unnamed_addr global i32, align 4
@cycle_issued_insns = external dso_local local_unnamed_addr global i32, align 4
@.str.72 = private unnamed_addr constant [56 x i8] c"max_issue: we can issue %d insns, already did %d insns\0A\00", align 1
@.str.73 = private unnamed_addr constant [37 x i8] c"using %dth insn from the ready list\0A\00", align 1
@estimate_insn_cost.temp = internal unnamed_addr global i8* null, align 8, !dbg !2343
@dfa_state_size = external dso_local local_unnamed_addr global i64, align 8
@curr_state = external dso_local local_unnamed_addr global i8*, align 8
@.str.74 = private unnamed_addr constant [39 x i8] c"Finished a cycle.  Current cycle = %d\0A\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"state (%u):\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.77 = private unnamed_addr constant [16 x i8] c"Moving jump %d\0A\00", align 1
@.str.78 = private unnamed_addr constant [18 x i8] c"Scheduling insn: \00", align 1
@.str.79 = private unnamed_addr constant [35 x i8] c"Updating fence insn from %i to %i\0A\00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"Fence %d[%d] has not changed\0A\00", align 1
@.str.81 = private unnamed_addr constant [47 x i8] c"Fence %d continues as %d[%d] (state continue)\0A\00", align 1
@.str.82 = private unnamed_addr constant [41 x i8] c"Fence %d continues as %d[%d] (state %s)\0A\00", align 1
@.str.83 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@current_sched_info = external dso_local local_unnamed_addr global %struct.haifa_sched_info*, align 8
@.str.85 = private unnamed_addr constant [28 x i8] c"Finishing schedule in bbs: \00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"%d; \00", align 1
@.str.87 = private unnamed_addr constant [34 x i8] c"advance_state (state_transition)\0A\00", align 1
@.str.88 = private unnamed_addr constant [28 x i8] c"Haifa cost for insn %d: %d\0A\00", align 1
@.str.89 = private unnamed_addr constant [31 x i8] c"advance_state (dfa_new_cycle)\0A\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"Cost for insn %d is %d\0A\00", align 1
@call_used_regs = external dso_local local_unnamed_addr global [53 x i8], align 16

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2362 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2375, metadata !DIExpression()), !dbg !2377
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2376, metadata !DIExpression()), !dbg !2377
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2378
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2379
  ret i32 %call, !dbg !2380
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2381 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2385
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2386
  ret i32 %call, !dbg !2387
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2388 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2443, metadata !DIExpression()), !dbg !2444
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2445
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2445
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2445
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2445
  %cmp = icmp uge i8* %0, %1, !dbg !2445
  %conv1 = zext i1 %cmp to i64, !dbg !2445
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2445
  %tobool = icmp eq i64 %expval, 0, !dbg !2445
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2445

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2445
  br label %cond.end, !dbg !2445

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2445
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2445
  %2 = load i8, i8* %0, align 1, !dbg !2445
  %conv3 = zext i8 %2 to i32, !dbg !2445
  br label %cond.end, !dbg !2445

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2445
  ret i32 %cond, !dbg !2446
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2447 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2449, metadata !DIExpression()), !dbg !2450
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2451
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2451
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2451
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2451
  %cmp = icmp uge i8* %0, %1, !dbg !2451
  %conv1 = zext i1 %cmp to i64, !dbg !2451
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2451
  %tobool = icmp eq i64 %expval, 0, !dbg !2451
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2451

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2451
  br label %cond.end, !dbg !2451

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2451
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2451
  %2 = load i8, i8* %0, align 1, !dbg !2451
  %conv3 = zext i8 %2 to i32, !dbg !2451
  br label %cond.end, !dbg !2451

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2451
  ret i32 %cond, !dbg !2452
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2453 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2454
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2454
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2454
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2454
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2454
  %cmp = icmp uge i8* %1, %2, !dbg !2454
  %conv1 = zext i1 %cmp to i64, !dbg !2454
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2454
  %tobool = icmp eq i64 %expval, 0, !dbg !2454
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2454

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2454
  br label %cond.end, !dbg !2454

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2454
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2454
  %3 = load i8, i8* %1, align 1, !dbg !2454
  %conv3 = zext i8 %3 to i32, !dbg !2454
  br label %cond.end, !dbg !2454

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2454
  ret i32 %cond, !dbg !2455
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2456 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2460, metadata !DIExpression()), !dbg !2461
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2462
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2463
  ret i32 %call, !dbg !2464
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2465 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2469, metadata !DIExpression()), !dbg !2471
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2470, metadata !DIExpression()), !dbg !2471
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2472
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2472
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2472
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2472
  %cmp = icmp uge i8* %0, %1, !dbg !2472
  %conv1 = zext i1 %cmp to i64, !dbg !2472
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2472
  %tobool = icmp eq i64 %expval, 0, !dbg !2472
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2472

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2472
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2472
  br label %cond.end, !dbg !2472

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2472
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2472
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2472
  store i8 %conv2, i8* %0, align 1, !dbg !2472
  %conv6 = and i32 %__c, 255, !dbg !2472
  br label %cond.end, !dbg !2472

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2472
  ret i32 %cond, !dbg !2473
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2474 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2476, metadata !DIExpression()), !dbg !2478
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2477, metadata !DIExpression()), !dbg !2478
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2479
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2479
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2479
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2479
  %cmp = icmp uge i8* %0, %1, !dbg !2479
  %conv1 = zext i1 %cmp to i64, !dbg !2479
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2479
  %tobool = icmp eq i64 %expval, 0, !dbg !2479
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2479

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2479
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2479
  br label %cond.end, !dbg !2479

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2479
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2479
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2479
  store i8 %conv2, i8* %0, align 1, !dbg !2479
  %conv6 = and i32 %__c, 255, !dbg !2479
  br label %cond.end, !dbg !2479

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2479
  ret i32 %cond, !dbg !2480
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2481 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2483, metadata !DIExpression()), !dbg !2484
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2485
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2485
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2485
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2485
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2485
  %cmp = icmp uge i8* %1, %2, !dbg !2485
  %conv1 = zext i1 %cmp to i64, !dbg !2485
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2485
  %tobool = icmp eq i64 %expval, 0, !dbg !2485
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2485

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2485
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2485
  br label %cond.end, !dbg !2485

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2485
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2485
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2485
  store i8 %conv4, i8* %1, align 1, !dbg !2485
  %conv6 = and i32 %__c, 255, !dbg !2485
  br label %cond.end, !dbg !2485

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2485
  ret i32 %cond, !dbg !2486
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2487 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2493, metadata !DIExpression()), !dbg !2496
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2494, metadata !DIExpression()), !dbg !2496
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2495, metadata !DIExpression()), !dbg !2496
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2497
  ret i64 %call, !dbg !2498
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2499 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2501, metadata !DIExpression()), !dbg !2502
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2503
  %0 = load i32, i32* %_flags, align 8, !dbg !2503
  %and = lshr i32 %0, 4, !dbg !2503
  %and.lobit = and i32 %and, 1, !dbg !2503
  ret i32 %and.lobit, !dbg !2504
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2505 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2507, metadata !DIExpression()), !dbg !2508
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2509
  %0 = load i32, i32* %_flags, align 8, !dbg !2509
  %and = lshr i32 %0, 5, !dbg !2509
  %and.lobit = and i32 %and, 1, !dbg !2509
  ret i32 %and.lobit, !dbg !2510
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2511 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2514, metadata !DIExpression()), !dbg !2515
  %__c.off = add i32 %__c, 128, !dbg !2516
  %0 = icmp ult i32 %__c.off, 384, !dbg !2516
  br i1 %0, label %cond.true, label %cond.end, !dbg !2516

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2517
  %1 = load i32*, i32** %call, align 8, !dbg !2518
  %idxprom = sext i32 %__c to i64, !dbg !2519
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2519
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2519
  br label %cond.end, !dbg !2520

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2520
  ret i32 %cond, !dbg !2521
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2522 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2524, metadata !DIExpression()), !dbg !2525
  %__c.off = add i32 %__c, 128, !dbg !2526
  %0 = icmp ult i32 %__c.off, 384, !dbg !2526
  br i1 %0, label %cond.true, label %cond.end, !dbg !2526

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2527
  %1 = load i32*, i32** %call, align 8, !dbg !2528
  %idxprom = sext i32 %__c to i64, !dbg !2529
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2529
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2529
  br label %cond.end, !dbg !2530

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2530
  ret i32 %cond, !dbg !2531
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2532 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2537, metadata !DIExpression()), !dbg !2538
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2539
  %conv = trunc i64 %call to i32, !dbg !2540
  ret i32 %conv, !dbg !2541
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2542 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2546, metadata !DIExpression()), !dbg !2547
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2548
  ret i64 %call, !dbg !2549
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2550 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2555, metadata !DIExpression()), !dbg !2556
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2557
  ret i64 %call, !dbg !2558
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2559 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2565, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2566, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2567, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2568, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2569, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i64 0, metadata !2570, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2571, metadata !DIExpression()), !dbg !2575
  br label %while.cond, !dbg !2576

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2577
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2575
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2571, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2570, metadata !DIExpression()), !dbg !2575
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2578
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2576

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2579
  %div = lshr i64 %add, 1, !dbg !2581
  call void @llvm.dbg.value(metadata i64 %div, metadata !2572, metadata !DIExpression()), !dbg !2575
  %mul = mul i64 %div, %__size, !dbg !2582
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2583
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2573, metadata !DIExpression()), !dbg !2575
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2584
  call void @llvm.dbg.value(metadata i32 %call, metadata !2574, metadata !DIExpression()), !dbg !2575
  %cmp1 = icmp slt i32 %call, 0, !dbg !2585
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2587

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2588
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2590

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2591
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2570, metadata !DIExpression()), !dbg !2575
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2575
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2575
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2571, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2570, metadata !DIExpression()), !dbg !2575
  br label %while.cond, !dbg !2576, !llvm.loop !2592

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2575
  ret i8* %retval.0, !dbg !2594
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2595 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2601, metadata !DIExpression()), !dbg !2602
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2603
  ret double %call, !dbg !2604
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2605 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2614, metadata !DIExpression()), !dbg !2617
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2615, metadata !DIExpression()), !dbg !2617
  call void @llvm.dbg.value(metadata i32 %base, metadata !2616, metadata !DIExpression()), !dbg !2617
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2618
  ret i64 %call, !dbg !2619
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2620 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2626, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2627, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.value(metadata i32 %base, metadata !2628, metadata !DIExpression()), !dbg !2629
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2630
  ret i64 %call, !dbg !2631
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2632 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2643, metadata !DIExpression()), !dbg !2646
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2644, metadata !DIExpression()), !dbg !2646
  call void @llvm.dbg.value(metadata i32 %base, metadata !2645, metadata !DIExpression()), !dbg !2646
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2647
  ret i64 %call, !dbg !2648
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2649 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2653, metadata !DIExpression()), !dbg !2656
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2654, metadata !DIExpression()), !dbg !2656
  call void @llvm.dbg.value(metadata i32 %base, metadata !2655, metadata !DIExpression()), !dbg !2656
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2657
  ret i64 %call, !dbg !2658
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2659 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2699, metadata !DIExpression()), !dbg !2701
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2700, metadata !DIExpression()), !dbg !2701
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2702
  ret i32 %call, !dbg !2703
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2704 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2706, metadata !DIExpression()), !dbg !2708
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2707, metadata !DIExpression()), !dbg !2708
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2709
  ret i32 %call, !dbg !2710
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2711 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2715, metadata !DIExpression()), !dbg !2717
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2716, metadata !DIExpression()), !dbg !2717
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2718
  ret i32 %call, !dbg !2719
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2720 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2724, metadata !DIExpression()), !dbg !2728
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2725, metadata !DIExpression()), !dbg !2728
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2726, metadata !DIExpression()), !dbg !2728
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2727, metadata !DIExpression()), !dbg !2728
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2729
  ret i32 %call, !dbg !2730
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2731 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2735, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2736, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2737, metadata !DIExpression()), !dbg !2738
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2737, metadata !DIExpression(DW_OP_deref)), !dbg !2738
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2739
  ret i32 %call, !dbg !2740
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2741 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2745, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2746, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2747, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2748, metadata !DIExpression()), !dbg !2749
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2748, metadata !DIExpression(DW_OP_deref)), !dbg !2749
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2750
  ret i32 %call, !dbg !2751
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2752 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2776, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2777, metadata !DIExpression()), !dbg !2778
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2779
  ret i32 %call, !dbg !2780
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2781 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2783, metadata !DIExpression()), !dbg !2785
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2784, metadata !DIExpression()), !dbg !2785
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2786
  ret i32 %call, !dbg !2787
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2788 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2792, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2793, metadata !DIExpression()), !dbg !2794
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2795
  ret i32 %call, !dbg !2796
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2797 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2801, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2802, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2803, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2804, metadata !DIExpression()), !dbg !2805
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2806
  ret i32 %call, !dbg !2807
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !2808 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2812, metadata !DIExpression()), !dbg !2823
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !2824
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !2824
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !2824
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !2813, metadata !DIExpression()), !dbg !2823
  %.b = load i1, i1* @ignore_first, align 1, !dbg !2825
  br i1 %.b, label %if.end97, label %if.then, !dbg !2826

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2817, metadata !DIExpression()), !dbg !2827
  %call = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #6, !dbg !2828
  %tobool1 = icmp eq i8 %call, 0, !dbg !2828
  br i1 %tobool1, label %if.else, label %land.lhs.true, !dbg !2830

land.lhs.true:                                    ; preds = %if.then
  %1 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2831
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %1, i64 0, i32 0, !dbg !2831
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !2831
  %2 = load i32, i32* %index, align 8, !dbg !2831
  %call3 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base, i32 %2) #7, !dbg !2831
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call3, i64 0, i32 1, !dbg !2831
  %3 = load i8, i8* %lv_set_valid_p, align 8, !dbg !2831
  %tobool5 = icmp eq i8 %3, 0, !dbg !2831
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !2832

if.then6:                                         ; preds = %land.lhs.true
  %4 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2833
  %base9 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %4, i64 0, i32 0, !dbg !2833
  %5 = load i32, i32* %index, align 8, !dbg !2833
  %call14 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base9, i32 %5) #7, !dbg !2833
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call14, i64 0, i32 0, !dbg !2833
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !2833
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !2817, metadata !DIExpression()), !dbg !2827
  br label %if.end58, !dbg !2834

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call15 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %0) #6, !dbg !2835
  %tobool16 = icmp eq i8 %call15, 0, !dbg !2835
  br i1 %tobool16, label %cond.true17, label %cond.end19, !dbg !2835

cond.true17:                                      ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3069, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2835
  br label %cond.end19, !dbg !2835

cond.end19:                                       ; preds = %if.else, %cond.true17
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2837
  %base23 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %7, i64 0, i32 0, !dbg !2837
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2837
  %base29 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !2837
  %arrayidx35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2837
  %rt_int = bitcast %union.rtunion_def* %arrayidx35 to i32*, !dbg !2837
  %9 = load i32, i32* %rt_int, align 8, !dbg !2837
  %call36 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base29, i32 %9) #7, !dbg !2837
  %call37 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base23, i32 %call36) #7, !dbg !2837
  %live_valid_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call37, i64 0, i32 13, !dbg !2837
  %bf.load = load i8, i8* %live_valid_p, align 4, !dbg !2837
  %bf.clear = and i8 %bf.load, 1, !dbg !2837
  %tobool38 = icmp eq i8 %bf.clear, 0, !dbg !2837
  br i1 %tobool38, label %if.end58, label %if.then39, !dbg !2839

if.then39:                                        ; preds = %cond.end19
  %10 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2840
  %base42 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %10, i64 0, i32 0, !dbg !2840
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2840
  %base48 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %11, i64 0, i32 0, !dbg !2840
  %12 = load i32, i32* %rt_int, align 8, !dbg !2840
  %call56 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base48, i32 %12) #7, !dbg !2840
  %call57 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base42, i32 %call56) #7, !dbg !2840
  %live = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call57, i64 0, i32 3, !dbg !2840
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !2840
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %13, metadata !2817, metadata !DIExpression()), !dbg !2827
  br label %if.end58, !dbg !2841

if.end58:                                         ; preds = %cond.end19, %if.then39, %if.then6
  %src.1 = phi %struct.bitmap_head_def* [ %6, %if.then6 ], [ %13, %if.then39 ], [ null, %cond.end19 ], !dbg !2842
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %src.1, metadata !2817, metadata !DIExpression()), !dbg !2827
  %tobool59 = icmp eq %struct.bitmap_head_def* %src.1, null, !dbg !2843
  br i1 %tobool59, label %cleanup, label %if.then60, !dbg !2845

if.then60:                                        ; preds = %if.end58
  %call61 = tail call %struct.bitmap_head_def* @get_regset_from_pool() #6, !dbg !2846
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call61, metadata !2816, metadata !DIExpression()), !dbg !2823
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call61, %struct.bitmap_head_def* nonnull %src.1) #6, !dbg !2848
  %call62 = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #6, !dbg !2849
  %tobool64 = icmp eq i8 %call62, 0, !dbg !2849
  br i1 %tobool64, label %if.end95, label %land.lhs.true65, !dbg !2851

land.lhs.true65:                                  ; preds = %if.then60
  %14 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2852
  %base68 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %14, i64 0, i32 0, !dbg !2852
  %index72 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !2852
  %15 = load i32, i32* %index72, align 8, !dbg !2852
  %call73 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base68, i32 %15) #7, !dbg !2852
  %lv_set_valid_p74 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call73, i64 0, i32 1, !dbg !2852
  %16 = load i8, i8* %lv_set_valid_p74, align 8, !dbg !2852
  %tobool75 = icmp eq i8 %16, 0, !dbg !2852
  br i1 %tobool75, label %if.then76, label %if.end95, !dbg !2853

if.then76:                                        ; preds = %land.lhs.true65
  %17 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2854
  %base79 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %17, i64 0, i32 0, !dbg !2854
  %18 = load i32, i32* %index72, align 8, !dbg !2854
  %call84 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base79, i32 %18) #7, !dbg !2854
  %lv_set85 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call84, i64 0, i32 0, !dbg !2854
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set85, align 8, !dbg !2854
  tail call void @bitmap_copy(%struct.bitmap_head_def* %19, %struct.bitmap_head_def* %call61) #6, !dbg !2854
  %20 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2856
  %base88 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %20, i64 0, i32 0, !dbg !2856
  %21 = load i32, i32* %index72, align 8, !dbg !2856
  %call93 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base88, i32 %21) #7, !dbg !2856
  %lv_set_valid_p94 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call93, i64 0, i32 1, !dbg !2856
  store i8 1, i8* %lv_set_valid_p94, align 8, !dbg !2857
  br label %if.end95, !dbg !2858

if.end95:                                         ; preds = %land.lhs.true65, %if.then60, %if.then76
  tail call void @return_regset_to_pool(%struct.bitmap_head_def* %call61) #6, !dbg !2859
  br label %cleanup, !dbg !2860

cleanup:                                          ; preds = %if.end58, %if.end95
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end95 ], [ true, %if.end58 ]
  %retval.0 = phi %struct.bitmap_head_def* [ %call61, %if.end95 ], [ undef, %if.end58 ]
  br i1 %cleanup.dest.slot.0, label %if.end97, label %cleanup249

if.end97:                                         ; preds = %entry, %cleanup
  store i1 false, i1* @ignore_first, align 1, !dbg !2861
  %call98 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %0) #6, !dbg !2862
  %tobool99 = icmp eq i8 %call98, 0, !dbg !2862
  br i1 %tobool99, label %cond.true100, label %cond.end102, !dbg !2862

cond.true100:                                     ; preds = %if.end97
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3092, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2862
  br label %cond.end102, !dbg !2862

cond.end102:                                      ; preds = %if.end97, %cond.true100
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !2863
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2863
  %22 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2863
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %22, i64 0, i32 1, !dbg !2863
  %23 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2863
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2863
  %rt_rtx110 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !2863
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx110, align 8, !dbg !2863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !2814, metadata !DIExpression()), !dbg !2823
  br label %while.cond, !dbg !2864

while.cond:                                       ; preds = %while.body, %cond.end102
  %insn.pn = phi %struct.rtx_def* [ %insn, %cond.end102 ], [ %temp.0, %while.body ]
  %temp.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2823
  %temp.0.in = bitcast %union.rtunion_def* %temp.0.in.in to %struct.rtx_def**, !dbg !2823
  %temp.0 = load %struct.rtx_def*, %struct.rtx_def** %temp.0.in, align 8, !dbg !2823
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !2815, metadata !DIExpression()), !dbg !2823
  %cmp = icmp eq %struct.rtx_def* %temp.0, %25, !dbg !2865
  br i1 %cmp, label %while.end, label %land.rhs, !dbg !2866

land.rhs:                                         ; preds = %while.cond
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2867
  %base114 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %26, i64 0, i32 0, !dbg !2867
  %27 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2867
  %base120 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %27, i64 0, i32 0, !dbg !2867
  %arrayidx126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2867
  %rt_int127 = bitcast %union.rtunion_def* %arrayidx126 to i32*, !dbg !2867
  %28 = load i32, i32* %rt_int127, align 8, !dbg !2867
  %call128 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base120, i32 %28) #7, !dbg !2867
  %call129 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base114, i32 %call128) #7, !dbg !2867
  %live_valid_p130 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call129, i64 0, i32 13, !dbg !2867
  %bf.load131 = load i8, i8* %live_valid_p130, align 4, !dbg !2867
  %bf.clear132 = and i8 %bf.load131, 1, !dbg !2867
  %tobool134 = icmp eq i8 %bf.clear132, 0, !dbg !2868
  br i1 %tobool134, label %while.body, label %while.end, !dbg !2864

while.body:                                       ; preds = %land.rhs
  br label %while.cond, !dbg !2864, !llvm.loop !2869

while.end:                                        ; preds = %while.cond, %land.rhs
  %temp.0.lcssa = phi %struct.rtx_def* [ %temp.0, %while.cond ], [ %temp.0, %land.rhs ], !dbg !2823
  %cmp.lcssa = phi i1 [ %cmp, %while.cond ], [ %cmp, %land.rhs ], !dbg !2865
  br i1 %cmp.lcssa, label %if.then141, label %if.else147, !dbg !2871

if.then141:                                       ; preds = %while.end
  %call142 = tail call fastcc %struct.bitmap_head_def* @compute_live_after_bb(%struct.basic_block_def* %0) #7, !dbg !2872
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call142, metadata !2816, metadata !DIExpression()), !dbg !2823
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2875
  %rt_rtx146 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !2875
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx146, align 8, !dbg !2875
  call void @llvm.dbg.value(metadata %struct.rtx_def* %30, metadata !2815, metadata !DIExpression()), !dbg !2823
  br label %if.end168, !dbg !2876

if.else147:                                       ; preds = %while.end
  %call148 = tail call %struct.bitmap_head_def* @get_regset_from_pool() #6, !dbg !2877
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call148, metadata !2816, metadata !DIExpression()), !dbg !2823
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2879
  %base151 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %31, i64 0, i32 0, !dbg !2879
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2879
  %base157 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %32, i64 0, i32 0, !dbg !2879
  %arrayidx163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2879
  %rt_int164 = bitcast %union.rtunion_def* %arrayidx163 to i32*, !dbg !2879
  %33 = load i32, i32* %rt_int164, align 8, !dbg !2879
  %call165 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base157, i32 %33) #7, !dbg !2879
  %call166 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base151, i32 %call165) #7, !dbg !2879
  %live167 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call166, i64 0, i32 3, !dbg !2879
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live167, align 8, !dbg !2879
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call148, %struct.bitmap_head_def* %34) #6, !dbg !2879
  br label %if.end168

if.end168:                                        ; preds = %if.else147, %if.then141
  %lv.0 = phi %struct.bitmap_head_def* [ %call142, %if.then141 ], [ %call148, %if.else147 ], !dbg !2880
  %temp.1 = phi %struct.rtx_def* [ %30, %if.then141 ], [ %temp.0.lcssa, %if.else147 ], !dbg !2823
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.1, metadata !2815, metadata !DIExpression()), !dbg !2823
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %lv.0, metadata !2816, metadata !DIExpression()), !dbg !2823
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2881
  %rt_rtx172 = bitcast %union.rtunion_def* %35 to %struct.rtx_def**, !dbg !2881
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !2881
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !2814, metadata !DIExpression()), !dbg !2823
  br label %while.cond173, !dbg !2882

while.cond173:                                    ; preds = %while.body176, %if.end168
  %temp.2 = phi %struct.rtx_def* [ %temp.1, %if.end168 ], [ %45, %while.body176 ], !dbg !2823
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.2, metadata !2815, metadata !DIExpression()), !dbg !2823
  %cmp174 = icmp eq %struct.rtx_def* %temp.2, %36, !dbg !2883
  br i1 %cmp174, label %while.end221, label %while.body176, !dbg !2882

while.body176:                                    ; preds = %while.cond173
  tail call fastcc void @propagate_lv_set(%struct.bitmap_head_def* %lv.0, %struct.rtx_def* %temp.2) #7, !dbg !2884
  %37 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2886
  %base179 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %37, i64 0, i32 0, !dbg !2886
  %38 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2886
  %base185 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %38, i64 0, i32 0, !dbg !2886
  %arrayidx191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2886
  %rt_int192 = bitcast %union.rtunion_def* %arrayidx191 to i32*, !dbg !2886
  %39 = load i32, i32* %rt_int192, align 8, !dbg !2886
  %call193 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base185, i32 %39) #7, !dbg !2886
  %call194 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base179, i32 %call193) #7, !dbg !2886
  %live195 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call194, i64 0, i32 3, !dbg !2886
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live195, align 8, !dbg !2886
  tail call void @bitmap_copy(%struct.bitmap_head_def* %40, %struct.bitmap_head_def* %lv.0) #6, !dbg !2886
  %41 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2887
  %base198 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %41, i64 0, i32 0, !dbg !2887
  %42 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2887
  %base204 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %42, i64 0, i32 0, !dbg !2887
  %43 = load i32, i32* %rt_int192, align 8, !dbg !2887
  %call212 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base204, i32 %43) #7, !dbg !2887
  %call213 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base198, i32 %call212) #7, !dbg !2887
  %live_valid_p214 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call213, i64 0, i32 13, !dbg !2887
  %bf.load215 = load i8, i8* %live_valid_p214, align 4, !dbg !2888
  %bf.set = or i8 %bf.load215, 1, !dbg !2888
  store i8 %bf.set, i8* %live_valid_p214, align 4, !dbg !2888
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2889
  %rt_rtx220 = bitcast %union.rtunion_def* %44 to %struct.rtx_def**, !dbg !2889
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx220, align 8, !dbg !2889
  call void @llvm.dbg.value(metadata %struct.rtx_def* %45, metadata !2815, metadata !DIExpression()), !dbg !2823
  br label %while.cond173, !dbg !2882, !llvm.loop !2890

while.end221:                                     ; preds = %while.cond173
  %call222 = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #6, !dbg !2892
  %tobool223 = icmp eq i8 %call222, 0, !dbg !2892
  br i1 %tobool223, label %if.end248, label %if.then224, !dbg !2893

if.then224:                                       ; preds = %while.end221
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !2894
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %46, metadata !2820, metadata !DIExpression()), !dbg !2895
  %47 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2896
  %base232 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %47, i64 0, i32 0, !dbg !2896
  %index236 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %46, i64 0, i32 9, !dbg !2896
  %48 = load i32, i32* %index236, align 8, !dbg !2896
  %call237 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base232, i32 %48) #7, !dbg !2896
  %lv_set238 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call237, i64 0, i32 0, !dbg !2896
  %49 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set238, align 8, !dbg !2896
  tail call void @bitmap_copy(%struct.bitmap_head_def* %49, %struct.bitmap_head_def* %lv.0) #6, !dbg !2896
  %50 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2897
  %base241 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %50, i64 0, i32 0, !dbg !2897
  %51 = load i32, i32* %index236, align 8, !dbg !2897
  %call246 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base241, i32 %51) #7, !dbg !2897
  %lv_set_valid_p247 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call246, i64 0, i32 1, !dbg !2897
  store i8 1, i8* %lv_set_valid_p247, align 8, !dbg !2898
  br label %if.end248, !dbg !2899

if.end248:                                        ; preds = %while.end221, %if.then224
  tail call void @return_regset_to_pool(%struct.bitmap_head_def* %lv.0) #6, !dbg !2900
  br label %cleanup249, !dbg !2901

cleanup249:                                       ; preds = %cleanup, %if.end248
  %retval.1 = phi %struct.bitmap_head_def* [ %lv.0, %if.end248 ], [ %retval.0, %cleanup ], !dbg !2823
  ret %struct.bitmap_head_def* %retval.1, !dbg !2902
}

declare dso_local zeroext i8 @sel_bb_head_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2903 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_global_bb_info_def_base* %vec_, metadata !2921, metadata !DIExpression()), !dbg !2923
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2922, metadata !DIExpression()), !dbg !2923
  br label %land.end, !dbg !2924

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2924
  %arrayidx = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_base, %struct.VEC_sel_global_bb_info_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2924
  ret %struct.sel_global_bb_info_def* %arrayidx, !dbg !2924
}

declare dso_local zeroext i8 @in_current_region_p(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2925 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_insn_data_def_base* %vec_, metadata !2957, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2958, metadata !DIExpression()), !dbg !2959
  br label %land.end, !dbg !2960

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2960
  %arrayidx = getelementptr inbounds %struct.VEC_sel_insn_data_def_base, %struct.VEC_sel_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2960
  ret %struct._sel_insn_data* %arrayidx, !dbg !2960
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2961 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !2974, metadata !DIExpression()), !dbg !2976
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2975, metadata !DIExpression()), !dbg !2976
  br label %land.end, !dbg !2977

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2977
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2977
  %0 = load i32, i32* %arrayidx, align 4, !dbg !2977
  ret i32 %0, !dbg !2977
}

declare dso_local %struct.bitmap_head_def* @get_regset_from_pool() local_unnamed_addr #2

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @return_regset_to_pool(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.bitmap_head_def* @compute_live_after_bb(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !2978 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2982, metadata !DIExpression()), !dbg !2992
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !2993
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2993
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2994
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2994
  %call = tail call %struct.bitmap_head_def* @get_clear_regset_from_pool() #6, !dbg !2995
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !2991, metadata !DIExpression()), !dbg !2992
  %.b = load i1, i1* @ignore_first, align 1, !dbg !2996
  br i1 %.b, label %cond.true, label %cond.end, !dbg !2996

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3031, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2996
  br label %cond.end, !dbg !2996

cond.end:                                         ; preds = %entry, %cond.true
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2997
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !2997
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !2997
  %call1 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !2997
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !2997
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 0, !dbg !2997
  store i32 %4, i32* %3, align 8, !dbg !2997
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !2997
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 1, !dbg !2997
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !2997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !2997
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !2997
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2999
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2999
  br label %for.cond, !dbg !2997

for.cond:                                         ; preds = %for.inc, %cond.end
  %9 = load i32, i32* %7, align 8, !dbg !3001
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !3001
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2983, metadata !DIExpression(DW_OP_deref)), !dbg !2992
  %call2 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !3001
  %tobool3 = icmp eq i8 %call2, 0, !dbg !2997
  br i1 %tobool3, label %for.end, label %for.body, !dbg !2997

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3002
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !2983, metadata !DIExpression()), !dbg !2992
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 1, !dbg !3004
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3004
  %call4 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %12) #6, !dbg !3005
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3005
  br i1 %tobool5, label %if.else, label %if.then, !dbg !3006

if.then:                                          ; preds = %for.body
  %13 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !3007
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %13, i64 0, i32 0, !dbg !3007
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3007
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !2983, metadata !DIExpression()), !dbg !2992
  %dest11 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i64 0, i32 1, !dbg !3007
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest11, align 8, !dbg !3007
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 9, !dbg !3007
  %16 = load i32, i32* %index, align 8, !dbg !3007
  %call12 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base, i32 %16) #7, !dbg !3007
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call12, i64 0, i32 1, !dbg !3007
  %17 = load i8, i8* %lv_set_valid_p, align 8, !dbg !3007
  %tobool13 = icmp eq i8 %17, 0, !dbg !3007
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !3010

if.then14:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3038, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3011
  %18 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !3013
  %base17 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %18, i64 0, i32 0, !dbg !3013
  %19 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3013
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !2983, metadata !DIExpression()), !dbg !2992
  %dest21 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %19, i64 0, i32 1, !dbg !3013
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %dest21, align 8, !dbg !3013
  %index22 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i64 0, i32 9, !dbg !3013
  %21 = load i32, i32* %index22, align 8, !dbg !3013
  %call23 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base17, i32 %21) #7, !dbg !3013
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call23, i64 0, i32 0, !dbg !3013
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !3013
  %cmp = icmp eq %struct.bitmap_head_def* %22, null, !dbg !3013
  br i1 %cmp, label %cond.end26, label %cond.true24, !dbg !3013

cond.true24:                                      ; preds = %if.then14
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3039, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3013
  br label %cond.end26, !dbg !3013

cond.end26:                                       ; preds = %if.then14, %cond.true24
  %23 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3014
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !2983, metadata !DIExpression()), !dbg !2992
  %dest28 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i64 0, i32 1, !dbg !3015
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %dest28, align 8, !dbg !3015
  %call29 = call fastcc %struct.bitmap_head_def* @compute_live_after_bb(%struct.basic_block_def* %24) #7, !dbg !3016
  %25 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !3017
  %base32 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %25, i64 0, i32 0, !dbg !3017
  %26 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3017
  call void @llvm.dbg.value(metadata %struct.edge_def* %26, metadata !2983, metadata !DIExpression()), !dbg !2992
  %dest36 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %26, i64 0, i32 1, !dbg !3017
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %dest36, align 8, !dbg !3017
  %index37 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i64 0, i32 9, !dbg !3017
  %28 = load i32, i32* %index37, align 8, !dbg !3017
  %call38 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base32, i32 %28) #7, !dbg !3017
  %lv_set39 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call38, i64 0, i32 0, !dbg !3017
  store %struct.bitmap_head_def* %call29, %struct.bitmap_head_def** %lv_set39, align 8, !dbg !3018
  %29 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !3019
  %base42 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %29, i64 0, i32 0, !dbg !3019
  %30 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3019
  call void @llvm.dbg.value(metadata %struct.edge_def* %30, metadata !2983, metadata !DIExpression()), !dbg !2992
  %dest46 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %30, i64 0, i32 1, !dbg !3019
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %dest46, align 8, !dbg !3019
  %index47 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i64 0, i32 9, !dbg !3019
  %32 = load i32, i32* %index47, align 8, !dbg !3019
  %call48 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base42, i32 %32) #7, !dbg !3019
  %lv_set_valid_p49 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call48, i64 0, i32 1, !dbg !3019
  store i8 1, i8* %lv_set_valid_p49, align 8, !dbg !3020
  br label %if.end, !dbg !3021

if.end:                                           ; preds = %if.then, %cond.end26
  %33 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !3022
  %base52 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %33, i64 0, i32 0, !dbg !3022
  %34 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3022
  call void @llvm.dbg.value(metadata %struct.edge_def* %34, metadata !2983, metadata !DIExpression()), !dbg !2992
  %dest56 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %34, i64 0, i32 1, !dbg !3022
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %dest56, align 8, !dbg !3022
  %index57 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i64 0, i32 9, !dbg !3022
  %36 = load i32, i32* %index57, align 8, !dbg !3022
  %call58 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base52, i32 %36) #7, !dbg !3022
  %lv_set59 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call58, i64 0, i32 0, !dbg !3022
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set59, align 8, !dbg !3022
  %call60 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %37) #6, !dbg !3022
  br label %for.inc, !dbg !3023

if.else:                                          ; preds = %for.body
  %38 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3024
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !2983, metadata !DIExpression()), !dbg !2992
  %dest61 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 1, !dbg !3024
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %dest61, align 8, !dbg !3024
  %call62 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %39) #6, !dbg !3024
  %call63 = call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %call62) #7, !dbg !3024
  %call64 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %call63) #6, !dbg !3024
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.else
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2984, metadata !DIExpression(DW_OP_deref)), !dbg !2992
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3001
  br label %for.cond, !dbg !3001, !llvm.loop !3025

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3027
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3027
  ret %struct.bitmap_head_def* %call, !dbg !3028
}

; Function Attrs: nounwind uwtable
define internal fastcc void @propagate_lv_set(%struct.bitmap_head_def* %lv, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !3029 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %lv, metadata !3033, metadata !DIExpression()), !dbg !3035
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3034, metadata !DIExpression()), !dbg !3035
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3036
  %bf.load = load i32, i32* %0, align 8, !dbg !3036
  %bf.clear = and i32 %bf.load, 65535, !dbg !3036
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3036
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !3036

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3036
  br i1 %cmp3, label %cond.end, label %lor.lhs.false4, !dbg !3036

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3036
  br i1 %cmp7, label %cond.end, label %lor.lhs.false8, !dbg !3036

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3036
  br i1 %cmp11, label %cond.end, label %cond.true, !dbg !3036

cond.true:                                        ; preds = %lor.lhs.false8
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3015, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3036
  br label %cond.end, !dbg !3036

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false4, %lor.lhs.false8, %cond.true
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3037
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3037
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3037
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3037
  %3 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !3037
  %cmp12 = icmp eq %struct.rtx_def* %2, %3, !dbg !3037
  br i1 %cmp12, label %return, label %if.end, !dbg !3039

if.end:                                           ; preds = %cond.end
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !3040
  %rt_bb = bitcast %struct.object_block** %arrayidx15 to %struct.basic_block_def**, !dbg !3040
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3040
  tail call void @df_simulate_one_insn_backwards(%struct.basic_block_def* %4, %struct.rtx_def* %insn, %struct.bitmap_head_def* %lv) #6, !dbg !3041
  br label %return, !dbg !3042

return:                                           ; preds = %cond.end, %if.end
  ret void, !dbg !3042
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_add_to_insn_priority(%struct.rtx_def* %insn, i32 %amount) local_unnamed_addr #5 !dbg !3043 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3047, metadata !DIExpression()), !dbg !3055
  call void @llvm.dbg.value(metadata i32 %amount, metadata !3048, metadata !DIExpression()), !dbg !3055
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3056
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !3056
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3056
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !3056
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3056
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3056
  %2 = load i32, i32* %rt_int, align 8, !dbg !3056
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #7, !dbg !3056
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !3056
  %priority_adj = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 4, !dbg !3056
  %3 = load i32, i32* %priority_adj, align 4, !dbg !3057
  %add = add nsw i32 %3, %amount, !dbg !3057
  store i32 %add, i32* %priority_adj, align 4, !dbg !3057
  %4 = load i32, i32* @sched_verbose, align 4, !dbg !3058
  %cmp = icmp sgt i32 %4, 1, !dbg !3059
  br i1 %cmp, label %do.body, label %if.end150, !dbg !3060

do.body:                                          ; preds = %entry
  %5 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !3061
  %tobool8 = icmp eq i8 %5, 0, !dbg !3061
  br i1 %tobool8, label %if.else, label %do.body10, !dbg !3062

do.body10:                                        ; preds = %do.body
  %6 = load i32, i32* %rt_int, align 8, !dbg !3063
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3063
  %base17 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %7, i64 0, i32 0, !dbg !3063
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3063
  %base23 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !3063
  %call31 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base23, i32 %6) #7, !dbg !3063
  %call32 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base17, i32 %call31) #7, !dbg !3063
  %priority = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call32, i64 0, i32 0, i32 3, !dbg !3063
  %9 = load i32, i32* %priority, align 8, !dbg !3063
  %10 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3063
  %base36 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %10, i64 0, i32 0, !dbg !3063
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3063
  %base42 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %11, i64 0, i32 0, !dbg !3063
  %12 = load i32, i32* %rt_int, align 8, !dbg !3063
  %call50 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base42, i32 %12) #7, !dbg !3063
  %call51 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base36, i32 %call50) #7, !dbg !3063
  %priority_adj53 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call51, i64 0, i32 0, i32 4, !dbg !3063
  %13 = load i32, i32* %priority_adj53, align 4, !dbg !3063
  %call54 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 %6, i32 %amount, i32 %9, i32 %13) #6, !dbg !3063
  %mul = shl nsw i32 %call54, 1, !dbg !3063
  %add55 = or i32 %mul, 1, !dbg !3063
  call void @llvm.dbg.value(metadata i32 %add55, metadata !3049, metadata !DIExpression()), !dbg !3064
  %conv = sext i32 %add55 to i64, !dbg !3063
  %14 = alloca i8, i64 %conv, align 16, !dbg !3063
  call void @llvm.dbg.value(metadata i8* %14, metadata !3054, metadata !DIExpression()), !dbg !3064
  %15 = load i32, i32* %rt_int, align 8, !dbg !3063
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3063
  %base64 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %16, i64 0, i32 0, !dbg !3063
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3063
  %base70 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %17, i64 0, i32 0, !dbg !3063
  %call78 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base70, i32 %15) #7, !dbg !3063
  %call79 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base64, i32 %call78) #7, !dbg !3063
  %priority81 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call79, i64 0, i32 0, i32 3, !dbg !3063
  %18 = load i32, i32* %priority81, align 8, !dbg !3063
  %19 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3063
  %base84 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %19, i64 0, i32 0, !dbg !3063
  %20 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3063
  %base90 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %20, i64 0, i32 0, !dbg !3063
  %21 = load i32, i32* %rt_int, align 8, !dbg !3063
  %call98 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base90, i32 %21) #7, !dbg !3063
  %call99 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base84, i32 %call98) #7, !dbg !3063
  %priority_adj101 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call99, i64 0, i32 0, i32 4, !dbg !3063
  %22 = load i32, i32* %priority_adj101, align 4, !dbg !3063
  %call102 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %14, i64 %conv, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 %15, i32 %amount, i32 %18, i32 %22) #6, !dbg !3063
  call void @sel_prepare_string_for_dot_label(i8* nonnull %14) #6, !dbg !3063
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3063
  %call103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %14) #6, !dbg !3063
  br label %if.end150, !dbg !3063

if.else:                                          ; preds = %do.body
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3061
  %25 = load i32, i32* %rt_int, align 8, !dbg !3061
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3061
  %base110 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %26, i64 0, i32 0, !dbg !3061
  %27 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3061
  %base116 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %27, i64 0, i32 0, !dbg !3061
  %call124 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base116, i32 %25) #7, !dbg !3061
  %call125 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base110, i32 %call124) #7, !dbg !3061
  %priority127 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call125, i64 0, i32 0, i32 3, !dbg !3061
  %28 = load i32, i32* %priority127, align 8, !dbg !3061
  %29 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3061
  %base130 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %29, i64 0, i32 0, !dbg !3061
  %30 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3061
  %base136 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %30, i64 0, i32 0, !dbg !3061
  %31 = load i32, i32* %rt_int, align 8, !dbg !3061
  %call144 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base136, i32 %31) #7, !dbg !3061
  %call145 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base130, i32 %call144) #7, !dbg !3061
  %priority_adj147 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call145, i64 0, i32 0, i32 4, !dbg !3061
  %32 = load i32, i32* %priority_adj147, align 4, !dbg !3061
  %call148 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 %25, i32 %amount, i32 %28, i32 %32) #6, !dbg !3061
  br label %if.end150

if.end150:                                        ; preds = %if.else, %do.body10, %entry
  ret void, !dbg !3065
}

declare dso_local i32 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

declare dso_local void @sel_prepare_string_for_dot_label(i8*) local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @move_op_on_enter(%struct.rtx_def* %insn, %struct.cmpd_local_params* %local_params, i8* %static_params, i8 zeroext %visited_p) #5 !dbg !3066 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3068, metadata !DIExpression()), !dbg !3072
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %local_params, metadata !3069, metadata !DIExpression()), !dbg !3072
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3070, metadata !DIExpression()), !dbg !3072
  call void @llvm.dbg.value(metadata i8 %visited_p, metadata !3071, metadata !DIExpression()), !dbg !3072
  %tobool = icmp eq i8 %visited_p, 0, !dbg !3073
  %. = select i1 %tobool, i32 1, i32 -1, !dbg !3072
  ret i32 %., !dbg !3075
}

; Function Attrs: nounwind uwtable
define internal void @move_op_orig_expr_found(%struct.rtx_def* %insn, %struct._expr* %expr, %struct.cmpd_local_params* %lparams, i8* %static_params) #5 !dbg !3076 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3078, metadata !DIExpression()), !dbg !3085
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !3079, metadata !DIExpression()), !dbg !3085
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !3080, metadata !DIExpression()), !dbg !3085
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3081, metadata !DIExpression()), !dbg !3085
  %0 = bitcast i8* %static_params to %struct.moveop_static_params*, !dbg !3086
  call void @llvm.dbg.value(metadata %struct.moveop_static_params* %0, metadata !3084, metadata !DIExpression()), !dbg !3085
  %c_expr = getelementptr inbounds i8, i8* %static_params, i64 8, !dbg !3087
  %1 = bitcast i8* %c_expr to %struct._expr**, !dbg !3087
  %2 = load %struct._expr*, %struct._expr** %1, align 8, !dbg !3087
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3088
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i64 0, i32 0, !dbg !3088
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3088
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !3088
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3088
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3088
  %5 = load i32, i32* %rt_int, align 8, !dbg !3088
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %5) #7, !dbg !3088
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !3088
  %expr8 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, !dbg !3088
  tail call void @copy_expr_onside(%struct._expr* %2, %struct._expr* %expr8) #6, !dbg !3089
  tail call fastcc void @track_scheduled_insns_and_blocks(%struct.rtx_def* %insn) #7, !dbg !3090
  %call9 = tail call fastcc zeroext i8 @handle_emitting_transformations(%struct.rtx_def* %insn, %struct._expr* %expr, %struct.moveop_static_params* %0) #7, !dbg !3091
  call void @llvm.dbg.value(metadata i8 %call9, metadata !3083, metadata !DIExpression()), !dbg !3085
  %uid = getelementptr inbounds i8, i8* %static_params, i64 16, !dbg !3092
  %6 = bitcast i8* %uid to i32*, !dbg !3092
  %7 = load i32, i32* %6, align 8, !dbg !3092
  %8 = load i32, i32* %rt_int, align 8, !dbg !3093
  %cmp = icmp ne i32 %7, %8, !dbg !3094
  %tobool14 = icmp ne i8 %call9, 0, !dbg !3095
  %or.cond = or i1 %cmp, %tobool14, !dbg !3096
  br i1 %or.cond, label %land.end, label %land.rhs, !dbg !3096

land.rhs:                                         ; preds = %entry
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 10, !dbg !3097
  %9 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %history_of_changes, align 8, !dbg !3097
  %tobool15 = icmp eq %struct.VEC_expr_history_def_heap* %9, null, !dbg !3097
  br i1 %tobool15, label %cond.end20, label %cond.true16, !dbg !3097

cond.true16:                                      ; preds = %land.rhs
  %base18 = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %9, i64 0, i32 0, !dbg !3097
  br label %cond.end20, !dbg !3097

cond.end20:                                       ; preds = %land.rhs, %cond.true16
  %cond21 = phi %struct.VEC_expr_history_def_base* [ %base18, %cond.true16 ], [ null, %land.rhs ], !dbg !3097
  %call22 = tail call fastcc i32 @VEC_expr_history_def_base_length(%struct.VEC_expr_history_def_base* %cond21) #7, !dbg !3097
  %cmp23 = icmp eq i32 %call22, 0, !dbg !3097
  %phitmp = zext i1 %cmp23 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %cond.end20
  %10 = phi i8 [ 0, %entry ], [ %phitmp, %cond.end20 ]
  call void @llvm.dbg.value(metadata i8 %10, metadata !3082, metadata !DIExpression()), !dbg !3085
  %tobool24 = icmp eq i8 %10, 0, !dbg !3098
  br i1 %tobool24, label %if.end, label %if.then, !dbg !3100

if.then:                                          ; preds = %land.end
  store i32 -1, i32* %6, align 8, !dbg !3101
  br label %if.end, !dbg !3102

if.end:                                           ; preds = %land.end, %if.then
  tail call fastcc void @remove_insn_from_stream(%struct.rtx_def* %insn, i8 zeroext %10) #7, !dbg !3103
  ret void, !dbg !3104
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @move_op_orig_expr_not_found(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, i8* %static_params) #5 !dbg !3105 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3107, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.value(metadata %struct._list_node* %orig_ops, metadata !3108, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3109, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3110, metadata !DIExpression()), !dbg !3111
  %dest = bitcast i8* %static_params to %struct.rtx_def**, !dbg !3112
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3112
  %call = tail call zeroext i8 @lhs_of_insn_equals_to_dest_p(%struct.rtx_def* %insn, %struct.rtx_def* %0) #6, !dbg !3114
  %tobool = icmp eq i8 %call, 0, !dbg !3114
  %. = zext i1 %tobool to i8, !dbg !3111
  ret i8 %., !dbg !3115
}

; Function Attrs: nounwind uwtable
define internal void @move_op_merge_succs(%struct.rtx_def* %insn, %struct.rtx_def* %succ, i32 %moveop_drv_call_res, %struct.cmpd_local_params* %lparams, i8* %static_params) #5 !dbg !3116 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3118, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %succ, metadata !3119, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.value(metadata i32 %moveop_drv_call_res, metadata !3120, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !3121, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3122, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3123, metadata !DIExpression()), !dbg !3127
  %cmp = icmp eq i32 %moveop_drv_call_res, 1, !dbg !3128
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !3130

if.end:                                           ; preds = %entry
  %c_expr_merged = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i64 0, i32 2, !dbg !3131
  %0 = load %struct._expr*, %struct._expr** %c_expr_merged, align 8, !dbg !3131
  %tobool = icmp eq %struct._expr* %0, null, !dbg !3132
  br i1 %tobool, label %if.then1, label %if.else, !dbg !3133

if.then1:                                         ; preds = %if.end
  %c_expr = getelementptr inbounds i8, i8* %static_params, i64 8, !dbg !3134
  %1 = bitcast i8* %c_expr to i64*, !dbg !3134
  %2 = load i64, i64* %1, align 8, !dbg !3134
  %3 = bitcast %struct._expr** %c_expr_merged to i64*, !dbg !3136
  store i64 %2, i64* %3, align 8, !dbg !3136
  %c_expr_local = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i64 0, i32 3, !dbg !3137
  %4 = bitcast %struct._expr** %c_expr_local to i64*, !dbg !3137
  %5 = load i64, i64* %4, align 8, !dbg !3137
  store i64 %5, i64* %1, align 8, !dbg !3138
  br label %cleanup.cont, !dbg !3139

if.else:                                          ; preds = %if.end
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %0, i64 0, i32 5, !dbg !3140
  %6 = load i32, i32* %sched_times, align 8, !dbg !3140
  call void @llvm.dbg.value(metadata i32 %6, metadata !3124, metadata !DIExpression()), !dbg !3141
  %c_expr6 = getelementptr inbounds i8, i8* %static_params, i64 8, !dbg !3142
  %7 = bitcast i8* %c_expr6 to %struct._expr**, !dbg !3142
  %8 = load %struct._expr*, %struct._expr** %7, align 8, !dbg !3142
  tail call void @merge_expr_data(%struct._expr* nonnull %0, %struct._expr* %8, %struct.rtx_def* null) #6, !dbg !3143
  %9 = load %struct._expr*, %struct._expr** %7, align 8, !dbg !3144
  %sched_times8 = getelementptr inbounds %struct._expr, %struct._expr* %9, i64 0, i32 5, !dbg !3144
  %10 = load i32, i32* %sched_times8, align 8, !dbg !3144
  %cmp9 = icmp eq i32 %10, 0, !dbg !3146
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !3147

if.then10:                                        ; preds = %if.else
  %11 = load %struct._expr*, %struct._expr** %c_expr_merged, align 8, !dbg !3148
  %sched_times12 = getelementptr inbounds %struct._expr, %struct._expr* %11, i64 0, i32 5, !dbg !3148
  store i32 %6, i32* %sched_times12, align 8, !dbg !3149
  %.pre = load %struct._expr*, %struct._expr** %7, align 8, !dbg !3150
  br label %if.end13, !dbg !3148

if.end13:                                         ; preds = %if.then10, %if.else
  %12 = phi %struct._expr* [ %.pre, %if.then10 ], [ %9, %if.else ], !dbg !3150
  tail call void @clear_expr(%struct._expr* %12) #6, !dbg !3151
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %entry, %if.end13, %if.then1
  ret void, !dbg !3152
}

; Function Attrs: nounwind uwtable
define internal void @move_op_after_merge_succs(%struct.cmpd_local_params* %lp, i8* %sparams) #5 !dbg !3153 {
entry:
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lp, metadata !3155, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.value(metadata i8* %sparams, metadata !3156, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.value(metadata i8* %sparams, metadata !3157, metadata !DIExpression()), !dbg !3158
  %c_expr_merged = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lp, i64 0, i32 2, !dbg !3159
  %0 = bitcast %struct._expr** %c_expr_merged to i64*, !dbg !3159
  %1 = load i64, i64* %0, align 8, !dbg !3159
  %c_expr = getelementptr inbounds i8, i8* %sparams, i64 8, !dbg !3160
  %2 = bitcast i8* %c_expr to i64*, !dbg !3161
  store i64 %1, i64* %2, align 8, !dbg !3161
  ret void, !dbg !3162
}

; Function Attrs: nounwind uwtable
define internal void @move_op_ascend(%struct.rtx_def* %insn, i8* %static_params) #5 !dbg !3163 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3165, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3166, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3168, metadata !DIExpression()), !dbg !3169
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3170
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3170
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3170
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3170
  %2 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !3170
  %cmp = icmp eq %struct.rtx_def* %1, %2, !dbg !3170
  br i1 %cmp, label %if.end, label %if.then, !dbg !3172

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3168, metadata !DIExpression()), !dbg !3169
  %c_expr = getelementptr inbounds i8, i8* %static_params, i64 8, !dbg !3173
  %3 = bitcast i8* %c_expr to %struct._expr**, !dbg !3173
  %4 = load %struct._expr*, %struct._expr** %3, align 8, !dbg !3173
  %call = tail call fastcc i32 @moveup_expr_cached(%struct._expr* %4, %struct.rtx_def* %insn, i8 zeroext 0) #7, !dbg !3175
  call void @llvm.dbg.value(metadata i32 %call, metadata !3167, metadata !DIExpression()), !dbg !3169
  %cmp1 = icmp eq i32 %call, 2, !dbg !3176
  br i1 %cmp1, label %cond.true, label %if.end, !dbg !3176

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6142, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3176
  br label %if.end, !dbg !3176

if.end:                                           ; preds = %if.then, %cond.true, %entry
  tail call fastcc void @update_liveness_on_insn(%struct.rtx_def* %insn) #7, !dbg !3177
  ret void, !dbg !3178
}

; Function Attrs: nounwind uwtable
define internal void @move_op_at_first_insn(%struct.rtx_def* %insn, %struct.cmpd_local_params* %lparams, i8* %static_params) #5 !dbg !3179 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3181, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !3182, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3183, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3184, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !3185, metadata !DIExpression()), !dbg !3186
  %removed_last_insn = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i64 0, i32 5, !dbg !3187
  %bf.load = load i8, i8* %removed_last_insn, align 8, !dbg !3187
  %bf.clear = and i8 %bf.load, 1, !dbg !3187
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !3189
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !3190

land.lhs.true:                                    ; preds = %entry
  %e1 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i64 0, i32 0, !dbg !3191
  %0 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !3191
  %tobool1 = icmp eq %struct.edge_def* %0, null, !dbg !3192
  br i1 %tobool1, label %if.end9, label %land.lhs.true2, !dbg !3193

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #6, !dbg !3194
  %tobool3 = icmp eq i8 %call, 0, !dbg !3194
  br i1 %tobool3, label %if.end9, label %if.then, !dbg !3195

if.then:                                          ; preds = %land.lhs.true2
  %call4 = tail call zeroext i8 @sel_num_cfg_preds_gt_1(%struct.rtx_def* %insn) #6, !dbg !3196
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3196
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !3199

if.then6:                                         ; preds = %if.then
  %c_expr = getelementptr inbounds i8, i8* %static_params, i64 8, !dbg !3200
  %1 = bitcast i8* %c_expr to %struct._expr**, !dbg !3200
  %2 = load %struct._expr*, %struct._expr** %1, align 8, !dbg !3200
  %3 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !3201
  %e2 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i64 0, i32 1, !dbg !3202
  %4 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !3202
  %call8 = tail call fastcc %struct.basic_block_def* @generate_bookkeeping_insn(%struct._expr* %2, %struct.edge_def* %3, %struct.edge_def* %4) #7, !dbg !3203
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call8, metadata !3185, metadata !DIExpression()), !dbg !3186
  br label %if.end, !dbg !3204

if.end:                                           ; preds = %if.then, %if.then6
  %book_block.0 = phi %struct.basic_block_def* [ %call8, %if.then6 ], [ null, %if.then ], !dbg !3186
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %book_block.0, metadata !3185, metadata !DIExpression()), !dbg !3186
  tail call fastcc void @update_data_sets(%struct.rtx_def* %insn) #7, !dbg !3205
  br label %if.end9, !dbg !3206

if.end9:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry, %if.end
  %book_block.1 = phi %struct.basic_block_def* [ null, %entry ], [ %book_block.0, %if.end ], [ null, %land.lhs.true2 ], [ null, %land.lhs.true ], !dbg !3186
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %book_block.1, metadata !3185, metadata !DIExpression()), !dbg !3186
  %tobool10 = icmp eq %struct.basic_block_def* %book_block.1, null, !dbg !3207
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !3209

if.then11:                                        ; preds = %if.end9
  tail call fastcc void @update_and_record_unavailable_insns(%struct.basic_block_def* nonnull %book_block.1) #7, !dbg !3210
  br label %if.end12, !dbg !3210

if.end12:                                         ; preds = %if.end9, %if.then11
  %bf.load14 = load i8, i8* %removed_last_insn, align 8, !dbg !3211
  %bf.clear15 = and i8 %bf.load14, 1, !dbg !3211
  %tobool17 = icmp eq i8 %bf.clear15, 0, !dbg !3213
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !3214

if.then18:                                        ; preds = %if.end12
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3215
  %rt_rtx = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !3215
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3215
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !3181, metadata !DIExpression()), !dbg !3186
  br label %if.end19, !dbg !3216

if.end19:                                         ; preds = %if.end12, %if.then18
  %insn.addr.0 = phi %struct.rtx_def* [ %6, %if.then18 ], [ %insn, %if.end12 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !3181, metadata !DIExpression()), !dbg !3186
  %e120 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i64 0, i32 0, !dbg !3217
  %7 = load %struct.edge_def*, %struct.edge_def** %e120, align 8, !dbg !3217
  %tobool21 = icmp eq %struct.edge_def* %7, null, !dbg !3219
  br i1 %tobool21, label %if.end27, label %if.then22, !dbg !3220

if.then22:                                        ; preds = %if.end19
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 1, !dbg !3221
  %rt_bb = bitcast %struct.object_block** %arrayidx25 to %struct.basic_block_def**, !dbg !3221
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3221
  %call26 = tail call zeroext i8 @tidy_control_flow(%struct.basic_block_def* %8, i8 zeroext 1) #6, !dbg !3222
  br label %if.end27, !dbg !3222

if.end27:                                         ; preds = %if.end19, %if.then22
  ret void, !dbg !3223
}

; Function Attrs: nounwind uwtable
define internal i32 @fur_on_enter(%struct.rtx_def* %insn, %struct.cmpd_local_params* %local_params, i8* %static_params, i8 zeroext %visited_p) #5 !dbg !3224 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3226, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %local_params, metadata !3227, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3228, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.value(metadata i8 %visited_p, metadata !3229, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3230, metadata !DIExpression()), !dbg !3231
  %tobool = icmp eq i8 %visited_p, 0, !dbg !3232
  %original_insns = getelementptr inbounds i8, i8* %static_params, i64 8, !dbg !3234
  %0 = bitcast i8* %original_insns to %struct._list_node***, !dbg !3234
  %1 = load %struct._list_node**, %struct._list_node*** %0, align 8, !dbg !3234
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !3234
  br i1 %tobool, label %if.else, label %if.then, !dbg !3235

if.then:                                          ; preds = %entry
  %tobool1 = icmp eq %struct._list_node* %2, null, !dbg !3236
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !3236

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6162, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3236
  %.pre = load %struct._list_node**, %struct._list_node*** %0, align 8, !dbg !3238
  %.pre2 = load %struct._list_node*, %struct._list_node** %.pre, align 8, !dbg !3238
  br label %cond.end, !dbg !3236

cond.end:                                         ; preds = %if.then, %cond.true
  %3 = phi %struct._list_node* [ %2, %if.then ], [ %.pre2, %cond.true ], !dbg !3238
  %4 = getelementptr inbounds i8, i8* %static_params, i64 16, !dbg !3239
  %5 = load i8, i8* %4, align 8, !dbg !3239
  %crosses_call3 = getelementptr inbounds %struct._list_node, %struct._list_node* %3, i64 0, i32 1, i32 0, i32 1, !dbg !3240
  %6 = bitcast i8** %crosses_call3 to i8*, !dbg !3240
  %7 = load i8, i8* %6, align 8, !dbg !3241
  %or1 = or i8 %7, %5, !dbg !3241
  store i8 %or1, i8* %6, align 8, !dbg !3241
  br label %if.end, !dbg !3242

if.else:                                          ; preds = %entry
  %old_original_insns = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %local_params, i64 0, i32 4, !dbg !3243
  store %struct._list_node* %2, %struct._list_node** %old_original_insns, align 8, !dbg !3244
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  ret i32 1, !dbg !3245
}

; Function Attrs: nounwind uwtable
define internal void @fur_orig_expr_found(%struct.rtx_def* %insn, %struct._expr* %expr, %struct.cmpd_local_params* %lparams, i8* %static_params) #5 !dbg !3246 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3248, metadata !DIExpression()), !dbg !3254
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !3249, metadata !DIExpression()), !dbg !3254
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !3250, metadata !DIExpression()), !dbg !3254
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3251, metadata !DIExpression()), !dbg !3254
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3252, metadata !DIExpression()), !dbg !3254
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3255
  %bf.load = load i32, i32* %0, align 8, !dbg !3255
  %bf.clear = and i32 %bf.load, 65535, !dbg !3255
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !3255
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge, !dbg !3257

entry.if.end_crit_edge:                           ; preds = %entry
  %.phi.trans.insert = getelementptr inbounds i8, i8* %static_params, i64 16, !dbg !3254
  %.pre = load i8, i8* %.phi.trans.insert, align 8, !dbg !3258
  br label %if.end, !dbg !3257

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3252, metadata !DIExpression()), !dbg !3254
  %1 = getelementptr inbounds i8, i8* %static_params, i64 16, !dbg !3259
  store i8 1, i8* %1, align 8, !dbg !3260
  br label %if.end, !dbg !3261

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %2 = phi i8 [ %.pre, %entry.if.end_crit_edge ], [ 1, %if.then ], !dbg !3258
  %original_insns = getelementptr inbounds i8, i8* %static_params, i64 8, !dbg !3262
  %3 = bitcast i8* %original_insns to %struct._list_node***, !dbg !3262
  %4 = load %struct._list_node**, %struct._list_node*** %3, align 8, !dbg !3262
  tail call void @def_list_add(%struct._list_node** %4, %struct.rtx_def* %insn, i8 zeroext %2) #6, !dbg !3263
  %call = tail call %struct.bitmap_head_def* @get_clear_regset_from_pool() #6, !dbg !3264
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !3253, metadata !DIExpression()), !dbg !3254
  tail call fastcc void @compute_live_below_insn(%struct.rtx_def* %insn, %struct.bitmap_head_def* %call) #7, !dbg !3265
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3266
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i64 0, i32 0, !dbg !3266
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3266
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !3266
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3266
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3266
  %7 = load i32, i32* %rt_int, align 8, !dbg !3266
  %call8 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base4, i32 %7) #7, !dbg !3266
  %call9 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call8) #7, !dbg !3266
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call9, i64 0, i32 0, i32 0, !dbg !3266
  %8 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !3266
  %reg_sets = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i64 0, i32 1, i32 3, !dbg !3266
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !3266
  %call11 = tail call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %9) #6, !dbg !3266
  %10 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3267
  %base14 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %10, i64 0, i32 0, !dbg !3267
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3267
  %base20 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %11, i64 0, i32 0, !dbg !3267
  %12 = load i32, i32* %rt_int, align 8, !dbg !3267
  %call28 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base20, i32 %12) #7, !dbg !3267
  %call29 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base14, i32 %call28) #7, !dbg !3267
  %vinsn31 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call29, i64 0, i32 0, i32 0, !dbg !3267
  %13 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn31, align 8, !dbg !3267
  %reg_clobbers = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %13, i64 0, i32 1, i32 4, !dbg !3267
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !3267
  %call33 = tail call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %14) #6, !dbg !3267
  %used_regs = bitcast i8* %static_params to %struct.bitmap_head_def**, !dbg !3268
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !3268
  %call34 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %15, %struct.bitmap_head_def* %call) #6, !dbg !3268
  tail call void @return_regset_to_pool(%struct.bitmap_head_def* %call) #6, !dbg !3269
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3270
  %base37 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %16, i64 0, i32 0, !dbg !3270
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3270
  %base43 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %17, i64 0, i32 0, !dbg !3270
  %18 = load i32, i32* %rt_int, align 8, !dbg !3270
  %call51 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base43, i32 %18) #7, !dbg !3270
  %call52 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base37, i32 %call51) #7, !dbg !3270
  %vinsn54 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call52, i64 0, i32 0, i32 0, !dbg !3270
  %19 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn54, align 8, !dbg !3270
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %19, i64 0, i32 1, i32 0, !dbg !3270
  %20 = load i32, i32* %type, align 8, !dbg !3270
  %cmp56 = icmp eq i32 %20, 23, !dbg !3270
  br i1 %cmp56, label %lor.lhs.false, label %cond.end83, !dbg !3270

lor.lhs.false:                                    ; preds = %if.end
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3270
  %base59 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i64 0, i32 0, !dbg !3270
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3270
  %base65 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %22, i64 0, i32 0, !dbg !3270
  %23 = load i32, i32* %rt_int, align 8, !dbg !3270
  %call73 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base65, i32 %23) #7, !dbg !3270
  %call74 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base59, i32 %call73) #7, !dbg !3270
  %vinsn76 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call74, i64 0, i32 0, i32 0, !dbg !3270
  %24 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn76, align 8, !dbg !3270
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %24, i64 0, i32 1, i32 1, !dbg !3270
  %25 = bitcast %struct.rtx_def** %lhs to i32**, !dbg !3270
  %26 = load i32*, i32** %25, align 8, !dbg !3270
  %bf.load78 = load i32, i32* %26, align 8, !dbg !3270
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !3270
  %cmp80 = icmp eq i32 %bf.clear79, 43, !dbg !3270
  br i1 %cmp80, label %cond.true81, label %cond.end83, !dbg !3270

cond.true81:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6034, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3270
  br label %cond.end83, !dbg !3270

cond.end83:                                       ; preds = %if.end, %lor.lhs.false, %cond.true81
  ret void, !dbg !3271
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @fur_orig_expr_not_found(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, i8* %static_params) #5 !dbg !3272 {
entry:
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %r = alloca %struct._expr*, align 8
  %avi = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3274, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata %struct._list_node* %orig_ops, metadata !3275, metadata !DIExpression()), !dbg !3281
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3276, metadata !DIExpression()), !dbg !3281
  %0 = bitcast %struct._expr** %r to i8*, !dbg !3282
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3282
  %1 = bitcast %struct._list_iterator* %avi to i8*, !dbg !3283
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3283
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3280, metadata !DIExpression()), !dbg !3281
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3284
  %bf.load = load i32, i32* %2, align 8, !dbg !3284
  %bf.clear = and i32 %bf.load, 65535, !dbg !3284
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !3284
  br i1 %cmp, label %if.then, label %if.else, !dbg !3286

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3280, metadata !DIExpression()), !dbg !3281
  %3 = getelementptr inbounds i8, i8* %static_params, i64 16, !dbg !3287
  store i8 1, i8* %3, align 8, !dbg !3288
  br label %if.end5, !dbg !3289

if.else:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3290
  br i1 %cmp3, label %cleanup, label %if.end5, !dbg !3292

if.end5:                                          ; preds = %if.else, %if.then
  call void @llvm.dbg.value(metadata i8 1, metadata !3277, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops.addr, metadata !3275, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  call void @llvm.dbg.value(metadata %struct._list_iterator* %avi, metadata !3279, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %avi, %struct._list_node** nonnull %orig_ops.addr, i8 zeroext 0) #7, !dbg !3293
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %avi, i64 0, i32 0, !dbg !3295
  br label %for.cond, !dbg !3293

for.cond:                                         ; preds = %for.inc, %if.end5
  %4 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !3297
  %5 = load %struct._list_node*, %struct._list_node** %4, align 8, !dbg !3297
  call void @llvm.dbg.value(metadata %struct._expr** %r, metadata !3278, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %5, %struct._expr** nonnull %r) #7, !dbg !3297
  %tobool = icmp eq i8 %call, 0, !dbg !3293
  br i1 %tobool, label %for.end, label %for.body, !dbg !3293

for.body:                                         ; preds = %for.cond
  %6 = load %struct._expr*, %struct._expr** %r, align 8, !dbg !3298
  call void @llvm.dbg.value(metadata %struct._expr* %6, metadata !3278, metadata !DIExpression()), !dbg !3281
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %6, i64 0, i32 0, !dbg !3298
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !3298
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i64 0, i32 0, !dbg !3298
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !3298
  %call6 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %8) #6, !dbg !3300
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3300
  br i1 %tobool7, label %for.end, label %for.inc, !dbg !3301

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %avi, metadata !3279, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %avi) #7, !dbg !3297
  br label %for.cond, !dbg !3297, !llvm.loop !3302

for.end:                                          ; preds = %for.body, %for.cond
  %mutexed.0 = phi i1 [ true, %for.cond ], [ false, %for.body ]
  br i1 %mutexed.0, label %cleanup, label %if.then11, !dbg !3304

if.then11:                                        ; preds = %for.end
  %used_regs = bitcast i8* %static_params to %struct.bitmap_head_def**, !dbg !3305
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !3305
  %10 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3305
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %10, i64 0, i32 0, !dbg !3305
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3305
  %base15 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %11, i64 0, i32 0, !dbg !3305
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3305
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3305
  %12 = load i32, i32* %rt_int, align 8, !dbg !3305
  %call19 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base15, i32 %12) #7, !dbg !3305
  %call20 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call19) #7, !dbg !3305
  %vinsn21 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call20, i64 0, i32 0, i32 0, !dbg !3305
  %13 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn21, align 8, !dbg !3305
  %reg_sets = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %13, i64 0, i32 1, i32 3, !dbg !3305
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !3305
  %call22 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %9, %struct.bitmap_head_def* %14) #6, !dbg !3305
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !3308
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3308
  %base26 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %16, i64 0, i32 0, !dbg !3308
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3308
  %base32 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %17, i64 0, i32 0, !dbg !3308
  %18 = load i32, i32* %rt_int, align 8, !dbg !3308
  %call40 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base32, i32 %18) #7, !dbg !3308
  %call41 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base26, i32 %call40) #7, !dbg !3308
  %vinsn43 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call41, i64 0, i32 0, i32 0, !dbg !3308
  %19 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn43, align 8, !dbg !3308
  %reg_uses = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %19, i64 0, i32 1, i32 5, !dbg !3308
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !3308
  %call45 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %15, %struct.bitmap_head_def* %20) #6, !dbg !3308
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !3309
  %22 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3309
  %base49 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %22, i64 0, i32 0, !dbg !3309
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3309
  %base55 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i64 0, i32 0, !dbg !3309
  %24 = load i32, i32* %rt_int, align 8, !dbg !3309
  %call63 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base55, i32 %24) #7, !dbg !3309
  %call64 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base49, i32 %call63) #7, !dbg !3309
  %vinsn66 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call64, i64 0, i32 0, i32 0, !dbg !3309
  %25 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn66, align 8, !dbg !3309
  %reg_clobbers = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %25, i64 0, i32 1, i32 4, !dbg !3309
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !3309
  %call68 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %21, %struct.bitmap_head_def* %26) #6, !dbg !3309
  br label %cleanup, !dbg !3310

cleanup:                                          ; preds = %for.end, %if.then11, %if.else
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3311
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3311
  ret i8 1, !dbg !3311
}

; Function Attrs: nounwind uwtable
define internal void @fur_merge_succs(%struct.rtx_def* %insn, %struct.rtx_def* %succ, i32 %moveop_drv_call_res, %struct.cmpd_local_params* %lparams, i8* %static_params) #5 !dbg !3312 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3314, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.value(metadata %struct.rtx_def* %succ, metadata !3315, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.value(metadata i32 %moveop_drv_call_res, metadata !3316, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !3317, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3318, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3320, metadata !DIExpression()), !dbg !3321
  %cmp = icmp eq i32 %moveop_drv_call_res, 0, !dbg !3322
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !3324

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3320, metadata !DIExpression()), !dbg !3321
  %call = tail call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %succ) #7, !dbg !3325
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !3319, metadata !DIExpression()), !dbg !3321
  %used_regs = bitcast i8* %static_params to %struct.bitmap_head_def**, !dbg !3326
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !3326
  %call1 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %0, %struct.bitmap_head_def* %call) #6, !dbg !3326
  br label %cleanup.cont, !dbg !3327

cleanup.cont:                                     ; preds = %entry, %if.end
  ret void, !dbg !3327
}

; Function Attrs: nounwind uwtable
define internal void @fur_at_first_insn(%struct.rtx_def* %insn, %struct.cmpd_local_params* %lparams, i8* %static_params) #5 !dbg !3328 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3330, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !3331, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !3332, metadata !DIExpression()), !dbg !3333
  %call = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #6, !dbg !3334
  %tobool = icmp eq i8 %call, 0, !dbg !3334
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !3334

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @get_av_level(%struct.rtx_def* %insn) #6, !dbg !3334
  %0 = load i32, i32* @global_level, align 4, !dbg !3334
  %cmp = icmp eq i32 %call1, %0, !dbg !3334
  br i1 %cmp, label %cond.end, label %lor.lhs.false2, !dbg !3334

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %call3 = tail call i32 @get_av_level(%struct.rtx_def* %insn) #6, !dbg !3334
  %cmp4 = icmp eq i32 %call3, -1, !dbg !3334
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !3334

cond.true:                                        ; preds = %lor.lhs.false2
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6128, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3334
  br label %cond.end, !dbg !3334

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false2, %cond.true
  ret void, !dbg !3335
}

; Function Attrs: nounwind uwtable
define dso_local void @sel_sched_region(i32 %rgn) local_unnamed_addr #5 !dbg !3336 {
entry:
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !3340, metadata !DIExpression()), !dbg !3349
  %call = tail call fastcc zeroext i8 @sel_region_init(i32 %rgn) #7, !dbg !3350
  %tobool = icmp eq i8 %call, 0, !dbg !3350
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !3352

if.end:                                           ; preds = %entry
  %0 = load i32, i32* @sched_verbose, align 4, !dbg !3353
  %cmp = icmp sgt i32 %0, 0, !dbg !3354
  br i1 %cmp, label %do.body, label %if.end14, !dbg !3355

do.body:                                          ; preds = %if.end
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !3356
  %tobool2 = icmp eq i8 %1, 0, !dbg !3356
  br i1 %tobool2, label %if.else, label %do.body4, !dbg !3357

do.body4:                                         ; preds = %do.body
  %call5 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i32 %rgn) #6, !dbg !3358
  %mul = shl nsw i32 %call5, 1, !dbg !3358
  %add = or i32 %mul, 1, !dbg !3358
  call void @llvm.dbg.value(metadata i32 %add, metadata !3343, metadata !DIExpression()), !dbg !3359
  %conv = sext i32 %add to i64, !dbg !3358
  %2 = alloca i8, i64 %conv, align 16, !dbg !3358
  call void @llvm.dbg.value(metadata i8* %2, metadata !3348, metadata !DIExpression()), !dbg !3359
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %2, i64 %conv, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i32 %rgn) #6, !dbg !3358
  call void @sel_prepare_string_for_dot_label(i8* nonnull %2) #6, !dbg !3358
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3358
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %2) #6, !dbg !3358
  br label %if.end14, !dbg !3358

if.else:                                          ; preds = %do.body
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3356
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i32 %rgn) #6, !dbg !3356
  br label %if.end14

if.end14:                                         ; preds = %do.body4, %if.else, %if.end
  %call15 = call zeroext i8 @sched_is_disabled_for_current_region_p() #6, !dbg !3360
  %tobool16 = icmp eq i8 %call15, 0, !dbg !3360
  br i1 %tobool16, label %land.rhs, label %land.end, !dbg !3361

land.rhs:                                         ; preds = %if.end14
  %call17 = call zeroext i8 @dbg_cnt(i32 32) #6, !dbg !3362
  %tobool19 = icmp ne i8 %call17, 0, !dbg !3361
  br label %land.end

land.end:                                         ; preds = %if.end14, %land.rhs
  %5 = phi i1 [ false, %if.end14 ], [ %tobool19, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !3342, metadata !DIExpression()), !dbg !3349
  br i1 %5, label %if.then22, label %if.end24, !dbg !3363

if.then22:                                        ; preds = %land.end
  %6 = load i8, i8* @pipelining_p, align 1, !dbg !3364
  call void @llvm.dbg.value(metadata i8 %6, metadata !3342, metadata !DIExpression()), !dbg !3349
  call fastcc void @sel_sched_region_1() #7, !dbg !3365
  br label %if.end24, !dbg !3365

if.end24:                                         ; preds = %land.end, %if.then22
  %reset_sched_cycles_p.0 = phi i8 [ %6, %if.then22 ], [ 1, %land.end ], !dbg !3349
  call void @llvm.dbg.value(metadata i8 %reset_sched_cycles_p.0, metadata !3342, metadata !DIExpression()), !dbg !3349
  call fastcc void @sel_region_finish(i8 zeroext %reset_sched_cycles_p.0) #7, !dbg !3367
  br label %cleanup.cont, !dbg !3368

cleanup.cont:                                     ; preds = %entry, %if.end24
  ret void, !dbg !3368
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @sel_region_init(i32 %rgn) unnamed_addr #5 !dbg !3369 {
entry:
  %bbs = alloca %struct.VEC_basic_block_heap*, align 8
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !3373, metadata !DIExpression()), !dbg !3380
  %0 = bitcast %struct.VEC_basic_block_heap** %bbs to i8*, !dbg !3381
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3381
  tail call void @rgn_setup_region(i32 %rgn) #6, !dbg !3382
  %call = tail call fastcc zeroext i8 @current_region_empty_p() #7, !dbg !3383
  %tobool = icmp eq i8 %call, 0, !dbg !3383
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3385

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @flag_sel_sched_pipelining, align 4, !dbg !3386
  %tobool1 = icmp eq i32 %1, 0, !dbg !3386
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !3388

if.then2:                                         ; preds = %if.end
  tail call fastcc void @setup_current_loop_nest(i32 %rgn) #7, !dbg !3389
  br label %if.end3, !dbg !3389

if.end3:                                          ; preds = %if.end, %if.then2
  tail call fastcc void @sel_setup_region_sched_flags() #7, !dbg !3390
  %2 = load i32, i32* @current_nr_blocks, align 4, !dbg !3391
  %call4 = tail call fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %2) #7, !dbg !3391
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call4, metadata !3375, metadata !DIExpression()), !dbg !3380
  store %struct.VEC_basic_block_heap* %call4, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !3392
  call void @llvm.dbg.value(metadata i32 0, metadata !3374, metadata !DIExpression()), !dbg !3380
  br label %for.cond, !dbg !3393

for.cond:                                         ; preds = %cond.end13, %if.end3
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end13 ], [ 0, %if.end3 ], !dbg !3395
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3374, metadata !DIExpression()), !dbg !3380
  %3 = load i32, i32* @current_nr_blocks, align 4, !dbg !3396
  %4 = sext i32 %3 to i64, !dbg !3398
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !3398
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call4, metadata !3375, metadata !DIExpression()), !dbg !3380
  br i1 %cmp, label %for.body, label %for.end, !dbg !3399

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call4, metadata !3375, metadata !DIExpression()), !dbg !3380
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %call4, i64 0, i32 0, !dbg !3400
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3400
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !3400
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3400
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 2, !dbg !3400
  %7 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3400
  %tobool6 = icmp eq %struct.VEC_basic_block_gc* %7, null, !dbg !3400
  br i1 %tobool6, label %cond.end13, label %cond.true7, !dbg !3400

cond.true7:                                       ; preds = %for.body
  %base11 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %7, i64 0, i32 0, !dbg !3400
  br label %cond.end13, !dbg !3400

cond.end13:                                       ; preds = %for.body, %cond.true7
  %cond14 = phi %struct.VEC_basic_block_base* [ %base11, %cond.true7 ], [ null, %for.body ], !dbg !3400
  %8 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3400
  %9 = load i32*, i32** @ebb_head, align 8, !dbg !3400
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %indvars.iv, !dbg !3400
  %10 = load i32, i32* %arrayidx, align 4, !dbg !3400
  %idxprom15 = sext i32 %10 to i64, !dbg !3400
  %arrayidx16 = getelementptr inbounds i32, i32* %8, i64 %idxprom15, !dbg !3400
  %11 = load i32, i32* %arrayidx16, align 4, !dbg !3400
  %call17 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond14, i32 %11) #7, !dbg !3400
  %call18 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %base, %struct.basic_block_def* %call17) #7, !dbg !3400
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3401
  call void @llvm.dbg.value(metadata i32 undef, metadata !3374, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3380
  br label %for.cond, !dbg !3402, !llvm.loop !3403

for.end:                                          ; preds = %for.cond
  tail call void @sel_init_bbs(%struct.VEC_basic_block_heap* %call4, %struct.basic_block_def* null) #6, !dbg !3405
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call4, metadata !3375, metadata !DIExpression()), !dbg !3380
  tail call void @sched_init_luids(%struct.VEC_basic_block_heap* %call4, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #6, !dbg !3406
  tail call void @sched_deps_init(i8 zeroext 0) #6, !dbg !3407
  tail call void @rgn_setup_sched_infos() #6, !dbg !3408
  tail call void @sel_set_sched_flags() #6, !dbg !3409
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call4, metadata !3375, metadata !DIExpression()), !dbg !3380
  tail call void @haifa_init_h_i_d(%struct.VEC_basic_block_heap* %call4, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #6, !dbg !3410
  tail call fastcc void @sel_compute_priorities(i32 %rgn) #7, !dbg !3411
  tail call void @init_deps_global() #6, !dbg !3412
  tail call void @sel_setup_sched_infos() #6, !dbg !3413
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call4, metadata !3375, metadata !DIExpression()), !dbg !3380
  tail call void @sel_init_global_and_expr(%struct.VEC_basic_block_heap* %call4) #6, !dbg !3414
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %bbs, metadata !3375, metadata !DIExpression(DW_OP_deref)), !dbg !3380
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %bbs) #7, !dbg !3415
  %call19 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3416
  store %struct.bitmap_head_def* %call19, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3417
  %12 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !3418
  %tobool20 = icmp eq %struct.loop* %12, null, !dbg !3418
  br i1 %tobool20, label %if.end63, label %if.then21, !dbg !3419

if.then21:                                        ; preds = %for.end
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3420
  %cfg23 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !3420
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg23, align 8, !dbg !3420
  %x_basic_block_info24 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 2, !dbg !3420
  %15 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info24, align 8, !dbg !3420
  %tobool25 = icmp eq %struct.VEC_basic_block_gc* %15, null, !dbg !3420
  br i1 %tobool25, label %cond.end32, label %cond.true26, !dbg !3420

cond.true26:                                      ; preds = %if.then21
  %base30 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %15, i64 0, i32 0, !dbg !3420
  br label %cond.end32, !dbg !3420

cond.end32:                                       ; preds = %if.then21, %cond.true26
  %cond33 = phi %struct.VEC_basic_block_base* [ %base30, %cond.true26 ], [ null, %if.then21 ], !dbg !3420
  %16 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3420
  %17 = load i32*, i32** @ebb_head, align 8, !dbg !3420
  %18 = load i32, i32* %17, align 4, !dbg !3420
  %idxprom35 = sext i32 %18 to i64, !dbg !3420
  %arrayidx36 = getelementptr inbounds i32, i32* %16, i64 %idxprom35, !dbg !3420
  %19 = load i32, i32* %arrayidx36, align 4, !dbg !3420
  %call37 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond33, i32 %19) #7, !dbg !3420
  %call38 = call zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def* %call37) #6, !dbg !3421
  %tobool39 = icmp ne i8 %call38, 0, !dbg !3421
  call void @llvm.dbg.value(metadata i1 %tobool39, metadata !3377, metadata !DIExpression()), !dbg !3422
  %20 = load i32, i32* @current_nr_blocks, align 4, !dbg !3423
  %add = select i1 %tobool39, i32 2, i32 1, !dbg !3425
  %cmp41 = icmp eq i32 %20, %add, !dbg !3426
  br i1 %cmp41, label %if.then43, label %if.end63, !dbg !3427

if.then43:                                        ; preds = %cond.end32
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3428
  %cfg45 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 1, !dbg !3428
  %22 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg45, align 8, !dbg !3428
  %x_basic_block_info46 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %22, i64 0, i32 2, !dbg !3428
  %23 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info46, align 8, !dbg !3428
  %tobool47 = icmp eq %struct.VEC_basic_block_gc* %23, null, !dbg !3428
  br i1 %tobool47, label %cond.end54, label %cond.true48, !dbg !3428

cond.true48:                                      ; preds = %if.then43
  %base52 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %23, i64 0, i32 0, !dbg !3428
  br label %cond.end54, !dbg !3428

cond.end54:                                       ; preds = %if.then43, %cond.true48
  %cond55 = phi %struct.VEC_basic_block_base* [ %base52, %cond.true48 ], [ null, %if.then43 ], !dbg !3428
  %24 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3428
  %25 = load i32*, i32** @ebb_head, align 8, !dbg !3428
  %idxprom56 = zext i1 %tobool39 to i64, !dbg !3428
  %arrayidx57 = getelementptr inbounds i32, i32* %25, i64 %idxprom56, !dbg !3428
  %26 = load i32, i32* %arrayidx57, align 4, !dbg !3428
  %idxprom58 = sext i32 %26 to i64, !dbg !3428
  %arrayidx59 = getelementptr inbounds i32, i32* %24, i64 %idxprom58, !dbg !3428
  %27 = load i32, i32* %arrayidx59, align 4, !dbg !3428
  %call60 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond55, i32 %27) #7, !dbg !3428
  %call61 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %call60) #6, !dbg !3429
  call fastcc void @update_liveness_on_insn(%struct.rtx_def* %call61) #7, !dbg !3430
  br label %if.end63, !dbg !3430

if.end63:                                         ; preds = %for.end, %cond.end32, %cond.end54
  call void @sel_register_cfg_hooks() #6, !dbg !3431
  %28 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 4), align 8, !dbg !3432
  %tobool64 = icmp eq void (%struct._IO_FILE*, i32, i32)* %28, null, !dbg !3434
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !3435

if.then65:                                        ; preds = %if.end63
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3436
  %30 = load i32, i32* @sched_verbose, align 4, !dbg !3437
  call void %28(%struct._IO_FILE* %29, i32 %30, i32 -1) #6, !dbg !3438
  br label %if.end66, !dbg !3438

if.end66:                                         ; preds = %if.end63, %if.then65
  %call67 = call i32 @get_max_uid() #6, !dbg !3439
  %add68 = add nsw i32 %call67, 1, !dbg !3440
  store i32 %add68, i32* @first_emitted_uid, align 4, !dbg !3441
  store i8 0, i8* @preheader_removed, align 1, !dbg !3442
  %call69 = call i8* @memset(i8* bitcast ([53 x i32]* @reg_rename_tick to i8*), i32 0, i64 212) #6, !dbg !3443
  store i32 0, i32* @reg_rename_this_tick, align 4, !dbg !3444
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !3445
  call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %31, %struct.bitmap_obstack* null) #7, !dbg !3445
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !3446
  call void @bitmap_clear(%struct.bitmap_head_def* %32) #6, !dbg !3447
  call void @setup_nop_vinsn() #6, !dbg !3448
  %call70 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3449
  store %struct.bitmap_head_def* %call70, %struct.bitmap_head_def** @current_copies, align 8, !dbg !3450
  %call71 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3451
  store %struct.bitmap_head_def* %call71, %struct.bitmap_head_def** @current_originators, align 8, !dbg !3452
  %call72 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3453
  store %struct.bitmap_head_def* %call72, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !3454
  br label %cleanup, !dbg !3455

cleanup:                                          ; preds = %entry, %if.end66
  %retval.0 = phi i8 [ 0, %if.end66 ], [ 1, %entry ], !dbg !3380
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3456
  ret i8 %retval.0, !dbg !3456
}

declare dso_local zeroext i8 @sched_is_disabled_for_current_region_p() local_unnamed_addr #2

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_sched_region_1() unnamed_addr #5 !dbg !3457 {
entry:
  %_new_fences = alloca %struct.flist_tail_def, align 8
  %0 = load i32, i32* @sched_max_luid, align 4, !dbg !3482
  %sub = add nsw i32 %0, -1, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3461, metadata !DIExpression()), !dbg !3484
  tail call void @purge_empty_blocks() #6, !dbg !3485
  %call = tail call fastcc i32 @init_seqno(i32 %sub, %struct.bitmap_head_def* null, %struct.basic_block_def* null) #7, !dbg !3486
  call void @llvm.dbg.value(metadata i32 %call, metadata !3462, metadata !DIExpression()), !dbg !3484
  %cmp = icmp sgt i32 %call, 0, !dbg !3487
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3487

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7444, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3487
  br label %cond.end, !dbg !3487

cond.end:                                         ; preds = %entry, %cond.true
  store %struct._list_node* null, %struct._list_node** @fences, align 8, !dbg !3488
  %1 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !3489
  %tobool = icmp eq %struct.loop* %1, null, !dbg !3489
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3491
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !3491
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3491
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 2, !dbg !3491
  %4 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3491
  %tobool1 = icmp ne %struct.VEC_basic_block_gc* %4, null, !dbg !3491
  br i1 %tobool, label %if.else, label %if.then, !dbg !3492

if.then:                                          ; preds = %cond.end
  br i1 %tobool1, label %cond.true2, label %cond.end7, !dbg !3493

cond.true2:                                       ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %4, i64 0, i32 0, !dbg !3493
  br label %cond.end7, !dbg !3493

cond.end7:                                        ; preds = %if.then, %cond.true2
  %cond8 = phi %struct.VEC_basic_block_base* [ %base, %cond.true2 ], [ null, %if.then ], !dbg !3493
  %5 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3493
  %6 = load i32*, i32** @ebb_head, align 8, !dbg !3493
  %7 = load i32, i32* %6, align 4, !dbg !3493
  %idxprom = sext i32 %7 to i64, !dbg !3493
  %arrayidx9 = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !3493
  %8 = load i32, i32* %arrayidx9, align 4, !dbg !3493
  %call10 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond8, i32 %8) #7, !dbg !3493
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call10, i64 0, i32 7, !dbg !3493
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3493
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3493
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !3493
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3493
  tail call void @init_fences(%struct.rtx_def* %10) #6, !dbg !3494
  br label %if.end, !dbg !3494

if.else:                                          ; preds = %cond.end
  br i1 %tobool1, label %cond.true15, label %cond.end21, !dbg !3495

cond.true15:                                      ; preds = %if.else
  %base19 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %4, i64 0, i32 0, !dbg !3495
  br label %cond.end21, !dbg !3495

cond.end21:                                       ; preds = %if.else, %cond.true15
  %cond22 = phi %struct.VEC_basic_block_base* [ %base19, %cond.true15 ], [ null, %if.else ], !dbg !3495
  %11 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3495
  %12 = load i32*, i32** @ebb_head, align 8, !dbg !3495
  %13 = load i32, i32* %12, align 4, !dbg !3495
  %idxprom24 = sext i32 %13 to i64, !dbg !3495
  %arrayidx25 = getelementptr inbounds i32, i32* %11, i64 %idxprom24, !dbg !3495
  %14 = load i32, i32* %arrayidx25, align 4, !dbg !3495
  %call26 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond22, i32 %14) #7, !dbg !3495
  %call27 = tail call %struct.rtx_def* @bb_note(%struct.basic_block_def* %call26) #6, !dbg !3496
  tail call void @init_fences(%struct.rtx_def* %call27) #6, !dbg !3497
  br label %if.end

if.end:                                           ; preds = %cond.end21, %cond.end7
  store i32 1, i32* @global_level, align 4, !dbg !3498
  tail call fastcc void @sel_sched_region_2(i32 %call) #7, !dbg !3499
  %15 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !3500
  %cmp28 = icmp eq %struct._list_node* %15, null, !dbg !3500
  br i1 %cmp28, label %cond.end31, label %cond.true29, !dbg !3500

cond.true29:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7457, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3500
  br label %cond.end31, !dbg !3500

cond.end31:                                       ; preds = %if.end, %cond.true29
  %16 = load i8, i8* @pipelining_p, align 1, !dbg !3501
  %tobool33 = icmp eq i8 %16, 0, !dbg !3501
  br i1 %tobool33, label %if.end185, label %if.then34, !dbg !3502

if.then34:                                        ; preds = %cond.end31
  %17 = bitcast %struct.flist_tail_def* %_new_fences to i8*, !dbg !3503
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8, !dbg !3503
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %_new_fences, metadata !3473, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.value(metadata i8 1, metadata !3476, metadata !DIExpression()), !dbg !3504
  store i8 0, i8* @pipelining_p, align 1, !dbg !3505
  %18 = load i32, i32* @max_ws, align 4, !dbg !3506
  %19 = load i32, i32* @issue_rate, align 4, !dbg !3506
  %mul = mul nsw i32 %19, 3, !dbg !3506
  %div = sdiv i32 %mul, 2, !dbg !3506
  %cmp35 = icmp slt i32 %18, %div, !dbg !3506
  br i1 %cmp35, label %cond.true36, label %cond.false37, !dbg !3506

cond.true36:                                      ; preds = %if.then34
  br label %cond.end40, !dbg !3506

cond.false37:                                     ; preds = %if.then34
  br label %cond.end40, !dbg !3506

cond.end40:                                       ; preds = %cond.false37, %cond.true36
  %cond41 = phi i32 [ %18, %cond.true36 ], [ %div, %cond.false37 ], !dbg !3506
  store i32 %cond41, i32* @max_ws, align 4, !dbg !3507
  store i8 0, i8* @bookkeeping_p, align 1, !dbg !3508
  store i1 false, i1* @enable_schedule_as_rhs_p, align 1, !dbg !3509
  call void @llvm.dbg.value(metadata i8 1, metadata !3476, metadata !DIExpression()), !dbg !3504
  br label %while.cond, !dbg !3510

while.cond:                                       ; preds = %for.end184, %cond.end40
  %do_p.0 = phi i8 [ 1, %cond.end40 ], [ %do_p.1, %for.end184 ], !dbg !3504
  call void @llvm.dbg.value(metadata i8 %do_p.0, metadata !3476, metadata !DIExpression()), !dbg !3504
  %tobool42 = icmp eq i8 %do_p.0, 0, !dbg !3510
  br i1 %tobool42, label %while.end, label %for.cond.preheader, !dbg !3510

for.cond.preheader:                               ; preds = %while.cond
  br label %for.cond, !dbg !3511

for.cond:                                         ; preds = %for.cond.preheader, %cleanup
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %cleanup ], !dbg !3512
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3463, metadata !DIExpression()), !dbg !3504
  %20 = load i32, i32* @current_nr_blocks, align 4, !dbg !3513
  %21 = sext i32 %20 to i64, !dbg !3514
  %cmp43 = icmp slt i64 %indvars.iv, %21, !dbg !3514
  br i1 %cmp43, label %for.body, label %for.cond140.preheader, !dbg !3511

for.cond140.preheader:                            ; preds = %for.cond
  %.lcssa = phi i32 [ %20, %for.cond ], !dbg !3513
  br label %for.cond140, !dbg !3515

for.body:                                         ; preds = %for.cond
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3517
  %cfg46 = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, i32 1, !dbg !3517
  %23 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg46, align 8, !dbg !3517
  %x_basic_block_info47 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i64 0, i32 2, !dbg !3517
  %24 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info47, align 8, !dbg !3517
  %tobool48 = icmp eq %struct.VEC_basic_block_gc* %24, null, !dbg !3517
  br i1 %tobool48, label %cond.end55, label %cond.true49, !dbg !3517

cond.true49:                                      ; preds = %for.body
  %base53 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %24, i64 0, i32 0, !dbg !3517
  br label %cond.end55, !dbg !3517

cond.end55:                                       ; preds = %for.body, %cond.true49
  %cond56 = phi %struct.VEC_basic_block_base* [ %base53, %cond.true49 ], [ null, %for.body ], !dbg !3517
  %25 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3517
  %26 = load i32*, i32** @ebb_head, align 8, !dbg !3517
  %arrayidx58 = getelementptr inbounds i32, i32* %26, i64 %indvars.iv, !dbg !3517
  %27 = load i32, i32* %arrayidx58, align 4, !dbg !3517
  %idxprom59 = sext i32 %27 to i64, !dbg !3517
  %arrayidx60 = getelementptr inbounds i32, i32* %25, i64 %idxprom59, !dbg !3517
  %28 = load i32, i32* %arrayidx60, align 4, !dbg !3517
  %call61 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond56, i32 %28) #7, !dbg !3517
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call61, metadata !3477, metadata !DIExpression()), !dbg !3518
  %call62 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %call61) #6, !dbg !3519
  %tobool63 = icmp eq i8 %call62, 0, !dbg !3519
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3518
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call61, i64 0, i32 9, !dbg !3518
  %30 = load i32, i32* %index, align 8, !dbg !3518
  br i1 %tobool63, label %if.end66, label %if.then64, !dbg !3521

if.then64:                                        ; preds = %cond.end55
  %call65 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %29, i32 %30) #6, !dbg !3522
  br label %cleanup, !dbg !3524

if.end66:                                         ; preds = %cond.end55
  %call68 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %29, i32 %30) #6, !dbg !3525
  %tobool69 = icmp eq i32 %call68, 0, !dbg !3525
  br i1 %tobool69, label %if.else116, label %if.then70, !dbg !3527

if.then70:                                        ; preds = %if.end66
  call void @clear_outdated_rtx_info(%struct.basic_block_def* %call61) #6, !dbg !3528
  %il71 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call61, i64 0, i32 7, !dbg !3530
  %rtl72 = bitcast %union.basic_block_il_dependent* %il71 to %struct.rtl_bb_info**, !dbg !3530
  %31 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl72, align 8, !dbg !3530
  %end_73 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %31, i64 0, i32 1, !dbg !3530
  %32 = load %struct.rtx_def*, %struct.rtx_def** %end_73, align 8, !dbg !3530
  %call74 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %32) #6, !dbg !3532
  %tobool75 = icmp eq i8 %call74, 0, !dbg !3532
  br i1 %tobool75, label %cleanup, label %land.lhs.true, !dbg !3533

land.lhs.true:                                    ; preds = %if.then70
  %33 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl72, align 8, !dbg !3534
  %end_78 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %33, i64 0, i32 1, !dbg !3534
  %34 = bitcast %struct.rtx_def** %end_78 to i32**, !dbg !3534
  %35 = load i32*, i32** %34, align 8, !dbg !3534
  %bf.load = load i32, i32* %35, align 8, !dbg !3534
  %bf.clear = and i32 %bf.load, 65535, !dbg !3534
  %cmp79 = icmp eq i32 %bf.clear, 9, !dbg !3534
  br i1 %cmp79, label %if.then81, label %cleanup, !dbg !3535

if.then81:                                        ; preds = %land.lhs.true
  %36 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3536
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call61, i64 0, i32 1, !dbg !3537
  %37 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3537
  %tobool82 = icmp eq %struct.VEC_edge_gc* %37, null, !dbg !3537
  br i1 %tobool82, label %cond.end87, label %cond.true83, !dbg !3537

cond.true83:                                      ; preds = %if.then81
  %base85 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %37, i64 0, i32 0, !dbg !3537
  br label %cond.end87, !dbg !3537

cond.end87:                                       ; preds = %if.then81, %cond.true83
  %cond88 = phi %struct.VEC_edge_base* [ %base85, %cond.true83 ], [ null, %if.then81 ], !dbg !3537
  %call89 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond88, i32 0) #7, !dbg !3537
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call89, i64 0, i32 7, !dbg !3537
  %38 = load i32, i32* %flags, align 8, !dbg !3537
  %and = and i32 %38, 1, !dbg !3537
  %tobool90 = icmp eq i32 %and, 0, !dbg !3537
  %39 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3537
  %tobool93 = icmp ne %struct.VEC_edge_gc* %39, null, !dbg !3537
  br i1 %tobool90, label %cond.false101, label %cond.true91, !dbg !3537

cond.true91:                                      ; preds = %cond.end87
  br i1 %tobool93, label %cond.true94, label %cond.end98, !dbg !3537

cond.true94:                                      ; preds = %cond.true91
  %base96 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %39, i64 0, i32 0, !dbg !3537
  br label %cond.end98, !dbg !3537

cond.end98:                                       ; preds = %cond.true91, %cond.true94
  %cond99 = phi %struct.VEC_edge_base* [ %base96, %cond.true94 ], [ null, %cond.true91 ], !dbg !3537
  %call100 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond99, i32 1) #7, !dbg !3537
  br label %cond.end111, !dbg !3537

cond.false101:                                    ; preds = %cond.end87
  br i1 %tobool93, label %cond.true104, label %cond.end108, !dbg !3537

cond.true104:                                     ; preds = %cond.false101
  %base106 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %39, i64 0, i32 0, !dbg !3537
  br label %cond.end108, !dbg !3537

cond.end108:                                      ; preds = %cond.false101, %cond.true104
  %cond109 = phi %struct.VEC_edge_base* [ %base106, %cond.true104 ], [ null, %cond.false101 ], !dbg !3537
  %call110 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond109, i32 0) #7, !dbg !3537
  br label %cond.end111, !dbg !3537

cond.end111:                                      ; preds = %cond.end108, %cond.end98
  %cond112 = phi %struct.edge_def* [ %call100, %cond.end98 ], [ %call110, %cond.end108 ], !dbg !3537
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond112, i64 0, i32 1, !dbg !3538
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3538
  %index113 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i64 0, i32 9, !dbg !3539
  %41 = load i32, i32* %index113, align 8, !dbg !3539
  %call114 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %36, i32 %41) #6, !dbg !3540
  br label %cleanup, !dbg !3540

if.else116:                                       ; preds = %if.end66
  %42 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3541
  %base119 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %42, i64 0, i32 0, !dbg !3541
  %43 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3541
  %base125 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %43, i64 0, i32 0, !dbg !3541
  %call129 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %call61) #6, !dbg !3541
  %arrayidx130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call129, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3541
  %rt_int = bitcast %union.rtunion_def* %arrayidx130 to i32*, !dbg !3541
  %44 = load i32, i32* %rt_int, align 8, !dbg !3541
  %call131 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base125, i32 %44) #7, !dbg !3541
  %call132 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base119, i32 %call131) #7, !dbg !3541
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call132, i64 0, i32 0, i32 5, !dbg !3541
  %45 = load i32, i32* %sched_times, align 8, !dbg !3541
  %cmp133 = icmp slt i32 %45, 1, !dbg !3543
  br i1 %cmp133, label %if.then135, label %cleanup, !dbg !3544

if.then135:                                       ; preds = %if.else116
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3545
  %47 = load i32, i32* %index, align 8, !dbg !3546
  %call137 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %46, i32 %47) #6, !dbg !3547
  br label %cleanup, !dbg !3547

cleanup:                                          ; preds = %if.then70, %cond.end111, %land.lhs.true, %if.then135, %if.else116, %if.then64
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3548
  call void @llvm.dbg.value(metadata i32 undef, metadata !3463, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3504
  br label %for.cond, !dbg !3549, !llvm.loop !3550

for.cond140:                                      ; preds = %for.cond140.preheader, %for.inc182
  %indvars.iv1 = phi i64 [ 0, %for.cond140.preheader ], [ %indvars.iv.next2, %for.inc182 ], !dbg !3552
  %48 = phi i32 [ %.lcssa, %for.cond140.preheader ], [ %.pre, %for.inc182 ], !dbg !3552
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3463, metadata !DIExpression()), !dbg !3504
  %49 = sext i32 %48 to i64, !dbg !3554
  %cmp141 = icmp slt i64 %indvars.iv1, %49, !dbg !3554
  br i1 %cmp141, label %for.body143, label %for.end184.loopexit, !dbg !3515

for.body143:                                      ; preds = %for.cond140
  %50 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3555
  %cfg145 = getelementptr inbounds %struct.function, %struct.function* %50, i64 0, i32 1, !dbg !3555
  %51 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg145, align 8, !dbg !3555
  %x_basic_block_info146 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %51, i64 0, i32 2, !dbg !3555
  %52 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info146, align 8, !dbg !3555
  %tobool147 = icmp eq %struct.VEC_basic_block_gc* %52, null, !dbg !3555
  br i1 %tobool147, label %cond.end154, label %cond.true148, !dbg !3555

cond.true148:                                     ; preds = %for.body143
  %base152 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %52, i64 0, i32 0, !dbg !3555
  br label %cond.end154, !dbg !3555

cond.end154:                                      ; preds = %for.body143, %cond.true148
  %cond155 = phi %struct.VEC_basic_block_base* [ %base152, %cond.true148 ], [ null, %for.body143 ], !dbg !3555
  %53 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3555
  %54 = load i32*, i32** @ebb_head, align 8, !dbg !3555
  %arrayidx157 = getelementptr inbounds i32, i32* %54, i64 %indvars.iv1, !dbg !3555
  %55 = load i32, i32* %arrayidx157, align 4, !dbg !3555
  %idxprom158 = sext i32 %55 to i64, !dbg !3555
  %arrayidx159 = getelementptr inbounds i32, i32* %53, i64 %idxprom158, !dbg !3555
  %56 = load i32, i32* %arrayidx159, align 4, !dbg !3555
  %call160 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond155, i32 %56) #7, !dbg !3555
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call160, metadata !3466, metadata !DIExpression()), !dbg !3504
  %call161 = call zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def* %call160) #6, !dbg !3557
  %tobool162 = icmp eq i8 %call161, 0, !dbg !3557
  br i1 %tobool162, label %if.end164, label %if.then163, !dbg !3559

if.then163:                                       ; preds = %cond.end154
  call void @clear_outdated_rtx_info(%struct.basic_block_def* %call160) #6, !dbg !3560
  br label %for.inc182, !dbg !3562

if.end164:                                        ; preds = %cond.end154
  %57 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3563
  %index165 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call160, i64 0, i32 9, !dbg !3565
  %58 = load i32, i32* %index165, align 8, !dbg !3565
  %call166 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %57, i32 %58) #6, !dbg !3566
  %tobool167 = icmp eq i32 %call166, 0, !dbg !3566
  br i1 %tobool167, label %for.inc182, label %if.then168, !dbg !3567

if.then168:                                       ; preds = %if.end164
  %index165.lcssa = phi i32* [ %index165, %if.end164 ], !dbg !3565
  %call160.lcssa = phi %struct.basic_block_def* [ %call160, %if.end164 ], !dbg !3555
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %_new_fences, metadata !3467, metadata !DIExpression(DW_OP_deref)), !dbg !3504
  call void @flist_tail_init(%struct.flist_tail_def* nonnull %_new_fences) #6, !dbg !3568
  %59 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3570
  %call169 = call fastcc i32 @init_seqno(i32 0, %struct.bitmap_head_def* %59, %struct.basic_block_def* %call160.lcssa) #7, !dbg !3571
  call void @llvm.dbg.value(metadata i32 %call169, metadata !3462, metadata !DIExpression()), !dbg !3484
  %60 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !3572
  %61 = load i32, i32* %index165.lcssa, align 8, !dbg !3573
  %call171 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %60, i32 %61) #6, !dbg !3574
  %62 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3575
  %63 = load i32, i32* %index165.lcssa, align 8, !dbg !3576
  %call173 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %62, i32 %63) #6, !dbg !3577
  %64 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !3578
  %cmp174 = icmp eq %struct._list_node* %64, null, !dbg !3578
  br i1 %cmp174, label %cond.end178, label %cond.true176, !dbg !3578

cond.true176:                                     ; preds = %if.then168
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7525, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3578
  br label %cond.end178, !dbg !3578

cond.end178:                                      ; preds = %if.then168, %cond.true176
  %call180 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %call160.lcssa) #6, !dbg !3579
  call void @init_fences(%struct.rtx_def* %call180) #6, !dbg !3580
  call fastcc void @sel_sched_region_2(i32 %call169) #7, !dbg !3581
  call void @llvm.dbg.value(metadata i8 1, metadata !3476, metadata !DIExpression()), !dbg !3504
  br label %for.end184, !dbg !3582

for.inc182:                                       ; preds = %if.end164, %if.then163
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3583
  call void @llvm.dbg.value(metadata i32 undef, metadata !3463, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3504
  %.pre = load i32, i32* @current_nr_blocks, align 4, !dbg !3552
  br label %for.cond140, !dbg !3584, !llvm.loop !3585

for.end184.loopexit:                              ; preds = %for.cond140
  br label %for.end184, !dbg !3510

for.end184:                                       ; preds = %for.end184.loopexit, %cond.end178
  %do_p.1 = phi i8 [ 1, %cond.end178 ], [ 0, %for.end184.loopexit ], !dbg !3587
  call void @llvm.dbg.value(metadata i8 %do_p.1, metadata !3476, metadata !DIExpression()), !dbg !3504
  br label %while.cond, !dbg !3510, !llvm.loop !3588

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8, !dbg !3590
  br label %if.end185, !dbg !3591

if.end185:                                        ; preds = %cond.end31, %while.end
  ret void, !dbg !3592
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_region_finish(i8 zeroext %reset_sched_cycles_p) unnamed_addr #5 !dbg !3593 {
entry:
  %si = alloca %struct.succ_iterator, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  call void @llvm.dbg.value(metadata i8 %reset_sched_cycles_p, metadata !3597, metadata !DIExpression()), !dbg !3618
  tail call fastcc void @simplify_changed_insns() #7, !dbg !3619
  tail call void @sched_finish_ready_list() #6, !dbg !3620
  tail call void @free_nop_pool() #6, !dbg !3621
  %0 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !3622
  %tobool = icmp eq %struct.VEC_expr_t_heap* %0, null, !dbg !3622
  br i1 %tobool, label %if.end, label %if.then, !dbg !3624

if.then:                                          ; preds = %entry
  tail call fastcc void @VEC_expr_t_heap_free(%struct.VEC_expr_t_heap** nonnull @vec_av_set) #7, !dbg !3625
  br label %if.end, !dbg !3625

if.end:                                           ; preds = %entry, %if.then
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !3626
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !3626
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @current_copies, align 8, !dbg !3626
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_originators, align 8, !dbg !3627
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !3627
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @current_originators, align 8, !dbg !3627
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !3628
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %3) #6, !dbg !3628
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !3628
  tail call fastcc void @vinsn_vec_free(%struct.VEC_vinsn_t_heap** nonnull @vec_bookkeeping_blocked_vinsns) #7, !dbg !3629
  tail call fastcc void @vinsn_vec_free(%struct.VEC_vinsn_t_heap** nonnull @vec_target_unavailable_vinsns) #7, !dbg !3630
  %4 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !3631
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #8, !dbg !3631
  %5 = bitcast %struct.rtx_def** %insn to i8*, !dbg !3632
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !3632
  %6 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !3633
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #8, !dbg !3633
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3633
  %cfg = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !3633
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3633
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 2, !dbg !3633
  %9 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3633
  %tobool1 = icmp eq %struct.VEC_basic_block_gc* %9, null, !dbg !3633
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !3633

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %9, i64 0, i32 0, !dbg !3633
  br label %cond.end, !dbg !3633

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3633
  %10 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3633
  %11 = load i32*, i32** @ebb_head, align 8, !dbg !3633
  %12 = load i32, i32* %11, align 4, !dbg !3633
  %idxprom = sext i32 %12 to i64, !dbg !3633
  %arrayidx5 = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !3633
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !3633
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %13) #7, !dbg !3633
  %call6 = tail call %struct.rtx_def* @bb_note(%struct.basic_block_def* %call) #6, !dbg !3633
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn, metadata !3613, metadata !DIExpression(DW_OP_deref)), !dbg !3634
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %insn, %struct.rtx_def* %call6, i32 9) #7, !dbg !3633
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %6, i64 64, i1 false), !dbg !3633
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #8, !dbg !3633
  br label %for.cond, !dbg !3633

for.cond:                                         ; preds = %for.inc, %cond.end
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3635
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !3635
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !3635
  %x_basic_block_info9 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 2, !dbg !3635
  %16 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info9, align 8, !dbg !3635
  %tobool10 = icmp eq %struct.VEC_basic_block_gc* %16, null, !dbg !3635
  br i1 %tobool10, label %cond.end17, label %cond.true11, !dbg !3635

cond.true11:                                      ; preds = %for.cond
  %base15 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %16, i64 0, i32 0, !dbg !3635
  br label %cond.end17, !dbg !3635

cond.end17:                                       ; preds = %for.cond, %cond.true11
  %cond18 = phi %struct.VEC_basic_block_base* [ %base15, %cond.true11 ], [ null, %for.cond ], !dbg !3635
  %17 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3635
  %18 = load i32*, i32** @ebb_head, align 8, !dbg !3635
  %19 = load i32, i32* %18, align 4, !dbg !3635
  %idxprom20 = sext i32 %19 to i64, !dbg !3635
  %arrayidx21 = getelementptr inbounds i32, i32* %17, i64 %idxprom20, !dbg !3635
  %20 = load i32, i32* %arrayidx21, align 4, !dbg !3635
  %call22 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond18, i32 %20) #7, !dbg !3635
  %call23 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %call22) #6, !dbg !3635
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !3598, metadata !DIExpression(DW_OP_deref)), !dbg !3634
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn, metadata !3613, metadata !DIExpression(DW_OP_deref)), !dbg !3634
  %call24 = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %insn, %struct.rtx_def* %call23, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #7, !dbg !3635
  %tobool25 = icmp eq i8 %call24, 0, !dbg !3633
  br i1 %tobool25, label %for.end, label %for.body, !dbg !3633

for.body:                                         ; preds = %cond.end17
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3636
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !3613, metadata !DIExpression()), !dbg !3634
  %arrayidx26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 1, !dbg !3636
  %rt_bb = bitcast %struct.object_block** %arrayidx26 to %struct.basic_block_def**, !dbg !3636
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3636
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %22, metadata !3614, metadata !DIExpression()), !dbg !3637
  %23 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !3638
  %base29 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %23, i64 0, i32 0, !dbg !3638
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 9, !dbg !3638
  %24 = load i32, i32* %index, align 8, !dbg !3638
  %call33 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base29, i32 %24) #7, !dbg !3638
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call33, i64 0, i32 1, !dbg !3638
  %25 = load i8, i8* %lv_set_valid_p, align 8, !dbg !3638
  %tobool34 = icmp eq i8 %25, 0, !dbg !3638
  br i1 %tobool34, label %if.then35, label %for.inc, !dbg !3640

if.then35:                                        ; preds = %for.body
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3641
  call void @llvm.dbg.value(metadata %struct.rtx_def* %26, metadata !3613, metadata !DIExpression()), !dbg !3634
  %call36 = call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %26) #7, !dbg !3642
  br label %for.inc, !dbg !3642

for.inc:                                          ; preds = %for.body, %if.then35
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !3598, metadata !DIExpression(DW_OP_deref)), !dbg !3634
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #7, !dbg !3635
  br label %for.cond, !dbg !3635, !llvm.loop !3643

for.end:                                          ; preds = %cond.end17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #8, !dbg !3645
  %27 = load i32, i32* @reload_completed, align 4, !dbg !3646
  %tobool38 = icmp eq i32 %27, 0, !dbg !3646
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !3648

if.then39:                                        ; preds = %for.end
  call fastcc void @sel_region_target_finish(i8 zeroext %reset_sched_cycles_p) #7, !dbg !3649
  br label %if.end40, !dbg !3649

if.end40:                                         ; preds = %for.end, %if.then39
  call void @sel_finish_global_and_expr() #6, !dbg !3650
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !3651
  call void @bitmap_clear(%struct.bitmap_head_def* %28) #6, !dbg !3652
  call void @free_nop_vinsn() #6, !dbg !3653
  call void @finish_deps_global() #6, !dbg !3654
  call void @sched_finish_luids() #6, !dbg !3655
  call void @sel_finish_bbs() #6, !dbg !3656
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3657
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %29) #6, !dbg !3657
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3657
  call void @sel_unregister_cfg_hooks() #6, !dbg !3658
  store i32 0, i32* @max_issue_size, align 4, !dbg !3659
  ret void, !dbg !3660
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @maybe_skip_selective_scheduling() local_unnamed_addr #5 !dbg !3661 {
entry:
  %call = tail call zeroext i8 @dbg_cnt(i32 31) #6, !dbg !3664
  %tobool = icmp eq i8 %call, 0, !dbg !3665
  %conv = zext i1 %tobool to i8, !dbg !3665
  ret i8 %conv, !dbg !3666
}

; Function Attrs: nounwind uwtable
define dso_local void @run_selective_scheduling() local_unnamed_addr #5 !dbg !3667 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3670
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3670
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3670
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !3670
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !3670
  %cmp = icmp eq i32 %2, 2, !dbg !3672
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !3673

if.end:                                           ; preds = %entry
  tail call fastcc void @sel_global_init() #7, !dbg !3674
  call void @llvm.dbg.value(metadata i32 0, metadata !3669, metadata !DIExpression()), !dbg !3675
  br label %for.cond, !dbg !3676

for.cond:                                         ; preds = %for.body, %if.end
  %rgn.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ], !dbg !3678
  call void @llvm.dbg.value(metadata i32 %rgn.0, metadata !3669, metadata !DIExpression()), !dbg !3675
  %3 = load i32, i32* @nr_regions, align 4, !dbg !3679
  %cmp1 = icmp slt i32 %rgn.0, %3, !dbg !3681
  br i1 %cmp1, label %for.body, label %for.end, !dbg !3682

for.body:                                         ; preds = %for.cond
  tail call void @sel_sched_region(i32 %rgn.0) #7, !dbg !3683
  %inc = add nuw nsw i32 %rgn.0, 1, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3669, metadata !DIExpression()), !dbg !3675
  br label %for.cond, !dbg !3685, !llvm.loop !3686

for.end:                                          ; preds = %for.cond
  tail call fastcc void @sel_global_finish() #7, !dbg !3688
  br label %cleanup.cont, !dbg !3689

cleanup.cont:                                     ; preds = %for.end, %entry
  ret void, !dbg !3689
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_global_init() unnamed_addr #5 !dbg !3690 {
entry:
  tail call void @calculate_dominance_info(i32 1) #6, !dbg !3691
  tail call void @alloc_sched_pools() #6, !dbg !3692
  tail call void @sel_setup_sched_infos() #6, !dbg !3693
  tail call void @setup_sched_dump() #6, !dbg !3694
  tail call void @sched_rgn_init(i8 zeroext 0) #6, !dbg !3695
  tail call void @sched_init() #6, !dbg !3696
  tail call void @sched_init_bbs() #6, !dbg !3697
  store %struct.basic_block_def* null, %struct.basic_block_def** @after_recovery, align 8, !dbg !3698
  %0 = load i32, i32* @issue_rate, align 4, !dbg !3699
  store i32 %0, i32* @can_issue_more, align 4, !dbg !3700
  tail call void @sched_extend_target() #6, !dbg !3701
  tail call void @sched_deps_init(i8 zeroext 1) #6, !dbg !3702
  tail call void @setup_nop_and_exit_insns() #6, !dbg !3703
  tail call void @sel_extend_global_bb_info() #6, !dbg !3704
  tail call void @init_lv_sets() #6, !dbg !3705
  tail call fastcc void @init_hard_regs_data() #7, !dbg !3706
  ret void, !dbg !3707
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_global_finish() unnamed_addr #5 !dbg !3708 {
entry:
  tail call void @free_bb_note_pool() #6, !dbg !3709
  tail call void @free_lv_sets() #6, !dbg !3710
  tail call void @sel_finish_global_bb_info() #6, !dbg !3711
  tail call void @free_regset_pool() #6, !dbg !3712
  tail call void @free_nop_and_exit_insns() #6, !dbg !3713
  tail call void @sched_rgn_finish() #6, !dbg !3714
  tail call void @sched_deps_finish() #6, !dbg !3715
  tail call void @sched_finish() #6, !dbg !3716
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3717
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !3717
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3717
  %tobool = icmp eq %struct.loops* %1, null, !dbg !3717
  br i1 %tobool, label %if.end, label %if.then, !dbg !3719

if.then:                                          ; preds = %entry
  tail call void @sel_finish_pipelining() #6, !dbg !3720
  br label %if.end, !dbg !3720

if.end:                                           ; preds = %entry, %if.then
  tail call void @free_sched_pools() #6, !dbg !3721
  tail call void @free_dominance_info(i32 1) #6, !dbg !3722
  ret void, !dbg !3723
}

declare dso_local %struct.bitmap_head_def* @get_clear_regset_from_pool() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !3724 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !3728, metadata !DIExpression()), !dbg !3730
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !3731
  store i32 0, i32* %index, align 8, !dbg !3732
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !3733
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !3734
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !3735
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !3735
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !3735
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !3736 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !3742, metadata !DIExpression()), !dbg !3743
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !3744
  %tobool = icmp eq i8 %call, 0, !dbg !3744
  br i1 %tobool, label %if.then, label %if.else, !dbg !3746

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !3747
  br label %return, !dbg !3749

if.else:                                          ; preds = %entry
  br label %return, !dbg !3750

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !3752
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !3752
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !3752
  ret i8 %retval.0, !dbg !3753
}

declare dso_local zeroext i8 @sel_bb_empty_p(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @sel_bb_head(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !3754 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !3759, metadata !DIExpression()), !dbg !3760
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !3761
  %0 = load i32, i32* %index, align 8, !dbg !3761
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !3761
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3761
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !3761
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3761
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3761

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !3761
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3761
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !3761
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3761
  br label %cond.end, !dbg !3761

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3761
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3761
  %cmp = icmp ult i32 %0, %call2, !dbg !3761
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !3761

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3761
  br label %cond.end5, !dbg !3761

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !3762
  %inc = add i32 %5, 1, !dbg !3762
  store i32 %inc, i32* %index, align 8, !dbg !3762
  ret void, !dbg !3763
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3764 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !3769
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3769
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3769

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !3769
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3769
  br label %cond.end, !dbg !3769

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3769
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3769
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !3770
  %conv3 = zext i1 %cmp to i8, !dbg !3771
  ret i8 %conv3, !dbg !3772
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3773 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !3778
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3778
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3778

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !3778
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3778
  br label %cond.end, !dbg !3778

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3778
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !3778
  ret %struct.edge_def* %call2, !dbg !3779
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !3780 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !3786, metadata !DIExpression()), !dbg !3787
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !3788
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3788

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !3788
  %0 = load i32, i32* %num, align 8, !dbg !3788
  br label %cond.end, !dbg !3788

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3788
  ret i32 %cond, !dbg !3788
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3789 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !3794
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3794

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3794
  br label %cond.end, !dbg !3794

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !3795
  ret %struct.VEC_edge_gc* %0, !dbg !3796
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3797 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !3801, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3802, metadata !DIExpression()), !dbg !3803
  br label %land.end, !dbg !3804

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3804
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3804
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !3804
  ret %struct.edge_def* %0, !dbg !3804
}

declare dso_local void @df_simulate_one_insn_backwards(%struct.basic_block_def*, %struct.rtx_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @copy_expr_onside(%struct._expr*, %struct._expr*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @track_scheduled_insns_and_blocks(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !3805 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3809, metadata !DIExpression()), !dbg !3810
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_originators, align 8, !dbg !3811
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3812
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3812
  %1 = load i32, i32* %rt_int, align 8, !dbg !3812
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !3813
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !3814
  %3 = load i32, i32* %rt_int, align 8, !dbg !3816
  %call5 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !3817
  %tobool = icmp eq i32 %call5, 0, !dbg !3817
  br i1 %tobool, label %if.then, label %if.else32, !dbg !3818

if.then:                                          ; preds = %entry
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3819
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i64 0, i32 0, !dbg !3819
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3819
  %base9 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !3819
  %6 = load i32, i32* %rt_int, align 8, !dbg !3819
  %call17 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base9, i32 %6) #7, !dbg !3819
  %call18 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call17) #7, !dbg !3819
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call18, i64 0, i32 0, i32 5, !dbg !3819
  %7 = load i32, i32* %sched_times, align 8, !dbg !3819
  %cmp = icmp sgt i32 %7, 0, !dbg !3822
  br i1 %cmp, label %if.then19, label %if.else, !dbg !3823

if.then19:                                        ; preds = %if.then
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3824
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !3825
  %rt_bb = bitcast %struct.object_block** %arrayidx22 to %struct.basic_block_def**, !dbg !3825
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3825
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 9, !dbg !3826
  %10 = load i32, i32* %index, align 8, !dbg !3826
  %call23 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %8, i32 %10) #6, !dbg !3827
  br label %if.end38, !dbg !3827

if.else:                                          ; preds = %if.then
  %11 = load i32, i32* %rt_int, align 8, !dbg !3828
  %12 = load i32, i32* @first_emitted_uid, align 4, !dbg !3830
  %cmp28 = icmp slt i32 %11, %12, !dbg !3831
  br i1 %cmp28, label %land.lhs.true, label %if.end38, !dbg !3832

land.lhs.true:                                    ; preds = %if.else
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3833
  %bf.load = load i32, i32* %13, align 8, !dbg !3833
  %bf.clear = and i32 %bf.load, 65535, !dbg !3833
  %cmp29 = icmp eq i32 %bf.clear, 7, !dbg !3833
  br i1 %cmp29, label %if.end38, label %if.then30, !dbg !3834

if.then30:                                        ; preds = %land.lhs.true
  %14 = load i32, i32* @num_insns_scheduled, align 4, !dbg !3835
  %inc = add nsw i32 %14, 1, !dbg !3835
  store i32 %inc, i32* @num_insns_scheduled, align 4, !dbg !3835
  br label %if.end38, !dbg !3836

if.else32:                                        ; preds = %entry
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !3837
  %16 = load i32, i32* %rt_int, align 8, !dbg !3838
  %call37 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %15, i32 %16) #6, !dbg !3839
  br label %if.end38

if.end38:                                         ; preds = %if.then19, %if.then30, %land.lhs.true, %if.else, %if.else32
  %17 = load i32, i32* %rt_int, align 8, !dbg !3840
  %18 = load i32, i32* @max_uid_before_move_op, align 4, !dbg !3842
  %cmp43 = icmp sgt i32 %17, %18, !dbg !3843
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !3844

if.then44:                                        ; preds = %if.end38
  %19 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !3845
  %dec = add nsw i32 %19, -1, !dbg !3845
  store i32 %dec, i32* @stat_bookkeeping_copies, align 4, !dbg !3845
  br label %if.end45, !dbg !3846

if.end45:                                         ; preds = %if.then44, %if.end38
  ret void, !dbg !3847
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @handle_emitting_transformations(%struct.rtx_def* %insn, %struct._expr* %expr, %struct.moveop_static_params* %params) unnamed_addr #5 !dbg !3848 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3852, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !3853, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata %struct.moveop_static_params* %params, metadata !3854, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata i8 0, metadata !3855, metadata !DIExpression()), !dbg !3856
  %call = tail call fastcc zeroext i8 @maybe_emit_renaming_copy(%struct.rtx_def* %insn, %struct.moveop_static_params* %params) #7, !dbg !3857
  call void @llvm.dbg.value(metadata i8 %call, metadata !3855, metadata !DIExpression()), !dbg !3856
  %call1 = tail call fastcc zeroext i8 @maybe_emit_speculative_check(%struct.rtx_def* %insn, %struct._expr* %expr, %struct.moveop_static_params* %params) #7, !dbg !3858
  %or1 = or i8 %call, %call1, !dbg !3859
  call void @llvm.dbg.value(metadata i8 %or1, metadata !3855, metadata !DIExpression()), !dbg !3856
  ret i8 %or1, !dbg !3860
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_history_def_base_length(%struct.VEC_expr_history_def_base* %vec_) unnamed_addr #0 !dbg !3861 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_base* %vec_, metadata !3867, metadata !DIExpression()), !dbg !3868
  %tobool = icmp eq %struct.VEC_expr_history_def_base* %vec_, null, !dbg !3869
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3869

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 0, !dbg !3869
  %0 = load i32, i32* %num, align 8, !dbg !3869
  br label %cond.end, !dbg !3869

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3869
  ret i32 %cond, !dbg !3869
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_insn_from_stream(%struct.rtx_def* %insn, i8 zeroext %only_disconnect) unnamed_addr #5 !dbg !3870 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3874, metadata !DIExpression()), !dbg !3879
  call void @llvm.dbg.value(metadata i8 %only_disconnect, metadata !3875, metadata !DIExpression()), !dbg !3879
  %call = tail call fastcc zeroext i8 @need_nop_to_preserve_insn_bb(%struct.rtx_def* %insn) #7, !dbg !3880
  %tobool = icmp eq i8 %call, 0, !dbg !3880
  br i1 %tobool, label %if.end, label %if.then, !dbg !3881

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @get_nop_from_pool(%struct.rtx_def* %insn) #6, !dbg !3882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !3876, metadata !DIExpression()), !dbg !3883
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, !dbg !3884
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3884
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3884
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3884
  %2 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !3884
  %cmp = icmp eq %struct.rtx_def* %1, %2, !dbg !3884
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3884

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5961, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3884
  br label %cond.end, !dbg !3884

cond.end:                                         ; preds = %if.then, %cond.true
  %call2 = tail call fastcc %struct.rtx_def** @VEC_insn_t_heap_safe_push(%struct.VEC_insn_t_heap** nonnull @vec_temp_moveop_nops, %struct.rtx_def* %call1) #7, !dbg !3885
  br label %if.end, !dbg !3886

if.end:                                           ; preds = %entry, %cond.end
  %call3 = tail call zeroext i8 @sel_remove_insn(%struct.rtx_def* %insn, i8 zeroext %only_disconnect, i8 zeroext 0) #6, !dbg !3887
  ret void, !dbg !3888
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @maybe_emit_renaming_copy(%struct.rtx_def* %insn, %struct.moveop_static_params* %params) unnamed_addr #5 !dbg !3889 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3893, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.value(metadata %struct.moveop_static_params* %params, metadata !3894, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.value(metadata i8 0, metadata !3895, metadata !DIExpression()), !dbg !3901
  %c_expr = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %params, i64 0, i32 1, !dbg !3902
  %0 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !3902
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i64 0, i32 0, !dbg !3902
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !3902
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 1, i32 0, !dbg !3902
  %2 = load i32, i32* %type, align 8, !dbg !3902
  %cmp = icmp eq i32 %2, 23, !dbg !3902
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3904

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @expr_dest_reg(%struct._expr* %0) #6, !dbg !3905
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3896, metadata !DIExpression()), !dbg !3901
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !3906
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !3906

land.lhs.true:                                    ; preds = %if.end
  %dest = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %params, i64 0, i32 0, !dbg !3906
  %3 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3906
  %tobool2 = icmp eq %struct.rtx_def* %3, null, !dbg !3906
  br i1 %tobool2, label %cond.true, label %land.lhs.true3, !dbg !3906

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !3906
  %bf.load = load i32, i32* %4, align 8, !dbg !3906
  %bf.clear = and i32 %bf.load, 65535, !dbg !3906
  %cmp5 = icmp eq i32 %bf.clear, 37, !dbg !3906
  br i1 %cmp5, label %cond.end, label %cond.true, !dbg !3906

cond.true:                                        ; preds = %land.lhs.true, %if.end, %land.lhs.true3
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5835, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3906
  %dest6.phi.trans.insert = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %params, i64 0, i32 0, !dbg !3907
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %dest6.phi.trans.insert, align 8, !dbg !3908
  br label %cond.end, !dbg !3906

cond.end:                                         ; preds = %land.lhs.true3, %cond.true
  %5 = phi %struct.rtx_def* [ %3, %land.lhs.true3 ], [ %.pre, %cond.true ], !dbg !3908
  %dest6 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %params, i64 0, i32 0, !dbg !3908
  %call7 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !3908
  %call8 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %call) #7, !dbg !3909
  %cmp9 = icmp eq i32 %call7, %call8, !dbg !3910
  br i1 %cmp9, label %cleanup, label %if.then10, !dbg !3911

if.then10:                                        ; preds = %cond.end
  %6 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3912
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %6, i64 0, i32 0, !dbg !3912
  %7 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3912
  %base18 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %7, i64 0, i32 0, !dbg !3912
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3912
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3912
  %8 = load i32, i32* %rt_int, align 8, !dbg !3912
  %call22 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base18, i32 %8) #7, !dbg !3912
  %call23 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call22) #7, !dbg !3912
  %vinsn24 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call23, i64 0, i32 0, i32 0, !dbg !3912
  %9 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn24, align 8, !dbg !3912
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dest6, align 8, !dbg !3913
  %call26 = tail call fastcc %struct.rtx_def* @create_insn_rtx_with_rhs(%struct.vinsn_def* %9, %struct.rtx_def* %10) #7, !dbg !3914
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call26, metadata !3900, metadata !DIExpression()), !dbg !3915
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3916
  %base29 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i64 0, i32 0, !dbg !3916
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3916
  %base35 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !3916
  %13 = load i32, i32* %rt_int, align 8, !dbg !3916
  %call43 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base35, i32 %13) #7, !dbg !3916
  %call44 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base29, i32 %call43) #7, !dbg !3916
  %expr45 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call44, i64 0, i32 0, !dbg !3916
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3917
  %base48 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %14, i64 0, i32 0, !dbg !3917
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3917
  %base54 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %15, i64 0, i32 0, !dbg !3917
  %16 = load i32, i32* %rt_int, align 8, !dbg !3917
  %call62 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base54, i32 %16) #7, !dbg !3917
  %call63 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base48, i32 %call62) #7, !dbg !3917
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call63, i64 0, i32 2, !dbg !3917
  %17 = load i32, i32* %seqno, align 4, !dbg !3917
  %call64 = tail call %struct.rtx_def* @sel_gen_insn_from_rtx_after(%struct.rtx_def* %call26, %struct._expr* %expr45, i32 %17, %struct.rtx_def* %insn) #6, !dbg !3918
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !3897, metadata !DIExpression()), !dbg !3915
  %18 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3919
  %base67 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %18, i64 0, i32 0, !dbg !3919
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3919
  %base73 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i64 0, i32 0, !dbg !3919
  %arrayidx79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call64, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3919
  %rt_int80 = bitcast %union.rtunion_def* %arrayidx79 to i32*, !dbg !3919
  %20 = load i32, i32* %rt_int80, align 8, !dbg !3919
  %call81 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base73, i32 %20) #7, !dbg !3919
  %call82 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base67, i32 %call81) #7, !dbg !3919
  %spec_done_ds = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call82, i64 0, i32 0, i32 7, !dbg !3919
  store i32 0, i32* %spec_done_ds, align 8, !dbg !3920
  %21 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !3921
  %22 = load %struct.rtx_def*, %struct.rtx_def** %dest6, align 8, !dbg !3922
  tail call fastcc void @replace_dest_with_reg_in_expr(%struct._expr* %21, %struct.rtx_def* %22) #7, !dbg !3923
  call void @llvm.dbg.value(metadata i8 1, metadata !3895, metadata !DIExpression()), !dbg !3901
  %was_renamed = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %params, i64 0, i32 3, !dbg !3924
  store i8 1, i8* %was_renamed, align 4, !dbg !3925
  br label %cleanup, !dbg !3926

cleanup:                                          ; preds = %cond.end, %if.then10, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %if.then10 ], [ 0, %cond.end ], !dbg !3901
  ret i8 %retval.0, !dbg !3927
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @maybe_emit_speculative_check(%struct.rtx_def* %insn, %struct._expr* %expr, %struct.moveop_static_params* %params) unnamed_addr #5 !dbg !3928 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3930, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !3931, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata %struct.moveop_static_params* %params, metadata !3932, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8 0, metadata !3933, metadata !DIExpression()), !dbg !3936
  %call = tail call fastcc i32 @get_spec_check_type_for_insn(%struct.rtx_def* %insn, %struct._expr* %expr) #7, !dbg !3937
  call void @llvm.dbg.value(metadata i32 %call, metadata !3935, metadata !DIExpression()), !dbg !3936
  %cmp = icmp eq i32 %call, 0, !dbg !3938
  br i1 %cmp, label %if.else, label %if.then, !dbg !3940

if.then:                                          ; preds = %entry
  %c_expr = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %params, i64 0, i32 1, !dbg !3941
  %0 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !3941
  %call1 = tail call fastcc %struct.rtx_def* @create_speculation_check(%struct._expr* %0, i32 %call, %struct.rtx_def* %insn) #7, !dbg !3943
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !3934, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8 1, metadata !3933, metadata !DIExpression()), !dbg !3936
  br label %if.end, !dbg !3944

if.else:                                          ; preds = %entry
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3945
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i64 0, i32 0, !dbg !3945
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3945
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %2, i64 0, i32 0, !dbg !3945
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3945
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3945
  %3 = load i32, i32* %rt_int, align 8, !dbg !3945
  %call8 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base4, i32 %3) #7, !dbg !3945
  %call9 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call8) #7, !dbg !3945
  %spec_done_ds = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call9, i64 0, i32 0, i32 7, !dbg !3945
  store i32 0, i32* %spec_done_ds, align 8, !dbg !3947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3934, metadata !DIExpression()), !dbg !3936
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %insn_emitted.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !3936
  %x.0 = phi %struct.rtx_def* [ %call1, %if.then ], [ %insn, %if.else ], !dbg !3948
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !3934, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8 %insn_emitted.0, metadata !3933, metadata !DIExpression()), !dbg !3936
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3949
  %base13 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i64 0, i32 0, !dbg !3949
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3949
  %base19 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !3949
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3949
  %rt_int26 = bitcast %union.rtunion_def* %arrayidx25 to i32*, !dbg !3949
  %6 = load i32, i32* %rt_int26, align 8, !dbg !3949
  %call27 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base19, i32 %6) #7, !dbg !3949
  %call28 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base13, i32 %call27) #7, !dbg !3949
  %spec_done_ds30 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call28, i64 0, i32 0, i32 7, !dbg !3949
  %7 = load i32, i32* %spec_done_ds30, align 8, !dbg !3949
  %cmp31 = icmp eq i32 %7, 0, !dbg !3949
  br i1 %cmp31, label %land.lhs.true, label %cond.true52, !dbg !3949

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3949
  %base34 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %8, i64 0, i32 0, !dbg !3949
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3949
  %base40 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i64 0, i32 0, !dbg !3949
  %10 = load i32, i32* %rt_int26, align 8, !dbg !3949
  %call48 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base40, i32 %10) #7, !dbg !3949
  %call49 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base34, i32 %call48) #7, !dbg !3949
  %spec_to_check_ds = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call49, i64 0, i32 0, i32 8, !dbg !3949
  %11 = load i32, i32* %spec_to_check_ds, align 4, !dbg !3949
  %cmp51 = icmp eq i32 %11, 0, !dbg !3949
  br i1 %cmp51, label %cond.end54, label %cond.true52, !dbg !3949

cond.true52:                                      ; preds = %land.lhs.true, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5885, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3949
  br label %cond.end54, !dbg !3949

cond.end54:                                       ; preds = %land.lhs.true, %cond.true52
  ret i8 %insn_emitted.0, !dbg !3950
}

declare dso_local %struct.rtx_def* @expr_dest_reg(%struct._expr*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !3951 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3958, metadata !DIExpression()), !dbg !3959
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3960
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3960
  %0 = load i32, i32* %rt_uint, align 8, !dbg !3960
  ret i32 %0, !dbg !3961
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @create_insn_rtx_with_rhs(%struct.vinsn_def* %vi, %struct.rtx_def* %rhs_rtx) unnamed_addr #5 !dbg !3962 {
entry:
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !3966, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rhs_rtx, metadata !3967, metadata !DIExpression()), !dbg !3971
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 1, !dbg !3972
  %0 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !3972
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #6, !dbg !3973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3968, metadata !DIExpression()), !dbg !3971
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %rhs_rtx) #6, !dbg !3974
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !3969, metadata !DIExpression()), !dbg !3971
  %call2 = tail call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %call1, %struct.rtx_def* null) #6, !dbg !3975
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !3970, metadata !DIExpression()), !dbg !3971
  ret %struct.rtx_def* %call2, !dbg !3976
}

declare dso_local %struct.rtx_def* @sel_gen_insn_from_rtx_after(%struct.rtx_def*, %struct._expr*, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_dest_with_reg_in_expr(%struct._expr* %expr, %struct.rtx_def* %new_reg) unnamed_addr #5 !dbg !3977 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !3981, metadata !DIExpression()), !dbg !3985
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_reg, metadata !3982, metadata !DIExpression()), !dbg !3985
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !3986
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !3986
  %call = tail call fastcc %struct.rtx_def* @create_insn_rtx_with_lhs(%struct.vinsn_def* %0, %struct.rtx_def* %new_reg) #7, !dbg !3987
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3983, metadata !DIExpression()), !dbg !3985
  %call2 = tail call %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def* %call, i8 zeroext 0) #6, !dbg !3988
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %call2, metadata !3984, metadata !DIExpression()), !dbg !3985
  tail call void @change_vinsn_in_expr(%struct._expr* %expr, %struct.vinsn_def* %call2) #6, !dbg !3989
  %was_renamed = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 12, !dbg !3990
  %bf.load = load i8, i8* %was_renamed, align 1, !dbg !3991
  %bf.set = or i8 %bf.load, 4, !dbg !3991
  store i8 %bf.set, i8* %was_renamed, align 1, !dbg !3991
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !3992
  store i8 1, i8* %target_available, align 8, !dbg !3993
  ret void, !dbg !3994
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @create_insn_rtx_with_lhs(%struct.vinsn_def* %vi, %struct.rtx_def* %lhs_rtx) unnamed_addr #5 !dbg !3995 {
entry:
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !3997, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata %struct.rtx_def* %lhs_rtx, metadata !3998, metadata !DIExpression()), !dbg !4002
  %rhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 2, !dbg !4003
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !4003
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #6, !dbg !4004
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3999, metadata !DIExpression()), !dbg !4002
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %lhs_rtx, %struct.rtx_def* %call) #6, !dbg !4005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4000, metadata !DIExpression()), !dbg !4002
  %call2 = tail call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %call1, %struct.rtx_def* null) #6, !dbg !4006
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !4001, metadata !DIExpression()), !dbg !4002
  ret %struct.rtx_def* %call2, !dbg !4007
}

declare dso_local %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @change_vinsn_in_expr(%struct._expr*, %struct.vinsn_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_spec_check_type_for_insn(%struct.rtx_def* %insn, %struct._expr* %expr) unnamed_addr #5 !dbg !4008 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4012, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4013, metadata !DIExpression()), !dbg !4016
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4017
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !4017
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4017
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !4017
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4017
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4017
  %2 = load i32, i32* %rt_int, align 8, !dbg !4017
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #7, !dbg !4017
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !4017
  %spec_done_ds = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 7, !dbg !4017
  %3 = load i32, i32* %spec_done_ds, align 8, !dbg !4017
  call void @llvm.dbg.value(metadata i32 %3, metadata !4015, metadata !DIExpression()), !dbg !4016
  %spec_to_check_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 8, !dbg !4018
  %4 = load i32, i32* %spec_to_check_ds, align 4, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %4, metadata !4014, metadata !DIExpression()), !dbg !4016
  %5 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 34), align 8, !dbg !4019
  %tobool9 = icmp eq i32 (%struct.rtx_def*)* %5, null, !dbg !4021
  br i1 %tobool9, label %if.end, label %if.then, !dbg !4022

if.then:                                          ; preds = %entry
  %call10 = tail call i32 %5(%struct.rtx_def* %insn) #6, !dbg !4023
  %or = or i32 %3, %call10, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %or, metadata !4015, metadata !DIExpression()), !dbg !4016
  br label %if.end, !dbg !4025

if.end:                                           ; preds = %entry, %if.then
  %already_checked_ds.0 = phi i32 [ %or, %if.then ], [ %3, %entry ], !dbg !4016
  call void @llvm.dbg.value(metadata i32 %already_checked_ds.0, metadata !4015, metadata !DIExpression()), !dbg !4016
  %6 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !4026
  %cmp = icmp eq %struct.spec_info_def* %6, null, !dbg !4028
  br i1 %cmp, label %if.end14, label %land.lhs.true, !dbg !4029

land.lhs.true:                                    ; preds = %if.end
  %flags = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %6, i64 0, i32 4, !dbg !4030
  %7 = load i32, i32* %flags, align 8, !dbg !4030
  %and = and i32 %7, 8, !dbg !4031
  %tobool11 = icmp eq i32 %and, 0, !dbg !4031
  %or13 = or i32 %already_checked_ds.0, 258048, !dbg !4032
  %spec.select = select i1 %tobool11, i32 %already_checked_ds.0, i32 %or13, !dbg !4033
  br label %if.end14, !dbg !4033

if.end14:                                         ; preds = %if.end, %land.lhs.true
  %already_checked_ds.1 = phi i32 [ %already_checked_ds.0, %if.end ], [ %spec.select, %land.lhs.true ], !dbg !4016
  call void @llvm.dbg.value(metadata i32 %already_checked_ds.1, metadata !4015, metadata !DIExpression()), !dbg !4016
  %call15 = tail call i32 @ds_get_speculation_types(i32 %already_checked_ds.1) #6, !dbg !4034
  call void @llvm.dbg.value(metadata i32 %call15, metadata !4015, metadata !DIExpression()), !dbg !4016
  %neg = xor i32 %call15, -1, !dbg !4035
  %and16 = and i32 %4, %neg, !dbg !4036
  call void @llvm.dbg.value(metadata i32 %and16, metadata !4014, metadata !DIExpression()), !dbg !4016
  ret i32 %and16, !dbg !4037
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @create_speculation_check(%struct._expr* %c_expr, i32 %check_ds, %struct.rtx_def* %orig_insn) unnamed_addr #5 !dbg !4038 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %c_expr, metadata !4042, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata i32 %check_ds, metadata !4043, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig_insn, metadata !4044, metadata !DIExpression()), !dbg !4053
  %0 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 29), align 8, !dbg !4054
  %call = tail call zeroext i8 %0(i32 %check_ds) #6, !dbg !4056
  %tobool = icmp eq i8 %call, 0, !dbg !4056
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4057

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4058
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i64 0, i32 0, !dbg !4058
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4058
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %2, i64 0, i32 0, !dbg !4058
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4058
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4058
  %3 = load i32, i32* %rt_int, align 8, !dbg !4058
  %call8 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base4, i32 %3) #7, !dbg !4058
  %call9 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call8) #7, !dbg !4058
  %spec_done_ds = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call9, i64 0, i32 0, i32 7, !dbg !4058
  %4 = load i32, i32* %spec_done_ds, align 8, !dbg !4058
  %cmp = icmp eq i32 %4, 0, !dbg !4059
  br i1 %cmp, label %if.end, label %if.then, !dbg !4060

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call11 = tail call %struct.basic_block_def* @sel_create_recovery_block(%struct.rtx_def* %orig_insn) #6, !dbg !4061
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call11, metadata !4048, metadata !DIExpression()), !dbg !4053
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call11, i64 0, i32 7, !dbg !4063
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4063
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4063
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 0, !dbg !4063
  %6 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4063
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4049, metadata !DIExpression()), !dbg !4053
  br label %if.end, !dbg !4064

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %recovery_block.0 = phi %struct.basic_block_def* [ %call11, %if.then ], [ null, %lor.lhs.false ], !dbg !4065
  %label.0 = phi %struct.rtx_def* [ %6, %if.then ], [ null, %lor.lhs.false ], !dbg !4065
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.0, metadata !4049, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %recovery_block.0, metadata !4048, metadata !DIExpression()), !dbg !4053
  %7 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 30), align 8, !dbg !4066
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %c_expr, i64 0, i32 0, !dbg !4067
  %8 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4067
  %insn_rtx12 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i64 0, i32 0, !dbg !4067
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx12, align 8, !dbg !4067
  %call13 = tail call %struct.rtx_def* %7(%struct.rtx_def* %9, %struct.rtx_def* %label.0, i32 %check_ds) #6, !dbg !4068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !4045, metadata !DIExpression()), !dbg !4053
  %cmp14 = icmp eq %struct.rtx_def* %call13, null, !dbg !4069
  br i1 %cmp14, label %cond.true16, label %cond.end18, !dbg !4069

cond.true16:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1847, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4069
  br label %cond.end18, !dbg !4069

cond.end18:                                       ; preds = %if.end, %cond.true16
  %call20 = tail call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %call13, %struct.rtx_def* %label.0) #6, !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !4046, metadata !DIExpression()), !dbg !4053
  %10 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4071
  %base23 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %10, i64 0, i32 0, !dbg !4071
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4071
  %base29 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %11, i64 0, i32 0, !dbg !4071
  %arrayidx35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4071
  %rt_int36 = bitcast %union.rtunion_def* %arrayidx35 to i32*, !dbg !4071
  %12 = load i32, i32* %rt_int36, align 8, !dbg !4071
  %call37 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base29, i32 %12) #7, !dbg !4071
  %call38 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base23, i32 %call37) #7, !dbg !4071
  %expr39 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call38, i64 0, i32 0, !dbg !4071
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4072
  %base42 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %13, i64 0, i32 0, !dbg !4072
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4072
  %base48 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !4072
  %15 = load i32, i32* %rt_int36, align 8, !dbg !4072
  %call56 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base48, i32 %15) #7, !dbg !4072
  %call57 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base42, i32 %call56) #7, !dbg !4072
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call57, i64 0, i32 2, !dbg !4072
  %16 = load i32, i32* %seqno, align 4, !dbg !4072
  %call58 = tail call %struct.rtx_def* @sel_gen_insn_from_rtx_after(%struct.rtx_def* %call20, %struct._expr* %expr39, i32 %16, %struct.rtx_def* %orig_insn) #6, !dbg !4073
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call58, metadata !4047, metadata !DIExpression()), !dbg !4053
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4074
  %base61 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i64 0, i32 0, !dbg !4074
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4074
  %base67 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i64 0, i32 0, !dbg !4074
  %arrayidx73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call58, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4074
  %rt_int74 = bitcast %union.rtunion_def* %arrayidx73 to i32*, !dbg !4074
  %19 = load i32, i32* %rt_int74, align 8, !dbg !4074
  %call75 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base67, i32 %19) #7, !dbg !4074
  %call76 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base61, i32 %call75) #7, !dbg !4074
  %spec_done_ds78 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call76, i64 0, i32 0, i32 7, !dbg !4074
  store i32 0, i32* %spec_done_ds78, align 8, !dbg !4075
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4076
  %base81 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %20, i64 0, i32 0, !dbg !4076
  %21 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4076
  %base87 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %21, i64 0, i32 0, !dbg !4076
  %22 = load i32, i32* %rt_int74, align 8, !dbg !4076
  %call95 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base87, i32 %22) #7, !dbg !4076
  %call96 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base81, i32 %call95) #7, !dbg !4076
  %spec_checked_ds = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call96, i64 0, i32 12, !dbg !4076
  store i32 %check_ds, i32* %spec_checked_ds, align 8, !dbg !4077
  %23 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4078
  %base99 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %23, i64 0, i32 0, !dbg !4078
  %24 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4078
  %base105 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %24, i64 0, i32 0, !dbg !4078
  %25 = load i32, i32* %rt_int36, align 8, !dbg !4078
  %call113 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base105, i32 %25) #7, !dbg !4078
  %call114 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base99, i32 %call113) #7, !dbg !4078
  %vinsn116 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call114, i64 0, i32 0, i32 0, !dbg !4078
  %26 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn116, align 8, !dbg !4078
  %call117 = tail call i32 @sel_vinsn_cost(%struct.vinsn_def* %26) #6, !dbg !4079
  %27 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4080
  %base120 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %27, i64 0, i32 0, !dbg !4080
  %28 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4080
  %base126 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %28, i64 0, i32 0, !dbg !4080
  %29 = load i32, i32* %rt_int74, align 8, !dbg !4080
  %call134 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base126, i32 %29) #7, !dbg !4080
  %call135 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base120, i32 %call134) #7, !dbg !4080
  %vinsn137 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call135, i64 0, i32 0, i32 0, !dbg !4080
  %30 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn137, align 8, !dbg !4080
  %call138 = tail call i32 @sel_vinsn_cost(%struct.vinsn_def* %30) #6, !dbg !4081
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4082
  %base141 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %31, i64 0, i32 0, !dbg !4082
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4082
  %base147 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %32, i64 0, i32 0, !dbg !4082
  %33 = load i32, i32* %rt_int74, align 8, !dbg !4082
  %call155 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base147, i32 %33) #7, !dbg !4082
  %call156 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base141, i32 %call155) #7, !dbg !4082
  %priority = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call156, i64 0, i32 0, i32 3, !dbg !4082
  %34 = load i32, i32* %priority, align 8, !dbg !4083
  %sub1 = sub i32 %call138, %call117, !dbg !4083
  %sub158 = add i32 %34, %sub1, !dbg !4083
  store i32 %sub158, i32* %priority, align 8, !dbg !4083
  %cmp159 = icmp eq %struct.basic_block_def* %recovery_block.0, null, !dbg !4084
  br i1 %cmp159, label %if.end209, label %if.then161, !dbg !4085

if.then161:                                       ; preds = %cond.end18
  %35 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4086
  %insn_rtx163 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %35, i64 0, i32 0, !dbg !4086
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx163, align 8, !dbg !4086
  %u164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i64 0, i32 1, !dbg !4086
  %37 = getelementptr inbounds %union.u, %union.u* %u164, i64 1, i32 0, i32 0, i64 0, !dbg !4086
  %rt_rtx = bitcast %union.rtunion_def* %37 to %struct.rtx_def**, !dbg !4086
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4086
  %call167 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %38) #6, !dbg !4087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call167, metadata !4050, metadata !DIExpression()), !dbg !4088
  %call168 = tail call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %call167, %struct.rtx_def* null) #6, !dbg !4089
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call168, metadata !4050, metadata !DIExpression()), !dbg !4088
  %39 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4090
  %base171 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %39, i64 0, i32 0, !dbg !4090
  %40 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4090
  %base177 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %40, i64 0, i32 0, !dbg !4090
  %41 = load i32, i32* %rt_int36, align 8, !dbg !4090
  %call185 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base177, i32 %41) #7, !dbg !4090
  %call186 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base171, i32 %call185) #7, !dbg !4090
  %expr187 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call186, i64 0, i32 0, !dbg !4090
  %42 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4091
  %base190 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %42, i64 0, i32 0, !dbg !4091
  %43 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4091
  %base196 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %43, i64 0, i32 0, !dbg !4091
  %44 = load i32, i32* %rt_int74, align 8, !dbg !4091
  %call204 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base196, i32 %44) #7, !dbg !4091
  %call205 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base190, i32 %call204) #7, !dbg !4091
  %seqno206 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call205, i64 0, i32 2, !dbg !4091
  %45 = load i32, i32* %seqno206, align 4, !dbg !4091
  %call207 = tail call %struct.rtx_def* @bb_note(%struct.basic_block_def* nonnull %recovery_block.0) #6, !dbg !4092
  %call208 = tail call %struct.rtx_def* @sel_gen_recovery_insn_from_rtx_after(%struct.rtx_def* %call168, %struct._expr* %expr187, i32 %45, %struct.rtx_def* %call207) #6, !dbg !4093
  br label %if.end209, !dbg !4094

if.end209:                                        ; preds = %cond.end18, %if.then161
  %call210 = tail call i32 @ds_get_max_dep_weak(i32 %check_ds) #6, !dbg !4095
  call void @llvm.dbg.value(metadata i32 %call210, metadata !4043, metadata !DIExpression()), !dbg !4053
  %call211 = tail call i32 @speculate_expr(%struct._expr* %c_expr, i32 %call210) #6, !dbg !4096
  ret %struct.rtx_def* %call58, !dbg !4097
}

declare dso_local i32 @ds_get_speculation_types(i32) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @sel_create_recovery_block(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @sel_vinsn_cost(%struct.vinsn_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @sel_gen_recovery_insn_from_rtx_after(%struct.rtx_def*, %struct._expr*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @bb_note(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local i32 @ds_get_max_dep_weak(i32) local_unnamed_addr #2

declare dso_local i32 @speculate_expr(%struct._expr*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @need_nop_to_preserve_insn_bb(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !4098 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4102, metadata !DIExpression()), !dbg !4108
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4109
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !4109
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4109
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !4107, metadata !DIExpression()), !dbg !4108
  %call = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %0) #6, !dbg !4110
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4103, metadata !DIExpression()), !dbg !4108
  %call1 = tail call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %0) #6, !dbg !4111
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4104, metadata !DIExpression()), !dbg !4108
  %cmp = icmp eq %struct.rtx_def* %call, %call1, !dbg !4112
  br i1 %cmp, label %cleanup, label %while.cond.preheader, !dbg !4114

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !4115

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %bb_head.0 = phi %struct.rtx_def* [ %3, %while.body ], [ %call, %while.cond.preheader ], !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_head.0, metadata !4103, metadata !DIExpression()), !dbg !4108
  %cmp2 = icmp eq %struct.rtx_def* %bb_head.0, %call1, !dbg !4116
  br i1 %cmp2, label %while.end, label %land.rhs, !dbg !4117

land.rhs:                                         ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %bb_head.0, i64 0, i32 0, !dbg !4118
  %bf.load = load i32, i32* %1, align 8, !dbg !4118
  %bf.clear = and i32 %bf.load, 65535, !dbg !4118
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4118
  br i1 %cmp3, label %while.body, label %while.end, !dbg !4115

while.body:                                       ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %bb_head.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4119
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !4119
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4119
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !4103, metadata !DIExpression()), !dbg !4108
  br label %while.cond, !dbg !4115, !llvm.loop !4120

while.end:                                        ; preds = %while.cond, %land.rhs
  %bb_head.0.lcssa = phi %struct.rtx_def* [ %bb_head.0, %while.cond ], [ %bb_head.0, %land.rhs ], !dbg !4108
  %cmp2.lcssa = phi i1 [ %cmp2, %while.cond ], [ %cmp2, %land.rhs ], !dbg !4116
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_head.0.lcssa, metadata !4103, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_head.0.lcssa, metadata !4103, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_head.0.lcssa, metadata !4103, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_head.0.lcssa, metadata !4103, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_head.0.lcssa, metadata !4103, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_head.0.lcssa, metadata !4103, metadata !DIExpression()), !dbg !4108
  br i1 %cmp2.lcssa, label %cleanup, label %while.cond10.preheader, !dbg !4121

while.cond10.preheader:                           ; preds = %while.end
  br label %while.cond10, !dbg !4122

while.cond10:                                     ; preds = %while.cond10.preheader, %while.body17
  %bb_end.0 = phi %struct.rtx_def* [ %6, %while.body17 ], [ %call1, %while.cond10.preheader ], !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_end.0, metadata !4104, metadata !DIExpression()), !dbg !4108
  %cmp11 = icmp eq %struct.rtx_def* %bb_head.0.lcssa, %bb_end.0, !dbg !4123
  br i1 %cmp11, label %while.end22, label %land.rhs12, !dbg !4124

land.rhs12:                                       ; preds = %while.cond10
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %bb_end.0, i64 0, i32 0, !dbg !4125
  %bf.load13 = load i32, i32* %4, align 8, !dbg !4125
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !4125
  %cmp15 = icmp eq i32 %bf.clear14, 7, !dbg !4125
  br i1 %cmp15, label %while.body17, label %while.end22, !dbg !4122

while.body17:                                     ; preds = %land.rhs12
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %bb_end.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4126
  %rt_rtx21 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !4126
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !4126
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4104, metadata !DIExpression()), !dbg !4108
  br label %while.cond10, !dbg !4122, !llvm.loop !4127

while.end22:                                      ; preds = %while.cond10, %land.rhs12
  %bb_end.0.lcssa = phi %struct.rtx_def* [ %bb_end.0, %while.cond10 ], [ %bb_end.0, %land.rhs12 ], !dbg !4108
  %cmp11.lcssa = phi i1 [ %cmp11, %while.cond10 ], [ %cmp11, %land.rhs12 ], !dbg !4123
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_end.0.lcssa, metadata !4104, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_end.0.lcssa, metadata !4104, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_end.0.lcssa, metadata !4104, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_end.0.lcssa, metadata !4104, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_end.0.lcssa, metadata !4104, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_end.0.lcssa, metadata !4104, metadata !DIExpression()), !dbg !4108
  br i1 %cmp11.lcssa, label %cleanup, label %if.end25, !dbg !4128

if.end25:                                         ; preds = %while.end22
  br label %while.cond30, !dbg !4129

while.cond30:                                     ; preds = %while.body37, %if.end25
  %bb_head.0.pn = phi %struct.rtx_def* [ %bb_head.0.lcssa, %if.end25 ], [ %bb_next.0, %while.body37 ]
  %bb_next.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %bb_head.0.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4108
  %bb_next.0.in = bitcast %union.rtunion_def* %bb_next.0.in.in to %struct.rtx_def**, !dbg !4108
  %bb_next.0 = load %struct.rtx_def*, %struct.rtx_def** %bb_next.0.in, align 8, !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bb_next.0, metadata !4105, metadata !DIExpression()), !dbg !4108
  %cmp31 = icmp eq %struct.rtx_def* %bb_next.0, %bb_end.0.lcssa, !dbg !4130
  br i1 %cmp31, label %while.end42, label %land.rhs32, !dbg !4131

land.rhs32:                                       ; preds = %while.cond30
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %bb_next.0, i64 0, i32 0, !dbg !4132
  %bf.load33 = load i32, i32* %7, align 8, !dbg !4132
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !4132
  %cmp35 = icmp eq i32 %bf.clear34, 7, !dbg !4132
  br i1 %cmp35, label %while.body37, label %while.end42, !dbg !4129

while.body37:                                     ; preds = %land.rhs32
  br label %while.cond30, !dbg !4129, !llvm.loop !4133

while.end42:                                      ; preds = %while.cond30, %land.rhs32
  %cmp31.lcssa = phi i1 [ %cmp31, %while.cond30 ], [ %cmp31, %land.rhs32 ], !dbg !4130
  br i1 %cmp31.lcssa, label %land.lhs.true, label %if.end48, !dbg !4135

land.lhs.true:                                    ; preds = %while.end42
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %bb_end.0.lcssa, i64 0, i32 0, !dbg !4137
  %bf.load44 = load i32, i32* %8, align 8, !dbg !4137
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !4137
  %cmp46 = icmp eq i32 %bf.clear45, 9, !dbg !4137
  br i1 %cmp46, label %cleanup, label %if.end48, !dbg !4138

if.end48:                                         ; preds = %land.lhs.true, %while.end42
  br label %while.cond53, !dbg !4139

while.cond53:                                     ; preds = %while.body57, %if.end48
  %insn.pn = phi %struct.rtx_def* [ %insn, %if.end48 ], [ %in_next.0, %while.body57 ]
  %in_next.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4108
  %in_next.0.in = bitcast %union.rtunion_def* %in_next.0.in.in to %struct.rtx_def**, !dbg !4108
  %in_next.0 = load %struct.rtx_def*, %struct.rtx_def** %in_next.0.in, align 8, !dbg !4108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %in_next.0, metadata !4106, metadata !DIExpression()), !dbg !4108
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in_next.0, i64 0, i32 0, !dbg !4140
  %bf.load54 = load i32, i32* %9, align 8, !dbg !4140
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !4140
  %cmp56 = icmp eq i32 %bf.clear55, 7, !dbg !4140
  br i1 %cmp56, label %while.body57, label %while.end62, !dbg !4139

while.body57:                                     ; preds = %while.cond53
  br label %while.cond53, !dbg !4139, !llvm.loop !4141

while.end62:                                      ; preds = %while.cond53
  %in_next.0.lcssa = phi %struct.rtx_def* [ %in_next.0, %while.cond53 ], !dbg !4108
  %10 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !4143
  %call63 = tail call %struct._fence* @flist_lookup(%struct._list_node* %10, %struct.rtx_def* %in_next.0.lcssa) #6, !dbg !4143
  %cmp64 = icmp ne %struct._fence* %call63, null, !dbg !4143
  %. = zext i1 %cmp64 to i8, !dbg !4108
  br label %cleanup, !dbg !4108

cleanup:                                          ; preds = %while.end62, %land.lhs.true, %while.end22, %while.end, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ 1, %while.end ], [ 1, %while.end22 ], [ 1, %land.lhs.true ], [ %., %while.end62 ], !dbg !4108
  ret i8 %retval.0, !dbg !4145
}

declare dso_local %struct.rtx_def* @get_nop_from_pool(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_insn_t_heap_safe_push(%struct.VEC_insn_t_heap** %vec_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !4146 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, metadata !4152, metadata !DIExpression()), !dbg !4154
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !4153, metadata !DIExpression()), !dbg !4154
  %call = tail call fastcc i32 @VEC_insn_t_heap_reserve(%struct.VEC_insn_t_heap** nonnull @vec_temp_moveop_nops, i32 1) #7, !dbg !4155
  %0 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !4155
  %tobool = icmp eq %struct.VEC_insn_t_heap* %0, null, !dbg !4155
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4155

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %0, i64 0, i32 0, !dbg !4155
  br label %cond.end, !dbg !4155

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_insn_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4155
  %call1 = tail call fastcc %struct.rtx_def** @VEC_insn_t_base_quick_push(%struct.VEC_insn_t_base* %cond, %struct.rtx_def* %obj_) #7, !dbg !4155
  ret %struct.rtx_def** %call1, !dbg !4155
}

declare dso_local zeroext i8 @sel_remove_insn(%struct.rtx_def*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @sel_bb_end(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct._fence* @flist_lookup(%struct._list_node*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_insn_t_heap_reserve(%struct.VEC_insn_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4156 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, metadata !4160, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i32 1, metadata !4161, metadata !DIExpression()), !dbg !4163
  %0 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !4164
  %tobool = icmp eq %struct.VEC_insn_t_heap* %0, null, !dbg !4164
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4164

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %0, i64 0, i32 0, !dbg !4164
  br label %cond.end, !dbg !4164

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_insn_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4164
  %call = tail call fastcc i32 @VEC_insn_t_base_space(%struct.VEC_insn_t_base* %cond, i32 1) #7, !dbg !4164
  %tobool1 = icmp eq i32 %call, 0, !dbg !4164
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4162, metadata !DIExpression()), !dbg !4163
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4164

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_insn_t_heap** @vec_temp_moveop_nops to i8**), align 8, !dbg !4165
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 1) #6, !dbg !4165
  store i8* %call3, i8** bitcast (%struct.VEC_insn_t_heap** @vec_temp_moveop_nops to i8**), align 8, !dbg !4165
  br label %if.end, !dbg !4165

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4164
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_insn_t_base_quick_push(%struct.VEC_insn_t_base* %vec_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !4167 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_insn_t_base* %vec_, metadata !4172, metadata !DIExpression()), !dbg !4175
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !4173, metadata !DIExpression()), !dbg !4175
  %num1 = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %vec_, i64 0, i32 0, !dbg !4176
  %0 = load i32, i32* %num1, align 8, !dbg !4176
  %inc = add i32 %0, 1, !dbg !4176
  store i32 %inc, i32* %num1, align 8, !dbg !4176
  %idxprom = zext i32 %0 to i64, !dbg !4176
  %arrayidx = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4176
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx, metadata !4174, metadata !DIExpression()), !dbg !4175
  store %struct.rtx_def* %obj_, %struct.rtx_def** %arrayidx, align 8, !dbg !4176
  ret %struct.rtx_def** %arrayidx, !dbg !4176
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_insn_t_base_space(%struct.VEC_insn_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4177 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_insn_t_base* %vec_, metadata !4181, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.value(metadata i32 1, metadata !4182, metadata !DIExpression()), !dbg !4183
  %tobool = icmp eq %struct.VEC_insn_t_base* %vec_, null, !dbg !4184
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4184

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %vec_, i64 0, i32 1, !dbg !4184
  %0 = load i32, i32* %alloc, align 4, !dbg !4184
  %num = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %vec_, i64 0, i32 0, !dbg !4184
  %1 = load i32, i32* %num, align 8, !dbg !4184
  %cmp1 = icmp ne i32 %0, %1, !dbg !4184
  %phitmp = zext i1 %cmp1 to i32, !dbg !4184
  br label %cond.end, !dbg !4184

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4184

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !4184
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @lhs_of_insn_equals_to_dest_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @merge_expr_data(%struct._expr*, %struct._expr*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @clear_expr(%struct._expr*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @moveup_expr_cached(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext %inside_insn_group) unnamed_addr #5 !dbg !4185 {
entry:
  %res = alloca i32, align 4
  %trans_type = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4189, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4190, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 0, metadata !4191, metadata !DIExpression()), !dbg !4244
  %0 = bitcast i32* %res to i8*, !dbg !4245
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4245
  call void @llvm.dbg.value(metadata i8 0, metadata !4193, metadata !DIExpression()), !dbg !4244
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !4246
  %cmp = icmp sgt i32 %1, 5, !dbg !4247
  br i1 %cmp, label %do.body, label %if.end39, !dbg !4248

do.body:                                          ; preds = %entry
  %2 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4249
  %tobool = icmp eq i8 %2, 0, !dbg !4249
  br i1 %tobool, label %if.else, label %do.body2, !dbg !4250

do.body2:                                         ; preds = %do.body
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4251
  %mul = shl nsw i32 %call, 1, !dbg !4251
  %add = or i32 %mul, 1, !dbg !4251
  call void @llvm.dbg.value(metadata i32 %add, metadata !4194, metadata !DIExpression()), !dbg !4252
  %conv = sext i32 %add to i64, !dbg !4251
  %3 = alloca i8, i64 %conv, align 16, !dbg !4251
  call void @llvm.dbg.value(metadata i8* %3, metadata !4200, metadata !DIExpression()), !dbg !4252
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %3, i64 %conv, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4251
  call void @sel_prepare_string_for_dot_label(i8* nonnull %3) #6, !dbg !4251
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4251
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %3) #6, !dbg !4251
  br label %do.end9, !dbg !4251

if.else:                                          ; preds = %do.body
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4249
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4249
  br label %do.end9

do.end9:                                          ; preds = %if.else, %do.body2
  call void @dump_expr(%struct._expr* %expr) #6, !dbg !4253
  %6 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4254
  %tobool11 = icmp eq i8 %6, 0, !dbg !4254
  br i1 %tobool11, label %if.else30, label %do.body13, !dbg !4255

do.body13:                                        ; preds = %do.end9
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4256
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4256
  %7 = load i32, i32* %rt_int, align 8, !dbg !4256
  %call15 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i32 %7) #6, !dbg !4256
  %mul16 = shl nsw i32 %call15, 1, !dbg !4256
  %add17 = or i32 %mul16, 1, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %add17, metadata !4201, metadata !DIExpression()), !dbg !4257
  %conv19 = sext i32 %add17 to i64, !dbg !4256
  %8 = alloca i8, i64 %conv19, align 16, !dbg !4256
  call void @llvm.dbg.value(metadata i8* %8, metadata !4205, metadata !DIExpression()), !dbg !4257
  %9 = load i32, i32* %rt_int, align 8, !dbg !4256
  %call26 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %8, i64 %conv19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i32 %9) #6, !dbg !4256
  call void @sel_prepare_string_for_dot_label(i8* nonnull %8) #6, !dbg !4256
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4256
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %8) #6, !dbg !4256
  br label %if.end39, !dbg !4256

if.else30:                                        ; preds = %do.end9
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4254
  %arrayidx33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4254
  %rt_int34 = bitcast %union.rtunion_def* %arrayidx33 to i32*, !dbg !4254
  %12 = load i32, i32* %rt_int34, align 8, !dbg !4254
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i32 %12) #6, !dbg !4254
  br label %if.end39

if.end39:                                         ; preds = %do.body13, %if.else30, %entry
  %13 = bitcast %struct._expr* %expr to i32***, !dbg !4258
  %14 = load i32**, i32*** %13, align 8, !dbg !4258
  %15 = load i32*, i32** %14, align 8, !dbg !4258
  %bf.load = load i32, i32* %15, align 8, !dbg !4258
  %bf.clear = and i32 %bf.load, 65535, !dbg !4258
  %cmp40 = icmp eq i32 %bf.clear, 7, !dbg !4258
  br i1 %cmp40, label %land.lhs.true, label %if.else53, !dbg !4260

land.lhs.true:                                    ; preds = %if.end39
  %vinsn42 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !4261
  %arrayidx46 = getelementptr inbounds i32, i32* %15, i64 8, !dbg !4261
  %rt_bb = bitcast i32* %arrayidx46 to %struct.basic_block_def**, !dbg !4261
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4261
  %call47 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %16) #6, !dbg !4262
  %17 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn42, align 8, !dbg !4263
  %insn_rtx49 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %17, i64 0, i32 0, !dbg !4263
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx49, align 8, !dbg !4263
  %cmp50 = icmp eq %struct.rtx_def* %call47, %18, !dbg !4264
  br i1 %cmp50, label %if.end67, label %if.else53, !dbg !4265

if.else53:                                        ; preds = %land.lhs.true, %if.end39
  call void @llvm.dbg.value(metadata i32* %res, metadata !4192, metadata !DIExpression(DW_OP_deref)), !dbg !4244
  %call54 = call fastcc zeroext i8 @try_bitmap_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext 0, i32* nonnull %res) #7, !dbg !4266
  %tobool55 = icmp eq i8 %call54, 0, !dbg !4266
  br i1 %tobool55, label %if.else61, label %if.then56, !dbg !4268

if.then56:                                        ; preds = %if.else53
  call void @llvm.dbg.value(metadata i1 true, metadata !4193, metadata !DIExpression()), !dbg !4244
  br label %if.end67, !dbg !4269

if.else61:                                        ; preds = %if.else53
  call void @llvm.dbg.value(metadata i32* %res, metadata !4192, metadata !DIExpression(DW_OP_deref)), !dbg !4244
  %call62 = call fastcc zeroext i8 @try_transformation_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i32* nonnull %res) #7, !dbg !4270
  %tobool63 = icmp ne i8 %call62, 0, !dbg !4270
  call void @llvm.dbg.value(metadata i1 %tobool63, metadata !4193, metadata !DIExpression()), !dbg !4244
  br label %if.end67

if.end67:                                         ; preds = %if.then56, %if.else61, %land.lhs.true
  %got_answer.2.shrunk = phi i1 [ false, %land.lhs.true ], [ true, %if.then56 ], [ %tobool63, %if.else61 ]
  call void @llvm.dbg.value(metadata i1 %got_answer.2.shrunk, metadata !4193, metadata !DIExpression()), !dbg !4244
  br i1 %got_answer.2.shrunk, label %if.end235, label %if.then69, !dbg !4272

if.then69:                                        ; preds = %if.end67
  %vinsn70 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !4273
  %19 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn70, align 8, !dbg !4273
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %19, metadata !4206, metadata !DIExpression()), !dbg !4274
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 7, !dbg !4275
  %20 = load i32, i32* %spec_done_ds, align 8, !dbg !4275
  call void @llvm.dbg.value(metadata i32 %20, metadata !4209, metadata !DIExpression()), !dbg !4274
  %insn_rtx71 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %19, i64 0, i32 0, !dbg !4276
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx71, align 8, !dbg !4276
  %arrayidx74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4276
  %rt_int75 = bitcast %union.rtunion_def* %arrayidx74 to i32*, !dbg !4276
  %22 = load i32, i32* %rt_int75, align 8, !dbg !4276
  call void @llvm.dbg.value(metadata i32 %22, metadata !4210, metadata !DIExpression()), !dbg !4274
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %19, i64 0, i32 1, i32 0, !dbg !4277
  %23 = load i32, i32* %type, align 8, !dbg !4277
  %cmp76 = icmp eq i32 %23, 23, !dbg !4277
  br i1 %cmp76, label %lor.end83, label %lor.rhs78, !dbg !4277

lor.rhs78:                                        ; preds = %if.then69
  %cmp81 = icmp eq i32 %23, 24, !dbg !4277
  br label %lor.end83, !dbg !4277

lor.end83:                                        ; preds = %lor.rhs78, %if.then69
  %24 = phi i1 [ true, %if.then69 ], [ %cmp81, %lor.rhs78 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !4211, metadata !DIExpression()), !dbg !4274
  %25 = bitcast i32* %trans_type to i8*, !dbg !4278
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #8, !dbg !4278
  call void @llvm.dbg.value(metadata i32 0, metadata !4212, metadata !DIExpression()), !dbg !4274
  store i32 0, i32* %trans_type, align 4, !dbg !4279
  call void @vinsn_attach(%struct.vinsn_def* %19) #6, !dbg !4280
  call void @llvm.dbg.value(metadata i32* %trans_type, metadata !4212, metadata !DIExpression(DW_OP_deref)), !dbg !4274
  %call86 = call fastcc i32 @moveup_expr(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext 0, i32* nonnull %trans_type) #7, !dbg !4281
  call void @llvm.dbg.value(metadata i32 %call86, metadata !4192, metadata !DIExpression()), !dbg !4244
  store i32 %call86, i32* %res, align 4, !dbg !4282
  call void @llvm.dbg.value(metadata i32 %call86, metadata !4192, metadata !DIExpression()), !dbg !4244
  switch i32 %call86, label %sw.default [
    i32 2, label %sw.bb
    i32 0, label %sw.bb112
    i32 1, label %sw.bb138
    i32 3, label %sw.bb167
  ], !dbg !4283

sw.bb:                                            ; preds = %lor.end83
  call void @llvm.dbg.value(metadata i32 %call86, metadata !4192, metadata !DIExpression()), !dbg !4244
  call fastcc void @update_bitmap_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext 0, i32 2) #7, !dbg !4284
  %26 = load i32, i32* @sched_verbose, align 4, !dbg !4285
  %cmp87 = icmp sgt i32 %26, 5, !dbg !4286
  br i1 %cmp87, label %do.body90, label %sw.epilog, !dbg !4287

do.body90:                                        ; preds = %sw.bb
  %27 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4288
  %tobool91 = icmp eq i8 %27, 0, !dbg !4288
  br i1 %tobool91, label %if.else106, label %do.body93, !dbg !4289

do.body93:                                        ; preds = %do.body90
  %call95 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4290
  %mul96 = shl nsw i32 %call95, 1, !dbg !4290
  %add97 = or i32 %mul96, 1, !dbg !4290
  call void @llvm.dbg.value(metadata i32 %add97, metadata !4213, metadata !DIExpression()), !dbg !4291
  %conv99 = sext i32 %add97 to i64, !dbg !4290
  %28 = alloca i8, i64 %conv99, align 16, !dbg !4290
  call void @llvm.dbg.value(metadata i8* %28, metadata !4219, metadata !DIExpression()), !dbg !4291
  %call102 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %28, i64 %conv99, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4290
  call void @sel_prepare_string_for_dot_label(i8* nonnull %28) #6, !dbg !4290
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4290
  %call103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %28) #6, !dbg !4290
  br label %sw.epilog, !dbg !4290

if.else106:                                       ; preds = %do.body90
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4288
  %call107 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4288
  br label %sw.epilog

sw.bb112:                                         ; preds = %lor.end83
  call void @llvm.dbg.value(metadata i32 %call86, metadata !4192, metadata !DIExpression()), !dbg !4244
  call fastcc void @update_bitmap_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext 0, i32 0) #7, !dbg !4292
  %31 = load i32, i32* @sched_verbose, align 4, !dbg !4293
  %cmp113 = icmp sgt i32 %31, 5, !dbg !4294
  br i1 %cmp113, label %do.body116, label %sw.epilog, !dbg !4295

do.body116:                                       ; preds = %sw.bb112
  %32 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4296
  %tobool117 = icmp eq i8 %32, 0, !dbg !4296
  br i1 %tobool117, label %if.else132, label %do.body119, !dbg !4297

do.body119:                                       ; preds = %do.body116
  %call121 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !4298
  %mul122 = shl nsw i32 %call121, 1, !dbg !4298
  %add123 = or i32 %mul122, 1, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %add123, metadata !4220, metadata !DIExpression()), !dbg !4299
  %conv125 = sext i32 %add123 to i64, !dbg !4298
  %33 = alloca i8, i64 %conv125, align 16, !dbg !4298
  call void @llvm.dbg.value(metadata i8* %33, metadata !4225, metadata !DIExpression()), !dbg !4299
  %call128 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %33, i64 %conv125, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !4298
  call void @sel_prepare_string_for_dot_label(i8* nonnull %33) #6, !dbg !4298
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4298
  %call129 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %33) #6, !dbg !4298
  br label %sw.epilog, !dbg !4298

if.else132:                                       ; preds = %do.body116
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4296
  %call133 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !4296
  br label %sw.epilog

sw.bb138:                                         ; preds = %lor.end83
  br i1 %24, label %cond.end, label %cond.true, !dbg !4300

cond.true:                                        ; preds = %sw.bb138
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2547, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4300
  %.pre1 = load i32, i32* %res, align 4, !dbg !4301
  br label %cond.end, !dbg !4300

cond.end:                                         ; preds = %sw.bb138, %cond.true
  %36 = phi i32 [ 1, %sw.bb138 ], [ %.pre1, %cond.true ], !dbg !4301
  call void @llvm.dbg.value(metadata i32 %36, metadata !4192, metadata !DIExpression()), !dbg !4244
  call fastcc void @update_bitmap_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext 0, i32 %36) #7, !dbg !4302
  %37 = load i32, i32* @sched_verbose, align 4, !dbg !4303
  %cmp142 = icmp sgt i32 %37, 5, !dbg !4304
  br i1 %cmp142, label %do.body145, label %sw.epilog, !dbg !4305

do.body145:                                       ; preds = %cond.end
  %38 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4306
  %tobool146 = icmp eq i8 %38, 0, !dbg !4306
  br i1 %tobool146, label %if.else161, label %do.body148, !dbg !4307

do.body148:                                       ; preds = %do.body145
  %call150 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4308
  %mul151 = shl nsw i32 %call150, 1, !dbg !4308
  %add152 = or i32 %mul151, 1, !dbg !4308
  call void @llvm.dbg.value(metadata i32 %add152, metadata !4226, metadata !DIExpression()), !dbg !4309
  %conv154 = sext i32 %add152 to i64, !dbg !4308
  %39 = alloca i8, i64 %conv154, align 16, !dbg !4308
  call void @llvm.dbg.value(metadata i8* %39, metadata !4231, metadata !DIExpression()), !dbg !4309
  %call157 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %39, i64 %conv154, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4308
  call void @sel_prepare_string_for_dot_label(i8* nonnull %39) #6, !dbg !4308
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4308
  %call158 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %39) #6, !dbg !4308
  br label %sw.epilog, !dbg !4308

if.else161:                                       ; preds = %do.body145
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4306
  %call162 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !4306
  br label %sw.epilog

sw.bb167:                                         ; preds = %lor.end83
  %42 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn70, align 8, !dbg !4310
  %insn_rtx169 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %42, i64 0, i32 0, !dbg !4310
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx169, align 8, !dbg !4310
  %arrayidx172 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4310
  %rt_int173 = bitcast %union.rtunion_def* %arrayidx172 to i32*, !dbg !4310
  %44 = load i32, i32* %rt_int173, align 8, !dbg !4310
  %cmp174 = icmp eq i32 %44, %22, !dbg !4310
  br i1 %cmp174, label %lor.lhs.false176, label %cond.end182, !dbg !4310

lor.lhs.false176:                                 ; preds = %sw.bb167
  %45 = load i32, i32* %spec_done_ds, align 8, !dbg !4310
  %cmp178 = icmp eq i32 %45, %20, !dbg !4310
  br i1 %cmp178, label %cond.true180, label %cond.end182, !dbg !4310

cond.true180:                                     ; preds = %lor.lhs.false176
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2555, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4310
  %.pre = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn70, align 8, !dbg !4311
  br label %cond.end182, !dbg !4310

cond.end182:                                      ; preds = %lor.lhs.false176, %sw.bb167, %cond.true180
  %46 = phi %struct.vinsn_def* [ %42, %lor.lhs.false176 ], [ %42, %sw.bb167 ], [ %.pre, %cond.true180 ], !dbg !4311
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 10, !dbg !4312
  %arrayidx186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4313
  %rt_int187 = bitcast %union.rtunion_def* %arrayidx186 to i32*, !dbg !4313
  %47 = load i32, i32* %rt_int187, align 8, !dbg !4313
  %48 = load i32, i32* %trans_type, align 4, !dbg !4314
  call void @llvm.dbg.value(metadata i32 %48, metadata !4212, metadata !DIExpression()), !dbg !4274
  call void @insert_in_history_vect(%struct.VEC_expr_history_def_heap** nonnull %history_of_changes, i32 %47, i32 %48, %struct.vinsn_def* %19, %struct.vinsn_def* %46, i32 %20) #6, !dbg !4315
  %49 = load i32, i32* %trans_type, align 4, !dbg !4316
  call void @llvm.dbg.value(metadata i32 %49, metadata !4212, metadata !DIExpression()), !dbg !4274
  call fastcc void @update_transformation_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext 0, i32 %49, %struct.vinsn_def* %19) #7, !dbg !4317
  %50 = load i32, i32* @sched_verbose, align 4, !dbg !4318
  %cmp189 = icmp sgt i32 %50, 5, !dbg !4319
  br i1 %cmp189, label %do.body192, label %sw.epilog, !dbg !4320

do.body192:                                       ; preds = %cond.end182
  %51 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4321
  %tobool193 = icmp eq i8 %51, 0, !dbg !4321
  br i1 %tobool193, label %if.else208, label %do.body195, !dbg !4322

do.body195:                                       ; preds = %do.body192
  %call197 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4323
  %mul198 = shl nsw i32 %call197, 1, !dbg !4323
  %add199 = or i32 %mul198, 1, !dbg !4323
  call void @llvm.dbg.value(metadata i32 %add199, metadata !4232, metadata !DIExpression()), !dbg !4324
  %conv201 = sext i32 %add199 to i64, !dbg !4323
  %52 = alloca i8, i64 %conv201, align 16, !dbg !4323
  call void @llvm.dbg.value(metadata i8* %52, metadata !4238, metadata !DIExpression()), !dbg !4324
  %call204 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %52, i64 %conv201, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4323
  call void @sel_prepare_string_for_dot_label(i8* nonnull %52) #6, !dbg !4323
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4323
  %call205 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %52) #6, !dbg !4323
  br label %do.end212, !dbg !4323

if.else208:                                       ; preds = %do.body192
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4321
  %call209 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4321
  br label %do.end212

do.end212:                                        ; preds = %if.else208, %do.body195
  call void @dump_expr(%struct._expr* %expr) #6, !dbg !4325
  %55 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4326
  %tobool214 = icmp eq i8 %55, 0, !dbg !4326
  br i1 %tobool214, label %if.else229, label %do.body216, !dbg !4327

do.body216:                                       ; preds = %do.end212
  %call218 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4328
  %mul219 = shl nsw i32 %call218, 1, !dbg !4328
  %add220 = or i32 %mul219, 1, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %add220, metadata !4239, metadata !DIExpression()), !dbg !4329
  %conv222 = sext i32 %add220 to i64, !dbg !4328
  %56 = alloca i8, i64 %conv222, align 16, !dbg !4328
  call void @llvm.dbg.value(metadata i8* %56, metadata !4243, metadata !DIExpression()), !dbg !4329
  %call225 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %56, i64 %conv222, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4328
  call void @sel_prepare_string_for_dot_label(i8* nonnull %56) #6, !dbg !4328
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4328
  %call226 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %56) #6, !dbg !4328
  br label %sw.epilog, !dbg !4328

if.else229:                                       ; preds = %do.end212
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4326
  %call230 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4326
  br label %sw.epilog

sw.default:                                       ; preds = %lor.end83
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2570, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4330
  br label %sw.epilog, !dbg !4331

sw.epilog:                                        ; preds = %cond.end182, %if.else229, %do.body216, %cond.end, %if.else161, %do.body148, %sw.bb112, %if.else132, %do.body119, %sw.bb, %if.else106, %do.body93, %sw.default
  call void @vinsn_detach(%struct.vinsn_def* %19) #6, !dbg !4332
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #8, !dbg !4333
  br label %if.end235, !dbg !4334

if.end235:                                        ; preds = %if.end67, %sw.epilog
  %59 = load i32, i32* %res, align 4, !dbg !4335
  call void @llvm.dbg.value(metadata i32 %59, metadata !4192, metadata !DIExpression()), !dbg !4244
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4336
  ret i32 %59, !dbg !4337
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_liveness_on_insn(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !4338 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4340, metadata !DIExpression()), !dbg !4341
  store i1 true, i1* @ignore_first, align 1, !dbg !4342
  %call = tail call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %insn) #7, !dbg !4343
  ret void, !dbg !4344
}

declare dso_local void @dump_expr(%struct._expr*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_bitmap_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext %inside_insn_group, i32* %res) unnamed_addr #5 !dbg !4345 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4350, metadata !DIExpression()), !dbg !4397
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4351, metadata !DIExpression()), !dbg !4397
  call void @llvm.dbg.value(metadata i8 0, metadata !4352, metadata !DIExpression()), !dbg !4397
  call void @llvm.dbg.value(metadata i32* %res, metadata !4353, metadata !DIExpression()), !dbg !4397
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !4398
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4398
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !4398
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4398
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4398
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4398
  %2 = load i32, i32* %rt_int, align 8, !dbg !4398
  call void @llvm.dbg.value(metadata i32 %2, metadata !4354, metadata !DIExpression()), !dbg !4397
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4399
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i64 0, i32 0, !dbg !4399
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4399
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !4399
  %arrayidx9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4399
  %rt_int10 = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !4399
  %5 = load i32, i32* %rt_int10, align 8, !dbg !4399
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %5) #7, !dbg !4399
  %call11 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !4399
  %analyzed_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call11, i64 0, i32 4, !dbg !4399
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps, align 8, !dbg !4399
  %call12 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %2) #6, !dbg !4400
  %tobool13 = icmp eq i32 %call12, 0, !dbg !4400
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4401
  %base16 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %7, i64 0, i32 0, !dbg !4401
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4401
  %base22 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !4401
  %9 = load i32, i32* %rt_int10, align 8, !dbg !4401
  %call30 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base22, i32 %9) #7, !dbg !4401
  %call31 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base16, i32 %call30) #7, !dbg !4401
  %found_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call31, i64 0, i32 5, !dbg !4401
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps, align 8, !dbg !4401
  %call32 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %10, i32 %2) #6, !dbg !4401
  %tobool33 = icmp ne i32 %call32, 0, !dbg !4401
  br i1 %tobool13, label %if.else74, label %if.then, !dbg !4402

if.then:                                          ; preds = %entry
  %11 = load i32, i32* @sched_verbose, align 4, !dbg !4403
  %cmp = icmp sgt i32 %11, 5, !dbg !4403
  br i1 %tobool33, label %if.then34, label %if.else48, !dbg !4404

if.then34:                                        ; preds = %if.then
  br i1 %cmp, label %do.body, label %if.end47, !dbg !4405

do.body:                                          ; preds = %if.then34
  %12 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4406
  %tobool36 = icmp eq i8 %12, 0, !dbg !4406
  br i1 %tobool36, label %if.else, label %do.body38, !dbg !4407

do.body38:                                        ; preds = %do.body
  %call39 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4408
  %mul = shl nsw i32 %call39, 1, !dbg !4408
  %add = or i32 %mul, 1, !dbg !4408
  call void @llvm.dbg.value(metadata i32 %add, metadata !4355, metadata !DIExpression()), !dbg !4409
  %conv = sext i32 %add to i64, !dbg !4408
  %13 = alloca i8, i64 %conv, align 16, !dbg !4408
  call void @llvm.dbg.value(metadata i8* %13, metadata !4364, metadata !DIExpression()), !dbg !4409
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %13, i64 %conv, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4408
  call void @sel_prepare_string_for_dot_label(i8* nonnull %13) #6, !dbg !4408
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4408
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %13) #6, !dbg !4408
  br label %if.end47, !dbg !4408

if.else:                                          ; preds = %do.body
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4406
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4406
  br label %if.end47

if.end47:                                         ; preds = %do.body38, %if.else, %if.then34
  store i32 2, i32* %res, align 4, !dbg !4410
  br label %cleanup, !dbg !4411

if.else48:                                        ; preds = %if.then
  br i1 %cmp, label %do.body52, label %if.end73, !dbg !4412

do.body52:                                        ; preds = %if.else48
  %16 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4413
  %tobool53 = icmp eq i8 %16, 0, !dbg !4413
  br i1 %tobool53, label %if.else68, label %do.body55, !dbg !4414

do.body55:                                        ; preds = %do.body52
  %call57 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !4415
  %mul58 = shl nsw i32 %call57, 1, !dbg !4415
  %add59 = or i32 %mul58, 1, !dbg !4415
  call void @llvm.dbg.value(metadata i32 %add59, metadata !4365, metadata !DIExpression()), !dbg !4416
  %conv61 = sext i32 %add59 to i64, !dbg !4415
  %17 = alloca i8, i64 %conv61, align 16, !dbg !4415
  call void @llvm.dbg.value(metadata i8* %17, metadata !4371, metadata !DIExpression()), !dbg !4416
  %call64 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %17, i64 %conv61, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !4415
  call void @sel_prepare_string_for_dot_label(i8* nonnull %17) #6, !dbg !4415
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4415
  %call65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %17) #6, !dbg !4415
  br label %if.end73, !dbg !4415

if.else68:                                        ; preds = %do.body52
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4413
  %call69 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !4413
  br label %if.end73

if.end73:                                         ; preds = %do.body55, %if.else68, %if.else48
  store i32 0, i32* %res, align 4, !dbg !4417
  br label %cleanup, !dbg !4418

if.else74:                                        ; preds = %entry
  br i1 %tobool33, label %if.then96, label %cleanup, !dbg !4419

if.then96:                                        ; preds = %if.else74
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !4420
  store i8 0, i8* %target_available, align 8, !dbg !4421
  %.b = load i1, i1* @enable_schedule_as_rhs_p, align 1, !dbg !4422
  %20 = load i32, i32* @sched_verbose, align 4, !dbg !4423
  %cmp128 = icmp sgt i32 %20, 5, !dbg !4423
  br i1 %.b, label %if.then127, label %if.else153, !dbg !4424

if.then127:                                       ; preds = %if.then96
  br i1 %cmp128, label %do.body131, label %if.end152, !dbg !4425

do.body131:                                       ; preds = %if.then127
  %21 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4426
  %tobool132 = icmp eq i8 %21, 0, !dbg !4426
  br i1 %tobool132, label %if.else147, label %do.body134, !dbg !4427

do.body134:                                       ; preds = %do.body131
  %call136 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !4428
  %mul137 = shl nsw i32 %call136, 1, !dbg !4428
  %add138 = or i32 %mul137, 1, !dbg !4428
  call void @llvm.dbg.value(metadata i32 %add138, metadata !4382, metadata !DIExpression()), !dbg !4429
  %conv140 = sext i32 %add138 to i64, !dbg !4428
  %22 = alloca i8, i64 %conv140, align 16, !dbg !4428
  call void @llvm.dbg.value(metadata i8* %22, metadata !4389, metadata !DIExpression()), !dbg !4429
  %call143 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %22, i64 %conv140, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !4428
  call void @sel_prepare_string_for_dot_label(i8* nonnull %22) #6, !dbg !4428
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4428
  %call144 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %22) #6, !dbg !4428
  br label %if.end152, !dbg !4428

if.else147:                                       ; preds = %do.body131
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4426
  %call148 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !4426
  br label %if.end152

if.end152:                                        ; preds = %do.body134, %if.else147, %if.then127
  store i32 1, i32* %res, align 4, !dbg !4430
  br label %cleanup, !dbg !4431

if.else153:                                       ; preds = %if.then96
  br i1 %cmp128, label %do.body157, label %if.end178, !dbg !4432

do.body157:                                       ; preds = %if.else153
  %25 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4433
  %tobool158 = icmp eq i8 %25, 0, !dbg !4433
  br i1 %tobool158, label %if.else173, label %do.body160, !dbg !4434

do.body160:                                       ; preds = %do.body157
  %call162 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !4435
  %mul163 = shl nsw i32 %call162, 1, !dbg !4435
  %add164 = or i32 %mul163, 1, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %add164, metadata !4390, metadata !DIExpression()), !dbg !4436
  %conv166 = sext i32 %add164 to i64, !dbg !4435
  %26 = alloca i8, i64 %conv166, align 16, !dbg !4435
  call void @llvm.dbg.value(metadata i8* %26, metadata !4396, metadata !DIExpression()), !dbg !4436
  %call169 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %26, i64 %conv166, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !4435
  call void @sel_prepare_string_for_dot_label(i8* nonnull %26) #6, !dbg !4435
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4435
  %call170 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %26) #6, !dbg !4435
  br label %if.end178, !dbg !4435

if.else173:                                       ; preds = %do.body157
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4433
  %call174 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !4433
  br label %if.end178

if.end178:                                        ; preds = %do.body160, %if.else173, %if.else153
  store i32 2, i32* %res, align 4, !dbg !4437
  br label %cleanup, !dbg !4438

cleanup:                                          ; preds = %if.else74, %if.end178, %if.end152, %if.end73, %if.end47
  %retval.0 = phi i8 [ 1, %if.end47 ], [ 1, %if.end73 ], [ 1, %if.end152 ], [ 1, %if.end178 ], [ 0, %if.else74 ], !dbg !4397
  ret i8 %retval.0, !dbg !4439
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_transformation_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i32* %res) unnamed_addr #5 !dbg !4440 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4444, metadata !DIExpression()), !dbg !4462
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4445, metadata !DIExpression()), !dbg !4462
  call void @llvm.dbg.value(metadata i32* %res, metadata !4446, metadata !DIExpression()), !dbg !4462
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4463
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !4463
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4463
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !4463
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4463
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4463
  %2 = load i32, i32* %rt_int, align 8, !dbg !4463
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #7, !dbg !4463
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !4463
  %transformed_insns = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 7, !dbg !4463
  %3 = load %struct.htab*, %struct.htab** %transformed_insns, align 8, !dbg !4463
  %4 = bitcast %struct._expr* %expr to i8*, !dbg !4464
  %vinsn8 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !4465
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn8, align 8, !dbg !4465
  %hash_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 3, !dbg !4465
  %6 = load i32, i32* %hash_rtx, align 4, !dbg !4465
  %call9 = tail call i8* @htab_find_with_hash(%struct.htab* %3, i8* %4, i32 %6) #6, !dbg !4466
  call void @llvm.dbg.value(metadata i8* %call9, metadata !4447, metadata !DIExpression()), !dbg !4462
  %tobool10 = icmp eq i8* %call9, null, !dbg !4467
  br i1 %tobool10, label %cleanup, label %if.then, !dbg !4468

if.then:                                          ; preds = %entry
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 10, !dbg !4469
  %7 = load i32, i32* %rt_int, align 8, !dbg !4470
  %type = getelementptr inbounds i8, i8* %call9, i64 20, !dbg !4471
  %8 = bitcast i8* %type to i32*, !dbg !4471
  %9 = load i32, i32* %8, align 4, !dbg !4471
  %vinsn_old = bitcast i8* %call9 to %struct.vinsn_def**, !dbg !4472
  %10 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_old, align 8, !dbg !4472
  %vinsn_new = getelementptr inbounds i8, i8* %call9, i64 8, !dbg !4473
  %11 = bitcast i8* %vinsn_new to %struct.vinsn_def**, !dbg !4473
  %12 = load %struct.vinsn_def*, %struct.vinsn_def** %11, align 8, !dbg !4473
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 7, !dbg !4474
  %13 = load i32, i32* %spec_done_ds, align 8, !dbg !4474
  tail call void @insert_in_history_vect(%struct.VEC_expr_history_def_heap** nonnull %history_of_changes, i32 %7, i32 %9, %struct.vinsn_def* %10, %struct.vinsn_def* %12, i32 %13) #6, !dbg !4475
  %14 = load %struct.vinsn_def*, %struct.vinsn_def** %11, align 8, !dbg !4476
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %14, i64 0, i32 0, !dbg !4476
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4476
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4476
  %rt_rtx = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !4476
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4476
  %tobool19 = icmp eq %struct.rtx_def* %17, null, !dbg !4476
  br i1 %tobool19, label %if.end, label %land.lhs.true, !dbg !4476

land.lhs.true:                                    ; preds = %if.then
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4476
  %rt_rtx25 = bitcast %union.rtunion_def* %18 to %struct.rtx_def**, !dbg !4476
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !4476
  %tobool26 = icmp eq %struct.rtx_def* %19, null, !dbg !4476
  br i1 %tobool26, label %if.end, label %if.then27, !dbg !4478

if.then27:                                        ; preds = %land.lhs.true
  %call29 = tail call %struct.vinsn_def* @vinsn_copy(%struct.vinsn_def* %14, i8 zeroext 1) #6, !dbg !4479
  store %struct.vinsn_def* %call29, %struct.vinsn_def** %11, align 8, !dbg !4480
  br label %if.end, !dbg !4481

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then27
  %20 = phi %struct.vinsn_def* [ %14, %land.lhs.true ], [ %14, %if.then ], [ %call29, %if.then27 ], !dbg !4482
  tail call void @change_vinsn_in_expr(%struct._expr* %expr, %struct.vinsn_def* %20) #6, !dbg !4483
  %21 = getelementptr inbounds i8, i8* %call9, i64 24, !dbg !4484
  %bf.load = load i8, i8* %21, align 8, !dbg !4484
  %bf.clear = and i8 %bf.load, 1, !dbg !4484
  %tobool32 = icmp eq i8 %bf.clear, 0, !dbg !4486
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !4487

if.then33:                                        ; preds = %if.end
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !4488
  store i8 0, i8* %target_available, align 8, !dbg !4489
  br label %if.end34, !dbg !4488

if.end34:                                         ; preds = %if.end, %if.then33
  %22 = load i32, i32* %8, align 4, !dbg !4490
  %cmp = icmp eq i32 %22, 1, !dbg !4492
  br i1 %cmp, label %if.then36, label %if.end46, !dbg !4493

if.then36:                                        ; preds = %if.end34
  %ds = getelementptr inbounds i8, i8* %call9, i64 16, !dbg !4494
  %23 = bitcast i8* %ds to i32*, !dbg !4494
  %24 = load i32, i32* %23, align 8, !dbg !4494
  store i32 %24, i32* %spec_done_ds, align 8, !dbg !4496
  %bf.load38 = load i8, i8* %21, align 8, !dbg !4497
  %bf.lshr = lshr i8 %bf.load38, 1, !dbg !4497
  %needs_spec_check_p = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 12, !dbg !4498
  %bf.load41 = load i8, i8* %needs_spec_check_p, align 1, !dbg !4499
  %25 = and i8 %bf.lshr, 1, !dbg !4499
  %bf.set = or i8 %25, %bf.load41, !dbg !4499
  store i8 %bf.set, i8* %needs_spec_check_p, align 1, !dbg !4499
  br label %if.end46, !dbg !4500

if.end46:                                         ; preds = %if.then36, %if.end34
  %26 = load i32, i32* @sched_verbose, align 4, !dbg !4501
  %cmp47 = icmp sgt i32 %26, 5, !dbg !4502
  br i1 %cmp47, label %do.body, label %if.end82, !dbg !4503

do.body:                                          ; preds = %if.end46
  %27 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4504
  %tobool49 = icmp eq i8 %27, 0, !dbg !4504
  br i1 %tobool49, label %if.else, label %do.body51, !dbg !4505

do.body51:                                        ; preds = %do.body
  %call52 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4506
  %mul = shl nsw i32 %call52, 1, !dbg !4506
  %add = or i32 %mul, 1, !dbg !4506
  call void @llvm.dbg.value(metadata i32 %add, metadata !4448, metadata !DIExpression()), !dbg !4507
  %conv = sext i32 %add to i64, !dbg !4506
  %28 = alloca i8, i64 %conv, align 16, !dbg !4506
  call void @llvm.dbg.value(metadata i8* %28, metadata !4456, metadata !DIExpression()), !dbg !4507
  %call55 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %28, i64 %conv, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4506
  call void @sel_prepare_string_for_dot_label(i8* nonnull %28) #6, !dbg !4506
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4506
  %call56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %28) #6, !dbg !4506
  br label %do.end60, !dbg !4506

if.else:                                          ; preds = %do.body
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4504
  %call57 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4504
  br label %do.end60

do.end60:                                         ; preds = %if.else, %do.body51
  call void @dump_expr(%struct._expr* %expr) #6, !dbg !4508
  %31 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4509
  %tobool62 = icmp eq i8 %31, 0, !dbg !4509
  br i1 %tobool62, label %if.else77, label %do.body64, !dbg !4510

do.body64:                                        ; preds = %do.end60
  %call66 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4511
  %mul67 = shl nsw i32 %call66, 1, !dbg !4511
  %add68 = or i32 %mul67, 1, !dbg !4511
  call void @llvm.dbg.value(metadata i32 %add68, metadata !4457, metadata !DIExpression()), !dbg !4512
  %conv70 = sext i32 %add68 to i64, !dbg !4511
  %32 = alloca i8, i64 %conv70, align 16, !dbg !4511
  call void @llvm.dbg.value(metadata i8* %32, metadata !4461, metadata !DIExpression()), !dbg !4512
  %call73 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %32, i64 %conv70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4511
  call void @sel_prepare_string_for_dot_label(i8* nonnull %32) #6, !dbg !4511
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4511
  %call74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %32) #6, !dbg !4511
  br label %if.end82, !dbg !4511

if.else77:                                        ; preds = %do.end60
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4509
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4509
  br label %if.end82

if.end82:                                         ; preds = %do.body64, %if.else77, %if.end46
  store i32 3, i32* %res, align 4, !dbg !4513
  br label %cleanup, !dbg !4514

cleanup:                                          ; preds = %entry, %if.end82
  %retval.0 = phi i8 [ 1, %if.end82 ], [ 0, %entry ], !dbg !4462
  ret i8 %retval.0, !dbg !4515
}

declare dso_local void @vinsn_attach(%struct.vinsn_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @moveup_expr(%struct._expr* %expr, %struct.rtx_def* %through_insn, i8 zeroext %inside_insn_group, i32* %ptrans_type) unnamed_addr #5 !dbg !4516 {
entry:
  %has_dep_p = alloca i32*, align 8
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4521, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata %struct.rtx_def* %through_insn, metadata !4522, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i8 0, metadata !4523, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i32* %ptrans_type, metadata !4524, metadata !DIExpression()), !dbg !4546
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !4547
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4547
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %0, metadata !4525, metadata !DIExpression()), !dbg !4546
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !4548
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4548
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4526, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i8 0, metadata !4527, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i8 0, metadata !4528, metadata !DIExpression()), !dbg !4546
  %2 = bitcast i32** %has_dep_p to i8*, !dbg !4549
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4549
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 1, i32 0, !dbg !4550
  %3 = load i32, i32* %type, align 8, !dbg !4550
  %cmp = icmp eq i32 %3, 23, !dbg !4550
  br i1 %cmp, label %if.else, label %lor.lhs.false, !dbg !4550

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %3, 24, !dbg !4550
  br i1 %cmp3, label %if.else, label %if.then4, !dbg !4551

if.then4:                                         ; preds = %lor.lhs.false
  %call5 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %1) #6, !dbg !4552
  %tobool6 = icmp eq i8 %call5, 0, !dbg !4552
  br i1 %tobool6, label %if.end37, label %if.then7, !dbg !4553

if.then7:                                         ; preds = %if.then4
  %call8 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %through_insn) #6, !dbg !4554
  %tobool9 = icmp eq i8 %call8, 0, !dbg !4554
  br i1 %tobool9, label %lor.lhs.false10, label %cleanup, !dbg !4556

lor.lhs.false10:                                  ; preds = %if.then7
  %call11 = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %1) #6, !dbg !4557
  %tobool13 = icmp eq i8 %call11, 0, !dbg !4557
  br i1 %tobool13, label %if.end15, label %cleanup, !dbg !4558

if.end15:                                         ; preds = %lor.lhs.false10
  %call16 = tail call zeroext i8 @bookkeeping_can_be_created_if_moved_through_p(%struct.rtx_def* %through_insn) #6, !dbg !4559
  %tobool17 = icmp eq i8 %call16, 0, !dbg !4559
  br i1 %tobool17, label %if.end19, label %cleanup, !dbg !4561

if.end19:                                         ; preds = %if.end15
  %call20 = tail call %struct.basic_block_def* @fallthru_bb_of_jump(%struct.rtx_def* %1) #6, !dbg !4562
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call20, metadata !4532, metadata !DIExpression()), !dbg !4564
  %cmp21 = icmp eq %struct.basic_block_def* %call20, null, !dbg !4565
  br i1 %cmp21, label %cleanup, label %lor.lhs.false23, !dbg !4566

lor.lhs.false23:                                  ; preds = %if.end19
  %call24 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* nonnull %call20) #6, !dbg !4567
  %tobool25 = icmp eq i8 %call24, 0, !dbg !4567
  br i1 %tobool25, label %cleanup, label %if.end27, !dbg !4568

if.end27:                                         ; preds = %lor.lhs.false23
  %call28 = tail call i32 @any_uncondjump_p(%struct.rtx_def* %1) #6, !dbg !4569
  %tobool29 = icmp eq i32 %call28, 0, !dbg !4569
  br i1 %tobool29, label %land.lhs.true, label %if.end36, !dbg !4571

land.lhs.true:                                    ; preds = %if.end27
  %call30 = tail call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %1, %struct.rtx_def* %through_insn) #6, !dbg !4572
  %tobool31 = icmp eq i8 %call30, 0, !dbg !4572
  br i1 %tobool31, label %land.lhs.true32, label %if.end36, !dbg !4573

land.lhs.true32:                                  ; preds = %land.lhs.true
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %through_insn, i64 0, i32 0, !dbg !4574
  %bf.load = load i32, i32* %4, align 8, !dbg !4574
  %bf.clear = and i32 %bf.load, 65535, !dbg !4574
  %cmp33 = icmp eq i32 %bf.clear, 7, !dbg !4574
  br i1 %cmp33, label %if.end36, label %cleanup, !dbg !4575

if.end36:                                         ; preds = %land.lhs.true, %if.end27, %land.lhs.true32
  br label %cleanup, !dbg !4576

cleanup:                                          ; preds = %lor.lhs.false23, %if.end15, %lor.lhs.false10, %if.then7, %land.lhs.true32, %if.end19, %if.end36
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end36 ], [ false, %lor.lhs.false10 ], [ false, %if.then7 ], [ false, %if.end15 ], [ false, %lor.lhs.false23 ], [ false, %if.end19 ], [ false, %land.lhs.true32 ]
  br i1 %cleanup.dest.slot.0, label %if.end37, label %cleanup235

if.end37:                                         ; preds = %if.then4, %cleanup
  %cant_move = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 12, !dbg !4577
  %bf.load38 = load i8, i8* %cant_move, align 1, !dbg !4577
  %bf.clear39 = and i8 %bf.load38, 8, !dbg !4577
  %tobool40 = icmp eq i8 %bf.clear39, 0, !dbg !4577
  br i1 %tobool40, label %if.end49, label %land.lhs.true41, !dbg !4579

land.lhs.true41:                                  ; preds = %if.end37
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %through_insn, i64 0, i32 1, i32 0, i32 1, !dbg !4580
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !4580
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4580
  %arrayidx44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 1, !dbg !4581
  %rt_bb45 = bitcast %struct.object_block** %arrayidx44 to %struct.basic_block_def**, !dbg !4581
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb45, align 8, !dbg !4581
  %cmp46 = icmp eq %struct.basic_block_def* %5, %6, !dbg !4582
  br i1 %cmp46, label %if.end49, label %cleanup235, !dbg !4583

if.end49:                                         ; preds = %land.lhs.true41, %if.end37
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4584
  %bf.load50 = load i32, i32* %7, align 8, !dbg !4584
  %bf.clear52 = and i32 %bf.load50, 268435456, !dbg !4584
  %tobool53 = icmp eq i32 %bf.clear52, 0, !dbg !4584
  br i1 %tobool53, label %if.end58, label %cleanup235, !dbg !4586

if.else:                                          ; preds = %lor.lhs.false, %entry
  %call56 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %1) #6, !dbg !4587
  %tobool57 = icmp eq i8 %call56, 0, !dbg !4587
  br i1 %tobool57, label %if.end58, label %cond.true, !dbg !4587

cond.true:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2192, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4587
  br label %if.end58, !dbg !4587

if.end58:                                         ; preds = %if.else, %if.end49, %cond.true
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4588
  %bf.load59 = load i32, i32* %8, align 8, !dbg !4588
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !4588
  %cmp61 = icmp eq i32 %bf.clear60, 7, !dbg !4588
  br i1 %cmp61, label %land.lhs.true63, label %if.end79, !dbg !4590

land.lhs.true63:                                  ; preds = %if.end58
  %arrayidx66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %through_insn, i64 0, i32 1, i32 0, i32 1, !dbg !4591
  %rt_bb67 = bitcast %struct.object_block** %arrayidx66 to %struct.basic_block_def**, !dbg !4591
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb67, align 8, !dbg !4591
  %arrayidx70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 1, !dbg !4592
  %rt_bb71 = bitcast %struct.object_block** %arrayidx70 to %struct.basic_block_def**, !dbg !4592
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb71, align 8, !dbg !4592
  %cmp72 = icmp eq %struct.basic_block_def* %9, %10, !dbg !4593
  br i1 %cmp72, label %if.end79, label %land.lhs.true74, !dbg !4594

land.lhs.true74:                                  ; preds = %land.lhs.true63
  %call75 = tail call fastcc zeroext i8 @moving_insn_creates_bookkeeping_block_p(%struct.rtx_def* %1, %struct.rtx_def* %through_insn) #7, !dbg !4595
  %tobool77 = icmp eq i8 %call75, 0, !dbg !4595
  br i1 %tobool77, label %if.end79, label %cleanup235, !dbg !4596

if.end79:                                         ; preds = %land.lhs.true74, %land.lhs.true63, %if.end58
  store i1 false, i1* @was_target_conflict, align 1, !dbg !4597
  call void @llvm.dbg.value(metadata i32** %has_dep_p, metadata !4529, metadata !DIExpression(DW_OP_deref)), !dbg !4546
  %call80 = call i32 @has_dependence_p(%struct._expr* %expr, %struct.rtx_def* %through_insn, i32** nonnull %has_dep_p) #6, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %call80, metadata !4531, metadata !DIExpression()), !dbg !4546
  %cmp81 = icmp eq i32 %call80, 0, !dbg !4599
  br i1 %cmp81, label %if.then83, label %if.else95, !dbg !4601

if.then83:                                        ; preds = %if.end79
  %11 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4602
  %may_trap_p = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %11, i64 0, i32 6, !dbg !4602
  %12 = load i8, i8* %may_trap_p, align 8, !dbg !4602
  %tobool86 = icmp eq i8 %12, 0, !dbg !4602
  br i1 %tobool86, label %cleanup235, label %land.lhs.true87, !dbg !4602

land.lhs.true87:                                  ; preds = %if.then83
  %call88 = call zeroext i8 @sel_insn_has_single_succ_p(%struct.rtx_def* %through_insn, i32 7) #6, !dbg !4602
  %tobool89 = icmp eq i8 %call88, 0, !dbg !4602
  br i1 %tobool89, label %land.lhs.true90, label %cleanup235, !dbg !4602

land.lhs.true90:                                  ; preds = %land.lhs.true87
  %call91 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %through_insn) #6, !dbg !4602
  %tobool92 = icmp eq i8 %call91, 0, !dbg !4602
  br i1 %tobool92, label %if.end107, label %cleanup235, !dbg !4605

if.else95:                                        ; preds = %if.end79
  %13 = load i32, i32* %type, align 8, !dbg !4606
  %cmp98 = icmp eq i32 %13, 23, !dbg !4606
  br i1 %cmp98, label %if.end107, label %lor.lhs.false100, !dbg !4606

lor.lhs.false100:                                 ; preds = %if.else95
  %cmp103 = icmp eq i32 %13, 24, !dbg !4606
  br i1 %cmp103, label %if.end107, label %cleanup235, !dbg !4609

if.end107:                                        ; preds = %land.lhs.true90, %if.else95, %lor.lhs.false100
  br i1 %cmp81, label %if.end130, label %land.lhs.true110, !dbg !4610

land.lhs.true110:                                 ; preds = %if.end107
  %call111 = call fastcc zeroext i8 @can_speculate_dep_p(i32 %call80) #7, !dbg !4611
  %tobool113 = icmp eq i8 %call111, 0, !dbg !4611
  br i1 %tobool113, label %if.end130, label %if.then114, !dbg !4612

if.then114:                                       ; preds = %land.lhs.true110
  %call115 = call i32 @speculate_expr(%struct._expr* %expr, i32 %call80) #6, !dbg !4613
  call void @llvm.dbg.value(metadata i32 %call115, metadata !4537, metadata !DIExpression()), !dbg !4614
  %cmp116 = icmp sgt i32 %call115, -1, !dbg !4615
  br i1 %cmp116, label %if.then118, label %if.end130, !dbg !4617

if.then118:                                       ; preds = %if.then114
  call void @llvm.dbg.value(metadata i32 0, metadata !4531, metadata !DIExpression()), !dbg !4546
  %cmp119 = icmp ne i32 %call115, 0, !dbg !4618
  %conv121 = zext i1 %cmp119 to i8, !dbg !4620
  call void @llvm.dbg.value(metadata i8 %conv121, metadata !4527, metadata !DIExpression()), !dbg !4546
  %cmp122 = icmp eq i32 %call115, 2, !dbg !4621
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !4623

if.then124:                                       ; preds = %if.then118
  store i1 true, i1* @was_target_conflict, align 1, !dbg !4624
  br label %if.end125, !dbg !4625

if.end125:                                        ; preds = %if.then124, %if.then118
  %tobool126 = icmp eq i32* %ptrans_type, null, !dbg !4626
  br i1 %tobool126, label %if.end128, label %if.then127, !dbg !4628

if.then127:                                       ; preds = %if.end125
  store i32 1, i32* %ptrans_type, align 4, !dbg !4629
  br label %if.end128, !dbg !4630

if.end128:                                        ; preds = %if.end125, %if.then127
  call void @sel_clear_has_dependence() #6, !dbg !4631
  br label %if.end130, !dbg !4632

if.end130:                                        ; preds = %land.lhs.true110, %if.end107, %if.then114, %if.end128
  %was_changed.1 = phi i8 [ 0, %land.lhs.true110 ], [ 0, %if.end107 ], [ %conv121, %if.end128 ], [ 0, %if.then114 ], !dbg !4546
  call void @llvm.dbg.value(metadata i8 %was_changed.1, metadata !4527, metadata !DIExpression()), !dbg !4546
  %14 = load i32*, i32** %has_dep_p, align 8, !dbg !4633
  call void @llvm.dbg.value(metadata i32* %14, metadata !4529, metadata !DIExpression()), !dbg !4546
  %15 = load i32, i32* %14, align 4, !dbg !4633
  %tobool132 = icmp eq i32 %15, 0, !dbg !4633
  br i1 %tobool132, label %if.end134, label %cleanup235, !dbg !4635

if.end134:                                        ; preds = %if.end130
  call void @llvm.dbg.value(metadata i32* %14, metadata !4529, metadata !DIExpression()), !dbg !4546
  %arrayidx135 = getelementptr inbounds i32, i32* %14, i64 1, !dbg !4636
  %16 = load i32, i32* %arrayidx135, align 4, !dbg !4636
  %tobool136 = icmp eq i32 %16, 0, !dbg !4636
  br i1 %tobool136, label %if.end147, label %if.then137, !dbg !4638

if.then137:                                       ; preds = %if.end134
  %.b = load i1, i1* @enable_schedule_as_rhs_p, align 1, !dbg !4639
  br i1 %.b, label %lor.lhs.false139, label %cleanup235, !dbg !4642

lor.lhs.false139:                                 ; preds = %if.then137
  %17 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4643
  %type142 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %17, i64 0, i32 1, i32 0, !dbg !4643
  %18 = load i32, i32* %type142, align 8, !dbg !4643
  %cmp143 = icmp eq i32 %18, 23, !dbg !4643
  br i1 %cmp143, label %if.end146, label %cleanup235, !dbg !4644

if.end146:                                        ; preds = %lor.lhs.false139
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !4645
  store i8 0, i8* %target_available, align 8, !dbg !4646
  store i1 true, i1* @was_target_conflict, align 1, !dbg !4647
  call void @llvm.dbg.value(metadata i8 1, metadata !4528, metadata !DIExpression()), !dbg !4546
  br label %if.end147, !dbg !4648

if.end147:                                        ; preds = %if.end134, %if.end146
  %as_rhs.0 = phi i32 [ 1, %if.end146 ], [ 0, %if.end134 ]
  call void @llvm.dbg.value(metadata i32* %14, metadata !4529, metadata !DIExpression()), !dbg !4546
  %arrayidx148 = getelementptr inbounds i32, i32* %14, i64 2, !dbg !4649
  %19 = load i32, i32* %arrayidx148, align 4, !dbg !4649
  %tobool149 = icmp eq i32 %19, 0, !dbg !4649
  br i1 %tobool149, label %if.end213, label %if.then150, !dbg !4650

if.then150:                                       ; preds = %if.end147
  call void @llvm.dbg.value(metadata i32* %14, metadata !4529, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i32* %arrayidx148, metadata !4540, metadata !DIExpression()), !dbg !4651
  %20 = load i32, i32* %type, align 8, !dbg !4652
  %cmp154 = icmp eq i32 %20, 23, !dbg !4652
  br i1 %cmp154, label %cond.end163, label %lor.lhs.false156, !dbg !4652

lor.lhs.false156:                                 ; preds = %if.then150
  %cmp159 = icmp eq i32 %20, 24, !dbg !4652
  br i1 %cmp159, label %cond.end163, label %cond.true161, !dbg !4652

cond.true161:                                     ; preds = %lor.lhs.false156
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2271, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4652
  %.pre = load i32, i32* %arrayidx148, align 4, !dbg !4653
  br label %cond.end163, !dbg !4652

cond.end163:                                      ; preds = %if.then150, %lor.lhs.false156, %cond.true161
  %21 = phi i32 [ %19, %if.then150 ], [ %19, %lor.lhs.false156 ], [ %.pre, %cond.true161 ], !dbg !4653
  %call165 = call fastcc zeroext i8 @can_speculate_dep_p(i32 %21) #7, !dbg !4654
  %tobool166 = icmp eq i8 %call165, 0, !dbg !4654
  %22 = load i32, i32* %arrayidx148, align 4, !dbg !4655
  br i1 %tobool166, label %if.else188, label %if.then167, !dbg !4656

if.then167:                                       ; preds = %cond.end163
  %call169 = call i32 @speculate_expr(%struct._expr* %expr, i32 %22) #6, !dbg !4657
  call void @llvm.dbg.value(metadata i32 %call169, metadata !4543, metadata !DIExpression()), !dbg !4658
  %cmp170 = icmp sgt i32 %call169, -1, !dbg !4659
  br i1 %cmp170, label %if.then172, label %cleanup185, !dbg !4661

if.then172:                                       ; preds = %if.then167
  store i32 0, i32* %arrayidx148, align 4, !dbg !4662
  %cmp173 = icmp ne i32 %call169, 0, !dbg !4664
  %conv175 = zext i1 %cmp173 to i8, !dbg !4665
  call void @llvm.dbg.value(metadata i8 %conv175, metadata !4527, metadata !DIExpression()), !dbg !4546
  %cmp176 = icmp eq i32 %call169, 2, !dbg !4666
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !4668

if.then178:                                       ; preds = %if.then172
  store i1 true, i1* @was_target_conflict, align 1, !dbg !4669
  br label %if.end179, !dbg !4670

if.end179:                                        ; preds = %if.then178, %if.then172
  %tobool180 = icmp eq i32* %ptrans_type, null, !dbg !4671
  br i1 %tobool180, label %cleanup185, label %if.then181, !dbg !4673

if.then181:                                       ; preds = %if.end179
  store i32 1, i32* %ptrans_type, align 4, !dbg !4674
  br label %cleanup185, !dbg !4675

cleanup185:                                       ; preds = %if.end179, %if.then181, %if.then167
  %was_changed.2 = phi i8 [ %was_changed.1, %if.then167 ], [ %conv175, %if.end179 ], [ %conv175, %if.then181 ], !dbg !4546
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then167 ], [ 0, %if.end179 ], [ 0, %if.then181 ]
  call void @llvm.dbg.value(metadata i8 %was_changed.2, metadata !4527, metadata !DIExpression()), !dbg !4546
  %cond2 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond2, label %if.end209, label %cleanup210

if.else188:                                       ; preds = %cond.end163
  %call189 = call fastcc zeroext i8 @can_substitute_through_p(%struct.rtx_def* %through_insn, i32 %22) #7, !dbg !4676
  %tobool191 = icmp eq i8 %call189, 0, !dbg !4676
  br i1 %tobool191, label %cleanup210, label %land.lhs.true192, !dbg !4678

land.lhs.true192:                                 ; preds = %if.else188
  %call193 = call fastcc zeroext i8 @substitute_reg_in_expr(%struct._expr* %expr, %struct.rtx_def* %through_insn, i8 zeroext 0) #7, !dbg !4679
  %tobool195 = icmp eq i8 %call193, 0, !dbg !4679
  br i1 %tobool195, label %cleanup210, label %if.then196, !dbg !4680

if.then196:                                       ; preds = %land.lhs.true192
  %tobool197 = icmp eq i8 %was_changed.1, 0, !dbg !4681
  br i1 %tobool197, label %cond.end200, label %cond.true198, !dbg !4681

cond.true198:                                     ; preds = %if.then196
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2297, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4681
  br label %cond.end200, !dbg !4681

cond.end200:                                      ; preds = %if.then196, %cond.true198
  call void @llvm.dbg.value(metadata i8 1, metadata !4527, metadata !DIExpression()), !dbg !4546
  %tobool202 = icmp eq i32* %ptrans_type, null, !dbg !4683
  br i1 %tobool202, label %if.end204, label %if.then203, !dbg !4685

if.then203:                                       ; preds = %cond.end200
  store i32 0, i32* %ptrans_type, align 4, !dbg !4686
  br label %if.end204, !dbg !4687

if.end204:                                        ; preds = %cond.end200, %if.then203
  %was_substituted = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 12, !dbg !4688
  %bf.load205 = load i8, i8* %was_substituted, align 1, !dbg !4689
  %bf.set = or i8 %bf.load205, 2, !dbg !4689
  store i8 %bf.set, i8* %was_substituted, align 1, !dbg !4689
  br label %if.end209

if.end209:                                        ; preds = %cleanup185, %if.end204
  %was_changed.3 = phi i8 [ 1, %if.end204 ], [ %was_changed.2, %cleanup185 ], !dbg !4655
  call void @llvm.dbg.value(metadata i8 %was_changed.3, metadata !4527, metadata !DIExpression()), !dbg !4546
  br label %cleanup210, !dbg !4690

cleanup210:                                       ; preds = %land.lhs.true192, %if.else188, %cleanup185, %if.end209
  %was_changed.4 = phi i8 [ %was_changed.2, %cleanup185 ], [ %was_changed.3, %if.end209 ], [ %was_changed.1, %land.lhs.true192 ], [ %was_changed.1, %if.else188 ], !dbg !4546
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup185 ], [ 0, %if.end209 ], [ 1, %land.lhs.true192 ], [ 1, %if.else188 ]
  call void @llvm.dbg.value(metadata i8 %was_changed.4, metadata !4527, metadata !DIExpression()), !dbg !4546
  %cond1 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond1, label %if.end213, label %cleanup235

if.end213:                                        ; preds = %if.end147, %cleanup210
  %was_changed.5 = phi i8 [ %was_changed.1, %if.end147 ], [ %was_changed.4, %cleanup210 ], !dbg !4546
  call void @llvm.dbg.value(metadata i8 %was_changed.5, metadata !4527, metadata !DIExpression()), !dbg !4546
  %23 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4691
  %may_trap_p215 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %23, i64 0, i32 6, !dbg !4691
  %24 = load i8, i8* %may_trap_p215, align 8, !dbg !4691
  %tobool217 = icmp eq i8 %24, 0, !dbg !4691
  br i1 %tobool217, label %if.end225, label %land.lhs.true218, !dbg !4691

land.lhs.true218:                                 ; preds = %if.end213
  %call219 = call zeroext i8 @sel_insn_has_single_succ_p(%struct.rtx_def* %through_insn, i32 7) #6, !dbg !4691
  %tobool220 = icmp eq i8 %call219, 0, !dbg !4691
  br i1 %tobool220, label %land.lhs.true221, label %if.end225, !dbg !4691

land.lhs.true221:                                 ; preds = %land.lhs.true218
  %call222 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %through_insn) #6, !dbg !4691
  %tobool223 = icmp eq i8 %call222, 0, !dbg !4691
  br i1 %tobool223, label %cleanup235, label %if.end225, !dbg !4693

if.end225:                                        ; preds = %land.lhs.true221, %land.lhs.true218, %if.end213
  %tobool227 = icmp eq i8 %was_changed.5, 0, !dbg !4694
  br i1 %tobool227, label %cond.false229, label %cleanup235, !dbg !4694

cond.false229:                                    ; preds = %if.end225
  br label %cleanup235, !dbg !4694

cleanup235:                                       ; preds = %if.then137, %land.lhs.true41, %land.lhs.true74, %land.lhs.true90, %land.lhs.true87, %if.then83, %land.lhs.true221, %if.end225, %if.end130, %if.end49, %cond.false229, %lor.lhs.false139, %lor.lhs.false100, %cleanup, %cleanup210
  %retval.6 = phi i32 [ 2, %cleanup210 ], [ 2, %cleanup ], [ 2, %land.lhs.true41 ], [ 2, %if.end49 ], [ 2, %land.lhs.true74 ], [ 0, %land.lhs.true90 ], [ 0, %land.lhs.true87 ], [ 0, %if.then83 ], [ 2, %lor.lhs.false100 ], [ 2, %if.end130 ], [ 2, %lor.lhs.false139 ], [ 2, %if.then137 ], [ 2, %land.lhs.true221 ], [ %as_rhs.0, %cond.false229 ], [ 3, %if.end225 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4695
  ret i32 %retval.6, !dbg !4695
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_bitmap_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext %inside_insn_group, i32 %res) unnamed_addr #5 !dbg !4696 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4700, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4701, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8 0, metadata !4702, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i32 %res, metadata !4703, metadata !DIExpression()), !dbg !4705
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !4706
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4706
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !4706
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4706
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4706
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4706
  %2 = load i32, i32* %rt_int, align 8, !dbg !4706
  call void @llvm.dbg.value(metadata i32 %2, metadata !4704, metadata !DIExpression()), !dbg !4705
  br i1 true, label %if.end, label %entry.cleanup.cont_crit_edge, !dbg !4707

entry.cleanup.cont_crit_edge:                     ; preds = %entry
  br label %cleanup.cont, !dbg !4707

if.end:                                           ; preds = %entry
  switch i32 %res, label %if.else119 [
    i32 2, label %if.then1
    i32 0, label %if.then35
    i32 1, label %if.then78
  ], !dbg !4708

if.then1:                                         ; preds = %if.end
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4709
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i64 0, i32 0, !dbg !4709
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4709
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !4709
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4709
  %rt_int12 = bitcast %union.rtunion_def* %arrayidx11 to i32*, !dbg !4709
  %5 = load i32, i32* %rt_int12, align 8, !dbg !4709
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base5, i32 %5) #7, !dbg !4709
  %call13 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !4709
  %analyzed_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call13, i64 0, i32 4, !dbg !4709
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps, align 8, !dbg !4709
  %call14 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 %2) #6, !dbg !4712
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4713
  %base17 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %7, i64 0, i32 0, !dbg !4713
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4713
  %base23 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !4713
  %9 = load i32, i32* %rt_int12, align 8, !dbg !4713
  %call31 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base23, i32 %9) #7, !dbg !4713
  %call32 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base17, i32 %call31) #7, !dbg !4713
  %found_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call32, i64 0, i32 5, !dbg !4713
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps, align 8, !dbg !4713
  %call33 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %10, i32 %2) #6, !dbg !4714
  br label %cleanup.cont, !dbg !4715

if.then35:                                        ; preds = %if.end
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4716
  %base38 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i64 0, i32 0, !dbg !4716
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4716
  %base44 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !4716
  %arrayidx50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4716
  %rt_int51 = bitcast %union.rtunion_def* %arrayidx50 to i32*, !dbg !4716
  %13 = load i32, i32* %rt_int51, align 8, !dbg !4716
  %call52 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base44, i32 %13) #7, !dbg !4716
  %call53 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base38, i32 %call52) #7, !dbg !4716
  %analyzed_deps54 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call53, i64 0, i32 4, !dbg !4716
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps54, align 8, !dbg !4716
  %call55 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %14, i32 %2) #6, !dbg !4719
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4720
  %base58 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i64 0, i32 0, !dbg !4720
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4720
  %base64 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !4720
  %17 = load i32, i32* %rt_int51, align 8, !dbg !4720
  %call72 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base64, i32 %17) #7, !dbg !4720
  %call73 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base58, i32 %call72) #7, !dbg !4720
  %found_deps74 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call73, i64 0, i32 5, !dbg !4720
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps74, align 8, !dbg !4720
  %call75 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %18, i32 %2) #6, !dbg !4721
  br label %cleanup.cont, !dbg !4722

if.then78:                                        ; preds = %if.end
  %19 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4723
  %base81 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %19, i64 0, i32 0, !dbg !4723
  %20 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4723
  %base87 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %20, i64 0, i32 0, !dbg !4723
  %arrayidx93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4723
  %rt_int94 = bitcast %union.rtunion_def* %arrayidx93 to i32*, !dbg !4723
  %21 = load i32, i32* %rt_int94, align 8, !dbg !4723
  %call95 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base87, i32 %21) #7, !dbg !4723
  %call96 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base81, i32 %call95) #7, !dbg !4723
  %analyzed_deps97 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call96, i64 0, i32 4, !dbg !4723
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps97, align 8, !dbg !4723
  %call98 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %22, i32 %2) #6, !dbg !4726
  %23 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4727
  %base101 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %23, i64 0, i32 0, !dbg !4727
  %24 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4727
  %base107 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %24, i64 0, i32 0, !dbg !4727
  %25 = load i32, i32* %rt_int94, align 8, !dbg !4727
  %call115 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base107, i32 %25) #7, !dbg !4727
  %call116 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base101, i32 %call115) #7, !dbg !4727
  %found_deps117 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call116, i64 0, i32 5, !dbg !4727
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps117, align 8, !dbg !4727
  %call118 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %26, i32 %2) #6, !dbg !4728
  br label %cleanup.cont, !dbg !4729

if.else119:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2459, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4730
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %entry.cleanup.cont_crit_edge, %if.then35, %if.else119, %if.then78, %if.then1
  ret void, !dbg !4731
}

declare dso_local void @insert_in_history_vect(%struct.VEC_expr_history_def_heap**, i32, i32, %struct.vinsn_def*, %struct.vinsn_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @update_transformation_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext %inside_insn_group, i32 %trans_type, %struct.vinsn_def* %expr_old_vinsn) unnamed_addr #5 !dbg !4732 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4736, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4737, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i8 0, metadata !4738, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %trans_type, metadata !4739, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %expr_old_vinsn, metadata !4740, metadata !DIExpression()), !dbg !4742
  br i1 true, label %if.end, label %entry.cleanup.cont_crit_edge, !dbg !4743

entry.cleanup.cont_crit_edge:                     ; preds = %entry
  br label %cleanup.cont, !dbg !4743

if.end:                                           ; preds = %entry
  %call = tail call i8* @xmalloc(i64 32) #6, !dbg !4744
  call void @llvm.dbg.value(metadata i8* %call, metadata !4741, metadata !DIExpression()), !dbg !4742
  %vinsn_old = bitcast i8* %call to %struct.vinsn_def**, !dbg !4745
  store %struct.vinsn_def* %expr_old_vinsn, %struct.vinsn_def** %vinsn_old, align 8, !dbg !4746
  %0 = bitcast %struct._expr* %expr to i64*, !dbg !4747
  %1 = load i64, i64* %0, align 8, !dbg !4747
  %vinsn_new = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4748
  %2 = bitcast i8* %vinsn_new to i64*, !dbg !4749
  store i64 %1, i64* %2, align 8, !dbg !4749
  %type = getelementptr inbounds i8, i8* %call, i64 20, !dbg !4750
  %3 = bitcast i8* %type to i32*, !dbg !4750
  store i32 %trans_type, i32* %3, align 4, !dbg !4751
  %.b = load i1, i1* @was_target_conflict, align 1, !dbg !4752
  %4 = zext i1 %.b to i8, !dbg !4752
  %5 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !4753
  %bf.load = load i8, i8* %5, align 8, !dbg !4754
  %bf.clear = and i8 %bf.load, -2, !dbg !4754
  %bf.set = or i8 %bf.clear, %4, !dbg !4754
  store i8 %bf.set, i8* %5, align 8, !dbg !4754
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 7, !dbg !4755
  %6 = load i32, i32* %spec_done_ds, align 8, !dbg !4755
  %ds = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4756
  %7 = bitcast i8* %ds to i32*, !dbg !4756
  store i32 %6, i32* %7, align 8, !dbg !4757
  %needs_spec_check_p = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 12, !dbg !4758
  %bf.load1 = load i8, i8* %needs_spec_check_p, align 1, !dbg !4758
  %bf.clear2 = shl i8 %bf.load1, 1, !dbg !4759
  %bf.shl = and i8 %bf.clear2, 2, !dbg !4759
  %bf.clear5 = and i8 %bf.set, -3, !dbg !4759
  %bf.set6 = or i8 %bf.clear5, %bf.shl, !dbg !4759
  store i8 %bf.set6, i8* %5, align 8, !dbg !4759
  tail call void @vinsn_attach(%struct.vinsn_def* %expr_old_vinsn) #6, !dbg !4760
  %8 = bitcast i8* %vinsn_new to %struct.vinsn_def**, !dbg !4761
  %9 = load %struct.vinsn_def*, %struct.vinsn_def** %8, align 8, !dbg !4761
  tail call void @vinsn_attach(%struct.vinsn_def* %9) #6, !dbg !4762
  %10 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4763
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %10, i64 0, i32 0, !dbg !4763
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4763
  %base13 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %11, i64 0, i32 0, !dbg !4763
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4763
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4763
  %12 = load i32, i32* %rt_int, align 8, !dbg !4763
  %call17 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base13, i32 %12) #7, !dbg !4763
  %call18 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call17) #7, !dbg !4763
  %transformed_insns = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call18, i64 0, i32 7, !dbg !4763
  %13 = load %struct.htab*, %struct.htab** %transformed_insns, align 8, !dbg !4763
  %hash_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %expr_old_vinsn, i64 0, i32 3, !dbg !4764
  %14 = load i32, i32* %hash_rtx, align 4, !dbg !4764
  %call19 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %13, i8* %call, i32 %14, i32 1) #6, !dbg !4765
  store i8* %call, i8** %call19, align 8, !dbg !4766
  br label %cleanup.cont, !dbg !4767

cleanup.cont:                                     ; preds = %entry.cleanup.cont_crit_edge, %if.end
  ret void, !dbg !4767
}

declare dso_local void @vinsn_detach(%struct.vinsn_def*) local_unnamed_addr #2

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #2

declare dso_local %struct.vinsn_def* @vinsn_copy(%struct.vinsn_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @moveup_expr_inside_insn_group(%struct._expr* %expr, %struct.rtx_def* %through_insn) unnamed_addr #5 !dbg !4768 {
entry:
  unreachable
}

declare dso_local zeroext i8 @control_flow_insn_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @bookkeeping_can_be_created_if_moved_through_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @fallthru_bb_of_jump(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @any_uncondjump_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @moving_insn_creates_bookkeeping_block_p(%struct.rtx_def* %insn, %struct.rtx_def* %through_insn) unnamed_addr #5 !dbg !4777 {
entry:
  %e1 = alloca %struct.edge_def*, align 8
  %e2 = alloca %struct.edge_def*, align 8
  %ei1 = alloca %struct.edge_iterator, align 8
  %ei2 = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp54 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4781, metadata !DIExpression()), !dbg !4825
  call void @llvm.dbg.value(metadata %struct.rtx_def* %through_insn, metadata !4782, metadata !DIExpression()), !dbg !4825
  %0 = bitcast %struct.edge_def** %e1 to i8*, !dbg !4826
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4826
  %1 = bitcast %struct.edge_def** %e2 to i8*, !dbg !4826
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4826
  %2 = bitcast %struct.edge_iterator* %ei1 to i8*, !dbg !4827
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4827
  %3 = bitcast %struct.edge_iterator* %ei2 to i8*, !dbg !4827
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !4827
  %call = tail call zeroext i8 @bookkeeping_can_be_created_if_moved_through_p(%struct.rtx_def* %through_insn) #6, !dbg !4828
  %tobool = icmp eq i8 %call, 0, !dbg !4828
  br i1 %tobool, label %if.then, label %if.end14, !dbg !4829

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @sched_verbose, align 4, !dbg !4830
  %cmp = icmp sgt i32 %4, 8, !dbg !4831
  br i1 %cmp, label %do.body, label %cleanup, !dbg !4832

do.body:                                          ; preds = %if.then
  %5 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4833
  %tobool2 = icmp eq i8 %5, 0, !dbg !4833
  br i1 %tobool2, label %if.else, label %do.body4, !dbg !4834

do.body4:                                         ; preds = %do.body
  %call5 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !4835
  %mul = shl nsw i32 %call5, 1, !dbg !4835
  %add = or i32 %mul, 1, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %add, metadata !4789, metadata !DIExpression()), !dbg !4836
  %conv = sext i32 %add to i64, !dbg !4835
  %6 = alloca i8, i64 %conv, align 16, !dbg !4835
  call void @llvm.dbg.value(metadata i8* %6, metadata !4796, metadata !DIExpression()), !dbg !4836
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 %conv, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !4835
  call void @sel_prepare_string_for_dot_label(i8* nonnull %6) #6, !dbg !4835
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4835
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %6) #6, !dbg !4835
  br label %cleanup, !dbg !4835

if.else:                                          ; preds = %do.body
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4833
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !4833
  br label %cleanup

if.end14:                                         ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4837
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !4837
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4837
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !4783, metadata !DIExpression()), !dbg !4825
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 0, !dbg !4838
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4838
  %tobool15 = icmp eq %struct.VEC_edge_gc* %10, null, !dbg !4838
  br i1 %tobool15, label %cond.end, label %cond.true, !dbg !4838

cond.true:                                        ; preds = %if.end14
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i64 0, i32 0, !dbg !4838
  br label %cond.end, !dbg !4838

cond.end:                                         ; preds = %if.end14, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end14 ], !dbg !4838
  %call17 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4838
  %cmp18 = icmp eq i32 %call17, 1, !dbg !4839
  br i1 %cmp18, label %if.then20, label %if.end46, !dbg !4840

if.then20:                                        ; preds = %cond.end
  %11 = load i32, i32* @sched_verbose, align 4, !dbg !4841
  %cmp21 = icmp sgt i32 %11, 8, !dbg !4842
  br i1 %cmp21, label %do.body24, label %cleanup, !dbg !4843

do.body24:                                        ; preds = %if.then20
  %12 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4844
  %tobool25 = icmp eq i8 %12, 0, !dbg !4844
  br i1 %tobool25, label %if.else40, label %do.body27, !dbg !4845

do.body27:                                        ; preds = %do.body24
  %call29 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4846
  %mul30 = shl nsw i32 %call29, 1, !dbg !4846
  %add31 = or i32 %mul30, 1, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %add31, metadata !4797, metadata !DIExpression()), !dbg !4847
  %conv33 = sext i32 %add31 to i64, !dbg !4846
  %13 = alloca i8, i64 %conv33, align 16, !dbg !4846
  call void @llvm.dbg.value(metadata i8* %13, metadata !4804, metadata !DIExpression()), !dbg !4847
  %call36 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %13, i64 %conv33, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4846
  call void @sel_prepare_string_for_dot_label(i8* nonnull %13) #6, !dbg !4846
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4846
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %13) #6, !dbg !4846
  br label %cleanup, !dbg !4846

if.else40:                                        ; preds = %do.body24
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4844
  %call41 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4844
  br label %cleanup

if.end46:                                         ; preds = %cond.end
  %arrayidx49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %through_insn, i64 0, i32 1, i32 0, i32 1, !dbg !4848
  %rt_bb50 = bitcast %struct.object_block** %arrayidx49 to %struct.basic_block_def**, !dbg !4848
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb50, align 8, !dbg !4848
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %16, metadata !4784, metadata !DIExpression()), !dbg !4825
  %17 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4849
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8, !dbg !4849
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 1, !dbg !4849
  %call51 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4849
  %18 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4849
  %19 = extractvalue { i32, %struct.VEC_edge_gc** } %call51, 0, !dbg !4849
  store i32 %19, i32* %18, align 8, !dbg !4849
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4849
  %21 = extractvalue { i32, %struct.VEC_edge_gc** } %call51, 1, !dbg !4849
  store %struct.VEC_edge_gc** %21, %struct.VEC_edge_gc*** %20, align 8, !dbg !4849
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %17, i64 16, i1 false), !dbg !4849
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8, !dbg !4849
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei1, i64 0, i32 0, !dbg !4850
  %23 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei1, i64 0, i32 1, !dbg !4850
  %24 = bitcast %struct.edge_iterator* %tmp54 to i8*, !dbg !4851
  %25 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp54, i64 0, i32 0, !dbg !4851
  %26 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp54, i64 0, i32 1, !dbg !4851
  %27 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei2, i64 0, i32 0, !dbg !4852
  %28 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei2, i64 0, i32 1, !dbg !4852
  br label %for.cond, !dbg !4849

for.cond:                                         ; preds = %for.inc90, %if.end46
  %29 = load i32, i32* %22, align 8, !dbg !4853
  %30 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %23, align 8, !dbg !4853
  call void @llvm.dbg.value(metadata %struct.edge_def** %e1, metadata !4785, metadata !DIExpression(DW_OP_deref)), !dbg !4825
  %call52 = call fastcc zeroext i8 @ei_cond(i32 %29, %struct.VEC_edge_gc** %30, %struct.edge_def** nonnull %e1) #7, !dbg !4853
  %tobool53 = icmp eq i8 %call52, 0, !dbg !4849
  br i1 %tobool53, label %for.end91, label %for.body, !dbg !4849

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8, !dbg !4854
  %call56 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !4854
  %31 = extractvalue { i32, %struct.VEC_edge_gc** } %call56, 0, !dbg !4854
  store i32 %31, i32* %25, align 8, !dbg !4854
  %32 = extractvalue { i32, %struct.VEC_edge_gc** } %call56, 1, !dbg !4854
  store %struct.VEC_edge_gc** %32, %struct.VEC_edge_gc*** %26, align 8, !dbg !4854
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %24, i64 16, i1 false), !dbg !4854
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8, !dbg !4854
  br label %for.cond57, !dbg !4854

for.cond57:                                       ; preds = %for.inc, %for.body
  %33 = load i32, i32* %27, align 8, !dbg !4855
  %34 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %28, align 8, !dbg !4855
  call void @llvm.dbg.value(metadata %struct.edge_def** %e2, metadata !4786, metadata !DIExpression(DW_OP_deref)), !dbg !4825
  %call58 = call fastcc zeroext i8 @ei_cond(i32 %33, %struct.VEC_edge_gc** %34, %struct.edge_def** nonnull %e2) #7, !dbg !4855
  %tobool59 = icmp eq i8 %call58, 0, !dbg !4854
  br i1 %tobool59, label %for.inc90, label %for.body60, !dbg !4854

for.body60:                                       ; preds = %for.cond57
  %35 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !4856
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !4785, metadata !DIExpression()), !dbg !4825
  %36 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !4857
  call void @llvm.dbg.value(metadata %struct.edge_def* %36, metadata !4786, metadata !DIExpression()), !dbg !4825
  %call61 = call fastcc %struct.basic_block_def* @find_block_for_bookkeeping(%struct.edge_def* %35, %struct.edge_def* %36, i8 zeroext 1) #7, !dbg !4858
  %tobool62 = icmp eq %struct.basic_block_def* %call61, null, !dbg !4858
  br i1 %tobool62, label %for.inc, label %if.then63, !dbg !4859

if.then63:                                        ; preds = %for.body60
  %37 = load i32, i32* @sched_verbose, align 4, !dbg !4860
  %cmp64 = icmp sgt i32 %37, 8, !dbg !4861
  br i1 %cmp64, label %do.body67, label %cleanup, !dbg !4862

do.body67:                                        ; preds = %if.then63
  %38 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4863
  %tobool68 = icmp eq i8 %38, 0, !dbg !4863
  br i1 %tobool68, label %if.else83, label %do.body70, !dbg !4864

do.body70:                                        ; preds = %do.body67
  %call72 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !4865
  %mul73 = shl nsw i32 %call72, 1, !dbg !4865
  %add74 = or i32 %mul73, 1, !dbg !4865
  call void @llvm.dbg.value(metadata i32 %add74, metadata !4805, metadata !DIExpression()), !dbg !4866
  %conv76 = sext i32 %add74 to i64, !dbg !4865
  %39 = alloca i8, i64 %conv76, align 16, !dbg !4865
  call void @llvm.dbg.value(metadata i8* %39, metadata !4818, metadata !DIExpression()), !dbg !4866
  %call79 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %39, i64 %conv76, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !4865
  call void @sel_prepare_string_for_dot_label(i8* nonnull %39) #6, !dbg !4865
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4865
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %39) #6, !dbg !4865
  br label %cleanup, !dbg !4865

if.else83:                                        ; preds = %do.body67
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4863
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !4863
  br label %cleanup

for.inc:                                          ; preds = %for.body60
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei2, metadata !4788, metadata !DIExpression(DW_OP_deref)), !dbg !4825
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei2) #7, !dbg !4855
  br label %for.cond57, !dbg !4855, !llvm.loop !4867

for.inc90:                                        ; preds = %for.cond57
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei1, metadata !4787, metadata !DIExpression(DW_OP_deref)), !dbg !4825
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei1) #7, !dbg !4853
  br label %for.cond, !dbg !4853, !llvm.loop !4869

for.end91:                                        ; preds = %for.cond
  %42 = load i32, i32* @sched_verbose, align 4, !dbg !4871
  %cmp92 = icmp sgt i32 %42, 8, !dbg !4872
  br i1 %cmp92, label %do.body95, label %cleanup, !dbg !4873

do.body95:                                        ; preds = %for.end91
  %43 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4874
  %tobool96 = icmp eq i8 %43, 0, !dbg !4874
  br i1 %tobool96, label %if.else111, label %do.body98, !dbg !4875

do.body98:                                        ; preds = %do.body95
  %call100 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !4876
  %mul101 = shl nsw i32 %call100, 1, !dbg !4876
  %add102 = or i32 %mul101, 1, !dbg !4876
  call void @llvm.dbg.value(metadata i32 %add102, metadata !4819, metadata !DIExpression()), !dbg !4877
  %conv104 = sext i32 %add102 to i64, !dbg !4876
  %44 = alloca i8, i64 %conv104, align 16, !dbg !4876
  call void @llvm.dbg.value(metadata i8* %44, metadata !4824, metadata !DIExpression()), !dbg !4877
  %call107 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %44, i64 %conv104, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !4876
  call void @sel_prepare_string_for_dot_label(i8* nonnull %44) #6, !dbg !4876
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4876
  %call108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %44) #6, !dbg !4876
  br label %cleanup, !dbg !4876

if.else111:                                       ; preds = %do.body95
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4874
  %call112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !4874
  br label %cleanup

cleanup:                                          ; preds = %for.end91, %if.else111, %do.body98, %if.then63, %if.else83, %do.body70, %if.then20, %if.else40, %do.body27, %if.then, %if.else, %do.body4
  %retval.0 = phi i8 [ 0, %do.body4 ], [ 0, %if.else ], [ 0, %if.then ], [ 1, %do.body27 ], [ 1, %if.else40 ], [ 1, %if.then20 ], [ 0, %do.body70 ], [ 0, %if.else83 ], [ 0, %if.then63 ], [ 1, %do.body98 ], [ 1, %if.else111 ], [ 1, %for.end91 ], !dbg !4825
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !4878
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4878
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4878
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4878
  ret i8 %retval.0, !dbg !4878
}

declare dso_local i32 @has_dependence_p(%struct._expr*, %struct.rtx_def*, i32**) local_unnamed_addr #2

declare dso_local zeroext i8 @sel_insn_has_single_succ_p(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_speculate_dep_p(i32 %ds) unnamed_addr #5 !dbg !4879 {
entry:
  call void @llvm.dbg.value(metadata i32 %ds, metadata !4883, metadata !DIExpression()), !dbg !4886
  %0 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !4887
  %cmp = icmp eq %struct.spec_info_def* %0, null, !dbg !4889
  br i1 %cmp, label %return, label %if.end, !dbg !4890

if.end:                                           ; preds = %entry
  %and = and i32 %ds, 16777215, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %and, metadata !4883, metadata !DIExpression()), !dbg !4886
  %cmp1 = icmp eq i32 %and, 0, !dbg !4892
  br i1 %cmp1, label %return, label %if.end3, !dbg !4894

if.end3:                                          ; preds = %if.end
  %mask = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %0, i64 0, i32 0, !dbg !4895
  %1 = load i32, i32* %mask, align 8, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %1, metadata !4884, metadata !DIExpression()), !dbg !4896
  %and4 = and i32 %and, %1, !dbg !4897
  %cmp5 = icmp eq i32 %and4, %and, !dbg !4899
  br i1 %cmp5, label %cleanup.cont, label %return

cleanup.cont:                                     ; preds = %if.end3
  %call = tail call i32 @ds_weak(i32 %and) #6, !dbg !4900
  %2 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !4902
  %data_weakness_cutoff = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %2, i64 0, i32 2, !dbg !4903
  %3 = load i32, i32* %data_weakness_cutoff, align 8, !dbg !4903
  %cmp8 = icmp sge i32 %call, %3, !dbg !4904
  %.1 = zext i1 %cmp8 to i8, !dbg !4886
  br label %return, !dbg !4886

return:                                           ; preds = %if.end3, %cleanup.cont, %if.end, %entry
  %retval.1 = phi i8 [ 0, %if.end3 ], [ 0, %entry ], [ 0, %if.end ], [ %.1, %cleanup.cont ], !dbg !4886
  ret i8 %retval.1, !dbg !4905
}

declare dso_local void @sel_clear_has_dependence() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_substitute_through_p(%struct.rtx_def* %insn, i32 %ds) unnamed_addr #5 !dbg !4906 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4910, metadata !DIExpression()), !dbg !4912
  call void @llvm.dbg.value(metadata i32 %ds, metadata !4911, metadata !DIExpression()), !dbg !4912
  %0 = and i32 %ds, 100663296, !dbg !4913
  %1 = icmp eq i32 %0, 0, !dbg !4913
  br i1 %1, label %lor.lhs.false3, label %return, !dbg !4913

lor.lhs.false3:                                   ; preds = %entry
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4915
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %2, i64 0, i32 0, !dbg !4915
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4915
  %base7 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !4915
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4915
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4915
  %4 = load i32, i32* %rt_int, align 8, !dbg !4915
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base7, i32 %4) #7, !dbg !4915
  %call11 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !4915
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call11, i64 0, i32 0, i32 0, !dbg !4915
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4915
  %rhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 1, i32 2, !dbg !4915
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !4915
  %tobool12 = icmp eq %struct.rtx_def* %6, null, !dbg !4915
  br i1 %tobool12, label %return, label %lor.lhs.false13, !dbg !4916

lor.lhs.false13:                                  ; preds = %lor.lhs.false3
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4917
  %base16 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %7, i64 0, i32 0, !dbg !4917
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4917
  %base22 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !4917
  %9 = load i32, i32* %rt_int, align 8, !dbg !4917
  %call30 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base22, i32 %9) #7, !dbg !4917
  %call31 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base16, i32 %call30) #7, !dbg !4917
  %vinsn33 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call31, i64 0, i32 0, i32 0, !dbg !4917
  %10 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn33, align 8, !dbg !4917
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %10, i64 0, i32 1, i32 1, !dbg !4917
  %11 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !4917
  %tobool35 = icmp eq %struct.rtx_def* %11, null, !dbg !4917
  br i1 %tobool35, label %return, label %if.end, !dbg !4918

if.end:                                           ; preds = %lor.lhs.false13
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4919
  %base38 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %12, i64 0, i32 0, !dbg !4919
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4919
  %base44 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !4919
  %14 = load i32, i32* %rt_int, align 8, !dbg !4919
  %call52 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base44, i32 %14) #7, !dbg !4919
  %call53 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base38, i32 %call52) #7, !dbg !4919
  %vinsn55 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call53, i64 0, i32 0, i32 0, !dbg !4919
  %15 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn55, align 8, !dbg !4919
  %lhs57 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %15, i64 0, i32 1, i32 1, !dbg !4919
  %16 = bitcast %struct.rtx_def** %lhs57 to i32**, !dbg !4919
  %17 = load i32*, i32** %16, align 8, !dbg !4919
  %bf.load = load i32, i32* %17, align 8, !dbg !4919
  %bf.clear = and i32 %bf.load, 65535, !dbg !4919
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !4919
  br i1 %cmp, label %land.lhs.true, label %if.end84, !dbg !4921

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4922
  %base60 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %18, i64 0, i32 0, !dbg !4922
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4922
  %base66 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i64 0, i32 0, !dbg !4922
  %20 = load i32, i32* %rt_int, align 8, !dbg !4922
  %call74 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base66, i32 %20) #7, !dbg !4922
  %call75 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base60, i32 %call74) #7, !dbg !4922
  %vinsn77 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call75, i64 0, i32 0, i32 0, !dbg !4922
  %21 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn77, align 8, !dbg !4922
  %rhs79 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %21, i64 0, i32 1, i32 2, !dbg !4922
  %22 = bitcast %struct.rtx_def** %rhs79 to i32**, !dbg !4922
  %23 = load i32*, i32** %22, align 8, !dbg !4922
  %bf.load80 = load i32, i32* %23, align 8, !dbg !4922
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !4922
  %cmp82 = icmp eq i32 %bf.clear81, 37, !dbg !4922
  br i1 %cmp82, label %return, label %if.end84, !dbg !4923

if.end84:                                         ; preds = %land.lhs.true, %if.end
  br label %return, !dbg !4924

return:                                           ; preds = %lor.lhs.false13, %lor.lhs.false3, %entry, %land.lhs.true, %if.end84
  %retval.0 = phi i8 [ 0, %if.end84 ], [ 0, %lor.lhs.false13 ], [ 0, %lor.lhs.false3 ], [ 0, %entry ], [ 1, %land.lhs.true ], !dbg !4912
  ret i8 %retval.0, !dbg !4925
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @substitute_reg_in_expr(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext %undo) unnamed_addr #5 !dbg !4926 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !4930, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4931, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8 %undo, metadata !4932, metadata !DIExpression()), !dbg !4945
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !4946
  call void @llvm.dbg.value(metadata %struct.vinsn_def** %vinsn, metadata !4936, metadata !DIExpression()), !dbg !4945
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4947
  %rhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 1, i32 2, !dbg !4947
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !4947
  %cmp = icmp ne %struct.rtx_def* %1, null, !dbg !4948
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !4938, metadata !DIExpression()), !dbg !4945
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4949

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4949

cond.false:                                       ; preds = %entry
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !4950
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4950
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, !dbg !4950
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4950
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4950
  br label %cond.end, !dbg !4949

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def** [ %rhs, %cond.true ], [ %rt_rtx, %cond.false ], !dbg !4949
  call void @llvm.dbg.value(metadata %struct.rtx_def** %cond, metadata !4933, metadata !DIExpression()), !dbg !4945
  %tobool6 = icmp eq i8 %undo, 0, !dbg !4951
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4945
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i64 0, i32 0, !dbg !4945
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4945
  %base15 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !4945
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4945
  %rt_int = bitcast %union.rtunion_def* %arrayidx21 to i32*, !dbg !4945
  %6 = load i32, i32* %rt_int, align 8, !dbg !4945
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base15, i32 %6) #7, !dbg !4945
  %call22 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !4945
  %vinsn24 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call22, i64 0, i32 0, i32 0, !dbg !4945
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn24, align 8, !dbg !4945
  br i1 %tobool6, label %cond.end32, label %cond.end11, !dbg !4951

cond.end11:                                       ; preds = %cond.end
  %rhs26 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i64 0, i32 1, i32 2, !dbg !4952
  br label %cond.end49, !dbg !4951

cond.end32:                                       ; preds = %cond.end
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i64 0, i32 1, i32 1, !dbg !4953
  br label %cond.end49, !dbg !4951

cond.end49:                                       ; preds = %cond.end32, %cond.end11
  %cond50.in = phi %struct.rtx_def** [ %rhs26, %cond.end11 ], [ %lhs, %cond.end32 ]
  %cond50 = load %struct.rtx_def*, %struct.rtx_def** %cond50.in, align 8, !dbg !4951
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond50, metadata !4939, metadata !DIExpression()), !dbg !4945
  %8 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !4954
  %call51 = tail call fastcc zeroext i8 @rtx_ok_for_substitution_p(%struct.rtx_def* %cond50, %struct.rtx_def* %8) #7, !dbg !4955
  %tobool52 = icmp eq i8 %call51, 0, !dbg !4955
  br i1 %tobool52, label %cleanup138, label %if.then, !dbg !4956

if.then:                                          ; preds = %cond.end49
  %9 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4957
  %base58 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %9, i64 0, i32 0, !dbg !4957
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4957
  %base64 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !4957
  %11 = load i32, i32* %rt_int, align 8, !dbg !4957
  %call72 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base64, i32 %11) #7, !dbg !4957
  %call73 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base58, i32 %call72) #7, !dbg !4957
  %vinsn75 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call73, i64 0, i32 0, i32 0, !dbg !4957
  %12 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn75, align 8, !dbg !4957
  br i1 %tobool6, label %cond.end83, label %cond.end60, !dbg !4958

cond.end60:                                       ; preds = %if.then
  %lhs77 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %12, i64 0, i32 1, i32 1, !dbg !4959
  br label %cond.end101, !dbg !4958

cond.end83:                                       ; preds = %if.then
  %rhs100 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %12, i64 0, i32 1, i32 2, !dbg !4960
  br label %cond.end101, !dbg !4958

cond.end101:                                      ; preds = %cond.end83, %cond.end60
  %cond102.in = phi %struct.rtx_def** [ %lhs77, %cond.end60 ], [ %rhs100, %cond.end83 ]
  %cond102 = load %struct.rtx_def*, %struct.rtx_def** %cond102.in, align 8, !dbg !4958
  %call103 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %cond102) #6, !dbg !4961
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call103, metadata !4940, metadata !DIExpression()), !dbg !4945
  %13 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4962
  %insn_rtx104 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %13, i64 0, i32 0, !dbg !4962
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx104, align 8, !dbg !4962
  %call105 = tail call %struct.rtx_def* @create_copy_of_insn_rtx(%struct.rtx_def* %14) #6, !dbg !4963
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call105, metadata !4941, metadata !DIExpression()), !dbg !4957
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call105, i64 0, i32 1, !dbg !4957
  %15 = getelementptr inbounds %union.u, %union.u* %u109, i64 1, i32 0, i32 0, i64 0, !dbg !4957
  %rt_rtx112 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !4957
  br i1 %cmp, label %cond.true108, label %cond.end122, !dbg !4964

cond.true108:                                     ; preds = %cond.end101
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx112, align 8, !dbg !4965
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4965
  %rt_rtx116 = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !4965
  br label %cond.end122, !dbg !4964

cond.end122:                                      ; preds = %cond.end101, %cond.true108
  %cond123 = phi %struct.rtx_def** [ %rt_rtx116, %cond.true108 ], [ %rt_rtx112, %cond.end101 ], !dbg !4964
  call void @llvm.dbg.value(metadata %struct.rtx_def** %cond123, metadata !4944, metadata !DIExpression()), !dbg !4957
  %call124 = tail call i32 @validate_replace_rtx_part_nosimplify(%struct.rtx_def* %cond50, %struct.rtx_def* %call103, %struct.rtx_def** %cond123, %struct.rtx_def* %call105) #6, !dbg !4966
  %conv125 = trunc i32 %call124 to i8, !dbg !4966
  call void @llvm.dbg.value(metadata i8 %conv125, metadata !4935, metadata !DIExpression()), !dbg !4945
  %tobool126 = icmp eq i8 %conv125, 0, !dbg !4967
  br i1 %tobool126, label %cleanup138, label %if.then127, !dbg !4969

if.then127:                                       ; preds = %cond.end122
  %call128 = tail call %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def* %call105, i8 zeroext 0) #6, !dbg !4970
  tail call void @change_vinsn_in_expr(%struct._expr* %expr, %struct.vinsn_def* %call128) #6, !dbg !4972
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 7, !dbg !4973
  %18 = load i32, i32* %spec_done_ds, align 8, !dbg !4973
  %and = and i32 %18, 16777215, !dbg !4975
  %tobool129 = icmp eq i32 %and, 0, !dbg !4975
  br i1 %tobool129, label %cleanup138, label %land.lhs.true, !dbg !4976

land.lhs.true:                                    ; preds = %if.then127
  %19 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4977
  %reg_uses = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %19, i64 0, i32 1, i32 5, !dbg !4977
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !4977
  %call132 = tail call i32 @expr_dest_regno(%struct._expr* %expr) #6, !dbg !4978
  %call133 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %20, i32 %call132) #6, !dbg !4979
  %tobool134 = icmp eq i32 %call133, 0, !dbg !4979
  br i1 %tobool134, label %cleanup138, label %if.then135, !dbg !4980

if.then135:                                       ; preds = %land.lhs.true
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !4981
  store i8 0, i8* %target_available, align 8, !dbg !4982
  br label %cleanup138, !dbg !4981

cleanup138:                                       ; preds = %land.lhs.true, %if.then127, %cond.end122, %cond.end49, %if.then135
  %retval.1 = phi i8 [ 1, %if.then135 ], [ 1, %land.lhs.true ], [ 1, %if.then127 ], [ 0, %cond.end122 ], [ 0, %cond.end49 ], !dbg !4983
  ret i8 %retval.1, !dbg !4984
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @find_block_for_bookkeeping(%struct.edge_def* %e1, %struct.edge_def* %e2, i8 zeroext %lax) unnamed_addr #5 !dbg !4985 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !4989, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2, metadata !4990, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i8 %lax, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !4993, metadata !DIExpression()), !dbg !4994
  %tobool = icmp eq i8 %lax, 0, !dbg !4995
  br i1 %tobool, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !4998

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !4998

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !4998

for.cond.us:                                      ; preds = %cond.end99.us, %entry.split.us
  %candidate_block.0.us = phi %struct.basic_block_def* [ null, %entry.split.us ], [ %candidate_block.1.us, %cond.end99.us ], !dbg !4994
  %e.0.us = phi %struct.edge_def* [ %e1, %entry.split.us ], [ %call101.us, %cond.end99.us ], !dbg !4999
  call void @llvm.dbg.value(metadata %struct.edge_def* %e.0.us, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %candidate_block.0.us, metadata !4992, metadata !DIExpression()), !dbg !4994
  %dest1.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e.0.us, i64 0, i32 1, !dbg !5000
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1.us, align 8, !dbg !5000
  %preds.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 0, !dbg !5000
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds.us, align 8, !dbg !5000
  %tobool2.us = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !5000
  br i1 %tobool2.us, label %cond.end.us, label %cond.true.us, !dbg !5000

cond.true.us:                                     ; preds = %for.cond.us
  %base.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !5000
  br label %cond.end.us, !dbg !5000

cond.end.us:                                      ; preds = %cond.true.us, %for.cond.us
  %cond.us = phi %struct.VEC_edge_base* [ %base.us, %cond.true.us ], [ null, %for.cond.us ], !dbg !5000
  %call.us = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond.us) #7, !dbg !5000
  %cmp5.us = icmp eq i32 %call.us, 2, !dbg !5003
  br i1 %cmp5.us, label %if.then.us, label %if.else47.us, !dbg !5004

if.else47.us:                                     ; preds = %cond.end.us
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1.us, align 8, !dbg !5005
  %preds49.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 0, !dbg !5005
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds49.us, align 8, !dbg !5005
  %tobool50.us = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !5005
  br i1 %tobool50.us, label %cond.end56.us, label %cond.true51.us, !dbg !5005

cond.true51.us:                                   ; preds = %if.else47.us
  %base54.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !5005
  br label %cond.end56.us, !dbg !5005

cond.end56.us:                                    ; preds = %cond.true51.us, %if.else47.us
  %cond57.us = phi %struct.VEC_edge_base* [ %base54.us, %cond.true51.us ], [ null, %if.else47.us ], !dbg !5005
  %call58.us = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond57.us) #7, !dbg !5005
  %cmp59.us = icmp ugt i32 %call58.us, 2, !dbg !5007
  br i1 %cmp59.us, label %cleanup.loopexit.us-lcssa.us.loopexit, label %if.end62.us, !dbg !5008

if.then.us:                                       ; preds = %cond.end.us
  %cmp6.us = icmp eq %struct.basic_block_def* %candidate_block.0.us, null, !dbg !5009
  br i1 %cmp6.us, label %if.then7.us, label %cleanup.loopexit.us-lcssa.us.loopexit, !dbg !5012

if.then7.us:                                      ; preds = %if.then.us
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1.us, align 8, !dbg !5013
  %preds9.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 0, !dbg !5013
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds9.us, align 8, !dbg !5013
  %tobool10.us = icmp eq %struct.VEC_edge_gc* %5, null, !dbg !5013
  br i1 %tobool10.us, label %cond.end16.us, label %cond.true11.us, !dbg !5013

cond.true11.us:                                   ; preds = %if.then7.us
  %base14.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !5013
  br label %cond.end16.us, !dbg !5013

cond.end16.us:                                    ; preds = %cond.true11.us, %if.then7.us
  %cond17.us = phi %struct.VEC_edge_base* [ %base14.us, %cond.true11.us ], [ null, %if.then7.us ], !dbg !5013
  %call18.us = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond17.us, i32 0) #7, !dbg !5013
  %cmp19.us = icmp eq %struct.edge_def* %call18.us, %e.0.us, !dbg !5014
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1.us, align 8, !dbg !5015
  %preds22.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 0, !dbg !5015
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds22.us, align 8, !dbg !5015
  %tobool23.us = icmp ne %struct.VEC_edge_gc* %7, null, !dbg !5015
  br i1 %cmp19.us, label %cond.true20.us, label %cond.false32.us, !dbg !5013

cond.false32.us:                                  ; preds = %cond.end16.us
  br i1 %tobool23.us, label %cond.true36.us, label %cond.end41.us, !dbg !5016

cond.true36.us:                                   ; preds = %cond.false32.us
  %base39.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !5016
  br label %cond.end41.us, !dbg !5016

cond.end41.us:                                    ; preds = %cond.true36.us, %cond.false32.us
  %cond42.us = phi %struct.VEC_edge_base* [ %base39.us, %cond.true36.us ], [ null, %cond.false32.us ], !dbg !5016
  %call43.us = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond42.us, i32 0) #7, !dbg !5016
  %src44.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call43.us, i64 0, i32 0, !dbg !5017
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %src44.us, align 8, !dbg !5017
  br label %if.end62.us, !dbg !5013

cond.true20.us:                                   ; preds = %cond.end16.us
  br i1 %tobool23.us, label %cond.true24.us, label %cond.end29.us, !dbg !5018

cond.true24.us:                                   ; preds = %cond.true20.us
  %base27.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !5018
  br label %cond.end29.us, !dbg !5018

cond.end29.us:                                    ; preds = %cond.true24.us, %cond.true20.us
  %cond30.us = phi %struct.VEC_edge_base* [ %base27.us, %cond.true24.us ], [ null, %cond.true20.us ], !dbg !5018
  %call31.us = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond30.us, i32 1) #7, !dbg !5018
  %src.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call31.us, i64 0, i32 0, !dbg !5019
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %src.us, align 8, !dbg !5019
  br label %if.end62.us, !dbg !5013

if.end62.us:                                      ; preds = %cond.end29.us, %cond.end41.us, %cond.end56.us
  %candidate_block.1.us = phi %struct.basic_block_def* [ %9, %cond.end29.us ], [ %8, %cond.end41.us ], [ %candidate_block.0.us, %cond.end56.us ], !dbg !4994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %candidate_block.1.us, metadata !4992, metadata !DIExpression()), !dbg !4994
  %cmp63.us = icmp eq %struct.edge_def* %e.0.us, %e2, !dbg !5020
  br i1 %cmp63.us, label %if.then64.us-lcssa.us, label %if.end73.us, !dbg !5022

if.end73.us:                                      ; preds = %if.end62.us
  br i1 true, label %if.end73.us.for.inc.us_crit_edge, label %land.lhs.true76.us, !dbg !5023

if.end73.us.for.inc.us_crit_edge:                 ; preds = %if.end73.us
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %dest1.us, align 8, !dbg !5025
  %succs92.us.phi.trans.insert = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pre, i64 0, i32 1, !dbg !4995
  %.pre1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs92.us.phi.trans.insert, align 8, !dbg !5025
  br label %for.inc.us, !dbg !5023

land.lhs.true76.us:                               ; preds = %if.end73.us
  br i1 undef, label %cond.end84.us, label %cond.true79.us, !dbg !5026

cond.true79.us:                                   ; preds = %land.lhs.true76.us
  br label %cond.end84.us, !dbg !5026

cond.end84.us:                                    ; preds = %cond.true79.us, %land.lhs.true76.us
  br i1 false, label %cond.end84.us.for.inc.us_crit_edge, label %cond.end84.us.cleanup.loopexit.us-lcssa.us_crit_edge, !dbg !5027

cond.end84.us.cleanup.loopexit.us-lcssa.us_crit_edge: ; preds = %cond.end84.us
  br label %cleanup.loopexit.us-lcssa.us, !dbg !5027

cond.end84.us.for.inc.us_crit_edge:               ; preds = %cond.end84.us
  br label %for.inc.us, !dbg !5027

for.inc.us:                                       ; preds = %if.end73.us.for.inc.us_crit_edge, %cond.end84.us.for.inc.us_crit_edge
  %10 = phi %struct.VEC_edge_gc* [ %.pre1, %if.end73.us.for.inc.us_crit_edge ], [ undef, %cond.end84.us.for.inc.us_crit_edge ], !dbg !5025
  %tobool93.us = icmp eq %struct.VEC_edge_gc* %10, null, !dbg !5025
  br i1 %tobool93.us, label %cond.end99.us, label %cond.true94.us, !dbg !5025

cond.true94.us:                                   ; preds = %for.inc.us
  %base97.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i64 0, i32 0, !dbg !5025
  br label %cond.end99.us, !dbg !5025

cond.end99.us:                                    ; preds = %cond.true94.us, %for.inc.us
  %cond100.us = phi %struct.VEC_edge_base* [ %base97.us, %cond.true94.us ], [ null, %for.inc.us ], !dbg !5025
  %call101.us = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond100.us, i32 0) #7, !dbg !5025
  call void @llvm.dbg.value(metadata %struct.edge_def* %call101.us, metadata !4993, metadata !DIExpression()), !dbg !4994
  br label %for.cond.us, !dbg !5028, !llvm.loop !5029

cleanup.loopexit.us-lcssa.us.loopexit:            ; preds = %cond.end56.us, %if.then.us
  br label %cleanup.loopexit.us-lcssa.us, !dbg !5032

cleanup.loopexit.us-lcssa.us:                     ; preds = %cleanup.loopexit.us-lcssa.us.loopexit, %cond.end84.us.cleanup.loopexit.us-lcssa.us_crit_edge
  br label %cleanup.loopexit, !dbg !5032

if.then64.us-lcssa.us:                            ; preds = %if.end62.us
  %candidate_block.1.us.lcssa = phi %struct.basic_block_def* [ %candidate_block.1.us, %if.end62.us ], !dbg !4994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %candidate_block.1.us.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %candidate_block.1.us.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  br label %if.then64, !dbg !5033

for.cond:                                         ; preds = %cond.end99, %entry.entry.split_crit_edge
  %candidate_block.0 = phi %struct.basic_block_def* [ null, %entry.entry.split_crit_edge ], [ %candidate_block.1, %cond.end99 ], !dbg !4994
  %e.0 = phi %struct.edge_def* [ %e1, %entry.entry.split_crit_edge ], [ %call101, %cond.end99 ], !dbg !4999
  call void @llvm.dbg.value(metadata %struct.edge_def* %e.0, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %candidate_block.0, metadata !4992, metadata !DIExpression()), !dbg !4994
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e.0, i64 0, i32 1, !dbg !5034
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5034
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5035
  %cfg = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 1, !dbg !5035
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5035
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 1, !dbg !5035
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5035
  %cmp = icmp eq %struct.basic_block_def* %11, %14, !dbg !5036
  br i1 %cmp, label %for.end.us-lcssa, label %for.body, !dbg !5030

for.body:                                         ; preds = %for.cond
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 0, !dbg !5000
  %15 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5000
  %tobool2 = icmp eq %struct.VEC_edge_gc* %15, null, !dbg !5000
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !5000

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %15, i64 0, i32 0, !dbg !5000
  br label %cond.end, !dbg !5000

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !5000
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5000
  %cmp5 = icmp eq i32 %call, 2, !dbg !5003
  br i1 %cmp5, label %if.then, label %if.else47, !dbg !5004

if.then:                                          ; preds = %cond.end
  %cmp6 = icmp eq %struct.basic_block_def* %candidate_block.0, null, !dbg !5009
  br i1 %cmp6, label %if.then7, label %cleanup.loopexit.us-lcssa, !dbg !5012

if.then7:                                         ; preds = %if.then
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5013
  %preds9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 0, !dbg !5013
  %17 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds9, align 8, !dbg !5013
  %tobool10 = icmp eq %struct.VEC_edge_gc* %17, null, !dbg !5013
  br i1 %tobool10, label %cond.end16, label %cond.true11, !dbg !5013

cond.true11:                                      ; preds = %if.then7
  %base14 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %17, i64 0, i32 0, !dbg !5013
  br label %cond.end16, !dbg !5013

cond.end16:                                       ; preds = %if.then7, %cond.true11
  %cond17 = phi %struct.VEC_edge_base* [ %base14, %cond.true11 ], [ null, %if.then7 ], !dbg !5013
  %call18 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond17, i32 0) #7, !dbg !5013
  %cmp19 = icmp eq %struct.edge_def* %call18, %e.0, !dbg !5014
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5015
  %preds22 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 0, !dbg !5015
  %19 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds22, align 8, !dbg !5015
  %tobool23 = icmp ne %struct.VEC_edge_gc* %19, null, !dbg !5015
  br i1 %cmp19, label %cond.true20, label %cond.false32, !dbg !5013

cond.true20:                                      ; preds = %cond.end16
  br i1 %tobool23, label %cond.true24, label %cond.end29, !dbg !5018

cond.true24:                                      ; preds = %cond.true20
  %base27 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %19, i64 0, i32 0, !dbg !5018
  br label %cond.end29, !dbg !5018

cond.end29:                                       ; preds = %cond.true20, %cond.true24
  %cond30 = phi %struct.VEC_edge_base* [ %base27, %cond.true24 ], [ null, %cond.true20 ], !dbg !5018
  %call31 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond30, i32 1) #7, !dbg !5018
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call31, i64 0, i32 0, !dbg !5019
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5019
  br label %if.end62, !dbg !5013

cond.false32:                                     ; preds = %cond.end16
  br i1 %tobool23, label %cond.true36, label %cond.end41, !dbg !5016

cond.true36:                                      ; preds = %cond.false32
  %base39 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %19, i64 0, i32 0, !dbg !5016
  br label %cond.end41, !dbg !5016

cond.end41:                                       ; preds = %cond.false32, %cond.true36
  %cond42 = phi %struct.VEC_edge_base* [ %base39, %cond.true36 ], [ null, %cond.false32 ], !dbg !5016
  %call43 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond42, i32 0) #7, !dbg !5016
  %src44 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call43, i64 0, i32 0, !dbg !5017
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %src44, align 8, !dbg !5017
  br label %if.end62, !dbg !5013

if.else47:                                        ; preds = %cond.end
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5005
  %preds49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 0, !dbg !5005
  %23 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds49, align 8, !dbg !5005
  %tobool50 = icmp eq %struct.VEC_edge_gc* %23, null, !dbg !5005
  br i1 %tobool50, label %cond.end56, label %cond.true51, !dbg !5005

cond.true51:                                      ; preds = %if.else47
  %base54 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %23, i64 0, i32 0, !dbg !5005
  br label %cond.end56, !dbg !5005

cond.end56:                                       ; preds = %if.else47, %cond.true51
  %cond57 = phi %struct.VEC_edge_base* [ %base54, %cond.true51 ], [ null, %if.else47 ], !dbg !5005
  %call58 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond57) #7, !dbg !5005
  %cmp59 = icmp ugt i32 %call58, 2, !dbg !5007
  br i1 %cmp59, label %cleanup.loopexit.us-lcssa, label %if.end62, !dbg !5008

if.end62:                                         ; preds = %cond.end56, %cond.end41, %cond.end29
  %candidate_block.1 = phi %struct.basic_block_def* [ %20, %cond.end29 ], [ %21, %cond.end41 ], [ %candidate_block.0, %cond.end56 ], !dbg !4994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %candidate_block.1, metadata !4992, metadata !DIExpression()), !dbg !4994
  %cmp63 = icmp eq %struct.edge_def* %e.0, %e2, !dbg !5020
  br i1 %cmp63, label %if.then64.us-lcssa, label %if.end73, !dbg !5022

if.then64.us-lcssa:                               ; preds = %if.end62
  %candidate_block.1.lcssa5 = phi %struct.basic_block_def* [ %candidate_block.1, %if.end62 ], !dbg !4994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %candidate_block.1.lcssa5, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %candidate_block.1.lcssa5, metadata !4992, metadata !DIExpression()), !dbg !4994
  br label %if.then64, !dbg !5033

if.then64:                                        ; preds = %if.then64.us-lcssa.us, %if.then64.us-lcssa
  %candidate_block.1.lcssa = phi %struct.basic_block_def* [ %candidate_block.1.lcssa5, %if.then64.us-lcssa ], [ %candidate_block.1.us.lcssa, %if.then64.us-lcssa.us ], !dbg !4994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %candidate_block.1.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  %tobool66 = icmp ne %struct.basic_block_def* %candidate_block.1.lcssa, null, !dbg !5037
  %or.cond = or i1 %tobool, %tobool66, !dbg !5038
  br i1 %or.cond, label %land.lhs.true, label %cond.false70, !dbg !5038

land.lhs.true:                                    ; preds = %if.then64
  %call67 = tail call fastcc zeroext i8 @block_valid_for_bookkeeping_p(%struct.basic_block_def* %candidate_block.1.lcssa) #7, !dbg !5039
  %tobool68 = icmp eq i8 %call67, 0, !dbg !5039
  br i1 %tobool68, label %cond.false70, label %cleanup, !dbg !5040

cond.false70:                                     ; preds = %land.lhs.true, %if.then64
  br label %cleanup, !dbg !5040

if.end73:                                         ; preds = %if.end62
  br i1 false, label %if.end73.for.inc_crit_edge, label %land.lhs.true76, !dbg !5023

if.end73.for.inc_crit_edge:                       ; preds = %if.end73
  br label %for.inc, !dbg !5023

land.lhs.true76:                                  ; preds = %if.end73
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5026
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i64 0, i32 1, !dbg !5026
  %25 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5026
  %tobool78 = icmp eq %struct.VEC_edge_gc* %25, null, !dbg !5026
  br i1 %tobool78, label %cond.end84, label %cond.true79, !dbg !5026

cond.true79:                                      ; preds = %land.lhs.true76
  %base82 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %25, i64 0, i32 0, !dbg !5026
  br label %cond.end84, !dbg !5026

cond.end84:                                       ; preds = %land.lhs.true76, %cond.true79
  %cond85 = phi %struct.VEC_edge_base* [ %base82, %cond.true79 ], [ null, %land.lhs.true76 ], !dbg !5026
  %call86 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond85) #7, !dbg !5026
  %cmp87 = icmp eq i32 %call86, 1, !dbg !5041
  br i1 %cmp87, label %cond.end84.for.inc_crit_edge, label %cleanup.loopexit.us-lcssa, !dbg !5027

cond.end84.for.inc_crit_edge:                     ; preds = %cond.end84
  br label %for.inc, !dbg !5027

for.inc:                                          ; preds = %cond.end84.for.inc_crit_edge, %if.end73.for.inc_crit_edge
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5025
  %succs92 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i64 0, i32 1, !dbg !5025
  %27 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs92, align 8, !dbg !5025
  %tobool93 = icmp eq %struct.VEC_edge_gc* %27, null, !dbg !5025
  br i1 %tobool93, label %cond.end99, label %cond.true94, !dbg !5025

cond.true94:                                      ; preds = %for.inc
  %base97 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %27, i64 0, i32 0, !dbg !5025
  br label %cond.end99, !dbg !5025

cond.end99:                                       ; preds = %for.inc, %cond.true94
  %cond100 = phi %struct.VEC_edge_base* [ %base97, %cond.true94 ], [ null, %for.inc ], !dbg !5025
  %call101 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond100, i32 0) #7, !dbg !5025
  call void @llvm.dbg.value(metadata %struct.edge_def* %call101, metadata !4993, metadata !DIExpression()), !dbg !4994
  br label %for.cond, !dbg !5028, !llvm.loop !5029

for.end.us-lcssa:                                 ; preds = %for.cond
  br i1 false, label %if.end104, label %cleanup, !dbg !5042

if.end104:                                        ; preds = %for.end.us-lcssa
  br label %cleanup, !dbg !5043

cleanup.loopexit.us-lcssa:                        ; preds = %cond.end84, %cond.end56, %if.then
  br label %cleanup.loopexit, !dbg !5032

cleanup.loopexit:                                 ; preds = %cleanup.loopexit.us-lcssa.us, %cleanup.loopexit.us-lcssa
  br label %cleanup, !dbg !5032

cleanup:                                          ; preds = %cleanup.loopexit, %for.end.us-lcssa, %land.lhs.true, %cond.false70, %if.end104
  %retval.0 = phi %struct.basic_block_def* [ undef, %if.end104 ], [ null, %cond.false70 ], [ %candidate_block.1.lcssa, %land.lhs.true ], [ null, %for.end.us-lcssa ], [ null, %cleanup.loopexit ], !dbg !4994
  ret %struct.basic_block_def* %retval.0, !dbg !5032
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @block_valid_for_bookkeeping_p(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !5044 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5048, metadata !DIExpression()), !dbg !5050
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !5051
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5051
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5051
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !5051
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5051
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5049, metadata !DIExpression()), !dbg !5050
  %call = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %bb) #6, !dbg !5052
  %tobool = icmp eq i8 %call, 0, !dbg !5052
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !5054

lor.lhs.false:                                    ; preds = %entry
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5055
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5055
  %tobool1 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !5055
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5055

cond.true:                                        ; preds = %lor.lhs.false
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !5055
  br label %cond.end, !dbg !5055

cond.end:                                         ; preds = %lor.lhs.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %lor.lhs.false ], !dbg !5055
  %call3 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5055
  %cmp = icmp ugt i32 %call3, 1, !dbg !5056
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5057

if.end:                                           ; preds = %cond.end
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5058
  %bf.load = load i32, i32* %3, align 8, !dbg !5058
  %bf.clear = and i32 %bf.load, 65535, !dbg !5058
  %cmp4 = icmp eq i32 %bf.clear, 8, !dbg !5058
  br i1 %cmp4, label %if.then17, label %lor.lhs.false5, !dbg !5058

lor.lhs.false5:                                   ; preds = %if.end
  %cmp8 = icmp eq i32 %bf.clear, 7, !dbg !5058
  br i1 %cmp8, label %if.then17, label %lor.lhs.false9, !dbg !5058

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 9, !dbg !5058
  br i1 %cmp12, label %if.then17, label %lor.lhs.false13, !dbg !5058

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %cmp16 = icmp eq i32 %bf.clear, 10, !dbg !5058
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !5060

if.then17:                                        ; preds = %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false5, %if.end
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5061
  %base20 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i64 0, i32 0, !dbg !5061
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5061
  %base26 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !5061
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5061
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5061
  %6 = load i32, i32* %rt_int, align 8, !dbg !5061
  %call30 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base26, i32 %6) #7, !dbg !5061
  %call31 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base20, i32 %call30) #7, !dbg !5061
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call31, i64 0, i32 0, i32 5, !dbg !5061
  %7 = load i32, i32* %sched_times, align 8, !dbg !5061
  %cmp32 = icmp sgt i32 %7, 0, !dbg !5064
  br i1 %cmp32, label %cleanup, label %if.end47, !dbg !5065

if.else:                                          ; preds = %lor.lhs.false13
  %cmp37 = icmp eq i32 %bf.clear, 13, !dbg !5066
  br i1 %cmp37, label %land.lhs.true, label %cond.true43, !dbg !5066

land.lhs.true:                                    ; preds = %if.else
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !5066
  %8 = getelementptr inbounds %union.u, %union.u* %u38, i64 1, i32 0, i32 0, i64 0, !dbg !5066
  %rt_int41 = bitcast %union.rtunion_def* %8 to i32*, !dbg !5066
  %9 = load i32, i32* %rt_int41, align 8, !dbg !5066
  %cmp42 = icmp eq i32 %9, 10, !dbg !5066
  br i1 %cmp42, label %if.end47, label %cond.true43, !dbg !5066

cond.true43:                                      ; preds = %land.lhs.true, %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4482, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5066
  br label %if.end47, !dbg !5066

if.end47:                                         ; preds = %cond.true43, %land.lhs.true, %if.then17
  br label %cleanup, !dbg !5067

cleanup:                                          ; preds = %entry, %if.then17, %cond.end, %if.end47
  %retval.0 = phi i8 [ 1, %if.end47 ], [ 0, %cond.end ], [ 0, %entry ], [ 0, %if.then17 ], !dbg !5050
  ret i8 %retval.0, !dbg !5068
}

declare dso_local i32 @ds_weak(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @rtx_ok_for_substitution_p(%struct.rtx_def* %what, %struct.rtx_def* %where) unnamed_addr #5 !dbg !5069 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %what, metadata !5073, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata %struct.rtx_def* %where, metadata !5074, metadata !DIExpression()), !dbg !5075
  %call = tail call fastcc i32 @count_occurrences_equiv(%struct.rtx_def* %what, %struct.rtx_def* %where) #7, !dbg !5076
  %cmp = icmp sgt i32 %call, 0, !dbg !5077
  %conv1 = zext i1 %cmp to i8, !dbg !5078
  ret i8 %conv1, !dbg !5079
}

declare dso_local %struct.rtx_def* @create_copy_of_insn_rtx(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @validate_replace_rtx_part_nosimplify(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @expr_dest_regno(%struct._expr*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @count_occurrences_equiv(%struct.rtx_def* %what, %struct.rtx_def* %where) unnamed_addr #5 !dbg !5080 {
entry:
  %where.addr = alloca %struct.rtx_def*, align 8
  %arg = alloca %struct.rtx_search_arg, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %what, metadata !5084, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %where, metadata !5085, metadata !DIExpression()), !dbg !5087
  store %struct.rtx_def* %where, %struct.rtx_def** %where.addr, align 8
  %0 = bitcast %struct.rtx_search_arg* %arg to i8*, !dbg !5088
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5088
  %x = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %arg, i64 0, i32 0, !dbg !5089
  store %struct.rtx_def* %what, %struct.rtx_def** %x, align 8, !dbg !5090
  %n = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %arg, i64 0, i32 1, !dbg !5091
  store i32 0, i32* %n, align 8, !dbg !5092
  call void @llvm.dbg.value(metadata %struct.rtx_def** %where.addr, metadata !5085, metadata !DIExpression(DW_OP_deref)), !dbg !5087
  %call = call i32 @for_each_rtx(%struct.rtx_def** nonnull %where.addr, i32 (%struct.rtx_def**, i8*)* nonnull @count_occurrences_1, i8* nonnull %0) #6, !dbg !5093
  %1 = load i32, i32* %n, align 8, !dbg !5094
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5095
  ret i32 %1, !dbg !5096
}

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @count_occurrences_1(%struct.rtx_def** %cur_rtx, i8* %arg) #5 !dbg !5097 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %cur_rtx, metadata !5101, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i8* %arg, metadata !5102, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i8* %arg, metadata !5103, metadata !DIExpression()), !dbg !5104
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cur_rtx, align 8, !dbg !5105
  %x = bitcast i8* %arg to %struct.rtx_def**, !dbg !5107
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5107
  %call = tail call i32 @exp_equiv_p(%struct.rtx_def* %0, %struct.rtx_def* %1, i32 0, i8 zeroext 1) #6, !dbg !5108
  %tobool = icmp eq i32 %call, 0, !dbg !5108
  %2 = bitcast %struct.rtx_def** %cur_rtx to i32**, !dbg !5104
  %3 = load i32*, i32** %2, align 8, !dbg !5104
  %bf.load = load i32, i32* %3, align 8, !dbg !5104
  %bf.clear = and i32 %bf.load, 65535, !dbg !5104
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !5109
  br i1 %tobool, label %if.end13, label %if.then, !dbg !5109

if.then:                                          ; preds = %entry
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5110
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5113

land.lhs.true:                                    ; preds = %if.then
  %call1 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %4) #7, !dbg !5114
  %cmp2 = icmp ult i32 %call1, 53, !dbg !5114
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !5115

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %cur_rtx, align 8, !dbg !5116
  %call4 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !5116
  %idxprom = zext i32 %call4 to i64, !dbg !5117
  %6 = load i32*, i32** %2, align 8, !dbg !5118
  %bf.load5 = load i32, i32* %6, align 8, !dbg !5118
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !5118
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !5118
  %idxprom7 = zext i32 %bf.clear6 to i64, !dbg !5117
  %arrayidx8 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom7, !dbg !5117
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !5117
  %cmp9 = icmp ugt i8 %7, 1, !dbg !5119
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !5120

if.then11:                                        ; preds = %land.lhs.true3
  %n = getelementptr inbounds i8, i8* %arg, i64 8, !dbg !5121
  %8 = bitcast i8* %n to i32*, !dbg !5121
  store i32 0, i32* %8, align 8, !dbg !5123
  br label %cleanup, !dbg !5124

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %if.then
  %n12 = getelementptr inbounds i8, i8* %arg, i64 8, !dbg !5125
  %9 = bitcast i8* %n12 to i32*, !dbg !5125
  %10 = load i32, i32* %9, align 8, !dbg !5126
  %inc = add nsw i32 %10, 1, !dbg !5126
  store i32 %inc, i32* %9, align 8, !dbg !5126
  br label %cleanup, !dbg !5127

if.end13:                                         ; preds = %entry
  %cmp16 = icmp eq i32 %bf.clear, 39, !dbg !5128
  br i1 %cmp16, label %land.lhs.true18, label %cleanup, !dbg !5130

land.lhs.true18:                                  ; preds = %if.end13
  %11 = bitcast i8* %arg to i32**, !dbg !5131
  %12 = load i32*, i32** %11, align 8, !dbg !5131
  %bf.load20 = load i32, i32* %12, align 8, !dbg !5131
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !5131
  %cmp22 = icmp eq i32 %bf.clear21, 37, !dbg !5131
  br i1 %cmp22, label %land.lhs.true24, label %cleanup, !dbg !5132

land.lhs.true24:                                  ; preds = %land.lhs.true18
  %arrayidx25 = getelementptr inbounds i32, i32* %3, i64 2, !dbg !5133
  %rt_rtx = bitcast i32* %arrayidx25 to %struct.rtx_def**, !dbg !5133
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5133
  %call26 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %13) #7, !dbg !5133
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5134
  %call28 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %14) #7, !dbg !5134
  %cmp29 = icmp eq i32 %call26, %call28, !dbg !5135
  br i1 %cmp29, label %if.then31, label %cleanup, !dbg !5136

if.then31:                                        ; preds = %land.lhs.true24
  %n32 = getelementptr inbounds i8, i8* %arg, i64 8, !dbg !5137
  %15 = bitcast i8* %n32 to i32*, !dbg !5137
  store i32 0, i32* %15, align 8, !dbg !5139
  br label %cleanup, !dbg !5140

cleanup:                                          ; preds = %if.end13, %land.lhs.true18, %land.lhs.true24, %if.then31, %if.end, %if.then11
  %retval.0 = phi i32 [ 1, %if.then11 ], [ -1, %if.end ], [ 1, %if.then31 ], [ 0, %land.lhs.true24 ], [ 0, %land.lhs.true18 ], [ 0, %if.end13 ], !dbg !5104
  ret i32 %retval.0, !dbg !5141
}

declare dso_local i32 @exp_equiv_p(%struct.rtx_def*, %struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @sel_num_cfg_preds_gt_1(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @generate_bookkeeping_insn(%struct._expr* %c_expr, %struct.edge_def* %e1, %struct.edge_def* %e2) unnamed_addr #5 !dbg !5142 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %c_expr, metadata !5146, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !5147, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2, metadata !5148, metadata !DIExpression()), !dbg !5160
  %0 = load i32, i32* @sched_verbose, align 4, !dbg !5161
  %cmp = icmp sgt i32 %0, 3, !dbg !5162
  br i1 %cmp, label %do.body, label %if.end19, !dbg !5163

do.body:                                          ; preds = %entry
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5164
  %tobool = icmp eq i8 %1, 0, !dbg !5164
  br i1 %tobool, label %if.else, label %do.body2, !dbg !5165

do.body2:                                         ; preds = %do.body
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 0, !dbg !5166
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5166
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !5166
  %3 = load i32, i32* %index, align 8, !dbg !5166
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e2, i64 0, i32 1, !dbg !5166
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5166
  %index3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 9, !dbg !5166
  %5 = load i32, i32* %index3, align 8, !dbg !5166
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0), i32 %3, i32 %5) #6, !dbg !5166
  %mul = shl nsw i32 %call, 1, !dbg !5166
  %add = or i32 %mul, 1, !dbg !5166
  call void @llvm.dbg.value(metadata i32 %add, metadata !5154, metadata !DIExpression()), !dbg !5167
  %conv = sext i32 %add to i64, !dbg !5166
  %6 = alloca i8, i64 %conv, align 16, !dbg !5166
  call void @llvm.dbg.value(metadata i8* %6, metadata !5159, metadata !DIExpression()), !dbg !5167
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5166
  %index7 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 9, !dbg !5166
  %8 = load i32, i32* %index7, align 8, !dbg !5166
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5166
  %index9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 9, !dbg !5166
  %10 = load i32, i32* %index9, align 8, !dbg !5166
  %call10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 %conv, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0), i32 %8, i32 %10) #6, !dbg !5166
  call void @sel_prepare_string_for_dot_label(i8* nonnull %6) #6, !dbg !5166
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5166
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %6) #6, !dbg !5166
  br label %if.end19, !dbg !5166

if.else:                                          ; preds = %do.body
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5164
  %src12 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 0, !dbg !5164
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %src12, align 8, !dbg !5164
  %index13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i64 0, i32 9, !dbg !5164
  %14 = load i32, i32* %index13, align 8, !dbg !5164
  %dest14 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e2, i64 0, i32 1, !dbg !5164
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest14, align 8, !dbg !5164
  %index15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 9, !dbg !5164
  %16 = load i32, i32* %index15, align 8, !dbg !5164
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0), i32 %14, i32 %16) #6, !dbg !5164
  br label %if.end19

if.end19:                                         ; preds = %do.body2, %if.else, %entry
  %dest20 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e2, i64 0, i32 1, !dbg !5168
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest20, align 8, !dbg !5168
  %call21 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %17) #6, !dbg !5169
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !5149, metadata !DIExpression()), !dbg !5160
  %call22 = call fastcc %struct.rtx_def* @find_place_for_bookkeeping(%struct.edge_def* %e1, %struct.edge_def* %e2) #7, !dbg !5170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !5150, metadata !DIExpression()), !dbg !5160
  %tobool23 = icmp eq %struct.rtx_def* %call22, null, !dbg !5171
  br i1 %tobool23, label %cleanup, label %if.end25, !dbg !5173

if.end25:                                         ; preds = %if.end19
  %call26 = call fastcc i32 @find_seqno_for_bookkeeping(%struct.rtx_def* nonnull %call22, %struct.rtx_def* %call21) #7, !dbg !5174
  call void @llvm.dbg.value(metadata i32 %call26, metadata !5152, metadata !DIExpression()), !dbg !5160
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call22, i64 0, i32 1, i32 0, i32 1, !dbg !5175
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !5175
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5175
  %call27 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %18) #6, !dbg !5176
  call void @llvm.dbg.value(metadata i8 %call27, metadata !5153, metadata !DIExpression()), !dbg !5160
  %call28 = call fastcc %struct.rtx_def* @emit_bookkeeping_insn(%struct.rtx_def* nonnull %call22, %struct._expr* %c_expr, i32 %call26) #7, !dbg !5177
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !5151, metadata !DIExpression()), !dbg !5160
  %tobool29 = icmp eq i8 %call27, 0, !dbg !5178
  br i1 %tobool29, label %if.end25.if.end39_crit_edge, label %if.then30, !dbg !5180

if.end25.if.end39_crit_edge:                      ; preds = %if.end25
  br label %if.end39, !dbg !5180

if.then30:                                        ; preds = %if.end25
  %arrayidx33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 1, i32 0, i32 1, !dbg !5181
  %rt_bb34 = bitcast %struct.object_block** %arrayidx33 to %struct.basic_block_def**, !dbg !5181
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb34, align 8, !dbg !5181
  %arrayidx37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call21, i64 0, i32 1, i32 0, i32 1, !dbg !5182
  %rt_bb38 = bitcast %struct.object_block** %arrayidx37 to %struct.basic_block_def**, !dbg !5182
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb38, align 8, !dbg !5182
  call void @exchange_data_sets(%struct.basic_block_def* %19, %struct.basic_block_def* %20) #6, !dbg !5183
  br label %if.end39, !dbg !5183

if.end39:                                         ; preds = %if.end25.if.end39_crit_edge, %if.then30
  %21 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !5184
  %inc = add nsw i32 %21, 1, !dbg !5184
  store i32 %inc, i32* @stat_bookkeeping_copies, align 4, !dbg !5184
  %arrayidx42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 1, i32 0, i32 1, !dbg !5185
  %rt_bb43 = bitcast %struct.object_block** %arrayidx42 to %struct.basic_block_def**, !dbg !5185
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb43, align 8, !dbg !5185
  br label %cleanup, !dbg !5186

cleanup:                                          ; preds = %if.end19, %if.end39
  %retval.0 = phi %struct.basic_block_def* [ %22, %if.end39 ], [ null, %if.end19 ], !dbg !5160
  ret %struct.basic_block_def* %retval.0, !dbg !5187
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_data_sets(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !5188 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5190, metadata !DIExpression()), !dbg !5191
  tail call fastcc void @update_liveness_on_insn(%struct.rtx_def* %insn) #7, !dbg !5192
  %call = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #6, !dbg !5193
  %tobool = icmp eq i8 %call, 0, !dbg !5193
  br i1 %tobool, label %if.end, label %if.then, !dbg !5195

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @get_av_level(%struct.rtx_def* %insn) #6, !dbg !5196
  %cmp = icmp eq i32 %call1, 0, !dbg !5196
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5196

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3163, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5196
  br label %cond.end, !dbg !5196

cond.end:                                         ; preds = %if.then, %cond.true
  %0 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5198
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %0, i64 0, i32 0, !dbg !5198
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !5198
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !5198
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5198
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !5198
  %2 = load i32, i32* %index, align 8, !dbg !5198
  %call7 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %2) #7, !dbg !5198
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call7, i64 0, i32 2, !dbg !5198
  store i32 -1, i32* %av_level, align 8, !dbg !5199
  %call8 = tail call fastcc %struct._list_node* @compute_av_set(%struct.rtx_def* %insn, %struct._list_node* null, i32 0, i8 zeroext 0) #7, !dbg !5200
  br label %if.end, !dbg !5201

if.end:                                           ; preds = %entry, %cond.end
  ret void, !dbg !5202
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_and_record_unavailable_insns(%struct.basic_block_def* %book_block) unnamed_addr #5 !dbg !5203 {
entry:
  %i = alloca %struct._list_iterator, align 8
  %old_av_set = alloca %struct._list_node*, align 8
  %cur_expr = alloca %struct._expr*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %book_block, metadata !5207, metadata !DIExpression()), !dbg !5218
  %0 = bitcast %struct._list_iterator* %i to i8*, !dbg !5219
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5219
  %1 = bitcast %struct._list_node** %old_av_set to i8*, !dbg !5220
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5220
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !5209, metadata !DIExpression()), !dbg !5218
  store %struct._list_node* null, %struct._list_node** %old_av_set, align 8, !dbg !5221
  %2 = bitcast %struct._expr** %cur_expr to i8*, !dbg !5222
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5222
  %call = tail call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %book_block) #6, !dbg !5223
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5211, metadata !DIExpression()), !dbg !5218
  tail call fastcc void @update_liveness_on_insn(%struct.rtx_def* %call) #7, !dbg !5224
  %call1 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %call) #6, !dbg !5225
  %tobool = icmp eq i8 %call1, 0, !dbg !5225
  br i1 %tobool, label %if.end, label %if.then, !dbg !5227

if.then:                                          ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5228
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !5228
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5228
  tail call fastcc void @update_liveness_on_insn(%struct.rtx_def* %4) #7, !dbg !5229
  br label %if.end, !dbg !5229

if.end:                                           ; preds = %entry, %if.then
  %call2 = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %book_block) #6, !dbg !5230
  %call3 = tail call i32 @get_av_level(%struct.rtx_def* %call2) #6, !dbg !5230
  %5 = load i32, i32* @global_level, align 4, !dbg !5230
  %cmp = icmp eq i32 %call3, %5, !dbg !5230
  br i1 %cmp, label %if.then4, label %if.end28, !dbg !5231

if.then4:                                         ; preds = %if.end
  %6 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5232
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %6, i64 0, i32 0, !dbg !5232
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %book_block, i64 0, i32 9, !dbg !5232
  %7 = load i32, i32* %index, align 8, !dbg !5232
  %call6 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %7) #7, !dbg !5232
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call6, i64 0, i32 1, !dbg !5232
  %8 = load %struct._list_node*, %struct._list_node** %av_set, align 8, !dbg !5232
  %call7 = tail call %struct._list_node* @av_set_copy(%struct._list_node* %8) #6, !dbg !5233
  call void @llvm.dbg.value(metadata %struct._list_node* %call7, metadata !5209, metadata !DIExpression()), !dbg !5218
  store %struct._list_node* %call7, %struct._list_node** %old_av_set, align 8, !dbg !5234
  %call8 = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %book_block) #6, !dbg !5235
  tail call fastcc void @update_data_sets(%struct.rtx_def* %call8) #7, !dbg !5236
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5208, metadata !DIExpression(DW_OP_deref)), !dbg !5218
  call void @llvm.dbg.value(metadata %struct._list_node** %old_av_set, metadata !5209, metadata !DIExpression(DW_OP_deref)), !dbg !5218
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** nonnull %old_av_set, i8 zeroext 0) #7, !dbg !5237
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !5238
  br label %for.cond, !dbg !5237

for.cond:                                         ; preds = %for.inc, %if.then4
  %9 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5239
  %10 = load %struct._list_node*, %struct._list_node** %9, align 8, !dbg !5239
  call void @llvm.dbg.value(metadata %struct._expr** %cur_expr, metadata !5210, metadata !DIExpression(DW_OP_deref)), !dbg !5218
  %call9 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %10, %struct._expr** nonnull %cur_expr) #7, !dbg !5239
  %tobool10 = icmp eq i8 %call9, 0, !dbg !5237
  br i1 %tobool10, label %for.end, label %for.body, !dbg !5237

for.body:                                         ; preds = %for.cond
  %11 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5240
  %base13 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %11, i64 0, i32 0, !dbg !5240
  %12 = load i32, i32* %index, align 8, !dbg !5240
  %call18 = call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base13, i32 %12) #7, !dbg !5240
  %av_set19 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call18, i64 0, i32 1, !dbg !5240
  %13 = load %struct._list_node*, %struct._list_node** %av_set19, align 8, !dbg !5240
  %14 = load %struct._expr*, %struct._expr** %cur_expr, align 8, !dbg !5241
  call void @llvm.dbg.value(metadata %struct._expr* %14, metadata !5210, metadata !DIExpression()), !dbg !5218
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %14, i64 0, i32 0, !dbg !5241
  %15 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5241
  %call20 = call %struct._expr* @av_set_lookup(%struct._list_node* %13, %struct.vinsn_def* %15) #6, !dbg !5242
  call void @llvm.dbg.value(metadata %struct._expr* %call20, metadata !5212, metadata !DIExpression()), !dbg !5243
  %tobool21 = icmp eq %struct._expr* %call20, null, !dbg !5244
  br i1 %tobool21, label %for.body.if.then26_crit_edge, label %lor.lhs.false, !dbg !5246

for.body.if.then26_crit_edge:                     ; preds = %for.body
  %.pre = load %struct._expr*, %struct._expr** %cur_expr, align 8, !dbg !5247
  br label %if.then26, !dbg !5246

lor.lhs.false:                                    ; preds = %for.body
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %call20, i64 0, i32 11, !dbg !5248
  %16 = load i8, i8* %target_available, align 8, !dbg !5248
  %17 = load %struct._expr*, %struct._expr** %cur_expr, align 8, !dbg !5249
  call void @llvm.dbg.value(metadata %struct._expr* %17, metadata !5210, metadata !DIExpression()), !dbg !5218
  %target_available22 = getelementptr inbounds %struct._expr, %struct._expr* %17, i64 0, i32 11, !dbg !5249
  %18 = load i8, i8* %target_available22, align 8, !dbg !5249
  %cmp24 = icmp eq i8 %16, %18, !dbg !5250
  br i1 %cmp24, label %for.inc, label %if.then26, !dbg !5251

if.then26:                                        ; preds = %for.body.if.then26_crit_edge, %lor.lhs.false
  %19 = phi %struct._expr* [ %.pre, %for.body.if.then26_crit_edge ], [ %17, %lor.lhs.false ], !dbg !5247
  call void @llvm.dbg.value(metadata %struct._expr* %19, metadata !5210, metadata !DIExpression()), !dbg !5218
  call fastcc void @vinsn_vec_add(%struct.VEC_vinsn_t_heap** nonnull @vec_bookkeeping_blocked_vinsns, %struct._expr* %19) #7, !dbg !5252
  br label %for.inc, !dbg !5252

for.inc:                                          ; preds = %lor.lhs.false, %if.then26
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !5208, metadata !DIExpression(DW_OP_deref)), !dbg !5218
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #7, !dbg !5239
  br label %for.cond, !dbg !5239, !llvm.loop !5253

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct._list_node** %old_av_set, metadata !5209, metadata !DIExpression(DW_OP_deref)), !dbg !5218
  call void @av_set_clear(%struct._list_node** nonnull %old_av_set) #6, !dbg !5255
  br label %if.end28, !dbg !5256

if.end28:                                         ; preds = %for.end, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5257
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5257
  ret void, !dbg !5257
}

declare dso_local zeroext i8 @tidy_control_flow(%struct.basic_block_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @find_place_for_bookkeeping(%struct.edge_def* %e1, %struct.edge_def* %e2) unnamed_addr #5 !dbg !5258 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !5262, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2, metadata !5263, metadata !DIExpression()), !dbg !5286
  %call = tail call fastcc %struct.basic_block_def* @find_block_for_bookkeeping(%struct.edge_def* %e1, %struct.edge_def* %e2, i8 zeroext 0) #7, !dbg !5287
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5265, metadata !DIExpression()), !dbg !5286
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !5288
  br i1 %tobool, label %if.end13, label %if.then, !dbg !5289

if.then:                                          ; preds = %entry
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !5290
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5290
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5290
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !5290
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5290
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5264, metadata !DIExpression()), !dbg !5286
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5291
  %bf.load = load i32, i32* %2, align 8, !dbg !5291
  %bf.clear = and i32 %bf.load, 65535, !dbg !5291
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !5291
  br i1 %cmp, label %if.then1, label %if.end13, !dbg !5292

if.then1:                                         ; preds = %if.then
  %call2 = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* nonnull %call) #6, !dbg !5293
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !5266, metadata !DIExpression()), !dbg !5294
  br label %while.cond, !dbg !5295

while.cond:                                       ; preds = %while.body, %if.then1
  %insn.0 = phi %struct.rtx_def* [ %call2, %if.then1 ], [ %5, %while.body ], !dbg !5294
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5266, metadata !DIExpression()), !dbg !5294
  %cmp3 = icmp eq %struct.rtx_def* %insn.0, %1, !dbg !5296
  br i1 %cmp3, label %while.end, label %land.rhs, !dbg !5297

land.rhs:                                         ; preds = %while.cond
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5298
  %bf.load4 = load i32, i32* %3, align 8, !dbg !5298
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !5298
  %cmp6 = icmp eq i32 %bf.clear5, 7, !dbg !5298
  %cmp9 = icmp eq i32 %bf.clear5, 13, !dbg !5299
  %or.cond = or i1 %cmp6, %cmp9, !dbg !5300
  br i1 %or.cond, label %while.body, label %while.end, !dbg !5300

while.body:                                       ; preds = %land.rhs
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5301
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !5301
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5301
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5266, metadata !DIExpression()), !dbg !5294
  br label %while.cond, !dbg !5295, !llvm.loop !5302

while.end:                                        ; preds = %land.rhs, %while.cond
  %cmp3.lcssa = phi i1 [ %cmp3, %land.rhs ], [ %cmp3, %while.cond ], !dbg !5296
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5266, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5266, metadata !DIExpression()), !dbg !5294
  %spec.select = select i1 %cmp3.lcssa, %struct.basic_block_def* null, %struct.basic_block_def* %call, !dbg !5303
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %spec.select, metadata !5265, metadata !DIExpression()), !dbg !5286
  br label %if.end13, !dbg !5304

if.end13:                                         ; preds = %entry, %if.then, %while.end
  %place_to_insert.0 = phi %struct.rtx_def* [ undef, %entry ], [ %1, %while.end ], [ %1, %if.then ]
  %book_block.2 = phi %struct.basic_block_def* [ null, %entry ], [ %spec.select, %while.end ], [ %call, %if.then ], !dbg !5286
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %book_block.2, metadata !5265, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata %struct.rtx_def* %place_to_insert.0, metadata !5264, metadata !DIExpression()), !dbg !5286
  %tobool14 = icmp eq %struct.basic_block_def* %book_block.2, null, !dbg !5305
  br i1 %tobool14, label %if.then15, label %if.else63, !dbg !5306

if.then15:                                        ; preds = %if.end13
  %call16 = tail call fastcc %struct.basic_block_def* @create_block_for_bookkeeping(%struct.edge_def* %e1, %struct.edge_def* %e2) #7, !dbg !5307
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call16, metadata !5265, metadata !DIExpression()), !dbg !5286
  %il17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call16, i64 0, i32 7, !dbg !5308
  %rtl18 = bitcast %union.basic_block_il_dependent* %il17 to %struct.rtl_bb_info**, !dbg !5308
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl18, align 8, !dbg !5308
  %end_19 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !5308
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_19, align 8, !dbg !5308
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !5264, metadata !DIExpression()), !dbg !5286
  %8 = load i32, i32* @sched_verbose, align 4, !dbg !5309
  %cmp20 = icmp sgt i32 %8, 8, !dbg !5310
  br i1 %cmp20, label %do.body, label %if.end92, !dbg !5311

do.body:                                          ; preds = %if.then15
  %9 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5312
  %tobool22 = icmp eq i8 %9, 0, !dbg !5312
  br i1 %tobool22, label %if.else, label %do.body24, !dbg !5313

do.body24:                                        ; preds = %do.body
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call16, i64 0, i32 1, !dbg !5314
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5314
  %tobool25 = icmp eq %struct.VEC_edge_gc* %10, null, !dbg !5314
  br i1 %tobool25, label %cond.end, label %cond.true, !dbg !5314

cond.true:                                        ; preds = %do.body24
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i64 0, i32 0, !dbg !5314
  br label %cond.end, !dbg !5314

cond.end:                                         ; preds = %do.body24, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %do.body24 ], !dbg !5314
  %call27 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #7, !dbg !5314
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call27, i64 0, i32 1, !dbg !5314
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5314
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 9, !dbg !5314
  %12 = load i32, i32* %index, align 8, !dbg !5314
  %index28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call16, i64 0, i32 9, !dbg !5314
  %13 = load i32, i32* %index28, align 8, !dbg !5314
  %call29 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.26, i64 0, i64 0), i32 %12, i32 %13) #6, !dbg !5314
  %mul = shl nsw i32 %call29, 1, !dbg !5314
  %add = or i32 %mul, 1, !dbg !5314
  call void @llvm.dbg.value(metadata i32 %add, metadata !5271, metadata !DIExpression()), !dbg !5315
  %conv = sext i32 %add to i64, !dbg !5314
  %14 = alloca i8, i64 %conv, align 16, !dbg !5314
  call void @llvm.dbg.value(metadata i8* %14, metadata !5278, metadata !DIExpression()), !dbg !5315
  %15 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5314
  %tobool33 = icmp eq %struct.VEC_edge_gc* %15, null, !dbg !5314
  br i1 %tobool33, label %cond.end38, label %cond.true34, !dbg !5314

cond.true34:                                      ; preds = %cond.end
  %base36 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %15, i64 0, i32 0, !dbg !5314
  br label %cond.end38, !dbg !5314

cond.end38:                                       ; preds = %cond.end, %cond.true34
  %cond39 = phi %struct.VEC_edge_base* [ %base36, %cond.true34 ], [ null, %cond.end ], !dbg !5314
  %call40 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond39, i32 0) #7, !dbg !5314
  %dest41 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call40, i64 0, i32 1, !dbg !5314
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest41, align 8, !dbg !5314
  %index42 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 9, !dbg !5314
  %17 = load i32, i32* %index42, align 8, !dbg !5314
  %18 = load i32, i32* %index28, align 8, !dbg !5314
  %call44 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %14, i64 %conv, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.26, i64 0, i64 0), i32 %17, i32 %18) #6, !dbg !5314
  call void @sel_prepare_string_for_dot_label(i8* nonnull %14) #6, !dbg !5314
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5314
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %14) #6, !dbg !5314
  br label %if.end92, !dbg !5314

if.else:                                          ; preds = %do.body
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5312
  %succs46 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call16, i64 0, i32 1, !dbg !5312
  %21 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs46, align 8, !dbg !5312
  %tobool47 = icmp eq %struct.VEC_edge_gc* %21, null, !dbg !5312
  br i1 %tobool47, label %cond.end52, label %cond.true48, !dbg !5312

cond.true48:                                      ; preds = %if.else
  %base50 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %21, i64 0, i32 0, !dbg !5312
  br label %cond.end52, !dbg !5312

cond.end52:                                       ; preds = %if.else, %cond.true48
  %cond53 = phi %struct.VEC_edge_base* [ %base50, %cond.true48 ], [ null, %if.else ], !dbg !5312
  %call54 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond53, i32 0) #7, !dbg !5312
  %dest55 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call54, i64 0, i32 1, !dbg !5312
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %dest55, align 8, !dbg !5312
  %index56 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 9, !dbg !5312
  %23 = load i32, i32* %index56, align 8, !dbg !5312
  %index57 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call16, i64 0, i32 9, !dbg !5312
  %24 = load i32, i32* %index57, align 8, !dbg !5312
  %call58 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.26, i64 0, i64 0), i32 %23, i32 %24) #6, !dbg !5312
  br label %if.end92

if.else63:                                        ; preds = %if.end13
  %25 = load i32, i32* @sched_verbose, align 4, !dbg !5316
  %cmp64 = icmp sgt i32 %25, 8, !dbg !5317
  br i1 %cmp64, label %do.body67, label %if.end92, !dbg !5318

do.body67:                                        ; preds = %if.else63
  %26 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5319
  %tobool68 = icmp eq i8 %26, 0, !dbg !5319
  br i1 %tobool68, label %if.else85, label %do.body70, !dbg !5320

do.body70:                                        ; preds = %do.body67
  %index72 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %book_block.2, i64 0, i32 9, !dbg !5321
  %27 = load i32, i32* %index72, align 8, !dbg !5321
  %call73 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0), i32 %27) #6, !dbg !5321
  %mul74 = shl nsw i32 %call73, 1, !dbg !5321
  %add75 = or i32 %mul74, 1, !dbg !5321
  call void @llvm.dbg.value(metadata i32 %add75, metadata !5279, metadata !DIExpression()), !dbg !5322
  %conv77 = sext i32 %add75 to i64, !dbg !5321
  %28 = alloca i8, i64 %conv77, align 16, !dbg !5321
  call void @llvm.dbg.value(metadata i8* %28, metadata !5285, metadata !DIExpression()), !dbg !5322
  %29 = load i32, i32* %index72, align 8, !dbg !5321
  %call81 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %28, i64 %conv77, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0), i32 %29) #6, !dbg !5321
  call void @sel_prepare_string_for_dot_label(i8* nonnull %28) #6, !dbg !5321
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5321
  %call82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %28) #6, !dbg !5321
  br label %if.end92, !dbg !5321

if.else85:                                        ; preds = %do.body67
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5319
  %index86 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %book_block.2, i64 0, i32 9, !dbg !5319
  %32 = load i32, i32* %index86, align 8, !dbg !5319
  %call87 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0), i32 %32) #6, !dbg !5319
  br label %if.end92

if.end92:                                         ; preds = %if.else63, %if.else85, %do.body70, %if.then15, %cond.end52, %cond.end38
  %place_to_insert.1 = phi %struct.rtx_def* [ %7, %cond.end38 ], [ %7, %cond.end52 ], [ %7, %if.then15 ], [ %place_to_insert.0, %do.body70 ], [ %place_to_insert.0, %if.else85 ], [ %place_to_insert.0, %if.else63 ], !dbg !5286
  call void @llvm.dbg.value(metadata %struct.rtx_def* %place_to_insert.1, metadata !5264, metadata !DIExpression()), !dbg !5286
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %place_to_insert.1, i64 0, i32 0, !dbg !5323
  %bf.load93 = load i32, i32* %33, align 8, !dbg !5323
  %bf.clear94 = and i32 %bf.load93, 65535, !dbg !5323
  %cmp95 = icmp eq i32 %bf.clear94, 8, !dbg !5323
  br i1 %cmp95, label %land.lhs.true, label %lor.lhs.false, !dbg !5323

lor.lhs.false:                                    ; preds = %if.end92
  %cmp99 = icmp eq i32 %bf.clear94, 7, !dbg !5323
  br i1 %cmp99, label %land.lhs.true, label %lor.lhs.false101, !dbg !5323

lor.lhs.false101:                                 ; preds = %lor.lhs.false
  %cmp104 = icmp eq i32 %bf.clear94, 9, !dbg !5323
  br i1 %cmp104, label %land.lhs.true, label %lor.lhs.false106, !dbg !5323

lor.lhs.false106:                                 ; preds = %lor.lhs.false101
  %cmp109 = icmp eq i32 %bf.clear94, 10, !dbg !5323
  br i1 %cmp109, label %land.lhs.true, label %if.end119, !dbg !5325

land.lhs.true:                                    ; preds = %lor.lhs.false106, %lor.lhs.false101, %lor.lhs.false, %if.end92
  %call111 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %place_to_insert.1) #6, !dbg !5326
  %tobool113 = icmp eq i8 %call111, 0, !dbg !5326
  br i1 %tobool113, label %if.end119, label %if.then114, !dbg !5327

if.then114:                                       ; preds = %land.lhs.true
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %place_to_insert.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5328
  %rt_rtx118 = bitcast %union.rtunion_def* %34 to %struct.rtx_def**, !dbg !5328
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx118, align 8, !dbg !5328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %35, metadata !5264, metadata !DIExpression()), !dbg !5286
  br label %if.end119, !dbg !5329

if.end119:                                        ; preds = %land.lhs.true, %if.then114, %lor.lhs.false106
  %place_to_insert.2 = phi %struct.rtx_def* [ %35, %if.then114 ], [ %place_to_insert.1, %land.lhs.true ], [ %place_to_insert.1, %lor.lhs.false106 ], !dbg !5286
  call void @llvm.dbg.value(metadata %struct.rtx_def* %place_to_insert.2, metadata !5264, metadata !DIExpression()), !dbg !5286
  ret %struct.rtx_def* %place_to_insert.2, !dbg !5330
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_seqno_for_bookkeeping(%struct.rtx_def* %place_to_insert, %struct.rtx_def* %join_point) unnamed_addr #5 !dbg !5331 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %place_to_insert, metadata !5335, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata %struct.rtx_def* %join_point, metadata !5336, metadata !DIExpression()), !dbg !5339
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %place_to_insert, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5340
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5340
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5340
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5338, metadata !DIExpression()), !dbg !5339
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5341
  %bf.load = load i32, i32* %2, align 8, !dbg !5341
  %bf.clear = and i32 %bf.load, 65535, !dbg !5341
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5341
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5341

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !5341
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !5341

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !5341
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !5341

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5341
  br i1 %cmp11, label %land.lhs.true, label %if.else, !dbg !5343

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %cmp14 = icmp eq i32 %bf.clear, 9, !dbg !5344
  br i1 %cmp14, label %land.lhs.true15, label %if.else, !dbg !5345

land.lhs.true15:                                  ; preds = %land.lhs.true
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 1, !dbg !5346
  %rt_bb = bitcast %struct.object_block** %arrayidx18 to %struct.basic_block_def**, !dbg !5346
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5346
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %place_to_insert, i64 0, i32 1, i32 0, i32 1, !dbg !5347
  %rt_bb22 = bitcast %struct.object_block** %arrayidx21 to %struct.basic_block_def**, !dbg !5347
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb22, align 8, !dbg !5347
  %cmp23 = icmp eq %struct.basic_block_def* %3, %4, !dbg !5348
  br i1 %cmp23, label %if.then, label %if.else, !dbg !5349

if.then:                                          ; preds = %land.lhs.true15
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5350
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i64 0, i32 0, !dbg !5350
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5350
  %base26 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !5350
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5350
  %rt_int = bitcast %union.rtunion_def* %arrayidx32 to i32*, !dbg !5350
  %7 = load i32, i32* %rt_int, align 8, !dbg !5350
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base26, i32 %7) #7, !dbg !5350
  %call33 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !5350
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call33, i64 0, i32 0, i32 5, !dbg !5350
  %8 = load i32, i32* %sched_times, align 8, !dbg !5350
  %cmp34 = icmp eq i32 %8, 0, !dbg !5350
  br i1 %cmp34, label %cond.end37, label %cond.true35, !dbg !5350

cond.true35:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4740, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5350
  br label %cond.end37, !dbg !5350

cond.end37:                                       ; preds = %if.then, %cond.true35
  %9 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5352
  %base41 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %9, i64 0, i32 0, !dbg !5352
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5352
  %base47 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !5352
  %11 = load i32, i32* %rt_int, align 8, !dbg !5352
  %call55 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base47, i32 %11) #7, !dbg !5352
  %call56 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base41, i32 %call55) #7, !dbg !5352
  %seqno57 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call56, i64 0, i32 2, !dbg !5352
  %12 = load i32, i32* %seqno57, align 4, !dbg !5352
  call void @llvm.dbg.value(metadata i32 %12, metadata !5337, metadata !DIExpression()), !dbg !5339
  br label %if.end108, !dbg !5353

if.else:                                          ; preds = %land.lhs.true15, %land.lhs.true, %lor.lhs.false8
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5354
  %base60 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %13, i64 0, i32 0, !dbg !5354
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5354
  %base66 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !5354
  %arrayidx72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %join_point, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5354
  %rt_int73 = bitcast %union.rtunion_def* %arrayidx72 to i32*, !dbg !5354
  %15 = load i32, i32* %rt_int73, align 8, !dbg !5354
  %call74 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base66, i32 %15) #7, !dbg !5354
  %call75 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base60, i32 %call74) #7, !dbg !5354
  %seqno76 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call75, i64 0, i32 2, !dbg !5354
  %16 = load i32, i32* %seqno76, align 4, !dbg !5354
  %cmp77 = icmp sgt i32 %16, 0, !dbg !5356
  br i1 %cmp77, label %if.then78, label %if.else98, !dbg !5357

if.then78:                                        ; preds = %if.else
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5358
  %base81 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i64 0, i32 0, !dbg !5358
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5358
  %base87 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i64 0, i32 0, !dbg !5358
  %19 = load i32, i32* %rt_int73, align 8, !dbg !5358
  %call95 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base87, i32 %19) #7, !dbg !5358
  %call96 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base81, i32 %call95) #7, !dbg !5358
  %seqno97 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call96, i64 0, i32 2, !dbg !5358
  %20 = load i32, i32* %seqno97, align 4, !dbg !5358
  call void @llvm.dbg.value(metadata i32 %20, metadata !5337, metadata !DIExpression()), !dbg !5339
  br label %if.end108, !dbg !5359

if.else98:                                        ; preds = %if.else
  %call99 = tail call i32 @get_seqno_by_preds(%struct.rtx_def* %place_to_insert) #6, !dbg !5360
  call void @llvm.dbg.value(metadata i32 %call99, metadata !5337, metadata !DIExpression()), !dbg !5339
  %cmp100 = icmp slt i32 %call99, 0, !dbg !5362
  br i1 %cmp100, label %if.then101, label %if.end108, !dbg !5364

if.then101:                                       ; preds = %if.else98
  %21 = load i8, i8* @pipelining_p, align 1, !dbg !5365
  %tobool102 = icmp eq i8 %21, 0, !dbg !5365
  br i1 %tobool102, label %cond.true103, label %if.end108, !dbg !5365

cond.true103:                                     ; preds = %if.then101
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4756, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5365
  br label %if.end108, !dbg !5365

if.end108:                                        ; preds = %if.then101, %if.then78, %cond.true103, %if.else98, %cond.end37
  %seqno.2 = phi i32 [ %12, %cond.end37 ], [ %20, %if.then78 ], [ %call99, %if.else98 ], [ 1, %if.then101 ], [ 1, %cond.true103 ], !dbg !5367
  call void @llvm.dbg.value(metadata i32 %seqno.2, metadata !5337, metadata !DIExpression()), !dbg !5339
  %cmp109 = icmp sgt i32 %seqno.2, 0, !dbg !5368
  br i1 %cmp109, label %cond.end112, label %cond.true110, !dbg !5368

cond.true110:                                     ; preds = %if.end108
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4761, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5368
  br label %cond.end112, !dbg !5368

cond.end112:                                      ; preds = %if.end108, %cond.true110
  ret i32 %seqno.2, !dbg !5369
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_bookkeeping_insn(%struct.rtx_def* %place_to_insert, %struct._expr* %c_expr, i32 %new_seqno) unnamed_addr #5 !dbg !5370 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %place_to_insert, metadata !5374, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.value(metadata %struct._expr* %c_expr, metadata !5375, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.value(metadata i32 %new_seqno, metadata !5376, metadata !DIExpression()), !dbg !5380
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %c_expr, i64 0, i32 0, !dbg !5381
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5381
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !5381
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !5381
  %call = tail call %struct.rtx_def* @create_copy_of_insn_rtx(%struct.rtx_def* %1) #6, !dbg !5382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5377, metadata !DIExpression()), !dbg !5380
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5383
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %2, i64 0, i32 1, i32 0, !dbg !5383
  %3 = load i32, i32* %type, align 8, !dbg !5383
  %cmp = icmp eq i32 %3, 23, !dbg !5383
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5383

lor.rhs:                                          ; preds = %entry
  %cmp5 = icmp ne i32 %3, 24, !dbg !5383
  %phitmp = zext i1 %cmp5 to i8, !dbg !5383
  br label %lor.end, !dbg !5383

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i8 [ 0, %entry ], [ %phitmp, %lor.rhs ]
  %call6 = tail call %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def* %call, i8 zeroext %4) #6, !dbg !5384
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %call6, metadata !5378, metadata !DIExpression()), !dbg !5380
  %call7 = tail call fastcc %struct.rtx_def* @emit_insn_from_expr_after(%struct._expr* %c_expr, %struct.vinsn_def* %call6, i32 %new_seqno, %struct.rtx_def* %place_to_insert) #7, !dbg !5385
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !5379, metadata !DIExpression()), !dbg !5380
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5386
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i64 0, i32 0, !dbg !5386
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5386
  %base10 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !5386
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5386
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5386
  %7 = load i32, i32* %rt_int, align 8, !dbg !5386
  %call14 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base10, i32 %7) #7, !dbg !5386
  %call15 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call14) #7, !dbg !5386
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call15, i64 0, i32 0, i32 5, !dbg !5386
  store i32 0, i32* %sched_times, align 8, !dbg !5387
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !5388
  %9 = load i32, i32* %rt_int, align 8, !dbg !5389
  %call20 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %8, i32 %9) #6, !dbg !5390
  ret %struct.rtx_def* %call7, !dbg !5391
}

declare dso_local void @exchange_data_sets(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @create_block_for_bookkeeping(%struct.edge_def* %e1, %struct.edge_def* %e2) unnamed_addr #5 !dbg !5392 {
entry:
  %gbi = alloca %struct.sel_global_bb_info_def, align 8
  %rbi = alloca %struct.sel_region_bb_info_def, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !5396, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2, metadata !5397, metadata !DIExpression()), !dbg !5433
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e2, i64 0, i32 1, !dbg !5434
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5434
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5399, metadata !DIExpression()), !dbg !5433
  %1 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !5435
  %tobool = icmp eq %struct.loop* %1, null, !dbg !5435
  br i1 %tobool, label %if.end, label %if.then, !dbg !5436

if.then:                                          ; preds = %entry
  %latch1 = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 3, !dbg !5437
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %latch1, align 8, !dbg !5437
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !5400, metadata !DIExpression()), !dbg !5438
  %header = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 2, !dbg !5439
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !5439
  %cmp = icmp eq %struct.basic_block_def* %0, %3, !dbg !5439
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5439

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4548, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5439
  br label %cond.end, !dbg !5439

cond.end:                                         ; preds = %if.then, %cond.true
  %dest3 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 1, !dbg !5440
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest3, align 8, !dbg !5440
  %cmp4 = icmp eq %struct.basic_block_def* %4, %2, !dbg !5440
  br i1 %cmp4, label %lor.lhs.false, label %if.end, !dbg !5440

lor.lhs.false:                                    ; preds = %cond.end
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %2) #7, !dbg !5440
  %tobool5 = icmp eq i8 %call, 0, !dbg !5440
  br i1 %tobool5, label %if.end, label %lor.lhs.false6, !dbg !5440

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %call7 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %2) #7, !dbg !5440
  %cmp8 = icmp eq %struct.edge_def* %call7, %e1, !dbg !5440
  br i1 %cmp8, label %cond.true9, label %if.end, !dbg !5440

cond.true9:                                       ; preds = %lor.lhs.false6
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4553, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5440
  br label %if.end, !dbg !5440

if.end:                                           ; preds = %lor.lhs.false6, %lor.lhs.false, %cond.end, %entry, %cond.true9
  %5 = load %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** @sched_split_block, align 8, !dbg !5441
  %call13 = tail call %struct.basic_block_def* %5(%struct.basic_block_def* %0, %struct.rtx_def* null) #6, !dbg !5441
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call13, metadata !5398, metadata !DIExpression()), !dbg !5433
  %6 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5442
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %6, i64 0, i32 0, !dbg !5442
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call13, i64 0, i32 9, !dbg !5442
  %7 = load i32, i32* %index, align 8, !dbg !5442
  %call19 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %7) #7, !dbg !5442
  %note_list = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call19, i64 0, i32 0, !dbg !5442
  %8 = load %struct.rtx_def*, %struct.rtx_def** %note_list, align 8, !dbg !5442
  %cmp20 = icmp eq %struct.rtx_def* %8, null, !dbg !5442
  br i1 %cmp20, label %cond.end23, label %cond.true21, !dbg !5442

cond.true21:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4560, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5442
  br label %cond.end23, !dbg !5442

cond.end23:                                       ; preds = %if.end, %cond.true21
  %9 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5443
  %base27 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %9, i64 0, i32 0, !dbg !5443
  %index31 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !5443
  %10 = load i32, i32* %index31, align 8, !dbg !5443
  %call32 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base27, i32 %10) #7, !dbg !5443
  %11 = bitcast %struct.sel_region_bb_info_def* %call32 to i64*, !dbg !5443
  %12 = load i64, i64* %11, align 8, !dbg !5443
  %13 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5444
  %base36 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %13, i64 0, i32 0, !dbg !5444
  %14 = load i32, i32* %index, align 8, !dbg !5444
  %call41 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base36, i32 %14) #7, !dbg !5444
  %15 = bitcast %struct.sel_region_bb_info_def* %call41 to i64*, !dbg !5445
  store i64 %12, i64* %15, align 8, !dbg !5445
  %16 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5446
  %base45 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %16, i64 0, i32 0, !dbg !5446
  %17 = load i32, i32* %index31, align 8, !dbg !5446
  %call50 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base45, i32 %17) #7, !dbg !5446
  %note_list51 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call50, i64 0, i32 0, !dbg !5446
  store %struct.rtx_def* null, %struct.rtx_def** %note_list51, align 8, !dbg !5447
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5448
  %cmp53 = icmp eq %struct.basic_block_def* %18, %0, !dbg !5448
  br i1 %cmp53, label %cond.end56, label %cond.true54, !dbg !5448

cond.true54:                                      ; preds = %cond.end23
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4564, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5448
  br label %cond.end56, !dbg !5448

cond.end56:                                       ; preds = %cond.end23, %cond.true54
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 7, !dbg !5449
  %19 = load i32, i32* %flags, align 8, !dbg !5449
  %and = and i32 %19, 1, !dbg !5451
  %tobool58 = icmp eq i32 %and, 0, !dbg !5451
  br i1 %tobool58, label %if.else, label %if.then59, !dbg !5452

if.then59:                                        ; preds = %cond.end56
  tail call void @sel_redirect_edge_and_branch_force(%struct.edge_def* %e1, %struct.basic_block_def* %call13) #6, !dbg !5453
  br label %if.end61, !dbg !5453

if.else:                                          ; preds = %cond.end56
  %call60 = tail call zeroext i8 @sel_redirect_edge_and_branch(%struct.edge_def* %e1, %struct.basic_block_def* %call13) #6, !dbg !5454
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then59
  %dest62 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 1, !dbg !5455
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %dest62, align 8, !dbg !5455
  %cmp63 = icmp eq %struct.basic_block_def* %20, %call13, !dbg !5455
  br i1 %cmp63, label %cond.end66, label %cond.true64, !dbg !5455

cond.true64:                                      ; preds = %if.end61
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4572, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5455
  br label %cond.end66, !dbg !5455

cond.end66:                                       ; preds = %if.end61, %cond.true64
  %call68 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %0) #6, !dbg !5456
  %tobool69 = icmp eq i8 %call68, 0, !dbg !5456
  br i1 %tobool69, label %cond.true70, label %cond.end72, !dbg !5456

cond.true70:                                      ; preds = %cond.end66
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4573, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5456
  br label %cond.end72, !dbg !5456

cond.end72:                                       ; preds = %cond.end66, %cond.true70
  %21 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5457
  %tobool74 = icmp eq i32 %21, 0, !dbg !5457
  br i1 %tobool74, label %if.end533, label %if.then75, !dbg !5458

if.then75:                                        ; preds = %cond.end72
  %call76 = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %call13) #6, !dbg !5459
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call76, metadata !5406, metadata !DIExpression()), !dbg !5460
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call76, i64 0, i32 0, !dbg !5461
  %bf.load = load i32, i32* %22, align 8, !dbg !5461
  %bf.clear = and i32 %bf.load, 65535, !dbg !5461
  %cmp77 = icmp eq i32 %bf.clear, 7, !dbg !5461
  br i1 %cmp77, label %land.lhs.true, label %if.end533, !dbg !5462

land.lhs.true:                                    ; preds = %if.then75
  %call78 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %call13) #7, !dbg !5463
  %tobool79 = icmp eq i8 %call78, 0, !dbg !5463
  br i1 %tobool79, label %if.end533, label %land.lhs.true80, !dbg !5464

land.lhs.true80:                                  ; preds = %land.lhs.true
  %call81 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %call13) #7, !dbg !5465
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call81, metadata !5403, metadata !DIExpression()), !dbg !5460
  %tobool82 = icmp eq %struct.basic_block_def* %call81, null, !dbg !5466
  br i1 %tobool82, label %if.end533, label %land.lhs.true83, !dbg !5467

land.lhs.true83:                                  ; preds = %land.lhs.true80
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5468
  %cfg = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, i32 1, !dbg !5468
  %24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5468
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i64 0, i32 1, !dbg !5468
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5468
  %cmp84 = icmp eq %struct.basic_block_def* %call81, %25, !dbg !5469
  br i1 %cmp84, label %if.end533, label %land.lhs.true86, !dbg !5470

land.lhs.true86:                                  ; preds = %land.lhs.true83
  %call87 = tail call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %call13) #6, !dbg !5471
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call87, metadata !5407, metadata !DIExpression()), !dbg !5460
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call87, i64 0, i32 0, !dbg !5471
  %bf.load88 = load i32, i32* %26, align 8, !dbg !5471
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !5471
  %cmp90 = icmp eq i32 %bf.clear89, 7, !dbg !5471
  br i1 %cmp90, label %while.cond.preheader, label %if.end533, !dbg !5472

while.cond.preheader:                             ; preds = %land.lhs.true86
  br label %while.cond, !dbg !5473

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %insn.0 = phi %struct.rtx_def* [ %29, %while.body ], [ %call76, %while.cond.preheader ], !dbg !5460
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5406, metadata !DIExpression()), !dbg !5460
  %cmp93 = icmp eq %struct.rtx_def* %insn.0, %call87, !dbg !5474
  br i1 %cmp93, label %while.end, label %land.rhs, !dbg !5475

land.rhs:                                         ; preds = %while.cond
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5476
  %bf.load95 = load i32, i32* %27, align 8, !dbg !5476
  %bf.clear96 = and i32 %bf.load95, 65535, !dbg !5476
  %cmp97 = icmp eq i32 %bf.clear96, 7, !dbg !5476
  %cmp101 = icmp eq i32 %bf.clear96, 13, !dbg !5477
  %or.cond = or i1 %cmp97, %cmp101, !dbg !5478
  br i1 %or.cond, label %while.body, label %while.end, !dbg !5478

while.body:                                       ; preds = %land.rhs
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5479
  %rt_rtx = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !5479
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !5406, metadata !DIExpression()), !dbg !5460
  br label %while.cond, !dbg !5473, !llvm.loop !5480

while.end:                                        ; preds = %land.rhs, %while.cond
  %cmp93.lcssa = phi i1 [ %cmp93, %land.rhs ], [ %cmp93, %while.cond ], !dbg !5474
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5406, metadata !DIExpression()), !dbg !5460
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5406, metadata !DIExpression()), !dbg !5460
  br i1 %cmp93.lcssa, label %if.then105, label %if.end533, !dbg !5481

if.then105:                                       ; preds = %while.end
  %30 = bitcast %struct.sel_global_bb_info_def* %gbi to i8*, !dbg !5482
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8, !dbg !5482
  %31 = bitcast %struct.sel_region_bb_info_def* %rbi to i8*, !dbg !5483
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8, !dbg !5483
  %32 = load i32, i32* @sched_verbose, align 4, !dbg !5484
  %cmp106 = icmp sgt i32 %32, 1, !dbg !5485
  br i1 %cmp106, label %do.body, label %if.end129, !dbg !5486

do.body:                                          ; preds = %if.then105
  %33 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5487
  %tobool109 = icmp eq i8 %33, 0, !dbg !5487
  br i1 %tobool109, label %if.else122, label %do.body111, !dbg !5488

do.body111:                                       ; preds = %do.body
  %34 = load i32, i32* %index, align 8, !dbg !5489
  %index113 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call81, i64 0, i32 9, !dbg !5489
  %35 = load i32, i32* %index113, align 8, !dbg !5489
  %call114 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0), i32 %34, i32 %35) #6, !dbg !5489
  %mul = shl nsw i32 %call114, 1, !dbg !5489
  %add = or i32 %mul, 1, !dbg !5489
  call void @llvm.dbg.value(metadata i32 %add, metadata !5421, metadata !DIExpression()), !dbg !5490
  %conv115 = sext i32 %add to i64, !dbg !5489
  %36 = alloca i8, i64 %conv115, align 16, !dbg !5489
  call void @llvm.dbg.value(metadata i8* %36, metadata !5426, metadata !DIExpression()), !dbg !5490
  %37 = load i32, i32* %index, align 8, !dbg !5489
  %38 = load i32, i32* %index113, align 8, !dbg !5489
  %call120 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %36, i64 %conv115, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0), i32 %37, i32 %38) #6, !dbg !5489
  call void @sel_prepare_string_for_dot_label(i8* nonnull %36) #6, !dbg !5489
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5489
  %call121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %36) #6, !dbg !5489
  br label %if.end129, !dbg !5489

if.else122:                                       ; preds = %do.body
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5487
  %41 = load i32, i32* %index, align 8, !dbg !5487
  %index124 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call81, i64 0, i32 9, !dbg !5487
  %42 = load i32, i32* %index124, align 8, !dbg !5487
  %call125 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0), i32 %41, i32 %42) #6, !dbg !5487
  br label %if.end129

if.end129:                                        ; preds = %do.body111, %if.else122, %if.then105
  %43 = load i32, i32* %index, align 8, !dbg !5491
  call void @llvm.dbg.value(metadata i32 %43, metadata !5420, metadata !DIExpression()), !dbg !5492
  %index131 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call81, i64 0, i32 9, !dbg !5493
  %44 = load i32, i32* %index131, align 8, !dbg !5493
  store i32 %44, i32* %index, align 8, !dbg !5494
  store i32 %43, i32* %index131, align 8, !dbg !5495
  %45 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5496
  %cfg135 = getelementptr inbounds %struct.function, %struct.function* %45, i64 0, i32 1, !dbg !5496
  %46 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg135, align 8, !dbg !5496
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %46, i64 0, i32 2, !dbg !5496
  %47 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !5496
  %tobool136 = icmp eq %struct.VEC_basic_block_gc* %47, null, !dbg !5496
  br i1 %tobool136, label %cond.end143, label %cond.true137, !dbg !5496

cond.true137:                                     ; preds = %if.end129
  %base141 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %47, i64 0, i32 0, !dbg !5496
  br label %cond.end143, !dbg !5496

cond.end143:                                      ; preds = %if.end129, %cond.true137
  %cond144 = phi %struct.VEC_basic_block_base* [ %base141, %cond.true137 ], [ null, %if.end129 ], !dbg !5496
  %48 = load i32, i32* %index, align 8, !dbg !5496
  %call146 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond144, i32 %48, %struct.basic_block_def* %call13) #7, !dbg !5496
  %49 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5497
  %cfg148 = getelementptr inbounds %struct.function, %struct.function* %49, i64 0, i32 1, !dbg !5497
  %50 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg148, align 8, !dbg !5497
  %x_basic_block_info149 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %50, i64 0, i32 2, !dbg !5497
  %51 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info149, align 8, !dbg !5497
  %tobool150 = icmp eq %struct.VEC_basic_block_gc* %51, null, !dbg !5497
  br i1 %tobool150, label %cond.end157, label %cond.true151, !dbg !5497

cond.true151:                                     ; preds = %cond.end143
  %base155 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %51, i64 0, i32 0, !dbg !5497
  br label %cond.end157, !dbg !5497

cond.end157:                                      ; preds = %cond.end143, %cond.true151
  %cond158 = phi %struct.VEC_basic_block_base* [ %base155, %cond.true151 ], [ null, %cond.end143 ], !dbg !5497
  %52 = load i32, i32* %index131, align 8, !dbg !5497
  %call160 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond158, i32 %52, %struct.basic_block_def* nonnull %call81) #7, !dbg !5497
  %53 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5498
  %base163 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %53, i64 0, i32 0, !dbg !5498
  %54 = load i32, i32* %index, align 8, !dbg !5498
  %call168 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base163, i32 %54) #7, !dbg !5498
  %55 = bitcast %struct.sel_global_bb_info_def* %call168 to i8*, !dbg !5498
  %call169 = call i8* @memcpy(i8* nonnull %30, i8* %55, i64 16) #6, !dbg !5499
  %56 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5500
  %base172 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %56, i64 0, i32 0, !dbg !5500
  %57 = load i32, i32* %index, align 8, !dbg !5500
  %call177 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base172, i32 %57) #7, !dbg !5500
  %58 = bitcast %struct.sel_global_bb_info_def* %call177 to i8*, !dbg !5500
  %59 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5501
  %base180 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %59, i64 0, i32 0, !dbg !5501
  %60 = load i32, i32* %index131, align 8, !dbg !5501
  %call185 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base180, i32 %60) #7, !dbg !5501
  %61 = bitcast %struct.sel_global_bb_info_def* %call185 to i8*, !dbg !5501
  %call186 = call i8* @memcpy(i8* %58, i8* %61, i64 16) #6, !dbg !5502
  %62 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5503
  %base189 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %62, i64 0, i32 0, !dbg !5503
  %63 = load i32, i32* %index131, align 8, !dbg !5503
  %call194 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base189, i32 %63) #7, !dbg !5503
  %64 = bitcast %struct.sel_global_bb_info_def* %call194 to i8*, !dbg !5503
  %call195 = call i8* @memcpy(i8* %64, i8* nonnull %30, i64 16) #6, !dbg !5504
  %65 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5505
  %base198 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %65, i64 0, i32 0, !dbg !5505
  %66 = load i32, i32* %index, align 8, !dbg !5505
  %call203 = call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base198, i32 %66) #7, !dbg !5505
  %67 = bitcast %struct.sel_region_bb_info_def* %call203 to i8*, !dbg !5505
  %call204 = call i8* @memcpy(i8* nonnull %31, i8* %67, i64 24) #6, !dbg !5506
  %68 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5507
  %base207 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %68, i64 0, i32 0, !dbg !5507
  %69 = load i32, i32* %index, align 8, !dbg !5507
  %call212 = call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base207, i32 %69) #7, !dbg !5507
  %70 = bitcast %struct.sel_region_bb_info_def* %call212 to i8*, !dbg !5507
  %71 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5508
  %base215 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %71, i64 0, i32 0, !dbg !5508
  %72 = load i32, i32* %index131, align 8, !dbg !5508
  %call220 = call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base215, i32 %72) #7, !dbg !5508
  %73 = bitcast %struct.sel_region_bb_info_def* %call220 to i8*, !dbg !5508
  %call221 = call i8* @memcpy(i8* %70, i8* %73, i64 24) #6, !dbg !5509
  %74 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5510
  %base224 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %74, i64 0, i32 0, !dbg !5510
  %75 = load i32, i32* %index131, align 8, !dbg !5510
  %call229 = call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base224, i32 %75) #7, !dbg !5510
  %76 = bitcast %struct.sel_region_bb_info_def* %call229 to i8*, !dbg !5510
  %call230 = call i8* @memcpy(i8* %76, i8* nonnull %31, i64 24) #6, !dbg !5511
  %77 = load i32*, i32** @block_to_bb, align 8, !dbg !5512
  %78 = load i32, i32* %index, align 8, !dbg !5512
  %idxprom = sext i32 %78 to i64, !dbg !5512
  %arrayidx232 = getelementptr inbounds i32, i32* %77, i64 %idxprom, !dbg !5512
  %79 = load i32, i32* %arrayidx232, align 4, !dbg !5512
  call void @llvm.dbg.value(metadata i32 %79, metadata !5420, metadata !DIExpression()), !dbg !5492
  %80 = load i32, i32* %index131, align 8, !dbg !5513
  %idxprom234 = sext i32 %80 to i64, !dbg !5513
  %arrayidx235 = getelementptr inbounds i32, i32* %77, i64 %idxprom234, !dbg !5513
  %81 = load i32, i32* %arrayidx235, align 4, !dbg !5513
  store i32 %81, i32* %arrayidx232, align 4, !dbg !5514
  %82 = load i32*, i32** @block_to_bb, align 8, !dbg !5515
  %83 = load i32, i32* %index131, align 8, !dbg !5515
  %idxprom240 = sext i32 %83 to i64, !dbg !5515
  %arrayidx241 = getelementptr inbounds i32, i32* %82, i64 %idxprom240, !dbg !5515
  store i32 %79, i32* %arrayidx241, align 4, !dbg !5516
  %84 = load i32*, i32** @containing_rgn, align 8, !dbg !5517
  %85 = load i32, i32* %index, align 8, !dbg !5517
  %idxprom243 = sext i32 %85 to i64, !dbg !5517
  %arrayidx244 = getelementptr inbounds i32, i32* %84, i64 %idxprom243, !dbg !5517
  %86 = load i32, i32* %arrayidx244, align 4, !dbg !5517
  call void @llvm.dbg.value(metadata i32 %86, metadata !5420, metadata !DIExpression()), !dbg !5492
  %87 = load i32, i32* %index131, align 8, !dbg !5518
  %idxprom246 = sext i32 %87 to i64, !dbg !5518
  %arrayidx247 = getelementptr inbounds i32, i32* %84, i64 %idxprom246, !dbg !5518
  %88 = load i32, i32* %arrayidx247, align 4, !dbg !5518
  store i32 %88, i32* %arrayidx244, align 4, !dbg !5519
  %89 = load i32*, i32** @containing_rgn, align 8, !dbg !5520
  %90 = load i32, i32* %index131, align 8, !dbg !5520
  %idxprom252 = sext i32 %90 to i64, !dbg !5520
  %arrayidx253 = getelementptr inbounds i32, i32* %89, i64 %idxprom252, !dbg !5520
  store i32 %86, i32* %arrayidx253, align 4, !dbg !5521
  call void @llvm.dbg.value(metadata i32 0, metadata !5420, metadata !DIExpression()), !dbg !5492
  br label %for.cond, !dbg !5522

for.cond:                                         ; preds = %for.inc, %cond.end157
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %cond.end157 ], !dbg !5524
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5420, metadata !DIExpression()), !dbg !5492
  %91 = load i32, i32* @current_nr_blocks, align 4, !dbg !5525
  %92 = sext i32 %91 to i64, !dbg !5527
  %cmp254 = icmp slt i64 %indvars.iv, %92, !dbg !5527
  br i1 %cmp254, label %for.body, label %for.end, !dbg !5528

for.body:                                         ; preds = %for.cond
  %93 = load i32*, i32** @rgn_bb_table, align 8, !dbg !5529
  %94 = load i32*, i32** @ebb_head, align 8, !dbg !5529
  %arrayidx257 = getelementptr inbounds i32, i32* %94, i64 %indvars.iv, !dbg !5529
  %95 = load i32, i32* %arrayidx257, align 4, !dbg !5529
  %idxprom258 = sext i32 %95 to i64, !dbg !5529
  %arrayidx259 = getelementptr inbounds i32, i32* %93, i64 %idxprom258, !dbg !5529
  %96 = load i32, i32* %arrayidx259, align 4, !dbg !5529
  %97 = load i32, i32* %index131, align 8, !dbg !5531
  %cmp261 = icmp eq i32 %96, %97, !dbg !5532
  br i1 %cmp261, label %if.then263, label %if.else269, !dbg !5533

if.then263:                                       ; preds = %for.body
  %98 = load i32, i32* %index, align 8, !dbg !5534
  store i32 %98, i32* %arrayidx259, align 4, !dbg !5535
  br label %for.inc, !dbg !5536

if.else269:                                       ; preds = %for.body
  %99 = load i32, i32* %index, align 8, !dbg !5537
  %cmp275 = icmp eq i32 %96, %99, !dbg !5539
  br i1 %cmp275, label %if.then277, label %for.inc, !dbg !5540

if.then277:                                       ; preds = %if.else269
  store i32 %97, i32* %arrayidx259, align 4, !dbg !5541
  br label %for.inc, !dbg !5542

for.inc:                                          ; preds = %if.then263, %if.then277, %if.else269
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5543
  call void @llvm.dbg.value(metadata i32 undef, metadata !5420, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5492
  br label %for.cond, !dbg !5544, !llvm.loop !5545

for.end:                                          ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call13, i64 0, i32 7, !dbg !5547
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5547
  %100 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5547
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %100, i64 0, i32 0, !dbg !5547
  br label %for.cond285, !dbg !5547

for.cond285:                                      ; preds = %for.inc337, %for.end
  %insn.1.in = phi %struct.rtx_def** [ %head_, %for.end ], [ %rt_rtx341, %for.inc337 ]
  %insn.1 = load %struct.rtx_def*, %struct.rtx_def** %insn.1.in, align 8, !dbg !5549
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !5406, metadata !DIExpression()), !dbg !5460
  %tobool286 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !5550
  br i1 %tobool286, label %for.end342, label %land.rhs287, !dbg !5550

land.rhs287:                                      ; preds = %for.cond285
  %101 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5550
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %101, i64 0, i32 1, !dbg !5550
  %102 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5550
  %103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5550
  %rt_rtx293 = bitcast %union.rtunion_def* %103 to %struct.rtx_def**, !dbg !5550
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx293, align 8, !dbg !5550
  %cmp294 = icmp eq %struct.rtx_def* %insn.1, %104, !dbg !5550
  br i1 %cmp294, label %for.end342, label %for.body297, !dbg !5547

for.body297:                                      ; preds = %land.rhs287
  %105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !5552
  %bf.load298 = load i32, i32* %105, align 8, !dbg !5552
  %bf.clear299 = and i32 %bf.load298, 65535, !dbg !5552
  %cmp300 = icmp eq i32 %bf.clear299, 8, !dbg !5552
  br i1 %cmp300, label %if.then317, label %lor.lhs.false302, !dbg !5552

lor.lhs.false302:                                 ; preds = %for.body297
  %cmp305 = icmp eq i32 %bf.clear299, 7, !dbg !5552
  br i1 %cmp305, label %if.then317, label %lor.lhs.false307, !dbg !5552

lor.lhs.false307:                                 ; preds = %lor.lhs.false302
  %cmp310 = icmp eq i32 %bf.clear299, 9, !dbg !5552
  br i1 %cmp310, label %if.then317, label %lor.lhs.false312, !dbg !5552

lor.lhs.false312:                                 ; preds = %lor.lhs.false307
  %cmp315 = icmp eq i32 %bf.clear299, 10, !dbg !5552
  br i1 %cmp315, label %if.then317, label %for.inc337, !dbg !5554

if.then317:                                       ; preds = %lor.lhs.false312, %lor.lhs.false307, %lor.lhs.false302, %for.body297
  %106 = load i32, i32* %index, align 8, !dbg !5555
  %107 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5556
  %base321 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %107, i64 0, i32 0, !dbg !5556
  %108 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5556
  %base327 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %108, i64 0, i32 0, !dbg !5556
  %arrayidx333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5556
  %rt_int = bitcast %union.rtunion_def* %arrayidx333 to i32*, !dbg !5556
  %109 = load i32, i32* %rt_int, align 8, !dbg !5556
  %call334 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base327, i32 %109) #7, !dbg !5556
  %call335 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base321, i32 %call334) #7, !dbg !5556
  %orig_bb_index = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call335, i64 0, i32 0, i32 6, !dbg !5556
  store i32 %106, i32* %orig_bb_index, align 4, !dbg !5557
  br label %for.inc337, !dbg !5556

for.inc337:                                       ; preds = %lor.lhs.false312, %if.then317
  %110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5550
  %rt_rtx341 = bitcast %union.rtunion_def* %110 to %struct.rtx_def**, !dbg !5550
  br label %for.cond285, !dbg !5550, !llvm.loop !5558

for.end342:                                       ; preds = %land.rhs287, %for.cond285
  %il343 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call81, i64 0, i32 7, !dbg !5560
  %rtl344 = bitcast %union.basic_block_il_dependent* %il343 to %struct.rtl_bb_info**, !dbg !5560
  %111 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl344, align 8, !dbg !5560
  %head_345 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %111, i64 0, i32 0, !dbg !5560
  br label %for.cond346, !dbg !5560

for.cond346:                                      ; preds = %for.inc402, %for.end342
  %insn.2.in = phi %struct.rtx_def** [ %head_345, %for.end342 ], [ %rt_rtx406, %for.inc402 ]
  %insn.2 = load %struct.rtx_def*, %struct.rtx_def** %insn.2.in, align 8, !dbg !5562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !5406, metadata !DIExpression()), !dbg !5460
  %tobool347 = icmp eq %struct.rtx_def* %insn.2, null, !dbg !5563
  br i1 %tobool347, label %for.end407, label %land.rhs348, !dbg !5563

land.rhs348:                                      ; preds = %for.cond346
  %112 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl344, align 8, !dbg !5563
  %end_351 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %112, i64 0, i32 1, !dbg !5563
  %113 = load %struct.rtx_def*, %struct.rtx_def** %end_351, align 8, !dbg !5563
  %114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5563
  %rt_rtx355 = bitcast %union.rtunion_def* %114 to %struct.rtx_def**, !dbg !5563
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx355, align 8, !dbg !5563
  %cmp356 = icmp eq %struct.rtx_def* %insn.2, %115, !dbg !5563
  br i1 %cmp356, label %for.end407, label %for.body359, !dbg !5560

for.body359:                                      ; preds = %land.rhs348
  %116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 0, !dbg !5565
  %bf.load360 = load i32, i32* %116, align 8, !dbg !5565
  %bf.clear361 = and i32 %bf.load360, 65535, !dbg !5565
  %cmp362 = icmp eq i32 %bf.clear361, 8, !dbg !5565
  br i1 %cmp362, label %if.then379, label %lor.lhs.false364, !dbg !5565

lor.lhs.false364:                                 ; preds = %for.body359
  %cmp367 = icmp eq i32 %bf.clear361, 7, !dbg !5565
  br i1 %cmp367, label %if.then379, label %lor.lhs.false369, !dbg !5565

lor.lhs.false369:                                 ; preds = %lor.lhs.false364
  %cmp372 = icmp eq i32 %bf.clear361, 9, !dbg !5565
  br i1 %cmp372, label %if.then379, label %lor.lhs.false374, !dbg !5565

lor.lhs.false374:                                 ; preds = %lor.lhs.false369
  %cmp377 = icmp eq i32 %bf.clear361, 10, !dbg !5565
  br i1 %cmp377, label %if.then379, label %for.inc402, !dbg !5567

if.then379:                                       ; preds = %lor.lhs.false374, %lor.lhs.false369, %lor.lhs.false364, %for.body359
  %117 = load i32, i32* %index131, align 8, !dbg !5568
  %118 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5569
  %base383 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %118, i64 0, i32 0, !dbg !5569
  %119 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5569
  %base389 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %119, i64 0, i32 0, !dbg !5569
  %arrayidx395 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5569
  %rt_int396 = bitcast %union.rtunion_def* %arrayidx395 to i32*, !dbg !5569
  %120 = load i32, i32* %rt_int396, align 8, !dbg !5569
  %call397 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base389, i32 %120) #7, !dbg !5569
  %call398 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base383, i32 %call397) #7, !dbg !5569
  %orig_bb_index400 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call398, i64 0, i32 0, i32 6, !dbg !5569
  store i32 %117, i32* %orig_bb_index400, align 4, !dbg !5570
  br label %for.inc402, !dbg !5569

for.inc402:                                       ; preds = %lor.lhs.false374, %if.then379
  %121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5563
  %rt_rtx406 = bitcast %union.rtunion_def* %121 to %struct.rtx_def**, !dbg !5563
  br label %for.cond346, !dbg !5563, !llvm.loop !5571

for.end407:                                       ; preds = %land.rhs348, %for.cond346
  %122 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !5573
  %123 = load i32, i32* %index, align 8, !dbg !5575
  %call409 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %122, i32 %123) #6, !dbg !5576
  %tobool410 = icmp eq i32 %call409, 0, !dbg !5576
  br i1 %tobool410, label %if.end416, label %if.then411, !dbg !5577

if.then411:                                       ; preds = %for.end407
  %124 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !5578
  %125 = load i32, i32* %index131, align 8, !dbg !5580
  %call413 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %124, i32 %125) #6, !dbg !5581
  %126 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !5582
  %127 = load i32, i32* %index, align 8, !dbg !5583
  %call415 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %126, i32 %127) #6, !dbg !5584
  br label %if.end416, !dbg !5585

if.end416:                                        ; preds = %for.end407, %if.then411
  %128 = bitcast %union.basic_block_il_dependent* %il to i32***, !dbg !5586
  %129 = load i32**, i32*** %128, align 8, !dbg !5586
  %130 = load i32*, i32** %129, align 8, !dbg !5586
  %bf.load420 = load i32, i32* %130, align 8, !dbg !5586
  %bf.clear421 = and i32 %bf.load420, 65535, !dbg !5586
  %cmp422 = icmp eq i32 %bf.clear421, 12, !dbg !5586
  br i1 %cmp422, label %land.lhs.true424, label %cond.true432, !dbg !5586

land.lhs.true424:                                 ; preds = %if.end416
  %131 = bitcast %union.basic_block_il_dependent* %il343 to i32***, !dbg !5586
  %132 = load i32**, i32*** %131, align 8, !dbg !5586
  %133 = load i32*, i32** %132, align 8, !dbg !5586
  %bf.load428 = load i32, i32* %133, align 8, !dbg !5586
  %bf.clear429 = and i32 %bf.load428, 65535, !dbg !5586
  %cmp430 = icmp eq i32 %bf.clear429, 12, !dbg !5586
  br i1 %cmp430, label %cond.end434, label %cond.true432, !dbg !5586

cond.true432:                                     ; preds = %land.lhs.true424, %if.end416
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5586
  br label %cond.end434, !dbg !5586

cond.end434:                                      ; preds = %land.lhs.true424, %cond.true432
  %134 = load i32, i32* @sched_verbose, align 4, !dbg !5587
  %cmp436 = icmp sgt i32 %134, 3, !dbg !5588
  br i1 %cmp436, label %do.body439, label %if.end502, !dbg !5589

do.body439:                                       ; preds = %cond.end434
  %135 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5590
  %tobool440 = icmp eq i8 %135, 0, !dbg !5590
  br i1 %tobool440, label %if.else483, label %do.body442, !dbg !5591

do.body442:                                       ; preds = %do.body439
  %136 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5592
  %head_446 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %136, i64 0, i32 0, !dbg !5592
  %137 = load %struct.rtx_def*, %struct.rtx_def** %head_446, align 8, !dbg !5592
  %u447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i64 0, i32 1, !dbg !5592
  %138 = getelementptr inbounds %union.u, %union.u* %u447, i64 1, i32 0, i32 0, i64 1, !dbg !5592
  %rt_int450 = bitcast %union.rtunion_def* %138 to i32*, !dbg !5592
  %139 = load i32, i32* %rt_int450, align 8, !dbg !5592
  %140 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl344, align 8, !dbg !5592
  %head_453 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %140, i64 0, i32 0, !dbg !5592
  %141 = load %struct.rtx_def*, %struct.rtx_def** %head_453, align 8, !dbg !5592
  %u454 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i64 0, i32 1, !dbg !5592
  %142 = getelementptr inbounds %union.u, %union.u* %u454, i64 1, i32 0, i32 0, i64 1, !dbg !5592
  %rt_int457 = bitcast %union.rtunion_def* %142 to i32*, !dbg !5592
  %143 = load i32, i32* %rt_int457, align 8, !dbg !5592
  %call458 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 %139, i32 %143) #6, !dbg !5592
  %mul459 = shl nsw i32 %call458, 1, !dbg !5592
  %add460 = or i32 %mul459, 1, !dbg !5592
  call void @llvm.dbg.value(metadata i32 %add460, metadata !5427, metadata !DIExpression()), !dbg !5593
  %conv462 = sext i32 %add460 to i64, !dbg !5592
  %144 = alloca i8, i64 %conv462, align 16, !dbg !5592
  call void @llvm.dbg.value(metadata i8* %144, metadata !5432, metadata !DIExpression()), !dbg !5593
  %145 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5592
  %head_467 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %145, i64 0, i32 0, !dbg !5592
  %146 = load %struct.rtx_def*, %struct.rtx_def** %head_467, align 8, !dbg !5592
  %u468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i64 0, i32 1, !dbg !5592
  %147 = getelementptr inbounds %union.u, %union.u* %u468, i64 1, i32 0, i32 0, i64 1, !dbg !5592
  %rt_int471 = bitcast %union.rtunion_def* %147 to i32*, !dbg !5592
  %148 = load i32, i32* %rt_int471, align 8, !dbg !5592
  %149 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl344, align 8, !dbg !5592
  %head_474 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %149, i64 0, i32 0, !dbg !5592
  %150 = load %struct.rtx_def*, %struct.rtx_def** %head_474, align 8, !dbg !5592
  %u475 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i64 0, i32 1, !dbg !5592
  %151 = getelementptr inbounds %union.u, %union.u* %u475, i64 1, i32 0, i32 0, i64 1, !dbg !5592
  %rt_int478 = bitcast %union.rtunion_def* %151 to i32*, !dbg !5592
  %152 = load i32, i32* %rt_int478, align 8, !dbg !5592
  %call479 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %144, i64 %conv462, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 %148, i32 %152) #6, !dbg !5592
  call void @sel_prepare_string_for_dot_label(i8* nonnull %144) #6, !dbg !5592
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5592
  %call480 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %144) #6, !dbg !5592
  br label %if.end502, !dbg !5592

if.else483:                                       ; preds = %do.body439
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5590
  %155 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5590
  %head_486 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %155, i64 0, i32 0, !dbg !5590
  %156 = load %struct.rtx_def*, %struct.rtx_def** %head_486, align 8, !dbg !5590
  %u487 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i64 0, i32 1, !dbg !5590
  %157 = getelementptr inbounds %union.u, %union.u* %u487, i64 1, i32 0, i32 0, i64 1, !dbg !5590
  %rt_int490 = bitcast %union.rtunion_def* %157 to i32*, !dbg !5590
  %158 = load i32, i32* %rt_int490, align 8, !dbg !5590
  %159 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl344, align 8, !dbg !5590
  %head_493 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %159, i64 0, i32 0, !dbg !5590
  %160 = load %struct.rtx_def*, %struct.rtx_def** %head_493, align 8, !dbg !5590
  %u494 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i64 0, i32 1, !dbg !5590
  %161 = getelementptr inbounds %union.u, %union.u* %u494, i64 1, i32 0, i32 0, i64 1, !dbg !5590
  %rt_int497 = bitcast %union.rtunion_def* %161 to i32*, !dbg !5590
  %162 = load i32, i32* %rt_int497, align 8, !dbg !5590
  %call498 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %154, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 %158, i32 %162) #6, !dbg !5590
  br label %if.end502

if.end502:                                        ; preds = %do.body442, %if.else483, %cond.end434
  %163 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5594
  %head_505 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %163, i64 0, i32 0, !dbg !5594
  %164 = load %struct.rtx_def*, %struct.rtx_def** %head_505, align 8, !dbg !5594
  %u506 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i64 0, i32 1, !dbg !5594
  %165 = getelementptr inbounds %union.u, %union.u* %u506, i64 1, i32 0, i32 0, i64 1, !dbg !5594
  %rt_int509 = bitcast %union.rtunion_def* %165 to i32*, !dbg !5594
  %166 = load i32, i32* %rt_int509, align 8, !dbg !5594
  call void @llvm.dbg.value(metadata i32 %166, metadata !5420, metadata !DIExpression()), !dbg !5492
  %167 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl344, align 8, !dbg !5595
  %head_512 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %167, i64 0, i32 0, !dbg !5595
  %168 = load %struct.rtx_def*, %struct.rtx_def** %head_512, align 8, !dbg !5595
  %u513 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i64 0, i32 1, !dbg !5595
  %169 = getelementptr inbounds %union.u, %union.u* %u513, i64 1, i32 0, i32 0, i64 1, !dbg !5595
  %rt_int516 = bitcast %union.rtunion_def* %169 to i32*, !dbg !5595
  %170 = load i32, i32* %rt_int516, align 8, !dbg !5595
  store i32 %170, i32* %rt_int509, align 8, !dbg !5596
  %171 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl344, align 8, !dbg !5597
  %head_526 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %171, i64 0, i32 0, !dbg !5597
  %172 = load %struct.rtx_def*, %struct.rtx_def** %head_526, align 8, !dbg !5597
  %u527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i64 0, i32 1, !dbg !5597
  %173 = getelementptr inbounds %union.u, %union.u* %u527, i64 1, i32 0, i32 0, i64 1, !dbg !5597
  %rt_int530 = bitcast %union.rtunion_def* %173 to i32*, !dbg !5597
  store i32 %166, i32* %rt_int530, align 8, !dbg !5598
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8, !dbg !5599
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8, !dbg !5599
  br label %if.end533, !dbg !5600

if.end533:                                        ; preds = %land.lhs.true83, %land.lhs.true80, %land.lhs.true, %cond.end72, %if.then75, %land.lhs.true86, %if.end502, %while.end
  ret %struct.basic_block_def* %0, !dbg !5601
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5602 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5609, metadata !DIExpression()), !dbg !5610
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5611
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5611
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5611
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5611

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5611
  br label %cond.end, !dbg !5611

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5611
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5611
  %cmp = icmp eq i32 %call, 1, !dbg !5612
  %conv2 = zext i1 %cmp to i8, !dbg !5611
  ret i8 %conv2, !dbg !5613
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5614 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5618, metadata !DIExpression()), !dbg !5619
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #7, !dbg !5620
  %tobool = icmp eq i8 %call, 0, !dbg !5620
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5620

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5620
  br label %cond.end, !dbg !5620

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5621
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5621
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5621
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !5621

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5621
  br label %cond.end5, !dbg !5621

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !5621
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !5621
  ret %struct.edge_def* %call7, !dbg !5622
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5623 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_sel_region_bb_info_def_base* %vec_, metadata !5636, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5637, metadata !DIExpression()), !dbg !5638
  br label %land.end, !dbg !5639

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5639
  %arrayidx = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_base, %struct.VEC_sel_region_bb_info_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5639
  ret %struct.sel_region_bb_info_def* %arrayidx, !dbg !5639
}

declare dso_local void @sel_redirect_edge_and_branch_force(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @sel_redirect_edge_and_branch(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5640 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5642, metadata !DIExpression()), !dbg !5643
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5644
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5644
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5644
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5644

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5644
  br label %cond.end, !dbg !5644

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5644
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5644
  %cmp = icmp eq i32 %call, 1, !dbg !5645
  %conv2 = zext i1 %cmp to i8, !dbg !5644
  ret i8 %conv2, !dbg !5646
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5647 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5651, metadata !DIExpression()), !dbg !5652
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !5653
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !5654
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5654
  ret %struct.basic_block_def* %0, !dbg !5655
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !5656 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !5661, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5662, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !5663, metadata !DIExpression()), !dbg !5665
  %idxprom = zext i32 %ix_ to i64, !dbg !5666
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5666
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !5666
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5664, metadata !DIExpression()), !dbg !5665
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %arrayidx, align 8, !dbg !5666
  ret %struct.basic_block_def* %0, !dbg !5666
}

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5667 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5669, metadata !DIExpression()), !dbg !5670
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !5671
  %tobool = icmp eq i8 %call, 0, !dbg !5671
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5671

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5671
  br label %cond.end, !dbg !5671

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5672
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5672
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5672
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !5672

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5672
  br label %cond.end5, !dbg !5672

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !5672
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !5672
  ret %struct.edge_def* %call7, !dbg !5673
}

declare dso_local i32 @get_seqno_by_preds(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_insn_from_expr_after(%struct._expr* %expr, %struct.vinsn_def* %vinsn, i32 %seqno, %struct.rtx_def* %place_to_insert) unnamed_addr #5 !dbg !5674 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !5678, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vinsn, metadata !5679, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %seqno, metadata !5680, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %place_to_insert, metadata !5681, metadata !DIExpression()), !dbg !5685
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !5686
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !5686
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !5686
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !5686
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5686
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5686
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5686
  %tobool = icmp eq %struct.rtx_def* %3, null, !dbg !5686
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !5686

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5686
  %rt_rtx7 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !5686
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !5686
  %tobool8 = icmp eq %struct.rtx_def* %5, null, !dbg !5686
  br i1 %tobool8, label %cond.end, label %cond.true, !dbg !5686

cond.true:                                        ; preds = %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4450, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5686
  br label %cond.end, !dbg !5686

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %was_renamed = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 12, !dbg !5687
  %bf.load = load i8, i8* %was_renamed, align 1, !dbg !5687
  %bf.clear = and i8 %bf.load, 4, !dbg !5687
  %tobool9 = icmp eq i8 %bf.clear, 0, !dbg !5687
  br i1 %tobool9, label %if.end12, label %if.then, !dbg !5688

if.then:                                          ; preds = %cond.end
  %call = tail call i32 @expr_dest_regno(%struct._expr* %expr) #6, !dbg !5689
  call void @llvm.dbg.value(metadata i32 %call, metadata !5682, metadata !DIExpression()), !dbg !5690
  %cmp = icmp ult i32 %call, 53, !dbg !5691
  br i1 %cmp, label %if.then10, label %if.end12, !dbg !5693

if.then10:                                        ; preds = %if.then
  tail call void @df_set_regs_ever_live(i32 %call, i8 zeroext 1) #6, !dbg !5694
  %6 = load i32, i32* @reg_rename_this_tick, align 4, !dbg !5696
  %inc = add nsw i32 %6, 1, !dbg !5696
  store i32 %inc, i32* @reg_rename_this_tick, align 4, !dbg !5696
  %idxprom = zext i32 %call to i64, !dbg !5697
  %arrayidx11 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_rename_tick, i64 0, i64 %idxprom, !dbg !5697
  store i32 %inc, i32* %arrayidx11, align 4, !dbg !5698
  br label %if.end12, !dbg !5699

if.end12:                                         ; preds = %cond.end, %if.then, %if.then10
  %call13 = tail call %struct.rtx_def* @sel_gen_insn_from_expr_after(%struct._expr* %expr, %struct.vinsn_def* %vinsn, i32 %seqno, %struct.rtx_def* %place_to_insert) #6, !dbg !5700
  ret %struct.rtx_def* %call13, !dbg !5701
}

declare dso_local void @df_set_regs_ever_live(i32, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @sel_gen_insn_from_expr_after(%struct._expr*, %struct.vinsn_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @get_av_level(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct._list_node* @compute_av_set(%struct.rtx_def* %insn, %struct._list_node* %p, i32 %ws, i8 zeroext %unique_p) unnamed_addr #5 !dbg !5702 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5706, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !5707, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.value(metadata i32 0, metadata !5708, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.value(metadata i8 %unique_p, metadata !5709, metadata !DIExpression()), !dbg !5710
  %call = tail call fastcc %struct._list_node* @compute_av_set_inside_bb(%struct.rtx_def* %insn, %struct._list_node* null, i32 0, i8 zeroext %unique_p) #7, !dbg !5711
  ret %struct._list_node* %call, !dbg !5712
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._list_node* @compute_av_set_inside_bb(%struct.rtx_def* %first_insn, %struct._list_node* %p, i32 %ws, i8 zeroext %need_copy_p) unnamed_addr #5 !dbg !5713 {
entry:
  %p.addr = alloca %struct._list_node*, align 8
  %av = alloca %struct._list_node*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_insn, metadata !5715, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct._list_node* %p, metadata !5716, metadata !DIExpression()), !dbg !5793
  store %struct._list_node* %p, %struct._list_node** %p.addr, align 8
  call void @llvm.dbg.value(metadata i32 %ws, metadata !5717, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i8 %need_copy_p, metadata !5718, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i32 %ws, metadata !5720, metadata !DIExpression()), !dbg !5793
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn, i64 0, i32 1, i32 0, i32 1, !dbg !5794
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !5794
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5794
  %call = tail call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %0) #6, !dbg !5795
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5721, metadata !DIExpression()), !dbg !5793
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5796
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !5796
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !5722, metadata !DIExpression()), !dbg !5793
  %3 = bitcast %struct._list_node** %av to i8*, !dbg !5797
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5797
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !5724, metadata !DIExpression()), !dbg !5793
  store %struct._list_node* null, %struct._list_node** %av, align 8, !dbg !5798
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5799
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !5725, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct._list_node* %p, metadata !5716, metadata !DIExpression()), !dbg !5793
  %call8 = tail call fastcc zeroext i8 @is_ineligible_successor(%struct.rtx_def* %first_insn, %struct._list_node* %p) #7, !dbg !5800
  %tobool = icmp eq i8 %call8, 0, !dbg !5800
  br i1 %tobool, label %if.end33, label %if.then, !dbg !5801

if.then:                                          ; preds = %entry
  %5 = load i32, i32* @sched_verbose, align 4, !dbg !5802
  %cmp = icmp sgt i32 %5, 5, !dbg !5803
  br i1 %cmp, label %do.body, label %cleanup, !dbg !5804

do.body:                                          ; preds = %if.then
  %6 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5805
  %tobool10 = icmp eq i8 %6, 0, !dbg !5805
  br i1 %tobool10, label %if.else, label %do.body12, !dbg !5806

do.body12:                                        ; preds = %do.body
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5807
  %rt_int = bitcast %union.rtunion_def* %arrayidx15 to i32*, !dbg !5807
  %7 = load i32, i32* %rt_int, align 8, !dbg !5807
  %call16 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %7) #6, !dbg !5807
  %mul = shl nsw i32 %call16, 1, !dbg !5807
  %add = or i32 %mul, 1, !dbg !5807
  call void @llvm.dbg.value(metadata i32 %add, metadata !5726, metadata !DIExpression()), !dbg !5808
  %conv = sext i32 %add to i64, !dbg !5807
  %8 = alloca i8, i64 %conv, align 16, !dbg !5807
  call void @llvm.dbg.value(metadata i8* %8, metadata !5733, metadata !DIExpression()), !dbg !5808
  %9 = load i32, i32* %rt_int, align 8, !dbg !5807
  %call23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %8, i64 %conv, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %9) #6, !dbg !5807
  call void @sel_prepare_string_for_dot_label(i8* nonnull %8) #6, !dbg !5807
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5807
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %8) #6, !dbg !5807
  br label %cleanup, !dbg !5807

if.else:                                          ; preds = %do.body
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5805
  %arrayidx27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5805
  %rt_int28 = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !5805
  %12 = load i32, i32* %rt_int28, align 8, !dbg !5805
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %12) #6, !dbg !5805
  br label %cleanup

if.end33:                                         ; preds = %entry
  %call34 = tail call i32 @get_av_level(%struct.rtx_def* %first_insn) #6, !dbg !5809
  %13 = load i32, i32* @global_level, align 4, !dbg !5809
  %cmp35 = icmp eq i32 %call34, %13, !dbg !5809
  br i1 %cmp35, label %if.then37, label %if.end115, !dbg !5810

if.then37:                                        ; preds = %if.end33
  %call38 = tail call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %first_insn) #6, !dbg !5811
  %tobool39 = icmp eq i8 %call38, 0, !dbg !5811
  br i1 %tobool39, label %if.end49, label %if.then40, !dbg !5813

if.then40:                                        ; preds = %if.then37
  %14 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5814
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %14, i64 0, i32 0, !dbg !5814
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5814
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 9, !dbg !5814
  %16 = load i32, i32* %index, align 8, !dbg !5814
  %call46 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base, i32 %16) #7, !dbg !5814
  %av_set47 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call46, i64 0, i32 1, !dbg !5814
  %17 = load %struct._list_node*, %struct._list_node** %av_set47, align 8, !dbg !5814
  call void @llvm.dbg.value(metadata %struct._list_node* %17, metadata !5734, metadata !DIExpression()), !dbg !5815
  br label %if.end49, !dbg !5816

if.end49:                                         ; preds = %if.then37, %if.then40
  %av_set.0 = phi %struct._list_node* [ %17, %if.then40 ], [ null, %if.then37 ], !dbg !5817
  call void @llvm.dbg.value(metadata %struct._list_node* %av_set.0, metadata !5734, metadata !DIExpression()), !dbg !5815
  %18 = load i32, i32* @sched_verbose, align 4, !dbg !5818
  %cmp50 = icmp sgt i32 %18, 5, !dbg !5819
  br i1 %cmp50, label %do.body53, label %if.end107, !dbg !5820

do.body53:                                        ; preds = %if.end49
  %19 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5821
  %tobool54 = icmp eq i8 %19, 0, !dbg !5821
  br i1 %tobool54, label %if.else77, label %do.body56, !dbg !5822

do.body56:                                        ; preds = %do.body53
  %arrayidx60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5823
  %rt_int61 = bitcast %union.rtunion_def* %arrayidx60 to i32*, !dbg !5823
  %20 = load i32, i32* %rt_int61, align 8, !dbg !5823
  %call62 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i32 %20) #6, !dbg !5823
  %mul63 = shl nsw i32 %call62, 1, !dbg !5823
  %add64 = or i32 %mul63, 1, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %add64, metadata !5737, metadata !DIExpression()), !dbg !5824
  %conv66 = sext i32 %add64 to i64, !dbg !5823
  %21 = alloca i8, i64 %conv66, align 16, !dbg !5823
  call void @llvm.dbg.value(metadata i8* %21, metadata !5743, metadata !DIExpression()), !dbg !5824
  %22 = load i32, i32* %rt_int61, align 8, !dbg !5823
  %call73 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %21, i64 %conv66, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i32 %22) #6, !dbg !5823
  call void @sel_prepare_string_for_dot_label(i8* nonnull %21) #6, !dbg !5823
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5823
  %call74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %21) #6, !dbg !5823
  br label %do.end85, !dbg !5823

if.else77:                                        ; preds = %do.body53
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5821
  %arrayidx80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5821
  %rt_int81 = bitcast %union.rtunion_def* %arrayidx80 to i32*, !dbg !5821
  %25 = load i32, i32* %rt_int81, align 8, !dbg !5821
  %call82 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i32 %25) #6, !dbg !5821
  br label %do.end85

do.end85:                                         ; preds = %if.else77, %do.body56
  call void @dump_av_set(%struct._list_node* %av_set.0) #6, !dbg !5825
  %26 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5826
  %tobool87 = icmp eq i8 %26, 0, !dbg !5826
  br i1 %tobool87, label %if.else102, label %do.body89, !dbg !5827

do.body89:                                        ; preds = %do.end85
  %call91 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5828
  %mul92 = shl nsw i32 %call91, 1, !dbg !5828
  %add93 = or i32 %mul92, 1, !dbg !5828
  call void @llvm.dbg.value(metadata i32 %add93, metadata !5744, metadata !DIExpression()), !dbg !5829
  %conv95 = sext i32 %add93 to i64, !dbg !5828
  %27 = alloca i8, i64 %conv95, align 16, !dbg !5828
  call void @llvm.dbg.value(metadata i8* %27, metadata !5748, metadata !DIExpression()), !dbg !5829
  %call98 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %27, i64 %conv95, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5828
  call void @sel_prepare_string_for_dot_label(i8* nonnull %27) #6, !dbg !5828
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5828
  %call99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %27) #6, !dbg !5828
  br label %if.end107, !dbg !5828

if.else102:                                       ; preds = %do.end85
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5826
  %call103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5826
  br label %if.end107

if.end107:                                        ; preds = %do.body89, %if.else102, %if.end49
  %tobool109 = icmp eq i8 %need_copy_p, 0, !dbg !5830
  br i1 %tobool109, label %cleanup, label %cond.true110, !dbg !5830

cond.true110:                                     ; preds = %if.end107
  %call111 = call %struct._list_node* @av_set_copy(%struct._list_node* %av_set.0) #6, !dbg !5831
  br label %cleanup, !dbg !5830

if.end115:                                        ; preds = %if.end33
  call void @llvm.dbg.value(metadata %struct._list_node** %p.addr, metadata !5716, metadata !DIExpression(DW_OP_deref)), !dbg !5793
  call fastcc void @_xlist_add(%struct._list_node** nonnull %p.addr, %struct.rtx_def* %first_insn) #7, !dbg !5832
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_insn, metadata !5723, metadata !DIExpression()), !dbg !5793
  br label %for.cond, !dbg !5833

for.cond:                                         ; preds = %for.inc, %if.end115
  %end_ws.0 = phi i32 [ %ws, %if.end115 ], [ %end_ws.1, %for.inc ], !dbg !5834
  %last_insn.0 = phi %struct.rtx_def* [ %first_insn, %if.end115 ], [ %63, %for.inc ], !dbg !5835
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0, metadata !5723, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i32 %end_ws.0, metadata !5720, metadata !DIExpression()), !dbg !5793
  %cmp116 = icmp eq %struct.rtx_def* %last_insn.0, %2, !dbg !5836
  br i1 %cmp116, label %for.end.loopexit, label %for.body, !dbg !5837

for.body:                                         ; preds = %for.cond
  %call118 = call i32 @get_av_level(%struct.rtx_def* %last_insn.0) #6, !dbg !5838
  %30 = load i32, i32* @global_level, align 4, !dbg !5838
  %cmp119 = icmp eq i32 %call118, %30, !dbg !5838
  br i1 %cmp119, label %if.then121, label %if.end159, !dbg !5839

if.then121:                                       ; preds = %for.body
  %end_ws.0.lcssa31 = phi i32 [ %end_ws.0, %for.body ], !dbg !5834
  %last_insn.0.lcssa26 = phi %struct.rtx_def* [ %last_insn.0, %for.body ], !dbg !5835
  %cmp116.lcssa22 = phi i1 [ %cmp116, %for.body ], !dbg !5836
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa31, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa26, metadata !5723, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa31, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa26, metadata !5723, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa31, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa26, metadata !5723, metadata !DIExpression()), !dbg !5793
  %31 = load i32, i32* @sched_verbose, align 4, !dbg !5840
  %cmp122 = icmp sgt i32 %31, 5, !dbg !5841
  br i1 %cmp122, label %do.body125, label %for.end, !dbg !5842

do.body125:                                       ; preds = %if.then121
  %32 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5843
  %tobool126 = icmp eq i8 %32, 0, !dbg !5843
  br i1 %tobool126, label %if.else149, label %do.body128, !dbg !5844

do.body128:                                       ; preds = %do.body125
  %arrayidx132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0.lcssa26, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5845
  %rt_int133 = bitcast %union.rtunion_def* %arrayidx132 to i32*, !dbg !5845
  %33 = load i32, i32* %rt_int133, align 8, !dbg !5845
  %call134 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 %33) #6, !dbg !5845
  %mul135 = shl nsw i32 %call134, 1, !dbg !5845
  %add136 = or i32 %mul135, 1, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %add136, metadata !5749, metadata !DIExpression()), !dbg !5846
  %conv138 = sext i32 %add136 to i64, !dbg !5845
  %34 = alloca i8, i64 %conv138, align 16, !dbg !5845
  call void @llvm.dbg.value(metadata i8* %34, metadata !5759, metadata !DIExpression()), !dbg !5846
  %35 = load i32, i32* %rt_int133, align 8, !dbg !5845
  %call145 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %34, i64 %conv138, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 %35) #6, !dbg !5845
  call void @sel_prepare_string_for_dot_label(i8* nonnull %34) #6, !dbg !5845
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5845
  %call146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %34) #6, !dbg !5845
  br label %for.end, !dbg !5845

if.else149:                                       ; preds = %do.body125
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5843
  %arrayidx152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0.lcssa26, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5843
  %rt_int153 = bitcast %union.rtunion_def* %arrayidx152 to i32*, !dbg !5843
  %38 = load i32, i32* %rt_int153, align 8, !dbg !5843
  %call154 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 %38) #6, !dbg !5843
  br label %for.end

if.end159:                                        ; preds = %for.body
  %cmp160 = icmp eq %struct.rtx_def* %last_insn.0, %first_insn, !dbg !5847
  br i1 %cmp160, label %if.end203, label %land.lhs.true, !dbg !5848

land.lhs.true:                                    ; preds = %if.end159
  %39 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !5849
  call void @llvm.dbg.value(metadata %struct._list_node* %39, metadata !5716, metadata !DIExpression()), !dbg !5793
  %call162 = call fastcc zeroext i8 @is_ineligible_successor(%struct.rtx_def* %last_insn.0, %struct._list_node* %39) #7, !dbg !5850
  %tobool164 = icmp eq i8 %call162, 0, !dbg !5850
  br i1 %tobool164, label %if.end203, label %if.then165, !dbg !5851

if.then165:                                       ; preds = %land.lhs.true
  %end_ws.0.lcssa32 = phi i32 [ %end_ws.0, %land.lhs.true ], !dbg !5834
  %last_insn.0.lcssa27 = phi %struct.rtx_def* [ %last_insn.0, %land.lhs.true ], !dbg !5835
  %cmp116.lcssa23 = phi i1 [ %cmp116, %land.lhs.true ], !dbg !5836
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa32, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa27, metadata !5723, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa32, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa27, metadata !5723, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa32, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa27, metadata !5723, metadata !DIExpression()), !dbg !5793
  %40 = load i32, i32* @sched_verbose, align 4, !dbg !5852
  %cmp166 = icmp sgt i32 %40, 5, !dbg !5853
  br i1 %cmp166, label %do.body169, label %for.end, !dbg !5854

do.body169:                                       ; preds = %if.then165
  %41 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5855
  %tobool170 = icmp eq i8 %41, 0, !dbg !5855
  br i1 %tobool170, label %if.else193, label %do.body172, !dbg !5856

do.body172:                                       ; preds = %do.body169
  %arrayidx176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0.lcssa27, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5857
  %rt_int177 = bitcast %union.rtunion_def* %arrayidx176 to i32*, !dbg !5857
  %42 = load i32, i32* %rt_int177, align 8, !dbg !5857
  %call178 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %42) #6, !dbg !5857
  %mul179 = shl nsw i32 %call178, 1, !dbg !5857
  %add180 = or i32 %mul179, 1, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %add180, metadata !5760, metadata !DIExpression()), !dbg !5858
  %conv182 = sext i32 %add180 to i64, !dbg !5857
  %43 = alloca i8, i64 %conv182, align 16, !dbg !5857
  call void @llvm.dbg.value(metadata i8* %43, metadata !5767, metadata !DIExpression()), !dbg !5858
  %44 = load i32, i32* %rt_int177, align 8, !dbg !5857
  %call189 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %43, i64 %conv182, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %44) #6, !dbg !5857
  call void @sel_prepare_string_for_dot_label(i8* nonnull %43) #6, !dbg !5857
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5857
  %call190 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %43) #6, !dbg !5857
  br label %for.end, !dbg !5857

if.else193:                                       ; preds = %do.body169
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5855
  %arrayidx196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0.lcssa27, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5855
  %rt_int197 = bitcast %union.rtunion_def* %arrayidx196 to i32*, !dbg !5855
  %47 = load i32, i32* %rt_int197, align 8, !dbg !5855
  %call198 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %47) #6, !dbg !5855
  br label %for.end

if.end203:                                        ; preds = %land.lhs.true, %if.end159
  %48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0, i64 0, i32 0, !dbg !5859
  %bf.load = load i32, i32* %48, align 8, !dbg !5859
  %bf.clear = and i32 %bf.load, 65535, !dbg !5859
  %cmp204 = icmp eq i32 %bf.clear, 7, !dbg !5859
  br i1 %cmp204, label %for.inc, label %if.end207, !dbg !5861

if.end207:                                        ; preds = %if.end203
  %49 = load i32, i32* @max_ws, align 4, !dbg !5862
  %cmp208 = icmp sgt i32 %end_ws.0, %49, !dbg !5863
  br i1 %cmp208, label %if.then210, label %if.end266, !dbg !5864

if.then210:                                       ; preds = %if.end207
  %end_ws.0.lcssa33 = phi i32 [ %end_ws.0, %if.end207 ], !dbg !5834
  %last_insn.0.lcssa28 = phi %struct.rtx_def* [ %last_insn.0, %if.end207 ], !dbg !5835
  %cmp116.lcssa24 = phi i1 [ %cmp116, %if.end207 ], !dbg !5836
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa33, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa28, metadata !5723, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa33, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa28, metadata !5723, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa33, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa28, metadata !5723, metadata !DIExpression()), !dbg !5793
  %50 = load i32, i32* @global_level, align 4, !dbg !5865
  %51 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5866
  %base213 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %51, i64 0, i32 0, !dbg !5866
  %52 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5866
  %base219 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %52, i64 0, i32 0, !dbg !5866
  %arrayidx225 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0.lcssa28, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5866
  %rt_int226 = bitcast %union.rtunion_def* %arrayidx225 to i32*, !dbg !5866
  %53 = load i32, i32* %rt_int226, align 8, !dbg !5866
  %call227 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base219, i32 %53) #7, !dbg !5866
  %call228 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base213, i32 %call227) #7, !dbg !5866
  %ws_level = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call228, i64 0, i32 1, !dbg !5866
  store i32 %50, i32* %ws_level, align 8, !dbg !5867
  %54 = load i32, i32* @sched_verbose, align 4, !dbg !5868
  %cmp229 = icmp sgt i32 %54, 5, !dbg !5869
  br i1 %cmp229, label %do.body232, label %for.end, !dbg !5870

do.body232:                                       ; preds = %if.then210
  %55 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5871
  %tobool233 = icmp eq i8 %55, 0, !dbg !5871
  br i1 %tobool233, label %if.else256, label %do.body235, !dbg !5872

do.body235:                                       ; preds = %do.body232
  %56 = load i32, i32* %rt_int226, align 8, !dbg !5873
  %call241 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.33, i64 0, i64 0), i32 %56) #6, !dbg !5873
  %mul242 = shl nsw i32 %call241, 1, !dbg !5873
  %add243 = or i32 %mul242, 1, !dbg !5873
  call void @llvm.dbg.value(metadata i32 %add243, metadata !5768, metadata !DIExpression()), !dbg !5874
  %conv245 = sext i32 %add243 to i64, !dbg !5873
  %57 = alloca i8, i64 %conv245, align 16, !dbg !5873
  call void @llvm.dbg.value(metadata i8* %57, metadata !5775, metadata !DIExpression()), !dbg !5874
  %58 = load i32, i32* %rt_int226, align 8, !dbg !5873
  %call252 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %57, i64 %conv245, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.33, i64 0, i64 0), i32 %58) #6, !dbg !5873
  call void @sel_prepare_string_for_dot_label(i8* nonnull %57) #6, !dbg !5873
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5873
  %call253 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %57) #6, !dbg !5873
  br label %for.end, !dbg !5873

if.else256:                                       ; preds = %do.body232
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5871
  %61 = load i32, i32* %rt_int226, align 8, !dbg !5871
  %call261 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.33, i64 0, i64 0), i32 %61) #6, !dbg !5871
  br label %for.end

if.end266:                                        ; preds = %if.end207
  %inc = add nsw i32 %end_ws.0, 1, !dbg !5875
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5720, metadata !DIExpression()), !dbg !5793
  br label %for.inc, !dbg !5876

for.inc:                                          ; preds = %if.end203, %if.end266
  %end_ws.1 = phi i32 [ %inc, %if.end266 ], [ %end_ws.0, %if.end203 ], !dbg !5793
  call void @llvm.dbg.value(metadata i32 %end_ws.1, metadata !5720, metadata !DIExpression()), !dbg !5793
  %62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5877
  %rt_rtx270 = bitcast %union.rtunion_def* %62 to %struct.rtx_def**, !dbg !5877
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx270, align 8, !dbg !5877
  call void @llvm.dbg.value(metadata %struct.rtx_def* %63, metadata !5723, metadata !DIExpression()), !dbg !5793
  br label %for.cond, !dbg !5878, !llvm.loop !5879

for.end.loopexit:                                 ; preds = %for.cond
  %end_ws.0.lcssa = phi i32 [ %end_ws.0, %for.cond ], !dbg !5834
  %last_insn.0.lcssa = phi %struct.rtx_def* [ %last_insn.0, %for.cond ], !dbg !5835
  %cmp116.lcssa = phi i1 [ %cmp116, %for.cond ], !dbg !5836
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa, metadata !5723, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa, metadata !5723, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i32 %end_ws.0.lcssa, metadata !5720, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa, metadata !5723, metadata !DIExpression()), !dbg !5793
  br label %for.end, !dbg !5881

for.end:                                          ; preds = %for.end.loopexit, %if.then210, %if.else256, %do.body235, %if.then165, %if.else193, %do.body172, %if.then121, %if.else149, %do.body128
  %end_ws.034 = phi i32 [ %end_ws.0.lcssa, %for.end.loopexit ], [ %end_ws.0.lcssa33, %if.then210 ], [ %end_ws.0.lcssa33, %if.else256 ], [ %end_ws.0.lcssa33, %do.body235 ], [ %end_ws.0.lcssa32, %if.then165 ], [ %end_ws.0.lcssa32, %if.else193 ], [ %end_ws.0.lcssa32, %do.body172 ], [ %end_ws.0.lcssa31, %if.then121 ], [ %end_ws.0.lcssa31, %if.else149 ], [ %end_ws.0.lcssa31, %do.body128 ]
  %last_insn.029 = phi %struct.rtx_def* [ %last_insn.0.lcssa, %for.end.loopexit ], [ %last_insn.0.lcssa28, %if.then210 ], [ %last_insn.0.lcssa28, %if.else256 ], [ %last_insn.0.lcssa28, %do.body235 ], [ %last_insn.0.lcssa27, %if.then165 ], [ %last_insn.0.lcssa27, %if.else193 ], [ %last_insn.0.lcssa27, %do.body172 ], [ %last_insn.0.lcssa26, %if.then121 ], [ %last_insn.0.lcssa26, %if.else149 ], [ %last_insn.0.lcssa26, %do.body128 ]
  %cmp11625 = phi i1 [ %cmp116.lcssa, %for.end.loopexit ], [ %cmp116.lcssa24, %if.then210 ], [ %cmp116.lcssa24, %if.else256 ], [ %cmp116.lcssa24, %do.body235 ], [ %cmp116.lcssa23, %if.then165 ], [ %cmp116.lcssa23, %if.else193 ], [ %cmp116.lcssa23, %do.body172 ], [ %cmp116.lcssa22, %if.then121 ], [ %cmp116.lcssa22, %if.else149 ], [ %cmp116.lcssa22, %do.body128 ]
  br i1 %cmp11625, label %if.else303, label %if.then273, !dbg !5883

if.then273:                                       ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !5724, metadata !DIExpression()), !dbg !5793
  store %struct._list_node* null, %struct._list_node** %av, align 8, !dbg !5884
  %cmp274 = icmp eq %struct.rtx_def* %last_insn.029, %first_insn, !dbg !5886
  br i1 %cmp274, label %land.lhs.true276, label %if.end305, !dbg !5888

land.lhs.true276:                                 ; preds = %if.then273
  %u277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn, i64 0, i32 1, !dbg !5889
  %64 = getelementptr inbounds %union.u, %union.u* %u277, i64 1, i32 0, i32 0, i64 0, !dbg !5889
  %rt_rtx280 = bitcast %union.rtunion_def* %64 to %struct.rtx_def**, !dbg !5889
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx280, align 8, !dbg !5889
  %66 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !5889
  %cmp281 = icmp eq %struct.rtx_def* %65, %66, !dbg !5889
  br i1 %cmp281, label %if.end305, label %if.then283, !dbg !5890

if.then283:                                       ; preds = %land.lhs.true276
  %67 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5891
  %base286 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %67, i64 0, i32 0, !dbg !5891
  %68 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5891
  %base292 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %68, i64 0, i32 0, !dbg !5891
  %arrayidx298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5891
  %rt_int299 = bitcast %union.rtunion_def* %arrayidx298 to i32*, !dbg !5891
  %69 = load i32, i32* %rt_int299, align 8, !dbg !5891
  %call300 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base292, i32 %69) #7, !dbg !5891
  %call301 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base286, i32 %call300) #7, !dbg !5891
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call301, i64 0, i32 0, !dbg !5891
  call void @llvm.dbg.value(metadata %struct._list_node** %av, metadata !5724, metadata !DIExpression(DW_OP_deref)), !dbg !5793
  call void @av_set_add(%struct._list_node** nonnull %av, %struct._expr* %expr) #6, !dbg !5892
  br label %if.end305, !dbg !5892

if.else303:                                       ; preds = %for.end
  %70 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !5893
  call void @llvm.dbg.value(metadata %struct._list_node* %70, metadata !5716, metadata !DIExpression()), !dbg !5793
  %call304 = call fastcc %struct._list_node* @compute_av_set_at_bb_end(%struct.rtx_def* %call, %struct._list_node* %70, i32 %end_ws.034) #7, !dbg !5894
  call void @llvm.dbg.value(metadata %struct._list_node* %call304, metadata !5724, metadata !DIExpression()), !dbg !5793
  store %struct._list_node* %call304, %struct._list_node** %av, align 8, !dbg !5895
  br label %if.end305

if.end305:                                        ; preds = %if.then273, %land.lhs.true276, %if.then283, %if.else303
  %last_insn.030 = phi %struct.rtx_def* [ %last_insn.029, %if.then273 ], [ %last_insn.029, %land.lhs.true276 ], [ %last_insn.029, %if.then283 ], [ %last_insn.029, %if.else303 ]
  %71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5896
  %rt_rtx314 = bitcast %union.rtunion_def* %71 to %struct.rtx_def**, !dbg !5896
  br label %for.cond310, !dbg !5897

for.cond310:                                      ; preds = %for.inc390, %if.end305
  %last_insn.0.pn = phi %struct.rtx_def* [ %last_insn.030, %if.end305 ], [ %cur_insn.0, %for.inc390 ]
  %cur_insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0.pn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5898
  %cur_insn.0.in = bitcast %union.rtunion_def* %cur_insn.0.in.in to %struct.rtx_def**, !dbg !5898
  %cur_insn.0 = load %struct.rtx_def*, %struct.rtx_def** %cur_insn.0.in, align 8, !dbg !5898
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cur_insn.0, metadata !5719, metadata !DIExpression()), !dbg !5793
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx314, align 8, !dbg !5899
  %cmp315 = icmp eq %struct.rtx_def* %cur_insn.0, %72, !dbg !5900
  br i1 %cmp315, label %for.end395, label %for.body317, !dbg !5901

for.body317:                                      ; preds = %for.cond310
  %u318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cur_insn.0, i64 0, i32 1, !dbg !5902
  %73 = getelementptr inbounds %union.u, %union.u* %u318, i64 1, i32 0, i32 0, i64 0, !dbg !5902
  %rt_rtx321 = bitcast %union.rtunion_def* %73 to %struct.rtx_def**, !dbg !5902
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx321, align 8, !dbg !5902
  %75 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !5902
  %cmp322 = icmp eq %struct.rtx_def* %74, %75, !dbg !5902
  br i1 %cmp322, label %for.inc390, label %if.then324, !dbg !5903

if.then324:                                       ; preds = %for.body317
  call void @llvm.dbg.value(metadata %struct._list_node** %av, metadata !5724, metadata !DIExpression(DW_OP_deref)), !dbg !5793
  call fastcc void @moveup_set_expr(%struct._list_node** nonnull %av, %struct.rtx_def* %cur_insn.0, i8 zeroext 0) #7, !dbg !5904
  %76 = load %struct._list_node*, %struct._list_node** %av, align 8, !dbg !5905
  call void @llvm.dbg.value(metadata %struct._list_node* %76, metadata !5724, metadata !DIExpression()), !dbg !5793
  %77 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5906
  %base328 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %77, i64 0, i32 0, !dbg !5906
  %78 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5906
  %base334 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %78, i64 0, i32 0, !dbg !5906
  %arrayidx340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cur_insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5906
  %rt_int341 = bitcast %union.rtunion_def* %arrayidx340 to i32*, !dbg !5906
  %79 = load i32, i32* %rt_int341, align 8, !dbg !5906
  %call342 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base334, i32 %79) #7, !dbg !5906
  %call343 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base328, i32 %call342) #7, !dbg !5906
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call343, i64 0, i32 0, i32 0, !dbg !5906
  %80 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5906
  %call345 = call %struct._expr* @av_set_lookup(%struct._list_node* %76, %struct.vinsn_def* %80) #6, !dbg !5907
  call void @llvm.dbg.value(metadata %struct._expr* %call345, metadata !5776, metadata !DIExpression()), !dbg !5908
  %cmp346 = icmp eq %struct._expr* %call345, null, !dbg !5909
  br i1 %cmp346, label %if.else368, label %if.then348, !dbg !5911

if.then348:                                       ; preds = %if.then324
  call void @clear_expr(%struct._expr* nonnull %call345) #6, !dbg !5912
  %81 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5914
  %base351 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %81, i64 0, i32 0, !dbg !5914
  %82 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5914
  %base357 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %82, i64 0, i32 0, !dbg !5914
  %83 = load i32, i32* %rt_int341, align 8, !dbg !5914
  %call365 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base357, i32 %83) #7, !dbg !5914
  %call366 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base351, i32 %call365) #7, !dbg !5914
  %expr367 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call366, i64 0, i32 0, !dbg !5914
  call void @copy_expr(%struct._expr* nonnull %call345, %struct._expr* %expr367) #6, !dbg !5915
  br label %for.inc390, !dbg !5916

if.else368:                                       ; preds = %if.then324
  %84 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5917
  %base371 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %84, i64 0, i32 0, !dbg !5917
  %85 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5917
  %base377 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %85, i64 0, i32 0, !dbg !5917
  %86 = load i32, i32* %rt_int341, align 8, !dbg !5917
  %call385 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base377, i32 %86) #7, !dbg !5917
  %call386 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base371, i32 %call385) #7, !dbg !5917
  %expr387 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call386, i64 0, i32 0, !dbg !5917
  call void @llvm.dbg.value(metadata %struct._list_node** %av, metadata !5724, metadata !DIExpression(DW_OP_deref)), !dbg !5793
  call void @av_set_add(%struct._list_node** nonnull %av, %struct._expr* %expr387) #6, !dbg !5918
  br label %for.inc390

for.inc390:                                       ; preds = %for.body317, %if.else368, %if.then348
  br label %for.cond310, !dbg !5919, !llvm.loop !5920

for.end395:                                       ; preds = %for.cond310
  %call396 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %first_insn) #6, !dbg !5922
  %tobool397 = icmp eq i8 %call396, 0, !dbg !5922
  br i1 %tobool397, label %if.end432, label %if.then398, !dbg !5924

if.then398:                                       ; preds = %for.end395
  %87 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5925
  %base401 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %87, i64 0, i32 0, !dbg !5925
  %index405 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 9, !dbg !5925
  %88 = load i32, i32* %index405, align 8, !dbg !5925
  %call406 = call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base401, i32 %88) #7, !dbg !5925
  %av_set407 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call406, i64 0, i32 1, !dbg !5925
  call void @av_set_clear(%struct._list_node** nonnull %av_set407) #6, !dbg !5927
  %tobool409 = icmp eq i8 %need_copy_p, 0, !dbg !5928
  %89 = load %struct._list_node*, %struct._list_node** %av, align 8, !dbg !5929
  call void @llvm.dbg.value(metadata %struct._list_node* %89, metadata !5724, metadata !DIExpression()), !dbg !5793
  br i1 %tobool409, label %cond.end413, label %cond.true410, !dbg !5928

cond.true410:                                     ; preds = %if.then398
  %call411 = call %struct._list_node* @av_set_copy(%struct._list_node* %89) #6, !dbg !5930
  br label %cond.end413, !dbg !5928

cond.end413:                                      ; preds = %if.then398, %cond.true410
  %cond414 = phi %struct._list_node* [ %call411, %cond.true410 ], [ %89, %if.then398 ], !dbg !5928
  %90 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5931
  %base417 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %90, i64 0, i32 0, !dbg !5931
  %91 = load i32, i32* %index405, align 8, !dbg !5931
  %call422 = call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base417, i32 %91) #7, !dbg !5931
  %av_set423 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call422, i64 0, i32 1, !dbg !5931
  store %struct._list_node* %cond414, %struct._list_node** %av_set423, align 8, !dbg !5932
  %92 = load i32, i32* @global_level, align 4, !dbg !5933
  %93 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5934
  %base426 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %93, i64 0, i32 0, !dbg !5934
  %94 = load i32, i32* %index405, align 8, !dbg !5934
  %call431 = call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base426, i32 %94) #7, !dbg !5934
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call431, i64 0, i32 2, !dbg !5934
  store i32 %92, i32* %av_level, align 8, !dbg !5935
  br label %if.end432, !dbg !5936

if.end432:                                        ; preds = %for.end395, %cond.end413
  %95 = load i32, i32* @sched_verbose, align 4, !dbg !5937
  %cmp433 = icmp sgt i32 %95, 5, !dbg !5938
  br i1 %cmp433, label %do.body436, label %if.end490, !dbg !5939

do.body436:                                       ; preds = %if.end432
  %96 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5940
  %tobool437 = icmp eq i8 %96, 0, !dbg !5940
  br i1 %tobool437, label %if.else460, label %do.body439, !dbg !5941

do.body439:                                       ; preds = %do.body436
  %arrayidx443 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5942
  %rt_int444 = bitcast %union.rtunion_def* %arrayidx443 to i32*, !dbg !5942
  %97 = load i32, i32* %rt_int444, align 8, !dbg !5942
  %call445 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0), i32 %97) #6, !dbg !5942
  %mul446 = shl nsw i32 %call445, 1, !dbg !5942
  %add447 = or i32 %mul446, 1, !dbg !5942
  call void @llvm.dbg.value(metadata i32 %add447, metadata !5781, metadata !DIExpression()), !dbg !5943
  %conv449 = sext i32 %add447 to i64, !dbg !5942
  %98 = alloca i8, i64 %conv449, align 16, !dbg !5942
  call void @llvm.dbg.value(metadata i8* %98, metadata !5787, metadata !DIExpression()), !dbg !5943
  %99 = load i32, i32* %rt_int444, align 8, !dbg !5942
  %call456 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %98, i64 %conv449, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0), i32 %99) #6, !dbg !5942
  call void @sel_prepare_string_for_dot_label(i8* nonnull %98) #6, !dbg !5942
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5942
  %call457 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %98) #6, !dbg !5942
  br label %do.end468, !dbg !5942

if.else460:                                       ; preds = %do.body436
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5940
  %arrayidx463 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5940
  %rt_int464 = bitcast %union.rtunion_def* %arrayidx463 to i32*, !dbg !5940
  %102 = load i32, i32* %rt_int464, align 8, !dbg !5940
  %call465 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %101, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0), i32 %102) #6, !dbg !5940
  br label %do.end468

do.end468:                                        ; preds = %if.else460, %do.body439
  %103 = load %struct._list_node*, %struct._list_node** %av, align 8, !dbg !5944
  call void @llvm.dbg.value(metadata %struct._list_node* %103, metadata !5724, metadata !DIExpression()), !dbg !5793
  call void @dump_av_set(%struct._list_node* %103) #6, !dbg !5945
  %104 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5946
  %tobool470 = icmp eq i8 %104, 0, !dbg !5946
  br i1 %tobool470, label %if.else485, label %do.body472, !dbg !5947

do.body472:                                       ; preds = %do.end468
  %call474 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5948
  %mul475 = shl nsw i32 %call474, 1, !dbg !5948
  %add476 = or i32 %mul475, 1, !dbg !5948
  call void @llvm.dbg.value(metadata i32 %add476, metadata !5788, metadata !DIExpression()), !dbg !5949
  %conv478 = sext i32 %add476 to i64, !dbg !5948
  %105 = alloca i8, i64 %conv478, align 16, !dbg !5948
  call void @llvm.dbg.value(metadata i8* %105, metadata !5792, metadata !DIExpression()), !dbg !5949
  %call481 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %105, i64 %conv478, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5948
  call void @sel_prepare_string_for_dot_label(i8* nonnull %105) #6, !dbg !5948
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5948
  %call482 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %106, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %105) #6, !dbg !5948
  br label %if.end490, !dbg !5948

if.else485:                                       ; preds = %do.end468
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5946
  %call486 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5946
  br label %if.end490

if.end490:                                        ; preds = %do.body472, %if.else485, %if.end432
  call void @llvm.dbg.value(metadata %struct._list_node** %p.addr, metadata !5716, metadata !DIExpression(DW_OP_deref)), !dbg !5793
  call fastcc void @_list_remove(%struct._list_node** nonnull %p.addr) #7, !dbg !5950
  %108 = load %struct._list_node*, %struct._list_node** %av, align 8, !dbg !5951
  call void @llvm.dbg.value(metadata %struct._list_node* %108, metadata !5724, metadata !DIExpression()), !dbg !5793
  br label %cleanup, !dbg !5952

cleanup:                                          ; preds = %if.end107, %cond.true110, %if.then, %if.else, %do.body12, %if.end490
  %retval.0 = phi %struct._list_node* [ %108, %if.end490 ], [ null, %do.body12 ], [ null, %if.else ], [ null, %if.then ], [ %call111, %cond.true110 ], [ %av_set.0, %if.end107 ], !dbg !5793
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5953
  ret %struct._list_node* %retval.0, !dbg !5953
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_ineligible_successor(%struct.rtx_def* %insn, %struct._list_node* %p) unnamed_addr #5 !dbg !5954 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5958, metadata !DIExpression()), !dbg !5961
  call void @llvm.dbg.value(metadata %struct._list_node* %p, metadata !5959, metadata !DIExpression()), !dbg !5961
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5962
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5962
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5962
  %tobool = icmp eq %struct.rtx_def* %1, null, !dbg !5962
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5964

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5965
  %rt_rtx8 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5965
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !5965
  %cmp = icmp eq %struct.rtx_def* %3, %insn, !dbg !5966
  br i1 %cmp, label %if.else, label %if.then, !dbg !5967

if.then:                                          ; preds = %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2673, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5968
  br label %if.end25, !dbg !5968

if.else:                                          ; preds = %land.lhs.true, %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5969
  %rt_rtx12 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !5969
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !5969
  %tobool13 = icmp eq %struct.rtx_def* %5, null, !dbg !5969
  br i1 %tobool13, label %if.end25, label %land.lhs.true14, !dbg !5971

land.lhs.true14:                                  ; preds = %if.else
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5972
  %rt_rtx22 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !5972
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !5972
  %cmp23 = icmp eq %struct.rtx_def* %7, %insn, !dbg !5973
  br i1 %cmp23, label %if.end25, label %if.then24, !dbg !5974

if.then24:                                        ; preds = %land.lhs.true14
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2675, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5975
  br label %if.end25, !dbg !5975

if.end25:                                         ; preds = %land.lhs.true14, %if.else, %if.then24, %if.then
  %tobool26 = icmp eq %struct._list_node* %p, null, !dbg !5976
  br i1 %tobool26, label %cleanup, label %if.end28, !dbg !5978

if.end28:                                         ; preds = %if.end25
  %x = getelementptr inbounds %struct._list_node, %struct._list_node* %p, i64 0, i32 1, i32 0, i32 0, !dbg !5979
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5979
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !5960, metadata !DIExpression()), !dbg !5961
  %9 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5980
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %9, i64 0, i32 0, !dbg !5980
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5980
  %base33 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !5980
  %arrayidx39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5980
  %rt_int = bitcast %union.rtunion_def* %arrayidx39 to i32*, !dbg !5980
  %11 = load i32, i32* %rt_int, align 8, !dbg !5980
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base33, i32 %11) #7, !dbg !5980
  %call40 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !5980
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call40, i64 0, i32 2, !dbg !5980
  %12 = load i32, i32* %seqno, align 4, !dbg !5980
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5982
  %base43 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %13, i64 0, i32 0, !dbg !5982
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5982
  %base49 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !5982
  %arrayidx55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5982
  %rt_int56 = bitcast %union.rtunion_def* %arrayidx55 to i32*, !dbg !5982
  %15 = load i32, i32* %rt_int56, align 8, !dbg !5982
  %call57 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base49, i32 %15) #7, !dbg !5982
  %call58 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base43, i32 %call57) #7, !dbg !5982
  %seqno59 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call58, i64 0, i32 2, !dbg !5982
  %16 = load i32, i32* %seqno59, align 4, !dbg !5982
  %cmp60 = icmp slt i32 %12, %16, !dbg !5983
  br i1 %cmp60, label %cleanup, label %lor.lhs.false, !dbg !5984

lor.lhs.false:                                    ; preds = %if.end28
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5985
  %base63 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i64 0, i32 0, !dbg !5985
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5985
  %base69 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i64 0, i32 0, !dbg !5985
  %19 = load i32, i32* %rt_int, align 8, !dbg !5985
  %call77 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base69, i32 %19) #7, !dbg !5985
  %call78 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base63, i32 %call77) #7, !dbg !5985
  %seqno79 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call78, i64 0, i32 2, !dbg !5985
  %20 = load i32, i32* %seqno79, align 4, !dbg !5985
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5986
  %base82 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i64 0, i32 0, !dbg !5986
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5986
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %22, i64 0, i32 0, !dbg !5986
  %23 = load i32, i32* %rt_int56, align 8, !dbg !5986
  %call96 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base88, i32 %23) #7, !dbg !5986
  %call97 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base82, i32 %call96) #7, !dbg !5986
  %seqno98 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call97, i64 0, i32 2, !dbg !5986
  %24 = load i32, i32* %seqno98, align 4, !dbg !5986
  %cmp99 = icmp eq i32 %20, %24, !dbg !5987
  br i1 %cmp99, label %land.lhs.true100, label %lor.lhs.false107, !dbg !5988

land.lhs.true100:                                 ; preds = %lor.lhs.false
  %call101 = tail call fastcc zeroext i8 @_xlist_is_in_p(%struct._list_node* nonnull %p, %struct.rtx_def* %insn) #7, !dbg !5989
  %tobool102 = icmp eq i8 %call101, 0, !dbg !5989
  br i1 %tobool102, label %lor.lhs.false103, label %cleanup, !dbg !5990

lor.lhs.false103:                                 ; preds = %land.lhs.true100
  %25 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !5991
  %call104 = tail call %struct._fence* @flist_lookup(%struct._list_node* %25, %struct.rtx_def* %insn) #6, !dbg !5991
  %cmp105 = icmp eq %struct._fence* %call104, null, !dbg !5991
  br i1 %cmp105, label %lor.lhs.false107, label %cleanup, !dbg !5992

lor.lhs.false107:                                 ; preds = %lor.lhs.false103, %lor.lhs.false
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5993
  %base110 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %26, i64 0, i32 0, !dbg !5993
  %27 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5993
  %base116 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %27, i64 0, i32 0, !dbg !5993
  %28 = load i32, i32* %rt_int, align 8, !dbg !5993
  %call124 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base116, i32 %28) #7, !dbg !5993
  %call125 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base110, i32 %call124) #7, !dbg !5993
  %seqno126 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call125, i64 0, i32 2, !dbg !5993
  %29 = load i32, i32* %seqno126, align 4, !dbg !5993
  %30 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5994
  %base129 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %30, i64 0, i32 0, !dbg !5994
  %31 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5994
  %base135 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %31, i64 0, i32 0, !dbg !5994
  %32 = load i32, i32* %rt_int56, align 8, !dbg !5994
  %call143 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base135, i32 %32) #7, !dbg !5994
  %call144 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base129, i32 %call143) #7, !dbg !5994
  %seqno145 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call144, i64 0, i32 2, !dbg !5994
  %33 = load i32, i32* %seqno145, align 4, !dbg !5994
  %cmp146 = icmp sgt i32 %29, %33, !dbg !5995
  br i1 %cmp146, label %land.lhs.true148, label %lor.lhs.false152, !dbg !5996

land.lhs.true148:                                 ; preds = %lor.lhs.false107
  %34 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !5997
  %call149 = tail call %struct._fence* @flist_lookup(%struct._list_node* %34, %struct.rtx_def* %insn) #6, !dbg !5997
  %cmp150 = icmp eq %struct._fence* %call149, null, !dbg !5997
  br i1 %cmp150, label %lor.lhs.false152, label %cleanup, !dbg !5998

lor.lhs.false152:                                 ; preds = %land.lhs.true148, %lor.lhs.false107
  %35 = load i8, i8* @pipelining_p, align 1, !dbg !5999
  %tobool153 = icmp eq i8 %35, 0, !dbg !5999
  br i1 %tobool153, label %land.lhs.true154, label %if.else176, !dbg !6000

land.lhs.true154:                                 ; preds = %lor.lhs.false152
  %36 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6001
  %base157 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %36, i64 0, i32 0, !dbg !6001
  %37 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6001
  %base163 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %37, i64 0, i32 0, !dbg !6001
  %38 = load i32, i32* %rt_int, align 8, !dbg !6001
  %call171 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base163, i32 %38) #7, !dbg !6001
  %call172 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base157, i32 %call171) #7, !dbg !6001
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call172, i64 0, i32 0, i32 5, !dbg !6001
  %39 = load i32, i32* %sched_times, align 8, !dbg !6001
  %cmp173 = icmp sgt i32 %39, 0, !dbg !6002
  br i1 %cmp173, label %cleanup, label %if.else176, !dbg !6003

if.else176:                                       ; preds = %lor.lhs.false152, %land.lhs.true154
  br label %cleanup, !dbg !6004

cleanup:                                          ; preds = %lor.lhs.false103, %land.lhs.true100, %land.lhs.true148, %if.end25, %if.end28, %land.lhs.true154, %if.else176
  %retval.0 = phi i8 [ 0, %if.else176 ], [ 0, %if.end25 ], [ 1, %land.lhs.true154 ], [ 1, %land.lhs.true148 ], [ 1, %lor.lhs.false103 ], [ 1, %land.lhs.true100 ], [ 1, %if.end28 ], !dbg !5961
  ret i8 %retval.0, !dbg !6005
}

declare dso_local void @dump_av_set(%struct._list_node*) local_unnamed_addr #2

declare dso_local %struct._list_node* @av_set_copy(%struct._list_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_xlist_add(%struct._list_node** %lp, %struct.rtx_def* %x) unnamed_addr #0 !dbg !6006 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !6011, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6012, metadata !DIExpression()), !dbg !6013
  tail call fastcc void @_list_add(%struct._list_node** %lp) #7, !dbg !6014
  %0 = load %struct._list_node*, %struct._list_node** %lp, align 8, !dbg !6015
  %x1 = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 0, !dbg !6015
  store %struct.rtx_def* %x, %struct.rtx_def** %x1, align 8, !dbg !6016
  ret void, !dbg !6017
}

declare dso_local void @av_set_add(%struct._list_node**, %struct._expr*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct._list_node* @compute_av_set_at_bb_end(%struct.rtx_def* %insn, %struct._list_node* %p, i32 %ws) unnamed_addr #5 !dbg !6018 {
entry:
  %p.addr = alloca %struct._list_node*, align 8
  %expr_in_all_succ_branches = alloca %struct._list_node*, align 8
  %succ = alloca %struct.rtx_def*, align 8
  %av1 = alloca %struct._list_node*, align 8
  %succ_set = alloca %struct._list_node*, align 8
  %i = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  %i259 = alloca %struct._list_iterator, align 8
  %expr260 = alloca %struct._expr*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6022, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata %struct._list_node* %p, metadata !6023, metadata !DIExpression()), !dbg !6105
  store %struct._list_node* %p, %struct._list_node** %p.addr, align 8
  call void @llvm.dbg.value(metadata i32 %ws, metadata !6024, metadata !DIExpression()), !dbg !6105
  %0 = bitcast %struct._list_node** %expr_in_all_succ_branches to i8*, !dbg !6106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6106
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !6047, metadata !DIExpression()), !dbg !6105
  store %struct._list_node* null, %struct._list_node** %expr_in_all_succ_branches, align 8, !dbg !6107
  %1 = bitcast %struct.rtx_def** %succ to i8*, !dbg !6108
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6108
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6050, metadata !DIExpression()), !dbg !6105
  %2 = bitcast %struct._list_node** %av1 to i8*, !dbg !6109
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6109
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !6051, metadata !DIExpression()), !dbg !6105
  store %struct._list_node* null, %struct._list_node** %av1, align 8, !dbg !6110
  %call = tail call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %insn) #6, !dbg !6111
  %tobool = icmp eq i8 %call, 0, !dbg !6111
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6111

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2720, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6111
  br label %cond.end, !dbg !6111

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call %struct.succs_info* @compute_succs_info(%struct.rtx_def* %insn, i16 signext 1) #6, !dbg !6112
  call void @llvm.dbg.value(metadata %struct.succs_info* %call1, metadata !6025, metadata !DIExpression()), !dbg !6105
  %3 = load i32, i32* @sched_verbose, align 4, !dbg !6113
  %cmp = icmp sgt i32 %3, 5, !dbg !6114
  br i1 %cmp, label %do.body, label %if.end70, !dbg !6115

do.body:                                          ; preds = %cond.end
  %4 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6116
  %tobool2 = icmp eq i8 %4, 0, !dbg !6116
  br i1 %tobool2, label %if.else, label %do.body4, !dbg !6117

do.body4:                                         ; preds = %do.body
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6118
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6118
  %5 = load i32, i32* %rt_int, align 8, !dbg !6118
  %call5 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i32 %5) #6, !dbg !6118
  %mul = shl nsw i32 %call5, 1, !dbg !6118
  %add = or i32 %mul, 1, !dbg !6118
  call void @llvm.dbg.value(metadata i32 %add, metadata !6052, metadata !DIExpression()), !dbg !6119
  %conv = sext i32 %add to i64, !dbg !6118
  %6 = alloca i8, i64 %conv, align 16, !dbg !6118
  call void @llvm.dbg.value(metadata i8* %6, metadata !6058, metadata !DIExpression()), !dbg !6119
  %7 = load i32, i32* %rt_int, align 8, !dbg !6118
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 %conv, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i32 %7) #6, !dbg !6118
  call void @sel_prepare_string_for_dot_label(i8* nonnull %6) #6, !dbg !6118
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6118
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %6) #6, !dbg !6118
  br label %do.end20, !dbg !6118

if.else:                                          ; preds = %do.body
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6116
  %arrayidx16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6116
  %rt_int17 = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !6116
  %10 = load i32, i32* %rt_int17, align 8, !dbg !6116
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i32 %10) #6, !dbg !6116
  br label %do.end20

do.end20:                                         ; preds = %if.else, %do.body4
  %succs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call1, i64 0, i32 1, !dbg !6120
  %11 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_ok, align 8, !dbg !6120
  call void @dump_insn_vector(%struct.VEC_rtx_heap* %11) #6, !dbg !6121
  %12 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6122
  %tobool22 = icmp eq i8 %12, 0, !dbg !6122
  br i1 %tobool22, label %if.else37, label %do.body24, !dbg !6123

do.body24:                                        ; preds = %do.end20
  %call26 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !6124
  %mul27 = shl nsw i32 %call26, 1, !dbg !6124
  %add28 = or i32 %mul27, 1, !dbg !6124
  call void @llvm.dbg.value(metadata i32 %add28, metadata !6059, metadata !DIExpression()), !dbg !6125
  %conv30 = sext i32 %add28 to i64, !dbg !6124
  %13 = alloca i8, i64 %conv30, align 16, !dbg !6124
  call void @llvm.dbg.value(metadata i8* %13, metadata !6063, metadata !DIExpression()), !dbg !6125
  %call33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %13, i64 %conv30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !6124
  call void @sel_prepare_string_for_dot_label(i8* nonnull %13) #6, !dbg !6124
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6124
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %13) #6, !dbg !6124
  br label %do.end41, !dbg !6124

if.else37:                                        ; preds = %do.end20
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6122
  %call38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !6122
  br label %do.end41

do.end41:                                         ; preds = %if.else37, %do.body24
  %succs_ok_n = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call1, i64 0, i32 6, !dbg !6126
  %16 = load i32, i32* %succs_ok_n, align 8, !dbg !6126
  %all_succs_n = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call1, i64 0, i32 5, !dbg !6127
  %17 = load i32, i32* %all_succs_n, align 4, !dbg !6127
  %cmp42 = icmp eq i32 %16, %17, !dbg !6128
  br i1 %cmp42, label %if.end70, label %do.body45, !dbg !6129

do.body45:                                        ; preds = %do.end41
  %18 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6130
  %tobool46 = icmp eq i8 %18, 0, !dbg !6130
  br i1 %tobool46, label %if.else63, label %do.body48, !dbg !6131

do.body48:                                        ; preds = %do.body45
  %call51 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0), i32 %17) #6, !dbg !6132
  %mul52 = shl nsw i32 %call51, 1, !dbg !6132
  %add53 = or i32 %mul52, 1, !dbg !6132
  call void @llvm.dbg.value(metadata i32 %add53, metadata !6064, metadata !DIExpression()), !dbg !6133
  %conv55 = sext i32 %add53 to i64, !dbg !6132
  %19 = alloca i8, i64 %conv55, align 16, !dbg !6132
  call void @llvm.dbg.value(metadata i8* %19, metadata !6069, metadata !DIExpression()), !dbg !6133
  %20 = load i32, i32* %all_succs_n, align 4, !dbg !6132
  %call59 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %19, i64 %conv55, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0), i32 %20) #6, !dbg !6132
  call void @sel_prepare_string_for_dot_label(i8* nonnull %19) #6, !dbg !6132
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6132
  %call60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %19) #6, !dbg !6132
  br label %if.end70, !dbg !6132

if.else63:                                        ; preds = %do.body45
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6130
  %call65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0), i32 %17) #6, !dbg !6130
  br label %if.end70

if.end70:                                         ; preds = %do.end41, %if.else63, %do.body48, %cond.end
  call void @llvm.dbg.value(metadata %struct._list_node** %p.addr, metadata !6023, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  call fastcc void @_xlist_add(%struct._list_node** nonnull %p.addr, %struct.rtx_def* %insn) #7, !dbg !6134
  call void @llvm.dbg.value(metadata i32 0, metadata !6048, metadata !DIExpression()), !dbg !6105
  %succs_ok71 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call1, i64 0, i32 1, !dbg !6135
  %23 = bitcast %struct._list_node** %succ_set to i8*, !dbg !6136
  %probs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call1, i64 0, i32 2, !dbg !6136
  %all_prob = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call1, i64 0, i32 4, !dbg !6136
  %all_succs_n89 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call1, i64 0, i32 5, !dbg !6137
  %24 = bitcast %struct._list_iterator* %i to i8*, !dbg !6138
  %25 = bitcast %struct._expr** %expr to i8*, !dbg !6138
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !6139
  %succs_ok_n108 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call1, i64 0, i32 6, !dbg !6142
  br label %for.cond, !dbg !6143

for.cond:                                         ; preds = %if.end164, %if.end70
  %is.0 = phi i32 [ 0, %if.end70 ], [ %inc, %if.end164 ], !dbg !6144
  %zero_succ.0 = phi %struct.rtx_def* [ null, %if.end70 ], [ %zero_succ.2, %if.end164 ], !dbg !6105
  call void @llvm.dbg.value(metadata %struct.rtx_def* %zero_succ.0, metadata !6050, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata i32 %is.0, metadata !6048, metadata !DIExpression()), !dbg !6105
  %26 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_ok71, align 8, !dbg !6145
  %tobool72 = icmp eq %struct.VEC_rtx_heap* %26, null, !dbg !6145
  br i1 %tobool72, label %cond.end76, label %cond.true73, !dbg !6145

cond.true73:                                      ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %26, i64 0, i32 0, !dbg !6145
  br label %cond.end76, !dbg !6145

cond.end76:                                       ; preds = %for.cond, %cond.true73
  %cond77 = phi %struct.VEC_rtx_base* [ %base, %cond.true73 ], [ null, %for.cond ], !dbg !6145
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !6049, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  %call78 = call fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond77, i32 %is.0, %struct.rtx_def** nonnull %succ) #7, !dbg !6145
  %tobool79 = icmp eq i32 %call78, 0, !dbg !6146
  br i1 %tobool79, label %for.end166, label %for.body, !dbg !6146

for.body:                                         ; preds = %cond.end76
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8, !dbg !6147
  %27 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6148
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !6049, metadata !DIExpression()), !dbg !6105
  %28 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !6149
  call void @llvm.dbg.value(metadata %struct._list_node* %28, metadata !6023, metadata !DIExpression()), !dbg !6105
  %call80 = call fastcc %struct._list_node* @compute_av_set_inside_bb(%struct.rtx_def* %27, %struct._list_node* %28, i32 %ws, i8 zeroext 1) #7, !dbg !6150
  call void @llvm.dbg.value(metadata %struct._list_node* %call80, metadata !6070, metadata !DIExpression()), !dbg !6136
  store %struct._list_node* %call80, %struct._list_node** %succ_set, align 8, !dbg !6151
  call void @llvm.dbg.value(metadata %struct._list_node* %call80, metadata !6070, metadata !DIExpression()), !dbg !6136
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %probs_ok, align 8, !dbg !6152
  %tobool81 = icmp eq %struct.VEC_int_heap* %29, null, !dbg !6152
  br i1 %tobool81, label %cond.end86, label %cond.true82, !dbg !6152

cond.true82:                                      ; preds = %for.body
  %base84 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %29, i64 0, i32 0, !dbg !6152
  br label %cond.end86, !dbg !6152

cond.end86:                                       ; preds = %for.body, %cond.true82
  %cond87 = phi %struct.VEC_int_base* [ %base84, %cond.true82 ], [ null, %for.body ], !dbg !6152
  %call88 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %cond87, i32 %is.0) #7, !dbg !6152
  %30 = load i32, i32* %all_prob, align 8, !dbg !6153
  call void @av_set_split_usefulness(%struct._list_node* %call80, i32 %call88, i32 %30) #6, !dbg !6154
  %31 = load i32, i32* %all_succs_n89, align 4, !dbg !6155
  %cmp90 = icmp sgt i32 %31, 1, !dbg !6156
  br i1 %cmp90, label %if.then92, label %if.end107, !dbg !6157

if.then92:                                        ; preds = %cond.end86
  %cmp93 = icmp eq i32 %is.0, 0, !dbg !6158
  br i1 %cmp93, label %if.then95, label %if.else97, !dbg !6159

if.then95:                                        ; preds = %if.then92
  %32 = load %struct._list_node*, %struct._list_node** %succ_set, align 8, !dbg !6160
  call void @llvm.dbg.value(metadata %struct._list_node* %32, metadata !6070, metadata !DIExpression()), !dbg !6136
  %call96 = call %struct._list_node* @av_set_copy(%struct._list_node* %32) #6, !dbg !6162
  call void @llvm.dbg.value(metadata %struct._list_node* %call96, metadata !6047, metadata !DIExpression()), !dbg !6105
  store %struct._list_node* %call96, %struct._list_node** %expr_in_all_succ_branches, align 8, !dbg !6163
  %33 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6164
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !6049, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !6050, metadata !DIExpression()), !dbg !6105
  br label %if.end107, !dbg !6165

if.else97:                                        ; preds = %if.then92
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8, !dbg !6166
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8, !dbg !6167
  call void @llvm.dbg.value(metadata %struct._list_node** %expr_in_all_succ_branches, metadata !6047, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6074, metadata !DIExpression(DW_OP_deref)), !dbg !6138
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** nonnull %expr_in_all_succ_branches, i8 zeroext 1) #7, !dbg !6168
  br label %for.cond98, !dbg !6168

for.cond98:                                       ; preds = %for.inc, %if.else97
  %34 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6169
  %35 = load %struct._list_node*, %struct._list_node** %34, align 8, !dbg !6169
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !6079, metadata !DIExpression(DW_OP_deref)), !dbg !6138
  %call99 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %35, %struct._expr** nonnull %expr) #7, !dbg !6169
  %tobool100 = icmp eq i8 %call99, 0, !dbg !6168
  br i1 %tobool100, label %for.end, label %for.body101, !dbg !6168

for.body101:                                      ; preds = %for.cond98
  %36 = load %struct._list_node*, %struct._list_node** %succ_set, align 8, !dbg !6170
  call void @llvm.dbg.value(metadata %struct._list_node* %36, metadata !6070, metadata !DIExpression()), !dbg !6136
  %37 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6172
  call void @llvm.dbg.value(metadata %struct._expr* %37, metadata !6079, metadata !DIExpression()), !dbg !6138
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %37, i64 0, i32 0, !dbg !6172
  %38 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6172
  %call102 = call zeroext i8 @av_set_is_in_p(%struct._list_node* %36, %struct.vinsn_def* %38) #6, !dbg !6173
  %tobool103 = icmp eq i8 %call102, 0, !dbg !6173
  br i1 %tobool103, label %if.then104, label %for.inc, !dbg !6174

if.then104:                                       ; preds = %for.body101
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6074, metadata !DIExpression(DW_OP_deref)), !dbg !6138
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %i) #6, !dbg !6175
  br label %for.inc, !dbg !6175

for.inc:                                          ; preds = %for.body101, %if.then104
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6074, metadata !DIExpression(DW_OP_deref)), !dbg !6138
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #7, !dbg !6169
  br label %for.cond98, !dbg !6169, !llvm.loop !6176

for.end:                                          ; preds = %for.cond98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8, !dbg !6178
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8, !dbg !6178
  br label %if.end107

if.end107:                                        ; preds = %if.then95, %for.end, %cond.end86
  %zero_succ.2 = phi %struct.rtx_def* [ %zero_succ.0, %cond.end86 ], [ %33, %if.then95 ], [ %zero_succ.0, %for.end ], !dbg !6105
  call void @llvm.dbg.value(metadata %struct.rtx_def* %zero_succ.2, metadata !6050, metadata !DIExpression()), !dbg !6105
  %39 = load i32, i32* %succs_ok_n108, align 8, !dbg !6179
  %cmp109 = icmp eq i32 %39, 2, !dbg !6180
  %cmp111 = icmp eq i32 %is.0, 1, !dbg !6181
  %or.cond = and i1 %cmp109, %cmp111, !dbg !6182
  br i1 %or.cond, label %if.then113, label %if.else163, !dbg !6182

if.then113:                                       ; preds = %if.end107
  %arrayidx116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %zero_succ.2, i64 0, i32 1, i32 0, i32 1, !dbg !6183
  %rt_bb = bitcast %struct.object_block** %arrayidx116 to %struct.basic_block_def**, !dbg !6183
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6183
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %40, metadata !6080, metadata !DIExpression()), !dbg !6184
  %41 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %41, metadata !6049, metadata !DIExpression()), !dbg !6105
  %arrayidx119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 1, i32 0, i32 1, !dbg !6185
  %rt_bb120 = bitcast %struct.object_block** %arrayidx119 to %struct.basic_block_def**, !dbg !6185
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb120, align 8, !dbg !6185
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %42, metadata !6083, metadata !DIExpression()), !dbg !6184
  %43 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6186
  %base123 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %43, i64 0, i32 0, !dbg !6186
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i64 0, i32 9, !dbg !6186
  %44 = load i32, i32* %index, align 8, !dbg !6186
  %call127 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base123, i32 %44) #7, !dbg !6186
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call127, i64 0, i32 1, !dbg !6186
  %45 = load i8, i8* %lv_set_valid_p, align 8, !dbg !6186
  %tobool129 = icmp eq i8 %45, 0, !dbg !6186
  br i1 %tobool129, label %cond.true142, label %land.lhs.true130, !dbg !6186

land.lhs.true130:                                 ; preds = %if.then113
  %46 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6186
  %base133 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %46, i64 0, i32 0, !dbg !6186
  %index137 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i64 0, i32 9, !dbg !6186
  %47 = load i32, i32* %index137, align 8, !dbg !6186
  %call138 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base133, i32 %47) #7, !dbg !6186
  %lv_set_valid_p139 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call138, i64 0, i32 1, !dbg !6186
  %48 = load i8, i8* %lv_set_valid_p139, align 8, !dbg !6186
  %tobool141 = icmp eq i8 %48, 0, !dbg !6186
  br i1 %tobool141, label %cond.true142, label %cond.end144, !dbg !6186

cond.true142:                                     ; preds = %land.lhs.true130, %if.then113
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2780, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6186
  br label %cond.end144, !dbg !6186

cond.end144:                                      ; preds = %land.lhs.true130, %cond.true142
  %49 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6187
  %base148 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %49, i64 0, i32 0, !dbg !6187
  %50 = load i32, i32* %index, align 8, !dbg !6187
  %call153 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base148, i32 %50) #7, !dbg !6187
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call153, i64 0, i32 0, !dbg !6187
  %51 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !6187
  %52 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6188
  %base156 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %52, i64 0, i32 0, !dbg !6188
  %index160 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i64 0, i32 9, !dbg !6188
  %53 = load i32, i32* %index160, align 8, !dbg !6188
  %call161 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base156, i32 %53) #7, !dbg !6188
  %lv_set162 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call161, i64 0, i32 0, !dbg !6188
  %54 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set162, align 8, !dbg !6188
  call void @llvm.dbg.value(metadata %struct._list_node** %av1, metadata !6051, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  call void @llvm.dbg.value(metadata %struct._list_node** %succ_set, metadata !6070, metadata !DIExpression(DW_OP_deref)), !dbg !6136
  call void @av_set_union_and_live(%struct._list_node** nonnull %av1, %struct._list_node** nonnull %succ_set, %struct.bitmap_head_def* %51, %struct.bitmap_head_def* %54, %struct.rtx_def* %insn) #6, !dbg !6189
  br label %if.end164, !dbg !6190

if.else163:                                       ; preds = %if.end107
  call void @llvm.dbg.value(metadata %struct._list_node** %av1, metadata !6051, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  call void @llvm.dbg.value(metadata %struct._list_node** %succ_set, metadata !6070, metadata !DIExpression(DW_OP_deref)), !dbg !6136
  call void @av_set_union_and_clear(%struct._list_node** nonnull %av1, %struct._list_node** nonnull %succ_set, %struct.rtx_def* %insn) #6, !dbg !6191
  br label %if.end164

if.end164:                                        ; preds = %if.else163, %cond.end144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8, !dbg !6192
  %inc = add nuw nsw i32 %is.0, 1, !dbg !6193
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6048, metadata !DIExpression()), !dbg !6105
  br label %for.cond, !dbg !6194, !llvm.loop !6195

for.end166:                                       ; preds = %cond.end76
  %55 = load i32, i32* %succs_ok_n108, align 8, !dbg !6197
  %cmp168 = icmp sgt i32 %55, 2, !dbg !6198
  br i1 %cmp168, label %for.cond171.preheader, label %if.end221, !dbg !6199

for.cond171.preheader:                            ; preds = %for.end166
  br label %for.cond171, !dbg !6200

for.cond171:                                      ; preds = %for.cond171.preheader, %cond.end199
  %is.1 = phi i32 [ %inc219, %cond.end199 ], [ 0, %for.cond171.preheader ], !dbg !6201
  call void @llvm.dbg.value(metadata i32 %is.1, metadata !6048, metadata !DIExpression()), !dbg !6105
  %56 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_ok71, align 8, !dbg !6202
  %tobool173 = icmp eq %struct.VEC_rtx_heap* %56, null, !dbg !6202
  br i1 %tobool173, label %cond.end178, label %cond.true174, !dbg !6202

cond.true174:                                     ; preds = %for.cond171
  %base176 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %56, i64 0, i32 0, !dbg !6202
  br label %cond.end178, !dbg !6202

cond.end178:                                      ; preds = %for.cond171, %cond.true174
  %cond179 = phi %struct.VEC_rtx_base* [ %base176, %cond.true174 ], [ null, %for.cond171 ], !dbg !6202
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !6049, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  %call180 = call fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond179, i32 %is.1, %struct.rtx_def** nonnull %succ) #7, !dbg !6202
  %tobool181 = icmp eq i32 %call180, 0, !dbg !6200
  br i1 %tobool181, label %if.end221.loopexit, label %for.body182, !dbg !6200

for.body182:                                      ; preds = %cond.end178
  %57 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6203
  call void @llvm.dbg.value(metadata %struct.rtx_def* %57, metadata !6049, metadata !DIExpression()), !dbg !6105
  %arrayidx185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i64 0, i32 1, i32 0, i32 1, !dbg !6203
  %rt_bb186 = bitcast %struct.object_block** %arrayidx185 to %struct.basic_block_def**, !dbg !6203
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb186, align 8, !dbg !6203
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %58, metadata !6084, metadata !DIExpression()), !dbg !6204
  %59 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6205
  %base189 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %59, i64 0, i32 0, !dbg !6205
  %index193 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %58, i64 0, i32 9, !dbg !6205
  %60 = load i32, i32* %index193, align 8, !dbg !6205
  %call194 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base189, i32 %60) #7, !dbg !6205
  %lv_set_valid_p195 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call194, i64 0, i32 1, !dbg !6205
  %61 = load i8, i8* %lv_set_valid_p195, align 8, !dbg !6205
  %tobool196 = icmp eq i8 %61, 0, !dbg !6205
  br i1 %tobool196, label %cond.true197, label %cond.end199, !dbg !6205

cond.true197:                                     ; preds = %for.body182
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2797, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6205
  br label %cond.end199, !dbg !6205

cond.end199:                                      ; preds = %for.body182, %cond.true197
  %62 = load %struct._list_node*, %struct._list_node** %av1, align 8, !dbg !6206
  call void @llvm.dbg.value(metadata %struct._list_node* %62, metadata !6051, metadata !DIExpression()), !dbg !6105
  %63 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6207
  %base203 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %63, i64 0, i32 0, !dbg !6207
  %64 = load i32, i32* %index193, align 8, !dbg !6207
  %call208 = call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base203, i32 %64) #7, !dbg !6207
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call208, i64 0, i32 1, !dbg !6207
  %65 = load %struct._list_node*, %struct._list_node** %av_set, align 8, !dbg !6207
  %66 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6208
  %base211 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %66, i64 0, i32 0, !dbg !6208
  %67 = load i32, i32* %index193, align 8, !dbg !6208
  %call216 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base211, i32 %67) #7, !dbg !6208
  %lv_set217 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call216, i64 0, i32 0, !dbg !6208
  %68 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set217, align 8, !dbg !6208
  call void @mark_unavailable_targets(%struct._list_node* %62, %struct._list_node* %65, %struct.bitmap_head_def* %68) #6, !dbg !6209
  %inc219 = add nuw nsw i32 %is.1, 1, !dbg !6210
  call void @llvm.dbg.value(metadata i32 %inc219, metadata !6048, metadata !DIExpression()), !dbg !6105
  br label %for.cond171, !dbg !6211, !llvm.loop !6212

if.end221.loopexit:                               ; preds = %cond.end178
  %.pre = load i32, i32* %succs_ok_n108, align 8, !dbg !6214
  br label %if.end221, !dbg !6216

if.end221:                                        ; preds = %if.end221.loopexit, %for.end166
  %69 = phi i32 [ %.pre, %if.end221.loopexit ], [ %55, %for.end166 ], !dbg !6214
  %70 = load i32, i32* %all_succs_n89, align 4, !dbg !6216
  %cmp224 = icmp sgt i32 %70, %69, !dbg !6217
  br i1 %cmp224, label %for.cond227.preheader, label %if.end254, !dbg !6218

for.cond227.preheader:                            ; preds = %if.end221
  %succs_other = getelementptr inbounds %struct.succs_info, %struct.succs_info* %call1, i64 0, i32 3, !dbg !6219
  br label %for.cond227, !dbg !6222

for.cond227:                                      ; preds = %for.cond227.preheader, %for.body237
  %is.2 = phi i32 [ %inc252, %for.body237 ], [ 0, %for.cond227.preheader ], !dbg !6223
  call void @llvm.dbg.value(metadata i32 %is.2, metadata !6048, metadata !DIExpression()), !dbg !6105
  %71 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_other, align 8, !dbg !6224
  %tobool228 = icmp eq %struct.VEC_rtx_heap* %71, null, !dbg !6224
  br i1 %tobool228, label %cond.end233, label %cond.true229, !dbg !6224

cond.true229:                                     ; preds = %for.cond227
  %base231 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %71, i64 0, i32 0, !dbg !6224
  br label %cond.end233, !dbg !6224

cond.end233:                                      ; preds = %for.cond227, %cond.true229
  %cond234 = phi %struct.VEC_rtx_base* [ %base231, %cond.true229 ], [ null, %for.cond227 ], !dbg !6224
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !6049, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  %call235 = call fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond234, i32 %is.2, %struct.rtx_def** nonnull %succ) #7, !dbg !6224
  %tobool236 = icmp eq i32 %call235, 0, !dbg !6222
  br i1 %tobool236, label %if.end254.loopexit, label %for.body237, !dbg !6222

for.body237:                                      ; preds = %cond.end233
  %72 = load %struct._list_node*, %struct._list_node** %av1, align 8, !dbg !6225
  call void @llvm.dbg.value(metadata %struct._list_node* %72, metadata !6051, metadata !DIExpression()), !dbg !6105
  %73 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6226
  %base240 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %73, i64 0, i32 0, !dbg !6226
  %74 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6226
  call void @llvm.dbg.value(metadata %struct.rtx_def* %74, metadata !6049, metadata !DIExpression()), !dbg !6105
  %arrayidx246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i64 0, i32 1, i32 0, i32 1, !dbg !6226
  %rt_bb247 = bitcast %struct.object_block** %arrayidx246 to %struct.basic_block_def**, !dbg !6226
  %75 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb247, align 8, !dbg !6226
  %index248 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %75, i64 0, i32 9, !dbg !6226
  %76 = load i32, i32* %index248, align 8, !dbg !6226
  %call249 = call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base240, i32 %76) #7, !dbg !6226
  %lv_set250 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call249, i64 0, i32 0, !dbg !6226
  %77 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set250, align 8, !dbg !6226
  call void @mark_unavailable_targets(%struct._list_node* %72, %struct._list_node* null, %struct.bitmap_head_def* %77) #6, !dbg !6227
  %inc252 = add nuw nsw i32 %is.2, 1, !dbg !6228
  call void @llvm.dbg.value(metadata i32 %inc252, metadata !6048, metadata !DIExpression()), !dbg !6105
  br label %for.cond227, !dbg !6229, !llvm.loop !6230

if.end254.loopexit:                               ; preds = %cond.end233
  %.pre1 = load i32, i32* %all_succs_n89, align 4, !dbg !6232
  br label %if.end254, !dbg !6232

if.end254:                                        ; preds = %if.end254.loopexit, %if.end221
  %78 = phi i32 [ %.pre1, %if.end254.loopexit ], [ %70, %if.end221 ], !dbg !6232
  %cmp256 = icmp sgt i32 %78, 1, !dbg !6233
  br i1 %cmp256, label %if.then258, label %if.end274, !dbg !6234

if.then258:                                       ; preds = %if.end254
  %79 = bitcast %struct._list_iterator* %i259 to i8*, !dbg !6235
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #8, !dbg !6235
  %80 = bitcast %struct._expr** %expr260 to i8*, !dbg !6236
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #8, !dbg !6236
  call void @llvm.dbg.value(metadata %struct._list_node** %av1, metadata !6051, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i259, metadata !6089, metadata !DIExpression(DW_OP_deref)), !dbg !6237
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i259, %struct._list_node** nonnull %av1, i8 zeroext 0) #7, !dbg !6238
  %lp262 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i259, i64 0, i32 0, !dbg !6240
  br label %for.cond261, !dbg !6238

for.cond261:                                      ; preds = %for.inc272, %if.then258
  %81 = load %struct._list_node**, %struct._list_node*** %lp262, align 8, !dbg !6242
  %82 = load %struct._list_node*, %struct._list_node** %81, align 8, !dbg !6242
  call void @llvm.dbg.value(metadata %struct._expr** %expr260, metadata !6092, metadata !DIExpression(DW_OP_deref)), !dbg !6237
  %call263 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %82, %struct._expr** nonnull %expr260) #7, !dbg !6242
  %tobool264 = icmp eq i8 %call263, 0, !dbg !6238
  br i1 %tobool264, label %for.end273, label %for.body265, !dbg !6238

for.body265:                                      ; preds = %for.cond261
  %83 = load %struct._list_node*, %struct._list_node** %expr_in_all_succ_branches, align 8, !dbg !6243
  call void @llvm.dbg.value(metadata %struct._list_node* %83, metadata !6047, metadata !DIExpression()), !dbg !6105
  %84 = load %struct._expr*, %struct._expr** %expr260, align 8, !dbg !6245
  call void @llvm.dbg.value(metadata %struct._expr* %84, metadata !6092, metadata !DIExpression()), !dbg !6237
  %vinsn266 = getelementptr inbounds %struct._expr, %struct._expr* %84, i64 0, i32 0, !dbg !6245
  %85 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn266, align 8, !dbg !6245
  %call267 = call zeroext i8 @av_set_is_in_p(%struct._list_node* %83, %struct.vinsn_def* %85) #6, !dbg !6246
  %tobool268 = icmp eq i8 %call267, 0, !dbg !6246
  br i1 %tobool268, label %if.then269, label %for.inc272, !dbg !6247

if.then269:                                       ; preds = %for.body265
  %86 = load %struct._expr*, %struct._expr** %expr260, align 8, !dbg !6248
  call void @llvm.dbg.value(metadata %struct._expr* %86, metadata !6092, metadata !DIExpression()), !dbg !6237
  %spec = getelementptr inbounds %struct._expr, %struct._expr* %86, i64 0, i32 1, !dbg !6248
  %87 = load i32, i32* %spec, align 8, !dbg !6249
  %inc270 = add nsw i32 %87, 1, !dbg !6249
  store i32 %inc270, i32* %spec, align 8, !dbg !6249
  br label %for.inc272, !dbg !6248

for.inc272:                                       ; preds = %for.body265, %if.then269
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i259, metadata !6089, metadata !DIExpression(DW_OP_deref)), !dbg !6237
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i259) #7, !dbg !6242
  br label %for.cond261, !dbg !6242, !llvm.loop !6250

for.end273:                                       ; preds = %for.cond261
  call void @llvm.dbg.value(metadata %struct._list_node** %expr_in_all_succ_branches, metadata !6047, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  call void @av_set_clear(%struct._list_node** nonnull %expr_in_all_succ_branches) #6, !dbg !6252
  call void @llvm.dbg.value(metadata %struct._list_node** %av1, metadata !6051, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  call void @av_set_substract_cond_branches(%struct._list_node** nonnull %av1) #6, !dbg !6253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #8, !dbg !6254
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #8, !dbg !6254
  br label %if.end274, !dbg !6255

if.end274:                                        ; preds = %for.end273, %if.end254
  call void @llvm.dbg.value(metadata %struct._list_node** %p.addr, metadata !6023, metadata !DIExpression(DW_OP_deref)), !dbg !6105
  call fastcc void @_list_remove(%struct._list_node** nonnull %p.addr) #7, !dbg !6256
  call void @free_succs_info(%struct.succs_info* %call1) #6, !dbg !6257
  %88 = load i32, i32* @sched_verbose, align 4, !dbg !6258
  %cmp275 = icmp sgt i32 %88, 5, !dbg !6259
  br i1 %cmp275, label %do.body278, label %if.end332, !dbg !6260

do.body278:                                       ; preds = %if.end274
  %89 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6261
  %tobool279 = icmp eq i8 %89, 0, !dbg !6261
  br i1 %tobool279, label %if.else302, label %do.body281, !dbg !6262

do.body281:                                       ; preds = %do.body278
  %arrayidx285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6263
  %rt_int286 = bitcast %union.rtunion_def* %arrayidx285 to i32*, !dbg !6263
  %90 = load i32, i32* %rt_int286, align 8, !dbg !6263
  %call287 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i64 0, i64 0), i32 %90) #6, !dbg !6263
  %mul288 = shl nsw i32 %call287, 1, !dbg !6263
  %add289 = or i32 %mul288, 1, !dbg !6263
  call void @llvm.dbg.value(metadata i32 %add289, metadata !6093, metadata !DIExpression()), !dbg !6264
  %conv291 = sext i32 %add289 to i64, !dbg !6263
  %91 = alloca i8, i64 %conv291, align 16, !dbg !6263
  call void @llvm.dbg.value(metadata i8* %91, metadata !6099, metadata !DIExpression()), !dbg !6264
  %92 = load i32, i32* %rt_int286, align 8, !dbg !6263
  %call298 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %91, i64 %conv291, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i64 0, i64 0), i32 %92) #6, !dbg !6263
  call void @sel_prepare_string_for_dot_label(i8* nonnull %91) #6, !dbg !6263
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6263
  %call299 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %91) #6, !dbg !6263
  br label %do.end310, !dbg !6263

if.else302:                                       ; preds = %do.body278
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6261
  %arrayidx305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6261
  %rt_int306 = bitcast %union.rtunion_def* %arrayidx305 to i32*, !dbg !6261
  %95 = load i32, i32* %rt_int306, align 8, !dbg !6261
  %call307 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i64 0, i64 0), i32 %95) #6, !dbg !6261
  br label %do.end310

do.end310:                                        ; preds = %if.else302, %do.body281
  %96 = load %struct._list_node*, %struct._list_node** %av1, align 8, !dbg !6265
  call void @llvm.dbg.value(metadata %struct._list_node* %96, metadata !6051, metadata !DIExpression()), !dbg !6105
  call void @dump_av_set(%struct._list_node* %96) #6, !dbg !6266
  %97 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6267
  %tobool312 = icmp eq i8 %97, 0, !dbg !6267
  br i1 %tobool312, label %if.else327, label %do.body314, !dbg !6268

do.body314:                                       ; preds = %do.end310
  %call316 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !6269
  %mul317 = shl nsw i32 %call316, 1, !dbg !6269
  %add318 = or i32 %mul317, 1, !dbg !6269
  call void @llvm.dbg.value(metadata i32 %add318, metadata !6100, metadata !DIExpression()), !dbg !6270
  %conv320 = sext i32 %add318 to i64, !dbg !6269
  %98 = alloca i8, i64 %conv320, align 16, !dbg !6269
  call void @llvm.dbg.value(metadata i8* %98, metadata !6104, metadata !DIExpression()), !dbg !6270
  %call323 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %98, i64 %conv320, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !6269
  call void @sel_prepare_string_for_dot_label(i8* nonnull %98) #6, !dbg !6269
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6269
  %call324 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %99, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %98) #6, !dbg !6269
  br label %if.end332, !dbg !6269

if.else327:                                       ; preds = %do.end310
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6267
  %call328 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !6267
  br label %if.end332

if.end332:                                        ; preds = %do.body314, %if.else327, %if.end274
  %101 = load %struct._list_node*, %struct._list_node** %av1, align 8, !dbg !6271
  call void @llvm.dbg.value(metadata %struct._list_node* %101, metadata !6051, metadata !DIExpression()), !dbg !6105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6272
  ret %struct._list_node* %101, !dbg !6273
}

; Function Attrs: nounwind uwtable
define internal fastcc void @moveup_set_expr(%struct._list_node** %avp, %struct.rtx_def* %insn, i8 zeroext %inside_insn_group) unnamed_addr #5 !dbg !6274 {
entry:
  %i = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %avp, metadata !6279, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6280, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.value(metadata i8 0, metadata !6281, metadata !DIExpression()), !dbg !6284
  %0 = bitcast %struct._list_iterator* %i to i8*, !dbg !6285
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6285
  %1 = bitcast %struct._expr** %expr to i8*, !dbg !6286
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6286
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6282, metadata !DIExpression(DW_OP_deref)), !dbg !6284
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %avp, i8 zeroext 1) #7, !dbg !6287
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !6289
  br label %for.cond, !dbg !6287

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6291
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !6291
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !6283, metadata !DIExpression(DW_OP_deref)), !dbg !6284
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #7, !dbg !6291
  %tobool = icmp eq i8 %call, 0, !dbg !6287
  br i1 %tobool, label %for.end, label %for.body, !dbg !6287

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6292
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !6283, metadata !DIExpression()), !dbg !6284
  %call1 = call fastcc i32 @moveup_expr_cached(%struct._expr* %4, %struct.rtx_def* %insn, i8 zeroext 0) #7, !dbg !6294
  switch i32 %call1, label %sw.default [
    i32 0, label %for.inc
    i32 1, label %for.inc
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !6295

sw.bb2:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6282, metadata !DIExpression(DW_OP_deref)), !dbg !6284
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %i) #6, !dbg !6296
  br label %for.inc, !dbg !6298

sw.bb3:                                           ; preds = %for.body
  %5 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6299
  call void @llvm.dbg.value(metadata %struct._expr* %5, metadata !6283, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6282, metadata !DIExpression(DW_OP_deref)), !dbg !6284
  %call4 = call %struct._expr* @merge_with_other_exprs(%struct._list_node** %avp, %struct._list_iterator* nonnull %i, %struct._expr* %5) #6, !dbg !6300
  call void @llvm.dbg.value(metadata %struct._expr* %call4, metadata !6283, metadata !DIExpression()), !dbg !6284
  store %struct._expr* %call4, %struct._expr** %expr, align 8, !dbg !6301
  br label %for.inc, !dbg !6302

sw.default:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2605, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6303
  br label %for.inc, !dbg !6304

for.inc:                                          ; preds = %sw.bb2, %sw.bb3, %sw.default, %for.body, %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !6282, metadata !DIExpression(DW_OP_deref)), !dbg !6284
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #7, !dbg !6291
  br label %for.cond, !dbg !6291, !llvm.loop !6305

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6307
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6307
  ret void, !dbg !6307
}

declare dso_local %struct._expr* @av_set_lookup(%struct._list_node*, %struct.vinsn_def*) local_unnamed_addr #2

declare dso_local void @copy_expr(%struct._expr*, %struct._expr*) local_unnamed_addr #2

declare dso_local void @av_set_clear(%struct._list_node**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_remove(%struct._list_node** %lp) unnamed_addr #0 !dbg !6308 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !6312, metadata !DIExpression()), !dbg !6314
  %0 = load %struct._list_node*, %struct._list_node** %lp, align 8, !dbg !6315
  call void @llvm.dbg.value(metadata %struct._list_node* %0, metadata !6313, metadata !DIExpression()), !dbg !6314
  %1 = bitcast %struct._list_node* %0 to i64*, !dbg !6316
  %2 = load i64, i64* %1, align 8, !dbg !6316
  %3 = bitcast %struct._list_node** %lp to i64*, !dbg !6317
  store i64 %2, i64* %3, align 8, !dbg !6317
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @sched_lists_pool, align 8, !dbg !6318
  %5 = bitcast %struct._list_node* %0 to i8*, !dbg !6319
  tail call void @pool_free(%struct.alloc_pool_def* %4, i8* %5) #6, !dbg !6320
  ret void, !dbg !6321
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @_xlist_is_in_p(%struct._list_node* %l, %struct.rtx_def* %x) unnamed_addr #0 !dbg !6322 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %l, metadata !6326, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6327, metadata !DIExpression()), !dbg !6328
  br label %while.cond, !dbg !6329

while.cond:                                       ; preds = %if.end, %entry
  %l.addr.0 = phi %struct._list_node* [ %l, %entry ], [ %1, %if.end ]
  call void @llvm.dbg.value(metadata %struct._list_node* %l.addr.0, metadata !6326, metadata !DIExpression()), !dbg !6328
  %tobool = icmp eq %struct._list_node* %l.addr.0, null, !dbg !6329
  br i1 %tobool, label %return, label %while.body, !dbg !6329

while.body:                                       ; preds = %while.cond
  %x1 = getelementptr inbounds %struct._list_node, %struct._list_node* %l.addr.0, i64 0, i32 1, i32 0, i32 0, !dbg !6330
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !6330
  %cmp = icmp eq %struct.rtx_def* %0, %x, !dbg !6333
  br i1 %cmp, label %return, label %if.end, !dbg !6334

if.end:                                           ; preds = %while.body
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %l.addr.0, i64 0, i32 0, !dbg !6335
  %1 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !6335
  call void @llvm.dbg.value(metadata %struct._list_node* %1, metadata !6326, metadata !DIExpression()), !dbg !6328
  br label %while.cond, !dbg !6329, !llvm.loop !6336

return:                                           ; preds = %while.cond, %while.body
  %retval.0 = phi i8 [ 1, %while.body ], [ 0, %while.cond ], !dbg !6328
  ret i8 %retval.0, !dbg !6338
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_add(%struct._list_node** %lp) unnamed_addr #0 !dbg !6339 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !6341, metadata !DIExpression()), !dbg !6343
  %call = tail call fastcc %struct._list_node* @_list_alloc() #7, !dbg !6344
  call void @llvm.dbg.value(metadata %struct._list_node* %call, metadata !6342, metadata !DIExpression()), !dbg !6343
  %0 = bitcast %struct._list_node** %lp to i64*, !dbg !6345
  %1 = load i64, i64* %0, align 8, !dbg !6345
  %2 = bitcast %struct._list_node* %call to i64*, !dbg !6346
  store i64 %1, i64* %2, align 8, !dbg !6346
  store %struct._list_node* %call, %struct._list_node** %lp, align 8, !dbg !6347
  ret void, !dbg !6348
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._list_node* @_list_alloc() unnamed_addr #0 !dbg !6349 {
entry:
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @sched_lists_pool, align 8, !dbg !6352
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !6353
  %1 = bitcast i8* %call to %struct._list_node*, !dbg !6354
  ret %struct._list_node* %1, !dbg !6355
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @sel_bb_end_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.succs_info* @compute_succs_info(%struct.rtx_def*, i16 signext) local_unnamed_addr #2

declare dso_local void @dump_insn_vector(%struct.VEC_rtx_heap*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %vec_, i32 %ix_, %struct.rtx_def** %ptr) unnamed_addr #0 !dbg !6356 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !6362, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6363, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata %struct.rtx_def** %ptr, metadata !6364, metadata !DIExpression()), !dbg !6365
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !6366
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6366

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !6366
  %0 = load i32, i32* %num, align 8, !dbg !6366
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6366
  br i1 %cmp, label %if.then, label %if.else, !dbg !6368

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6369
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6369
  %1 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !6369
  br label %return, !dbg !6369

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6371

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.rtx_def* [ null, %if.else ], [ %1, %if.then ], !dbg !6373
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6373
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %ptr, align 8, !dbg !6373
  ret i32 %retval.0, !dbg !6368
}

declare dso_local void @av_set_split_usefulness(%struct._list_node*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_iter_start(%struct._list_iterator* %ip, %struct._list_node** %lp, i8 zeroext %can_remove_p) unnamed_addr #0 !dbg !6374 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ip, metadata !6379, metadata !DIExpression()), !dbg !6382
  call void @llvm.dbg.value(metadata %struct._list_node** %lp, metadata !6380, metadata !DIExpression()), !dbg !6382
  call void @llvm.dbg.value(metadata i8 %can_remove_p, metadata !6381, metadata !DIExpression()), !dbg !6382
  %lp1 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 0, !dbg !6383
  store %struct._list_node** %lp, %struct._list_node*** %lp1, align 8, !dbg !6384
  %can_remove_p2 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 1, !dbg !6385
  store i8 %can_remove_p, i8* %can_remove_p2, align 8, !dbg !6386
  %removed_p = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 2, !dbg !6387
  store i8 0, i8* %removed_p, align 1, !dbg !6388
  ret void, !dbg !6389
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %av, %struct._expr** %exprp) unnamed_addr #5 !dbg !6390 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %av, metadata !6395, metadata !DIExpression()), !dbg !6397
  call void @llvm.dbg.value(metadata %struct._expr** %exprp, metadata !6396, metadata !DIExpression()), !dbg !6397
  %tobool = icmp eq %struct._list_node* %av, null, !dbg !6398
  br i1 %tobool, label %return, label %if.then, !dbg !6400

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %av, i64 0, i32 1, !dbg !6401
  %0 = bitcast %struct._expr** %exprp to %union.anon.0**, !dbg !6403
  store %union.anon.0* %u, %union.anon.0** %0, align 8, !dbg !6403
  br label %return, !dbg !6404

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %entry ], !dbg !6397
  ret i8 %retval.0, !dbg !6405
}

declare dso_local zeroext i8 @av_set_is_in_p(%struct._list_node*, %struct.vinsn_def*) local_unnamed_addr #2

declare dso_local void @av_set_iter_remove(%struct._list_iterator*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_iter_next(%struct._list_iterator* %ip) unnamed_addr #0 !dbg !6406 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ip, metadata !6410, metadata !DIExpression()), !dbg !6411
  %removed_p = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 2, !dbg !6412
  %0 = load i8, i8* %removed_p, align 1, !dbg !6412
  %tobool = icmp eq i8 %0, 0, !dbg !6414
  br i1 %tobool, label %if.then, label %if.else, !dbg !6415

if.then:                                          ; preds = %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ip, i64 0, i32 0, !dbg !6416
  %1 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6416
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !6416
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %2, i64 0, i32 0, !dbg !6416
  store %struct._list_node** %next, %struct._list_node*** %lp, align 8, !dbg !6417
  br label %if.end, !dbg !6418

if.else:                                          ; preds = %entry
  store i8 0, i8* %removed_p, align 1, !dbg !6419
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6420
}

declare dso_local void @av_set_union_and_live(%struct._list_node**, %struct._list_node**, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @av_set_union_and_clear(%struct._list_node**, %struct._list_node**, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @mark_unavailable_targets(%struct._list_node*, %struct._list_node*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @av_set_substract_cond_branches(%struct._list_node**) local_unnamed_addr #2

declare dso_local void @free_succs_info(%struct.succs_info*) local_unnamed_addr #2

declare dso_local %struct._expr* @merge_with_other_exprs(%struct._list_node**, %struct._list_iterator*, %struct._expr*) local_unnamed_addr #2

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @vinsn_vec_add(%struct.VEC_vinsn_t_heap** %vinsn_vec, %struct._expr* %expr) unnamed_addr #5 !dbg !6421 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_heap** %vinsn_vec, metadata !6426, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !6427, metadata !DIExpression()), !dbg !6428
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !6429
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6429
  tail call void @vinsn_attach(%struct.vinsn_def* %0) #6, !dbg !6430
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6431
  %call = tail call fastcc %struct.vinsn_def** @VEC_vinsn_t_heap_safe_push(%struct.VEC_vinsn_t_heap** %vinsn_vec, %struct.vinsn_def* %1) #7, !dbg !6431
  ret void, !dbg !6432
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vinsn_def** @VEC_vinsn_t_heap_safe_push(%struct.VEC_vinsn_t_heap** %vec_, %struct.vinsn_def* %obj_) unnamed_addr #0 !dbg !6433 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_heap** %vec_, metadata !6438, metadata !DIExpression()), !dbg !6440
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %obj_, metadata !6439, metadata !DIExpression()), !dbg !6440
  %call = tail call fastcc i32 @VEC_vinsn_t_heap_reserve(%struct.VEC_vinsn_t_heap** %vec_, i32 1) #7, !dbg !6441
  %0 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %vec_, align 8, !dbg !6441
  %tobool = icmp eq %struct.VEC_vinsn_t_heap* %0, null, !dbg !6441
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6441

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %0, i64 0, i32 0, !dbg !6441
  br label %cond.end, !dbg !6441

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vinsn_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6441
  %call1 = tail call fastcc %struct.vinsn_def** @VEC_vinsn_t_base_quick_push(%struct.VEC_vinsn_t_base* %cond, %struct.vinsn_def* %obj_) #7, !dbg !6441
  ret %struct.vinsn_def** %call1, !dbg !6441
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vinsn_t_heap_reserve(%struct.VEC_vinsn_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6442 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_heap** %vec_, metadata !6446, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i32 1, metadata !6447, metadata !DIExpression()), !dbg !6449
  %0 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %vec_, align 8, !dbg !6450
  %tobool = icmp eq %struct.VEC_vinsn_t_heap* %0, null, !dbg !6450
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6450

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %0, i64 0, i32 0, !dbg !6450
  br label %cond.end, !dbg !6450

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vinsn_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6450
  %call = tail call fastcc i32 @VEC_vinsn_t_base_space(%struct.VEC_vinsn_t_base* %cond, i32 1) #7, !dbg !6450
  %tobool1 = icmp eq i32 %call, 0, !dbg !6450
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6450
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6448, metadata !DIExpression()), !dbg !6449
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6450

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_vinsn_t_heap** %vec_ to i8**, !dbg !6451
  %2 = load i8*, i8** %1, align 8, !dbg !6451
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !6451
  store i8* %call3, i8** %1, align 8, !dbg !6451
  br label %if.end, !dbg !6451

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6450
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vinsn_def** @VEC_vinsn_t_base_quick_push(%struct.VEC_vinsn_t_base* %vec_, %struct.vinsn_def* %obj_) unnamed_addr #0 !dbg !6453 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_base* %vec_, metadata !6458, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %obj_, metadata !6459, metadata !DIExpression()), !dbg !6461
  %num1 = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %vec_, i64 0, i32 0, !dbg !6462
  %0 = load i32, i32* %num1, align 8, !dbg !6462
  %inc = add i32 %0, 1, !dbg !6462
  store i32 %inc, i32* %num1, align 8, !dbg !6462
  %idxprom = zext i32 %0 to i64, !dbg !6462
  %arrayidx = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6462
  call void @llvm.dbg.value(metadata %struct.vinsn_def** %arrayidx, metadata !6460, metadata !DIExpression()), !dbg !6461
  store %struct.vinsn_def* %obj_, %struct.vinsn_def** %arrayidx, align 8, !dbg !6462
  ret %struct.vinsn_def** %arrayidx, !dbg !6462
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vinsn_t_base_space(%struct.VEC_vinsn_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6463 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_base* %vec_, metadata !6467, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i32 1, metadata !6468, metadata !DIExpression()), !dbg !6469
  %tobool = icmp eq %struct.VEC_vinsn_t_base* %vec_, null, !dbg !6470
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6470

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %vec_, i64 0, i32 1, !dbg !6470
  %0 = load i32, i32* %alloc, align 4, !dbg !6470
  %num = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %vec_, i64 0, i32 0, !dbg !6470
  %1 = load i32, i32* %num, align 8, !dbg !6470
  %cmp1 = icmp ne i32 %0, %1, !dbg !6470
  %phitmp = zext i1 %cmp1 to i32, !dbg !6470
  br label %cond.end, !dbg !6470

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6470

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6470
}

declare dso_local void @def_list_add(%struct._list_node**, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @compute_live_below_insn(%struct.rtx_def* %insn, %struct.bitmap_head_def* %regs) unnamed_addr #0 !dbg !6471 {
entry:
  %succ = alloca %struct.rtx_def*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6475, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %regs, metadata !6476, metadata !DIExpression()), !dbg !6479
  %0 = bitcast %struct.rtx_def** %succ to i8*, !dbg !6480
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6480
  %1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !6481
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1) #8, !dbg !6481
  %2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !6482
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #8, !dbg !6482
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !6477, metadata !DIExpression(DW_OP_deref)), !dbg !6479
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i32 7) #7, !dbg !6482
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 64, i1 false), !dbg !6482
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #8, !dbg !6482
  br label %for.cond, !dbg !6482

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !6477, metadata !DIExpression(DW_OP_deref)), !dbg !6479
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !6478, metadata !DIExpression(DW_OP_deref)), !dbg !6479
  %call = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #7, !dbg !6484
  %tobool = icmp eq i8 %call, 0, !dbg !6482
  br i1 %tobool, label %for.end, label %for.body, !dbg !6482

for.body:                                         ; preds = %for.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6486
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !6477, metadata !DIExpression()), !dbg !6479
  %call1 = call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %3) #7, !dbg !6486
  %call2 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %regs, %struct.bitmap_head_def* %call1) #6, !dbg !6486
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !6478, metadata !DIExpression(DW_OP_deref)), !dbg !6479
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #7, !dbg !6484
  br label %for.cond, !dbg !6484, !llvm.loop !6487

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1) #8, !dbg !6489
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6489
  ret void, !dbg !6489
}

declare dso_local zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_succ_iter_start(%struct.succ_iterator* noalias sret %agg.result, %struct.rtx_def** %succp, %struct.rtx_def* %insn, i32 %flags) unnamed_addr #0 !dbg !6490 {
entry:
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succp, metadata !6494, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6495, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6496, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.declare(metadata %struct.succ_iterator* %agg.result, metadata !6497, metadata !DIExpression()), !dbg !6500
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6501
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6501
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6501
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !6498, metadata !DIExpression()), !dbg !6499
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6502
  %bf.load = load i32, i32* %1, align 8, !dbg !6502
  %bf.clear = and i32 %bf.load, 65535, !dbg !6502
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !6502
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !6502

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !6502
  br i1 %cmp3, label %cond.end, label %lor.lhs.false4, !dbg !6502

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !6502
  br i1 %cmp7, label %cond.end, label %lor.lhs.false8, !dbg !6502

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !6502
  br i1 %cmp11, label %cond.end, label %lor.lhs.false12, !dbg !6502

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %cmp15 = icmp eq i32 %bf.clear, 13, !dbg !6502
  br i1 %cmp15, label %land.lhs.true, label %cond.true, !dbg !6502

land.lhs.true:                                    ; preds = %lor.lhs.false12
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6502
  %2 = getelementptr inbounds %union.u, %union.u* %u16, i64 1, i32 0, i32 0, i64 0, !dbg !6502
  %rt_int = bitcast %union.rtunion_def* %2 to i32*, !dbg !6502
  %3 = load i32, i32* %rt_int, align 8, !dbg !6502
  %cmp19 = icmp eq i32 %3, 10, !dbg !6502
  br i1 %cmp19, label %cond.end, label %cond.true, !dbg !6502

cond.true:                                        ; preds = %land.lhs.true, %lor.lhs.false12
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1206, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6502
  br label %cond.end, !dbg !6502

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false4, %lor.lhs.false8, %land.lhs.true, %cond.true
  %conv = trunc i32 %flags to i16, !dbg !6503
  %flags20 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 5, !dbg !6504
  store i16 %conv, i16* %flags20, align 8, !dbg !6505
  store %struct.rtx_def* null, %struct.rtx_def** %succp, align 8, !dbg !6506
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 1, !dbg !6507
  store %struct.edge_def* null, %struct.edge_def** %e1, align 8, !dbg !6508
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 2, !dbg !6509
  store %struct.edge_def* null, %struct.edge_def** %e2, align 8, !dbg !6510
  %bb21 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 4, !dbg !6511
  store %struct.basic_block_def* %0, %struct.basic_block_def** %bb21, align 8, !dbg !6512
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 6, !dbg !6513
  store i16 0, i16* %current_flags, align 2, !dbg !6514
  %current_exit = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 7, !dbg !6515
  store i32 -1, i32* %current_exit, align 4, !dbg !6516
  %loop_exits = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 8, !dbg !6517
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !6518
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6519
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !6519
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6519
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !6519
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6519
  %cmp22 = icmp eq %struct.basic_block_def* %0, %6, !dbg !6521
  br i1 %cmp22, label %if.else, label %land.lhs.true24, !dbg !6522

land.lhs.true24:                                  ; preds = %cond.end
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !6523
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6523
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6523
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 1, !dbg !6523
  %8 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6523
  %cmp25 = icmp eq %struct.rtx_def* %8, %insn, !dbg !6524
  br i1 %cmp25, label %if.else, label %if.then, !dbg !6525

if.then:                                          ; preds = %land.lhs.true24
  %bb_end = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 0, !dbg !6526
  store i8 0, i8* %bb_end, align 8, !dbg !6528
  %index = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 3, i32 0, !dbg !6529
  store i32 0, i32* %index, align 8, !dbg !6530
  %container = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 3, i32 1, !dbg !6531
  store %struct.VEC_edge_gc** null, %struct.VEC_edge_gc*** %container, align 8, !dbg !6532
  br label %if.end, !dbg !6533

if.else:                                          ; preds = %land.lhs.true24, %cond.end
  %ei28 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 3, !dbg !6534
  %9 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6536
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8, !dbg !6536
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !6536
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !6536
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6536
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !6536
  store i32 %11, i32* %10, align 8, !dbg !6536
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6536
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !6536
  store %struct.VEC_edge_gc** %13, %struct.VEC_edge_gc*** %12, align 8, !dbg !6536
  %14 = bitcast %struct.edge_iterator* %ei28 to i8*, !dbg !6536
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %9, i64 16, i1 false), !dbg !6536
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8, !dbg !6536
  %bb_end29 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i64 0, i32 0, !dbg !6537
  store i8 1, i8* %bb_end29, align 8, !dbg !6538
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6539
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* %ip, %struct.rtx_def** %succp, %struct.rtx_def* %insn, i8 (%struct.edge_def*, %struct.succ_iterator*)* %check) unnamed_addr #0 !dbg !6540 {
entry:
  %e_tmp = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %ip, metadata !6548, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succp, metadata !6549, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6550, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8 (%struct.edge_def*, %struct.succ_iterator*)* @_eligible_successor_edge_p, metadata !6551, metadata !DIExpression()), !dbg !6561
  %bb_end = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 0, !dbg !6562
  %0 = load i8, i8* %bb_end, align 8, !dbg !6562
  %tobool = icmp eq i8 %0, 0, !dbg !6563
  br i1 %tobool, label %if.then, label %while.body.preheader, !dbg !6564

while.body.preheader:                             ; preds = %entry
  %1 = bitcast %struct.edge_def** %e_tmp to i8*, !dbg !6565
  %loop_exits = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 8, !dbg !6566
  %current_exit = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 7, !dbg !6568
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 1, !dbg !6571
  %2 = bitcast %struct.edge_def** %e1 to i64*, !dbg !6571
  %3 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 3, i32 0, !dbg !6565
  %4 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 3, i32 1, !dbg !6565
  %flags27 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 5, !dbg !6574
  %bb36 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 4, !dbg !6574
  %ei50 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 3, !dbg !6576
  br label %while.body, !dbg !6580

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %succp, align 8, !dbg !6581
  %cmp = icmp eq %struct.rtx_def* %5, null, !dbg !6584
  br i1 %cmp, label %lor.lhs.false, label %return, !dbg !6585

lor.lhs.false:                                    ; preds = %if.then
  %flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 5, !dbg !6586
  %6 = load i16, i16* %flags, align 8, !dbg !6586
  %7 = and i16 %6, 1, !dbg !6587
  %cmp1 = icmp eq i16 %7, 0, !dbg !6588
  br i1 %cmp1, label %return, label %if.end, !dbg !6589

if.end:                                           ; preds = %lor.lhs.false
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6590
  %9 = bitcast %union.rtunion_def* %8 to i64*, !dbg !6590
  %10 = load i64, i64* %9, align 8, !dbg !6590
  %11 = bitcast %struct.rtx_def** %succp to i64*, !dbg !6591
  store i64 %10, i64* %11, align 8, !dbg !6591
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 6, !dbg !6592
  store i16 1, i16* %current_flags, align 2, !dbg !6593
  br label %return, !dbg !6594

while.body:                                       ; preds = %while.body.preheader, %cleanup63
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6595
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !6552, metadata !DIExpression()), !dbg !6565
  store %struct.edge_def* null, %struct.edge_def** %e_tmp, align 8, !dbg !6596
  %12 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !6597
  %tobool4 = icmp eq %struct.VEC_edge_heap* %12, null, !dbg !6598
  br i1 %tobool4, label %if.end17, label %do.body.preheader, !dbg !6580

do.body.preheader:                                ; preds = %while.body
  br label %do.body, !dbg !6599

do.body:                                          ; preds = %land.rhs.do.body_crit_edge, %do.body.preheader
  %13 = phi %struct.VEC_edge_heap* [ %.pre, %land.rhs.do.body_crit_edge ], [ %12, %do.body.preheader ], !dbg !6600
  %tobool7 = icmp eq %struct.VEC_edge_heap* %13, null, !dbg !6600
  br i1 %tobool7, label %cond.end, label %cond.true, !dbg !6600

cond.true:                                        ; preds = %do.body
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %13, i64 0, i32 0, !dbg !6600
  br label %cond.end, !dbg !6600

cond.end:                                         ; preds = %do.body, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %do.body ], !dbg !6600
  %14 = load i32, i32* %current_exit, align 4, !dbg !6600
  call void @llvm.dbg.value(metadata %struct.edge_def** %e_tmp, metadata !6552, metadata !DIExpression(DW_OP_deref)), !dbg !6565
  %call = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %cond, i32 %14, %struct.edge_def** nonnull %e_tmp) #7, !dbg !6600
  %15 = load i32, i32* %current_exit, align 4, !dbg !6601
  %inc = add nsw i32 %15, 1, !dbg !6601
  store i32 %inc, i32* %current_exit, align 4, !dbg !6601
  %16 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !6602
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !6552, metadata !DIExpression()), !dbg !6565
  %tobool10 = icmp eq %struct.edge_def* %16, null, !dbg !6602
  br i1 %tobool10, label %do.end.loopexit, label %land.rhs, !dbg !6603

land.rhs:                                         ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !6552, metadata !DIExpression()), !dbg !6565
  %call11 = call zeroext i8 @_eligible_successor_edge_p(%struct.edge_def* nonnull %16, %struct.succ_iterator* %ip) #6, !dbg !6604
  %tobool12 = icmp eq i8 %call11, 0, !dbg !6605
  br i1 %tobool12, label %land.rhs.do.body_crit_edge, label %land.rhs.do.end_crit_edge, !dbg !6606, !llvm.loop !6607

land.rhs.do.end_crit_edge:                        ; preds = %land.rhs
  %.pre5 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !6609
  br label %do.end, !dbg !6606

land.rhs.do.body_crit_edge:                       ; preds = %land.rhs
  %.pre = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !6600
  br label %do.body, !dbg !6606

do.end.loopexit:                                  ; preds = %cond.end
  %.lcssa = phi %struct.edge_def* [ %16, %cond.end ], !dbg !6602
  br label %do.end, !dbg !6609

do.end:                                           ; preds = %do.end.loopexit, %land.rhs.do.end_crit_edge
  %.in = phi %struct.edge_def* [ %.pre5, %land.rhs.do.end_crit_edge ], [ %.lcssa, %do.end.loopexit ]
  %17 = phi %struct.edge_def* [ %.pre5, %land.rhs.do.end_crit_edge ], [ null, %do.end.loopexit ], !dbg !6609
  %18 = ptrtoint %struct.edge_def* %.in to i64, !dbg !6611
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !6552, metadata !DIExpression()), !dbg !6565
  %tobool13 = icmp eq %struct.edge_def* %17, null, !dbg !6609
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !6612

if.then14:                                        ; preds = %do.end
  call fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** nonnull %loop_exits) #7, !dbg !6613
  %.pre6 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !6614
  %19 = ptrtoint %struct.edge_def* %.pre6 to i64, !dbg !6613
  br label %if.end17, !dbg !6613

if.end17:                                         ; preds = %do.end, %while.body, %if.then14
  %20 = phi i64 [ %18, %do.end ], [ 0, %while.body ], [ %19, %if.then14 ]
  %21 = phi %struct.edge_def* [ %17, %do.end ], [ null, %while.body ], [ %.pre6, %if.then14 ], !dbg !6614
  call void @llvm.dbg.value(metadata %struct.edge_def* %21, metadata !6552, metadata !DIExpression()), !dbg !6565
  %tobool18 = icmp eq %struct.edge_def* %21, null, !dbg !6614
  br i1 %tobool18, label %while.cond21.preheader, label %if.then19, !dbg !6615

while.cond21.preheader:                           ; preds = %if.end17
  br label %while.cond21, !dbg !6616

if.then19:                                        ; preds = %if.end17
  store i64 %20, i64* %2, align 8, !dbg !6617
  br label %cleanup63, !dbg !6618

while.cond21:                                     ; preds = %while.cond21.preheader, %cleanup
  %22 = load i32, i32* %3, align 8, !dbg !6619
  %23 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %4, align 8, !dbg !6619
  %call23 = call fastcc zeroext i8 @ei_cond(i32 %22, %struct.VEC_edge_gc** %23, %struct.edge_def** nonnull %e1) #7, !dbg !6619
  %tobool24 = icmp eq i8 %call23, 0, !dbg !6616
  br i1 %tobool24, label %while.end, label %while.body25, !dbg !6616

while.body25:                                     ; preds = %while.cond21
  %24 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !6620
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i64 0, i32 1, !dbg !6621
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6621
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %25, metadata !6556, metadata !DIExpression()), !dbg !6622
  %26 = load i16, i16* %flags27, align 8, !dbg !6623
  %27 = and i16 %26, 8, !dbg !6624
  %tobool30 = icmp ne i16 %27, 0, !dbg !6624
  %28 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !6625
  %tobool31 = icmp ne i32 %28, 0, !dbg !6625
  %or.cond = and i1 %tobool30, %tobool31, !dbg !6626
  br i1 %or.cond, label %land.lhs.true32, label %if.end52, !dbg !6626

land.lhs.true32:                                  ; preds = %while.body25
  %call33 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %25) #6, !dbg !6627
  %tobool34 = icmp eq i8 %call33, 0, !dbg !6627
  br i1 %tobool34, label %if.then43, label %lor.lhs.false35, !dbg !6628

lor.lhs.false35:                                  ; preds = %land.lhs.true32
  %29 = load i32*, i32** @block_to_bb, align 8, !dbg !6629
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %bb36, align 8, !dbg !6629
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i64 0, i32 9, !dbg !6629
  %31 = load i32, i32* %index, align 8, !dbg !6629
  %idxprom = sext i32 %31 to i64, !dbg !6629
  %arrayidx37 = getelementptr inbounds i32, i32* %29, i64 %idxprom, !dbg !6629
  %32 = load i32, i32* %arrayidx37, align 4, !dbg !6629
  %index38 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i64 0, i32 9, !dbg !6630
  %33 = load i32, i32* %index38, align 8, !dbg !6630
  %idxprom39 = sext i32 %33 to i64, !dbg !6630
  %arrayidx40 = getelementptr inbounds i32, i32* %29, i64 %idxprom39, !dbg !6630
  %34 = load i32, i32* %arrayidx40, align 4, !dbg !6630
  %cmp41 = icmp slt i32 %32, %34, !dbg !6631
  br i1 %cmp41, label %if.then43, label %if.end52, !dbg !6632

if.then43:                                        ; preds = %land.lhs.true32, %lor.lhs.false35
  %call44 = call fastcc %struct.VEC_edge_heap* @get_all_loop_exits(%struct.basic_block_def* %25) #7, !dbg !6633
  store %struct.VEC_edge_heap* %call44, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !6634
  %tobool47 = icmp eq %struct.VEC_edge_heap* %call44, null, !dbg !6635
  br i1 %tobool47, label %if.end52, label %if.then48, !dbg !6636

if.then48:                                        ; preds = %if.then43
  store i32 0, i32* %current_exit, align 4, !dbg !6637
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei50) #7, !dbg !6638
  br label %cleanup, !dbg !6639

if.end52:                                         ; preds = %if.then43, %lor.lhs.false35, %while.body25
  %35 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !6640
  %call54 = call zeroext i8 @_eligible_successor_edge_p(%struct.edge_def* %35, %struct.succ_iterator* %ip) #6, !dbg !6642
  %tobool55 = icmp eq i8 %call54, 0, !dbg !6642
  br i1 %tobool55, label %if.end57, label %cleanup, !dbg !6643

if.end57:                                         ; preds = %if.end52
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei50) #7, !dbg !6644
  br label %cleanup, !dbg !6645

cleanup:                                          ; preds = %if.end52, %if.end57, %if.then48
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then48 ], [ true, %if.end57 ], [ false, %if.end52 ]
  br i1 %cleanup.dest.slot.0, label %while.cond21, label %while.end, !llvm.loop !6646

while.end:                                        ; preds = %while.cond21, %cleanup
  %36 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !6647
  %tobool60 = icmp eq %struct.VEC_edge_heap* %36, null, !dbg !6649
  %. = select i1 %tobool60, i32 3, i32 2, !dbg !6565
  br label %cleanup63, !dbg !6565, !llvm.loop !6650

cleanup63:                                        ; preds = %while.end, %if.then19
  %cleanup.dest.slot.1 = phi i32 [ 3, %if.then19 ], [ %., %while.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6652
  %switch1 = icmp eq i32 %cleanup.dest.slot.1, 3
  br i1 %switch1, label %while.end65, label %while.body

while.end65:                                      ; preds = %cleanup63
  %37 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !6653
  %tobool67 = icmp eq %struct.edge_def* %37, null, !dbg !6654
  br i1 %tobool67, label %return, label %if.then68, !dbg !6655

if.then68:                                        ; preds = %while.end65
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 2, !dbg !6656
  %38 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !6656
  %dest70 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 1, !dbg !6657
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %dest70, align 8, !dbg !6657
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %39, metadata !6558, metadata !DIExpression()), !dbg !6658
  %40 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6659
  %cfg = getelementptr inbounds %struct.function, %struct.function* %40, i64 0, i32 1, !dbg !6659
  %41 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6659
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %41, i64 0, i32 1, !dbg !6659
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6659
  %cmp71 = icmp eq %struct.basic_block_def* %39, %42, !dbg !6661
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** @after_recovery, align 8, !dbg !6662
  %cmp74 = icmp eq %struct.basic_block_def* %39, %43, !dbg !6663
  %or.cond2 = or i1 %cmp71, %cmp74, !dbg !6664
  br i1 %or.cond2, label %if.then76, label %if.else77, !dbg !6664

if.then76:                                        ; preds = %if.then68
  %44 = load i64, i64* bitcast (%struct.rtx_def** @exit_insn to i64*), align 8, !dbg !6665
  %45 = bitcast %struct.rtx_def** %succp to i64*, !dbg !6666
  store i64 %44, i64* %45, align 8, !dbg !6666
  br label %return, !dbg !6667

if.else77:                                        ; preds = %if.then68
  %call78 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %39) #6, !dbg !6668
  store %struct.rtx_def* %call78, %struct.rtx_def** %succp, align 8, !dbg !6670
  %46 = load i16, i16* %flags27, align 8, !dbg !6671
  %cmp81 = icmp eq i16 %46, 1, !dbg !6671
  br i1 %cmp81, label %lor.lhs.false83, label %cond.end93, !dbg !6671

lor.lhs.false83:                                  ; preds = %if.else77
  %call84 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %39) #6, !dbg !6671
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call84, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6671
  %rt_rtx88 = bitcast %union.rtunion_def* %47 to %struct.rtx_def**, !dbg !6671
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx88, align 8, !dbg !6671
  %cmp89 = icmp eq %struct.rtx_def* %call78, %48, !dbg !6671
  br i1 %cmp89, label %cond.end93, label %cond.true91, !dbg !6671

cond.true91:                                      ; preds = %lor.lhs.false83
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1331, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6671
  br label %cond.end93, !dbg !6671

cond.end93:                                       ; preds = %if.else77, %lor.lhs.false83, %cond.true91
  %49 = load %struct.rtx_def*, %struct.rtx_def** %succp, align 8, !dbg !6672
  %arrayidx97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 1, i32 0, i32 1, !dbg !6672
  %rt_bb = bitcast %struct.object_block** %arrayidx97 to %struct.basic_block_def**, !dbg !6672
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6672
  %cmp98 = icmp eq %struct.basic_block_def* %50, %39, !dbg !6672
  br i1 %cmp98, label %return, label %cond.true100, !dbg !6672

cond.true100:                                     ; preds = %cond.end93
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1332, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6672
  br label %return, !dbg !6672

return:                                           ; preds = %while.end65, %if.then, %if.then76, %cond.end93, %cond.true100, %lor.lhs.false, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %lor.lhs.false ], [ 0, %if.then ], [ 1, %cond.true100 ], [ 1, %cond.end93 ], [ 1, %if.then76 ], [ 0, %while.end65 ], !dbg !6673
  ret i8 %retval.0, !dbg !6674
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @_eligible_successor_edge_p(%struct.edge_def* %e1, %struct.succ_iterator* %ip) #0 !dbg !6675 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !6677, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %ip, metadata !6678, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !6679, metadata !DIExpression()), !dbg !6691
  %flags1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 5, !dbg !6692
  %0 = load i16, i16* %flags1, align 8, !dbg !6692
  %conv = sext i16 %0 to i32, !dbg !6693
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6681, metadata !DIExpression()), !dbg !6691
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 0, !dbg !6694
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6694
  %call = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %1) #6, !dbg !6695
  %tobool = icmp eq i8 %call, 0, !dbg !6696
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !6682, metadata !DIExpression()), !dbg !6691
  %cmp = icmp eq i16 %0, 0, !dbg !6697
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6697

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1363, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6697
  br label %cond.end, !dbg !6697

cond.end:                                         ; preds = %entry, %cond.true
  br i1 %tobool, label %if.then, label %cond.end.if.end13_crit_edge, !dbg !6698

cond.end.if.end13_crit_edge:                      ; preds = %cond.end
  %.pre = and i32 %conv, 4, !dbg !6699
  br label %if.end13, !dbg !6698

if.then:                                          ; preds = %cond.end
  %and = and i32 %conv, 12, !dbg !6701
  %tobool5 = icmp eq i32 %and, 0, !dbg !6701
  br i1 %tobool5, label %cond.true6, label %cond.end8, !dbg !6701

cond.true6:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1369, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6701
  br label %cond.end8, !dbg !6701

cond.end8:                                        ; preds = %if.then, %cond.true6
  %and10 = and i32 %conv, 4, !dbg !6704
  %tobool11 = icmp eq i32 %and10, 0, !dbg !6704
  br i1 %tobool11, label %if.end13, label %cleanup128, !dbg !6706

if.end13:                                         ; preds = %cond.end.if.end13_crit_edge, %cond.end8
  %and40.pre-phi = phi i32 [ %.pre, %cond.end.if.end13_crit_edge ], [ %and10, %cond.end8 ], !dbg !6699
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 1, !dbg !6707
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6707
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !6680, metadata !DIExpression()), !dbg !6691
  %tobool41 = icmp eq i32 %and40.pre-phi, 0, !dbg !6699
  br i1 %tobool41, label %if.end13.if.end13.split_crit_edge, label %if.end13.split.us, !dbg !6708

if.end13.if.end13.split_crit_edge:                ; preds = %if.end13
  br label %while.cond, !dbg !6708

if.end13.split.us:                                ; preds = %if.end13
  br label %while.cond.us, !dbg !6708

while.cond.us:                                    ; preds = %while.cond.backedge.us, %if.end13.split.us
  %e2.0.us = phi %struct.edge_def* [ %e1, %if.end13.split.us ], [ %e2.0.be.us, %while.cond.backedge.us ], !dbg !6691
  %bb.0.us = phi %struct.basic_block_def* [ %2, %if.end13.split.us ], [ %bb.0.be.us, %while.cond.backedge.us ], !dbg !6691
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.us, metadata !6680, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.0.us, metadata !6679, metadata !DIExpression()), !dbg !6691
  %call14.us = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb.0.us) #6, !dbg !6709
  %tobool15.us = icmp eq i8 %call14.us, 0, !dbg !6709
  br i1 %tobool15.us, label %if.then16.us, label %if.end36.us, !dbg !6710

if.end36.us:                                      ; preds = %while.cond.us
  %call37.us = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %bb.0.us) #6, !dbg !6711
  %succs44.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0.us, i64 0, i32 1, !dbg !6712
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs44.us, align 8, !dbg !6712
  %tobool45.us = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !6712
  br i1 %tobool45.us, label %cond.end50.us, label %cond.true46.us, !dbg !6712

cond.true46.us:                                   ; preds = %if.end36.us
  %base48.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !6712
  br label %cond.end50.us, !dbg !6712

cond.end50.us:                                    ; preds = %cond.true46.us, %if.end36.us
  %cond51.us = phi %struct.VEC_edge_base* [ %base48.us, %cond.true46.us ], [ null, %if.end36.us ], !dbg !6712
  %call52.us = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond51.us) #7, !dbg !6712
  %cmp53.us = icmp eq i32 %call52.us, 0, !dbg !6714
  br i1 %cmp53.us, label %cleanup128.loopexit.us-lcssa.us, label %if.end56.us, !dbg !6715

if.end56.us:                                      ; preds = %cond.end50.us
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs44.us, align 8, !dbg !6716
  %tobool58.us = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !6716
  br i1 %tobool58.us, label %cond.end63.us, label %cond.true59.us, !dbg !6716

cond.true59.us:                                   ; preds = %if.end56.us
  %base61.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !6716
  br label %cond.end63.us, !dbg !6716

cond.end63.us:                                    ; preds = %cond.true59.us, %if.end56.us
  %cond64.us = phi %struct.VEC_edge_base* [ %base61.us, %cond.true59.us ], [ null, %if.end56.us ], !dbg !6716
  %call65.us = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond64.us, i32 0) #7, !dbg !6716
  call void @llvm.dbg.value(metadata %struct.edge_def* %call65.us, metadata !6679, metadata !DIExpression()), !dbg !6691
  %dest66.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call65.us, i64 0, i32 1, !dbg !6717
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest66.us, align 8, !dbg !6717
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !6680, metadata !DIExpression()), !dbg !6691
  br label %while.cond.backedge.us, !dbg !6708

if.then16.us:                                     ; preds = %while.cond.us
  %call17.us = tail call fastcc zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %bb.0.us) #7, !dbg !6718
  %tobool18.us = icmp eq i8 %call17.us, 0, !dbg !6718
  br i1 %tobool18.us, label %cleanup.us, label %if.end20.us, !dbg !6720

if.end20.us:                                      ; preds = %if.then16.us
  %succs.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0.us, i64 0, i32 1, !dbg !6721
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs.us, align 8, !dbg !6721
  %tobool21.us = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !6721
  br i1 %tobool21.us, label %cond.end25.us, label %cond.true22.us, !dbg !6721

cond.true22.us:                                   ; preds = %if.end20.us
  %base.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !6721
  br label %cond.end25.us, !dbg !6721

cond.end25.us:                                    ; preds = %cond.true22.us, %if.end20.us
  %cond26.us = phi %struct.VEC_edge_base* [ %base.us, %cond.true22.us ], [ null, %if.end20.us ], !dbg !6721
  %call27.us = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond26.us, i32 0) #7, !dbg !6721
  call void @llvm.dbg.value(metadata %struct.edge_def* %call27.us, metadata !6683, metadata !DIExpression()), !dbg !6722
  %dest28.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call27.us, i64 0, i32 1, !dbg !6723
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %dest28.us, align 8, !dbg !6723
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %7, metadata !6687, metadata !DIExpression()), !dbg !6722
  %call29.us = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %7) #6, !dbg !6724
  br label %cleanup.us, !dbg !6726

cleanup.us:                                       ; preds = %cond.end25.us, %if.then16.us
  %e2.1.us = phi %struct.edge_def* [ %e2.0.us, %if.then16.us ], [ %call27.us, %cond.end25.us ], !dbg !6691
  %bb.1.us = phi %struct.basic_block_def* [ %bb.0.us, %if.then16.us ], [ %7, %cond.end25.us ], !dbg !6691
  %cleanup.dest.slot.0.us = phi i1 [ true, %if.then16.us ], [ false, %cond.end25.us ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.us, metadata !6680, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.us, metadata !6679, metadata !DIExpression()), !dbg !6691
  br i1 %cleanup.dest.slot.0.us, label %while.end.us-lcssa.us, label %while.cond.backedge.us

while.cond.backedge.us:                           ; preds = %cleanup.us, %cond.end63.us
  %e2.0.be.us = phi %struct.edge_def* [ %call65.us, %cond.end63.us ], [ %e2.1.us, %cleanup.us ]
  %bb.0.be.us = phi %struct.basic_block_def* [ %5, %cond.end63.us ], [ %bb.1.us, %cleanup.us ]
  br label %while.cond.us, !dbg !6691, !llvm.loop !6727

cleanup128.loopexit.us-lcssa.us:                  ; preds = %cond.end50.us
  br label %cleanup128.loopexit, !dbg !6729

while.end.us-lcssa.us:                            ; preds = %cleanup.us
  %e2.1.us.lcssa = phi %struct.edge_def* [ %e2.1.us, %cleanup.us ], !dbg !6691
  %bb.1.us.lcssa = phi %struct.basic_block_def* [ %bb.1.us, %cleanup.us ], !dbg !6691
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.us.lcssa, metadata !6679, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.us.lcssa, metadata !6680, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.us.lcssa, metadata !6679, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.us.lcssa, metadata !6680, metadata !DIExpression()), !dbg !6691
  br label %while.end, !dbg !6730

while.cond:                                       ; preds = %while.cond.backedge, %if.end13.if.end13.split_crit_edge
  %e2.0 = phi %struct.edge_def* [ %e1, %if.end13.if.end13.split_crit_edge ], [ %e2.0.be, %while.cond.backedge ], !dbg !6691
  %bb.0 = phi %struct.basic_block_def* [ %2, %if.end13.if.end13.split_crit_edge ], [ %bb.0.be, %while.cond.backedge ], !dbg !6691
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6680, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.0, metadata !6679, metadata !DIExpression()), !dbg !6691
  %call14 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb.0) #6, !dbg !6709
  %tobool15 = icmp eq i8 %call14, 0, !dbg !6709
  br i1 %tobool15, label %if.then16, label %if.end36, !dbg !6710

if.then16:                                        ; preds = %while.cond
  %call17 = tail call fastcc zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %bb.0) #7, !dbg !6718
  %tobool18 = icmp eq i8 %call17, 0, !dbg !6718
  br i1 %tobool18, label %cleanup, label %if.end20, !dbg !6720

if.end20:                                         ; preds = %if.then16
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !6721
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6721
  %tobool21 = icmp eq %struct.VEC_edge_gc* %8, null, !dbg !6721
  br i1 %tobool21, label %cond.end25, label %cond.true22, !dbg !6721

cond.true22:                                      ; preds = %if.end20
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !6721
  br label %cond.end25, !dbg !6721

cond.end25:                                       ; preds = %if.end20, %cond.true22
  %cond26 = phi %struct.VEC_edge_base* [ %base, %cond.true22 ], [ null, %if.end20 ], !dbg !6721
  %call27 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond26, i32 0) #7, !dbg !6721
  call void @llvm.dbg.value(metadata %struct.edge_def* %call27, metadata !6683, metadata !DIExpression()), !dbg !6722
  %dest28 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call27, i64 0, i32 1, !dbg !6723
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest28, align 8, !dbg !6723
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !6687, metadata !DIExpression()), !dbg !6722
  %call29 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %9) #6, !dbg !6724
  %tobool30 = icmp ne i8 %call29, 0, !dbg !6724
  %spec.select = select i1 %tobool30, %struct.edge_def* %call27, %struct.edge_def* %e2.0, !dbg !6726
  %spec.select3 = select i1 %tobool30, %struct.basic_block_def* %9, %struct.basic_block_def* %bb.0, !dbg !6726
  %spec.select4 = select i1 %tobool30, i32 2, i32 3, !dbg !6726
  br label %cleanup, !dbg !6726

cleanup:                                          ; preds = %if.then16, %cond.end25
  %e2.1 = phi %struct.edge_def* [ %e2.0, %if.then16 ], [ %spec.select, %cond.end25 ], !dbg !6691
  %bb.1 = phi %struct.basic_block_def* [ %bb.0, %if.then16 ], [ %spec.select3, %cond.end25 ], !dbg !6691
  %cleanup.dest.slot.0 = phi i32 [ 3, %if.then16 ], [ %spec.select4, %cond.end25 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !6680, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1, metadata !6679, metadata !DIExpression()), !dbg !6691
  %switch = icmp eq i32 %cleanup.dest.slot.0, 3
  br i1 %switch, label %while.end.us-lcssa, label %while.cond.backedge

if.end36:                                         ; preds = %while.cond
  %call37 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %bb.0) #6, !dbg !6711
  %tobool38 = icmp eq i8 %call37, 0, !dbg !6711
  br i1 %tobool38, label %cleanup128.loopexit.us-lcssa, label %if.end43, !dbg !6731

if.end43:                                         ; preds = %if.end36
  %succs44 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !6712
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs44, align 8, !dbg !6712
  %tobool45 = icmp eq %struct.VEC_edge_gc* %10, null, !dbg !6712
  br i1 %tobool45, label %cond.end50, label %cond.true46, !dbg !6712

cond.true46:                                      ; preds = %if.end43
  %base48 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i64 0, i32 0, !dbg !6712
  br label %cond.end50, !dbg !6712

cond.end50:                                       ; preds = %if.end43, %cond.true46
  %cond51 = phi %struct.VEC_edge_base* [ %base48, %cond.true46 ], [ null, %if.end43 ], !dbg !6712
  %call52 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond51) #7, !dbg !6712
  %cmp53 = icmp eq i32 %call52, 0, !dbg !6714
  br i1 %cmp53, label %cleanup128.loopexit.us-lcssa, label %if.end56, !dbg !6715

if.end56:                                         ; preds = %cond.end50
  %11 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs44, align 8, !dbg !6716
  %tobool58 = icmp eq %struct.VEC_edge_gc* %11, null, !dbg !6716
  br i1 %tobool58, label %cond.end63, label %cond.true59, !dbg !6716

cond.true59:                                      ; preds = %if.end56
  %base61 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %11, i64 0, i32 0, !dbg !6716
  br label %cond.end63, !dbg !6716

cond.end63:                                       ; preds = %if.end56, %cond.true59
  %cond64 = phi %struct.VEC_edge_base* [ %base61, %cond.true59 ], [ null, %if.end56 ], !dbg !6716
  %call65 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond64, i32 0) #7, !dbg !6716
  call void @llvm.dbg.value(metadata %struct.edge_def* %call65, metadata !6679, metadata !DIExpression()), !dbg !6691
  %dest66 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call65, i64 0, i32 1, !dbg !6717
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest66, align 8, !dbg !6717
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !6680, metadata !DIExpression()), !dbg !6691
  br label %while.cond.backedge, !dbg !6708

while.cond.backedge:                              ; preds = %cond.end63, %cleanup
  %e2.0.be = phi %struct.edge_def* [ %call65, %cond.end63 ], [ %e2.1, %cleanup ]
  %bb.0.be = phi %struct.basic_block_def* [ %12, %cond.end63 ], [ %bb.1, %cleanup ]
  br label %while.cond, !dbg !6691, !llvm.loop !6727

while.end.us-lcssa:                               ; preds = %cleanup
  %e2.1.lcssa8 = phi %struct.edge_def* [ %e2.1, %cleanup ], !dbg !6691
  %bb.1.lcssa7 = phi %struct.basic_block_def* [ %bb.1, %cleanup ], !dbg !6691
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.lcssa8, metadata !6679, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.lcssa7, metadata !6680, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.lcssa8, metadata !6679, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.lcssa7, metadata !6680, metadata !DIExpression()), !dbg !6691
  br label %while.end, !dbg !6730

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %e2.1.lcssa = phi %struct.edge_def* [ %e2.1.lcssa8, %while.end.us-lcssa ], [ %e2.1.us.lcssa, %while.end.us-lcssa.us ], !dbg !6691
  %bb.1.lcssa = phi %struct.basic_block_def* [ %bb.1.lcssa7, %while.end.us-lcssa ], [ %bb.1.us.lcssa, %while.end.us-lcssa.us ], !dbg !6691
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.1.lcssa, metadata !6679, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.lcssa, metadata !6680, metadata !DIExpression()), !dbg !6691
  %e267 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 2, !dbg !6730
  store %struct.edge_def* %e2.1.lcssa, %struct.edge_def** %e267, align 8, !dbg !6732
  %call68 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %bb.1.lcssa) #6, !dbg !6733
  %tobool69 = icmp eq i8 %call68, 0, !dbg !6733
  br i1 %tobool69, label %if.end119, label %if.then70, !dbg !6734

if.then70:                                        ; preds = %while.end
  %13 = load i32*, i32** @block_to_bb, align 8, !dbg !6735
  %bb71 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 4, !dbg !6735
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %bb71, align 8, !dbg !6735
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i64 0, i32 9, !dbg !6735
  %15 = load i32, i32* %index, align 8, !dbg !6735
  %idxprom = sext i32 %15 to i64, !dbg !6735
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !6735
  %16 = load i32, i32* %arrayidx, align 4, !dbg !6735
  %index72 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1.lcssa, i64 0, i32 9, !dbg !6736
  %17 = load i32, i32* %index72, align 8, !dbg !6736
  %idxprom73 = sext i32 %17 to i64, !dbg !6736
  %arrayidx74 = getelementptr inbounds i32, i32* %13, i64 %idxprom73, !dbg !6736
  %18 = load i32, i32* %arrayidx74, align 4, !dbg !6736
  %cmp75 = icmp slt i32 %16, %18, !dbg !6737
  call void @llvm.dbg.value(metadata i1 %cmp75, metadata !6688, metadata !DIExpression()), !dbg !6738
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 6, !dbg !6739
  store i16 1, i16* %current_flags, align 2, !dbg !6740
  br i1 %cmp75, label %if.then79, label %if.end93, !dbg !6741

if.then79:                                        ; preds = %if.then70
  %tobool80 = xor i1 %tobool, true, !dbg !6742
  %19 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !6742
  %tobool81 = icmp ne i32 %19, 0, !dbg !6742
  %or.cond2 = or i1 %tobool81, %tobool80, !dbg !6742
  br i1 %or.cond2, label %cond.end84, label %cond.true82, !dbg !6742

cond.true82:                                      ; preds = %if.then79
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6742
  br label %cond.end84, !dbg !6742

cond.end84:                                       ; preds = %if.then79, %cond.true82
  %20 = trunc i16 %0 to i8, !dbg !6745
  %21 = and i8 %20, 1, !dbg !6745
  br label %cleanup128, !dbg !6746

if.end93:                                         ; preds = %if.then70
  %22 = load i8, i8* @pipelining_p, align 1, !dbg !6747
  %tobool95 = icmp eq i8 %22, 0, !dbg !6747
  br i1 %tobool95, label %if.end109, label %land.lhs.true96, !dbg !6749

land.lhs.true96:                                  ; preds = %if.end93
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6750
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 3, !dbg !6751
  %24 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !6751
  %loop_father98 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1.lcssa, i64 0, i32 3, !dbg !6752
  %25 = load %struct.loop*, %struct.loop** %loop_father98, align 8, !dbg !6752
  %cmp99 = icmp eq %struct.loop* %24, %25, !dbg !6753
  br i1 %cmp99, label %if.then101, label %if.end109, !dbg !6754

if.then101:                                       ; preds = %land.lhs.true96
  %26 = trunc i16 %0 to i8, !dbg !6755
  %27 = and i8 %26, 1, !dbg !6755
  br label %cleanup128, !dbg !6756

if.end109:                                        ; preds = %if.end93, %land.lhs.true96
  store i16 2, i16* %current_flags, align 2, !dbg !6757
  %and111 = lshr i32 %conv, 1, !dbg !6758
  %28 = trunc i32 %and111 to i8, !dbg !6758
  %29 = and i8 %28, 1, !dbg !6758
  br label %cleanup128, !dbg !6759

if.end119:                                        ; preds = %while.end
  %current_flags120 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 6, !dbg !6760
  store i16 4, i16* %current_flags120, align 2, !dbg !6761
  %and121 = lshr i32 %conv, 2, !dbg !6762
  %30 = trunc i32 %and121 to i8, !dbg !6762
  %31 = and i8 %30, 1, !dbg !6762
  br label %cleanup128, !dbg !6763

cleanup128.loopexit.us-lcssa:                     ; preds = %if.end36, %cond.end50
  br label %cleanup128.loopexit, !dbg !6729

cleanup128.loopexit:                              ; preds = %cleanup128.loopexit.us-lcssa.us, %cleanup128.loopexit.us-lcssa
  br label %cleanup128, !dbg !6729

cleanup128:                                       ; preds = %cleanup128.loopexit, %cond.end8, %cond.end84, %if.then101, %if.end109, %if.end119
  %retval.1 = phi i8 [ %31, %if.end119 ], [ 0, %cond.end8 ], [ %21, %cond.end84 ], [ %27, %if.then101 ], [ %29, %if.end109 ], [ 0, %cleanup128.loopexit ], !dbg !6691
  ret i8 %retval.1, !dbg !6729
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_succ_iter_next(%struct.succ_iterator* %ip) unnamed_addr #0 !dbg !6764 {
entry:
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %ip, metadata !6768, metadata !DIExpression()), !dbg !6769
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 2, !dbg !6770
  %0 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !6770
  %tobool = icmp eq %struct.edge_def* %0, null, !dbg !6770
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !6770

lor.lhs.false:                                    ; preds = %entry
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 1, !dbg !6770
  %1 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !6770
  %tobool1 = icmp eq %struct.edge_def* %1, null, !dbg !6770
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !6770

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1345, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6770
  br label %cond.end, !dbg !6770

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %bb_end = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 0, !dbg !6771
  %2 = load i8, i8* %bb_end, align 8, !dbg !6771
  %tobool2 = icmp eq i8 %2, 0, !dbg !6773
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !6774

land.lhs.true:                                    ; preds = %cond.end
  %e13 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 1, !dbg !6775
  %3 = load %struct.edge_def*, %struct.edge_def** %e13, align 8, !dbg !6775
  %tobool4 = icmp eq %struct.edge_def* %3, null, !dbg !6776
  br i1 %tobool4, label %if.end, label %land.lhs.true5, !dbg !6777

land.lhs.true5:                                   ; preds = %land.lhs.true
  %loop_exits = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 8, !dbg !6778
  %4 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !6778
  %tobool6 = icmp eq %struct.VEC_edge_heap* %4, null, !dbg !6779
  br i1 %tobool6, label %if.then, label %if.end, !dbg !6780

if.then:                                          ; preds = %land.lhs.true5
  %ei = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %ip, i64 0, i32 3, !dbg !6781
  tail call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6782
  br label %if.end, !dbg !6782

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %cond.end, %if.then
  ret void, !dbg !6783
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %vec_, i32 %ix_, %struct.edge_def** %ptr) unnamed_addr #0 !dbg !6784 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6788, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6789, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata %struct.edge_def** %ptr, metadata !6790, metadata !DIExpression()), !dbg !6791
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6792
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6792

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6792
  %0 = load i32, i32* %num, align 8, !dbg !6792
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6792
  br i1 %cmp, label %if.then, label %if.else, !dbg !6794

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6795
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6795
  %1 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6795
  br label %return, !dbg !6795

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6797

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ null, %if.else ], [ %1, %if.then ], !dbg !6799
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6799
  store %struct.edge_def* %storemerge, %struct.edge_def** %ptr, align 8, !dbg !6799
  ret i32 %retval.0, !dbg !6794
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** %vec_) unnamed_addr #0 !dbg !6800 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !6805, metadata !DIExpression()), !dbg !6806
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !6807
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !6807
  br i1 %tobool, label %if.end, label %if.then, !dbg !6809

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_edge_heap* %0 to i8*, !dbg !6809
  tail call void @free(i8* nonnull %1) #6, !dbg !6807
  br label %if.end, !dbg !6807

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %vec_, align 8, !dbg !6809
  ret void, !dbg !6809
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_heap* @get_all_loop_exits(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6810 {
entry:
  %exits = alloca %struct.VEC_edge_heap*, align 8
  %e = alloca %struct.edge_def*, align 8
  %ne = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6814, metadata !DIExpression()), !dbg !6831
  %0 = bitcast %struct.VEC_edge_heap** %exits to i8*, !dbg !6832
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6832
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* null, metadata !6815, metadata !DIExpression()), !dbg !6831
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %exits, align 8, !dbg !6833
  br label %while.cond, !dbg !6834

while.cond:                                       ; preds = %cond.end, %entry
  %bb.addr.0 = phi %struct.basic_block_def* [ %bb, %entry ], [ %call4, %cond.end ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0, metadata !6814, metadata !DIExpression()), !dbg !6831
  %call = tail call fastcc zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %bb.addr.0) #7, !dbg !6835
  %tobool = icmp eq i8 %call, 0, !dbg !6835
  br i1 %tobool, label %while.end, label %land.rhs, !dbg !6836

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %bb.addr.0) #6, !dbg !6837
  %tobool3 = icmp eq i8 %call1, 0, !dbg !6836
  br i1 %tobool3, label %while.end, label %while.body, !dbg !6834

while.body:                                       ; preds = %land.rhs
  %call4 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb.addr.0) #7, !dbg !6838
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call4, metadata !6814, metadata !DIExpression()), !dbg !6831
  %call5 = tail call zeroext i8 @in_current_region_p(%struct.basic_block_def* %call4) #6, !dbg !6840
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6840
  br i1 %tobool6, label %cond.end, label %cond.true, !dbg !6840

cond.true:                                        ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6840
  br label %cond.end, !dbg !6840

cond.end:                                         ; preds = %while.body, %cond.true
  br label %while.cond, !dbg !6834, !llvm.loop !6841

while.end:                                        ; preds = %land.rhs, %while.cond
  %bb.addr.0.lcssa = phi %struct.basic_block_def* [ %bb.addr.0, %land.rhs ], [ %bb.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !6814, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !6814, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !6814, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !6814, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !6814, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0.lcssa, metadata !6814, metadata !DIExpression()), !dbg !6831
  %call7 = tail call fastcc zeroext i8 @inner_loop_header_p(%struct.basic_block_def* %bb.addr.0.lcssa) #7, !dbg !6843
  %tobool8 = icmp eq i8 %call7, 0, !dbg !6843
  br i1 %tobool8, label %if.end66, label %if.then, !dbg !6844

if.then:                                          ; preds = %while.end
  call void @llvm.dbg.value(metadata %struct.loop* null, metadata !6819, metadata !DIExpression()), !dbg !6845
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !6846
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6846
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.addr.0.lcssa, i64 0, i32 3, !dbg !6847
  %2 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !6847
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !6816, metadata !DIExpression()), !dbg !6845
  br label %for.cond, !dbg !6849

for.cond:                                         ; preds = %for.inc, %if.then
  %pred_loop.0 = phi %struct.loop* [ null, %if.then ], [ %this_loop.0, %for.inc ], !dbg !6845
  %this_loop.0 = phi %struct.loop* [ %2, %if.then ], [ %call13, %for.inc ], !dbg !6850
  call void @llvm.dbg.value(metadata %struct.loop* %this_loop.0, metadata !6816, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata %struct.loop* %pred_loop.0, metadata !6819, metadata !DIExpression()), !dbg !6845
  %tobool9 = icmp ne %struct.loop* %this_loop.0, null, !dbg !6851
  %3 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !6853
  %cmp = icmp ne %struct.loop* %this_loop.0, %3, !dbg !6853
  %4 = and i1 %cmp, %tobool9, !dbg !6853
  br i1 %4, label %for.inc, label %for.end, !dbg !6854

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %this_loop.0, metadata !6819, metadata !DIExpression()), !dbg !6845
  %call13 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* nonnull %this_loop.0) #7, !dbg !6855
  call void @llvm.dbg.value(metadata %struct.loop* %call13, metadata !6816, metadata !DIExpression()), !dbg !6845
  br label %for.cond, !dbg !6856, !llvm.loop !6857

for.end:                                          ; preds = %for.cond
  %pred_loop.0.lcssa = phi %struct.loop* [ %pred_loop.0, %for.cond ], !dbg !6845
  call void @llvm.dbg.value(metadata %struct.loop* %pred_loop.0.lcssa, metadata !6819, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata %struct.loop* %pred_loop.0.lcssa, metadata !6819, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata %struct.loop* %pred_loop.0.lcssa, metadata !6819, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata %struct.loop* %pred_loop.0.lcssa, metadata !6816, metadata !DIExpression()), !dbg !6845
  %cmp14 = icmp eq %struct.loop* %pred_loop.0.lcssa, null, !dbg !6859
  br i1 %cmp14, label %cond.true16, label %cond.end18, !dbg !6859

cond.true16:                                      ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6859
  br label %cond.end18, !dbg !6859

cond.end18:                                       ; preds = %for.end, %cond.true16
  %call20 = tail call fastcc %struct.VEC_edge_heap* @get_loop_exit_edges_unique_dests(%struct.loop* %pred_loop.0.lcssa) #7, !dbg !6860
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call20, metadata !6815, metadata !DIExpression()), !dbg !6831
  store %struct.VEC_edge_heap* %call20, %struct.VEC_edge_heap** %exits, align 8, !dbg !6861
  call void @llvm.dbg.value(metadata i32 0, metadata !6820, metadata !DIExpression()), !dbg !6845
  %5 = bitcast %struct.edge_def** %ne to i8*, !dbg !6862
  br label %for.cond21, !dbg !6863

for.cond21:                                       ; preds = %for.inc63, %cond.end18
  %6 = phi %struct.VEC_edge_heap* [ %call20, %cond.end18 ], [ %.pre, %for.inc63 ], !dbg !6864
  %i.0 = phi i32 [ 0, %cond.end18 ], [ %inc64, %for.inc63 ], !dbg !6865
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6820, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %6, metadata !6815, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %6, metadata !6815, metadata !DIExpression()), !dbg !6831
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %6, i64 0, i32 0, !dbg !6864
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6821, metadata !DIExpression(DW_OP_deref)), !dbg !6845
  %call27 = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base, i32 %i.0, %struct.edge_def** nonnull %e) #7, !dbg !6864
  %tobool28 = icmp eq i32 %call27, 0, !dbg !6866
  br i1 %tobool28, label %for.end65, label %for.body29, !dbg !6866

for.body29:                                       ; preds = %for.cond21
  %7 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6867
  call void @llvm.dbg.value(metadata %struct.edge_def* %7, metadata !6821, metadata !DIExpression()), !dbg !6845
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %7, i64 0, i32 1, !dbg !6868
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6868
  %call30 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %8) #6, !dbg !6869
  %tobool32 = icmp eq i8 %call30, 0, !dbg !6869
  br i1 %tobool32, label %lor.lhs.false, label %if.then37, !dbg !6870

lor.lhs.false:                                    ; preds = %for.body29
  %9 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6871
  call void @llvm.dbg.value(metadata %struct.edge_def* %9, metadata !6821, metadata !DIExpression()), !dbg !6845
  %dest33 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %9, i64 0, i32 1, !dbg !6872
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %dest33, align 8, !dbg !6872
  %call34 = call fastcc zeroext i8 @inner_loop_header_p(%struct.basic_block_def* %10) #7, !dbg !6873
  %tobool36 = icmp eq i8 %call34, 0, !dbg !6873
  br i1 %tobool36, label %for.inc63, label %if.then37, !dbg !6874

if.then37:                                        ; preds = %lor.lhs.false, %for.body29
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6875
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !6821, metadata !DIExpression()), !dbg !6845
  %dest38 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 1, !dbg !6876
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest38, align 8, !dbg !6876
  %call39 = call fastcc %struct.VEC_edge_heap* @get_all_loop_exits(%struct.basic_block_def* %12) #7, !dbg !6877
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call39, metadata !6822, metadata !DIExpression()), !dbg !6878
  %tobool40 = icmp eq %struct.VEC_edge_heap* %call39, null, !dbg !6879
  br i1 %tobool40, label %for.inc63, label %if.then41, !dbg !6880

if.then41:                                        ; preds = %if.then37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !6881
  call void @llvm.dbg.value(metadata i32 0, metadata !6827, metadata !DIExpression()), !dbg !6862
  %base45 = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %call39, i64 0, i32 0, !dbg !6882
  br label %for.cond42, !dbg !6885

for.cond42:                                       ; preds = %for.body51, %if.then41
  %j.0 = phi i32 [ 0, %if.then41 ], [ %inc, %for.body51 ], !dbg !6886
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6827, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.value(metadata %struct.edge_def** %ne, metadata !6830, metadata !DIExpression(DW_OP_deref)), !dbg !6862
  %call49 = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* nonnull %base45, i32 %j.0, %struct.edge_def** nonnull %ne) #7, !dbg !6887
  %tobool50 = icmp eq i32 %call49, 0, !dbg !6888
  br i1 %tobool50, label %for.end54, label %for.body51, !dbg !6888

for.body51:                                       ; preds = %for.cond42
  %13 = load %struct.edge_def*, %struct.edge_def** %ne, align 8, !dbg !6889
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !6830, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %exits, metadata !6815, metadata !DIExpression(DW_OP_deref)), !dbg !6831
  %call52 = call fastcc %struct.edge_def** @VEC_edge_heap_safe_push(%struct.VEC_edge_heap** nonnull %exits, %struct.edge_def* %13) #7, !dbg !6889
  %inc = add nuw nsw i32 %j.0, 1, !dbg !6890
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6827, metadata !DIExpression()), !dbg !6862
  br label %for.cond42, !dbg !6891, !llvm.loop !6892

for.end54:                                        ; preds = %for.cond42
  %14 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !6894
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %14, metadata !6815, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %14, metadata !6815, metadata !DIExpression()), !dbg !6831
  %base57 = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %14, i64 0, i32 0, !dbg !6894
  %call61 = call fastcc %struct.edge_def* @VEC_edge_base_ordered_remove(%struct.VEC_edge_base* %base57, i32 %i.0) #7, !dbg !6894
  %dec = add nsw i32 %i.0, -1, !dbg !6895
  call void @llvm.dbg.value(metadata i32 %dec, metadata !6820, metadata !DIExpression()), !dbg !6845
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !6896
  br label %for.inc63

for.inc63:                                        ; preds = %if.then37, %lor.lhs.false, %for.end54
  %i.3 = phi i32 [ %i.0, %lor.lhs.false ], [ %dec, %for.end54 ], [ %i.0, %if.then37 ], !dbg !6895
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !6820, metadata !DIExpression()), !dbg !6845
  %inc64 = add nsw i32 %i.3, 1, !dbg !6897
  call void @llvm.dbg.value(metadata i32 %inc64, metadata !6820, metadata !DIExpression()), !dbg !6845
  %.pre = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !6864
  br label %for.cond21, !dbg !6898, !llvm.loop !6899

for.end65:                                        ; preds = %for.cond21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6901
  %.pre1 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !6902
  br label %if.end66, !dbg !6903

if.end66:                                         ; preds = %while.end, %for.end65
  %15 = phi %struct.VEC_edge_heap* [ null, %while.end ], [ %.pre1, %for.end65 ], !dbg !6902
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %15, metadata !6815, metadata !DIExpression()), !dbg !6831
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6904
  ret %struct.VEC_edge_heap* %15, !dbg !6905
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !6906 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6908, metadata !DIExpression()), !dbg !6911
  %call = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %bb) #6, !dbg !6912
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6909, metadata !DIExpression()), !dbg !6911
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !6913
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6915

if.end:                                           ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !6916
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6916
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !6916
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6916
  %2 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !6916
  %cmp1 = icmp eq %struct.rtx_def* %1, %2, !dbg !6916
  br i1 %cmp1, label %if.end3, label %cleanup, !dbg !6918

if.end3:                                          ; preds = %if.end
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6919
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !6919
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6919
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !6919
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6919
  %cmp4 = icmp eq %struct.basic_block_def* %5, %bb, !dbg !6921
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !6922

if.end6:                                          ; preds = %if.end3
  %call7 = tail call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %bb) #6, !dbg !6923
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !6910, metadata !DIExpression()), !dbg !6911
  %cmp8 = icmp eq %struct.rtx_def* %call, %call7, !dbg !6924
  %. = zext i1 %cmp8 to i8, !dbg !6911
  br label %cleanup, !dbg !6911

cleanup:                                          ; preds = %if.end6, %if.end3, %if.end, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ 0, %if.end ], [ 0, %if.end3 ], [ %., %if.end6 ], !dbg !6911
  ret i8 %retval.0, !dbg !6926
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @inner_loop_header_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6927 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6929, metadata !DIExpression()), !dbg !6931
  %0 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !6932
  %tobool = icmp eq %struct.loop* %0, null, !dbg !6932
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6934

if.end:                                           ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6935
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !6935
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6935
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 1, !dbg !6935
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6935
  %cmp = icmp eq %struct.basic_block_def* %3, %bb, !dbg !6937
  br i1 %cmp, label %cleanup, label %if.end2, !dbg !6938

if.end2:                                          ; preds = %if.end
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 3, !dbg !6939
  %4 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !6939
  call void @llvm.dbg.value(metadata %struct.loop* %4, metadata !6930, metadata !DIExpression()), !dbg !6931
  %cmp3 = icmp eq %struct.loop* %4, %0, !dbg !6940
  br i1 %cmp3, label %cleanup, label %if.end5, !dbg !6942

if.end5:                                          ; preds = %if.end2
  %header = getelementptr inbounds %struct.loop, %struct.loop* %4, i64 0, i32 2, !dbg !6943
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !6943
  %cmp6 = icmp eq %struct.basic_block_def* %5, %bb, !dbg !6945
  br i1 %cmp6, label %land.lhs.true, label %cleanup, !dbg !6946

land.lhs.true:                                    ; preds = %if.end5
  %call = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* nonnull %0, %struct.basic_block_def* %bb) #6, !dbg !6947
  %tobool7 = icmp eq i8 %call, 0, !dbg !6947
  br i1 %tobool7, label %cleanup, label %if.then8, !dbg !6948

if.then8:                                         ; preds = %land.lhs.true
  %call9 = tail call fastcc i32 @loop_depth(%struct.loop* %4) #7, !dbg !6949
  %6 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !6949
  %call10 = tail call fastcc i32 @loop_depth(%struct.loop* %6) #7, !dbg !6949
  %cmp11 = icmp ult i32 %call9, %call10, !dbg !6949
  br i1 %cmp11, label %cond.true, label %cleanup, !dbg !6949

cond.true:                                        ; preds = %if.then8
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1052, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6949
  br label %cleanup, !dbg !6949

cleanup:                                          ; preds = %if.then8, %land.lhs.true, %entry, %if.end5, %cond.true, %if.end2, %if.end
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end2 ], [ 1, %if.then8 ], [ 1, %cond.true ], [ 0, %land.lhs.true ], [ 0, %if.end5 ], !dbg !6931
  ret i8 %retval.0, !dbg !6951
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !6952 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6958, metadata !DIExpression()), !dbg !6960
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !6961
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !6961
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !6961
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6961

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !6961
  br label %cond.end, !dbg !6961

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6961
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !6961
  call void @llvm.dbg.value(metadata i32 %call, metadata !6959, metadata !DIExpression()), !dbg !6960
  %cmp = icmp eq i32 %call, 0, !dbg !6962
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6964

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !6965
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !6965
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !6965

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !6965
  br label %cond.end8, !dbg !6965

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !6965
  %sub = add i32 %call, -1, !dbg !6965
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #7, !dbg !6965
  br label %cleanup, !dbg !6966

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !6960
  ret %struct.loop* %retval.0, !dbg !6967
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_heap* @get_loop_exit_edges_unique_dests(%struct.loop* %loop) unnamed_addr #0 !dbg !6968 {
entry:
  %edges = alloca %struct.VEC_edge_heap*, align 8
  %e3 = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6972, metadata !DIExpression()), !dbg !6981
  %0 = bitcast %struct.VEC_edge_heap** %edges to i8*, !dbg !6982
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6982
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* null, metadata !6973, metadata !DIExpression()), !dbg !6981
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %edges, align 8, !dbg !6983
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !6984
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !6984
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6984
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !6984
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6984
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !6984
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6984
  %cmp = icmp eq %struct.basic_block_def* %1, %4, !dbg !6984
  br i1 %cmp, label %cond.true, label %land.lhs.true, !dbg !6984

land.lhs.true:                                    ; preds = %entry
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 4, !dbg !6984
  %5 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !6984
  %state = getelementptr inbounds %struct.loops, %struct.loops* %5, i64 0, i32 0, !dbg !6984
  %6 = load i32, i32* %state, align 8, !dbg !6984
  %and = and i32 %6, 8, !dbg !6984
  %tobool = icmp eq i32 %and, 0, !dbg !6984
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6984

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1067, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6984
  br label %cond.end, !dbg !6984

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %exits = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 18, !dbg !6985
  %7 = load %struct.loop_exit*, %struct.loop_exit** %exits, align 8, !dbg !6985
  %8 = bitcast %struct.edge_def** %e3 to i8*, !dbg !6986
  br label %for.cond, !dbg !6987

for.cond:                                         ; preds = %if.end19, %cond.end
  %.pn = phi %struct.loop_exit* [ %7, %cond.end ], [ %exit.0, %if.end19 ]
  %exit.0.in = getelementptr inbounds %struct.loop_exit, %struct.loop_exit* %.pn, i64 0, i32 2, !dbg !6988
  %exit.0 = load %struct.loop_exit*, %struct.loop_exit** %exit.0.in, align 8, !dbg !6988
  call void @llvm.dbg.value(metadata %struct.loop_exit* %exit.0, metadata !6974, metadata !DIExpression()), !dbg !6981
  %e = getelementptr inbounds %struct.loop_exit, %struct.loop_exit* %exit.0, i64 0, i32 0, !dbg !6989
  %9 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6989
  %tobool2 = icmp eq %struct.edge_def* %9, null, !dbg !6990
  br i1 %tobool2, label %for.end22, label %for.body, !dbg !6990

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !6991
  call void @llvm.dbg.value(metadata i8 0, metadata !6980, metadata !DIExpression()), !dbg !6986
  call void @llvm.dbg.value(metadata i32 0, metadata !6975, metadata !DIExpression()), !dbg !6986
  br label %for.cond4, !dbg !6992

for.cond4:                                        ; preds = %for.inc, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ], !dbg !6994
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6975, metadata !DIExpression()), !dbg !6986
  %10 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !6995
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %10, metadata !6973, metadata !DIExpression()), !dbg !6981
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %10, metadata !6973, metadata !DIExpression()), !dbg !6981
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %10, i64 0, i32 0, !dbg !6995
  call void @llvm.dbg.value(metadata %struct.edge_def** %e3, metadata !6979, metadata !DIExpression(DW_OP_deref)), !dbg !6986
  %call = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base, i32 %i.0, %struct.edge_def** nonnull %e3) #7, !dbg !6995
  %tobool10 = icmp eq i32 %call, 0, !dbg !6997
  br i1 %tobool10, label %for.end, label %for.body11, !dbg !6997

for.body11:                                       ; preds = %for.cond4
  %11 = load %struct.edge_def*, %struct.edge_def** %e3, align 8, !dbg !6998
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !6979, metadata !DIExpression()), !dbg !6986
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 1, !dbg !7000
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7000
  %13 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7001
  %dest13 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i64 0, i32 1, !dbg !7002
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest13, align 8, !dbg !7002
  %cmp14 = icmp eq %struct.basic_block_def* %12, %14, !dbg !7003
  br i1 %cmp14, label %for.end, label %for.inc, !dbg !7004

for.inc:                                          ; preds = %for.body11
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7005
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6975, metadata !DIExpression()), !dbg !6986
  br label %for.cond4, !dbg !7006, !llvm.loop !7007

for.end:                                          ; preds = %for.cond4, %for.body11
  %was_dest.0 = phi i1 [ false, %for.cond4 ], [ true, %for.body11 ]
  br i1 %was_dest.0, label %if.end19, label %if.then16, !dbg !7009

if.then16:                                        ; preds = %for.end
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7010
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %edges, metadata !6973, metadata !DIExpression(DW_OP_deref)), !dbg !6981
  %call18 = call fastcc %struct.edge_def** @VEC_edge_heap_safe_push(%struct.VEC_edge_heap** nonnull %edges, %struct.edge_def* %15) #7, !dbg !7010
  br label %if.end19, !dbg !7010

if.end19:                                         ; preds = %if.then16, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !7012
  br label %for.cond, !dbg !7013, !llvm.loop !7014

for.end22:                                        ; preds = %for.cond
  %16 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !7016
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %16, metadata !6973, metadata !DIExpression()), !dbg !6981
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7017
  ret %struct.VEC_edge_heap* %16, !dbg !7018
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def** @VEC_edge_heap_safe_push(%struct.VEC_edge_heap** %vec_, %struct.edge_def* %obj_) unnamed_addr #0 !dbg !7019 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !7023, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.value(metadata %struct.edge_def* %obj_, metadata !7024, metadata !DIExpression()), !dbg !7025
  %call = tail call fastcc i32 @VEC_edge_heap_reserve(%struct.VEC_edge_heap** %vec_, i32 1) #7, !dbg !7026
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !7026
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !7026
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7026

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %0, i64 0, i32 0, !dbg !7026
  br label %cond.end, !dbg !7026

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7026
  %call1 = tail call fastcc %struct.edge_def** @VEC_edge_base_quick_push(%struct.VEC_edge_base* %cond, %struct.edge_def* %obj_) #7, !dbg !7026
  ret %struct.edge_def** %call1, !dbg !7026
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_ordered_remove(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7027 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !7032, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7033, metadata !DIExpression()), !dbg !7036
  %idxprom = zext i32 %ix_ to i64, !dbg !7037
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7037
  call void @llvm.dbg.value(metadata %struct.edge_def** %arrayidx, metadata !7034, metadata !DIExpression()), !dbg !7036
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !7037
  call void @llvm.dbg.value(metadata %struct.edge_def* %0, metadata !7035, metadata !DIExpression()), !dbg !7036
  %1 = bitcast %struct.edge_def** %arrayidx to i8*, !dbg !7037
  %add.ptr = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %arrayidx, i64 1, !dbg !7037
  %2 = bitcast %struct.edge_def** %add.ptr to i8*, !dbg !7037
  %num1 = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !7037
  %3 = load i32, i32* %num1, align 8, !dbg !7037
  %dec = add i32 %3, -1, !dbg !7037
  store i32 %dec, i32* %num1, align 8, !dbg !7037
  %sub = sub i32 %dec, %ix_, !dbg !7037
  %conv2 = zext i32 %sub to i64, !dbg !7037
  %mul = shl nuw nsw i64 %conv2, 3, !dbg !7037
  %call = tail call i8* @memmove(i8* nonnull %1, i8* nonnull %2, i64 %mul) #6, !dbg !7037
  ret %struct.edge_def* %0, !dbg !7037
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @loop_depth(%struct.loop* %loop) unnamed_addr #0 !dbg !7038 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7042, metadata !DIExpression()), !dbg !7043
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !7044
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !7044
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !7044
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7044

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !7044
  br label %cond.end, !dbg !7044

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7044
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !7044
  ret i32 %call, !dbg !7045
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !7046 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !7052, metadata !DIExpression()), !dbg !7053
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !7054
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7054

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !7054
  %0 = load i32, i32* %num, align 8, !dbg !7054
  br label %cond.end, !dbg !7054

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7054
  ret i32 %cond, !dbg !7054
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7055 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !7059, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7060, metadata !DIExpression()), !dbg !7061
  br label %land.end, !dbg !7062

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !7062
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7062
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !7062
  ret %struct.loop* %0, !dbg !7062
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_heap_reserve(%struct.VEC_edge_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7063 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !7067, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata i32 1, metadata !7068, metadata !DIExpression()), !dbg !7070
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !7071
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !7071
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7071

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %0, i64 0, i32 0, !dbg !7071
  br label %cond.end, !dbg !7071

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7071
  %call = tail call fastcc i32 @VEC_edge_base_space(%struct.VEC_edge_base* %cond, i32 1) #7, !dbg !7071
  %tobool1 = icmp eq i32 %call, 0, !dbg !7071
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7071
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7069, metadata !DIExpression()), !dbg !7070
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7071

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_edge_heap** %vec_ to i8**, !dbg !7072
  %2 = load i8*, i8** %1, align 8, !dbg !7072
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !7072
  store i8* %call3, i8** %1, align 8, !dbg !7072
  br label %if.end, !dbg !7072

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7071
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def** @VEC_edge_base_quick_push(%struct.VEC_edge_base* %vec_, %struct.edge_def* %obj_) unnamed_addr #0 !dbg !7074 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !7078, metadata !DIExpression()), !dbg !7081
  call void @llvm.dbg.value(metadata %struct.edge_def* %obj_, metadata !7079, metadata !DIExpression()), !dbg !7081
  %num1 = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !7082
  %0 = load i32, i32* %num1, align 8, !dbg !7082
  %inc = add i32 %0, 1, !dbg !7082
  store i32 %inc, i32* %num1, align 8, !dbg !7082
  %idxprom = zext i32 %0 to i64, !dbg !7082
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7082
  call void @llvm.dbg.value(metadata %struct.edge_def** %arrayidx, metadata !7080, metadata !DIExpression()), !dbg !7081
  store %struct.edge_def* %obj_, %struct.edge_def** %arrayidx, align 8, !dbg !7082
  ret %struct.edge_def** %arrayidx, !dbg !7082
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_space(%struct.VEC_edge_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7083 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !7087, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.value(metadata i32 1, metadata !7088, metadata !DIExpression()), !dbg !7089
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !7090
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7090

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 1, !dbg !7090
  %0 = load i32, i32* %alloc, align 4, !dbg !7090
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !7090
  %1 = load i32, i32* %num, align 8, !dbg !7090
  %cmp1 = icmp ne i32 %0, %1, !dbg !7090
  %phitmp = zext i1 %cmp1 to i32, !dbg !7090
  br label %cond.end, !dbg !7090

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7090

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !7090
}

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local void @rgn_setup_region(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @current_region_empty_p() unnamed_addr #5 !dbg !7091 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !7093, metadata !DIExpression()), !dbg !7094
  br label %for.cond, !dbg !7095

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !7097
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7093, metadata !DIExpression()), !dbg !7094
  %0 = load i32, i32* @current_nr_blocks, align 4, !dbg !7098
  %1 = sext i32 %0 to i64, !dbg !7100
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !7100
  br i1 %cmp, label %for.body, label %cleanup, !dbg !7101

for.body:                                         ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7102
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !7102
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7102
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 2, !dbg !7102
  %4 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7102
  %tobool = icmp eq %struct.VEC_basic_block_gc* %4, null, !dbg !7102
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7102

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %4, i64 0, i32 0, !dbg !7102
  br label %cond.end, !dbg !7102

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !7102
  %5 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7102
  %6 = load i32*, i32** @ebb_head, align 8, !dbg !7102
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %indvars.iv, !dbg !7102
  %7 = load i32, i32* %arrayidx, align 4, !dbg !7102
  %idxprom4 = sext i32 %7 to i64, !dbg !7102
  %arrayidx5 = getelementptr inbounds i32, i32* %5, i64 %idxprom4, !dbg !7102
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !7102
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %8) #7, !dbg !7102
  %call6 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %call) #6, !dbg !7104
  %tobool7 = icmp eq i8 %call6, 0, !dbg !7104
  br i1 %tobool7, label %cleanup, label %for.inc, !dbg !7105

for.inc:                                          ; preds = %cond.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7106
  call void @llvm.dbg.value(metadata i32 undef, metadata !7093, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7094
  br label %for.cond, !dbg !7107, !llvm.loop !7108

cleanup:                                          ; preds = %cond.end, %for.cond
  %retval.0 = phi i8 [ 0, %cond.end ], [ 1, %for.cond ], !dbg !7094
  ret i8 %retval.0, !dbg !7110
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_current_loop_nest(i32 %rgn) unnamed_addr #5 !dbg !7111 {
entry:
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !7113, metadata !DIExpression()), !dbg !7114
  %call = tail call %struct.loop* @get_loop_nest_for_rgn(i32 %rgn) #6, !dbg !7115
  store %struct.loop* %call, %struct.loop** @current_loop_nest, align 8, !dbg !7116
  %tobool = icmp eq %struct.loop* %call, null, !dbg !7117
  br i1 %tobool, label %return, label %if.end, !dbg !7119

if.end:                                           ; preds = %entry
  tail call void @sel_add_loop_preheaders() #6, !dbg !7120
  %0 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7121
  %call1 = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* %0) #6, !dbg !7121
  %tobool2 = icmp eq %struct.edge_def* %call1, null, !dbg !7121
  br i1 %tobool2, label %cond.true, label %cond.end, !dbg !7121

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6792, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7121
  br label %cond.end, !dbg !7121

cond.end:                                         ; preds = %if.end, %cond.true
  %1 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7122
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 10, !dbg !7122
  %2 = bitcast i8** %aux to i64*, !dbg !7122
  %3 = load i64, i64* %2, align 8, !dbg !7122
  %tobool3 = icmp eq i64 %3, 0, !dbg !7122
  br i1 %tobool3, label %cond.true4, label %return, !dbg !7122

cond.true4:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6793, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7122
  br label %return, !dbg !7122

return:                                           ; preds = %cond.end, %entry, %cond.true4
  ret void, !dbg !7123
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_setup_region_sched_flags() unnamed_addr #5 !dbg !7124 {
entry:
  store i1 true, i1* @enable_schedule_as_rhs_p, align 1, !dbg !7125
  store i8 1, i8* @bookkeeping_p, align 1, !dbg !7126
  %0 = load i32, i32* @flag_sel_sched_pipelining, align 4, !dbg !7127
  %cmp = icmp eq i32 %0, 0, !dbg !7128
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !7129

land.rhs:                                         ; preds = %entry
  %1 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7130
  %cmp2 = icmp ne %struct.loop* %1, null, !dbg !7131
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  store i8 %2, i8* @pipelining_p, align 1, !dbg !7132
  %3 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !7133
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %3, i64 87, i32 1, !dbg !7133
  %4 = load i32, i32* %value, align 8, !dbg !7133
  store i32 %4, i32* @max_insns_to_rename, align 4, !dbg !7134
  %value6 = getelementptr inbounds %struct.param_info, %struct.param_info* %3, i64 85, i32 1, !dbg !7135
  %5 = load i32, i32* %value6, align 8, !dbg !7135
  store i32 %5, i32* @max_ws, align 4, !dbg !7136
  ret void, !dbg !7137
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !7138 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !7142, metadata !DIExpression()), !dbg !7143
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !7144
  %0 = bitcast i8* %call to %struct.VEC_basic_block_heap*, !dbg !7144
  ret %struct.VEC_basic_block_heap* %0, !dbg !7144
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %vec_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !7145 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !7150, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !7151, metadata !DIExpression()), !dbg !7153
  %num1 = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !7154
  %0 = load i32, i32* %num1, align 8, !dbg !7154
  %inc = add i32 %0, 1, !dbg !7154
  store i32 %inc, i32* %num1, align 8, !dbg !7154
  %idxprom = zext i32 %0 to i64, !dbg !7154
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7154
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %arrayidx, metadata !7152, metadata !DIExpression()), !dbg !7153
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %arrayidx, align 8, !dbg !7154
  ret %struct.basic_block_def** %arrayidx, !dbg !7154
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7155 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !7161, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7162, metadata !DIExpression()), !dbg !7163
  br label %land.end, !dbg !7164

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !7164
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7164
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !7164
  ret %struct.basic_block_def* %0, !dbg !7164
}

declare dso_local void @sel_init_bbs(%struct.VEC_basic_block_heap*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @sched_init_luids(%struct.VEC_basic_block_heap*, %struct.basic_block_def*, %struct.VEC_rtx_heap*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @sched_deps_init(i8 zeroext) local_unnamed_addr #2

declare dso_local void @rgn_setup_sched_infos() local_unnamed_addr #2

declare dso_local void @sel_set_sched_flags() local_unnamed_addr #2

declare dso_local void @haifa_init_h_i_d(%struct.VEC_basic_block_heap*, %struct.basic_block_def*, %struct.VEC_rtx_heap*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_compute_priorities(i32 %rgn) unnamed_addr #5 !dbg !7165 {
entry:
  call void @llvm.dbg.value(metadata i32 %rgn, metadata !7167, metadata !DIExpression()), !dbg !7168
  tail call void @sched_rgn_compute_dependencies(i32 %rgn) #6, !dbg !7169
  tail call void @compute_priorities() #6, !dbg !7170
  %0 = load i32, i32* @sched_verbose, align 4, !dbg !7171
  %cmp = icmp sgt i32 %0, 4, !dbg !7173
  br i1 %cmp, label %if.then, label %if.end, !dbg !7174

if.then:                                          ; preds = %entry
  tail call void @debug_rgn_dependencies(i32 0) #6, !dbg !7175
  br label %if.end, !dbg !7175

if.end:                                           ; preds = %if.then, %entry
  tail call void @free_rgn_deps() #6, !dbg !7176
  ret void, !dbg !7177
}

declare dso_local void @init_deps_global() local_unnamed_addr #2

declare dso_local void @sel_setup_sched_infos() local_unnamed_addr #2

declare dso_local void @sel_init_global_and_expr(%struct.VEC_basic_block_heap*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %vec_) unnamed_addr #0 !dbg !7178 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !7183, metadata !DIExpression()), !dbg !7184
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !7185
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !7185
  br i1 %tobool, label %if.end, label %if.then, !dbg !7187

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_basic_block_heap* %0 to i8*, !dbg !7187
  tail call void @free(i8* nonnull %1) #6, !dbg !7185
  br label %if.end, !dbg !7185

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !7187
  ret void, !dbg !7187
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @sel_register_cfg_hooks() local_unnamed_addr #2

declare dso_local i32 @get_max_uid() local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %head, %struct.bitmap_obstack* %obstack) unnamed_addr #0 !dbg !7188 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %head, metadata !7192, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata %struct.bitmap_obstack* null, metadata !7193, metadata !DIExpression()), !dbg !7194
  %current = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 1, !dbg !7195
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %current, align 8, !dbg !7196
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 0, !dbg !7197
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %first, align 8, !dbg !7198
  %obstack1 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 3, !dbg !7199
  store %struct.bitmap_obstack* null, %struct.bitmap_obstack** %obstack1, align 8, !dbg !7200
  ret void, !dbg !7201
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @setup_nop_vinsn() local_unnamed_addr #2

declare dso_local %struct.loop* @get_loop_nest_for_rgn(i32) local_unnamed_addr #2

declare dso_local void @sel_add_loop_preheaders() local_unnamed_addr #2

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) local_unnamed_addr #2

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local void @sched_rgn_compute_dependencies(i32) local_unnamed_addr #2

declare dso_local void @compute_priorities() local_unnamed_addr #2

declare dso_local void @debug_rgn_dependencies(i32) local_unnamed_addr #2

declare dso_local void @free_rgn_deps() local_unnamed_addr #2

declare dso_local void @purge_empty_blocks() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @init_seqno(i32 %number_of_insns, %struct.bitmap_head_def* %blocks_to_reschedule, %struct.basic_block_def* %from) unnamed_addr #5 !dbg !7202 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %bbi = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %number_of_insns, metadata !7206, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %blocks_to_reschedule, metadata !7207, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %from, metadata !7208, metadata !DIExpression()), !dbg !7229
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !7230
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7230
  %1 = bitcast i32* %bbi to i8*, !dbg !7231
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !7231
  %2 = load i32, i32* @current_nr_blocks, align 4, !dbg !7232
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %2) #6, !dbg !7233
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !7209, metadata !DIExpression()), !dbg !7229
  %tobool = icmp eq %struct.bitmap_head_def* %blocks_to_reschedule, null, !dbg !7234
  br i1 %tobool, label %if.else, label %if.then, !dbg !7236

if.then:                                          ; preds = %entry
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %call) #6, !dbg !7237
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7220, metadata !DIExpression(DW_OP_deref)), !dbg !7229
  call void @llvm.dbg.value(metadata i32* %bbi, metadata !7228, metadata !DIExpression(DW_OP_deref)), !dbg !7229
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %blocks_to_reschedule, i32 0, i32* nonnull %bbi) #7, !dbg !7239
  br label %for.cond, !dbg !7239

for.cond:                                         ; preds = %cond.end, %if.then
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7220, metadata !DIExpression(DW_OP_deref)), !dbg !7229
  call void @llvm.dbg.value(metadata i32* %bbi, metadata !7228, metadata !DIExpression(DW_OP_deref)), !dbg !7229
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bbi) #7, !dbg !7241
  %tobool2 = icmp eq i8 %call1, 0, !dbg !7239
  br i1 %tobool2, label %if.end.loopexit, label %for.body, !dbg !7239

for.body:                                         ; preds = %for.cond
  %3 = load i32*, i32** @block_to_bb, align 8, !dbg !7243
  %4 = load i32, i32* %bbi, align 4, !dbg !7243
  call void @llvm.dbg.value(metadata i32 %4, metadata !7228, metadata !DIExpression()), !dbg !7229
  %idxprom = zext i32 %4 to i64, !dbg !7243
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !7243
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7243
  %6 = load i32, i32* @current_nr_blocks, align 4, !dbg !7243
  %cmp = icmp slt i32 %5, %6, !dbg !7243
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7243

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6735, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7243
  %.pre = load i32*, i32** @block_to_bb, align 8, !dbg !7245
  %.pre1 = load i32, i32* %bbi, align 4, !dbg !7245
  %idxprom3.phi.trans.insert = zext i32 %.pre1 to i64, !dbg !7246
  %arrayidx4.phi.trans.insert = getelementptr inbounds i32, i32* %.pre, i64 %idxprom3.phi.trans.insert, !dbg !7246
  %.pre2 = load i32, i32* %arrayidx4.phi.trans.insert, align 4, !dbg !7245
  br label %cond.end, !dbg !7243

cond.end:                                         ; preds = %for.body, %cond.true
  %7 = phi i32 [ %5, %for.body ], [ %.pre2, %cond.true ], !dbg !7245
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call, i32 %7) #7, !dbg !7247
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7220, metadata !DIExpression(DW_OP_deref)), !dbg !7229
  call void @llvm.dbg.value(metadata i32* %bbi, metadata !7228, metadata !DIExpression(DW_OP_deref)), !dbg !7229
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bbi) #7, !dbg !7241
  br label %for.cond, !dbg !7241, !llvm.loop !7248

if.else:                                          ; preds = %entry
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !7250
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7252
  %cfg = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !7252
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7252
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 2, !dbg !7252
  %10 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7252
  %tobool5 = icmp eq %struct.VEC_basic_block_gc* %10, null, !dbg !7252
  br i1 %tobool5, label %cond.end11, label %cond.true6, !dbg !7252

cond.true6:                                       ; preds = %if.else
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %10, i64 0, i32 0, !dbg !7252
  br label %cond.end11, !dbg !7252

cond.end11:                                       ; preds = %if.else, %cond.true6
  %cond12 = phi %struct.VEC_basic_block_base* [ %base, %cond.true6 ], [ null, %if.else ], !dbg !7252
  %11 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7252
  %12 = load i32*, i32** @ebb_head, align 8, !dbg !7252
  %13 = load i32, i32* %12, align 4, !dbg !7252
  %idxprom14 = sext i32 %13 to i64, !dbg !7252
  %arrayidx15 = getelementptr inbounds i32, i32* %11, i64 %idxprom14, !dbg !7252
  %14 = load i32, i32* %arrayidx15, align 4, !dbg !7252
  %call16 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond12, i32 %14) #7, !dbg !7252
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call16, metadata !7208, metadata !DIExpression()), !dbg !7229
  br label %if.end

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !7253

if.end:                                           ; preds = %if.end.loopexit, %cond.end11
  %from.addr.0 = phi %struct.basic_block_def* [ %call16, %cond.end11 ], [ %from, %if.end.loopexit ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %from.addr.0, metadata !7208, metadata !DIExpression()), !dbg !7229
  %cmp17 = icmp sgt i32 %number_of_insns, 0, !dbg !7253
  %15 = load i32, i32* @sched_max_luid, align 4, !dbg !7254
  %sub = add nsw i32 %15, -1, !dbg !7254
  %cond21 = select i1 %cmp17, i32 %number_of_insns, i32 %sub, !dbg !7254
  store i32 %cond21, i32* @cur_seqno, align 4, !dbg !7255
  call fastcc void @init_seqno_1(%struct.basic_block_def* %from.addr.0, %struct.simple_bitmap_def* %call, %struct.bitmap_head_def* %blocks_to_reschedule) #7, !dbg !7256
  %16 = load i32, i32* @cur_seqno, align 4, !dbg !7257
  %cmp22 = icmp eq i32 %16, 0, !dbg !7257
  %cmp23 = icmp eq i32 %number_of_insns, 0, !dbg !7257
  %or.cond = or i1 %cmp22, %cmp23, !dbg !7257
  br i1 %or.cond, label %cond.end26, label %cond.true24, !dbg !7257

cond.true24:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7257
  br label %cond.end26, !dbg !7257

cond.end26:                                       ; preds = %if.end, %cond.true24
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !7258
  %17 = load i8*, i8** %popcount, align 8, !dbg !7258
  call void @free(i8* %17) #6, !dbg !7258
  %18 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !7258
  call void @free(i8* %18) #6, !dbg !7258
  %19 = load i32, i32* @sched_max_luid, align 4, !dbg !7259
  %sub28 = add nsw i32 %19, -1, !dbg !7260
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !7261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7261
  ret i32 %sub28, !dbg !7262
}

declare dso_local void @init_fences(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_sched_region_2(i32 %orig_max_seqno) unnamed_addr #5 !dbg !7263 {
entry:
  %min_seqno = alloca i32, align 4
  %max_seqno = alloca i32, align 4
  %scheduled_insns = alloca %struct._list_node*, align 8
  %scheduled_insns_tailp = alloca %struct._list_node**, align 8
  call void @llvm.dbg.value(metadata i32 %orig_max_seqno, metadata !7265, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.value(metadata i32 %orig_max_seqno, metadata !7266, metadata !DIExpression()), !dbg !7279
  store i32 0, i32* @stat_bookkeeping_copies, align 4, !dbg !7280
  store i32 0, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !7281
  store i32 0, i32* @stat_renamed_scheduled, align 4, !dbg !7282
  store i32 0, i32* @stat_substitutions_total, align 4, !dbg !7283
  store i32 0, i32* @num_insns_scheduled, align 4, !dbg !7284
  %0 = bitcast i32* %min_seqno to i8*, !dbg !7285
  %1 = bitcast i32* %max_seqno to i8*, !dbg !7285
  %2 = bitcast %struct._list_node** %scheduled_insns to i8*, !dbg !7285
  %3 = bitcast %struct._list_node*** %scheduled_insns_tailp to i8*, !dbg !7285
  br label %while.cond, !dbg !7286

while.cond:                                       ; preds = %while.body, %entry
  %highest_seqno_in_use.0 = phi i32 [ %orig_max_seqno, %entry ], [ %call1, %while.body ], !dbg !7279
  call void @llvm.dbg.value(metadata i32 %highest_seqno_in_use.0, metadata !7266, metadata !DIExpression()), !dbg !7279
  %4 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !7287
  %tobool = icmp eq %struct._list_node* %4, null, !dbg !7286
  br i1 %tobool, label %while.end, label %while.body, !dbg !7286

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7288
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !7288
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7289
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !7270, metadata !DIExpression()), !dbg !7285
  store %struct._list_node* null, %struct._list_node** %scheduled_insns, align 8, !dbg !7290
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !7291
  call void @llvm.dbg.value(metadata %struct._list_node** %scheduled_insns, metadata !7271, metadata !DIExpression()), !dbg !7285
  store %struct._list_node** %scheduled_insns, %struct._list_node*** %scheduled_insns_tailp, align 8, !dbg !7292
  call void @llvm.dbg.value(metadata i32* %min_seqno, metadata !7267, metadata !DIExpression(DW_OP_deref)), !dbg !7285
  call void @llvm.dbg.value(metadata i32* %max_seqno, metadata !7269, metadata !DIExpression(DW_OP_deref)), !dbg !7285
  call fastcc void @find_min_max_seqno(%struct._list_node* nonnull %4, i32* nonnull %min_seqno, i32* nonnull %max_seqno) #7, !dbg !7293
  %5 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !7294
  %6 = load i32, i32* %max_seqno, align 4, !dbg !7295
  call void @llvm.dbg.value(metadata i32 %6, metadata !7269, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.value(metadata %struct._list_node*** %scheduled_insns_tailp, metadata !7271, metadata !DIExpression(DW_OP_deref)), !dbg !7285
  call fastcc void @schedule_on_fences(%struct._list_node* %5, i32 %6, %struct._list_node*** nonnull %scheduled_insns_tailp) #7, !dbg !7296
  %7 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !7297
  %call = call fastcc %struct._list_node* @calculate_new_fences(%struct._list_node* %7, i32 %orig_max_seqno) #7, !dbg !7298
  store %struct._list_node* %call, %struct._list_node** @fences, align 8, !dbg !7299
  %8 = load i32, i32* %min_seqno, align 4, !dbg !7300
  call void @llvm.dbg.value(metadata i32 %8, metadata !7267, metadata !DIExpression()), !dbg !7285
  %9 = load i32, i32* %max_seqno, align 4, !dbg !7301
  call void @llvm.dbg.value(metadata i32 %9, metadata !7269, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.value(metadata %struct._list_node** %scheduled_insns, metadata !7270, metadata !DIExpression(DW_OP_deref)), !dbg !7285
  %call1 = call fastcc i32 @update_seqnos_and_stage(i32 %8, i32 %9, i32 %highest_seqno_in_use.0, %struct._list_node** nonnull %scheduled_insns) #7, !dbg !7302
  call void @llvm.dbg.value(metadata i32 %call1, metadata !7266, metadata !DIExpression()), !dbg !7279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !7303
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7303
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !7303
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7303
  br label %while.cond, !dbg !7286, !llvm.loop !7304

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* @sched_verbose, align 4, !dbg !7305
  %cmp = icmp sgt i32 %10, 0, !dbg !7306
  br i1 %cmp, label %do.body, label %if.end13, !dbg !7307

do.body:                                          ; preds = %while.end
  %11 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !7308
  %tobool2 = icmp eq i8 %11, 0, !dbg !7308
  br i1 %tobool2, label %if.else, label %do.body4, !dbg !7309

do.body4:                                         ; preds = %do.body
  %12 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !7310
  %13 = load i32, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !7310
  %14 = load i32, i32* @stat_renamed_scheduled, align 4, !dbg !7310
  %15 = load i32, i32* @stat_substitutions_total, align 4, !dbg !7310
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.39, i64 0, i64 0), i32 %12, i32 %13, i32 %14, i32 %15) #6, !dbg !7310
  %mul = shl nsw i32 %call5, 1, !dbg !7310
  %add = or i32 %mul, 1, !dbg !7310
  call void @llvm.dbg.value(metadata i32 %add, metadata !7273, metadata !DIExpression()), !dbg !7311
  %conv = sext i32 %add to i64, !dbg !7310
  %16 = alloca i8, i64 %conv, align 16, !dbg !7310
  call void @llvm.dbg.value(metadata i8* %16, metadata !7278, metadata !DIExpression()), !dbg !7311
  %17 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !7310
  %18 = load i32, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !7310
  %19 = load i32, i32* @stat_renamed_scheduled, align 4, !dbg !7310
  %20 = load i32, i32* @stat_substitutions_total, align 4, !dbg !7310
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %16, i64 %conv, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.39, i64 0, i64 0), i32 %17, i32 %18, i32 %19, i32 %20) #6, !dbg !7310
  call void @sel_prepare_string_for_dot_label(i8* nonnull %16) #6, !dbg !7310
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !7310
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %16) #6, !dbg !7310
  br label %if.end13, !dbg !7310

if.else:                                          ; preds = %do.body
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !7308
  %23 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !7308
  %24 = load i32, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !7308
  %25 = load i32, i32* @stat_renamed_scheduled, align 4, !dbg !7308
  %26 = load i32, i32* @stat_substitutions_total, align 4, !dbg !7308
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.39, i64 0, i64 0), i32 %23, i32 %24, i32 %25, i32 %26) #6, !dbg !7308
  br label %if.end13

if.end13:                                         ; preds = %do.body4, %if.else, %while.end
  ret void, !dbg !7312
}

declare dso_local void @clear_outdated_rtx_info(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @flist_tail_init(%struct.flist_tail_def*) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !7313 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7322, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !7323, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i32 0, metadata !7324, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !7325, metadata !DIExpression()), !dbg !7326
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !7327
  %1 = load i64, i64* %0, align 8, !dbg !7327
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !7328
  store i64 %1, i64* %2, align 8, !dbg !7328
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !7329
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !7330
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !7331
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !7334
  br label %while.body, !dbg !7334

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !7335
  br i1 %tobool, label %if.then, label %if.end, !dbg !7336

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !7337
  br label %while.end, !dbg !7339

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !7340

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !7334, !llvm.loop !7341

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !7343

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !7343
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !7345
  %7 = load i32, i32* %indx9, align 8, !dbg !7345
  %cmp11 = icmp eq i32 %7, 0, !dbg !7346
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !7347

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !7348
  %8 = load i32, i32* %indx14, align 8, !dbg !7348
  %mul = shl i32 %8, 7, !dbg !7349
  call void @llvm.dbg.value(metadata i32 %mul, metadata !7324, metadata !DIExpression()), !dbg !7326
  br label %if.end15, !dbg !7350

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !7324, metadata !DIExpression()), !dbg !7326
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !7351
  store i32 0, i32* %word_no, align 8, !dbg !7352
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !7353
  %9 = load i64, i64* %arrayidx, align 8, !dbg !7353
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !7354
  store i64 %9, i64* %bits21, align 8, !dbg !7355
  %tobool23 = icmp eq i64 %9, 0, !dbg !7356
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !7356
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !7357
  call void @llvm.dbg.value(metadata i32 %add, metadata !7324, metadata !DIExpression()), !dbg !7326
  store i32 %add, i32* %bit_no, align 4, !dbg !7358
  ret void, !dbg !7359
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !7360 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7364, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !7365, metadata !DIExpression()), !dbg !7369
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !7370
  %0 = load i64, i64* %bits, align 8, !dbg !7370
  %tobool = icmp eq i64 %0, 0, !dbg !7371
  br i1 %tobool, label %if.end, label %next_bit, !dbg !7372

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !7373
  br label %next_bit, !dbg !7376

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !7366), !dbg !7377
  br label %while.cond, !dbg !7376

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !7378
  %and = and i64 %2, 1, !dbg !7379
  %tobool2 = icmp eq i64 %and, 0, !dbg !7380
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !7376

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !7381
  store i64 %shr, i64* %bits, align 8, !dbg !7381
  %3 = load i32, i32* %bit_no, align 4, !dbg !7383
  %add = add i32 %3, 1, !dbg !7383
  store i32 %add, i32* %bit_no, align 4, !dbg !7383
  %.pre = load i64, i64* %bits, align 8, !dbg !7378
  br label %while.cond, !dbg !7376, !llvm.loop !7384

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !7386
  %sub = add i32 %4, 63, !dbg !7387
  %div = and i32 %sub, -64, !dbg !7388
  store i32 %div, i32* %bit_no, align 4, !dbg !7389
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !7390
  %5 = load i32, i32* %word_no, align 8, !dbg !7391
  %inc = add i32 %5, 1, !dbg !7391
  store i32 %inc, i32* %word_no, align 8, !dbg !7391
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !7392
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !7392
  br label %while.body6, !dbg !7393

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !7394

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !7395
  %cmp = icmp eq i32 %8, 2, !dbg !7396
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !7392
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !7394

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !7373
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !7373
  %10 = load i64, i64* %arrayidx, align 8, !dbg !7373
  store i64 %10, i64* %bits, align 8, !dbg !7397
  %tobool14 = icmp eq i64 %10, 0, !dbg !7398
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !7400

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !7401
  %add17 = add i32 %11, 64, !dbg !7401
  store i32 %add17, i32* %bit_no, align 4, !dbg !7401
  %12 = load i32, i32* %word_no, align 8, !dbg !7402
  %inc19 = add i32 %12, 1, !dbg !7402
  store i32 %inc19, i32* %word_no, align 8, !dbg !7402
  br label %while.cond7, !dbg !7394, !llvm.loop !7403

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !7392
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !7405
  %14 = load i64, i64* %13, align 8, !dbg !7405
  store i64 %14, i64* %6, align 8, !dbg !7406
  %tobool24 = icmp eq i64 %14, 0, !dbg !7407
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !7409

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !7409
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !7410
  %16 = load i32, i32* %indx, align 8, !dbg !7410
  %mul28 = shl i32 %16, 7, !dbg !7411
  store i32 %mul28, i32* %bit_no, align 4, !dbg !7412
  store i32 0, i32* %word_no, align 8, !dbg !7413
  br label %while.body6, !dbg !7393, !llvm.loop !7414

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !7416

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !7416

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !7369
  ret i8 %retval.0, !dbg !7416
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !7417 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !7421, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !7422, metadata !DIExpression()), !dbg !7426
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !7427
  %0 = load i8*, i8** %popcount, align 8, !dbg !7427
  %tobool = icmp eq i8* %0, null, !dbg !7428
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !7429

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !7430
  %.pre2 = zext i32 %.pre to i64, !dbg !7431
  %.pre3 = shl i64 1, %.pre2, !dbg !7431
  %.pre4 = lshr i32 %bitno, 6, !dbg !7432
  %.pre5 = zext i32 %.pre4 to i64, !dbg !7433
  br label %if.end7, !dbg !7429

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !7434
  %idxprom = zext i32 %div to i64, !dbg !7434
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !7434
  %1 = load i64, i64* %arrayidx, align 8, !dbg !7434
  %rem = and i32 %bitno, 63, !dbg !7434
  %sh_prom = zext i32 %rem to i64, !dbg !7434
  %2 = shl i64 1, %sh_prom, !dbg !7435
  %3 = and i64 %1, %2, !dbg !7435
  %tobool1 = icmp eq i64 %3, 0, !dbg !7435
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !7437

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !7438
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !7439
  %dec = add i8 %4, -1, !dbg !7439
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !7439
  br label %if.end7, !dbg !7438

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !7433
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !7431
  %neg = xor i64 %shl.pre-phi, -1, !dbg !7440
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !7433
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !7441
  %and14 = and i64 %5, %neg, !dbg !7441
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !7441
  ret void, !dbg !7442
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !7443 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7447, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !7448, metadata !DIExpression()), !dbg !7449
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !7450
  %0 = load i64, i64* %bits, align 8, !dbg !7451
  %shr = lshr i64 %0, 1, !dbg !7451
  store i64 %shr, i64* %bits, align 8, !dbg !7451
  %1 = load i32, i32* %bit_no, align 4, !dbg !7452
  %add = add i32 %1, 1, !dbg !7452
  store i32 %add, i32* %bit_no, align 4, !dbg !7452
  ret void, !dbg !7453
}

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_seqno_1(%struct.basic_block_def* %bb, %struct.simple_bitmap_def* %visited_bbs, %struct.bitmap_head_def* %blocks_to_reschedule) unnamed_addr #5 !dbg !7454 {
entry:
  %succ_insn = alloca %struct.rtx_def*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7458, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %visited_bbs, metadata !7459, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %blocks_to_reschedule, metadata !7460, metadata !DIExpression()), !dbg !7471
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !7472
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7472
  %1 = load i32, i32* %index, align 8, !dbg !7472
  %idxprom = sext i32 %1 to i64, !dbg !7472
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !7472
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7472
  call void @llvm.dbg.value(metadata i32 %2, metadata !7461, metadata !DIExpression()), !dbg !7471
  %call = tail call %struct.rtx_def* @bb_note(%struct.basic_block_def* %bb) #6, !dbg !7473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7463, metadata !DIExpression()), !dbg !7471
  %3 = bitcast %struct.rtx_def** %succ_insn to i8*, !dbg !7474
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !7474
  %4 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !7475
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #8, !dbg !7475
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %visited_bbs, i32 %2) #7, !dbg !7476
  %tobool = icmp eq %struct.bitmap_head_def* %blocks_to_reschedule, null, !dbg !7477
  br i1 %tobool, label %if.end, label %if.then, !dbg !7479

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %index, align 8, !dbg !7480
  %call2 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* nonnull %blocks_to_reschedule, i32 %5) #6, !dbg !7481
  br label %if.end, !dbg !7481

if.end:                                           ; preds = %entry, %if.then
  %6 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !7482
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #8, !dbg !7482
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !7482
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7482
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7482
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 1, !dbg !7482
  %8 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7482
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ_insn, metadata !7464, metadata !DIExpression(DW_OP_deref)), !dbg !7471
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ_insn, %struct.rtx_def* %8, i32 9) #7, !dbg !7482
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %6, i64 64, i1 false), !dbg !7482
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #8, !dbg !7482
  br label %for.cond, !dbg !7482

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7483
  %end_5 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !7483
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_5, align 8, !dbg !7483
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ_insn, metadata !7464, metadata !DIExpression(DW_OP_deref)), !dbg !7471
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !7465, metadata !DIExpression(DW_OP_deref)), !dbg !7471
  %call6 = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ_insn, %struct.rtx_def* %10, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #7, !dbg !7483
  %tobool7 = icmp eq i8 %call6, 0, !dbg !7482
  br i1 %tobool7, label %for.end, label %for.body, !dbg !7482

for.body:                                         ; preds = %for.cond
  %11 = load %struct.rtx_def*, %struct.rtx_def** %succ_insn, align 8, !dbg !7484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !7464, metadata !DIExpression()), !dbg !7471
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 1, !dbg !7484
  %rt_bb = bitcast %struct.object_block** %arrayidx8 to %struct.basic_block_def**, !dbg !7484
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7484
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !7466, metadata !DIExpression()), !dbg !7485
  %13 = load i32*, i32** @block_to_bb, align 8, !dbg !7486
  %index9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 9, !dbg !7486
  %14 = load i32, i32* %index9, align 8, !dbg !7486
  %idxprom10 = sext i32 %14 to i64, !dbg !7486
  %arrayidx11 = getelementptr inbounds i32, i32* %13, i64 %idxprom10, !dbg !7486
  %15 = load i32, i32* %arrayidx11, align 4, !dbg !7486
  call void @llvm.dbg.value(metadata i32 %15, metadata !7470, metadata !DIExpression()), !dbg !7485
  %call12 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %12) #6, !dbg !7487
  %tobool13 = icmp eq i8 %call12, 0, !dbg !7487
  br i1 %tobool13, label %cond.true, label %cond.end, !dbg !7487

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6700, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7487
  br label %cond.end, !dbg !7487

cond.end:                                         ; preds = %for.body, %cond.true
  %div = lshr i32 %15, 6, !dbg !7488
  %idxprom14 = zext i32 %div to i64, !dbg !7488
  %arrayidx15 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %visited_bbs, i64 0, i32 3, i64 %idxprom14, !dbg !7488
  %16 = load i64, i64* %arrayidx15, align 8, !dbg !7488
  %rem = and i32 %15, 63, !dbg !7488
  %sh_prom = zext i32 %rem to i64, !dbg !7488
  %17 = shl i64 1, %sh_prom, !dbg !7488
  %18 = and i64 %16, %17, !dbg !7488
  %tobool16 = icmp eq i64 %18, 0, !dbg !7488
  br i1 %tobool16, label %if.then17, label %for.inc, !dbg !7490

if.then17:                                        ; preds = %cond.end
  %cmp = icmp sgt i32 %15, %2, !dbg !7491
  br i1 %cmp, label %cond.end20, label %cond.true18, !dbg !7491

cond.true18:                                      ; preds = %if.then17
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6704, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7491
  br label %cond.end20, !dbg !7491

cond.end20:                                       ; preds = %if.then17, %cond.true18
  call fastcc void @init_seqno_1(%struct.basic_block_def* %12, %struct.simple_bitmap_def* %visited_bbs, %struct.bitmap_head_def* %blocks_to_reschedule) #7, !dbg !7493
  br label %for.inc, !dbg !7494

for.inc:                                          ; preds = %cond.end, %cond.end20
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !7465, metadata !DIExpression(DW_OP_deref)), !dbg !7471
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #7, !dbg !7483
  br label %for.cond, !dbg !7483, !llvm.loop !7495

for.end:                                          ; preds = %for.cond
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7497
  %end_25 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i64 0, i32 1, !dbg !7497
  br label %for.cond26, !dbg !7499

for.cond26:                                       ; preds = %for.body28, %for.end
  %insn.0.in = phi %struct.rtx_def** [ %end_25, %for.end ], [ %rt_rtx, %for.body28 ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !7500
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7462, metadata !DIExpression()), !dbg !7471
  %cmp27 = icmp eq %struct.rtx_def* %insn.0, %call, !dbg !7501
  br i1 %cmp27, label %for.end49, label %for.body28, !dbg !7503

for.body28:                                       ; preds = %for.cond26
  %20 = load i32, i32* @cur_seqno, align 4, !dbg !7504
  %dec = add nsw i32 %20, -1, !dbg !7504
  store i32 %dec, i32* @cur_seqno, align 4, !dbg !7504
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7505
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i64 0, i32 0, !dbg !7505
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7505
  %base36 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %22, i64 0, i32 0, !dbg !7505
  %arrayidx42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7505
  %rt_int = bitcast %union.rtunion_def* %arrayidx42 to i32*, !dbg !7505
  %23 = load i32, i32* %rt_int, align 8, !dbg !7505
  %call43 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base36, i32 %23) #7, !dbg !7505
  %call44 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call43) #7, !dbg !7505
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call44, i64 0, i32 2, !dbg !7505
  store i32 %20, i32* %seqno, align 4, !dbg !7506
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7507
  %rt_rtx = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !7507
  br label %for.cond26, !dbg !7508, !llvm.loop !7509

for.end49:                                        ; preds = %for.cond26
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #8, !dbg !7511
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !7511
  ret void, !dbg !7511
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !7512 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !7514, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !7515, metadata !DIExpression()), !dbg !7519
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !7520
  %0 = load i8*, i8** %popcount, align 8, !dbg !7520
  %tobool = icmp eq i8* %0, null, !dbg !7521
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !7522

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !7523
  %.pre2 = zext i32 %.pre to i64, !dbg !7524
  %.pre3 = shl i64 1, %.pre2, !dbg !7524
  %.pre4 = lshr i32 %bitno, 6, !dbg !7525
  %.pre5 = zext i32 %.pre4 to i64, !dbg !7526
  br label %if.end7, !dbg !7522

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !7527
  %idxprom = zext i32 %div to i64, !dbg !7527
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !7527
  %1 = load i64, i64* %arrayidx, align 8, !dbg !7527
  %rem = and i32 %bitno, 63, !dbg !7527
  %sh_prom = zext i32 %rem to i64, !dbg !7527
  %2 = shl i64 1, %sh_prom, !dbg !7528
  %3 = and i64 %1, %2, !dbg !7528
  %tobool1 = icmp eq i64 %3, 0, !dbg !7528
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !7530

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !7531
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !7532
  %inc = add i8 %4, 1, !dbg !7532
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !7532
  br label %if.end7, !dbg !7531

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !7526
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !7524
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !7526
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !7533
  %or = or i64 %5, %shl.pre-phi, !dbg !7533
  store i64 %or, i64* %arrayidx13, align 8, !dbg !7533
  ret void, !dbg !7534
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_min_max_seqno(%struct._list_node* %fences, i32* %min_seqno, i32* %max_seqno) unnamed_addr #5 !dbg !7535 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %fences, metadata !7539, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i32* %min_seqno, metadata !7540, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i32* %max_seqno, metadata !7541, metadata !DIExpression()), !dbg !7544
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7545
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !7545
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7545
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !7545
  %insn = getelementptr inbounds %struct._list_node, %struct._list_node* %fences, i64 0, i32 1, i32 0, i32 0, !dbg !7545
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7545
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7545
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7545
  %3 = load i32, i32* %rt_int, align 8, !dbg !7545
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %3) #7, !dbg !7545
  %call8 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !7545
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call8, i64 0, i32 2, !dbg !7545
  %4 = load i32, i32* %seqno, align 4, !dbg !7545
  store i32 %4, i32* %max_seqno, align 4, !dbg !7546
  store i32 %4, i32* %min_seqno, align 4, !dbg !7547
  br label %while.cond, !dbg !7548

while.cond:                                       ; preds = %if.end35, %entry
  %fences.addr.0 = phi %struct._list_node* [ %fences, %entry ], [ %5, %if.end35 ]
  call void @llvm.dbg.value(metadata %struct._list_node* %fences.addr.0, metadata !7539, metadata !DIExpression()), !dbg !7544
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %fences.addr.0, i64 0, i32 0, !dbg !7549
  %5 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !7549
  call void @llvm.dbg.value(metadata %struct._list_node* %5, metadata !7539, metadata !DIExpression()), !dbg !7544
  %tobool9 = icmp eq %struct._list_node* %5, null, !dbg !7548
  br i1 %tobool9, label %while.end, label %while.body, !dbg !7548

while.body:                                       ; preds = %while.cond
  %6 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7550
  %base13 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %6, i64 0, i32 0, !dbg !7550
  %7 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7550
  %base19 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %7, i64 0, i32 0, !dbg !7550
  %insn25 = getelementptr inbounds %struct._list_node, %struct._list_node* %5, i64 0, i32 1, i32 0, i32 0, !dbg !7550
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn25, align 8, !dbg !7550
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7550
  %rt_int29 = bitcast %union.rtunion_def* %arrayidx28 to i32*, !dbg !7550
  %9 = load i32, i32* %rt_int29, align 8, !dbg !7550
  %call30 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base19, i32 %9) #7, !dbg !7550
  %call31 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base13, i32 %call30) #7, !dbg !7550
  %seqno32 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call31, i64 0, i32 2, !dbg !7550
  %10 = load i32, i32* %seqno32, align 4, !dbg !7550
  call void @llvm.dbg.value(metadata i32 %10, metadata !7542, metadata !DIExpression()), !dbg !7551
  %11 = load i32, i32* %min_seqno, align 4, !dbg !7552
  %cmp = icmp sgt i32 %11, %10, !dbg !7554
  br i1 %cmp, label %if.then, label %if.else, !dbg !7555

if.then:                                          ; preds = %while.body
  store i32 %10, i32* %min_seqno, align 4, !dbg !7556
  br label %if.end35, !dbg !7557

if.else:                                          ; preds = %while.body
  %12 = load i32, i32* %max_seqno, align 4, !dbg !7558
  %cmp33 = icmp slt i32 %12, %10, !dbg !7560
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !7561

if.then34:                                        ; preds = %if.else
  store i32 %10, i32* %max_seqno, align 4, !dbg !7562
  br label %if.end35, !dbg !7563

if.end35:                                         ; preds = %if.else, %if.then34, %if.then
  br label %while.cond, !dbg !7548, !llvm.loop !7564

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7566
}

; Function Attrs: nounwind uwtable
define internal fastcc void @schedule_on_fences(%struct._list_node* %fences, i32 %max_seqno, %struct._list_node*** %scheduled_insns_tailpp) unnamed_addr #5 !dbg !7567 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %fences, metadata !7572, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata i32 %max_seqno, metadata !7573, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata %struct._list_node*** %scheduled_insns_tailpp, metadata !7574, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata %struct._list_node* %fences, metadata !7575, metadata !DIExpression()), !dbg !7602
  %0 = load i32, i32* @sched_verbose, align 4, !dbg !7603
  %cmp = icmp sgt i32 %0, 0, !dbg !7604
  br i1 %cmp, label %do.body, label %if.end31, !dbg !7605

do.body:                                          ; preds = %entry
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !7606
  %tobool = icmp eq i8 %1, 0, !dbg !7606
  br i1 %tobool, label %if.else, label %do.body2, !dbg !7607

do.body2:                                         ; preds = %do.body
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !7608
  %mul = shl nsw i32 %call, 1, !dbg !7608
  %add = or i32 %mul, 1, !dbg !7608
  call void @llvm.dbg.value(metadata i32 %add, metadata !7576, metadata !DIExpression()), !dbg !7609
  %conv = sext i32 %add to i64, !dbg !7608
  %2 = alloca i8, i64 %conv, align 16, !dbg !7608
  call void @llvm.dbg.value(metadata i8* %2, metadata !7582, metadata !DIExpression()), !dbg !7609
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %2, i64 %conv, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !7608
  call void @sel_prepare_string_for_dot_label(i8* nonnull %2) #6, !dbg !7608
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !7608
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %2) #6, !dbg !7608
  br label %do.end9, !dbg !7608

if.else:                                          ; preds = %do.body
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !7606
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !7606
  br label %do.end9

do.end9:                                          ; preds = %if.else, %do.body2
  call void @dump_flist(%struct._list_node* %fences) #6, !dbg !7610
  %5 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !7611
  %tobool11 = icmp eq i8 %5, 0, !dbg !7611
  br i1 %tobool11, label %if.else26, label %do.body13, !dbg !7612

do.body13:                                        ; preds = %do.end9
  %call15 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !7613
  %mul16 = shl nsw i32 %call15, 1, !dbg !7613
  %add17 = or i32 %mul16, 1, !dbg !7613
  call void @llvm.dbg.value(metadata i32 %add17, metadata !7583, metadata !DIExpression()), !dbg !7614
  %conv19 = sext i32 %add17 to i64, !dbg !7613
  %6 = alloca i8, i64 %conv19, align 16, !dbg !7613
  call void @llvm.dbg.value(metadata i8* %6, metadata !7587, metadata !DIExpression()), !dbg !7614
  %call22 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 %conv19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !7613
  call void @sel_prepare_string_for_dot_label(i8* nonnull %6) #6, !dbg !7613
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !7613
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %6) #6, !dbg !7613
  br label %if.end31, !dbg !7613

if.else26:                                        ; preds = %do.end9
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !7611
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !7611
  br label %if.end31

if.end31:                                         ; preds = %do.body13, %if.else26, %entry
  store i1 false, i1* @scheduled_something_on_previous_fence, align 1, !dbg !7615
  %9 = xor i32 %max_seqno, -1, !dbg !7616
  br label %for.cond, !dbg !7617

for.cond:                                         ; preds = %cond.end61, %if.end31
  %fences.addr.0 = phi %struct._list_node* [ %fences, %if.end31 ], [ %16, %cond.end61 ]
  call void @llvm.dbg.value(metadata %struct._list_node* %fences.addr.0, metadata !7572, metadata !DIExpression()), !dbg !7602
  %tobool32 = icmp eq %struct._list_node* %fences.addr.0, null, !dbg !7618
  br i1 %tobool32, label %for.end69, label %for.cond33.preheader, !dbg !7618

for.cond33.preheader:                             ; preds = %for.cond
  br label %for.cond33, !dbg !7619

for.cond33:                                       ; preds = %for.cond33.preheader, %for.inc
  %fence.0 = phi %struct._fence* [ %fence.2, %for.inc ], [ null, %for.cond33.preheader ], !dbg !7620
  %seqno.0 = phi i32 [ %seqno.2, %for.inc ], [ 0, %for.cond33.preheader ], !dbg !7621
  %fences2.0 = phi %struct._list_node* [ %15, %for.inc ], [ %fences, %for.cond33.preheader ], !dbg !7622
  %first_p.0 = phi i8 [ %first_p.2, %for.inc ], [ 1, %for.cond33.preheader ], !dbg !7623
  call void @llvm.dbg.value(metadata i8 %first_p.0, metadata !7594, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata %struct._list_node* %fences2.0, metadata !7593, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i32 %seqno.0, metadata !7592, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata %struct._fence* %fence.0, metadata !7588, metadata !DIExpression()), !dbg !7616
  %tobool34 = icmp eq %struct._list_node* %fences2.0, null, !dbg !7619
  br i1 %tobool34, label %for.end, label %for.body35, !dbg !7619

for.body35:                                       ; preds = %for.cond33
  %fence36 = getelementptr inbounds %struct._list_node, %struct._list_node* %fences2.0, i64 0, i32 1, i32 0, !dbg !7624
  call void @llvm.dbg.value(metadata %struct._fence* %fence36, metadata !7595, metadata !DIExpression()), !dbg !7625
  %processed_p = getelementptr inbounds %struct._list_node, %struct._list_node* %fences2.0, i64 0, i32 1, i32 0, i32 13, !dbg !7626
  %bf.load = load i8, i8* %processed_p, align 8, !dbg !7626
  %bf.clear = and i8 %bf.load, 1, !dbg !7626
  %tobool37 = icmp eq i8 %bf.clear, 0, !dbg !7626
  br i1 %tobool37, label %if.then38, label %for.inc, !dbg !7627

if.then38:                                        ; preds = %for.body35
  %10 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7628
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %10, i64 0, i32 0, !dbg !7628
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7628
  %base42 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %11, i64 0, i32 0, !dbg !7628
  %insn = getelementptr inbounds %struct._fence, %struct._fence* %fence36, i64 0, i32 0, !dbg !7628
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7628
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7628
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7628
  %13 = load i32, i32* %rt_int, align 8, !dbg !7628
  %call47 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base42, i32 %13) #7, !dbg !7628
  %call48 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call47) #7, !dbg !7628
  %seqno49 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call48, i64 0, i32 2, !dbg !7628
  %14 = load i32, i32* %seqno49, align 4, !dbg !7628
  call void @llvm.dbg.value(metadata i32 %14, metadata !7599, metadata !DIExpression()), !dbg !7629
  %tobool51 = icmp ne i8 %first_p.0, 0, !dbg !7630
  %cmp52 = icmp sgt i32 %14, %seqno.0, !dbg !7632
  %or.cond = or i1 %tobool51, %cmp52, !dbg !7633
  %fence.1 = select i1 %or.cond, %struct._fence* %fence36, %struct._fence* %fence.0, !dbg !7633
  %seqno.1 = select i1 %or.cond, i32 %14, i32 %seqno.0, !dbg !7633
  %first_p.1 = select i1 %or.cond, i8 0, i8 %first_p.0, !dbg !7633
  br label %for.inc, !dbg !7633

for.inc:                                          ; preds = %for.body35, %if.then38
  %fence.2 = phi %struct._fence* [ %fence.0, %for.body35 ], [ %fence.1, %if.then38 ], !dbg !7616
  %seqno.2 = phi i32 [ %seqno.0, %for.body35 ], [ %seqno.1, %if.then38 ], !dbg !7616
  %first_p.2 = phi i8 [ %first_p.0, %for.body35 ], [ %first_p.1, %if.then38 ], !dbg !7616
  call void @llvm.dbg.value(metadata i8 %first_p.2, metadata !7594, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i32 %seqno.2, metadata !7592, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata %struct._fence* %fence.2, metadata !7588, metadata !DIExpression()), !dbg !7616
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %fences2.0, i64 0, i32 0, !dbg !7634
  %15 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !7634
  call void @llvm.dbg.value(metadata %struct._list_node* %15, metadata !7593, metadata !DIExpression()), !dbg !7616
  br label %for.cond33, !dbg !7635, !llvm.loop !7636

for.end:                                          ; preds = %for.cond33
  %fence.0.lcssa = phi %struct._fence* [ %fence.0, %for.cond33 ], !dbg !7620
  %seqno.0.lcssa = phi i32 [ %seqno.0, %for.cond33 ], !dbg !7621
  call void @llvm.dbg.value(metadata %struct._fence* %fence.0.lcssa, metadata !7588, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i32 %seqno.0.lcssa, metadata !7592, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata %struct._fence* %fence.0.lcssa, metadata !7588, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i32 %seqno.0.lcssa, metadata !7592, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata %struct._fence* %fence.0.lcssa, metadata !7588, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i32 %seqno.0.lcssa, metadata !7592, metadata !DIExpression()), !dbg !7616
  %tobool58 = icmp eq %struct._fence* %fence.0.lcssa, null, !dbg !7638
  br i1 %tobool58, label %cond.true59, label %cond.end61, !dbg !7638

cond.true59:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7273, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7638
  br label %cond.end61, !dbg !7638

cond.end61:                                       ; preds = %for.end, %cond.true59
  %sub = add i32 %seqno.0.lcssa, %9, !dbg !7639
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7592, metadata !DIExpression()), !dbg !7616
  call fastcc void @fill_insns(%struct._fence* %fence.0.lcssa, i32 %sub, %struct._list_node*** %scheduled_insns_tailpp) #7, !dbg !7640
  %processed_p64 = getelementptr inbounds %struct._fence, %struct._fence* %fence.0.lcssa, i64 0, i32 13, !dbg !7641
  %bf.load65 = load i8, i8* %processed_p64, align 8, !dbg !7642
  %bf.set = or i8 %bf.load65, 1, !dbg !7642
  store i8 %bf.set, i8* %processed_p64, align 8, !dbg !7642
  %next68 = getelementptr inbounds %struct._list_node, %struct._list_node* %fences.addr.0, i64 0, i32 0, !dbg !7643
  %16 = load %struct._list_node*, %struct._list_node** %next68, align 8, !dbg !7643
  call void @llvm.dbg.value(metadata %struct._list_node* %16, metadata !7572, metadata !DIExpression()), !dbg !7602
  br label %for.cond, !dbg !7644, !llvm.loop !7645

for.end69:                                        ; preds = %for.cond
  call fastcc void @vinsn_vec_clear(%struct.VEC_vinsn_t_heap** nonnull @vec_bookkeeping_blocked_vinsns) #7, !dbg !7647
  call fastcc void @vinsn_vec_clear(%struct.VEC_vinsn_t_heap** nonnull @vec_target_unavailable_vinsns) #7, !dbg !7648
  ret void, !dbg !7649
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._list_node* @calculate_new_fences(%struct._list_node* %fences, i32 %orig_max_seqno) unnamed_addr #5 !dbg !7650 {
entry:
  %old_fences = alloca %struct._list_node*, align 8
  %_new_fences = alloca %struct.flist_tail_def, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %fences, metadata !7654, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %orig_max_seqno, metadata !7655, metadata !DIExpression()), !dbg !7675
  %0 = bitcast %struct._list_node** %old_fences to i8*, !dbg !7676
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7676
  call void @llvm.dbg.value(metadata %struct._list_node* %fences, metadata !7656, metadata !DIExpression()), !dbg !7675
  store %struct._list_node* %fences, %struct._list_node** %old_fences, align 8, !dbg !7677
  %1 = bitcast %struct.flist_tail_def* %_new_fences to i8*, !dbg !7678
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7678
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %_new_fences, metadata !7658, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %_new_fences, metadata !7657, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call void @flist_tail_init(%struct.flist_tail_def* nonnull %_new_fences) #6, !dbg !7679
  br label %for.cond, !dbg !7680

for.cond:                                         ; preds = %for.inc, %entry
  %fences.addr.0 = phi %struct._list_node* [ %fences, %entry ], [ %22, %for.inc ]
  call void @llvm.dbg.value(metadata %struct._list_node* %fences.addr.0, metadata !7654, metadata !DIExpression()), !dbg !7675
  %tobool = icmp eq %struct._list_node* %fences.addr.0, null, !dbg !7681
  br i1 %tobool, label %for.end, label %for.body, !dbg !7681

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct._list_node* %fences.addr.0, metadata !7659, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !7682
  %bnds = getelementptr inbounds %struct._list_node, %struct._list_node* %fences.addr.0, i64 0, i32 1, i32 0, i32 4, !dbg !7683
  %2 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !7683
  %tobool2 = icmp eq %struct._list_node* %2, null, !dbg !7683
  br i1 %tobool2, label %if.then, label %if.else64, !dbg !7684

if.then:                                          ; preds = %for.body
  %scheduled_p = getelementptr inbounds %struct._list_node, %struct._list_node* %fences.addr.0, i64 0, i32 1, i32 0, i32 13, !dbg !7685
  %bf.load = load i8, i8* %scheduled_p, align 8, !dbg !7685
  %bf.clear = and i8 %bf.load, 2, !dbg !7685
  %tobool3 = icmp eq i8 %bf.clear, 0, !dbg !7685
  br i1 %tobool3, label %if.then4, label %for.inc, !dbg !7686

if.then4:                                         ; preds = %if.then
  %insn5 = getelementptr inbounds %struct._list_node, %struct._list_node* %fences.addr.0, i64 0, i32 1, i32 0, i32 0, !dbg !7687
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn5, align 8, !dbg !7687
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7663, metadata !DIExpression()), !dbg !7682
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7688
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i64 0, i32 0, !dbg !7688
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7688
  %base9 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !7688
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7688
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7688
  %6 = load i32, i32* %rt_int, align 8, !dbg !7688
  %call = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base9, i32 %6) #7, !dbg !7688
  %call14 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !7688
  %seqno15 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call14, i64 0, i32 2, !dbg !7688
  %7 = load i32, i32* %seqno15, align 4, !dbg !7688
  call void @llvm.dbg.value(metadata i32 %7, metadata !7664, metadata !DIExpression()), !dbg !7689
  %cmp = icmp sgt i32 %7, 0, !dbg !7690
  %cmp16 = icmp sle i32 %7, %orig_max_seqno, !dbg !7690
  %or.cond = and i1 %cmp, %cmp16, !dbg !7690
  br i1 %or.cond, label %cond.end19, label %cond.true17, !dbg !7690

cond.true17:                                      ; preds = %if.then4
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7329, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7690
  br label %cond.end19, !dbg !7690

cond.end19:                                       ; preds = %if.then4, %cond.true17
  %8 = load i32, i32* @sched_verbose, align 4, !dbg !7691
  %cmp21 = icmp sgt i32 %8, 0, !dbg !7692
  br i1 %cmp21, label %do.body, label %if.end62, !dbg !7693

do.body:                                          ; preds = %cond.end19
  %9 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !7694
  %tobool23 = icmp eq i8 %9, 0, !dbg !7694
  br i1 %tobool23, label %if.else, label %do.body25, !dbg !7695

do.body25:                                        ; preds = %do.body
  %10 = load i32, i32* %rt_int, align 8, !dbg !7696
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 1, !dbg !7696
  %rt_bb = bitcast %struct.object_block** %arrayidx32 to %struct.basic_block_def**, !dbg !7696
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7696
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 9, !dbg !7696
  %12 = load i32, i32* %index, align 8, !dbg !7696
  %call33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i32 %10, i32 %12) #6, !dbg !7696
  %mul = shl nsw i32 %call33, 1, !dbg !7696
  %add34 = or i32 %mul, 1, !dbg !7696
  call void @llvm.dbg.value(metadata i32 %add34, metadata !7669, metadata !DIExpression()), !dbg !7697
  %conv = sext i32 %add34 to i64, !dbg !7696
  %13 = alloca i8, i64 %conv, align 16, !dbg !7696
  call void @llvm.dbg.value(metadata i8* %13, metadata !7674, metadata !DIExpression()), !dbg !7697
  %14 = load i32, i32* %rt_int, align 8, !dbg !7696
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7696
  %index45 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 9, !dbg !7696
  %16 = load i32, i32* %index45, align 8, !dbg !7696
  %call47 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %13, i64 %conv, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i32 %14, i32 %16) #6, !dbg !7696
  call void @sel_prepare_string_for_dot_label(i8* nonnull %13) #6, !dbg !7696
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !7696
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %13) #6, !dbg !7696
  br label %if.end62, !dbg !7696

if.else:                                          ; preds = %do.body
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !7694
  %19 = load i32, i32* %rt_int, align 8, !dbg !7694
  %arrayidx55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 1, !dbg !7694
  %rt_bb56 = bitcast %struct.object_block** %arrayidx55 to %struct.basic_block_def**, !dbg !7694
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb56, align 8, !dbg !7694
  %index57 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i64 0, i32 9, !dbg !7694
  %21 = load i32, i32* %index57, align 8, !dbg !7694
  %call59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i32 %19, i32 %21) #6, !dbg !7694
  br label %if.end62

if.end62:                                         ; preds = %do.body25, %if.else, %cond.end19
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %_new_fences, metadata !7657, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call void @move_fence_to_fences(%struct._list_node* nonnull %fences.addr.0, %struct.flist_tail_def* nonnull %_new_fences) #6, !dbg !7698
  br label %for.inc, !dbg !7699

if.else64:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %_new_fences, metadata !7657, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call fastcc void @extract_new_fences_from(%struct._list_node* nonnull %fences.addr.0, %struct.flist_tail_def* nonnull %_new_fences, i32 %orig_max_seqno) #7, !dbg !7700
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else64, %if.end62
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %fences.addr.0, i64 0, i32 0, !dbg !7701
  %22 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !7701
  call void @llvm.dbg.value(metadata %struct._list_node* %22, metadata !7654, metadata !DIExpression()), !dbg !7675
  br label %for.cond, !dbg !7702, !llvm.loop !7703

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct._list_node** %old_fences, metadata !7656, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call void @flist_clear(%struct._list_node** nonnull %old_fences) #6, !dbg !7705
  %head = getelementptr inbounds %struct.flist_tail_def, %struct.flist_tail_def* %_new_fences, i64 0, i32 0, !dbg !7706
  %23 = load %struct._list_node*, %struct._list_node** %head, align 8, !dbg !7706
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7707
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7707
  ret %struct._list_node* %23, !dbg !7708
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @update_seqnos_and_stage(i32 %min_seqno, i32 %max_seqno, i32 %highest_seqno_in_use, %struct._list_node** %pscheduled_insns) unnamed_addr #5 !dbg !7709 {
entry:
  %ii = alloca %struct._list_iterator, align 8
  %insn = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata i32 %min_seqno, metadata !7713, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %max_seqno, metadata !7714, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %highest_seqno_in_use, metadata !7715, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata %struct._list_node** %pscheduled_insns, metadata !7716, metadata !DIExpression()), !dbg !7722
  %0 = bitcast %struct._list_iterator* %ii to i8*, !dbg !7723
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7723
  %1 = bitcast %struct.rtx_def** %insn to i8*, !dbg !7724
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7724
  %2 = load %struct._list_node*, %struct._list_node** %pscheduled_insns, align 8, !dbg !7725
  %tobool = icmp eq %struct._list_node* %2, null, !dbg !7725
  br i1 %tobool, label %if.end, label %if.then, !dbg !7727

if.then:                                          ; preds = %entry
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7728
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i64 0, i32 0, !dbg !7728
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7728
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !7728
  %x = getelementptr inbounds %struct._list_node, %struct._list_node* %2, i64 0, i32 1, i32 0, i32 0, !dbg !7728
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7728
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7728
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7728
  %6 = load i32, i32* %rt_int, align 8, !dbg !7728
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base4, i32 %6) #7, !dbg !7728
  %call9 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !7728
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call9, i64 0, i32 2, !dbg !7728
  %7 = load i32, i32* %seqno, align 4, !dbg !7728
  %add = add nsw i32 %7, %highest_seqno_in_use, !dbg !7730
  %add10 = add nsw i32 %add, %max_seqno, !dbg !7731
  %sub = sub nsw i32 %add10, %min_seqno, !dbg !7732
  %add11 = add nsw i32 %sub, 2, !dbg !7733
  call void @llvm.dbg.value(metadata i32 %add11, metadata !7717, metadata !DIExpression()), !dbg !7722
  %cmp = icmp sgt i32 %add11, %highest_seqno_in_use, !dbg !7734
  br i1 %cmp, label %if.end, label %cond.true12, !dbg !7734

cond.true12:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7364, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7734
  br label %if.end, !dbg !7734

if.end:                                           ; preds = %entry, %cond.true12, %if.then
  %new_hs.0 = phi i32 [ %add11, %if.then ], [ %add11, %cond.true12 ], [ %highest_seqno_in_use, %entry ], !dbg !7735
  call void @llvm.dbg.value(metadata i32 %new_hs.0, metadata !7717, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ii, metadata !7718, metadata !DIExpression(DW_OP_deref)), !dbg !7722
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %ii, %struct._list_node** %pscheduled_insns, i8 zeroext 0) #7, !dbg !7736
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ii, i64 0, i32 0, !dbg !7738
  %add42 = add nsw i32 %highest_seqno_in_use, %max_seqno, !dbg !7740
  %sub43 = sub nsw i32 %add42, %min_seqno, !dbg !7740
  %add44 = add nsw i32 %sub43, 2, !dbg !7740
  br label %for.cond, !dbg !7736

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !7742
  %9 = load %struct._list_node*, %struct._list_node** %8, align 8, !dbg !7742
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn, metadata !7721, metadata !DIExpression(DW_OP_deref)), !dbg !7722
  %call16 = call fastcc zeroext i8 @_list_iter_cond_x(%struct._list_node* %9, %struct.rtx_def** nonnull %insn) #7, !dbg !7742
  %tobool17 = icmp eq i8 %call16, 0, !dbg !7736
  br i1 %tobool17, label %for.end, label %for.body, !dbg !7736

for.body:                                         ; preds = %for.cond
  %10 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7743
  %base20 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %10, i64 0, i32 0, !dbg !7743
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7743
  %base26 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %11, i64 0, i32 0, !dbg !7743
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7743
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !7721, metadata !DIExpression()), !dbg !7722
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7743
  %rt_int33 = bitcast %union.rtunion_def* %arrayidx32 to i32*, !dbg !7743
  %13 = load i32, i32* %rt_int33, align 8, !dbg !7743
  %call34 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base26, i32 %13) #7, !dbg !7743
  %call35 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base20, i32 %call34) #7, !dbg !7743
  %seqno36 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call35, i64 0, i32 2, !dbg !7743
  %14 = load i32, i32* %seqno36, align 4, !dbg !7743
  %cmp37 = icmp slt i32 %14, 0, !dbg !7743
  br i1 %cmp37, label %cond.end40, label %cond.true38, !dbg !7743

cond.true38:                                      ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7371, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7743
  br label %cond.end40, !dbg !7743

cond.end40:                                       ; preds = %for.body, %cond.true38
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7744
  %base47 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i64 0, i32 0, !dbg !7744
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7744
  %base53 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !7744
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !7721, metadata !DIExpression()), !dbg !7722
  %arrayidx59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7744
  %rt_int60 = bitcast %union.rtunion_def* %arrayidx59 to i32*, !dbg !7744
  %18 = load i32, i32* %rt_int60, align 8, !dbg !7744
  %call61 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base53, i32 %18) #7, !dbg !7744
  %call62 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base47, i32 %call61) #7, !dbg !7744
  %seqno63 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call62, i64 0, i32 2, !dbg !7744
  %19 = load i32, i32* %seqno63, align 4, !dbg !7745
  %add64 = add nsw i32 %19, %add44, !dbg !7745
  store i32 %add64, i32* %seqno63, align 4, !dbg !7745
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !7746
  %base67 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %20, i64 0, i32 0, !dbg !7746
  %21 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7746
  %base73 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %21, i64 0, i32 0, !dbg !7746
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7746
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !7721, metadata !DIExpression()), !dbg !7722
  %arrayidx79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7746
  %rt_int80 = bitcast %union.rtunion_def* %arrayidx79 to i32*, !dbg !7746
  %23 = load i32, i32* %rt_int80, align 8, !dbg !7746
  %call81 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base73, i32 %23) #7, !dbg !7746
  %call82 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base67, i32 %call81) #7, !dbg !7746
  %seqno83 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call82, i64 0, i32 2, !dbg !7746
  %24 = load i32, i32* %seqno83, align 4, !dbg !7746
  %cmp84 = icmp sgt i32 %24, %new_hs.0, !dbg !7746
  br i1 %cmp84, label %cond.true85, label %cond.end87, !dbg !7746

cond.true85:                                      ; preds = %cond.end40
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7746
  br label %cond.end87, !dbg !7746

cond.end87:                                       ; preds = %cond.end40, %cond.true85
  %25 = load i8, i8* @pipelining_p, align 1, !dbg !7747
  %tobool89 = icmp eq i8 %25, 0, !dbg !7747
  br i1 %tobool89, label %if.then90, label %for.inc, !dbg !7749

if.then90:                                        ; preds = %cond.end87
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7750
  call void @llvm.dbg.value(metadata %struct.rtx_def* %26, metadata !7721, metadata !DIExpression()), !dbg !7722
  call void @free_data_for_scheduled_insn(%struct.rtx_def* %26) #6, !dbg !7751
  br label %for.inc, !dbg !7751

for.inc:                                          ; preds = %cond.end87, %if.then90
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ii, metadata !7718, metadata !DIExpression(DW_OP_deref)), !dbg !7722
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %ii) #7, !dbg !7742
  br label %for.cond, !dbg !7742, !llvm.loop !7752

for.end:                                          ; preds = %for.cond
  call fastcc void @_list_clear(%struct._list_node** %pscheduled_insns) #7, !dbg !7754
  %27 = load i32, i32* @global_level, align 4, !dbg !7755
  %inc = add nsw i32 %27, 1, !dbg !7755
  store i32 %inc, i32* @global_level, align 4, !dbg !7755
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7756
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7756
  ret i32 %new_hs.0, !dbg !7757
}

declare dso_local void @dump_flist(%struct._list_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fill_insns(%struct._fence* %fence, i32 %seqno, %struct._list_node*** %scheduled_insns_tailpp) unnamed_addr #5 !dbg !7758 {
entry:
  %bnds = alloca %struct._list_node*, align 8
  %av_vliw = alloca %struct._list_node*, align 8
  %need_stall = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !7762, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i32 %seqno, metadata !7763, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct._list_node*** %scheduled_insns_tailpp, metadata !7764, metadata !DIExpression()), !dbg !7794
  %0 = bitcast %struct._list_node** %bnds to i8*, !dbg !7795
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7795
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !7765, metadata !DIExpression()), !dbg !7794
  store %struct._list_node* null, %struct._list_node** %bnds, align 8, !dbg !7796
  %1 = bitcast %struct._list_node** %av_vliw to i8*, !dbg !7797
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7797
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !7768, metadata !DIExpression()), !dbg !7794
  store %struct._list_node* null, %struct._list_node** %av_vliw, align 8, !dbg !7798
  %insn1 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 0, !dbg !7799
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !7799
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7769, metadata !DIExpression()), !dbg !7794
  %3 = load i32, i32* @sched_verbose, align 4, !dbg !7800
  %cmp = icmp sgt i32 %3, 1, !dbg !7801
  br i1 %cmp, label %do.body, label %if.end21, !dbg !7802

do.body:                                          ; preds = %entry
  %4 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !7803
  %tobool = icmp eq i8 %4, 0, !dbg !7803
  br i1 %tobool, label %if.else, label %do.body3, !dbg !7804

do.body3:                                         ; preds = %do.body
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7805
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7805
  %5 = load i32, i32* %rt_int, align 8, !dbg !7805
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !7805
  %6 = load i32, i32* %cycle, align 8, !dbg !7805
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0), i32 %5, i32 %6) #6, !dbg !7805
  %mul = shl nsw i32 %call, 1, !dbg !7805
  %add = or i32 %mul, 1, !dbg !7805
  call void @llvm.dbg.value(metadata i32 %add, metadata !7770, metadata !DIExpression()), !dbg !7806
  %conv = sext i32 %add to i64, !dbg !7805
  %7 = alloca i8, i64 %conv, align 16, !dbg !7805
  call void @llvm.dbg.value(metadata i8* %7, metadata !7775, metadata !DIExpression()), !dbg !7806
  %8 = load i32, i32* %rt_int, align 8, !dbg !7805
  %9 = load i32, i32* %cycle, align 8, !dbg !7805
  %call11 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %7, i64 %conv, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0), i32 %8, i32 %9) #6, !dbg !7805
  call void @sel_prepare_string_for_dot_label(i8* nonnull %7) #6, !dbg !7805
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !7805
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %7) #6, !dbg !7805
  br label %if.end21, !dbg !7805

if.else:                                          ; preds = %do.body
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !7803
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7803
  %rt_int16 = bitcast %union.rtunion_def* %arrayidx15 to i32*, !dbg !7803
  %12 = load i32, i32* %rt_int16, align 8, !dbg !7803
  %cycle17 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !7803
  %13 = load i32, i32* %cycle17, align 8, !dbg !7803
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0), i32 %12, i32 %13) #6, !dbg !7803
  br label %if.end21

if.end21:                                         ; preds = %do.body3, %if.else, %entry
  %dc = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 5, !dbg !7807
  %14 = load %struct.deps*, %struct.deps** %dc, align 8, !dbg !7807
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds, metadata !7765, metadata !DIExpression(DW_OP_deref)), !dbg !7794
  call void @blist_add(%struct._list_node** nonnull %bnds, %struct.rtx_def* %2, %struct._list_node* null, %struct.deps* %14) #6, !dbg !7808
  %15 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !7809
  call void @llvm.dbg.value(metadata %struct._list_node* %15, metadata !7765, metadata !DIExpression()), !dbg !7794
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %15, i64 0, i32 0, !dbg !7809
  call void @llvm.dbg.value(metadata %struct._list_node** %next, metadata !7766, metadata !DIExpression()), !dbg !7794
  %tc = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 6, !dbg !7810
  %16 = load i8*, i8** %tc, align 8, !dbg !7810
  call void @set_target_context(i8* %16) #6, !dbg !7811
  %issue_more = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 11, !dbg !7812
  %17 = load i32, i32* %issue_more, align 8, !dbg !7812
  store i32 %17, i32* @can_issue_more, align 4, !dbg !7813
  %18 = load i32*, i32** @block_to_bb, align 8, !dbg !7814
  %arrayidx24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 1, !dbg !7814
  %rt_bb = bitcast %struct.object_block** %arrayidx24 to %struct.basic_block_def**, !dbg !7814
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7814
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 9, !dbg !7814
  %20 = load i32, i32* %index, align 8, !dbg !7814
  %idxprom = sext i32 %20 to i64, !dbg !7814
  %arrayidx26 = getelementptr inbounds i32, i32* %18, i64 %idxprom, !dbg !7814
  %21 = load i32, i32* %arrayidx26, align 4, !dbg !7814
  store i32 %21, i32* @target_bb, align 4, !dbg !7815
  %22 = bitcast i32* %need_stall to i8*, !dbg !7816
  %.pre = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !7817
  br label %do.body27, !dbg !7818

do.body27:                                        ; preds = %cleanup115, %if.end21
  %23 = phi %struct._list_node* [ %.pre, %if.end21 ], [ %46, %cleanup115 ], !dbg !7817
  %insn.0 = phi %struct.rtx_def* [ %2, %if.end21 ], [ %insn.3, %cleanup115 ], !dbg !7819
  %bnds_tailp.0 = phi %struct._list_node** [ %next, %if.end21 ], [ %bnds_tailp.3, %cleanup115 ], !dbg !7820
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.0, metadata !7766, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7769, metadata !DIExpression()), !dbg !7794
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #8, !dbg !7821
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 0, metadata !7782, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 0, metadata !7783, metadata !DIExpression()), !dbg !7816
  %24 = load i8, i8* @pipelining_p, align 1, !dbg !7822
  %tobool29 = icmp eq i8 %24, 0, !dbg !7822
  %25 = load i32, i32* @issue_rate, align 4, !dbg !7816
  %mul30 = zext i1 %tobool29 to i32, !dbg !7822
  %cond = shl nsw i32 %25, %mul30, !dbg !7822
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7784, metadata !DIExpression()), !dbg !7816
  %cond33 = select i1 %tobool29, i32 3, i32 1, !dbg !7823
  call void @llvm.dbg.value(metadata i32 %cond33, metadata !7785, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8 0, metadata !7786, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8 0, metadata !7787, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata %struct._list_node* %23, metadata !7765, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct._list_node** %av_vliw, metadata !7768, metadata !DIExpression(DW_OP_deref)), !dbg !7794
  call fastcc void @compute_av_set_on_boundaries(%struct._fence* %fence, %struct._list_node* %23, %struct._list_node** nonnull %av_vliw) #7, !dbg !7824
  call void @llvm.dbg.value(metadata %struct._list_node** %av_vliw, metadata !7768, metadata !DIExpression(DW_OP_deref)), !dbg !7794
  call fastcc void @remove_insns_that_need_bookkeeping(%struct._fence* %fence, %struct._list_node** nonnull %av_vliw) #7, !dbg !7825
  %26 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !7826
  call void @llvm.dbg.value(metadata %struct._list_node* %26, metadata !7765, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct._list_node** %av_vliw, metadata !7768, metadata !DIExpression(DW_OP_deref)), !dbg !7794
  call fastcc void @remove_insns_for_debug(%struct._list_node* %26, %struct._list_node** nonnull %av_vliw) #7, !dbg !7827
  %27 = load %struct._list_node*, %struct._list_node** %av_vliw, align 8, !dbg !7828
  call void @llvm.dbg.value(metadata %struct._list_node* %27, metadata !7768, metadata !DIExpression()), !dbg !7794
  %cmp34 = icmp eq %struct._list_node* %27, null, !dbg !7830
  br i1 %cmp34, label %cleanup115, label %do.body38.preheader, !dbg !7831

do.body38.preheader:                              ; preds = %do.body27
  br label %do.body38, !dbg !7832

do.body38:                                        ; preds = %do.body38.preheader, %do.cond57
  %was_stall.0 = phi i32 [ %was_stall.1, %do.cond57 ], [ 0, %do.body38.preheader ], !dbg !7833
  call void @llvm.dbg.value(metadata i32 %was_stall.0, metadata !7781, metadata !DIExpression()), !dbg !7816
  %28 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !7834
  call void @llvm.dbg.value(metadata %struct._list_node* %28, metadata !7765, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct._list_node** %av_vliw, metadata !7768, metadata !DIExpression(DW_OP_deref)), !dbg !7794
  call void @llvm.dbg.value(metadata i32* %need_stall, metadata !7780, metadata !DIExpression(DW_OP_deref)), !dbg !7816
  %call39 = call fastcc %struct._expr* @find_best_expr(%struct._list_node** nonnull %av_vliw, %struct._list_node* %28, %struct._fence* %fence, i32* nonnull %need_stall) #7, !dbg !7836
  call void @llvm.dbg.value(metadata %struct._expr* %call39, metadata !7779, metadata !DIExpression()), !dbg !7816
  %tobool40 = icmp eq %struct._expr* %call39, null, !dbg !7837
  %29 = load i32, i32* %need_stall, align 4, !dbg !7839
  call void @llvm.dbg.value(metadata i32 %29, metadata !7780, metadata !DIExpression()), !dbg !7816
  %tobool41 = icmp ne i32 %29, 0, !dbg !7839
  %or.cond = and i1 %tobool40, %tobool41, !dbg !7840
  br i1 %or.cond, label %land.lhs.true44, label %do.cond57, !dbg !7840

land.lhs.true44:                                  ; preds = %do.body38
  %inc = add nsw i32 %was_stall.0, 1, !dbg !7841
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7781, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 %29, metadata !7780, metadata !DIExpression()), !dbg !7816
  %cmp51 = icmp slt i32 %29, 4, !dbg !7843
  br i1 %cmp51, label %if.then53, label %if.else54, !dbg !7845

if.then53:                                        ; preds = %land.lhs.true44
  call void @llvm.dbg.value(metadata i32 %29, metadata !7780, metadata !DIExpression()), !dbg !7816
  call fastcc void @stall_for_cycles(%struct._fence* %fence, i32 %29) #7, !dbg !7846
  %.pre6 = load i32, i32* %need_stall, align 4, !dbg !7847
  br label %do.cond57, !dbg !7848

if.else54:                                        ; preds = %land.lhs.true44
  %call39.lcssa = phi %struct._expr* [ %call39, %land.lhs.true44 ], !dbg !7836
  %tobool40.lcssa = phi i1 [ %tobool40, %land.lhs.true44 ], !dbg !7837
  %inc.lcssa = phi i32 [ %inc, %land.lhs.true44 ], !dbg !7841
  call fastcc void @stall_for_cycles(%struct._fence* %fence, i32 1) #7, !dbg !7849
  br label %do.end60, !dbg !7851

do.cond57:                                        ; preds = %if.then53, %do.body38
  %30 = phi i32 [ %29, %do.body38 ], [ %.pre6, %if.then53 ], !dbg !7847
  %was_stall.1 = phi i32 [ %was_stall.0, %do.body38 ], [ %inc, %if.then53 ], !dbg !7816
  call void @llvm.dbg.value(metadata i32 %was_stall.1, metadata !7781, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 %30, metadata !7780, metadata !DIExpression()), !dbg !7816
  %tobool59 = icmp ne i32 %30, 0, !dbg !7847
  %31 = and i1 %tobool40, %tobool59, !dbg !7847
  br i1 %31, label %do.body38, label %do.end60.loopexit, !dbg !7852, !llvm.loop !7853

do.end60.loopexit:                                ; preds = %do.cond57
  %was_stall.1.lcssa = phi i32 [ %was_stall.1, %do.cond57 ], !dbg !7816
  %call39.lcssa14 = phi %struct._expr* [ %call39, %do.cond57 ], !dbg !7836
  %tobool40.lcssa12 = phi i1 [ %tobool40, %do.cond57 ], !dbg !7837
  call void @llvm.dbg.value(metadata i32 %was_stall.1.lcssa, metadata !7781, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 %was_stall.1.lcssa, metadata !7781, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 %was_stall.1.lcssa, metadata !7781, metadata !DIExpression()), !dbg !7816
  br label %do.end60, !dbg !7855

do.end60:                                         ; preds = %do.end60.loopexit, %if.else54
  %call3915 = phi %struct._expr* [ %call39.lcssa, %if.else54 ], [ %call39.lcssa14, %do.end60.loopexit ]
  %tobool4013 = phi i1 [ %tobool40.lcssa, %if.else54 ], [ %tobool40.lcssa12, %do.end60.loopexit ]
  %was_stall.2 = phi i32 [ %inc.lcssa, %if.else54 ], [ %was_stall.1.lcssa, %do.end60.loopexit ], !dbg !7816
  call void @llvm.dbg.value(metadata i32 %was_stall.2, metadata !7781, metadata !DIExpression()), !dbg !7816
  br i1 %tobool4013, label %if.then62, label %do.body64.preheader, !dbg !7857

do.body64.preheader:                              ; preds = %do.end60
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %call3915, i64 0, i32 0, !dbg !7858
  %.pre7 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !7860
  br label %do.body64, !dbg !7861

if.then62:                                        ; preds = %do.end60
  call void @llvm.dbg.value(metadata %struct._list_node** %av_vliw, metadata !7768, metadata !DIExpression(DW_OP_deref)), !dbg !7794
  call void @av_set_clear(%struct._list_node** nonnull %av_vliw) #6, !dbg !7862
  br label %cleanup115, !dbg !7864

do.body64:                                        ; preds = %do.body64.preheader, %cleanup
  %32 = phi %struct._list_node* [ %44, %cleanup ], [ %.pre7, %do.body64.preheader ], !dbg !7860
  %bndsp.0 = phi %struct._list_node** [ %bndsp.1, %cleanup ], [ %bnds, %do.body64.preheader ], !dbg !7865
  %insn.1 = phi %struct.rtx_def* [ %insn.2, %cleanup ], [ %insn.0, %do.body64.preheader ], !dbg !7794
  %bnds_tailp.1 = phi %struct._list_node** [ %bnds_tailp.2, %cleanup ], [ %bnds_tailp.0, %do.body64.preheader ], !dbg !7794
  %last_insn_was_debug.0 = phi i8 [ %last_insn_was_debug.1, %cleanup ], [ 0, %do.body64.preheader ], !dbg !7816
  %was_debug_bb_end_p.0 = phi i8 [ %was_debug_bb_end_p.2, %cleanup ], [ 0, %do.body64.preheader ], !dbg !7816
  call void @llvm.dbg.value(metadata i8 %was_debug_bb_end_p.0, metadata !7787, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8 %last_insn_was_debug.0, metadata !7786, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.1, metadata !7766, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !7769, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct._list_node** %bndsp.0, metadata !7778, metadata !DIExpression()), !dbg !7816
  %u65 = getelementptr inbounds %struct._list_node, %struct._list_node* %32, i64 0, i32 1, !dbg !7860
  %bnd66 = bitcast %union.anon.0* %u65 to %struct._bnd*, !dbg !7860
  call void @llvm.dbg.value(metadata %struct._bnd* %bnd66, metadata !7788, metadata !DIExpression()), !dbg !7866
  %33 = getelementptr inbounds %struct._list_node, %struct._list_node* %32, i64 0, i32 1, i32 0, i32 4, !dbg !7867
  %34 = load %struct._list_node*, %struct._list_node** %33, align 8, !dbg !7867
  %35 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !7868
  %call67 = call zeroext i8 @av_set_is_in_p(%struct._list_node* %34, %struct.vinsn_def* %35) #6, !dbg !7869
  %tobool68 = icmp eq i8 %call67, 0, !dbg !7869
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !7870

if.then69:                                        ; preds = %do.body64
  %36 = load %struct._list_node*, %struct._list_node** %bndsp.0, align 8, !dbg !7871
  %next70 = getelementptr inbounds %struct._list_node, %struct._list_node* %36, i64 0, i32 0, !dbg !7871
  call void @llvm.dbg.value(metadata %struct._list_node** %next70, metadata !7778, metadata !DIExpression()), !dbg !7816
  br label %cleanup, !dbg !7873

if.end71:                                         ; preds = %do.body64
  %call72 = call fastcc %struct.rtx_def* @schedule_expr_on_boundary(%struct._bnd* nonnull %bnd66, %struct._expr* nonnull %call3915, i32 %seqno) #7, !dbg !7874
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call72, metadata !7769, metadata !DIExpression()), !dbg !7794
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call72, i64 0, i32 0, !dbg !7875
  %bf.load = load i32, i32* %37, align 8, !dbg !7875
  %bf.clear = and i32 %bf.load, 65535, !dbg !7875
  %cmp73 = icmp eq i32 %bf.clear, 7, !dbg !7875
  %conv75 = zext i1 %cmp73 to i8, !dbg !7875
  call void @llvm.dbg.value(metadata i8 %conv75, metadata !7786, metadata !DIExpression()), !dbg !7816
  br i1 %cmp73, label %if.then77, label %if.end86, !dbg !7876

if.then77:                                        ; preds = %if.end71
  %to = getelementptr inbounds %union.anon.0, %union.anon.0* %u65, i64 0, i32 0, i32 0, !dbg !7877
  %38 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !7877
  %cmp78 = icmp eq %struct.rtx_def* %call72, %38, !dbg !7879
  br i1 %cmp78, label %land.rhs80, label %land.end84, !dbg !7880

land.rhs80:                                       ; preds = %if.then77
  %call81 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %call72) #6, !dbg !7881
  %tobool83 = icmp ne i8 %call81, 0, !dbg !7880
  br label %land.end84

land.end84:                                       ; preds = %land.rhs80, %if.then77
  %39 = phi i1 [ false, %if.then77 ], [ %tobool83, %land.rhs80 ], !dbg !7882
  %conv85 = zext i1 %39 to i8, !dbg !7883
  call void @llvm.dbg.value(metadata i8 %conv85, metadata !7787, metadata !DIExpression()), !dbg !7816
  br label %if.end86, !dbg !7884

if.end86:                                         ; preds = %land.end84, %if.end71
  %was_debug_bb_end_p.1 = phi i8 [ %conv85, %land.end84 ], [ %was_debug_bb_end_p.0, %if.end71 ], !dbg !7816
  call void @llvm.dbg.value(metadata i8 %was_debug_bb_end_p.1, metadata !7787, metadata !DIExpression()), !dbg !7816
  %40 = load i32, i32* %need_stall, align 4, !dbg !7885
  call void @llvm.dbg.value(metadata i32 %40, metadata !7780, metadata !DIExpression()), !dbg !7816
  call fastcc void @update_fence_and_insn(%struct._fence* %fence, %struct.rtx_def* %call72, i32 %40) #7, !dbg !7886
  %call87 = call fastcc %struct._list_node** @update_boundaries(%struct._fence* %fence, %struct._bnd* nonnull %bnd66, %struct.rtx_def* %call72, %struct._list_node** %bndsp.0, %struct._list_node** %bnds_tailp.1) #7, !dbg !7887
  call void @llvm.dbg.value(metadata %struct._list_node** %call87, metadata !7766, metadata !DIExpression()), !dbg !7794
  %41 = load %struct._list_node**, %struct._list_node*** %scheduled_insns_tailpp, align 8, !dbg !7888
  call fastcc void @_xlist_add(%struct._list_node** %41, %struct.rtx_def* %call72) #7, !dbg !7888
  %42 = load %struct._list_node**, %struct._list_node*** %scheduled_insns_tailpp, align 8, !dbg !7889
  %43 = load %struct._list_node*, %struct._list_node** %42, align 8, !dbg !7889
  %next88 = getelementptr inbounds %struct._list_node, %struct._list_node* %43, i64 0, i32 0, !dbg !7889
  store %struct._list_node** %next88, %struct._list_node*** %scheduled_insns_tailpp, align 8, !dbg !7890
  br label %cleanup, !dbg !7891

cleanup:                                          ; preds = %if.end86, %if.then69
  %bndsp.1 = phi %struct._list_node** [ %bndsp.0, %if.end86 ], [ %next70, %if.then69 ], !dbg !7816
  %insn.2 = phi %struct.rtx_def* [ %call72, %if.end86 ], [ %insn.1, %if.then69 ], !dbg !7794
  %bnds_tailp.2 = phi %struct._list_node** [ %call87, %if.end86 ], [ %bnds_tailp.1, %if.then69 ], !dbg !7794
  %last_insn_was_debug.1 = phi i8 [ %conv75, %if.end86 ], [ %last_insn_was_debug.0, %if.then69 ], !dbg !7816
  %was_debug_bb_end_p.2 = phi i8 [ %was_debug_bb_end_p.1, %if.end86 ], [ %was_debug_bb_end_p.0, %if.then69 ], !dbg !7816
  call void @llvm.dbg.value(metadata i8 %was_debug_bb_end_p.2, metadata !7787, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8 %last_insn_was_debug.1, metadata !7786, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.2, metadata !7766, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !7769, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct._list_node** %bndsp.1, metadata !7778, metadata !DIExpression()), !dbg !7816
  %44 = load %struct._list_node*, %struct._list_node** %bndsp.1, align 8, !dbg !7892
  %45 = load %struct._list_node*, %struct._list_node** %bnds_tailp.0, align 8, !dbg !7893
  %cmp90 = icmp eq %struct._list_node* %44, %45, !dbg !7894
  br i1 %cmp90, label %do.end92, label %do.body64, !dbg !7895, !llvm.loop !7896

do.end92:                                         ; preds = %cleanup
  %insn.2.lcssa = phi %struct.rtx_def* [ %insn.2, %cleanup ], !dbg !7794
  %bnds_tailp.2.lcssa = phi %struct._list_node** [ %bnds_tailp.2, %cleanup ], !dbg !7794
  %last_insn_was_debug.1.lcssa = phi i8 [ %last_insn_was_debug.1, %cleanup ], !dbg !7816
  %was_debug_bb_end_p.2.lcssa = phi i8 [ %was_debug_bb_end_p.2, %cleanup ], !dbg !7816
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2.lcssa, metadata !7769, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.2.lcssa, metadata !7766, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i8 %last_insn_was_debug.1.lcssa, metadata !7786, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8 %was_debug_bb_end_p.2.lcssa, metadata !7787, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2.lcssa, metadata !7769, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.2.lcssa, metadata !7766, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i8 %last_insn_was_debug.1.lcssa, metadata !7786, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8 %was_debug_bb_end_p.2.lcssa, metadata !7787, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2.lcssa, metadata !7769, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.2.lcssa, metadata !7766, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i8 %last_insn_was_debug.1.lcssa, metadata !7786, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8 %was_debug_bb_end_p.2.lcssa, metadata !7787, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata %struct._list_node** %av_vliw, metadata !7768, metadata !DIExpression(DW_OP_deref)), !dbg !7794
  call void @av_set_clear(%struct._list_node** nonnull %av_vliw) #6, !dbg !7898
  %tobool93 = icmp eq i8 %last_insn_was_debug.1.lcssa, 0, !dbg !7899
  %spec.select = zext i1 %tobool93 to i32, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !7782, metadata !DIExpression()), !dbg !7816
  br i1 %tobool93, label %cond.false102, label %cond.true99, !dbg !7902

cond.true99:                                      ; preds = %do.end92
  %tobool101 = icmp eq i8 %was_debug_bb_end_p.2.lcssa, 0, !dbg !7904
  br i1 %tobool101, label %lor.lhs.false, label %cleanup115, !dbg !7905

cond.false102:                                    ; preds = %do.end92
  %call103 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %insn.2.lcssa) #6, !dbg !7906
  %tobool105 = icmp eq i8 %call103, 0, !dbg !7906
  br i1 %tobool105, label %lor.lhs.false, label %cleanup115, !dbg !7902

lor.lhs.false:                                    ; preds = %cond.true99, %cond.false102
  %tobool106 = icmp eq i32 %was_stall.2, 0, !dbg !7907
  br i1 %tobool106, label %if.end114, label %land.lhs.true107, !dbg !7908

land.lhs.true107:                                 ; preds = %lor.lhs.false
  %cmp108 = icmp sge i32 %was_stall.2, %cond33, !dbg !7909
  %cmp111 = icmp sle i32 %cond, %spec.select, !dbg !7910
  %or.cond1 = or i1 %cmp108, %cmp111, !dbg !7911
  br i1 %or.cond1, label %cleanup115, label %if.end114, !dbg !7911

if.end114:                                        ; preds = %lor.lhs.false, %land.lhs.true107
  br label %cleanup115, !dbg !7912

cleanup115:                                       ; preds = %cond.true99, %cond.false102, %land.lhs.true107, %do.body27, %if.end114, %if.then62
  %insn.3 = phi %struct.rtx_def* [ %insn.2.lcssa, %if.end114 ], [ %insn.0, %if.then62 ], [ %insn.0, %do.body27 ], [ %insn.2.lcssa, %land.lhs.true107 ], [ %insn.2.lcssa, %cond.false102 ], [ %insn.2.lcssa, %cond.true99 ], !dbg !7794
  %bnds_tailp.3 = phi %struct._list_node** [ %bnds_tailp.2.lcssa, %if.end114 ], [ %bnds_tailp.0, %if.then62 ], [ %bnds_tailp.0, %do.body27 ], [ %bnds_tailp.2.lcssa, %land.lhs.true107 ], [ %bnds_tailp.2.lcssa, %cond.false102 ], [ %bnds_tailp.2.lcssa, %cond.true99 ], !dbg !7794
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end114 ], [ false, %if.then62 ], [ false, %do.body27 ], [ false, %land.lhs.true107 ], [ false, %cond.false102 ], [ false, %cond.true99 ]
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.3, metadata !7766, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3, metadata !7769, metadata !DIExpression()), !dbg !7794
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #8, !dbg !7912
  %46 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !7913
  call void @llvm.dbg.value(metadata %struct._list_node* %46, metadata !7765, metadata !DIExpression()), !dbg !7794
  %tobool129 = icmp ne %struct._list_node* %46, null, !dbg !7914
  %or.cond3 = and i1 %cleanup.dest.slot.1, %tobool129
  br i1 %or.cond3, label %do.body27, label %do.end130, !llvm.loop !7915

do.end130:                                        ; preds = %cleanup115
  %bnds131 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 4, !dbg !7917
  %47 = load %struct._list_node*, %struct._list_node** %bnds131, align 8, !dbg !7917
  %tobool132 = icmp eq %struct._list_node* %47, null, !dbg !7917
  br i1 %tobool132, label %cond.end135, label %cond.true133, !dbg !7917

cond.true133:                                     ; preds = %do.end130
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5596, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7917
  br label %cond.end135, !dbg !7917

cond.end135:                                      ; preds = %do.end130, %cond.true133
  br label %while.cond, !dbg !7918

while.cond:                                       ; preds = %if.end150, %cond.end135
  %48 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !7919
  call void @llvm.dbg.value(metadata %struct._list_node* %48, metadata !7765, metadata !DIExpression()), !dbg !7794
  %tobool137 = icmp eq %struct._list_node* %48, null, !dbg !7918
  br i1 %tobool137, label %while.end, label %while.body, !dbg !7918

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct._list_node* %48, metadata !7765, metadata !DIExpression()), !dbg !7794
  %ptr140 = getelementptr inbounds %struct._list_node, %struct._list_node* %48, i64 0, i32 1, i32 0, i32 1, !dbg !7920
  %49 = bitcast i8** %ptr140 to %struct._list_node**, !dbg !7920
  %50 = load %struct._list_node*, %struct._list_node** %49, align 8, !dbg !7920
  call void @llvm.dbg.value(metadata %struct._list_node* %50, metadata !7792, metadata !DIExpression()), !dbg !7921
  %tobool141 = icmp eq %struct._list_node* %50, null, !dbg !7922
  br i1 %tobool141, label %if.end150, label %if.then142, !dbg !7924

if.then142:                                       ; preds = %while.body
  %x = getelementptr inbounds %struct._list_node, %struct._list_node* %50, i64 0, i32 1, i32 0, i32 0, !dbg !7925
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7925
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !7769, metadata !DIExpression()), !dbg !7794
  %52 = load %struct._list_node*, %struct._list_node** %bnds131, align 8, !dbg !7927
  %call145 = call fastcc zeroext i8 @_xlist_is_in_p(%struct._list_node* %52, %struct.rtx_def* %51) #7, !dbg !7927
  %tobool146 = icmp eq i8 %call145, 0, !dbg !7927
  br i1 %tobool146, label %if.then147, label %if.end150, !dbg !7929

if.then147:                                       ; preds = %if.then142
  call fastcc void @_xlist_add(%struct._list_node** nonnull %bnds131, %struct.rtx_def* %51) #7, !dbg !7930
  br label %if.end150, !dbg !7930

if.end150:                                        ; preds = %if.then142, %while.body, %if.then147
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds, metadata !7765, metadata !DIExpression(DW_OP_deref)), !dbg !7794
  call void @blist_remove(%struct._list_node** nonnull %bnds) #6, !dbg !7931
  br label %while.cond, !dbg !7918, !llvm.loop !7932

while.end:                                        ; preds = %while.cond
  %53 = load i8*, i8** %tc, align 8, !dbg !7934
  call void @reset_target_context(i8* %53, i8 zeroext 0) #6, !dbg !7935
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7936
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7936
  ret void, !dbg !7936
}

; Function Attrs: nounwind uwtable
define internal fastcc void @vinsn_vec_clear(%struct.VEC_vinsn_t_heap** %vinsn_vec) unnamed_addr #5 !dbg !7937 {
entry:
  %vinsn = alloca %struct.vinsn_def*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_heap** %vinsn_vec, metadata !7941, metadata !DIExpression()), !dbg !7947
  %0 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %vinsn_vec, align 8, !dbg !7948
  %tobool = icmp eq %struct.VEC_vinsn_t_heap* %0, null, !dbg !7948
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7948

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %0, i64 0, i32 0, !dbg !7948
  br label %cond.end, !dbg !7948

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vinsn_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7948
  %call = tail call fastcc i32 @VEC_vinsn_t_base_length(%struct.VEC_vinsn_t_base* %cond) #7, !dbg !7948
  call void @llvm.dbg.value(metadata i32 %call, metadata !7942, metadata !DIExpression()), !dbg !7947
  %cmp = icmp eq i32 %call, 0, !dbg !7949
  br i1 %cmp, label %if.end, label %if.then, !dbg !7950

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.vinsn_def** %vinsn to i8*, !dbg !7951
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7951
  call void @llvm.dbg.value(metadata i32 0, metadata !7946, metadata !DIExpression()), !dbg !7952
  br label %for.cond, !dbg !7953

for.cond:                                         ; preds = %for.body, %if.then
  %n.0 = phi i32 [ 0, %if.then ], [ %inc, %for.body ], !dbg !7955
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !7946, metadata !DIExpression()), !dbg !7952
  %2 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %vinsn_vec, align 8, !dbg !7956
  %tobool1 = icmp eq %struct.VEC_vinsn_t_heap* %2, null, !dbg !7956
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !7956

cond.true2:                                       ; preds = %for.cond
  %base3 = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %2, i64 0, i32 0, !dbg !7956
  br label %cond.end5, !dbg !7956

cond.end5:                                        ; preds = %for.cond, %cond.true2
  %cond6 = phi %struct.VEC_vinsn_t_base* [ %base3, %cond.true2 ], [ null, %for.cond ], !dbg !7956
  call void @llvm.dbg.value(metadata %struct.vinsn_def** %vinsn, metadata !7943, metadata !DIExpression(DW_OP_deref)), !dbg !7952
  %call7 = call fastcc i32 @VEC_vinsn_t_base_iterate(%struct.VEC_vinsn_t_base* %cond6, i32 %n.0, %struct.vinsn_def** nonnull %vinsn) #7, !dbg !7956
  %tobool8 = icmp eq i32 %call7, 0, !dbg !7958
  br i1 %tobool8, label %for.end, label %for.body, !dbg !7958

for.body:                                         ; preds = %cond.end5
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !7959
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %3, metadata !7943, metadata !DIExpression()), !dbg !7952
  call void @vinsn_detach(%struct.vinsn_def* %3) #6, !dbg !7960
  %inc = add nuw nsw i32 %n.0, 1, !dbg !7961
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7946, metadata !DIExpression()), !dbg !7952
  br label %for.cond, !dbg !7962, !llvm.loop !7963

for.end:                                          ; preds = %cond.end5
  %4 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %vinsn_vec, align 8, !dbg !7965
  %tobool9 = icmp eq %struct.VEC_vinsn_t_heap* %4, null, !dbg !7965
  br i1 %tobool9, label %cond.end13, label %cond.true10, !dbg !7965

cond.true10:                                      ; preds = %for.end
  %base11 = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %4, i64 0, i32 0, !dbg !7965
  br label %cond.end13, !dbg !7965

cond.end13:                                       ; preds = %for.end, %cond.true10
  %cond14 = phi %struct.VEC_vinsn_t_base* [ %base11, %cond.true10 ], [ null, %for.end ], !dbg !7965
  call fastcc void @VEC_vinsn_t_base_block_remove(%struct.VEC_vinsn_t_base* %cond14, i32 0, i32 %call) #7, !dbg !7965
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7966
  br label %if.end, !dbg !7967

if.end:                                           ; preds = %cond.end, %cond.end13
  ret void, !dbg !7968
}

declare dso_local void @blist_add(%struct._list_node**, %struct.rtx_def*, %struct._list_node*, %struct.deps*) local_unnamed_addr #2

declare dso_local void @set_target_context(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_av_set_on_boundaries(%struct._fence* %fence, %struct._list_node* %bnds, %struct._list_node** %av_vliw_p) unnamed_addr #5 !dbg !7969 {
entry:
  %av1_copy = alloca %struct._list_node*, align 8
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !7973, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds, metadata !7974, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.value(metadata %struct._list_node** %av_vliw_p, metadata !7975, metadata !DIExpression()), !dbg !8006
  %0 = load i32, i32* @sched_verbose, align 4, !dbg !8007
  %cmp = icmp sgt i32 %0, 1, !dbg !8008
  br i1 %cmp, label %do.body, label %if.end28, !dbg !8009

do.body:                                          ; preds = %entry
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8010
  %tobool = icmp eq i8 %1, 0, !dbg !8010
  br i1 %tobool, label %if.else, label %do.body2, !dbg !8011

do.body2:                                         ; preds = %do.body
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !8012
  %mul = shl nsw i32 %call, 1, !dbg !8012
  %add = or i32 %mul, 1, !dbg !8012
  call void @llvm.dbg.value(metadata i32 %add, metadata !7976, metadata !DIExpression()), !dbg !8013
  %conv = sext i32 %add to i64, !dbg !8012
  %2 = alloca i8, i64 %conv, align 16, !dbg !8012
  call void @llvm.dbg.value(metadata i8* %2, metadata !7982, metadata !DIExpression()), !dbg !8013
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %2, i64 %conv, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !8012
  call void @sel_prepare_string_for_dot_label(i8* nonnull %2) #6, !dbg !8012
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8012
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %2) #6, !dbg !8012
  br label %do.end8, !dbg !8012

if.else:                                          ; preds = %do.body
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8010
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !8010
  br label %do.end8

do.end8:                                          ; preds = %do.body2, %if.else
  call void @dump_blist(%struct._list_node* %bnds) #6, !dbg !8014
  %5 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8015
  %tobool10 = icmp eq i8 %5, 0, !dbg !8015
  br i1 %tobool10, label %if.else24, label %do.body12, !dbg !8016

do.body12:                                        ; preds = %do.end8
  %call14 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8017
  %mul15 = shl nsw i32 %call14, 1, !dbg !8017
  %add16 = or i32 %mul15, 1, !dbg !8017
  call void @llvm.dbg.value(metadata i32 %add16, metadata !7983, metadata !DIExpression()), !dbg !8018
  %conv18 = sext i32 %add16 to i64, !dbg !8017
  %6 = alloca i8, i64 %conv18, align 16, !dbg !8017
  call void @llvm.dbg.value(metadata i8* %6, metadata !7987, metadata !DIExpression()), !dbg !8018
  %call21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 %conv18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8017
  call void @sel_prepare_string_for_dot_label(i8* nonnull %6) #6, !dbg !8017
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8017
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %6) #6, !dbg !8017
  br label %if.end28, !dbg !8017

if.else24:                                        ; preds = %do.end8
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8015
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8015
  br label %if.end28

if.end28:                                         ; preds = %if.else24, %do.body12, %entry
  %9 = bitcast %struct._list_node** %av1_copy to i8*, !dbg !8019
  %insn = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 0, !dbg !8020
  br label %for.cond, !dbg !8023

for.cond:                                         ; preds = %if.end98, %if.end28
  %bnds.addr.0 = phi %struct._list_node* [ %bnds, %if.end28 ], [ %29, %if.end98 ]
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds.addr.0, metadata !7974, metadata !DIExpression()), !dbg !8006
  %tobool29 = icmp eq %struct._list_node* %bnds.addr.0, null, !dbg !8024
  br i1 %tobool29, label %for.end, label %for.body, !dbg !8024

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds.addr.0, metadata !7988, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !8019
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !8025
  %to = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds.addr.0, i64 0, i32 1, i32 0, i32 0, !dbg !8026
  %10 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !8026
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !7993, metadata !DIExpression()), !dbg !8019
  %call31 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %10) #6, !dbg !8027
  %tobool32 = icmp eq i8 %call31, 0, !dbg !8027
  br i1 %tobool32, label %while.cond.preheader, label %if.then33, !dbg !8029

while.cond.preheader:                             ; preds = %for.body
  br label %while.cond, !dbg !8030

if.then33:                                        ; preds = %for.body
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8031
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i64 0, i32 0, !dbg !8031
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8031
  %base37 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !8031
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8031
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8031
  %13 = load i32, i32* %rt_int, align 8, !dbg !8031
  %call42 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base37, i32 %13) #7, !dbg !8031
  %call43 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call42) #7, !dbg !8031
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call43, i64 0, i32 0, i32 5, !dbg !8031
  %14 = load i32, i32* %sched_times, align 8, !dbg !8031
  %cmp44 = icmp eq i32 %14, 0, !dbg !8031
  br i1 %cmp44, label %if.end84, label %cond.true46, !dbg !8031

cond.true46:                                      ; preds = %if.then33
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5029, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8031
  br label %if.end84, !dbg !8031

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %bnd_to.0 = phi %struct.rtx_def* [ %21, %while.body ], [ %10, %while.cond.preheader ], !dbg !8019
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bnd_to.0, metadata !7993, metadata !DIExpression()), !dbg !8019
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8032
  %base53 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i64 0, i32 0, !dbg !8032
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8032
  %base59 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !8032
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %bnd_to.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8032
  %rt_rtx = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !8032
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8032
  %arrayidx68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8032
  %rt_int69 = bitcast %union.rtunion_def* %arrayidx68 to i32*, !dbg !8032
  %19 = load i32, i32* %rt_int69, align 8, !dbg !8032
  %call70 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base59, i32 %19) #7, !dbg !8032
  %call71 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base53, i32 %call70) #7, !dbg !8032
  %sched_times73 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call71, i64 0, i32 0, i32 5, !dbg !8032
  %20 = load i32, i32* %sched_times73, align 8, !dbg !8032
  %cmp74 = icmp eq i32 %20, 0, !dbg !8033
  br i1 %cmp74, label %while.body, label %if.end84.loopexit, !dbg !8030

while.body:                                       ; preds = %while.cond
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !7993, metadata !DIExpression()), !dbg !8019
  %call80 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %21) #6, !dbg !8036
  %tobool81 = icmp eq i8 %call80, 0, !dbg !8036
  br i1 %tobool81, label %while.cond, label %if.end84.loopexit, !dbg !8038, !llvm.loop !8039

if.end84.loopexit:                                ; preds = %while.cond, %while.body
  %bnd_to.2.ph = phi %struct.rtx_def* [ %21, %while.body ], [ %bnd_to.0, %while.cond ]
  br label %if.end84, !dbg !8041

if.end84:                                         ; preds = %if.end84.loopexit, %cond.true46, %if.then33
  %bnd_to.2 = phi %struct.rtx_def* [ %10, %if.then33 ], [ %10, %cond.true46 ], [ %bnd_to.2.ph, %if.end84.loopexit ], !dbg !8019
  call void @llvm.dbg.value(metadata %struct.rtx_def* %bnd_to.2, metadata !7993, metadata !DIExpression()), !dbg !8019
  %22 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !8041
  %cmp86 = icmp eq %struct.rtx_def* %22, %bnd_to.2, !dbg !8042
  br i1 %cmp86, label %if.end98, label %if.then88, !dbg !8043

if.then88:                                        ; preds = %if.end84
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8044
  %cmp90 = icmp eq %struct.rtx_def* %23, %22, !dbg !8044
  br i1 %cmp90, label %cond.end94, label %cond.true92, !dbg !8044

cond.true92:                                      ; preds = %if.then88
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5040, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8044
  br label %cond.end94, !dbg !8044

cond.end94:                                       ; preds = %if.then88, %cond.true92
  store %struct.rtx_def* %bnd_to.2, %struct.rtx_def** %insn, align 8, !dbg !8045
  store %struct.rtx_def* %bnd_to.2, %struct.rtx_def** %to, align 8, !dbg !8046
  br label %if.end98, !dbg !8047

if.end98:                                         ; preds = %if.end84, %cond.end94
  %av = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds.addr.0, i64 0, i32 1, i32 0, i32 2, !dbg !8048
  %24 = bitcast i32* %av to %struct._list_node**, !dbg !8048
  call void @av_set_clear(%struct._list_node** nonnull %24) #6, !dbg !8049
  %25 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !8050
  %call100 = call fastcc %struct._list_node* @compute_av_set(%struct.rtx_def* %25, %struct._list_node* null, i32 0, i8 zeroext 1) #7, !dbg !8051
  store %struct._list_node* %call100, %struct._list_node** %24, align 8, !dbg !8052
  %26 = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds.addr.0, i64 0, i32 1, i32 0, i32 4, !dbg !8053
  call void @av_set_clear(%struct._list_node** nonnull %26) #6, !dbg !8054
  %27 = load %struct._list_node*, %struct._list_node** %24, align 8, !dbg !8055
  %call103 = call %struct._list_node* @av_set_copy(%struct._list_node* %27) #6, !dbg !8056
  store %struct._list_node* %call103, %struct._list_node** %26, align 8, !dbg !8057
  call fastcc void @moveup_set_inside_insn_group(%struct._list_node** nonnull %26, %struct._list_node* null) #7, !dbg !8058
  %28 = load %struct._list_node*, %struct._list_node** %26, align 8, !dbg !8059
  %call107 = call %struct._list_node* @av_set_copy(%struct._list_node* %28) #6, !dbg !8060
  call void @llvm.dbg.value(metadata %struct._list_node* %call107, metadata !7992, metadata !DIExpression()), !dbg !8019
  store %struct._list_node* %call107, %struct._list_node** %av1_copy, align 8, !dbg !8061
  call void @llvm.dbg.value(metadata %struct._list_node** %av1_copy, metadata !7992, metadata !DIExpression(DW_OP_deref)), !dbg !8019
  call void @av_set_union_and_clear(%struct._list_node** %av_vliw_p, %struct._list_node** nonnull %av1_copy, %struct.rtx_def* null) #6, !dbg !8062
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !8063
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds.addr.0, i64 0, i32 0, !dbg !8064
  %29 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !8064
  call void @llvm.dbg.value(metadata %struct._list_node* %29, metadata !7974, metadata !DIExpression()), !dbg !8006
  br label %for.cond, !dbg !8065, !llvm.loop !8066

for.end:                                          ; preds = %for.cond
  %30 = load i32, i32* @sched_verbose, align 4, !dbg !8068
  %cmp108 = icmp sgt i32 %30, 1, !dbg !8069
  br i1 %cmp108, label %do.body111, label %if.end149, !dbg !8070

do.body111:                                       ; preds = %for.end
  %31 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8071
  %tobool112 = icmp eq i8 %31, 0, !dbg !8071
  br i1 %tobool112, label %if.else126, label %do.body114, !dbg !8072

do.body114:                                       ; preds = %do.body111
  %call116 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !8073
  %mul117 = shl nsw i32 %call116, 1, !dbg !8073
  %add118 = or i32 %mul117, 1, !dbg !8073
  call void @llvm.dbg.value(metadata i32 %add118, metadata !7994, metadata !DIExpression()), !dbg !8074
  %conv120 = sext i32 %add118 to i64, !dbg !8073
  %32 = alloca i8, i64 %conv120, align 16, !dbg !8073
  call void @llvm.dbg.value(metadata i8* %32, metadata !8000, metadata !DIExpression()), !dbg !8074
  %call123 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %32, i64 %conv120, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !8073
  call void @sel_prepare_string_for_dot_label(i8* nonnull %32) #6, !dbg !8073
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8073
  %call124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %32) #6, !dbg !8073
  br label %do.end129, !dbg !8073

if.else126:                                       ; preds = %do.body111
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8071
  %call127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !8071
  br label %do.end129

do.end129:                                        ; preds = %do.body114, %if.else126
  %35 = load %struct._list_node*, %struct._list_node** %av_vliw_p, align 8, !dbg !8075
  call void @dump_av_set(%struct._list_node* %35) #6, !dbg !8076
  %36 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8077
  %tobool131 = icmp eq i8 %36, 0, !dbg !8077
  br i1 %tobool131, label %if.else145, label %do.body133, !dbg !8078

do.body133:                                       ; preds = %do.end129
  %call135 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8079
  %mul136 = shl nsw i32 %call135, 1, !dbg !8079
  %add137 = or i32 %mul136, 1, !dbg !8079
  call void @llvm.dbg.value(metadata i32 %add137, metadata !8001, metadata !DIExpression()), !dbg !8080
  %conv139 = sext i32 %add137 to i64, !dbg !8079
  %37 = alloca i8, i64 %conv139, align 16, !dbg !8079
  call void @llvm.dbg.value(metadata i8* %37, metadata !8005, metadata !DIExpression()), !dbg !8080
  %call142 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %37, i64 %conv139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8079
  call void @sel_prepare_string_for_dot_label(i8* nonnull %37) #6, !dbg !8079
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8079
  %call143 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %37) #6, !dbg !8079
  br label %if.end149, !dbg !8079

if.else145:                                       ; preds = %do.end129
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8077
  %call146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8077
  br label %if.end149

if.end149:                                        ; preds = %if.else145, %do.body133, %for.end
  ret void, !dbg !8081
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_insns_that_need_bookkeeping(%struct._fence* %fence, %struct._list_node** %av_ptr) unnamed_addr #5 !dbg !8082 {
entry:
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !8086, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata %struct._list_node** %av_ptr, metadata !8087, metadata !DIExpression()), !dbg !8101
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !8102
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8102
  %1 = bitcast %struct._list_iterator* %i to i8*, !dbg !8103
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8103
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !8089, metadata !DIExpression(DW_OP_deref)), !dbg !8101
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %av_ptr, i8 zeroext 1) #7, !dbg !8104
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !8105
  %insn = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 0, !dbg !8106
  br label %for.cond, !dbg !8104

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !8107
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !8107
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !8088, metadata !DIExpression(DW_OP_deref)), !dbg !8101
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #7, !dbg !8107
  %tobool = icmp eq i8 %call, 0, !dbg !8104
  br i1 %tobool, label %for.end, label %for.body, !dbg !8104

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !8108
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !8088, metadata !DIExpression()), !dbg !8101
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 0, !dbg !8108
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8108
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 0, !dbg !8108
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !8108
  %call1 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %6) #6, !dbg !8109
  %tobool2 = icmp eq i8 %call1, 0, !dbg !8109
  br i1 %tobool2, label %land.lhs.true, label %for.inc, !dbg !8110

land.lhs.true:                                    ; preds = %for.body
  %7 = load i8, i8* @bookkeeping_p, align 1, !dbg !8111
  %tobool3 = icmp eq i8 %7, 0, !dbg !8111
  br i1 %tobool3, label %land.lhs.true.land.lhs.true10_crit_edge, label %lor.lhs.false, !dbg !8112

land.lhs.true.land.lhs.true10_crit_edge:          ; preds = %land.lhs.true
  %.pre = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !8113
  br label %land.lhs.true10, !dbg !8112

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !8114
  call void @llvm.dbg.value(metadata %struct._expr* %8, metadata !8088, metadata !DIExpression()), !dbg !8101
  %vinsn4 = getelementptr inbounds %struct._expr, %struct._expr* %8, i64 0, i32 0, !dbg !8114
  %9 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn4, align 8, !dbg !8114
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %9, i64 0, i32 1, i32 0, !dbg !8114
  %10 = load i32, i32* %type, align 8, !dbg !8114
  %cmp = icmp eq i32 %10, 23, !dbg !8114
  br i1 %cmp, label %for.inc, label %lor.lhs.false5, !dbg !8114

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct._expr* %8, metadata !8088, metadata !DIExpression()), !dbg !8101
  %cmp9 = icmp eq i32 %10, 24, !dbg !8114
  br i1 %cmp9, label %for.inc, label %land.lhs.true10, !dbg !8115

land.lhs.true10:                                  ; preds = %land.lhs.true.land.lhs.true10_crit_edge, %lor.lhs.false5
  %11 = phi %struct._expr* [ %.pre, %land.lhs.true.land.lhs.true10_crit_edge ], [ %8, %lor.lhs.false5 ], !dbg !8113
  call void @llvm.dbg.value(metadata %struct._expr* %11, metadata !8088, metadata !DIExpression()), !dbg !8101
  %spec = getelementptr inbounds %struct._expr, %struct._expr* %11, i64 0, i32 1, !dbg !8113
  %12 = load i32, i32* %spec, align 8, !dbg !8113
  %tobool11 = icmp eq i32 %12, 0, !dbg !8113
  br i1 %tobool11, label %lor.lhs.false12, label %if.then, !dbg !8116

lor.lhs.false12:                                  ; preds = %land.lhs.true10
  call void @llvm.dbg.value(metadata %struct._expr* %11, metadata !8088, metadata !DIExpression()), !dbg !8101
  %orig_bb_index = getelementptr inbounds %struct._expr, %struct._expr* %11, i64 0, i32 6, !dbg !8117
  %13 = load i32, i32* %orig_bb_index, align 4, !dbg !8117
  %tobool13 = icmp eq i32 %13, 0, !dbg !8117
  br i1 %tobool13, label %if.then, label %lor.lhs.false14, !dbg !8118

lor.lhs.false14:                                  ; preds = %lor.lhs.false12
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8119
  %cfg = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !8119
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8119
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 2, !dbg !8119
  %16 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !8119
  %tobool15 = icmp eq %struct.VEC_basic_block_gc* %16, null, !dbg !8119
  br i1 %tobool15, label %cond.end, label %cond.true, !dbg !8119

cond.true:                                        ; preds = %lor.lhs.false14
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %16, i64 0, i32 0, !dbg !8119
  br label %cond.end, !dbg !8119

cond.end:                                         ; preds = %lor.lhs.false14, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %lor.lhs.false14 ], !dbg !8119
  call void @llvm.dbg.value(metadata %struct._expr* %11, metadata !8088, metadata !DIExpression()), !dbg !8101
  %call20 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %13) #7, !dbg !8119
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8120
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, i32 0, i32 1, !dbg !8120
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !8120
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8120
  %call21 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call20, %struct.basic_block_def* %18) #6, !dbg !8121
  %tobool22 = icmp eq i8 %call21, 0, !dbg !8121
  br i1 %tobool22, label %if.then, label %for.inc, !dbg !8122

if.then:                                          ; preds = %cond.end, %lor.lhs.false12, %land.lhs.true10
  %19 = load i32, i32* @sched_verbose, align 4, !dbg !8123
  %cmp23 = icmp sgt i32 %19, 3, !dbg !8124
  br i1 %cmp23, label %do.body, label %if.end53, !dbg !8125

do.body:                                          ; preds = %if.then
  %20 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8126
  %tobool25 = icmp eq i8 %20, 0, !dbg !8126
  br i1 %tobool25, label %if.else, label %do.body27, !dbg !8127

do.body27:                                        ; preds = %do.body
  %21 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !8128
  call void @llvm.dbg.value(metadata %struct._expr* %21, metadata !8088, metadata !DIExpression()), !dbg !8101
  %vinsn28 = getelementptr inbounds %struct._expr, %struct._expr* %21, i64 0, i32 0, !dbg !8128
  %22 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn28, align 8, !dbg !8128
  %insn_rtx29 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %22, i64 0, i32 0, !dbg !8128
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx29, align 8, !dbg !8128
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8128
  %rt_int = bitcast %union.rtunion_def* %arrayidx32 to i32*, !dbg !8128
  %24 = load i32, i32* %rt_int, align 8, !dbg !8128
  %call33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.45, i64 0, i64 0), i32 %24) #6, !dbg !8128
  %mul = shl nsw i32 %call33, 1, !dbg !8128
  %add = or i32 %mul, 1, !dbg !8128
  call void @llvm.dbg.value(metadata i32 %add, metadata !8090, metadata !DIExpression()), !dbg !8129
  %conv = sext i32 %add to i64, !dbg !8128
  %25 = alloca i8, i64 %conv, align 16, !dbg !8128
  call void @llvm.dbg.value(metadata i8* %25, metadata !8100, metadata !DIExpression()), !dbg !8129
  %26 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !8128
  call void @llvm.dbg.value(metadata %struct._expr* %26, metadata !8088, metadata !DIExpression()), !dbg !8101
  %vinsn36 = getelementptr inbounds %struct._expr, %struct._expr* %26, i64 0, i32 0, !dbg !8128
  %27 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn36, align 8, !dbg !8128
  %insn_rtx37 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %27, i64 0, i32 0, !dbg !8128
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx37, align 8, !dbg !8128
  %arrayidx40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8128
  %rt_int41 = bitcast %union.rtunion_def* %arrayidx40 to i32*, !dbg !8128
  %29 = load i32, i32* %rt_int41, align 8, !dbg !8128
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %25, i64 %conv, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.45, i64 0, i64 0), i32 %29) #6, !dbg !8128
  call void @sel_prepare_string_for_dot_label(i8* nonnull %25) #6, !dbg !8128
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8128
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %25) #6, !dbg !8128
  br label %if.end53, !dbg !8128

if.else:                                          ; preds = %do.body
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8126
  %32 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !8126
  call void @llvm.dbg.value(metadata %struct._expr* %32, metadata !8088, metadata !DIExpression()), !dbg !8101
  %vinsn44 = getelementptr inbounds %struct._expr, %struct._expr* %32, i64 0, i32 0, !dbg !8126
  %33 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn44, align 8, !dbg !8126
  %insn_rtx45 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %33, i64 0, i32 0, !dbg !8126
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx45, align 8, !dbg !8126
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8126
  %rt_int49 = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !8126
  %35 = load i32, i32* %rt_int49, align 8, !dbg !8126
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.45, i64 0, i64 0), i32 %35) #6, !dbg !8126
  br label %if.end53

if.end53:                                         ; preds = %do.body27, %if.else, %if.then
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !8089, metadata !DIExpression(DW_OP_deref)), !dbg !8101
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %i) #6, !dbg !8130
  br label %for.inc, !dbg !8131

for.inc:                                          ; preds = %cond.end, %for.body, %lor.lhs.false, %lor.lhs.false5, %if.end53
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !8089, metadata !DIExpression(DW_OP_deref)), !dbg !8101
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #7, !dbg !8107
  br label %for.cond, !dbg !8107, !llvm.loop !8132

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8134
  ret void, !dbg !8134
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_insns_for_debug(%struct._list_node* %bnds, %struct._list_node** %av_vliw_p) unnamed_addr #5 !dbg !8135 {
entry:
  %av_it = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds, metadata !8139, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata %struct._list_node** %av_vliw_p, metadata !8140, metadata !DIExpression()), !dbg !8147
  %call = tail call zeroext i8 @dbg_cnt(i32 33) #6, !dbg !8148
  %tobool = icmp eq i8 %call, 0, !dbg !8148
  br i1 %tobool, label %if.then, label %if.end7, !dbg !8149

if.then:                                          ; preds = %entry
  %0 = bitcast %struct._list_iterator* %av_it to i8*, !dbg !8150
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !8150
  %1 = bitcast %struct._expr** %expr to i8*, !dbg !8151
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8151
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds, metadata !8145, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !8152
  %to = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds, i64 0, i32 1, i32 0, i32 0, !dbg !8153
  %2 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !8153
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !8146, metadata !DIExpression()), !dbg !8152
  %next2 = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds, i64 0, i32 0, !dbg !8154
  %3 = load %struct._list_node*, %struct._list_node** %next2, align 8, !dbg !8154
  %cmp = icmp eq %struct._list_node* %3, null, !dbg !8154
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8154

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4999, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8154
  br label %cond.end, !dbg !8154

cond.end:                                         ; preds = %if.then, %cond.true
  call void @llvm.dbg.value(metadata %struct._list_iterator* %av_it, metadata !8141, metadata !DIExpression(DW_OP_deref)), !dbg !8152
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %av_it, %struct._list_node** %av_vliw_p, i8 zeroext 1) #7, !dbg !8155
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %av_it, i64 0, i32 0, !dbg !8157
  br label %for.cond, !dbg !8155

for.cond:                                         ; preds = %for.inc, %cond.end
  %4 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !8159
  %5 = load %struct._list_node*, %struct._list_node** %4, align 8, !dbg !8159
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !8144, metadata !DIExpression(DW_OP_deref)), !dbg !8152
  %call3 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %5, %struct._expr** nonnull %expr) #7, !dbg !8159
  %tobool4 = icmp eq i8 %call3, 0, !dbg !8155
  br i1 %tobool4, label %for.end, label %for.body, !dbg !8155

for.body:                                         ; preds = %for.cond
  %6 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !8160
  call void @llvm.dbg.value(metadata %struct._expr* %6, metadata !8144, metadata !DIExpression()), !dbg !8152
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %6, i64 0, i32 0, !dbg !8160
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8160
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i64 0, i32 0, !dbg !8160
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !8160
  %cmp5 = icmp eq %struct.rtx_def* %8, %2, !dbg !8162
  br i1 %cmp5, label %for.inc, label %if.then6, !dbg !8163

if.then6:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %av_it, metadata !8141, metadata !DIExpression(DW_OP_deref)), !dbg !8152
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %av_it) #6, !dbg !8164
  br label %for.inc, !dbg !8164

for.inc:                                          ; preds = %for.body, %if.then6
  call void @llvm.dbg.value(metadata %struct._list_iterator* %av_it, metadata !8141, metadata !DIExpression(DW_OP_deref)), !dbg !8152
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %av_it) #7, !dbg !8159
  br label %for.cond, !dbg !8159, !llvm.loop !8165

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8167
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !8167
  br label %if.end7, !dbg !8168

if.end7:                                          ; preds = %entry, %for.end
  ret void, !dbg !8169
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._expr* @find_best_expr(%struct._list_node** %av_vliw_ptr, %struct._list_node* %bnds, %struct._fence* %fence, i32* %pneed_stall) unnamed_addr #5 !dbg !8170 {
entry:
  %index = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct._list_node** %av_vliw_ptr, metadata !8174, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds, metadata !8175, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !8176, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.value(metadata i32* %pneed_stall, metadata !8177, metadata !DIExpression()), !dbg !8202
  %call = tail call fastcc %struct._expr* @fill_ready_list(%struct._list_node** %av_vliw_ptr, %struct._list_node* %bnds, %struct._fence* %fence, i32* %pneed_stall) #7, !dbg !8203
  call void @llvm.dbg.value(metadata %struct._expr* %call, metadata !8178, metadata !DIExpression()), !dbg !8202
  %cmp = icmp eq %struct._expr* %call, null, !dbg !8204
  %0 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8205
  %cmp1 = icmp sgt i32 %0, 0, !dbg !8206
  %or.cond = and i1 %cmp, %cmp1, !dbg !8207
  br i1 %or.cond, label %if.then, label %if.end14, !dbg !8207

if.then:                                          ; preds = %entry
  %1 = bitcast i32* %index to i8*, !dbg !8208
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !8208
  %call2 = tail call fastcc i32 @invoke_reorder_hooks(%struct._fence* %fence) #7, !dbg !8209
  store i32 %call2, i32* @can_issue_more, align 4, !dbg !8210
  %cmp3 = icmp sgt i32 %call2, 0, !dbg !8211
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !8213

if.then4:                                         ; preds = %if.then
  %call5 = tail call fastcc i32 @invoke_dfa_lookahead_guard() #7, !dbg !8214
  %call6 = tail call fastcc i32 @calculate_privileged_insns() #7, !dbg !8216
  call void @llvm.dbg.value(metadata i32 %call6, metadata !8179, metadata !DIExpression()), !dbg !8217
  call void @llvm.dbg.value(metadata i32* %index, metadata !8182, metadata !DIExpression(DW_OP_deref)), !dbg !8217
  %call7 = call fastcc i32 @choose_best_insn(%struct._fence* %fence, i32 %call6, i32* nonnull %index) #7, !dbg !8218
  store i32 %call7, i32* @can_issue_more, align 4, !dbg !8219
  %tobool = icmp eq i32 %call7, 0, !dbg !8220
  br i1 %tobool, label %if.end10, label %if.then8, !dbg !8222

if.then8:                                         ; preds = %if.then4
  %2 = load i32, i32* %index, align 4, !dbg !8223
  call void @llvm.dbg.value(metadata i32 %2, metadata !8182, metadata !DIExpression()), !dbg !8217
  %call9 = call fastcc %struct._expr* @find_expr_for_ready(i32 %2, i8 zeroext 1) #7, !dbg !8224
  call void @llvm.dbg.value(metadata %struct._expr* %call9, metadata !8178, metadata !DIExpression()), !dbg !8202
  %.pre = load i32, i32* @can_issue_more, align 4, !dbg !8225
  br label %if.end10, !dbg !8227

if.end10:                                         ; preds = %if.then4, %if.then8, %if.then
  %3 = phi i32 [ %call2, %if.then ], [ %.pre, %if.then8 ], [ 0, %if.then4 ], !dbg !8225
  %best.1 = phi %struct._expr* [ null, %if.then ], [ %call9, %if.then8 ], [ null, %if.then4 ], !dbg !8202
  call void @llvm.dbg.value(metadata %struct._expr* %best.1, metadata !8178, metadata !DIExpression()), !dbg !8202
  %cmp11 = icmp eq i32 %3, 0, !dbg !8228
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8229

if.then12:                                        ; preds = %if.end10
  call void @llvm.dbg.value(metadata %struct._expr* null, metadata !8178, metadata !DIExpression()), !dbg !8202
  store i32 1, i32* %pneed_stall, align 4, !dbg !8230
  br label %if.end13, !dbg !8232

if.end13:                                         ; preds = %if.then12, %if.end10
  %best.2 = phi %struct._expr* [ null, %if.then12 ], [ %best.1, %if.end10 ], !dbg !8217
  call void @llvm.dbg.value(metadata %struct._expr* %best.2, metadata !8178, metadata !DIExpression()), !dbg !8202
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !8233
  br label %if.end14, !dbg !8234

if.end14:                                         ; preds = %if.end13, %entry
  %best.3 = phi %struct._expr* [ %best.2, %if.end13 ], [ %call, %entry ], !dbg !8202
  call void @llvm.dbg.value(metadata %struct._expr* %best.3, metadata !8178, metadata !DIExpression()), !dbg !8202
  %cmp15 = icmp eq %struct._expr* %best.3, null, !dbg !8235
  br i1 %cmp15, label %if.end21, label %if.then16, !dbg !8237

if.then16:                                        ; preds = %if.end14
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %best.3, i64 0, i32 0, !dbg !8238
  %4 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8238
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %4, i64 0, i32 0, !dbg !8238
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !8238
  %6 = load i32, i32* @can_issue_more, align 4, !dbg !8240
  %call17 = call fastcc i32 @invoke_aftermath_hooks(%struct._fence* %fence, %struct.rtx_def* %5, i32 %6) #7, !dbg !8241
  store i32 %call17, i32* @can_issue_more, align 4, !dbg !8242
  %cmp18 = icmp eq i32 %call17, 0, !dbg !8243
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !8245

if.then19:                                        ; preds = %if.then16
  store i32 1, i32* %pneed_stall, align 4, !dbg !8246
  br label %if.end21, !dbg !8247

if.end21:                                         ; preds = %if.end14, %if.then16, %if.then19
  %7 = load i32, i32* @sched_verbose, align 4, !dbg !8248
  %cmp22 = icmp sgt i32 %7, 1, !dbg !8249
  br i1 %cmp22, label %if.then23, label %if.end84, !dbg !8250

if.then23:                                        ; preds = %if.end21
  %8 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8251
  %tobool26 = icmp ne i8 %8, 0, !dbg !8251
  br i1 %cmp15, label %do.body62, label %do.body, !dbg !8252

do.body:                                          ; preds = %if.then23
  br i1 %tobool26, label %do.body28, label %if.else, !dbg !8253

do.body28:                                        ; preds = %do.body
  %call29 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !8254
  %mul = shl nsw i32 %call29, 1, !dbg !8254
  %add = or i32 %mul, 1, !dbg !8254
  call void @llvm.dbg.value(metadata i32 %add, metadata !8183, metadata !DIExpression()), !dbg !8255
  %conv = sext i32 %add to i64, !dbg !8254
  %9 = alloca i8, i64 %conv, align 16, !dbg !8254
  call void @llvm.dbg.value(metadata i8* %9, metadata !8191, metadata !DIExpression()), !dbg !8255
  %call32 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 %conv, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !8254
  call void @sel_prepare_string_for_dot_label(i8* nonnull %9) #6, !dbg !8254
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8254
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %9) #6, !dbg !8254
  br label %do.end37, !dbg !8254

if.else:                                          ; preds = %do.body
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8256
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !8256
  br label %do.end37

do.end37:                                         ; preds = %if.else, %do.body28
  call void @dump_expr(%struct._expr* nonnull %best.3) #6, !dbg !8257
  %12 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8258
  %tobool39 = icmp eq i8 %12, 0, !dbg !8258
  br i1 %tobool39, label %if.else55, label %do.body41, !dbg !8259

do.body41:                                        ; preds = %do.end37
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !8260
  %13 = load i32, i32* %cycle, align 8, !dbg !8260
  %call43 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), i32 %13) #6, !dbg !8260
  %mul44 = shl nsw i32 %call43, 1, !dbg !8260
  %add45 = or i32 %mul44, 1, !dbg !8260
  call void @llvm.dbg.value(metadata i32 %add45, metadata !8192, metadata !DIExpression()), !dbg !8261
  %conv47 = sext i32 %add45 to i64, !dbg !8260
  %14 = alloca i8, i64 %conv47, align 16, !dbg !8260
  call void @llvm.dbg.value(metadata i8* %14, metadata !8196, metadata !DIExpression()), !dbg !8261
  %15 = load i32, i32* %cycle, align 8, !dbg !8260
  %call51 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %14, i64 %conv47, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), i32 %15) #6, !dbg !8260
  call void @sel_prepare_string_for_dot_label(i8* nonnull %14) #6, !dbg !8260
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8260
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %14) #6, !dbg !8260
  br label %if.end84, !dbg !8260

if.else55:                                        ; preds = %do.end37
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8258
  %cycle56 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !8258
  %18 = load i32, i32* %cycle56, align 8, !dbg !8258
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), i32 %18) #6, !dbg !8258
  br label %if.end84

do.body62:                                        ; preds = %if.then23
  br i1 %tobool26, label %do.body65, label %if.else78, !dbg !8262

do.body65:                                        ; preds = %do.body62
  %call67 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !8263
  %mul68 = shl nsw i32 %call67, 1, !dbg !8263
  %add69 = or i32 %mul68, 1, !dbg !8263
  call void @llvm.dbg.value(metadata i32 %add69, metadata !8197, metadata !DIExpression()), !dbg !8264
  %conv71 = sext i32 %add69 to i64, !dbg !8263
  %19 = alloca i8, i64 %conv71, align 16, !dbg !8263
  call void @llvm.dbg.value(metadata i8* %19, metadata !8201, metadata !DIExpression()), !dbg !8264
  %call74 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %19, i64 %conv71, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !8263
  call void @sel_prepare_string_for_dot_label(i8* nonnull %19) #6, !dbg !8263
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8263
  %call75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %19) #6, !dbg !8263
  br label %if.end84, !dbg !8263

if.else78:                                        ; preds = %do.body62
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8265
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !8265
  br label %if.end84

if.end84:                                         ; preds = %if.else55, %do.body41, %if.else78, %do.body65, %if.end21
  ret %struct._expr* %best.3, !dbg !8266
}

; Function Attrs: nounwind uwtable
define internal fastcc void @stall_for_cycles(%struct._fence* %fence, i32 %n) unnamed_addr #5 !dbg !8267 {
entry:
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !8271, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.value(metadata i32 %n, metadata !8272, metadata !DIExpression()), !dbg !8274
  %cmp = icmp sgt i32 %n, 1, !dbg !8275
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8276

lor.rhs:                                          ; preds = %entry
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 3, !dbg !8277
  %0 = load i32, i32* %cycle_issued_insns, align 4, !dbg !8277
  %1 = load i32, i32* @issue_rate, align 4, !dbg !8278
  %cmp1 = icmp slt i32 %0, %1, !dbg !8279
  %phitmp = zext i1 %cmp1 to i32, !dbg !8276
  br label %lor.end, !dbg !8276

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i32 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8273, metadata !DIExpression()), !dbg !8274
  br label %while.cond, !dbg !8280

while.cond:                                       ; preds = %while.body, %lor.end
  %n.addr.0 = phi i32 [ %n, %lor.end ], [ %dec, %while.body ]
  call void @llvm.dbg.value(metadata i32 %n.addr.0, metadata !8272, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.value(metadata i32 %n.addr.0, metadata !8272, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8274
  %tobool = icmp eq i32 %n.addr.0, 0, !dbg !8280
  br i1 %tobool, label %while.end, label %while.body, !dbg !8280

while.body:                                       ; preds = %while.cond
  %dec = add nsw i32 %n.addr.0, -1, !dbg !8281
  call void @llvm.dbg.value(metadata i32 %dec, metadata !8272, metadata !DIExpression()), !dbg !8274
  tail call fastcc void @advance_one_cycle(%struct._fence* %fence) #7, !dbg !8282
  br label %while.cond, !dbg !8280, !llvm.loop !8283

while.end:                                        ; preds = %while.cond
  %tobool2 = icmp eq i32 %2, 0, !dbg !8285
  br i1 %tobool2, label %if.end, label %if.then, !dbg !8287

if.then:                                          ; preds = %while.end
  %after_stall_p = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 13, !dbg !8288
  %bf.load = load i8, i8* %after_stall_p, align 8, !dbg !8289
  %bf.set = or i8 %bf.load, 8, !dbg !8289
  store i8 %bf.set, i8* %after_stall_p, align 8, !dbg !8289
  br label %if.end, !dbg !8288

if.end:                                           ; preds = %while.end, %if.then
  ret void, !dbg !8290
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @schedule_expr_on_boundary(%struct._bnd* %bnd, %struct._expr* %expr_vliw, i32 %seqno) unnamed_addr #5 !dbg !8291 {
entry:
  %expr_seq = alloca %struct._list_node*, align 8
  call void @llvm.dbg.value(metadata %struct._bnd* %bnd, metadata !8295, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.value(metadata %struct._expr* %expr_vliw, metadata !8296, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.value(metadata i32 %seqno, metadata !8297, metadata !DIExpression()), !dbg !8306
  %0 = bitcast %struct._list_node** %expr_seq to i8*, !dbg !8307
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8307
  %1 = alloca %struct._expr, align 16, !dbg !8308
  call void @llvm.dbg.value(metadata %struct._expr* %1, metadata !8299, metadata !DIExpression()), !dbg !8306
  %call = tail call fastcc %struct._list_node* @find_sequential_best_exprs(%struct._bnd* %bnd, %struct._expr* %expr_vliw, i8 zeroext 1) #7, !dbg !8309
  call void @llvm.dbg.value(metadata %struct._list_node* %call, metadata !8298, metadata !DIExpression()), !dbg !8306
  store %struct._list_node* %call, %struct._list_node** %expr_seq, align 8, !dbg !8310
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr_vliw, i64 0, i32 0, !dbg !8311
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8311
  %call1 = tail call zeroext i8 @vinsn_cond_branch_p(%struct.vinsn_def* %2) #6, !dbg !8313
  %tobool = icmp eq i8 %call1, 0, !dbg !8313
  br i1 %tobool, label %if.end6, label %if.then, !dbg !8314

if.then:                                          ; preds = %entry
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8315
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i64 0, i32 0, !dbg !8315
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !8315
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !8301, metadata !DIExpression()), !dbg !8306
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %bnd, i64 0, i32 0, !dbg !8317
  %5 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !8317
  %cmp = icmp eq %struct.rtx_def* %4, %5, !dbg !8319
  br i1 %cmp, label %if.end6, label %land.lhs.true, !dbg !8320

land.lhs.true:                                    ; preds = %if.then
  %call3 = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %4) #6, !dbg !8321
  %tobool4 = icmp eq i8 %call3, 0, !dbg !8321
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !8322

if.then5:                                         ; preds = %land.lhs.true
  tail call fastcc void @move_cond_jump(%struct.rtx_def* %4, %struct._bnd* %bnd) #7, !dbg !8323
  br label %if.end6, !dbg !8323

if.end6:                                          ; preds = %land.lhs.true, %if.then, %entry, %if.then5
  %call7 = tail call fastcc %struct.rtx_def* @prepare_place_to_insert(%struct._bnd* %bnd) #7, !dbg !8324
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !8300, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.value(metadata %struct._list_node* %call, metadata !8298, metadata !DIExpression()), !dbg !8306
  %call8 = call fastcc zeroext i8 @move_exprs_to_boundary(%struct._bnd* %bnd, %struct._expr* %expr_vliw, %struct._list_node* %call, %struct._expr* nonnull %1) #7, !dbg !8325
  call void @llvm.dbg.value(metadata i8 %call8, metadata !8302, metadata !DIExpression()), !dbg !8306
  call void @clear_expr(%struct._expr* nonnull %1) #6, !dbg !8326
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8327
  %insn_rtx10 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %6, i64 0, i32 0, !dbg !8327
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx10, align 8, !dbg !8327
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8327
  %rt_rtx = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !8327
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8327
  %tobool11 = icmp eq %struct.rtx_def* %9, null, !dbg !8327
  br i1 %tobool11, label %if.end23, label %land.lhs.true12, !dbg !8327

land.lhs.true12:                                  ; preds = %if.end6
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8327
  %rt_rtx18 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !8327
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !8327
  %tobool19 = icmp eq %struct.rtx_def* %11, null, !dbg !8327
  br i1 %tobool19, label %if.end23, label %if.then20, !dbg !8328

if.then20:                                        ; preds = %land.lhs.true12
  %call22 = call %struct.vinsn_def* @vinsn_copy(%struct.vinsn_def* %6, i8 zeroext 0) #6, !dbg !8329
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %call22, metadata !8303, metadata !DIExpression()), !dbg !8330
  call void @change_vinsn_in_expr(%struct._expr* %expr_vliw, %struct.vinsn_def* %call22) #6, !dbg !8331
  call void @llvm.dbg.value(metadata i8 0, metadata !8302, metadata !DIExpression()), !dbg !8306
  br label %if.end23, !dbg !8332

if.end23:                                         ; preds = %land.lhs.true12, %if.end6, %if.then20
  %should_move.0 = phi i8 [ 0, %if.then20 ], [ %call8, %land.lhs.true12 ], [ %call8, %if.end6 ], !dbg !8306
  call void @llvm.dbg.value(metadata i8 %should_move.0, metadata !8302, metadata !DIExpression()), !dbg !8306
  %tobool24 = icmp eq i8 %should_move.0, 0, !dbg !8333
  br i1 %tobool24, label %if.else, label %if.then25, !dbg !8335

if.then25:                                        ; preds = %if.end23
  %call26 = call %struct.rtx_def* @sel_move_insn(%struct._expr* %expr_vliw, i32 %seqno, %struct.rtx_def* %call7) #6, !dbg !8336
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call26, metadata !8301, metadata !DIExpression()), !dbg !8306
  br label %if.end28, !dbg !8337

if.else:                                          ; preds = %if.end23
  %call27 = call fastcc %struct.rtx_def* @emit_insn_from_expr_after(%struct._expr* %expr_vliw, %struct.vinsn_def* null, i32 %seqno, %struct.rtx_def* %call7) #7, !dbg !8338
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call27, metadata !8301, metadata !DIExpression()), !dbg !8306
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  %insn.0 = phi %struct.rtx_def* [ %call26, %if.then25 ], [ %call27, %if.else ], !dbg !8339
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8301, metadata !DIExpression()), !dbg !8306
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call7, i64 0, i32 1, !dbg !8340
  %12 = getelementptr inbounds %union.u, %union.u* %u29, i64 1, i32 0, i32 0, i64 0, !dbg !8340
  %rt_rtx32 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !8340
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !8340
  %14 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !8340
  %cmp33 = icmp eq %struct.rtx_def* %13, %14, !dbg !8340
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !8342

if.then34:                                        ; preds = %if.end28
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !8343
  %bf.load = load i32, i32* %15, align 8, !dbg !8343
  %bf.clear = and i32 %bf.load, 65535, !dbg !8343
  %cmp35 = icmp ne i32 %bf.clear, 7, !dbg !8343
  %conv = zext i1 %cmp35 to i8, !dbg !8344
  call void @return_nop_to_pool(%struct.rtx_def* %call7, i8 zeroext %conv) #6, !dbg !8345
  br label %if.end36, !dbg !8345

if.end36:                                         ; preds = %if.then34, %if.end28
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !8346
  %bf.load37 = load i32, i32* %16, align 8, !dbg !8346
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !8346
  %cmp39 = icmp ne i32 %bf.clear38, 7, !dbg !8346
  %conv43 = zext i1 %cmp39 to i8, !dbg !8347
  call fastcc void @remove_temp_moveop_nops(i8 zeroext %conv43) #7, !dbg !8348
  call void @llvm.dbg.value(metadata %struct._list_node** %expr_seq, metadata !8298, metadata !DIExpression(DW_OP_deref)), !dbg !8306
  call void @av_set_clear(%struct._list_node** nonnull %expr_seq) #6, !dbg !8349
  %was_renamed = getelementptr inbounds %struct._expr, %struct._expr* %expr_vliw, i64 0, i32 12, !dbg !8350
  %bf.load44 = load i8, i8* %was_renamed, align 1, !dbg !8350
  %bf.clear45 = and i8 %bf.load44, 4, !dbg !8350
  %tobool46 = icmp eq i8 %bf.clear45, 0, !dbg !8350
  br i1 %tobool46, label %if.end60, label %if.then47, !dbg !8352

if.then47:                                        ; preds = %if.end36
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8353
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i64 0, i32 0, !dbg !8353
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8353
  %base51 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i64 0, i32 0, !dbg !8353
  %arrayidx57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8353
  %rt_int = bitcast %union.rtunion_def* %arrayidx57 to i32*, !dbg !8353
  %19 = load i32, i32* %rt_int, align 8, !dbg !8353
  %call58 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base51, i32 %19) #7, !dbg !8353
  %call59 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call58) #7, !dbg !8353
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call59, i64 0, i32 0, !dbg !8353
  call fastcc void @vinsn_vec_add(%struct.VEC_vinsn_t_heap** nonnull @vec_target_unavailable_vinsns, %struct._expr* %expr) #7, !dbg !8354
  br label %if.end60, !dbg !8354

if.end60:                                         ; preds = %if.end36, %if.then47
  %20 = load i8, i8* @pipelining_p, align 1, !dbg !8355
  %tobool61 = icmp eq i8 %20, 0, !dbg !8355
  %21 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !8355
  %cmp62 = icmp eq %struct.loop* %21, null, !dbg !8355
  %or.cond = or i1 %tobool61, %cmp62, !dbg !8355
  br i1 %or.cond, label %cond.end69, label %lor.lhs.false64, !dbg !8355

lor.lhs.false64:                                  ; preds = %if.end60
  %call65 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %21) #6, !dbg !8355
  %tobool66 = icmp eq %struct.edge_def* %call65, null, !dbg !8355
  br i1 %tobool66, label %cond.true67, label %cond.end69, !dbg !8355

cond.true67:                                      ; preds = %lor.lhs.false64
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5462, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8355
  br label %cond.end69, !dbg !8355

cond.end69:                                       ; preds = %lor.lhs.false64, %if.end60, %cond.true67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8356
  ret %struct.rtx_def* %insn.0, !dbg !8357
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_fence_and_insn(%struct._fence* %fence, %struct.rtx_def* %insn, i32 %need_stall) unnamed_addr #5 !dbg !8358 {
entry:
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !8362, metadata !DIExpression()), !dbg !8378
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8363, metadata !DIExpression()), !dbg !8378
  call void @llvm.dbg.value(metadata i32 %need_stall, metadata !8364, metadata !DIExpression()), !dbg !8378
  %call = tail call fastcc zeroext i8 @advance_state_on_fence(%struct._fence* %fence, %struct.rtx_def* %insn) #7, !dbg !8379
  call void @llvm.dbg.value(metadata i8 %call, metadata !8365, metadata !DIExpression()), !dbg !8378
  %last_scheduled_insn = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 10, !dbg !8380
  store %struct.rtx_def* %insn, %struct.rtx_def** %last_scheduled_insn, align 8, !dbg !8381
  %executing_insns = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 7, !dbg !8382
  %call1 = tail call fastcc %struct.rtx_def** @VEC_rtx_gc_safe_push(%struct.VEC_rtx_gc** nonnull %executing_insns, %struct.rtx_def* %insn) #7, !dbg !8382
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !8383
  %bf.load = load i32, i32* %0, align 8, !dbg !8383
  %bf.clear = and i32 %bf.load, 268435456, !dbg !8383
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !8383
  br i1 %tobool, label %if.else, label %if.then, !dbg !8385

if.then:                                          ; preds = %entry
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8386
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i64 0, i32 0, !dbg !8386
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8386
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %2, i64 0, i32 0, !dbg !8386
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8386
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8386
  %3 = load i32, i32* %rt_int, align 8, !dbg !8386
  %call9 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base5, i32 %3) #7, !dbg !8386
  %call10 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call9) #7, !dbg !8386
  %sched_next = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call10, i64 0, i32 9, !dbg !8386
  %4 = bitcast %struct.rtx_def** %sched_next to i64*, !dbg !8386
  %5 = load i64, i64* %4, align 8, !dbg !8386
  %sched_next11 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 12, !dbg !8388
  %6 = bitcast %struct.rtx_def** %sched_next11 to i64*, !dbg !8389
  store i64 %5, i64* %6, align 8, !dbg !8389
  %bf.load12 = load i32, i32* %0, align 8, !dbg !8390
  %bf.clear13 = and i32 %bf.load12, -268435457, !dbg !8390
  store i32 %bf.clear13, i32* %0, align 8, !dbg !8390
  br label %if.end, !dbg !8391

if.else:                                          ; preds = %entry
  %sched_next14 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 12, !dbg !8392
  store %struct.rtx_def* null, %struct.rtx_def** %sched_next14, align 8, !dbg !8393
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8394
  %rt_int18 = bitcast %union.rtunion_def* %arrayidx17 to i32*, !dbg !8394
  %7 = load i32, i32* %rt_int18, align 8, !dbg !8394
  %ready_ticks_size = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 9, !dbg !8396
  %8 = load i32, i32* %ready_ticks_size, align 8, !dbg !8396
  %cmp = icmp slt i32 %7, %8, !dbg !8397
  br i1 %cmp, label %if.then19, label %if.end25, !dbg !8398

if.then19:                                        ; preds = %if.end
  %ready_ticks = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 8, !dbg !8399
  %9 = load i32*, i32** %ready_ticks, align 8, !dbg !8399
  %idxprom = sext i32 %7 to i64, !dbg !8399
  %arrayidx24 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !8399
  store i32 0, i32* %arrayidx24, align 4, !dbg !8400
  %.pre = load i32, i32* %rt_int18, align 8, !dbg !8401
  br label %if.end25, !dbg !8399

if.end25:                                         ; preds = %if.then19, %if.end
  %10 = phi i32 [ %.pre, %if.then19 ], [ %7, %if.end ], !dbg !8401
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8401
  %base28 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i64 0, i32 0, !dbg !8401
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8401
  %base34 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !8401
  %call42 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base34, i32 %10) #7, !dbg !8401
  %call43 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base28, i32 %call42) #7, !dbg !8401
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call43, i64 0, i32 0, i32 5, !dbg !8401
  %13 = load i32, i32* %sched_times, align 8, !dbg !8402
  %inc = add nsw i32 %13, 1, !dbg !8402
  store i32 %inc, i32* %sched_times, align 8, !dbg !8402
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8403
  %base46 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %14, i64 0, i32 0, !dbg !8403
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8403
  %base52 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %15, i64 0, i32 0, !dbg !8403
  %16 = load i32, i32* %rt_int18, align 8, !dbg !8403
  %call60 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base52, i32 %16) #7, !dbg !8403
  %call61 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base46, i32 %call60) #7, !dbg !8403
  %target_available = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call61, i64 0, i32 0, i32 11, !dbg !8403
  store i8 1, i8* %target_available, align 8, !dbg !8404
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !8405
  %17 = load i32, i32* %cycle, align 8, !dbg !8405
  %18 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8406
  %base65 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %18, i64 0, i32 0, !dbg !8406
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8406
  %base71 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i64 0, i32 0, !dbg !8406
  %20 = load i32, i32* %rt_int18, align 8, !dbg !8406
  %call79 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base71, i32 %20) #7, !dbg !8406
  %call80 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base65, i32 %call79) #7, !dbg !8406
  %orig_sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call80, i64 0, i32 0, i32 9, !dbg !8406
  store i32 %17, i32* %orig_sched_cycle, align 8, !dbg !8407
  %after_stall_p = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 13, !dbg !8408
  %bf.load82 = load i8, i8* %after_stall_p, align 8, !dbg !8408
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8409
  %base87 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i64 0, i32 0, !dbg !8409
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8409
  %base93 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %22, i64 0, i32 0, !dbg !8409
  %23 = load i32, i32* %rt_int18, align 8, !dbg !8409
  %call101 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base93, i32 %23) #7, !dbg !8409
  %call102 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base87, i32 %call101) #7, !dbg !8409
  %after_stall_p103 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call102, i64 0, i32 13, !dbg !8409
  %bf.load104 = load i8, i8* %after_stall_p103, align 4, !dbg !8410
  %24 = lshr i8 %bf.load82, 1, !dbg !8410
  %bf.shl = and i8 %24, 4, !dbg !8410
  %bf.clear105 = and i8 %bf.load104, -5, !dbg !8410
  %bf.set = or i8 %bf.clear105, %bf.shl, !dbg !8410
  store i8 %bf.set, i8* %after_stall_p103, align 4, !dbg !8410
  %25 = load i32, i32* %cycle, align 8, !dbg !8411
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8412
  %base109 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %26, i64 0, i32 0, !dbg !8412
  %27 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8412
  %base115 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %27, i64 0, i32 0, !dbg !8412
  %28 = load i32, i32* %rt_int18, align 8, !dbg !8412
  %call123 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base115, i32 %28) #7, !dbg !8412
  %call124 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base109, i32 %call123) #7, !dbg !8412
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call124, i64 0, i32 10, !dbg !8412
  store i32 %25, i32* %sched_cycle, align 8, !dbg !8413
  %29 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8414
  %base127 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %29, i64 0, i32 0, !dbg !8414
  %30 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8414
  %base133 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %30, i64 0, i32 0, !dbg !8414
  %31 = load i32, i32* %rt_int18, align 8, !dbg !8414
  %call141 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base133, i32 %31) #7, !dbg !8414
  %call142 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base127, i32 %call141) #7, !dbg !8414
  %sched_cycle143 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call142, i64 0, i32 10, !dbg !8414
  %32 = load i32, i32* %sched_cycle143, align 8, !dbg !8414
  %u144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !8415
  %33 = getelementptr inbounds %union.u, %union.u* %u144, i64 1, i32 0, i32 0, i64 1, !dbg !8415
  %rt_int147 = bitcast %union.rtunion_def* %33 to i32*, !dbg !8415
  %34 = load i32, i32* %rt_int147, align 8, !dbg !8415
  %cmp148 = icmp slt i32 %34, 0, !dbg !8416
  br i1 %cmp148, label %cond.end152, label %cond.false150, !dbg !8415

cond.false150:                                    ; preds = %if.end25
  %call151 = tail call i32 @maximal_insn_latency(%struct.rtx_def* %insn) #6, !dbg !8417
  %add = add nsw i32 %call151, 1, !dbg !8418
  br label %cond.end152, !dbg !8415

cond.end152:                                      ; preds = %if.end25, %cond.false150
  %cond153 = phi i32 [ %add, %cond.false150 ], [ 1, %if.end25 ], !dbg !8415
  %add154 = add nsw i32 %32, %cond153, !dbg !8419
  %35 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8420
  %base157 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %35, i64 0, i32 0, !dbg !8420
  %36 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8420
  %base163 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %36, i64 0, i32 0, !dbg !8420
  %37 = load i32, i32* %rt_int18, align 8, !dbg !8420
  %call171 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base163, i32 %37) #7, !dbg !8420
  %call172 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base157, i32 %call171) #7, !dbg !8420
  %ready_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call172, i64 0, i32 11, !dbg !8420
  store i32 %add154, i32* %ready_cycle, align 4, !dbg !8421
  %bf.load174 = load i8, i8* %after_stall_p, align 8, !dbg !8422
  %bf.clear175 = and i8 %bf.load174, -9, !dbg !8422
  store i8 %bf.clear175, i8* %after_stall_p, align 8, !dbg !8422
  %tobool176 = icmp ne i8 %call, 0, !dbg !8423
  %tobool177 = icmp ne i32 %need_stall, 0, !dbg !8425
  %or.cond = or i1 %tobool176, %tobool177, !dbg !8426
  br i1 %or.cond, label %if.then178, label %if.end179, !dbg !8426

if.then178:                                       ; preds = %cond.end152
  tail call fastcc void @advance_one_cycle(%struct._fence* %fence) #7, !dbg !8427
  %bf.load180.pre = load i8, i8* %after_stall_p, align 8, !dbg !8428
  br label %if.end179, !dbg !8427

if.end179:                                        ; preds = %cond.end152, %if.then178
  %bf.load180 = phi i8 [ %bf.clear175, %cond.end152 ], [ %bf.load180.pre, %if.then178 ], !dbg !8428
  %bf.set182 = or i8 %bf.load180, 2, !dbg !8428
  store i8 %bf.set182, i8* %after_stall_p, align 8, !dbg !8428
  store i1 true, i1* @scheduled_something_on_previous_fence, align 1, !dbg !8429
  %38 = load i32, i32* @sched_verbose, align 4, !dbg !8430
  %cmp183 = icmp sgt i32 %38, 1, !dbg !8431
  br i1 %cmp183, label %do.body, label %if.end222, !dbg !8432

do.body:                                          ; preds = %if.end179
  %39 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8433
  %tobool186 = icmp eq i8 %39, 0, !dbg !8433
  br i1 %tobool186, label %if.else196, label %do.body188, !dbg !8434

do.body188:                                       ; preds = %do.body
  %call189 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !8435
  %mul = shl nsw i32 %call189, 1, !dbg !8435
  %add190 = or i32 %mul, 1, !dbg !8435
  call void @llvm.dbg.value(metadata i32 %add190, metadata !8366, metadata !DIExpression()), !dbg !8436
  %conv191 = sext i32 %add190 to i64, !dbg !8435
  %40 = alloca i8, i64 %conv191, align 16, !dbg !8435
  call void @llvm.dbg.value(metadata i8* %40, metadata !8372, metadata !DIExpression()), !dbg !8436
  %call194 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %40, i64 %conv191, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !8435
  call void @sel_prepare_string_for_dot_label(i8* nonnull %40) #6, !dbg !8435
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8435
  %call195 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %40) #6, !dbg !8435
  br label %do.end200, !dbg !8435

if.else196:                                       ; preds = %do.body
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8433
  %call197 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !8433
  br label %do.end200

do.end200:                                        ; preds = %if.else196, %do.body188
  call void @dump_insn_1(%struct.rtx_def* %insn, i32 1) #6, !dbg !8437
  %43 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8438
  %tobool202 = icmp eq i8 %43, 0, !dbg !8438
  br i1 %tobool202, label %if.else217, label %do.body204, !dbg !8439

do.body204:                                       ; preds = %do.end200
  %call206 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8440
  %mul207 = shl nsw i32 %call206, 1, !dbg !8440
  %add208 = or i32 %mul207, 1, !dbg !8440
  call void @llvm.dbg.value(metadata i32 %add208, metadata !8373, metadata !DIExpression()), !dbg !8441
  %conv210 = sext i32 %add208 to i64, !dbg !8440
  %44 = alloca i8, i64 %conv210, align 16, !dbg !8440
  call void @llvm.dbg.value(metadata i8* %44, metadata !8377, metadata !DIExpression()), !dbg !8441
  %call213 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %44, i64 %conv210, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8440
  call void @sel_prepare_string_for_dot_label(i8* nonnull %44) #6, !dbg !8440
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8440
  %call214 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %44) #6, !dbg !8440
  br label %if.end222, !dbg !8440

if.else217:                                       ; preds = %do.end200
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8438
  %call218 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8438
  br label %if.end222

if.end222:                                        ; preds = %do.body204, %if.else217, %if.end179
  ret void, !dbg !8442
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._list_node** @update_boundaries(%struct._fence* %fence, %struct._bnd* %bnd, %struct.rtx_def* %insn, %struct._list_node** %bndsp, %struct._list_node** %bnds_tailp) unnamed_addr #5 !dbg !8443 {
entry:
  %si = alloca %struct.succ_iterator, align 8
  %succ = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  %ptr = alloca %struct._list_node*, align 8
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !8447, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %struct._bnd* %bnd, metadata !8448, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8449, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %struct._list_node** %bndsp, metadata !8450, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp, metadata !8451, metadata !DIExpression()), !dbg !8466
  %0 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !8467
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #8, !dbg !8467
  %1 = bitcast %struct.rtx_def** %succ to i8*, !dbg !8468
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8468
  %dc = getelementptr inbounds %struct._bnd, %struct._bnd* %bnd, i64 0, i32 4, !dbg !8469
  %2 = load %struct.deps*, %struct.deps** %dc, align 8, !dbg !8469
  tail call void @advance_deps_context(%struct.deps* %2, %struct.rtx_def* %insn) #6, !dbg !8470
  %3 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !8471
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #8, !dbg !8471
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !8453, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i32 9) #7, !dbg !8471
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 64, i1 false), !dbg !8471
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #8, !dbg !8471
  %4 = bitcast %struct._list_node** %ptr to i8*, !dbg !8472
  %ptr1 = getelementptr inbounds %struct._bnd, %struct._bnd* %bnd, i64 0, i32 1, !dbg !8472
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !8473
  %insn9 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 0, !dbg !8475
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8476
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8476
  %6 = bitcast %struct.rtx_def** %succ to i64*, !dbg !8477
  %7 = bitcast %struct._fence* %fence to i64*, !dbg !8477
  br label %for.cond, !dbg !8471

for.cond:                                         ; preds = %cleanup, %entry
  %bnds_tailp.addr.0 = phi %struct._list_node** [ %bnds_tailp, %entry ], [ %bnds_tailp.addr.1, %cleanup ]
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.addr.0, metadata !8451, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !8452, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !8453, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  %call = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #7, !dbg !8478
  %tobool = icmp eq i8 %call, 0, !dbg !8471
  br i1 %tobool, label %for.end, label %for.body, !dbg !8471

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !8479
  %8 = load %struct._list_node*, %struct._list_node** %ptr1, align 8, !dbg !8480
  %call2 = call %struct._list_node* @ilist_copy(%struct._list_node* %8) #6, !dbg !8481
  call void @llvm.dbg.value(metadata %struct._list_node* %call2, metadata !8454, metadata !DIExpression()), !dbg !8472
  store %struct._list_node* %call2, %struct._list_node** %ptr, align 8, !dbg !8482
  call void @llvm.dbg.value(metadata %struct._list_node** %ptr, metadata !8454, metadata !DIExpression(DW_OP_deref)), !dbg !8472
  call fastcc void @_xlist_add(%struct._list_node** nonnull %ptr, %struct.rtx_def* %insn) #7, !dbg !8483
  %bf.load = load i32, i32* %5, align 8, !dbg !8484
  %bf.clear = and i32 %bf.load, 65535, !dbg !8484
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !8484
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8485

land.lhs.true:                                    ; preds = %for.body
  %call3 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %insn) #6, !dbg !8486
  %tobool4 = icmp eq i8 %call3, 0, !dbg !8486
  br i1 %tobool4, label %if.end, label %land.lhs.true5, !dbg !8487

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !8488
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !8453, metadata !DIExpression()), !dbg !8466
  %10 = load %struct._list_node*, %struct._list_node** %ptr, align 8, !dbg !8489
  call void @llvm.dbg.value(metadata %struct._list_node* %10, metadata !8454, metadata !DIExpression()), !dbg !8472
  %call6 = call fastcc zeroext i8 @is_ineligible_successor(%struct.rtx_def* %9, %struct._list_node* %10) #7, !dbg !8490
  %tobool8 = icmp eq i8 %call6, 0, !dbg !8490
  br i1 %tobool8, label %if.end, label %if.then, !dbg !8491

if.then:                                          ; preds = %land.lhs.true5
  call void @llvm.dbg.value(metadata %struct._list_node** %ptr, metadata !8454, metadata !DIExpression(DW_OP_deref)), !dbg !8472
  call fastcc void @_list_clear(%struct._list_node** nonnull %ptr) #7, !dbg !8492
  br label %cleanup, !dbg !8494

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn9, align 8, !dbg !8495
  %cmp10 = icmp eq %struct.rtx_def* %11, %insn, !dbg !8496
  br i1 %cmp10, label %land.lhs.true12, label %if.end54, !dbg !8497

land.lhs.true12:                                  ; preds = %if.end
  %call13 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %insn) #6, !dbg !8498
  %tobool14 = icmp eq i8 %call13, 0, !dbg !8498
  br i1 %tobool14, label %if.then15, label %if.end54, !dbg !8499

if.then15:                                        ; preds = %land.lhs.true12
  %12 = load i32, i32* @sched_verbose, align 4, !dbg !8500
  %cmp16 = icmp sgt i32 %12, 8, !dbg !8501
  br i1 %cmp16, label %do.body, label %if.end52, !dbg !8502

do.body:                                          ; preds = %if.then15
  %13 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8503
  %tobool19 = icmp eq i8 %13, 0, !dbg !8503
  br i1 %tobool19, label %if.else, label %do.body21, !dbg !8504

do.body21:                                        ; preds = %do.body
  %14 = load i32, i32* %rt_int, align 8, !dbg !8505
  %15 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !8505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !8453, metadata !DIExpression()), !dbg !8466
  %arrayidx24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8505
  %rt_int25 = bitcast %union.rtunion_def* %arrayidx24 to i32*, !dbg !8505
  %16 = load i32, i32* %rt_int25, align 8, !dbg !8505
  %call26 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i32 %14, i32 %16) #6, !dbg !8505
  %mul = shl nsw i32 %call26, 1, !dbg !8505
  %add = or i32 %mul, 1, !dbg !8505
  call void @llvm.dbg.value(metadata i32 %add, metadata !8458, metadata !DIExpression()), !dbg !8476
  %conv27 = sext i32 %add to i64, !dbg !8505
  %17 = alloca i8, i64 %conv27, align 16, !dbg !8505
  call void @llvm.dbg.value(metadata i8* %17, metadata !8465, metadata !DIExpression()), !dbg !8476
  %18 = load i32, i32* %rt_int, align 8, !dbg !8505
  %19 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !8505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !8453, metadata !DIExpression()), !dbg !8466
  %arrayidx36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8505
  %rt_int37 = bitcast %union.rtunion_def* %arrayidx36 to i32*, !dbg !8505
  %20 = load i32, i32* %rt_int37, align 8, !dbg !8505
  %call38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %17, i64 %conv27, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i32 %18, i32 %20) #6, !dbg !8505
  call void @sel_prepare_string_for_dot_label(i8* nonnull %17) #6, !dbg !8505
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8505
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %17) #6, !dbg !8505
  br label %if.end52, !dbg !8505

if.else:                                          ; preds = %do.body
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8503
  %23 = load i32, i32* %rt_int, align 8, !dbg !8503
  %24 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !8503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %24, metadata !8453, metadata !DIExpression()), !dbg !8466
  %arrayidx46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8503
  %rt_int47 = bitcast %union.rtunion_def* %arrayidx46 to i32*, !dbg !8503
  %25 = load i32, i32* %rt_int47, align 8, !dbg !8503
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i32 %23, i32 %25) #6, !dbg !8503
  br label %if.end52

if.end52:                                         ; preds = %do.body21, %if.else, %if.then15
  %26 = load i64, i64* %6, align 8, !dbg !8506
  store i64 %26, i64* %7, align 8, !dbg !8507
  br label %if.end54, !dbg !8508

if.end54:                                         ; preds = %land.lhs.true12, %if.end52, %if.end
  %27 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !8509
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !8453, metadata !DIExpression()), !dbg !8466
  %28 = load %struct._list_node*, %struct._list_node** %ptr, align 8, !dbg !8510
  call void @llvm.dbg.value(metadata %struct._list_node* %28, metadata !8454, metadata !DIExpression()), !dbg !8472
  %29 = load %struct.deps*, %struct.deps** %dc, align 8, !dbg !8511
  call void @blist_add(%struct._list_node** %bnds_tailp.addr.0, %struct.rtx_def* %27, %struct._list_node* %28, %struct.deps* %29) #6, !dbg !8512
  %30 = load %struct._list_node*, %struct._list_node** %bnds_tailp.addr.0, align 8, !dbg !8513
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %30, i64 0, i32 0, !dbg !8513
  call void @llvm.dbg.value(metadata %struct._list_node** %next, metadata !8451, metadata !DIExpression()), !dbg !8466
  br label %cleanup, !dbg !8514

cleanup:                                          ; preds = %if.end54, %if.then
  %bnds_tailp.addr.1 = phi %struct._list_node** [ %bnds_tailp.addr.0, %if.then ], [ %next, %if.end54 ]
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.addr.1, metadata !8451, metadata !DIExpression()), !dbg !8466
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !8514
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !8452, metadata !DIExpression(DW_OP_deref)), !dbg !8466
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #7, !dbg !8478
  br label %for.cond, !dbg !8478, !llvm.loop !8515

for.end:                                          ; preds = %for.cond
  %bnds_tailp.addr.0.lcssa = phi %struct._list_node** [ %bnds_tailp.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.addr.0.lcssa, metadata !8451, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.addr.0.lcssa, metadata !8451, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %struct._list_node** %bnds_tailp.addr.0.lcssa, metadata !8451, metadata !DIExpression()), !dbg !8466
  call void @blist_remove(%struct._list_node** %bndsp) #6, !dbg !8517
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8518
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #8, !dbg !8518
  ret %struct._list_node** %bnds_tailp.addr.0.lcssa, !dbg !8519
}

declare dso_local void @blist_remove(%struct._list_node**) local_unnamed_addr #2

declare dso_local void @reset_target_context(i8*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @dump_blist(%struct._list_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @moveup_set_inside_insn_group(%struct._list_node** %avp, %struct._list_node* %path) unnamed_addr #5 !dbg !8520 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %avp, metadata !8524, metadata !DIExpression()), !dbg !8533
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !8525, metadata !DIExpression()), !dbg !8533
  %0 = load i32, i32* @sched_verbose, align 4, !dbg !8534
  %cmp = icmp sgt i32 %0, 5, !dbg !8535
  br i1 %cmp, label %do.body, label %if.end10, !dbg !8536

do.body:                                          ; preds = %entry
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8537
  %tobool = icmp eq i8 %1, 0, !dbg !8537
  br i1 %tobool, label %if.else, label %do.body2, !dbg !8538

do.body2:                                         ; preds = %do.body
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !8539
  %mul = shl nsw i32 %call, 1, !dbg !8539
  %add = or i32 %mul, 1, !dbg !8539
  call void @llvm.dbg.value(metadata i32 %add, metadata !8527, metadata !DIExpression()), !dbg !8540
  %conv = sext i32 %add to i64, !dbg !8539
  %2 = alloca i8, i64 %conv, align 16, !dbg !8539
  call void @llvm.dbg.value(metadata i8* %2, metadata !8532, metadata !DIExpression()), !dbg !8540
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %2, i64 %conv, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !8539
  call void @sel_prepare_string_for_dot_label(i8* nonnull %2) #6, !dbg !8539
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8539
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %2) #6, !dbg !8539
  br label %if.end10, !dbg !8539

if.else:                                          ; preds = %do.body
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8537
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !8537
  br label %if.end10

if.end10:                                         ; preds = %do.body2, %if.else, %entry
  ret void, !dbg !8541
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct._expr* @fill_ready_list(%struct._list_node** %av_ptr, %struct._list_node* %bnds, %struct._fence* %fence, i32* %pneed_stall) unnamed_addr #5 !dbg !8542 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %av_ptr, metadata !8544, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds, metadata !8545, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !8546, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i32* %pneed_stall, metadata !8547, metadata !DIExpression()), !dbg !8549
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds, i64 0, i32 0, !dbg !8550
  %0 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !8550
  %cmp = icmp eq %struct._list_node* %0, null, !dbg !8550
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8550

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4006, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8550
  br label %cond.end, !dbg !8550

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @process_pipelined_exprs(%struct._list_node** %av_ptr) #7, !dbg !8551
  tail call fastcc void @process_spec_exprs(%struct._list_node** %av_ptr) #7, !dbg !8552
  %call = tail call fastcc %struct._expr* @process_use_exprs(%struct._list_node** %av_ptr) #7, !dbg !8553
  call void @llvm.dbg.value(metadata %struct._expr* %call, metadata !8548, metadata !DIExpression()), !dbg !8549
  %tobool = icmp eq %struct._expr* %call, null, !dbg !8554
  br i1 %tobool, label %if.end, label %if.then, !dbg !8556

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %pneed_stall, align 4, !dbg !8557
  br label %cleanup, !dbg !8559

if.end:                                           ; preds = %cond.end
  %1 = load %struct._list_node*, %struct._list_node** %av_ptr, align 8, !dbg !8560
  %call1 = tail call fastcc zeroext i8 @fill_vec_av_set(%struct._list_node* %1, %struct._list_node* %bnds, %struct._fence* %fence, i32* %pneed_stall) #7, !dbg !8562
  %tobool2 = icmp eq i8 %call1, 0, !dbg !8562
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8563

if.then3:                                         ; preds = %if.end
  store i32 0, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8564
  br label %cleanup, !dbg !8566

if.end4:                                          ; preds = %if.end
  tail call fastcc void @convert_vec_av_set_to_ready() #7, !dbg !8567
  br label %cleanup, !dbg !8568

cleanup:                                          ; preds = %if.end4, %if.then3, %if.then
  %retval.0 = phi %struct._expr* [ %call, %if.then ], [ null, %if.end4 ], [ null, %if.then3 ], !dbg !8549
  ret %struct._expr* %retval.0, !dbg !8569
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @invoke_reorder_hooks(%struct._fence* %fence) unnamed_addr #5 !dbg !8570 {
entry:
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !8574, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata i8 0, metadata !8576, metadata !DIExpression()), !dbg !8589
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 3, !dbg !8590
  %0 = load i32, i32* %cycle_issued_insns, align 4, !dbg !8590
  %cmp = icmp eq i32 %0, 0, !dbg !8592
  br i1 %cmp, label %if.then, label %if.else13, !dbg !8593

if.then:                                          ; preds = %entry
  %1 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 8), align 8, !dbg !8594
  %tobool = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* %1, null, !dbg !8597
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !8598

land.lhs.true:                                    ; preds = %if.then
  %call = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #6, !dbg !8599
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !8599
  %bf.load = load i32, i32* %2, align 8, !dbg !8599
  %bf.clear = and i32 %bf.load, 268435456, !dbg !8599
  %tobool1 = icmp eq i32 %bf.clear, 0, !dbg !8599
  %3 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8600
  %cmp3 = icmp sgt i32 %3, 1, !dbg !8601
  %or.cond = and i1 %tobool1, %cmp3, !dbg !8602
  br i1 %or.cond, label %if.then4, label %if.else, !dbg !8602

if.then4:                                         ; preds = %land.lhs.true
  %4 = load i8, i8* @pipelining_p, align 1, !dbg !8603
  %tobool5 = icmp eq i8 %4, 0, !dbg !8603
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !8606

if.then6:                                         ; preds = %if.then4
  %dec = add nsw i32 %3, -1, !dbg !8607
  store i32 %dec, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8607
  br label %if.end, !dbg !8607

if.end:                                           ; preds = %if.then4, %if.then6
  %5 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 8), align 8, !dbg !8608
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8609
  %7 = load i32, i32* @sched_verbose, align 4, !dbg !8610
  %call7 = tail call %struct.rtx_def** @ready_lastpos(%struct.ready_list* nonnull @ready) #6, !dbg !8611
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !8612
  %8 = load i32, i32* %cycle, align 8, !dbg !8612
  %call8 = tail call i32 %5(%struct._IO_FILE* %6, i32 %7, %struct.rtx_def** %call7, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), i32 %8) #6, !dbg !8613
  call void @llvm.dbg.value(metadata i32 %call8, metadata !8575, metadata !DIExpression()), !dbg !8589
  %9 = load i8, i8* @pipelining_p, align 1, !dbg !8614
  %tobool9 = icmp eq i8 %9, 0, !dbg !8614
  br i1 %tobool9, label %if.end44, label %if.then10, !dbg !8616

if.then10:                                        ; preds = %if.end
  %10 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8617
  %inc = add nsw i32 %10, 1, !dbg !8617
  store i32 %inc, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8617
  br label %if.end44, !dbg !8617

if.else:                                          ; preds = %if.then, %land.lhs.true
  %11 = load i32, i32* @issue_rate, align 4, !dbg !8618
  call void @llvm.dbg.value(metadata i32 %11, metadata !8575, metadata !DIExpression()), !dbg !8589
  br label %if.end44

if.else13:                                        ; preds = %entry
  %12 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 9), align 8, !dbg !8619
  %tobool14 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* %12, null, !dbg !8621
  br i1 %tobool14, label %if.else41, label %land.lhs.true15, !dbg !8622

land.lhs.true15:                                  ; preds = %if.else13
  %call16 = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #6, !dbg !8623
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call16, i64 0, i32 0, !dbg !8623
  %bf.load17 = load i32, i32* %13, align 8, !dbg !8623
  %bf.clear19 = and i32 %bf.load17, 268435456, !dbg !8623
  %tobool20 = icmp eq i32 %bf.clear19, 0, !dbg !8623
  br i1 %tobool20, label %if.then21, label %if.else41, !dbg !8624

if.then21:                                        ; preds = %land.lhs.true15
  %14 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8625
  %cmp22 = icmp eq i32 %14, 1, !dbg !8628
  br i1 %cmp22, label %if.then23, label %if.else27, !dbg !8629

if.then23:                                        ; preds = %if.then21
  %15 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 9), align 8, !dbg !8630
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8631
  %17 = load i32, i32* @sched_verbose, align 4, !dbg !8632
  %call24 = tail call %struct.rtx_def** @ready_lastpos(%struct.ready_list* nonnull @ready) #6, !dbg !8633
  %cycle25 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !8634
  %18 = load i32, i32* %cycle25, align 8, !dbg !8634
  %call26 = tail call i32 %15(%struct._IO_FILE* %16, i32 %17, %struct.rtx_def** %call24, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), i32 %18) #6, !dbg !8635
  call void @llvm.dbg.value(metadata i32 %call26, metadata !8575, metadata !DIExpression()), !dbg !8589
  br label %if.end44, !dbg !8636

if.else27:                                        ; preds = %if.then21
  %19 = load i8, i8* @pipelining_p, align 1, !dbg !8637
  %tobool28 = icmp eq i8 %19, 0, !dbg !8637
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !8640

if.then29:                                        ; preds = %if.else27
  %dec30 = add nsw i32 %14, -1, !dbg !8641
  store i32 %dec30, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8641
  br label %if.end31, !dbg !8641

if.end31:                                         ; preds = %if.else27, %if.then29
  %20 = phi i32 [ %14, %if.else27 ], [ %dec30, %if.then29 ], !dbg !8642
  %21 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 9), align 8, !dbg !8643
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8644
  %23 = load i32, i32* @sched_verbose, align 4, !dbg !8645
  %tobool32 = icmp eq i32 %20, 0, !dbg !8646
  br i1 %tobool32, label %cond.end, label %cond.true, !dbg !8646

cond.true:                                        ; preds = %if.end31
  %call33 = tail call %struct.rtx_def** @ready_lastpos(%struct.ready_list* nonnull @ready) #6, !dbg !8647
  br label %cond.end, !dbg !8646

cond.end:                                         ; preds = %if.end31, %cond.true
  %cond = phi %struct.rtx_def** [ %call33, %cond.true ], [ null, %if.end31 ], !dbg !8646
  %cycle34 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !8648
  %24 = load i32, i32* %cycle34, align 8, !dbg !8648
  %call35 = tail call i32 %21(%struct._IO_FILE* %22, i32 %23, %struct.rtx_def** %cond, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), i32 %24) #6, !dbg !8649
  call void @llvm.dbg.value(metadata i32 %call35, metadata !8575, metadata !DIExpression()), !dbg !8589
  %25 = load i8, i8* @pipelining_p, align 1, !dbg !8650
  %tobool36 = icmp eq i8 %25, 0, !dbg !8650
  br i1 %tobool36, label %if.end44, label %if.then37, !dbg !8652

if.then37:                                        ; preds = %cond.end
  %26 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8653
  %inc38 = add nsw i32 %26, 1, !dbg !8653
  store i32 %inc38, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8653
  br label %if.end44, !dbg !8653

if.else41:                                        ; preds = %land.lhs.true15, %if.else13
  %issue_more42 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 11, !dbg !8654
  %27 = load i32, i32* %issue_more42, align 8, !dbg !8654
  call void @llvm.dbg.value(metadata i32 %27, metadata !8575, metadata !DIExpression()), !dbg !8589
  br label %if.end44

if.end44:                                         ; preds = %if.end, %cond.end, %if.else41, %if.then37, %if.then23, %if.else, %if.then10
  %ran_hook.2 = phi i1 [ false, %if.else ], [ true, %if.then10 ], [ true, %if.end ], [ false, %if.else41 ], [ true, %cond.end ], [ true, %if.then37 ], [ true, %if.then23 ]
  %issue_more.3 = phi i32 [ %11, %if.else ], [ %call8, %if.then10 ], [ %call8, %if.end ], [ %27, %if.else41 ], [ %call35, %cond.end ], [ %call35, %if.then37 ], [ %call26, %if.then23 ], !dbg !8655
  call void @llvm.dbg.value(metadata i32 %issue_more.3, metadata !8575, metadata !DIExpression()), !dbg !8589
  %tobool45 = icmp ne i32 %issue_more.3, 0, !dbg !8656
  %or.cond1 = and i1 %tobool45, %ran_hook.2, !dbg !8657
  br i1 %or.cond1, label %if.then48, label %if.end95, !dbg !8657

if.then48:                                        ; preds = %if.end44
  %28 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !8658
  call void @llvm.dbg.value(metadata %struct.rtx_def** %28, metadata !8582, metadata !DIExpression()), !dbg !8659
  %29 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !8660
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %29, i64 0, i32 0, !dbg !8660
  %call54 = tail call fastcc %struct._expr** @VEC_expr_t_base_address(%struct.VEC_expr_t_base* %base) #7, !dbg !8660
  call void @llvm.dbg.value(metadata %struct._expr** %call54, metadata !8583, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.value(metadata i32 0, metadata !8577, metadata !DIExpression()), !dbg !8659
  %30 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8661
  call void @llvm.dbg.value(metadata i32 %30, metadata !8581, metadata !DIExpression()), !dbg !8659
  %31 = sext i32 %30 to i64, !dbg !8662
  %32 = sext i32 %30 to i64, !dbg !8662
  br label %for.cond, !dbg !8662

for.cond:                                         ; preds = %for.inc92, %if.then48
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc92 ], [ 0, %if.then48 ], !dbg !8663
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8577, metadata !DIExpression()), !dbg !8659
  %cmp55 = icmp slt i64 %indvars.iv, %32, !dbg !8664
  br i1 %cmp55, label %for.body, label %if.end95.loopexit, !dbg !8665

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct._expr*, %struct._expr** %call54, i64 %indvars.iv, !dbg !8666
  %33 = load %struct._expr*, %struct._expr** %arrayidx, align 8, !dbg !8666
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %33, i64 0, i32 0, !dbg !8666
  %34 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8666
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %34, i64 0, i32 0, !dbg !8666
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !8666
  %arrayidx58 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %28, i64 %indvars.iv, !dbg !8667
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx58, align 8, !dbg !8667
  %cmp59 = icmp eq %struct.rtx_def* %35, %36, !dbg !8668
  %37 = ptrtoint %struct._expr* %33 to i64, !dbg !8669
  br i1 %cmp59, label %for.inc92, label %for.cond62.preheader, !dbg !8669

for.cond62.preheader:                             ; preds = %for.body
  %wide.trip.count = zext i32 %30 to i64, !dbg !8670
  br label %for.cond62, !dbg !8673

for.cond62:                                       ; preds = %for.cond62.preheader, %for.inc
  %indvars.iv3 = phi i64 [ %indvars.iv, %for.cond62.preheader ], [ %indvars.iv.next4, %for.inc ], !dbg !8674
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !8580, metadata !DIExpression()), !dbg !8659
  %cmp63 = icmp slt i64 %indvars.iv3, %31, !dbg !8670
  %exitcond = icmp eq i64 %indvars.iv3, %wide.trip.count, !dbg !8670
  br i1 %exitcond, label %for.end, label %for.body65, !dbg !8673

for.body65:                                       ; preds = %for.cond62
  %arrayidx67 = getelementptr inbounds %struct._expr*, %struct._expr** %call54, i64 %indvars.iv3, !dbg !8675
  %38 = load %struct._expr*, %struct._expr** %arrayidx67, align 8, !dbg !8675
  %vinsn68 = getelementptr inbounds %struct._expr, %struct._expr* %38, i64 0, i32 0, !dbg !8675
  %39 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn68, align 8, !dbg !8675
  %insn_rtx69 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %39, i64 0, i32 0, !dbg !8675
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx69, align 8, !dbg !8675
  %cmp72 = icmp eq %struct.rtx_def* %40, %36, !dbg !8677
  br i1 %cmp72, label %for.end, label %for.inc, !dbg !8678

for.inc:                                          ; preds = %for.body65
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !8679
  call void @llvm.dbg.value(metadata i32 undef, metadata !8580, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8659
  br label %for.cond62, !dbg !8680, !llvm.loop !8681

for.end:                                          ; preds = %for.cond62, %for.body65
  %indvars.iv3.lcssa = phi i64 [ %indvars.iv3, %for.cond62 ], [ %indvars.iv3, %for.body65 ], !dbg !8674
  %cmp63.lcssa = phi i1 [ %cmp63, %for.cond62 ], [ %cmp63, %for.body65 ], !dbg !8670
  call void @llvm.dbg.value(metadata i64 %indvars.iv3.lcssa, metadata !8580, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.value(metadata i64 %indvars.iv3.lcssa, metadata !8580, metadata !DIExpression()), !dbg !8659
  br i1 %cmp63.lcssa, label %for.end.cond.end81_crit_edge, label %cond.true79, !dbg !8683

for.end.cond.end81_crit_edge:                     ; preds = %for.end
  %.pre2 = bitcast %struct._expr** %arrayidx to i64*, !dbg !8684
  br label %cond.end81, !dbg !8683

cond.true79:                                      ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4140, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8683
  %.phi.trans.insert = bitcast %struct._expr** %arrayidx to i64*, !dbg !8685
  %.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !8684
  br label %cond.end81, !dbg !8683

cond.end81:                                       ; preds = %for.end.cond.end81_crit_edge, %cond.true79
  %.pre-phi = phi i64* [ %.pre2, %for.end.cond.end81_crit_edge ], [ %.phi.trans.insert, %cond.true79 ], !dbg !8684
  %41 = phi i64 [ %37, %for.end.cond.end81_crit_edge ], [ %.pre, %cond.true79 ], !dbg !8684
  %idxprom85 = and i64 %indvars.iv3.lcssa, 4294967295, !dbg !8686
  %arrayidx86 = getelementptr inbounds %struct._expr*, %struct._expr** %call54, i64 %idxprom85, !dbg !8686
  %42 = bitcast %struct._expr** %arrayidx86 to i64*, !dbg !8686
  %43 = load i64, i64* %42, align 8, !dbg !8686
  store i64 %43, i64* %.pre-phi, align 8, !dbg !8687
  store i64 %41, i64* %42, align 8, !dbg !8688
  br label %for.inc92, !dbg !8689

for.inc92:                                        ; preds = %for.body, %cond.end81
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8690
  call void @llvm.dbg.value(metadata i32 undef, metadata !8577, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8659
  br label %for.cond, !dbg !8691, !llvm.loop !8692

if.end95.loopexit:                                ; preds = %for.cond
  br label %if.end95, !dbg !8694

if.end95:                                         ; preds = %if.end95.loopexit, %if.end44
  ret i32 %issue_more.3, !dbg !8694
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @invoke_dfa_lookahead_guard() unnamed_addr #5 !dbg !8695 {
entry:
  %0 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 18), align 8, !dbg !8725
  %cmp = icmp eq i32 (%struct.rtx_def*)* %0, null, !dbg !8726
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !8699, metadata !DIExpression()), !dbg !8727
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !8728
  %cmp2 = icmp sgt i32 %1, 1, !dbg !8729
  br i1 %cmp2, label %do.body, label %if.end14, !dbg !8730

do.body:                                          ; preds = %entry
  %2 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8731
  %tobool = icmp eq i8 %2, 0, !dbg !8731
  br i1 %tobool, label %if.else, label %do.body5, !dbg !8732

do.body5:                                         ; preds = %do.body
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8733
  %mul = shl nsw i32 %call, 1, !dbg !8733
  %add = or i32 %mul, 1, !dbg !8733
  call void @llvm.dbg.value(metadata i32 %add, metadata !8700, metadata !DIExpression()), !dbg !8734
  %conv6 = sext i32 %add to i64, !dbg !8733
  %3 = alloca i8, i64 %conv6, align 16, !dbg !8733
  call void @llvm.dbg.value(metadata i8* %3, metadata !8705, metadata !DIExpression()), !dbg !8734
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %3, i64 %conv6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8733
  call void @sel_prepare_string_for_dot_label(i8* nonnull %3) #6, !dbg !8733
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8733
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %3) #6, !dbg !8733
  br label %if.end14, !dbg !8733

if.else:                                          ; preds = %do.body
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8731
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8731
  br label %if.end14

if.end14:                                         ; preds = %do.body5, %if.else, %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !8697, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 0, metadata !8698, metadata !DIExpression()), !dbg !8727
  br i1 %cmp, label %if.end14.split.us, label %if.end14.if.end14.split_crit_edge, !dbg !8735

if.end14.if.end14.split_crit_edge:                ; preds = %if.end14
  br label %for.cond, !dbg !8735

if.end14.split.us:                                ; preds = %if.end14
  br label %for.cond.us, !dbg !8735

for.cond.us:                                      ; preds = %for.inc.us, %if.end14.split.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.us ], [ 0, %if.end14.split.us ], !dbg !8736
  %n.0.us = phi i32 [ %spec.select.us, %for.inc.us ], [ 0, %if.end14.split.us ], !dbg !8736
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8697, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 %n.0.us, metadata !8698, metadata !DIExpression()), !dbg !8727
  %6 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8737
  %7 = sext i32 %6 to i64, !dbg !8738
  %cmp15.us = icmp slt i64 %indvars.iv, %7, !dbg !8738
  br i1 %cmp15.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !8739

for.body.us:                                      ; preds = %for.cond.us
  %8 = trunc i64 %indvars.iv to i32, !dbg !8740
  %call17.us = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %8) #6, !dbg !8740
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call17.us, metadata !8710, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i32 0, metadata !8711, metadata !DIExpression()), !dbg !8741
  %u.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call17.us, i64 0, i32 1, !dbg !8742
  %9 = getelementptr inbounds %union.u, %union.u* %u.us, i64 1, i32 0, i32 0, i64 1, !dbg !8742
  %rt_int.us = bitcast %union.rtunion_def* %9 to i32*, !dbg !8742
  %10 = load i32, i32* %rt_int.us, align 8, !dbg !8742
  %cmp26.us = icmp sgt i32 %10, -1, !dbg !8742
  br i1 %cmp26.us, label %cond.end.us, label %cond.true.us, !dbg !8742

cond.true.us:                                     ; preds = %for.body.us
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8742
  br label %cond.end.us, !dbg !8742

cond.end.us:                                      ; preds = %cond.true.us, %for.body.us
  %11 = load i8*, i8** @ready_try, align 8, !dbg !8743
  %arrayidx28.us = getelementptr inbounds i8, i8* %11, i64 %indvars.iv, !dbg !8743
  %12 = load i8, i8* %arrayidx28.us, align 1, !dbg !8743
  %cmp30.us = icmp eq i8 %12, 0, !dbg !8743
  br i1 %cmp30.us, label %cond.end34.us, label %cond.true32.us, !dbg !8743

cond.true32.us:                                   ; preds = %cond.end.us
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4200, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8743
  %.pre1 = load i8*, i8** @ready_try, align 8, !dbg !8744
  br label %cond.end34.us, !dbg !8743

cond.end34.us:                                    ; preds = %cond.true32.us, %cond.end.us
  %13 = phi i8* [ %.pre1, %cond.true32.us ], [ %11, %cond.end.us ], !dbg !8744
  %arrayidx38.us = getelementptr inbounds i8, i8* %13, i64 %indvars.iv, !dbg !8744
  store i8 0, i8* %arrayidx38.us, align 1, !dbg !8745
  %spec.select.us = add nuw nsw i32 %n.0.us, 1, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %spec.select.us, metadata !8698, metadata !DIExpression()), !dbg !8727
  %14 = trunc i64 %indvars.iv to i32, !dbg !8747
  %call42.us = call fastcc %struct._expr* @find_expr_for_ready(i32 %14, i8 zeroext 1) #7, !dbg !8747
  call void @llvm.dbg.value(metadata %struct._expr* %call42.us, metadata !8706, metadata !DIExpression()), !dbg !8741
  %15 = load i32, i32* @sched_verbose, align 4, !dbg !8748
  %cmp43.us = icmp sgt i32 %15, 1, !dbg !8749
  br i1 %cmp43.us, label %if.then45.us, label %for.inc.us, !dbg !8750

if.then45.us:                                     ; preds = %cond.end34.us
  %vinsn.us = getelementptr inbounds %struct._expr, %struct._expr* %call42.us, i64 0, i32 0, !dbg !8751
  %16 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn.us, align 8, !dbg !8751
  call void @dump_vinsn(%struct.vinsn_def* %16) #6, !dbg !8752
  %17 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8753
  %tobool47.us = icmp eq i8 %17, 0, !dbg !8753
  br i1 %tobool47.us, label %if.else68.us, label %do.body49.us, !dbg !8754

do.body49.us:                                     ; preds = %if.then45.us
  %18 = load i8*, i8** @ready_try, align 8, !dbg !8755
  %arrayidx52.us = getelementptr inbounds i8, i8* %18, i64 %indvars.iv, !dbg !8755
  %19 = load i8, i8* %arrayidx52.us, align 1, !dbg !8755
  %conv53.us = sext i8 %19 to i32, !dbg !8755
  %call54.us = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 %conv53.us) #6, !dbg !8755
  %mul55.us = shl nsw i32 %call54.us, 1, !dbg !8755
  %add56.us = or i32 %mul55.us, 1, !dbg !8755
  call void @llvm.dbg.value(metadata i32 %add56.us, metadata !8712, metadata !DIExpression()), !dbg !8756
  %conv58.us = sext i32 %add56.us to i64, !dbg !8755
  %20 = alloca i8, i64 %conv58.us, align 16, !dbg !8755
  call void @llvm.dbg.value(metadata i8* %20, metadata !8718, metadata !DIExpression()), !dbg !8756
  %21 = load i8*, i8** @ready_try, align 8, !dbg !8755
  %arrayidx62.us = getelementptr inbounds i8, i8* %21, i64 %indvars.iv, !dbg !8755
  %22 = load i8, i8* %arrayidx62.us, align 1, !dbg !8755
  %conv63.us = sext i8 %22 to i32, !dbg !8755
  %call64.us = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %20, i64 %conv58.us, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 %conv63.us) #6, !dbg !8755
  call void @sel_prepare_string_for_dot_label(i8* nonnull %20) #6, !dbg !8755
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8755
  %call65.us = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %20) #6, !dbg !8755
  br label %for.inc.us, !dbg !8755

if.else68.us:                                     ; preds = %if.then45.us
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8753
  %25 = load i8*, i8** @ready_try, align 8, !dbg !8753
  %arrayidx70.us = getelementptr inbounds i8, i8* %25, i64 %indvars.iv, !dbg !8753
  %26 = load i8, i8* %arrayidx70.us, align 1, !dbg !8753
  %conv71.us = sext i8 %26 to i32, !dbg !8753
  %call72.us = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 %conv71.us) #6, !dbg !8753
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.else68.us, %do.body49.us, %cond.end34.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8757
  call void @llvm.dbg.value(metadata i32 %spec.select.us, metadata !8697, metadata !DIExpression()), !dbg !8727
  br label %for.cond.us, !dbg !8758, !llvm.loop !8759

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  %n.0.us.lcssa = phi i32 [ %n.0.us, %for.cond.us ], !dbg !8736
  call void @llvm.dbg.value(metadata i32 %n.0.us.lcssa, metadata !8698, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 %n.0.us.lcssa, metadata !8698, metadata !DIExpression()), !dbg !8727
  br label %for.end, !dbg !8761

for.cond:                                         ; preds = %for.inc, %if.end14.if.end14.split_crit_edge
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc ], [ 0, %if.end14.if.end14.split_crit_edge ], !dbg !8736
  %n.0 = phi i32 [ %spec.select, %for.inc ], [ 0, %if.end14.if.end14.split_crit_edge ], !dbg !8736
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !8697, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !8698, metadata !DIExpression()), !dbg !8727
  %27 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8737
  %28 = sext i32 %27 to i64, !dbg !8738
  %cmp15 = icmp slt i64 %indvars.iv3, %28, !dbg !8738
  br i1 %cmp15, label %for.body, label %for.end.us-lcssa, !dbg !8739

for.body:                                         ; preds = %for.cond
  %29 = trunc i64 %indvars.iv3 to i32, !dbg !8740
  %call17 = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %29) #6, !dbg !8740
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call17, metadata !8710, metadata !DIExpression()), !dbg !8741
  %cmp19 = icmp eq i64 %indvars.iv3, 0, !dbg !8762
  br i1 %cmp19, label %if.end25, label %if.else22, !dbg !8764

if.else22:                                        ; preds = %for.body
  %30 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 18), align 8, !dbg !8765
  %call23 = call i32 %30(%struct.rtx_def* %call17) #6, !dbg !8766
  %tobool24 = icmp eq i32 %call23, 0, !dbg !8767
  %lnot.ext = zext i1 %tobool24 to i32, !dbg !8767
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !8711, metadata !DIExpression()), !dbg !8741
  br label %if.end25

if.end25:                                         ; preds = %for.body, %if.else22
  %r.0 = phi i32 [ %lnot.ext, %if.else22 ], [ 0, %for.body ], !dbg !8768
  call void @llvm.dbg.value(metadata i32 %r.0, metadata !8711, metadata !DIExpression()), !dbg !8741
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call17, i64 0, i32 1, !dbg !8742
  %31 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !8742
  %rt_int = bitcast %union.rtunion_def* %31 to i32*, !dbg !8742
  %32 = load i32, i32* %rt_int, align 8, !dbg !8742
  %cmp26 = icmp sgt i32 %32, -1, !dbg !8742
  br i1 %cmp26, label %cond.end, label %cond.true, !dbg !8742

cond.true:                                        ; preds = %if.end25
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8742
  br label %cond.end, !dbg !8742

cond.end:                                         ; preds = %if.end25, %cond.true
  %33 = load i8*, i8** @ready_try, align 8, !dbg !8743
  %arrayidx28 = getelementptr inbounds i8, i8* %33, i64 %indvars.iv3, !dbg !8743
  %34 = load i8, i8* %arrayidx28, align 1, !dbg !8743
  %cmp30 = icmp eq i8 %34, 0, !dbg !8743
  br i1 %cmp30, label %cond.end34, label %cond.true32, !dbg !8743

cond.true32:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4200, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8743
  %.pre = load i8*, i8** @ready_try, align 8, !dbg !8744
  br label %cond.end34, !dbg !8743

cond.end34:                                       ; preds = %cond.end, %cond.true32
  %35 = phi i8* [ %33, %cond.end ], [ %.pre, %cond.true32 ], !dbg !8744
  %conv36 = trunc i32 %r.0 to i8, !dbg !8769
  %arrayidx38 = getelementptr inbounds i8, i8* %35, i64 %indvars.iv3, !dbg !8744
  store i8 %conv36, i8* %arrayidx38, align 1, !dbg !8745
  %36 = xor i32 %r.0, 1, !dbg !8746
  %spec.select = add nuw nsw i32 %n.0, %36, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8698, metadata !DIExpression()), !dbg !8727
  %37 = trunc i64 %indvars.iv3 to i32, !dbg !8747
  %call42 = call fastcc %struct._expr* @find_expr_for_ready(i32 %37, i8 zeroext 1) #7, !dbg !8747
  call void @llvm.dbg.value(metadata %struct._expr* %call42, metadata !8706, metadata !DIExpression()), !dbg !8741
  %38 = load i32, i32* @sched_verbose, align 4, !dbg !8748
  %cmp43 = icmp sgt i32 %38, 1, !dbg !8749
  br i1 %cmp43, label %if.then45, label %for.inc, !dbg !8750

if.then45:                                        ; preds = %cond.end34
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %call42, i64 0, i32 0, !dbg !8751
  %39 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8751
  call void @dump_vinsn(%struct.vinsn_def* %39) #6, !dbg !8752
  %40 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8753
  %tobool47 = icmp eq i8 %40, 0, !dbg !8753
  br i1 %tobool47, label %if.else68, label %do.body49, !dbg !8754

do.body49:                                        ; preds = %if.then45
  %41 = load i8*, i8** @ready_try, align 8, !dbg !8755
  %arrayidx52 = getelementptr inbounds i8, i8* %41, i64 %indvars.iv3, !dbg !8755
  %42 = load i8, i8* %arrayidx52, align 1, !dbg !8755
  %conv53 = sext i8 %42 to i32, !dbg !8755
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 %conv53) #6, !dbg !8755
  %mul55 = shl nsw i32 %call54, 1, !dbg !8755
  %add56 = or i32 %mul55, 1, !dbg !8755
  call void @llvm.dbg.value(metadata i32 %add56, metadata !8712, metadata !DIExpression()), !dbg !8756
  %conv58 = sext i32 %add56 to i64, !dbg !8755
  %43 = alloca i8, i64 %conv58, align 16, !dbg !8755
  call void @llvm.dbg.value(metadata i8* %43, metadata !8718, metadata !DIExpression()), !dbg !8756
  %44 = load i8*, i8** @ready_try, align 8, !dbg !8755
  %arrayidx62 = getelementptr inbounds i8, i8* %44, i64 %indvars.iv3, !dbg !8755
  %45 = load i8, i8* %arrayidx62, align 1, !dbg !8755
  %conv63 = sext i8 %45 to i32, !dbg !8755
  %call64 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %43, i64 %conv58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 %conv63) #6, !dbg !8755
  call void @sel_prepare_string_for_dot_label(i8* nonnull %43) #6, !dbg !8755
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8755
  %call65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %43) #6, !dbg !8755
  br label %for.inc, !dbg !8755

if.else68:                                        ; preds = %if.then45
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8753
  %48 = load i8*, i8** @ready_try, align 8, !dbg !8753
  %arrayidx70 = getelementptr inbounds i8, i8* %48, i64 %indvars.iv3, !dbg !8753
  %49 = load i8, i8* %arrayidx70, align 1, !dbg !8753
  %conv71 = sext i8 %49 to i32, !dbg !8753
  %call72 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 %conv71) #6, !dbg !8753
  br label %for.inc

for.inc:                                          ; preds = %cond.end34, %if.else68, %do.body49
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !8757
  call void @llvm.dbg.value(metadata i32 undef, metadata !8697, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8727
  br label %for.cond, !dbg !8758, !llvm.loop !8759

for.end.us-lcssa:                                 ; preds = %for.cond
  %n.0.lcssa5 = phi i32 [ %n.0, %for.cond ], !dbg !8736
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa5, metadata !8698, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa5, metadata !8698, metadata !DIExpression()), !dbg !8727
  br label %for.end, !dbg !8761

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %n.0.lcssa = phi i32 [ %n.0.lcssa5, %for.end.us-lcssa ], [ %n.0.us.lcssa, %for.end.us-lcssa.us ], !dbg !8736
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !8698, metadata !DIExpression()), !dbg !8727
  %50 = load i32, i32* @sched_verbose, align 4, !dbg !8761
  %cmp78 = icmp sgt i32 %50, 1, !dbg !8770
  br i1 %cmp78, label %do.body81, label %if.end102, !dbg !8771

do.body81:                                        ; preds = %for.end
  %51 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8772
  %tobool82 = icmp eq i8 %51, 0, !dbg !8772
  br i1 %tobool82, label %if.else97, label %do.body84, !dbg !8773

do.body84:                                        ; preds = %do.body81
  %call86 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8774
  %mul87 = shl nsw i32 %call86, 1, !dbg !8774
  %add88 = or i32 %mul87, 1, !dbg !8774
  call void @llvm.dbg.value(metadata i32 %add88, metadata !8719, metadata !DIExpression()), !dbg !8775
  %conv90 = sext i32 %add88 to i64, !dbg !8774
  %52 = alloca i8, i64 %conv90, align 16, !dbg !8774
  call void @llvm.dbg.value(metadata i8* %52, metadata !8724, metadata !DIExpression()), !dbg !8775
  %call93 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %52, i64 %conv90, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8774
  call void @sel_prepare_string_for_dot_label(i8* nonnull %52) #6, !dbg !8774
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8774
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %52) #6, !dbg !8774
  br label %if.end102, !dbg !8774

if.else97:                                        ; preds = %do.body81
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8772
  %call98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8772
  br label %if.end102

if.end102:                                        ; preds = %do.body84, %if.else97, %for.end
  ret i32 %n.0.lcssa, !dbg !8776
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @calculate_privileged_insns() unnamed_addr #5 !dbg !8777 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* null, metadata !8780, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 0, metadata !8781, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 0, metadata !8782, metadata !DIExpression()), !dbg !8789
  br label %for.cond, !dbg !8790

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !8792
  %privileged_n.0 = phi i32 [ %privileged_n.1, %for.inc ], [ 0, %entry ], !dbg !8792
  %min_spec_expr.0 = phi %struct._expr* [ %min_spec_expr.2, %for.inc ], [ null, %entry ], !dbg !8793
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8782, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata %struct._expr* %min_spec_expr.0, metadata !8780, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %privileged_n.0, metadata !8781, metadata !DIExpression()), !dbg !8789
  %0 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8794
  %1 = sext i32 %0 to i64, !dbg !8796
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !8796
  br i1 %cmp, label %for.body, label %for.end.loopexit, !dbg !8797

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** @ready_try, align 8, !dbg !8798
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %indvars.iv, !dbg !8798
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8798
  %tobool = icmp eq i8 %3, 0, !dbg !8798
  br i1 %tobool, label %if.end, label %for.inc, !dbg !8801

if.end:                                           ; preds = %for.body
  %tobool1 = icmp eq %struct._expr* %min_spec_expr.0, null, !dbg !8802
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !8804

if.then2:                                         ; preds = %if.end
  %4 = trunc i64 %indvars.iv to i32, !dbg !8805
  %call = tail call fastcc %struct._expr* @find_expr_for_ready(i32 %4, i8 zeroext 1) #7, !dbg !8805
  call void @llvm.dbg.value(metadata %struct._expr* %call, metadata !8780, metadata !DIExpression()), !dbg !8789
  br label %if.end3, !dbg !8806

if.end3:                                          ; preds = %if.end, %if.then2
  %min_spec_expr.1 = phi %struct._expr* [ %min_spec_expr.0, %if.end ], [ %call, %if.then2 ], !dbg !8789
  call void @llvm.dbg.value(metadata %struct._expr* %min_spec_expr.1, metadata !8780, metadata !DIExpression()), !dbg !8789
  %5 = trunc i64 %indvars.iv to i32, !dbg !8807
  %call4 = tail call fastcc %struct._expr* @find_expr_for_ready(i32 %5, i8 zeroext 1) #7, !dbg !8807
  call void @llvm.dbg.value(metadata %struct._expr* %call4, metadata !8779, metadata !DIExpression()), !dbg !8789
  %spec = getelementptr inbounds %struct._expr, %struct._expr* %call4, i64 0, i32 1, !dbg !8808
  %6 = load i32, i32* %spec, align 8, !dbg !8808
  %spec5 = getelementptr inbounds %struct._expr, %struct._expr* %min_spec_expr.1, i64 0, i32 1, !dbg !8810
  %7 = load i32, i32* %spec5, align 8, !dbg !8810
  %cmp6 = icmp sgt i32 %6, %7, !dbg !8811
  br i1 %cmp6, label %if.end3.for.end_crit_edge, label %if.end8, !dbg !8812

if.end3.for.end_crit_edge:                        ; preds = %if.end3
  %min_spec_expr.1.lcssa = phi %struct._expr* [ %min_spec_expr.1, %if.end3 ], !dbg !8789
  %indvars.iv.lcssa11 = phi i64 [ %indvars.iv, %if.end3 ], !dbg !8792
  %privileged_n.0.lcssa9 = phi i32 [ %privileged_n.0, %if.end3 ], !dbg !8792
  call void @llvm.dbg.value(metadata %struct._expr* %min_spec_expr.1.lcssa, metadata !8780, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa11, metadata !8782, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %privileged_n.0.lcssa9, metadata !8781, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata %struct._expr* %min_spec_expr.1.lcssa, metadata !8780, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %privileged_n.0.lcssa9, metadata !8781, metadata !DIExpression()), !dbg !8789
  %.pre = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8813
  br label %for.end, !dbg !8812

if.end8:                                          ; preds = %if.end3
  %inc = add nsw i32 %privileged_n.0, 1, !dbg !8815
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8781, metadata !DIExpression()), !dbg !8789
  br label %for.inc, !dbg !8816

for.inc:                                          ; preds = %for.body, %if.end8
  %privileged_n.1 = phi i32 [ %inc, %if.end8 ], [ %privileged_n.0, %for.body ], !dbg !8789
  %min_spec_expr.2 = phi %struct._expr* [ %min_spec_expr.1, %if.end8 ], [ %min_spec_expr.0, %for.body ], !dbg !8793
  call void @llvm.dbg.value(metadata %struct._expr* %min_spec_expr.2, metadata !8780, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %privileged_n.1, metadata !8781, metadata !DIExpression()), !dbg !8789
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8817
  call void @llvm.dbg.value(metadata i32 undef, metadata !8782, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8789
  br label %for.cond, !dbg !8818, !llvm.loop !8819

for.end.loopexit:                                 ; preds = %for.cond
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %for.cond ], !dbg !8792
  %privileged_n.0.lcssa = phi i32 [ %privileged_n.0, %for.cond ], !dbg !8792
  %min_spec_expr.0.lcssa = phi %struct._expr* [ %min_spec_expr.0, %for.cond ], !dbg !8793
  %.lcssa = phi i32 [ %0, %for.cond ], !dbg !8794
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !8782, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %privileged_n.0.lcssa, metadata !8781, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata %struct._expr* %min_spec_expr.0.lcssa, metadata !8780, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %privileged_n.0.lcssa, metadata !8781, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata %struct._expr* %min_spec_expr.0.lcssa, metadata !8780, metadata !DIExpression()), !dbg !8789
  br label %for.end, !dbg !8821

for.end:                                          ; preds = %for.end.loopexit, %if.end3.for.end_crit_edge
  %indvars.iv12 = phi i64 [ %indvars.iv.lcssa11, %if.end3.for.end_crit_edge ], [ %indvars.iv.lcssa, %for.end.loopexit ]
  %privileged_n.010 = phi i32 [ %privileged_n.0.lcssa9, %if.end3.for.end_crit_edge ], [ %privileged_n.0.lcssa, %for.end.loopexit ]
  %8 = phi i32 [ %.pre, %if.end3.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !8813
  %min_spec_expr.3 = phi %struct._expr* [ %min_spec_expr.1.lcssa, %if.end3.for.end_crit_edge ], [ %min_spec_expr.0.lcssa, %for.end.loopexit ], !dbg !8793
  %i.03 = trunc i64 %indvars.iv12 to i32, !dbg !8789
  call void @llvm.dbg.value(metadata i32 %privileged_n.010, metadata !8781, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %privileged_n.010, metadata !8781, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %i.03, metadata !8782, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %i.03, metadata !8782, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata %struct._expr* %min_spec_expr.3, metadata !8780, metadata !DIExpression()), !dbg !8789
  %cmp10 = icmp eq i32 %8, %i.03, !dbg !8821
  %spec.select = select i1 %cmp10, i32 0, i32 %privileged_n.010, !dbg !8822
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8781, metadata !DIExpression()), !dbg !8789
  %9 = load i32, i32* @sched_verbose, align 4, !dbg !8823
  %cmp13 = icmp sgt i32 %9, 1, !dbg !8824
  br i1 %cmp13, label %do.body, label %if.end41, !dbg !8825

do.body:                                          ; preds = %for.end
  %10 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8826
  %tobool15 = icmp eq i8 %10, 0, !dbg !8826
  br i1 %tobool15, label %if.else, label %do.body17, !dbg !8827

do.body17:                                        ; preds = %do.body
  %tobool18 = icmp eq i32 %spec.select, 0, !dbg !8828
  br i1 %tobool18, label %cond.end, label %cond.true, !dbg !8828

cond.true:                                        ; preds = %do.body17
  %spec19 = getelementptr inbounds %struct._expr, %struct._expr* %min_spec_expr.3, i64 0, i32 1, !dbg !8828
  %11 = load i32, i32* %spec19, align 8, !dbg !8828
  br label %cond.end, !dbg !8828

cond.end:                                         ; preds = %do.body17, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ -1, %do.body17 ], !dbg !8828
  %call20 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.71, i64 0, i64 0), i32 %spec.select, i32 %cond) #6, !dbg !8828
  %mul = shl nsw i32 %call20, 1, !dbg !8828
  %add = or i32 %mul, 1, !dbg !8828
  call void @llvm.dbg.value(metadata i32 %add, metadata !8783, metadata !DIExpression()), !dbg !8829
  %conv = sext i32 %add to i64, !dbg !8828
  %12 = alloca i8, i64 %conv, align 16, !dbg !8828
  call void @llvm.dbg.value(metadata i8* %12, metadata !8788, metadata !DIExpression()), !dbg !8829
  br i1 %tobool18, label %cond.end27, label %cond.true24, !dbg !8828

cond.true24:                                      ; preds = %cond.end
  %spec25 = getelementptr inbounds %struct._expr, %struct._expr* %min_spec_expr.3, i64 0, i32 1, !dbg !8828
  %13 = load i32, i32* %spec25, align 8, !dbg !8828
  br label %cond.end27, !dbg !8828

cond.end27:                                       ; preds = %cond.end, %cond.true24
  %cond28 = phi i32 [ %13, %cond.true24 ], [ -1, %cond.end ], !dbg !8828
  %call29 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %12, i64 %conv, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.71, i64 0, i64 0), i32 %spec.select, i32 %cond28) #6, !dbg !8828
  call void @sel_prepare_string_for_dot_label(i8* nonnull %12) #6, !dbg !8828
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8828
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %12) #6, !dbg !8828
  br label %if.end41, !dbg !8828

if.else:                                          ; preds = %do.body
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8826
  %tobool31 = icmp eq i32 %spec.select, 0, !dbg !8826
  br i1 %tobool31, label %cond.end35, label %cond.true32, !dbg !8826

cond.true32:                                      ; preds = %if.else
  %spec33 = getelementptr inbounds %struct._expr, %struct._expr* %min_spec_expr.3, i64 0, i32 1, !dbg !8826
  %16 = load i32, i32* %spec33, align 8, !dbg !8826
  br label %cond.end35, !dbg !8826

cond.end35:                                       ; preds = %if.else, %cond.true32
  %cond36 = phi i32 [ %16, %cond.true32 ], [ -1, %if.else ], !dbg !8826
  %call37 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.71, i64 0, i64 0), i32 %spec.select, i32 %cond36) #6, !dbg !8826
  br label %if.end41

if.end41:                                         ; preds = %cond.end27, %cond.end35, %for.end
  ret i32 %spec.select, !dbg !8830
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @choose_best_insn(%struct._fence* %fence, i32 %privileged_n, i32* %index) unnamed_addr #5 !dbg !8831 {
entry:
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !8835, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata i32 %privileged_n, metadata !8836, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata i32* %index, metadata !8837, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata i32 0, metadata !8838, metadata !DIExpression()), !dbg !8861
  %0 = load i32, i32* @dfa_lookahead, align 4, !dbg !8862
  %cmp = icmp sgt i32 %0, 0, !dbg !8863
  br i1 %cmp, label %if.then, label %for.cond.preheader, !dbg !8864

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !8865

if.then:                                          ; preds = %entry
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 3, !dbg !8866
  %1 = load i32, i32* %cycle_issued_insns, align 4, !dbg !8866
  store i32 %1, i32* @cycle_issued_insns, align 4, !dbg !8867
  %state = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 1, !dbg !8868
  %2 = load i8*, i8** %state, align 8, !dbg !8868
  %call = tail call i32 @max_issue(%struct.ready_list* nonnull @ready, i32 %privileged_n, i8* %2, i32* %index) #6, !dbg !8869
  call void @llvm.dbg.value(metadata i32 %call, metadata !8838, metadata !DIExpression()), !dbg !8861
  %3 = load i32, i32* @sched_verbose, align 4, !dbg !8870
  %cmp1 = icmp sgt i32 %3, 1, !dbg !8871
  br i1 %cmp1, label %do.body, label %if.end58, !dbg !8872

do.body:                                          ; preds = %if.then
  %4 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8873
  %tobool = icmp eq i8 %4, 0, !dbg !8873
  br i1 %tobool, label %if.else, label %do.body4, !dbg !8874

do.body4:                                         ; preds = %do.body
  %5 = load i32, i32* %cycle_issued_insns, align 4, !dbg !8875
  %call6 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.72, i64 0, i64 0), i32 %call, i32 %5) #6, !dbg !8875
  %mul = shl nsw i32 %call6, 1, !dbg !8875
  %add = or i32 %mul, 1, !dbg !8875
  call void @llvm.dbg.value(metadata i32 %add, metadata !8839, metadata !DIExpression()), !dbg !8876
  %conv = sext i32 %add to i64, !dbg !8875
  %6 = alloca i8, i64 %conv, align 16, !dbg !8875
  call void @llvm.dbg.value(metadata i8* %6, metadata !8846, metadata !DIExpression()), !dbg !8876
  %7 = load i32, i32* %cycle_issued_insns, align 4, !dbg !8875
  %call10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 %conv, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.72, i64 0, i64 0), i32 %call, i32 %7) #6, !dbg !8875
  call void @sel_prepare_string_for_dot_label(i8* nonnull %6) #6, !dbg !8875
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8875
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %6) #6, !dbg !8875
  br label %if.end58, !dbg !8875

if.else:                                          ; preds = %do.body
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8873
  %10 = load i32, i32* %cycle_issued_insns, align 4, !dbg !8873
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.72, i64 0, i64 0), i32 %call, i32 %10) #6, !dbg !8873
  br label %if.end58

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %can_issue.0 = phi i32 [ %can_issue.1, %for.inc ], [ 0, %for.cond.preheader ], !dbg !8861
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !8877
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8847, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %can_issue.0, metadata !8838, metadata !DIExpression()), !dbg !8861
  %11 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8879
  %cmp18 = icmp slt i32 %i.0, %11, !dbg !8880
  br i1 %cmp18, label %for.body, label %for.end.loopexit, !dbg !8865

for.body:                                         ; preds = %for.cond
  %call20 = call fastcc %struct._expr* @find_expr_for_ready(i32 %i.0, i8 zeroext 1) #7, !dbg !8881
  call void @llvm.dbg.value(metadata %struct._expr* %call20, metadata !8849, metadata !DIExpression()), !dbg !8882
  %call21 = call fastcc i32 @get_expr_cost(%struct._expr* %call20, %struct._fence* %fence) #7, !dbg !8883
  %cmp22 = icmp slt i32 %call21, 1, !dbg !8884
  br i1 %cmp22, label %if.then24, label %cleanup, !dbg !8885

if.then24:                                        ; preds = %for.body
  %12 = load i32, i32* @can_issue_more, align 4, !dbg !8886
  call void @llvm.dbg.value(metadata i32 %12, metadata !8838, metadata !DIExpression()), !dbg !8861
  store i32 %i.0, i32* %index, align 4, !dbg !8887
  %13 = load i32, i32* @sched_verbose, align 4, !dbg !8888
  %cmp25 = icmp sgt i32 %13, 1, !dbg !8889
  br i1 %cmp25, label %do.body28, label %cleanup, !dbg !8890

do.body28:                                        ; preds = %if.then24
  %14 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8891
  %tobool29 = icmp eq i8 %14, 0, !dbg !8891
  br i1 %tobool29, label %if.else46, label %do.body31, !dbg !8892

do.body31:                                        ; preds = %do.body28
  %add33 = add nuw nsw i32 %i.0, 1, !dbg !8893
  %call34 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.73, i64 0, i64 0), i32 %add33) #6, !dbg !8893
  %mul35 = shl nsw i32 %call34, 1, !dbg !8893
  %add36 = or i32 %mul35, 1, !dbg !8893
  call void @llvm.dbg.value(metadata i32 %add36, metadata !8853, metadata !DIExpression()), !dbg !8894
  %conv38 = sext i32 %add36 to i64, !dbg !8893
  %15 = alloca i8, i64 %conv38, align 16, !dbg !8893
  call void @llvm.dbg.value(metadata i8* %15, metadata !8860, metadata !DIExpression()), !dbg !8894
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %15, i64 %conv38, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.73, i64 0, i64 0), i32 %add33) #6, !dbg !8893
  call void @sel_prepare_string_for_dot_label(i8* nonnull %15) #6, !dbg !8893
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8893
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %15) #6, !dbg !8893
  br label %cleanup, !dbg !8893

if.else46:                                        ; preds = %do.body28
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8891
  %add47 = add nuw nsw i32 %i.0, 1, !dbg !8891
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.73, i64 0, i64 0), i32 %add47) #6, !dbg !8891
  br label %cleanup

cleanup:                                          ; preds = %for.body, %if.then24, %if.else46, %do.body31
  %can_issue.1 = phi i32 [ %12, %do.body31 ], [ %12, %if.else46 ], [ %12, %if.then24 ], [ %can_issue.0, %for.body ], !dbg !8861
  %cleanup.dest.slot.0 = phi i1 [ false, %do.body31 ], [ false, %if.else46 ], [ false, %if.then24 ], [ true, %for.body ]
  call void @llvm.dbg.value(metadata i32 %can_issue.1, metadata !8838, metadata !DIExpression()), !dbg !8861
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup.for.end_crit_edge

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  %can_issue.1.lcssa = phi i32 [ %can_issue.1, %cleanup ], !dbg !8861
  %i.0.lcssa6 = phi i32 [ %i.0, %cleanup ], !dbg !8877
  call void @llvm.dbg.value(metadata i32 %can_issue.1.lcssa, metadata !8838, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa6, metadata !8847, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %can_issue.1.lcssa, metadata !8838, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa6, metadata !8847, metadata !DIExpression()), !dbg !8878
  %.pre = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8895
  br label %for.end

for.inc:                                          ; preds = %cleanup
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8897
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8847, metadata !DIExpression()), !dbg !8878
  br label %for.cond, !dbg !8898, !llvm.loop !8899

for.end.loopexit:                                 ; preds = %for.cond
  %can_issue.0.lcssa = phi i32 [ %can_issue.0, %for.cond ], !dbg !8861
  %i.0.lcssa = phi i32 [ %i.0, %for.cond ], !dbg !8877
  %.lcssa = phi i32 [ %11, %for.cond ], !dbg !8879
  call void @llvm.dbg.value(metadata i32 %can_issue.0.lcssa, metadata !8838, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !8847, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %can_issue.0.lcssa, metadata !8838, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !8847, metadata !DIExpression()), !dbg !8878
  br label %for.end, !dbg !8901

for.end:                                          ; preds = %for.end.loopexit, %cleanup.for.end_crit_edge
  %i.07 = phi i32 [ %i.0.lcssa6, %cleanup.for.end_crit_edge ], [ %i.0.lcssa, %for.end.loopexit ]
  %18 = phi i32 [ %.pre, %cleanup.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !8895
  %can_issue.2 = phi i32 [ %can_issue.1.lcssa, %cleanup.for.end_crit_edge ], [ %can_issue.0.lcssa, %for.end.loopexit ], !dbg !8861
  call void @llvm.dbg.value(metadata i32 %i.07, metadata !8847, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %i.07, metadata !8847, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %can_issue.2, metadata !8838, metadata !DIExpression()), !dbg !8861
  %cmp54 = icmp eq i32 %i.07, %18, !dbg !8901
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !8902

if.then56:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata i32 0, metadata !8838, metadata !DIExpression()), !dbg !8861
  store i32 -1, i32* %index, align 4, !dbg !8903
  br label %if.end58, !dbg !8905

if.end58:                                         ; preds = %for.end, %if.then56, %if.then, %if.else, %do.body4
  %can_issue.4 = phi i32 [ %call, %do.body4 ], [ %call, %if.else ], [ %call, %if.then ], [ 0, %if.then56 ], [ %can_issue.2, %for.end ], !dbg !8906
  call void @llvm.dbg.value(metadata i32 %can_issue.4, metadata !8838, metadata !DIExpression()), !dbg !8861
  ret i32 %can_issue.4, !dbg !8907
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._expr* @find_expr_for_ready(i32 %index, i8 zeroext %follow_ready_element) unnamed_addr #0 !dbg !8908 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !8912, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i8 1, metadata !8913, metadata !DIExpression()), !dbg !8916
  %0 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !8917
  %sub = sub nsw i32 %0, %index, !dbg !8917
  call void @llvm.dbg.value(metadata i32 %sub, metadata !8915, metadata !DIExpression()), !dbg !8916
  %1 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !8918
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %1, i64 0, i32 0, !dbg !8918
  %call = tail call fastcc %struct._expr* @VEC_expr_t_base_index(%struct.VEC_expr_t_base* %base, i32 %sub) #7, !dbg !8918
  call void @llvm.dbg.value(metadata %struct._expr* %call, metadata !8914, metadata !DIExpression()), !dbg !8916
  %2 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !8919
  %idxprom = sext i32 %sub to i64, !dbg !8919
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idxprom, !dbg !8919
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !8919
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %call, i64 0, i32 0, !dbg !8919
  %4 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8919
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %4, i64 0, i32 0, !dbg !8919
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !8919
  %cmp = icmp eq %struct.rtx_def* %3, %5, !dbg !8919
  br i1 %cmp, label %cond.end9, label %cond.true7, !dbg !8919

cond.true7:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4164, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8919
  br label %cond.end9, !dbg !8919

cond.end9:                                        ; preds = %entry, %cond.true7
  ret %struct._expr* %call, !dbg !8920
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @invoke_aftermath_hooks(%struct._fence* %fence, %struct.rtx_def* %best_insn, i32 %issue_more) unnamed_addr #5 !dbg !8921 {
entry:
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !8925, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata %struct.rtx_def* %best_insn, metadata !8926, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i32 %issue_more, metadata !8927, metadata !DIExpression()), !dbg !8928
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %best_insn, i64 0, i32 0, !dbg !8929
  %bf.load = load i32, i32* %0, align 8, !dbg !8929
  %bf.clear = and i32 %bf.load, 65535, !dbg !8929
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !8929
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !8929

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !8929
  br i1 %cmp3, label %cond.end, label %lor.lhs.false4, !dbg !8929

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !8929
  br i1 %cmp7, label %cond.end, label %lor.lhs.false8, !dbg !8929

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !8929
  br i1 %cmp11, label %cond.end, label %cond.true, !dbg !8929

cond.true:                                        ; preds = %lor.lhs.false8
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4258, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8929
  br label %cond.end, !dbg !8929

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false4, %lor.lhs.false8, %cond.true
  %call = tail call fastcc zeroext i8 @sel_dfa_new_cycle(%struct.rtx_def* %best_insn, %struct._fence* %fence) #7, !dbg !8930
  %1 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 3), align 8, !dbg !8931
  %tobool = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)* %1, null, !dbg !8933
  br i1 %tobool, label %if.else, label %if.then, !dbg !8934

if.then:                                          ; preds = %cond.end
  %2 = load i8*, i8** @curr_state, align 8, !dbg !8935
  %state = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 1, !dbg !8937
  %3 = load i8*, i8** %state, align 8, !dbg !8937
  %4 = load i64, i64* @dfa_state_size, align 8, !dbg !8938
  %call12 = tail call i8* @memcpy(i8* %2, i8* %3, i64 %4) #6, !dbg !8939
  %5 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 3), align 8, !dbg !8940
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8941
  %7 = load i32, i32* @sched_verbose, align 4, !dbg !8942
  %call13 = tail call i32 %5(%struct._IO_FILE* %6, i32 %7, %struct.rtx_def* %best_insn, i32 %issue_more) #6, !dbg !8943
  call void @llvm.dbg.value(metadata i32 %call13, metadata !8927, metadata !DIExpression()), !dbg !8928
  %8 = load i8*, i8** %state, align 8, !dbg !8944
  %9 = load i8*, i8** @curr_state, align 8, !dbg !8945
  %10 = load i64, i64* @dfa_state_size, align 8, !dbg !8946
  %call15 = tail call i8* @memcpy(i8* %8, i8* %9, i64 %10) #6, !dbg !8947
  br label %if.end27, !dbg !8948

if.else:                                          ; preds = %cond.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %best_insn, i64 0, i32 1, !dbg !8949
  %11 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !8949
  %12 = bitcast %union.rtunion_def* %11 to i32**, !dbg !8949
  %13 = load i32*, i32** %12, align 8, !dbg !8949
  %bf.load16 = load i32, i32* %13, align 8, !dbg !8949
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !8949
  %cmp18 = icmp eq i32 %bf.clear17, 24, !dbg !8951
  br i1 %cmp18, label %if.end27, label %land.lhs.true, !dbg !8952

land.lhs.true:                                    ; preds = %if.else
  %cmp25 = icmp ne i32 %bf.clear17, 25, !dbg !8953
  %14 = zext i1 %cmp25 to i32, !dbg !8954
  %spec.select = sub i32 %issue_more, %14, !dbg !8954
  ret i32 %spec.select, !dbg !8954

if.end27:                                         ; preds = %if.else, %if.then
  %issue_more.addr.1 = phi i32 [ %call13, %if.then ], [ %issue_more, %if.else ], !dbg !8955
  call void @llvm.dbg.value(metadata i32 %issue_more.addr.1, metadata !8927, metadata !DIExpression()), !dbg !8928
  ret i32 %issue_more.addr.1, !dbg !8956
}

; Function Attrs: nounwind uwtable
define internal fastcc void @process_pipelined_exprs(%struct._list_node** %av_ptr) unnamed_addr #5 !dbg !8957 {
entry:
  %expr = alloca %struct._expr*, align 8
  %si = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %av_ptr, metadata !8961, metadata !DIExpression()), !dbg !8964
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !8965
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8965
  %1 = bitcast %struct._list_iterator* %si to i8*, !dbg !8966
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8966
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8963, metadata !DIExpression(DW_OP_deref)), !dbg !8964
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %si, %struct._list_node** %av_ptr, i8 zeroext 1) #7, !dbg !8967
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i64 0, i32 0, !dbg !8969
  br label %for.cond, !dbg !8967

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !8971
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !8971
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !8962, metadata !DIExpression(DW_OP_deref)), !dbg !8964
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #7, !dbg !8971
  %tobool = icmp eq i8 %call, 0, !dbg !8967
  br i1 %tobool, label %for.end, label %for.body, !dbg !8967

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !8972
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !8962, metadata !DIExpression()), !dbg !8964
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 5, !dbg !8972
  %5 = load i32, i32* %sched_times, align 8, !dbg !8972
  %6 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !8975
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %6, i64 86, i32 1, !dbg !8975
  %7 = load i32, i32* %value, align 8, !dbg !8975
  %cmp = icmp slt i32 %5, %7, !dbg !8976
  br i1 %cmp, label %for.inc, label %if.then, !dbg !8977

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8963, metadata !DIExpression(DW_OP_deref)), !dbg !8964
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %si) #6, !dbg !8978
  br label %for.inc, !dbg !8978

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8963, metadata !DIExpression(DW_OP_deref)), !dbg !8964
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %si) #7, !dbg !8971
  br label %for.cond, !dbg !8971, !llvm.loop !8979

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8981
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8981
  ret void, !dbg !8981
}

; Function Attrs: nounwind uwtable
define internal fastcc void @process_spec_exprs(%struct._list_node** %av_ptr) unnamed_addr #5 !dbg !8982 {
entry:
  %expr = alloca %struct._expr*, align 8
  %si = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %av_ptr, metadata !8984, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8 1, metadata !8985, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8 1, metadata !8986, metadata !DIExpression()), !dbg !8997
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !8998
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8998
  %1 = bitcast %struct._list_iterator* %si to i8*, !dbg !8999
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8999
  %2 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !9000
  %cmp = icmp eq %struct.spec_info_def* %2, null, !dbg !9002
  br i1 %cmp, label %cleanup56, label %if.end, !dbg !9003

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %si, %struct._list_node** %av_ptr, i8 zeroext 1) #7, !dbg !9004
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i64 0, i32 0, !dbg !9005
  br label %for.cond, !dbg !9004

for.cond:                                         ; preds = %cleanup, %if.end
  %try_control_p.0 = phi i8 [ 1, %if.end ], [ %try_control_p.2, %cleanup ], !dbg !9006
  %try_data_p.0 = phi i8 [ 1, %if.end ], [ %try_data_p.2, %cleanup ], !dbg !9007
  call void @llvm.dbg.value(metadata i8 %try_data_p.0, metadata !8985, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8 %try_control_p.0, metadata !8986, metadata !DIExpression()), !dbg !8997
  %3 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9008
  %4 = load %struct._list_node*, %struct._list_node** %3, align 8, !dbg !9008
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !8987, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %4, %struct._expr** nonnull %expr) #7, !dbg !9008
  %tobool = icmp eq i8 %call, 0, !dbg !9004
  br i1 %tobool, label %for.end, label %for.body, !dbg !9004

for.body:                                         ; preds = %for.cond
  %5 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9009
  call void @llvm.dbg.value(metadata %struct._expr* %5, metadata !8987, metadata !DIExpression()), !dbg !8997
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %5, i64 0, i32 7, !dbg !9009
  %6 = load i32, i32* %spec_done_ds, align 8, !dbg !9009
  call void @llvm.dbg.value(metadata i32 %6, metadata !8989, metadata !DIExpression()), !dbg !9010
  %and = and i32 %6, 16777215, !dbg !9011
  %tobool1 = icmp eq i32 %and, 0, !dbg !9011
  br i1 %tobool1, label %for.body.if.end15_crit_edge, label %land.lhs.true, !dbg !9013

for.body.if.end15_crit_edge:                      ; preds = %for.body
  %.pre = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !9014
  br label %if.end15, !dbg !9013

land.lhs.true:                                    ; preds = %for.body
  %call2 = call i32 @ds_weak(i32 %6) #6, !dbg !9016
  %7 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !9017
  %data_weakness_cutoff = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %7, i64 0, i32 2, !dbg !9018
  %8 = load i32, i32* %data_weakness_cutoff, align 8, !dbg !9018
  %cmp3 = icmp slt i32 %call2, %8, !dbg !9019
  br i1 %cmp3, label %if.then14, label %lor.lhs.false, !dbg !9020

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9021
  call void @llvm.dbg.value(metadata %struct._expr* %9, metadata !8987, metadata !DIExpression()), !dbg !8997
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %9, i64 0, i32 2, !dbg !9021
  %10 = load i32, i32* %usefulness, align 4, !dbg !9021
  %control_weakness_cutoff = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %7, i64 0, i32 3, !dbg !9022
  %11 = load i32, i32* %control_weakness_cutoff, align 4, !dbg !9022
  %cmp4 = icmp slt i32 %10, %11, !dbg !9023
  br i1 %cmp4, label %if.then14, label %if.end15, !dbg !9024

if.then14:                                        ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %si) #6, !dbg !9025
  br label %cleanup, !dbg !9027

if.end15:                                         ; preds = %for.body.if.end15_crit_edge, %lor.lhs.false
  %12 = phi %struct.spec_info_def* [ %.pre, %for.body.if.end15_crit_edge ], [ %7, %lor.lhs.false ], !dbg !9028
  %flags = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %12, i64 0, i32 4, !dbg !9030
  %13 = load i32, i32* %flags, align 8, !dbg !9030
  %and16 = and i32 %13, 2, !dbg !9031
  %tobool17 = icmp eq i32 %and16, 0, !dbg !9031
  %and19 = and i32 %6, 63, !dbg !9032
  %tobool20 = icmp ne i32 %and19, 0, !dbg !9032
  %or.cond = or i1 %tobool17, %tobool20, !dbg !9033
  %try_data_p.1 = select i1 %or.cond, i8 %try_data_p.0, i8 0, !dbg !9033
  call void @llvm.dbg.value(metadata i8 %try_data_p.1, metadata !8985, metadata !DIExpression()), !dbg !8997
  %and24 = and i32 %13, 4, !dbg !9034
  %tobool25 = icmp eq i32 %and24, 0, !dbg !9034
  %and27 = and i32 %6, 258048, !dbg !9035
  %tobool28 = icmp ne i32 %and27, 0, !dbg !9035
  %or.cond1 = or i1 %tobool25, %tobool28, !dbg !9036
  %try_control_p.1 = select i1 %or.cond1, i8 %try_control_p.0, i8 0, !dbg !9036
  br label %cleanup, !dbg !9036

cleanup:                                          ; preds = %if.end15, %if.then14
  %try_control_p.2 = phi i8 [ %try_control_p.0, %if.then14 ], [ %try_control_p.1, %if.end15 ], !dbg !9006
  %try_data_p.2 = phi i8 [ %try_data_p.0, %if.then14 ], [ %try_data_p.1, %if.end15 ], !dbg !9007
  call void @llvm.dbg.value(metadata i8 %try_data_p.2, metadata !8985, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8 %try_control_p.2, metadata !8986, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %si) #7, !dbg !9008
  br label %for.cond, !dbg !9008, !llvm.loop !9037

for.end:                                          ; preds = %for.cond
  %try_control_p.0.lcssa = phi i8 [ %try_control_p.0, %for.cond ], !dbg !9006
  %try_data_p.0.lcssa = phi i8 [ %try_data_p.0, %for.cond ], !dbg !9007
  call void @llvm.dbg.value(metadata i8 %try_control_p.0.lcssa, metadata !8986, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8 %try_data_p.0.lcssa, metadata !8985, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8 %try_control_p.0.lcssa, metadata !8986, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8 %try_data_p.0.lcssa, metadata !8985, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8 %try_control_p.0.lcssa, metadata !8986, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8 %try_data_p.0.lcssa, metadata !8985, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %si, %struct._list_node** %av_ptr, i8 zeroext 1) #7, !dbg !9039
  %tobool44 = icmp eq i8 %try_data_p.0.lcssa, 0, !dbg !9040
  %tobool50 = icmp ne i8 %try_control_p.0.lcssa, 0, !dbg !9044
  br i1 %tobool44, label %for.end.for.end.split_crit_edge, label %for.end.split.us, !dbg !9039

for.end.for.end.split_crit_edge:                  ; preds = %for.end
  br i1 %tobool50, label %for.end.split.split.us, label %for.end.split.for.end.split.split_crit_edge, !dbg !9039

for.end.split.us:                                 ; preds = %for.end
  br i1 %tobool50, label %for.end.split.us.split.us, label %for.end.split.us.for.end.split.us.split_crit_edge, !dbg !9039

for.end.split.us.for.end.split.us.split_crit_edge: ; preds = %for.end.split.us
  br label %for.cond31.us, !dbg !9039

for.end.split.us.split.us:                        ; preds = %for.end.split.us
  br label %for.cond31.us.us, !dbg !9039

for.cond31.us.us:                                 ; preds = %for.inc54.us.us, %for.end.split.us.split.us
  %14 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9046
  %15 = load %struct._list_node*, %struct._list_node** %14, align 8, !dbg !9046
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !8987, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  %call33.us.us = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %15, %struct._expr** nonnull %expr) #7, !dbg !9046
  %tobool34.us.us = icmp eq i8 %call33.us.us, 0, !dbg !9039
  br i1 %tobool34.us.us, label %cleanup56.loopexit.us-lcssa.us.us-lcssa.us, label %for.body35.us.us, !dbg !9039

for.body35.us.us:                                 ; preds = %for.cond31.us.us
  br label %for.inc54.us.us, !dbg !9047

if.then40.us.us:                                  ; No predecessors!
  unreachable, !dbg !9048

for.inc54.us.us:                                  ; preds = %for.body35.us.us
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %si) #7, !dbg !9046
  br label %for.cond31.us.us, !dbg !9046, !llvm.loop !9049

cleanup56.loopexit.us-lcssa.us.us-lcssa.us:       ; preds = %for.cond31.us.us
  br label %cleanup56.loopexit.us-lcssa.us, !dbg !9051

for.cond31.us:                                    ; preds = %for.inc54.us, %for.end.split.us.for.end.split.us.split_crit_edge
  %16 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9046
  %17 = load %struct._list_node*, %struct._list_node** %16, align 8, !dbg !9046
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !8987, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  %call33.us = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %17, %struct._expr** nonnull %expr) #7, !dbg !9046
  %tobool34.us = icmp eq i8 %call33.us, 0, !dbg !9039
  br i1 %tobool34.us, label %cleanup56.loopexit.us-lcssa.us.us-lcssa, label %for.body35.us, !dbg !9039

for.body35.us:                                    ; preds = %for.cond31.us
  %18 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9052
  call void @llvm.dbg.value(metadata %struct._expr* %18, metadata !8987, metadata !DIExpression()), !dbg !8997
  %spec_done_ds37.us = getelementptr inbounds %struct._expr, %struct._expr* %18, i64 0, i32 7, !dbg !9052
  %19 = load i32, i32* %spec_done_ds37.us, align 8, !dbg !9052
  call void @llvm.dbg.value(metadata i32 %19, metadata !8993, metadata !DIExpression()), !dbg !9053
  %and38.us = and i32 %19, 16777215, !dbg !9054
  %tobool39.us = icmp eq i32 %and38.us, 0, !dbg !9054
  br i1 %tobool39.us, label %for.inc54.us, label %if.then40.us, !dbg !9047

if.then40.us:                                     ; preds = %for.body35.us
  %and47.us = and i32 %19, 258048, !dbg !9055
  %tobool48.us = icmp eq i32 %and47.us, 0, !dbg !9055
  br i1 %tobool48.us, label %for.inc54.us, label %if.then51.us, !dbg !9048

if.then51.us:                                     ; preds = %if.then40.us
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %si) #6, !dbg !9056
  br label %for.inc54.us, !dbg !9056

for.inc54.us:                                     ; preds = %if.then51.us, %if.then40.us, %for.body35.us
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %si) #7, !dbg !9046
  br label %for.cond31.us, !dbg !9046, !llvm.loop !9049

cleanup56.loopexit.us-lcssa.us.us-lcssa:          ; preds = %for.cond31.us
  br label %cleanup56.loopexit.us-lcssa.us, !dbg !9051

cleanup56.loopexit.us-lcssa.us:                   ; preds = %cleanup56.loopexit.us-lcssa.us.us-lcssa.us, %cleanup56.loopexit.us-lcssa.us.us-lcssa
  br label %cleanup56.loopexit, !dbg !9051

for.end.split.for.end.split.split_crit_edge:      ; preds = %for.end.for.end.split_crit_edge
  br label %for.cond31, !dbg !9039

for.end.split.split.us:                           ; preds = %for.end.for.end.split_crit_edge
  br label %for.cond31.us4, !dbg !9039

for.cond31.us4:                                   ; preds = %for.inc54.us18, %for.end.split.split.us
  %20 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9046
  %21 = load %struct._list_node*, %struct._list_node** %20, align 8, !dbg !9046
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !8987, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  %call33.us5 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %21, %struct._expr** nonnull %expr) #7, !dbg !9046
  %tobool34.us6 = icmp eq i8 %call33.us5, 0, !dbg !9039
  br i1 %tobool34.us6, label %cleanup56.loopexit.us-lcssa.us-lcssa.us, label %for.body35.us7, !dbg !9039

for.body35.us7:                                   ; preds = %for.cond31.us4
  %22 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9052
  call void @llvm.dbg.value(metadata %struct._expr* %22, metadata !8987, metadata !DIExpression()), !dbg !8997
  %spec_done_ds37.us8 = getelementptr inbounds %struct._expr, %struct._expr* %22, i64 0, i32 7, !dbg !9052
  %23 = load i32, i32* %spec_done_ds37.us8, align 8, !dbg !9052
  call void @llvm.dbg.value(metadata i32 %23, metadata !8993, metadata !DIExpression()), !dbg !9053
  %and38.us9 = and i32 %23, 16777215, !dbg !9054
  %tobool39.us10 = icmp eq i32 %and38.us9, 0, !dbg !9054
  br i1 %tobool39.us10, label %for.inc54.us18, label %if.then40.us11, !dbg !9047

if.then40.us11:                                   ; preds = %for.body35.us7
  %and41.us = and i32 %23, 63, !dbg !9057
  %tobool42.us = icmp eq i32 %and41.us, 0, !dbg !9057
  br i1 %tobool42.us, label %if.end46.us13, label %if.then45.us12, !dbg !9058

if.then45.us12:                                   ; preds = %if.then40.us11
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %si) #6, !dbg !9059
  br label %if.end46.us13, !dbg !9059

if.end46.us13:                                    ; preds = %if.then45.us12, %if.then40.us11
  br label %for.inc54.us18, !dbg !9048

for.inc54.us18:                                   ; preds = %if.end46.us13, %for.body35.us7
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %si) #7, !dbg !9046
  br label %for.cond31.us4, !dbg !9046, !llvm.loop !9049

cleanup56.loopexit.us-lcssa.us-lcssa.us:          ; preds = %for.cond31.us4
  br label %cleanup56.loopexit.us-lcssa, !dbg !9051

for.cond31:                                       ; preds = %for.inc54, %for.end.split.for.end.split.split_crit_edge
  %24 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9046
  %25 = load %struct._list_node*, %struct._list_node** %24, align 8, !dbg !9046
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !8987, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  %call33 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %25, %struct._expr** nonnull %expr) #7, !dbg !9046
  %tobool34 = icmp eq i8 %call33, 0, !dbg !9039
  br i1 %tobool34, label %cleanup56.loopexit.us-lcssa.us-lcssa, label %for.body35, !dbg !9039

for.body35:                                       ; preds = %for.cond31
  %26 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9052
  call void @llvm.dbg.value(metadata %struct._expr* %26, metadata !8987, metadata !DIExpression()), !dbg !8997
  %spec_done_ds37 = getelementptr inbounds %struct._expr, %struct._expr* %26, i64 0, i32 7, !dbg !9052
  %27 = load i32, i32* %spec_done_ds37, align 8, !dbg !9052
  call void @llvm.dbg.value(metadata i32 %27, metadata !8993, metadata !DIExpression()), !dbg !9053
  %and38 = and i32 %27, 16777215, !dbg !9054
  %tobool39 = icmp eq i32 %and38, 0, !dbg !9054
  br i1 %tobool39, label %for.inc54, label %if.then40, !dbg !9047

if.then40:                                        ; preds = %for.body35
  %and41 = and i32 %27, 63, !dbg !9057
  %tobool42 = icmp eq i32 %and41, 0, !dbg !9057
  br i1 %tobool42, label %if.end46, label %if.then45, !dbg !9058

if.then45:                                        ; preds = %if.then40
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %si) #6, !dbg !9059
  br label %if.end46, !dbg !9059

if.end46:                                         ; preds = %if.then40, %if.then45
  %and47 = and i32 %27, 258048, !dbg !9055
  %tobool48 = icmp eq i32 %and47, 0, !dbg !9055
  br i1 %tobool48, label %for.inc54, label %if.then51, !dbg !9048

if.then51:                                        ; preds = %if.end46
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %si) #6, !dbg !9056
  br label %for.inc54, !dbg !9056

for.inc54:                                        ; preds = %for.body35, %if.end46, %if.then51
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %si) #7, !dbg !9046
  br label %for.cond31, !dbg !9046, !llvm.loop !9049

cleanup56.loopexit.us-lcssa.us-lcssa:             ; preds = %for.cond31
  br label %cleanup56.loopexit.us-lcssa, !dbg !9051

cleanup56.loopexit.us-lcssa:                      ; preds = %cleanup56.loopexit.us-lcssa.us-lcssa.us, %cleanup56.loopexit.us-lcssa.us-lcssa
  br label %cleanup56.loopexit, !dbg !9051

cleanup56.loopexit:                               ; preds = %cleanup56.loopexit.us-lcssa.us, %cleanup56.loopexit.us-lcssa
  br label %cleanup56, !dbg !9051

cleanup56:                                        ; preds = %cleanup56.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9051
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9051
  ret void, !dbg !9051
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._expr* @process_use_exprs(%struct._list_node** %av_ptr) unnamed_addr #5 !dbg !9060 {
entry:
  %expr = alloca %struct._expr*, align 8
  %si = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %av_ptr, metadata !9064, metadata !DIExpression()), !dbg !9069
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !9070
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9070
  %1 = bitcast %struct._list_iterator* %si to i8*, !dbg !9071
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9071
  call void @llvm.dbg.value(metadata i8 0, metadata !9067, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 1, metadata !9068, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !9066, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %si, %struct._list_node** %av_ptr, i8 zeroext 1) #7, !dbg !9072
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i64 0, i32 0, !dbg !9074
  br label %for.cond, !dbg !9072

for.cond:                                         ; preds = %for.inc, %entry
  %try_uses_p.0 = phi i8 [ 1, %entry ], [ %try_uses_p.1, %for.inc ], !dbg !9076
  %uses_present_p.0 = phi i8 [ 0, %entry ], [ %uses_present_p.2, %for.inc ], !dbg !9077
  call void @llvm.dbg.value(metadata i8 %uses_present_p.0, metadata !9067, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 %try_uses_p.0, metadata !9068, metadata !DIExpression()), !dbg !9069
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9078
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !9078
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !9065, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #7, !dbg !9078
  %tobool = icmp eq i8 %call, 0, !dbg !9072
  br i1 %tobool, label %for.end, label %for.body, !dbg !9072

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9079
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !9065, metadata !DIExpression()), !dbg !9069
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 0, !dbg !9079
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9079
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 0, !dbg !9079
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !9079
  %call1 = call fastcc i32 @recog_memoized(%struct.rtx_def* %6) #7, !dbg !9082
  %cmp = icmp slt i32 %call1, 0, !dbg !9083
  br i1 %cmp, label %if.then, label %for.inc, !dbg !9084

if.then:                                          ; preds = %for.body
  %7 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9085
  call void @llvm.dbg.value(metadata %struct._expr* %7, metadata !9065, metadata !DIExpression()), !dbg !9069
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %7, i64 0, i32 5, !dbg !9085
  %8 = load i32, i32* %sched_times, align 8, !dbg !9085
  %cmp2 = icmp slt i32 %8, 1, !dbg !9088
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !9089

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct._expr* %7, metadata !9065, metadata !DIExpression()), !dbg !9069
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %7, i64 0, i32 11, !dbg !9090
  %9 = load i8, i8* %target_available, align 8, !dbg !9090
  %cmp4 = icmp eq i8 %9, 1, !dbg !9093
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !9094

if.then6:                                         ; preds = %if.then3
  %.lcssa9 = phi %struct._expr* [ %7, %if.then3 ], !dbg !9085
  call void @llvm.dbg.value(metadata %struct._expr* %.lcssa9, metadata !9065, metadata !DIExpression()), !dbg !9069
  br label %cleanup, !dbg !9095

if.end:                                           ; preds = %if.then3
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !9066, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %si) #6, !dbg !9096
  br label %for.inc, !dbg !9097

if.else:                                          ; preds = %if.then
  %10 = load i8, i8* @pipelining_p, align 1, !dbg !9098
  %tobool7 = icmp eq i8 %10, 0, !dbg !9098
  br i1 %tobool7, label %cond.true, label %for.inc, !dbg !9098

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3532, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9098
  br label %for.inc, !dbg !9098

for.inc:                                          ; preds = %if.else, %cond.true, %if.end, %for.body
  %try_uses_p.1 = phi i8 [ %try_uses_p.0, %cond.true ], [ %try_uses_p.0, %if.else ], [ %try_uses_p.0, %if.end ], [ 0, %for.body ], !dbg !9069
  %uses_present_p.2 = phi i8 [ 1, %cond.true ], [ 1, %if.else ], [ %uses_present_p.0, %if.end ], [ %uses_present_p.0, %for.body ], !dbg !9077
  call void @llvm.dbg.value(metadata i8 %uses_present_p.2, metadata !9067, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 %try_uses_p.1, metadata !9068, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !9066, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %si) #7, !dbg !9078
  br label %for.cond, !dbg !9078, !llvm.loop !9100

for.end:                                          ; preds = %for.cond
  %try_uses_p.0.lcssa = phi i8 [ %try_uses_p.0, %for.cond ], !dbg !9076
  %uses_present_p.0.lcssa = phi i8 [ %uses_present_p.0, %for.cond ], !dbg !9077
  call void @llvm.dbg.value(metadata i8 %try_uses_p.0.lcssa, metadata !9068, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 %uses_present_p.0.lcssa, metadata !9067, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 %try_uses_p.0.lcssa, metadata !9068, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 %uses_present_p.0.lcssa, metadata !9067, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 %try_uses_p.0.lcssa, metadata !9068, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 %uses_present_p.0.lcssa, metadata !9067, metadata !DIExpression()), !dbg !9069
  %tobool11 = icmp eq i8 %uses_present_p.0.lcssa, 0, !dbg !9102
  br i1 %tobool11, label %cleanup, label %if.then12, !dbg !9104

if.then12:                                        ; preds = %for.end
  %tobool13 = icmp eq i8 %try_uses_p.0.lcssa, 0, !dbg !9105
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !9066, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %si, %struct._list_node** %av_ptr, i8 zeroext 1) #7, !dbg !9108
  br i1 %tobool13, label %for.cond15.preheader, label %for.cond29.preheader, !dbg !9109

for.cond29.preheader:                             ; preds = %if.then12
  br label %for.cond29, !dbg !9110

for.cond15.preheader:                             ; preds = %if.then12
  br label %for.cond15, !dbg !9113

for.cond15:                                       ; preds = %for.cond15.preheader, %for.inc26
  %11 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9116
  %12 = load %struct._list_node*, %struct._list_node** %11, align 8, !dbg !9116
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !9065, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  %call17 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %12, %struct._expr** nonnull %expr) #7, !dbg !9116
  %tobool18 = icmp eq i8 %call17, 0, !dbg !9113
  br i1 %tobool18, label %cleanup.loopexit, label %for.body19, !dbg !9113

for.body19:                                       ; preds = %for.cond15
  %13 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9118
  call void @llvm.dbg.value(metadata %struct._expr* %13, metadata !9065, metadata !DIExpression()), !dbg !9069
  %vinsn20 = getelementptr inbounds %struct._expr, %struct._expr* %13, i64 0, i32 0, !dbg !9118
  %14 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn20, align 8, !dbg !9118
  %insn_rtx21 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %14, i64 0, i32 0, !dbg !9118
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx21, align 8, !dbg !9118
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, !dbg !9118
  %16 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !9118
  %rt_int = bitcast %union.rtunion_def* %16 to i32*, !dbg !9118
  %17 = load i32, i32* %rt_int, align 8, !dbg !9118
  %cmp22 = icmp slt i32 %17, 0, !dbg !9120
  br i1 %cmp22, label %if.then24, label %for.inc26, !dbg !9121

if.then24:                                        ; preds = %for.body19
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !9066, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %si) #6, !dbg !9122
  br label %for.inc26, !dbg !9122

for.inc26:                                        ; preds = %for.body19, %if.then24
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !9066, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %si) #7, !dbg !9116
  br label %for.cond15, !dbg !9116, !llvm.loop !9123

for.cond29:                                       ; preds = %for.cond29.preheader, %if.end51
  %18 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9125
  %19 = load %struct._list_node*, %struct._list_node** %18, align 8, !dbg !9125
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !9065, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  %call31 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %19, %struct._expr** nonnull %expr) #7, !dbg !9125
  %tobool32 = icmp eq i8 %call31, 0, !dbg !9110
  br i1 %tobool32, label %cleanup.loopexit1, label %for.body33, !dbg !9110

for.body33:                                       ; preds = %for.cond29
  %20 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9127
  call void @llvm.dbg.value(metadata %struct._expr* %20, metadata !9065, metadata !DIExpression()), !dbg !9069
  %vinsn34 = getelementptr inbounds %struct._expr, %struct._expr* %20, i64 0, i32 0, !dbg !9127
  %21 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn34, align 8, !dbg !9127
  %insn_rtx35 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %21, i64 0, i32 0, !dbg !9127
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx35, align 8, !dbg !9127
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, !dbg !9127
  %23 = getelementptr inbounds %union.u, %union.u* %u36, i64 1, i32 0, i32 0, i64 1, !dbg !9127
  %rt_int39 = bitcast %union.rtunion_def* %23 to i32*, !dbg !9127
  %24 = load i32, i32* %rt_int39, align 8, !dbg !9127
  %cmp40 = icmp slt i32 %24, 0, !dbg !9127
  br i1 %cmp40, label %cond.end44, label %cond.true42, !dbg !9127

cond.true42:                                      ; preds = %for.body33
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3555, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9127
  %.pre = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9129
  br label %cond.end44, !dbg !9127

cond.end44:                                       ; preds = %for.body33, %cond.true42
  %25 = phi %struct._expr* [ %20, %for.body33 ], [ %.pre, %cond.true42 ], !dbg !9129
  call void @llvm.dbg.value(metadata %struct._expr* %25, metadata !9065, metadata !DIExpression()), !dbg !9069
  %target_available46 = getelementptr inbounds %struct._expr, %struct._expr* %25, i64 0, i32 11, !dbg !9129
  %26 = load i8, i8* %target_available46, align 8, !dbg !9129
  %cmp48 = icmp eq i8 %26, 1, !dbg !9131
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !9132

if.then50:                                        ; preds = %cond.end44
  %.lcssa = phi %struct._expr* [ %25, %cond.end44 ], !dbg !9129
  call void @llvm.dbg.value(metadata %struct._expr* %.lcssa, metadata !9065, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata %struct._expr* %.lcssa, metadata !9065, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata %struct._expr* %.lcssa, metadata !9065, metadata !DIExpression()), !dbg !9069
  br label %cleanup, !dbg !9133

if.end51:                                         ; preds = %cond.end44
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !9066, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %si) #6, !dbg !9134
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !9066, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %si) #7, !dbg !9125
  br label %for.cond29, !dbg !9125, !llvm.loop !9135

cleanup.loopexit:                                 ; preds = %for.cond15
  br label %cleanup, !dbg !9137

cleanup.loopexit1:                                ; preds = %for.cond29
  br label %cleanup, !dbg !9137

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %for.end, %if.then50, %if.then6
  %retval.0 = phi %struct._expr* [ %.lcssa9, %if.then6 ], [ %.lcssa, %if.then50 ], [ null, %for.end ], [ null, %cleanup.loopexit ], [ null, %cleanup.loopexit1 ], !dbg !9069
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9137
  ret %struct._expr* %retval.0, !dbg !9137
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @fill_vec_av_set(%struct._list_node* %av, %struct._list_node* %bnds, %struct._fence* %fence, i32* %pneed_stall) unnamed_addr #5 !dbg !2176 {
entry:
  %av.addr = alloca %struct._list_node*, align 8
  %si = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  %is_orig_reg_p = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct._list_node* %av, metadata !2183, metadata !DIExpression()), !dbg !9138
  store %struct._list_node* %av, %struct._list_node** %av.addr, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds, metadata !2184, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !2185, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32* %pneed_stall, metadata !2186, metadata !DIExpression()), !dbg !9138
  %0 = bitcast %struct._list_iterator* %si to i8*, !dbg !9139
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !9139
  %1 = bitcast %struct._expr** %expr to i8*, !dbg !9140
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9140
  call void @llvm.dbg.value(metadata i32 0, metadata !2197, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 -1, metadata !2200, metadata !DIExpression()), !dbg !9138
  %2 = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds, i64 0, i32 1, i32 0, i32 5, !dbg !9141
  %3 = load %struct.deps*, %struct.deps** %2, align 8, !dbg !9141
  call void @llvm.dbg.value(metadata %struct.deps* %3, metadata !2201, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata %struct._list_node* %av, metadata !2183, metadata !DIExpression()), !dbg !9138
  %cmp = icmp eq %struct._list_node* %av, null, !dbg !9142
  br i1 %cmp, label %cleanup868, label %if.end, !dbg !9144

if.end:                                           ; preds = %entry
  %4 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9145
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %4, i64 0, i32 0, !dbg !9145
  %call = tail call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base) #7, !dbg !9145
  %cmp2 = icmp eq i32 %call, 0, !dbg !9147
  br i1 %cmp2, label %if.end17, label %if.then3, !dbg !9148

if.then3:                                         ; preds = %if.end
  %5 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9149
  %base6 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %5, i64 0, i32 0, !dbg !9149
  %call16 = tail call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base6) #7, !dbg !9149
  tail call fastcc void @VEC_expr_t_base_block_remove(%struct.VEC_expr_t_base* %base6, i32 0, i32 %call16) #7, !dbg !9149
  br label %if.end17, !dbg !9149

if.end17:                                         ; preds = %if.end, %if.then3
  %6 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9150
  %base20 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %6, i64 0, i32 0, !dbg !9150
  %call24 = tail call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base20) #7, !dbg !9150
  %cmp25 = icmp eq i32 %call24, 0, !dbg !9150
  br i1 %cmp25, label %cond.end28, label %cond.true26, !dbg !9150

cond.true26:                                      ; preds = %if.end17
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3710, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9150
  br label %cond.end28, !dbg !9150

cond.end28:                                       ; preds = %if.end17, %cond.true26
  call void @llvm.dbg.value(metadata %struct._list_node** %av.addr, metadata !2183, metadata !DIExpression(DW_OP_deref)), !dbg !9138
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !2187, metadata !DIExpression(DW_OP_deref)), !dbg !9138
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %si, %struct._list_node** nonnull %av.addr, i8 zeroext 0) #7, !dbg !9151
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i64 0, i32 0, !dbg !9153
  br label %for.cond, !dbg !9151

for.cond:                                         ; preds = %cond.end37, %cond.end28
  %7 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9155
  %8 = load %struct._list_node*, %struct._list_node** %7, align 8, !dbg !9155
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !2196, metadata !DIExpression(DW_OP_deref)), !dbg !9138
  %call30 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %8, %struct._expr** nonnull %expr) #7, !dbg !9155
  %tobool31 = icmp eq i8 %call30, 0, !dbg !9151
  br i1 %tobool31, label %for.end, label %for.body, !dbg !9151

for.body:                                         ; preds = %for.cond
  %9 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9156
  call void @llvm.dbg.value(metadata %struct._expr* %9, metadata !2196, metadata !DIExpression()), !dbg !9138
  %call32 = call fastcc %struct._expr** @VEC_expr_t_heap_safe_push(%struct.VEC_expr_t_heap** nonnull @vec_av_set, %struct._expr* %9) #7, !dbg !9156
  %10 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9158
  call void @llvm.dbg.value(metadata %struct._expr* %10, metadata !2196, metadata !DIExpression()), !dbg !9138
  %priority_adj = getelementptr inbounds %struct._expr, %struct._expr* %10, i64 0, i32 4, !dbg !9158
  %11 = load i32, i32* %priority_adj, align 4, !dbg !9158
  %cmp33 = icmp eq i32 %11, 0, !dbg !9158
  br i1 %cmp33, label %cond.end37, label %lor.lhs.false, !dbg !9158

lor.lhs.false:                                    ; preds = %for.body
  %12 = load i32, i32* %pneed_stall, align 4, !dbg !9158
  %tobool34 = icmp eq i32 %12, 0, !dbg !9158
  br i1 %tobool34, label %cond.true35, label %cond.end37, !dbg !9158

cond.true35:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3715, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9158
  %.pre = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9159
  br label %cond.end37, !dbg !9158

cond.end37:                                       ; preds = %lor.lhs.false, %for.body, %cond.true35
  %13 = phi %struct._expr* [ %10, %lor.lhs.false ], [ %10, %for.body ], [ %.pre, %cond.true35 ], !dbg !9159
  call void @llvm.dbg.value(metadata %struct._expr* %13, metadata !2196, metadata !DIExpression()), !dbg !9138
  %call39 = call fastcc i32 @sel_target_adjust_priority(%struct._expr* %13) #7, !dbg !9160
  call void @llvm.dbg.value(metadata %struct._list_iterator* %si, metadata !2187, metadata !DIExpression(DW_OP_deref)), !dbg !9138
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %si) #7, !dbg !9155
  br label %for.cond, !dbg !9155, !llvm.loop !9161

for.end:                                          ; preds = %for.cond
  %14 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9163
  %base42 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %14, i64 0, i32 0, !dbg !9163
  %call46 = call fastcc %struct._expr** @VEC_expr_t_base_address(%struct.VEC_expr_t_base* %base42) #7, !dbg !9163
  %15 = bitcast %struct._expr** %call46 to i8*, !dbg !9163
  %16 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9164
  %base49 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %16, i64 0, i32 0, !dbg !9164
  %call53 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base49) #7, !dbg !9164
  %conv = zext i32 %call53 to i64, !dbg !9164
  call void @spec_qsort(i8* %15, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @sel_rank_for_schedule) #6, !dbg !9165
  %starts_cycle_p = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 13, !dbg !9166
  %bf.load = load i8, i8* %starts_cycle_p, align 8, !dbg !9166
  %bf.clear = and i8 %bf.load, 4, !dbg !9166
  %tobool54 = icmp eq i8 %bf.clear, 0, !dbg !9166
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !9168

if.then55:                                        ; preds = %for.end
  store i32 -2147483648, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !9169
  store i32 -2147483648, i32* @fill_vec_av_set.av_max_prio, align 4, !dbg !9170
  br label %if.end56, !dbg !9171

if.end56:                                         ; preds = %for.end, %if.then55
  %17 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9172
  %base59 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %17, i64 0, i32 0, !dbg !9172
  %call63 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base59) #7, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %call63, metadata !2199, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9138
  call void @llvm.dbg.value(metadata i32 0, metadata !2198, metadata !DIExpression()), !dbg !9138
  %sched_next = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 12, !dbg !9173
  %ready_ticks_size = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 9, !dbg !9175
  %ready_ticks = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 8, !dbg !9176
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !9176
  %18 = bitcast i32** %ready_ticks to i8**, !dbg !9177
  br label %for.cond64, !dbg !9178

for.cond64:                                       ; preds = %cleanup688, %if.end56
  %min_need_stall.0 = phi i32 [ -1, %if.end56 ], [ %min_need_stall.1, %cleanup688 ], !dbg !9179
  %n.0.in = phi i32 [ %call63, %if.end56 ], [ %n.0, %cleanup688 ]
  %stalled.0 = phi i32 [ 0, %if.end56 ], [ %stalled.1, %cleanup688 ], !dbg !9180
  %sched_next_worked.0 = phi i32 [ 0, %if.end56 ], [ %sched_next_worked.2, %cleanup688 ], !dbg !9181
  %n.0 = add i32 %n.0.in, -1, !dbg !9182
  call void @llvm.dbg.value(metadata i32 %sched_next_worked.0, metadata !2197, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %stalled.0, metadata !2198, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !2199, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %min_need_stall.0, metadata !2200, metadata !DIExpression()), !dbg !9138
  %cmp65 = icmp sgt i32 %n.0, -1, !dbg !9183
  br i1 %cmp65, label %for.body67, label %for.end697, !dbg !9184

for.body67:                                       ; preds = %for.cond64
  %19 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9185
  %base71 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %19, i64 0, i32 0, !dbg !9185
  %call75 = call fastcc %struct._expr* @VEC_expr_t_base_index(%struct.VEC_expr_t_base* %base71, i32 %n.0) #7, !dbg !9185
  call void @llvm.dbg.value(metadata %struct._expr* %call75, metadata !2202, metadata !DIExpression()), !dbg !9186
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 0, !dbg !9187
  %20 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9187
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %20, i64 0, i32 0, !dbg !9187
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !9187
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !2206, metadata !DIExpression()), !dbg !9186
  call void @llvm.dbg.value(metadata i8* %is_orig_reg_p, metadata !2208, metadata !DIExpression(DW_OP_deref)), !dbg !9186
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %is_orig_reg_p) #8, !dbg !9188
  call void @llvm.dbg.value(metadata i8 1, metadata !2208, metadata !DIExpression()), !dbg !9186
  store i8 1, i8* %is_orig_reg_p, align 1, !dbg !9189
  %22 = load %struct.rtx_def*, %struct.rtx_def** %sched_next, align 8, !dbg !9190
  %tobool76 = icmp eq %struct.rtx_def* %22, null, !dbg !9190
  br i1 %tobool76, label %if.end88, label %land.lhs.true, !dbg !9191

land.lhs.true:                                    ; preds = %for.body67
  %cmp78 = icmp eq %struct.rtx_def* %21, %22, !dbg !9192
  br i1 %cmp78, label %if.end88, label %if.then80, !dbg !9193

if.then80:                                        ; preds = %land.lhs.true
  %23 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9194
  %base83 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %23, i64 0, i32 0, !dbg !9194
  %call87 = call fastcc %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %base83, i32 %n.0) #7, !dbg !9194
  br label %cleanup688, !dbg !9196

if.end88:                                         ; preds = %land.lhs.true, %for.body67
  %tobool90 = icmp ne %struct.rtx_def* %22, null, !dbg !9197
  %inc = zext i1 %tobool90 to i32, !dbg !9199
  %spec.select = add nsw i32 %sched_next_worked.0, %inc, !dbg !9199
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2197, metadata !DIExpression()), !dbg !9138
  %target_available93 = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 11, !dbg !9200
  %24 = load i8, i8* %target_available93, align 8, !dbg !9200
  call void @llvm.dbg.value(metadata i8 %24, metadata !2207, metadata !DIExpression()), !dbg !9186
  %25 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** @vec_target_unavailable_vinsns, align 8, !dbg !9201
  %call94 = call fastcc zeroext i8 @vinsn_vec_has_expr_p(%struct.VEC_vinsn_t_heap* %25, %struct._expr* %call75) #7, !dbg !9203
  %tobool95 = icmp eq i8 %call94, 0, !dbg !9203
  %target_available.0 = select i1 %tobool95, i8 %24, i8 -1, !dbg !9204
  call void @llvm.dbg.value(metadata i8 %target_available.0, metadata !2207, metadata !DIExpression()), !dbg !9186
  %26 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** @vec_bookkeeping_blocked_vinsns, align 8, !dbg !9205
  %call98 = call fastcc zeroext i8 @vinsn_vec_has_expr_p(%struct.VEC_vinsn_t_heap* %26, %struct._expr* %call75) #7, !dbg !9206
  %tobool99 = icmp eq i8 %call98, 0, !dbg !9206
  br i1 %tobool99, label %if.end134, label %if.then100, !dbg !9207

if.then100:                                       ; preds = %if.end88
  %27 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9208
  %base103 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %27, i64 0, i32 0, !dbg !9208
  %call107 = call fastcc %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %base103, i32 %n.0) #7, !dbg !9208
  %28 = load i32, i32* @sched_verbose, align 4, !dbg !9209
  %cmp108 = icmp sgt i32 %28, 3, !dbg !9210
  br i1 %cmp108, label %do.body, label %cleanup688, !dbg !9211

do.body:                                          ; preds = %if.then100
  %29 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9212
  %tobool111 = icmp eq i8 %29, 0, !dbg !9212
  br i1 %tobool111, label %if.else, label %do.body113, !dbg !9213

do.body113:                                       ; preds = %do.body
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9214
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9214
  %30 = load i32, i32* %rt_int, align 8, !dbg !9214
  %call115 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.49, i64 0, i64 0), i32 %30) #6, !dbg !9214
  %mul = shl nsw i32 %call115, 1, !dbg !9214
  %add = or i32 %mul, 1, !dbg !9214
  call void @llvm.dbg.value(metadata i32 %add, metadata !2211, metadata !DIExpression()), !dbg !9215
  %conv116 = sext i32 %add to i64, !dbg !9214
  %31 = alloca i8, i64 %conv116, align 16, !dbg !9214
  call void @llvm.dbg.value(metadata i8* %31, metadata !2218, metadata !DIExpression()), !dbg !9215
  %32 = load i32, i32* %rt_int, align 8, !dbg !9214
  %call123 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %31, i64 %conv116, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.49, i64 0, i64 0), i32 %32) #6, !dbg !9214
  call void @sel_prepare_string_for_dot_label(i8* nonnull %31) #6, !dbg !9214
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9214
  %call124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %31) #6, !dbg !9214
  br label %cleanup688, !dbg !9214

if.else:                                          ; preds = %do.body
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9212
  %arrayidx127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9212
  %rt_int128 = bitcast %union.rtunion_def* %arrayidx127 to i32*, !dbg !9212
  %35 = load i32, i32* %rt_int128, align 8, !dbg !9212
  %call129 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.49, i64 0, i64 0), i32 %35) #6, !dbg !9212
  br label %cleanup688

if.end134:                                        ; preds = %if.end88
  %cmp136 = icmp eq i8 %target_available.0, 1, !dbg !9216
  br i1 %cmp136, label %if.then138, label %if.else143, !dbg !9217

if.then138:                                       ; preds = %if.end134
  %36 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9218
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %36, i64 0, i32 1, i32 0, !dbg !9218
  %37 = load i32, i32* %type, align 8, !dbg !9218
  %cmp140 = icmp eq i32 %37, 23, !dbg !9218
  %conv142 = zext i1 %cmp140 to i8, !dbg !9218
  call void @llvm.dbg.value(metadata i8 %conv142, metadata !2208, metadata !DIExpression()), !dbg !9186
  store i8 %conv142, i8* %is_orig_reg_p, align 1, !dbg !9220
  br label %if.end216, !dbg !9221

if.else143:                                       ; preds = %if.end134
  %cmp145 = icmp eq i8 %target_available.0, 0, !dbg !9222
  br i1 %cmp145, label %land.lhs.true147, label %lor.lhs.false153, !dbg !9223

land.lhs.true147:                                 ; preds = %if.else143
  %38 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9224
  %type150 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %38, i64 0, i32 1, i32 0, !dbg !9224
  %39 = load i32, i32* %type150, align 8, !dbg !9224
  %cmp151 = icmp eq i32 %39, 23, !dbg !9224
  br i1 %cmp151, label %lor.lhs.false153, label %if.then170, !dbg !9225

lor.lhs.false153:                                 ; preds = %land.lhs.true147, %if.else143
  %40 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9226
  %base156 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %40, i64 0, i32 0, !dbg !9226
  %call160 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base156) #7, !dbg !9226
  %sub162 = sub i32 %call160, %n.0.in, !dbg !9227
  %41 = load i32, i32* @max_insns_to_rename, align 4, !dbg !9228
  %cmp163 = icmp slt i32 %sub162, %41, !dbg !9229
  br i1 %cmp163, label %lor.lhs.false165, label %if.then170, !dbg !9230

lor.lhs.false165:                                 ; preds = %lor.lhs.false153
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 7, !dbg !9231
  %42 = load i32, i32* %spec_done_ds, align 8, !dbg !9231
  %and = and i32 %42, 63, !dbg !9232
  %tobool166 = icmp eq i32 %and, 0, !dbg !9232
  br i1 %tobool166, label %lor.lhs.false167, label %if.then170, !dbg !9233

lor.lhs.false167:                                 ; preds = %lor.lhs.false165
  call void @llvm.dbg.value(metadata i8* %is_orig_reg_p, metadata !2208, metadata !DIExpression(DW_OP_deref)), !dbg !9186
  %call168 = call fastcc zeroext i8 @find_best_reg_for_expr(%struct._expr* %call75, %struct._list_node* %bnds, i8* nonnull %is_orig_reg_p) #7, !dbg !9234
  %tobool169 = icmp eq i8 %call168, 0, !dbg !9234
  br i1 %tobool169, label %if.then170, label %if.end216, !dbg !9235

if.then170:                                       ; preds = %lor.lhs.false167, %lor.lhs.false165, %lor.lhs.false153, %land.lhs.true147
  %43 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9236
  %base173 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %43, i64 0, i32 0, !dbg !9236
  %call177 = call fastcc %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %base173, i32 %n.0) #7, !dbg !9236
  %44 = load i32, i32* @sched_verbose, align 4, !dbg !9237
  %cmp178 = icmp sgt i32 %44, 3, !dbg !9238
  br i1 %cmp178, label %do.body181, label %cleanup688, !dbg !9239

do.body181:                                       ; preds = %if.then170
  %45 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9240
  %tobool182 = icmp eq i8 %45, 0, !dbg !9240
  br i1 %tobool182, label %if.else205, label %do.body184, !dbg !9241

do.body184:                                       ; preds = %do.body181
  %arrayidx188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9242
  %rt_int189 = bitcast %union.rtunion_def* %arrayidx188 to i32*, !dbg !9242
  %46 = load i32, i32* %rt_int189, align 8, !dbg !9242
  %call190 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.50, i64 0, i64 0), i32 %46) #6, !dbg !9242
  %mul191 = shl nsw i32 %call190, 1, !dbg !9242
  %add192 = or i32 %mul191, 1, !dbg !9242
  call void @llvm.dbg.value(metadata i32 %add192, metadata !2219, metadata !DIExpression()), !dbg !9243
  %conv194 = sext i32 %add192 to i64, !dbg !9242
  %47 = alloca i8, i64 %conv194, align 16, !dbg !9242
  call void @llvm.dbg.value(metadata i8* %47, metadata !2227, metadata !DIExpression()), !dbg !9243
  %48 = load i32, i32* %rt_int189, align 8, !dbg !9242
  %call201 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %47, i64 %conv194, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.50, i64 0, i64 0), i32 %48) #6, !dbg !9242
  call void @sel_prepare_string_for_dot_label(i8* nonnull %47) #6, !dbg !9242
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9242
  %call202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %47) #6, !dbg !9242
  br label %cleanup688, !dbg !9242

if.else205:                                       ; preds = %do.body181
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9240
  %arrayidx208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9240
  %rt_int209 = bitcast %union.rtunion_def* %arrayidx208 to i32*, !dbg !9240
  %51 = load i32, i32* %rt_int209, align 8, !dbg !9240
  %call210 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.50, i64 0, i64 0), i32 %51) #6, !dbg !9240
  br label %cleanup688

if.end216:                                        ; preds = %lor.lhs.false167, %if.then138
  %52 = load i8, i8* @pipelining_p, align 1, !dbg !9244
  %tobool218 = icmp eq i8 %52, 0, !dbg !9244
  br i1 %tobool218, label %if.end333, label %land.lhs.true219, !dbg !9245

land.lhs.true219:                                 ; preds = %if.end216
  %orig_sched_cycle = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 9, !dbg !9246
  %53 = load i32, i32* %orig_sched_cycle, align 8, !dbg !9246
  %cmp220 = icmp sgt i32 %53, 0, !dbg !9247
  br i1 %cmp220, label %land.lhs.true222, label %if.end333, !dbg !9248

land.lhs.true222:                                 ; preds = %land.lhs.true219
  %54 = load i8, i8* %is_orig_reg_p, align 1, !dbg !9249
  call void @llvm.dbg.value(metadata i8 %54, metadata !2208, metadata !DIExpression()), !dbg !9186
  %tobool223 = icmp eq i8 %54, 0, !dbg !9249
  br i1 %tobool223, label %if.then228, label %lor.lhs.false224, !dbg !9250

lor.lhs.false224:                                 ; preds = %land.lhs.true222
  %spec_done_ds225 = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 7, !dbg !9251
  %55 = load i32, i32* %spec_done_ds225, align 8, !dbg !9251
  %cmp226 = icmp eq i32 %55, 0, !dbg !9252
  br i1 %cmp226, label %if.end333, label %if.then228, !dbg !9253

if.then228:                                       ; preds = %lor.lhs.false224, %land.lhs.true222
  %56 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9254
  %call230 = call i32 @sel_vinsn_cost(%struct.vinsn_def* %56) #6, !dbg !9255
  call void @llvm.dbg.value(metadata i32 %call230, metadata !2228, metadata !DIExpression()), !dbg !9256
  %57 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !9257
  %ninsns = getelementptr inbounds %struct.loop, %struct.loop* %57, i64 0, i32 1, !dbg !9258
  %58 = load i32, i32* %ninsns, align 4, !dbg !9258
  %cmp231 = icmp slt i32 %58, 9, !dbg !9259
  br i1 %cmp231, label %if.then233, label %if.end278, !dbg !9260

if.then233:                                       ; preds = %if.then228
  %59 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9261
  %base236 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %59, i64 0, i32 0, !dbg !9261
  %call240 = call fastcc %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %base236, i32 %n.0) #7, !dbg !9261
  %60 = load i32, i32* @sched_verbose, align 4, !dbg !9262
  %cmp241 = icmp sgt i32 %60, 3, !dbg !9263
  br i1 %cmp241, label %do.body244, label %cleanup, !dbg !9264

do.body244:                                       ; preds = %if.then233
  %61 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9265
  %tobool245 = icmp eq i8 %61, 0, !dbg !9265
  br i1 %tobool245, label %if.else268, label %do.body247, !dbg !9266

do.body247:                                       ; preds = %do.body244
  %arrayidx251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9267
  %rt_int252 = bitcast %union.rtunion_def* %arrayidx251 to i32*, !dbg !9267
  %62 = load i32, i32* %rt_int252, align 8, !dbg !9267
  %call253 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %62) #6, !dbg !9267
  %mul254 = shl nsw i32 %call253, 1, !dbg !9267
  %add255 = or i32 %mul254, 1, !dbg !9267
  call void @llvm.dbg.value(metadata i32 %add255, metadata !2231, metadata !DIExpression()), !dbg !9268
  %conv257 = sext i32 %add255 to i64, !dbg !9267
  %63 = alloca i8, i64 %conv257, align 16, !dbg !9267
  call void @llvm.dbg.value(metadata i8* %63, metadata !2238, metadata !DIExpression()), !dbg !9268
  %64 = load i32, i32* %rt_int252, align 8, !dbg !9267
  %call264 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %63, i64 %conv257, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %64) #6, !dbg !9267
  call void @sel_prepare_string_for_dot_label(i8* nonnull %63) #6, !dbg !9267
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9267
  %call265 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %63) #6, !dbg !9267
  br label %cleanup, !dbg !9267

if.else268:                                       ; preds = %do.body244
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9265
  %arrayidx271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9265
  %rt_int272 = bitcast %union.rtunion_def* %arrayidx271 to i32*, !dbg !9265
  %67 = load i32, i32* %rt_int272, align 8, !dbg !9265
  %call273 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %67) #6, !dbg !9265
  br label %cleanup

if.end278:                                        ; preds = %if.then228
  %68 = load i32, i32* @num_insns_scheduled, align 4, !dbg !9269
  %sub280 = sub nsw i32 %58, %68, !dbg !9270
  %69 = load i32, i32* @issue_rate, align 4, !dbg !9271
  %mul281 = mul nsw i32 %call230, %69, !dbg !9272
  %div = sdiv i32 %mul281, 2, !dbg !9273
  %cmp282 = icmp slt i32 %sub280, %div, !dbg !9274
  %70 = load i32, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !9275
  %cmp285 = icmp slt i32 %70, %call230, !dbg !9276
  %or.cond = and i1 %cmp282, %cmp285, !dbg !9277
  br i1 %or.cond, label %if.then287, label %cleanup, !dbg !9277

if.then287:                                       ; preds = %if.end278
  %71 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9278
  %base290 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %71, i64 0, i32 0, !dbg !9278
  %call294 = call fastcc %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %base290, i32 %n.0) #7, !dbg !9278
  %72 = load i32, i32* @sched_verbose, align 4, !dbg !9279
  %cmp295 = icmp sgt i32 %72, 3, !dbg !9280
  br i1 %cmp295, label %do.body298, label %cleanup, !dbg !9281

do.body298:                                       ; preds = %if.then287
  %73 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9282
  %tobool299 = icmp eq i8 %73, 0, !dbg !9282
  br i1 %tobool299, label %if.else322, label %do.body301, !dbg !9283

do.body301:                                       ; preds = %do.body298
  %arrayidx305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9284
  %rt_int306 = bitcast %union.rtunion_def* %arrayidx305 to i32*, !dbg !9284
  %74 = load i32, i32* %rt_int306, align 8, !dbg !9284
  %call307 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %74) #6, !dbg !9284
  %mul308 = shl nsw i32 %call307, 1, !dbg !9284
  %add309 = or i32 %mul308, 1, !dbg !9284
  call void @llvm.dbg.value(metadata i32 %add309, metadata !2239, metadata !DIExpression()), !dbg !9285
  %conv311 = sext i32 %add309 to i64, !dbg !9284
  %75 = alloca i8, i64 %conv311, align 16, !dbg !9284
  call void @llvm.dbg.value(metadata i8* %75, metadata !2246, metadata !DIExpression()), !dbg !9285
  %76 = load i32, i32* %rt_int306, align 8, !dbg !9284
  %call318 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %75, i64 %conv311, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %76) #6, !dbg !9284
  call void @sel_prepare_string_for_dot_label(i8* nonnull %75) #6, !dbg !9284
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9284
  %call319 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %75) #6, !dbg !9284
  br label %cleanup, !dbg !9284

if.else322:                                       ; preds = %do.body298
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9282
  %arrayidx325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9282
  %rt_int326 = bitcast %union.rtunion_def* %arrayidx325 to i32*, !dbg !9282
  %79 = load i32, i32* %rt_int326, align 8, !dbg !9282
  %call327 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %78, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %79) #6, !dbg !9282
  br label %cleanup

cleanup:                                          ; preds = %if.end278, %if.then287, %if.else322, %do.body301, %if.then233, %if.else268, %do.body247
  %cleanup.dest.slot.0 = phi i1 [ false, %do.body247 ], [ false, %if.else268 ], [ false, %if.then233 ], [ false, %do.body301 ], [ false, %if.else322 ], [ false, %if.then287 ], [ true, %if.end278 ]
  br i1 %cleanup.dest.slot.0, label %if.end333, label %cleanup688

if.end333:                                        ; preds = %lor.lhs.false224, %if.end216, %cleanup, %land.lhs.true219
  %call334 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %21) #6, !dbg !9286
  %tobool336 = icmp eq i8 %call334, 0, !dbg !9286
  br i1 %tobool336, label %if.end398, label %land.lhs.true337, !dbg !9287

land.lhs.true337:                                 ; preds = %if.end333
  %priority = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 3, !dbg !9288
  %80 = load i32, i32* %priority, align 8, !dbg !9288
  %81 = load i32, i32* @fill_vec_av_set.av_max_prio, align 4, !dbg !9289
  %cmp338 = icmp slt i32 %80, %81, !dbg !9290
  br i1 %cmp338, label %if.then340, label %if.end398, !dbg !9291

if.then340:                                       ; preds = %land.lhs.true337
  %inc341 = add nsw i32 %stalled.0, 1, !dbg !9292
  call void @llvm.dbg.value(metadata i32 %inc341, metadata !2198, metadata !DIExpression()), !dbg !9138
  %cmp342 = icmp slt i32 %min_need_stall.0, 0, !dbg !9293
  %cmp346 = icmp slt i32 %min_need_stall.0, 1, !dbg !9294
  %min_need_stall.0. = select i1 %cmp346, i32 %min_need_stall.0, i32 1, !dbg !9294
  %cond353 = select i1 %cmp342, i32 1, i32 %min_need_stall.0., !dbg !9294
  call void @llvm.dbg.value(metadata i32 %cond353, metadata !2200, metadata !DIExpression()), !dbg !9138
  %82 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9295
  %base356 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %82, i64 0, i32 0, !dbg !9295
  %call360 = call fastcc %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %base356, i32 %n.0) #7, !dbg !9295
  %83 = load i32, i32* @sched_verbose, align 4, !dbg !9296
  %cmp361 = icmp sgt i32 %83, 3, !dbg !9297
  br i1 %cmp361, label %do.body364, label %cleanup688, !dbg !9298

do.body364:                                       ; preds = %if.then340
  %84 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9299
  %tobool365 = icmp eq i8 %84, 0, !dbg !9299
  br i1 %tobool365, label %if.else388, label %do.body367, !dbg !9300

do.body367:                                       ; preds = %do.body364
  %arrayidx371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9301
  %rt_int372 = bitcast %union.rtunion_def* %arrayidx371 to i32*, !dbg !9301
  %85 = load i32, i32* %rt_int372, align 8, !dbg !9301
  %call373 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.52, i64 0, i64 0), i32 %85) #6, !dbg !9301
  %mul374 = shl nsw i32 %call373, 1, !dbg !9301
  %add375 = or i32 %mul374, 1, !dbg !9301
  call void @llvm.dbg.value(metadata i32 %add375, metadata !2247, metadata !DIExpression()), !dbg !9302
  %conv377 = sext i32 %add375 to i64, !dbg !9301
  %86 = alloca i8, i64 %conv377, align 16, !dbg !9301
  call void @llvm.dbg.value(metadata i8* %86, metadata !2254, metadata !DIExpression()), !dbg !9302
  %87 = load i32, i32* %rt_int372, align 8, !dbg !9301
  %call384 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %86, i64 %conv377, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.52, i64 0, i64 0), i32 %87) #6, !dbg !9301
  call void @sel_prepare_string_for_dot_label(i8* nonnull %86) #6, !dbg !9301
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9301
  %call385 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %86) #6, !dbg !9301
  br label %cleanup688, !dbg !9301

if.else388:                                       ; preds = %do.body364
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9299
  %arrayidx391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9299
  %rt_int392 = bitcast %union.rtunion_def* %arrayidx391 to i32*, !dbg !9299
  %90 = load i32, i32* %rt_int392, align 8, !dbg !9299
  %call393 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.52, i64 0, i64 0), i32 %90) #6, !dbg !9299
  br label %cleanup688

if.end398:                                        ; preds = %if.end333, %land.lhs.true337
  %orig_sched_cycle399 = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 9, !dbg !9303
  %91 = load i32, i32* %orig_sched_cycle399, align 8, !dbg !9303
  %cmp400 = icmp slt i32 %91, 1, !dbg !9305
  br i1 %cmp400, label %if.then402, label %if.end411, !dbg !9306

if.then402:                                       ; preds = %if.end398
  %92 = load i32, i32* @fill_vec_av_set.av_max_prio, align 4, !dbg !9307
  %priority403 = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 3, !dbg !9307
  %93 = load i32, i32* %priority403, align 8, !dbg !9307
  %cmp404 = icmp sgt i32 %92, %93, !dbg !9307
  br i1 %cmp404, label %cond.true406, label %cond.false407, !dbg !9307

cond.true406:                                     ; preds = %if.then402
  br label %cond.end409, !dbg !9307

cond.false407:                                    ; preds = %if.then402
  br label %cond.end409, !dbg !9307

cond.end409:                                      ; preds = %cond.false407, %cond.true406
  %cond410 = phi i32 [ %92, %cond.true406 ], [ %93, %cond.false407 ], !dbg !9307
  store i32 %cond410, i32* @fill_vec_av_set.av_max_prio, align 4, !dbg !9308
  br label %if.end411, !dbg !9309

if.end411:                                        ; preds = %cond.end409, %if.end398
  %arrayidx414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9310
  %rt_int415 = bitcast %union.rtunion_def* %arrayidx414 to i32*, !dbg !9310
  %94 = load i32, i32* %rt_int415, align 8, !dbg !9310
  %95 = load i32, i32* %ready_ticks_size, align 8, !dbg !9311
  %cmp416 = icmp slt i32 %94, %95, !dbg !9312
  br i1 %cmp416, label %if.then418, label %if.end522, !dbg !9313

if.then418:                                       ; preds = %if.end411
  %96 = load i32*, i32** %ready_ticks, align 8, !dbg !9314
  %idxprom = sext i32 %94 to i64, !dbg !9314
  %arrayidx423 = getelementptr inbounds i32, i32* %96, i64 %idxprom, !dbg !9314
  %97 = load i32, i32* %arrayidx423, align 4, !dbg !9314
  %98 = load i32, i32* %cycle, align 8, !dbg !9315
  %sub424 = sub nsw i32 %97, %98, !dbg !9316
  call void @llvm.dbg.value(metadata i32 %sub424, metadata !2209, metadata !DIExpression()), !dbg !9186
  br i1 %cmp400, label %if.then428, label %if.end439, !dbg !9317

if.then428:                                       ; preds = %if.then418
  %99 = load i32, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !9318
  %priority429 = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 3, !dbg !9318
  %100 = load i32, i32* %priority429, align 8, !dbg !9318
  %add430 = add nsw i32 %100, %sub424, !dbg !9318
  %cmp431 = icmp sgt i32 %99, %add430, !dbg !9318
  br i1 %cmp431, label %cond.true433, label %cond.false434, !dbg !9318

cond.true433:                                     ; preds = %if.then428
  br label %cond.end437, !dbg !9318

cond.false434:                                    ; preds = %if.then428
  br label %cond.end437, !dbg !9318

cond.end437:                                      ; preds = %cond.false434, %cond.true433
  %cond438 = phi i32 [ %99, %cond.true433 ], [ %add430, %cond.false434 ], !dbg !9318
  store i32 %cond438, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !9320
  br label %if.end439, !dbg !9321

if.end439:                                        ; preds = %cond.end437, %if.then418
  %cmp440 = icmp sgt i32 %sub424, 0, !dbg !9322
  br i1 %cmp440, label %if.then442, label %if.end522, !dbg !9323

if.then442:                                       ; preds = %if.end439
  %inc443 = add nsw i32 %stalled.0, 1, !dbg !9324
  call void @llvm.dbg.value(metadata i32 %inc443, metadata !2198, metadata !DIExpression()), !dbg !9138
  %cmp444 = icmp slt i32 %min_need_stall.0, 0, !dbg !9325
  %cmp448 = icmp slt i32 %min_need_stall.0, %sub424, !dbg !9326
  %min_need_stall.0.sub424 = select i1 %cmp448, i32 %min_need_stall.0, i32 %sub424, !dbg !9326
  %cond455 = select i1 %cmp444, i32 %sub424, i32 %min_need_stall.0.sub424, !dbg !9326
  call void @llvm.dbg.value(metadata i32 %cond455, metadata !2200, metadata !DIExpression()), !dbg !9138
  %101 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9327
  %base458 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %101, i64 0, i32 0, !dbg !9327
  %call462 = call fastcc %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %base458, i32 %n.0) #7, !dbg !9327
  %102 = load i32, i32* @sched_verbose, align 4, !dbg !9328
  %cmp463 = icmp sgt i32 %102, 3, !dbg !9329
  br i1 %cmp463, label %do.body466, label %cleanup688, !dbg !9330

do.body466:                                       ; preds = %if.then442
  %103 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9331
  %tobool467 = icmp eq i8 %103, 0, !dbg !9331
  br i1 %tobool467, label %if.else504, label %do.body469, !dbg !9332

do.body469:                                       ; preds = %do.body466
  %104 = load i32, i32* %rt_int415, align 8, !dbg !9333
  %105 = load i32*, i32** %ready_ticks, align 8, !dbg !9333
  %idxprom480 = sext i32 %104 to i64, !dbg !9333
  %arrayidx481 = getelementptr inbounds i32, i32* %105, i64 %idxprom480, !dbg !9333
  %106 = load i32, i32* %arrayidx481, align 4, !dbg !9333
  %call482 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.53, i64 0, i64 0), i32 %104, i32 %106) #6, !dbg !9333
  %mul483 = shl nsw i32 %call482, 1, !dbg !9333
  %add484 = or i32 %mul483, 1, !dbg !9333
  call void @llvm.dbg.value(metadata i32 %add484, metadata !2255, metadata !DIExpression()), !dbg !9334
  %conv486 = sext i32 %add484 to i64, !dbg !9333
  %107 = alloca i8, i64 %conv486, align 16, !dbg !9333
  call void @llvm.dbg.value(metadata i8* %107, metadata !2264, metadata !DIExpression()), !dbg !9334
  %108 = load i32, i32* %rt_int415, align 8, !dbg !9333
  %109 = load i32*, i32** %ready_ticks, align 8, !dbg !9333
  %idxprom498 = sext i32 %108 to i64, !dbg !9333
  %arrayidx499 = getelementptr inbounds i32, i32* %109, i64 %idxprom498, !dbg !9333
  %110 = load i32, i32* %arrayidx499, align 4, !dbg !9333
  %call500 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %107, i64 %conv486, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.53, i64 0, i64 0), i32 %108, i32 %110) #6, !dbg !9333
  call void @sel_prepare_string_for_dot_label(i8* nonnull %107) #6, !dbg !9333
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9333
  %call501 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %107) #6, !dbg !9333
  br label %cleanup688, !dbg !9333

if.else504:                                       ; preds = %do.body466
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9331
  %113 = load i32, i32* %rt_int415, align 8, !dbg !9331
  %114 = load i32*, i32** %ready_ticks, align 8, !dbg !9331
  %idxprom514 = sext i32 %113 to i64, !dbg !9331
  %arrayidx515 = getelementptr inbounds i32, i32* %114, i64 %idxprom514, !dbg !9331
  %115 = load i32, i32* %arrayidx515, align 4, !dbg !9331
  %call516 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.53, i64 0, i64 0), i32 %113, i32 %115) #6, !dbg !9331
  br label %cleanup688

if.end522:                                        ; preds = %if.end439, %if.end411
  %call523 = call i32 @tick_check_p(%struct._expr* %call75, %struct.deps* %3, %struct._fence* %fence) #6, !dbg !9335
  call void @llvm.dbg.value(metadata i32 %call523, metadata !2209, metadata !DIExpression()), !dbg !9186
  %priority524 = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 3, !dbg !9336
  %116 = load i32, i32* %priority524, align 8, !dbg !9336
  %priority_adj525 = getelementptr inbounds %struct._expr, %struct._expr* %call75, i64 0, i32 4, !dbg !9337
  %117 = load i32, i32* %priority_adj525, align 4, !dbg !9337
  %add526 = add nsw i32 %116, %117, !dbg !9338
  %add527 = add nsw i32 %add526, %call523, !dbg !9339
  call void @llvm.dbg.value(metadata i32 %add527, metadata !2210, metadata !DIExpression()), !dbg !9186
  %118 = load i32, i32* %orig_sched_cycle399, align 8, !dbg !9340
  %cmp529 = icmp slt i32 %118, 1, !dbg !9342
  br i1 %cmp529, label %if.then531, label %if.end538, !dbg !9343

if.then531:                                       ; preds = %if.end522
  %119 = load i32, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !9344
  %cmp532 = icmp sgt i32 %119, %add527, !dbg !9344
  %cond537 = select i1 %cmp532, i32 %119, i32 %add527, !dbg !9344
  store i32 %cond537, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !9345
  br label %if.end538, !dbg !9346

if.end538:                                        ; preds = %if.then531, %if.end522
  %cmp539 = icmp sgt i32 %call523, 0, !dbg !9347
  br i1 %cmp539, label %if.then541, label %if.end650, !dbg !9348

if.then541:                                       ; preds = %if.end538
  %120 = load i32, i32* %rt_int415, align 8, !dbg !9349
  %121 = load i32, i32* %ready_ticks_size, align 8, !dbg !9350
  %cmp547 = icmp slt i32 %120, %121, !dbg !9351
  br i1 %cmp547, label %if.then541.if.end562_crit_edge, label %if.then549, !dbg !9352

if.then541.if.end562_crit_edge:                   ; preds = %if.then541
  %.pre4 = load i32*, i32** %ready_ticks, align 8, !dbg !9353
  br label %if.end562, !dbg !9352

if.then549:                                       ; preds = %if.then541
  %mul554 = mul nsw i32 %120, 3, !dbg !9354
  %div555 = sdiv i32 %mul554, 2, !dbg !9355
  call void @llvm.dbg.value(metadata i32 %div555, metadata !2265, metadata !DIExpression()), !dbg !9177
  %122 = load i8*, i8** %18, align 8, !dbg !9356
  %conv557 = sext i32 %div555 to i64, !dbg !9357
  %conv559 = sext i32 %121 to i64, !dbg !9358
  %call560 = call i8* @xrecalloc(i8* %122, i64 %conv557, i64 %conv559, i64 4) #6, !dbg !9359
  store i8* %call560, i8** %18, align 8, !dbg !9360
  %123 = bitcast i8* %call560 to i32*, !dbg !9361
  %.pre5 = load i32, i32* %rt_int415, align 8, !dbg !9362
  br label %if.end562, !dbg !9361

if.end562:                                        ; preds = %if.then541.if.end562_crit_edge, %if.then549
  %124 = phi i32 [ %120, %if.then541.if.end562_crit_edge ], [ %.pre5, %if.then549 ], !dbg !9362
  %125 = phi i32* [ %.pre4, %if.then541.if.end562_crit_edge ], [ %123, %if.then549 ], !dbg !9353
  %126 = load i32, i32* %cycle, align 8, !dbg !9363
  %add564 = add nsw i32 %126, %call523, !dbg !9364
  %idxprom570 = sext i32 %124 to i64, !dbg !9353
  %arrayidx571 = getelementptr inbounds i32, i32* %125, i64 %idxprom570, !dbg !9353
  store i32 %add564, i32* %arrayidx571, align 4, !dbg !9365
  %inc572 = add nsw i32 %stalled.0, 1, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %inc572, metadata !2198, metadata !DIExpression()), !dbg !9138
  %cmp573 = icmp slt i32 %min_need_stall.0, 0, !dbg !9367
  %cmp577 = icmp slt i32 %min_need_stall.0, %call523, !dbg !9368
  %min_need_stall.0.call523 = select i1 %cmp577, i32 %min_need_stall.0, i32 %call523, !dbg !9368
  %cond584 = select i1 %cmp573, i32 %call523, i32 %min_need_stall.0.call523, !dbg !9368
  call void @llvm.dbg.value(metadata i32 %cond584, metadata !2200, metadata !DIExpression()), !dbg !9138
  %127 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9369
  %base587 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %127, i64 0, i32 0, !dbg !9369
  %call591 = call fastcc %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %base587, i32 %n.0) #7, !dbg !9369
  %128 = load i32, i32* @sched_verbose, align 4, !dbg !9370
  %cmp592 = icmp sgt i32 %128, 3, !dbg !9371
  br i1 %cmp592, label %do.body595, label %cleanup688, !dbg !9372

do.body595:                                       ; preds = %if.end562
  %129 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9373
  %tobool596 = icmp eq i8 %129, 0, !dbg !9373
  br i1 %tobool596, label %if.else633, label %do.body598, !dbg !9374

do.body598:                                       ; preds = %do.body595
  %130 = load i32, i32* %rt_int415, align 8, !dbg !9375
  %131 = load i32*, i32** %ready_ticks, align 8, !dbg !9375
  %idxprom609 = sext i32 %130 to i64, !dbg !9375
  %arrayidx610 = getelementptr inbounds i32, i32* %131, i64 %idxprom609, !dbg !9375
  %132 = load i32, i32* %arrayidx610, align 4, !dbg !9375
  %call611 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.54, i64 0, i64 0), i32 %130, i32 %132) #6, !dbg !9375
  %mul612 = shl nsw i32 %call611, 1, !dbg !9375
  %add613 = or i32 %mul612, 1, !dbg !9375
  call void @llvm.dbg.value(metadata i32 %add613, metadata !2270, metadata !DIExpression()), !dbg !9376
  %conv615 = sext i32 %add613 to i64, !dbg !9375
  %133 = alloca i8, i64 %conv615, align 16, !dbg !9375
  call void @llvm.dbg.value(metadata i8* %133, metadata !2275, metadata !DIExpression()), !dbg !9376
  %134 = load i32, i32* %rt_int415, align 8, !dbg !9375
  %135 = load i32*, i32** %ready_ticks, align 8, !dbg !9375
  %idxprom627 = sext i32 %134 to i64, !dbg !9375
  %arrayidx628 = getelementptr inbounds i32, i32* %135, i64 %idxprom627, !dbg !9375
  %136 = load i32, i32* %arrayidx628, align 4, !dbg !9375
  %call629 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %133, i64 %conv615, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.54, i64 0, i64 0), i32 %134, i32 %136) #6, !dbg !9375
  call void @sel_prepare_string_for_dot_label(i8* nonnull %133) #6, !dbg !9375
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9375
  %call630 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %137, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %133) #6, !dbg !9375
  br label %cleanup688, !dbg !9375

if.else633:                                       ; preds = %do.body595
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9373
  %139 = load i32, i32* %rt_int415, align 8, !dbg !9373
  %140 = load i32*, i32** %ready_ticks, align 8, !dbg !9373
  %idxprom643 = sext i32 %139 to i64, !dbg !9373
  %arrayidx644 = getelementptr inbounds i32, i32* %140, i64 %idxprom643, !dbg !9373
  %141 = load i32, i32* %arrayidx644, align 4, !dbg !9373
  %call645 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %138, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.54, i64 0, i64 0), i32 %139, i32 %141) #6, !dbg !9373
  br label %cleanup688

if.end650:                                        ; preds = %if.end538
  %142 = load i32, i32* @sched_verbose, align 4, !dbg !9377
  %cmp651 = icmp sgt i32 %142, 3, !dbg !9378
  br i1 %cmp651, label %do.body654, label %cleanup688, !dbg !9379

do.body654:                                       ; preds = %if.end650
  %143 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9380
  %tobool655 = icmp eq i8 %143, 0, !dbg !9380
  br i1 %tobool655, label %if.else678, label %do.body657, !dbg !9381

do.body657:                                       ; preds = %do.body654
  %144 = load i32, i32* %rt_int415, align 8, !dbg !9382
  %call663 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i32 %144) #6, !dbg !9382
  %mul664 = shl nsw i32 %call663, 1, !dbg !9382
  %add665 = or i32 %mul664, 1, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %add665, metadata !2276, metadata !DIExpression()), !dbg !9383
  %conv667 = sext i32 %add665 to i64, !dbg !9382
  %145 = alloca i8, i64 %conv667, align 16, !dbg !9382
  call void @llvm.dbg.value(metadata i8* %145, metadata !2281, metadata !DIExpression()), !dbg !9383
  %146 = load i32, i32* %rt_int415, align 8, !dbg !9382
  %call674 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %145, i64 %conv667, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i32 %146) #6, !dbg !9382
  call void @sel_prepare_string_for_dot_label(i8* nonnull %145) #6, !dbg !9382
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9382
  %call675 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %147, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %145) #6, !dbg !9382
  br label %cleanup688, !dbg !9382

if.else678:                                       ; preds = %do.body654
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9380
  %149 = load i32, i32* %rt_int415, align 8, !dbg !9380
  %call683 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %148, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i32 %149) #6, !dbg !9380
  br label %cleanup688

cleanup688:                                       ; preds = %if.end650, %if.else678, %do.body657, %if.end562, %if.else633, %do.body598, %if.then442, %if.else504, %do.body469, %if.then340, %if.else388, %do.body367, %if.then170, %if.else205, %do.body184, %if.then100, %if.else, %do.body113, %cleanup, %if.then80
  %min_need_stall.1 = phi i32 [ %min_need_stall.0, %if.then80 ], [ %min_need_stall.0, %cleanup ], [ %min_need_stall.0, %do.body113 ], [ %min_need_stall.0, %if.else ], [ %min_need_stall.0, %if.then100 ], [ %min_need_stall.0, %do.body184 ], [ %min_need_stall.0, %if.else205 ], [ %min_need_stall.0, %if.then170 ], [ %cond353, %do.body367 ], [ %cond353, %if.else388 ], [ %cond353, %if.then340 ], [ %cond455, %do.body469 ], [ %cond455, %if.else504 ], [ %cond455, %if.then442 ], [ %cond584, %do.body598 ], [ %cond584, %if.else633 ], [ %cond584, %if.end562 ], [ 0, %do.body657 ], [ 0, %if.else678 ], [ 0, %if.end650 ], !dbg !9138
  %stalled.1 = phi i32 [ %stalled.0, %if.then80 ], [ %stalled.0, %cleanup ], [ %stalled.0, %do.body113 ], [ %stalled.0, %if.else ], [ %stalled.0, %if.then100 ], [ %stalled.0, %do.body184 ], [ %stalled.0, %if.else205 ], [ %stalled.0, %if.then170 ], [ %inc341, %do.body367 ], [ %inc341, %if.else388 ], [ %inc341, %if.then340 ], [ %inc443, %do.body469 ], [ %inc443, %if.else504 ], [ %inc443, %if.then442 ], [ %inc572, %do.body598 ], [ %inc572, %if.else633 ], [ %inc572, %if.end562 ], [ %stalled.0, %do.body657 ], [ %stalled.0, %if.else678 ], [ %stalled.0, %if.end650 ], !dbg !9182
  %sched_next_worked.2 = phi i32 [ %sched_next_worked.0, %if.then80 ], [ %spec.select, %cleanup ], [ %spec.select, %do.body113 ], [ %spec.select, %if.else ], [ %spec.select, %if.then100 ], [ %spec.select, %do.body184 ], [ %spec.select, %if.else205 ], [ %spec.select, %if.then170 ], [ %spec.select, %do.body367 ], [ %spec.select, %if.else388 ], [ %spec.select, %if.then340 ], [ %spec.select, %do.body469 ], [ %spec.select, %if.else504 ], [ %spec.select, %if.then442 ], [ %spec.select, %do.body598 ], [ %spec.select, %if.else633 ], [ %spec.select, %if.end562 ], [ %spec.select, %do.body657 ], [ %spec.select, %if.else678 ], [ %spec.select, %if.end650 ], !dbg !9138
  call void @llvm.dbg.value(metadata i32 %sched_next_worked.2, metadata !2197, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %stalled.1, metadata !2198, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %min_need_stall.1, metadata !2200, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i8* %is_orig_reg_p, metadata !2208, metadata !DIExpression(DW_OP_deref)), !dbg !9186
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %is_orig_reg_p) #8, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !2199, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9138
  br label %for.cond64, !dbg !9385, !llvm.loop !9386

for.end697:                                       ; preds = %for.cond64
  %min_need_stall.0.lcssa = phi i32 [ %min_need_stall.0, %for.cond64 ], !dbg !9179
  %stalled.0.lcssa = phi i32 [ %stalled.0, %for.cond64 ], !dbg !9180
  %sched_next_worked.0.lcssa = phi i32 [ %sched_next_worked.0, %for.cond64 ], !dbg !9181
  call void @llvm.dbg.value(metadata i32 %min_need_stall.0.lcssa, metadata !2200, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %stalled.0.lcssa, metadata !2198, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %sched_next_worked.0.lcssa, metadata !2197, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %min_need_stall.0.lcssa, metadata !2200, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %stalled.0.lcssa, metadata !2198, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %sched_next_worked.0.lcssa, metadata !2197, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %min_need_stall.0.lcssa, metadata !2200, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %stalled.0.lcssa, metadata !2198, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %sched_next_worked.0.lcssa, metadata !2197, metadata !DIExpression()), !dbg !9138
  %150 = load %struct.rtx_def*, %struct.rtx_def** %sched_next, align 8, !dbg !9388
  %tobool699 = icmp eq %struct.rtx_def* %150, null, !dbg !9388
  br i1 %tobool699, label %if.end708, label %if.then700, !dbg !9390

if.then700:                                       ; preds = %for.end697
  %cmp701 = icmp eq i32 %sched_next_worked.0.lcssa, 1, !dbg !9391
  br i1 %cmp701, label %cond.end705, label %cond.true703, !dbg !9391

cond.true703:                                     ; preds = %if.then700
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3923, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9391
  br label %cond.end705, !dbg !9391

cond.end705:                                      ; preds = %if.then700, %cond.true703
  store %struct.rtx_def* null, %struct.rtx_def** %sched_next, align 8, !dbg !9393
  br label %if.end708, !dbg !9394

if.end708:                                        ; preds = %for.end697, %cond.end705
  call void @llvm.dbg.value(metadata i32 undef, metadata !2200, metadata !DIExpression()), !dbg !9138
  %151 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9395
  %base715 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %151, i64 0, i32 0, !dbg !9395
  %call719 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base715) #7, !dbg !9395
  %cmp720 = icmp eq i32 %call719, 0, !dbg !9395
  br i1 %cmp720, label %if.then722, label %if.else723, !dbg !9397

if.then722:                                       ; preds = %if.end708
  %152 = icmp sgt i32 %min_need_stall.0.lcssa, 0, !dbg !9398
  %spec.select2 = select i1 %152, i32 %min_need_stall.0.lcssa, i32 0, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %spec.select2, metadata !2200, metadata !DIExpression()), !dbg !9138
  store i32 %spec.select2, i32* %pneed_stall, align 4, !dbg !9399
  br label %cleanup868, !dbg !9401

if.else723:                                       ; preds = %if.end708
  %cmp724 = icmp slt i32 %min_need_stall.0.lcssa, 1, !dbg !9402
  br i1 %cmp724, label %if.end730, label %cond.true726, !dbg !9402

cond.true726:                                     ; preds = %if.else723
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3939, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9402
  br label %if.end730, !dbg !9402

if.end730:                                        ; preds = %cond.true726, %if.else723
  %153 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9403
  %base733 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %153, i64 0, i32 0, !dbg !9403
  %call737 = call fastcc %struct._expr** @VEC_expr_t_base_address(%struct.VEC_expr_t_base* %base733) #7, !dbg !9403
  %154 = bitcast %struct._expr** %call737 to i8*, !dbg !9403
  %155 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9404
  %base740 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %155, i64 0, i32 0, !dbg !9404
  %call744 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base740) #7, !dbg !9404
  %conv745 = zext i32 %call744 to i64, !dbg !9404
  call void @spec_qsort(i8* %154, i64 %conv745, i64 8, i32 (i8*, i8*)* nonnull @sel_rank_for_schedule) #6, !dbg !9405
  %156 = load i32, i32* @sched_verbose, align 4, !dbg !9406
  %cmp746 = icmp sgt i32 %156, 3, !dbg !9407
  br i1 %cmp746, label %do.body749, label %if.end867, !dbg !9408

do.body749:                                       ; preds = %if.end730
  %157 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9409
  %tobool750 = icmp eq i8 %157, 0, !dbg !9409
  br i1 %tobool750, label %if.else779, label %do.body752, !dbg !9410

do.body752:                                       ; preds = %do.body749
  %158 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9411
  %base756 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %158, i64 0, i32 0, !dbg !9411
  %call760 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base756) #7, !dbg !9411
  %call761 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.56, i64 0, i64 0), i32 %call760, i32 %stalled.0.lcssa) #6, !dbg !9411
  %mul762 = shl nsw i32 %call761, 1, !dbg !9411
  %add763 = or i32 %mul762, 1, !dbg !9411
  call void @llvm.dbg.value(metadata i32 %add763, metadata !2282, metadata !DIExpression()), !dbg !9412
  %conv765 = sext i32 %add763 to i64, !dbg !9411
  %159 = alloca i8, i64 %conv765, align 16, !dbg !9411
  call void @llvm.dbg.value(metadata i8* %159, metadata !2288, metadata !DIExpression()), !dbg !9412
  %160 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9411
  %base770 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %160, i64 0, i32 0, !dbg !9411
  %call774 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base770) #7, !dbg !9411
  %call775 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %159, i64 %conv765, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.56, i64 0, i64 0), i32 %call774, i32 %stalled.0.lcssa) #6, !dbg !9411
  call void @sel_prepare_string_for_dot_label(i8* nonnull %159) #6, !dbg !9411
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9411
  %call776 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %159) #6, !dbg !9411
  br label %do.body791, !dbg !9411

if.else779:                                       ; preds = %do.body749
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9409
  %163 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9409
  %base782 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %163, i64 0, i32 0, !dbg !9409
  %call786 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base782) #7, !dbg !9409
  %call787 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %162, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.56, i64 0, i64 0), i32 %call786, i32 %stalled.0.lcssa) #6, !dbg !9409
  br label %do.body791

do.body791:                                       ; preds = %do.body752, %if.else779
  %164 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9413
  %tobool792 = icmp eq i8 %164, 0, !dbg !9413
  br i1 %tobool792, label %if.else821, label %do.body794, !dbg !9414

do.body794:                                       ; preds = %do.body791
  %165 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9415
  %base798 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %165, i64 0, i32 0, !dbg !9415
  %call802 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base798) #7, !dbg !9415
  %call803 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0), i32 %call802) #6, !dbg !9415
  %mul804 = shl nsw i32 %call803, 1, !dbg !9415
  %add805 = or i32 %mul804, 1, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %add805, metadata !2289, metadata !DIExpression()), !dbg !9416
  %conv807 = sext i32 %add805 to i64, !dbg !9415
  %166 = alloca i8, i64 %conv807, align 16, !dbg !9415
  call void @llvm.dbg.value(metadata i8* %166, metadata !2293, metadata !DIExpression()), !dbg !9416
  %167 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9415
  %base812 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %167, i64 0, i32 0, !dbg !9415
  %call816 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base812) #7, !dbg !9415
  %call817 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %166, i64 %conv807, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0), i32 %call816) #6, !dbg !9415
  call void @sel_prepare_string_for_dot_label(i8* nonnull %166) #6, !dbg !9415
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9415
  %call818 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %168, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %166) #6, !dbg !9415
  br label %do.end832, !dbg !9415

if.else821:                                       ; preds = %do.body791
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9413
  %170 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9413
  %base824 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %170, i64 0, i32 0, !dbg !9413
  %call828 = call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base824) #7, !dbg !9413
  %call829 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %169, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0), i32 %call828) #6, !dbg !9413
  br label %do.end832

do.end832:                                        ; preds = %if.else821, %do.body794
  call void @llvm.dbg.value(metadata i32 0, metadata !2199, metadata !DIExpression()), !dbg !9138
  br label %for.cond833, !dbg !9417

for.cond833:                                      ; preds = %for.body842, %do.end832
  %n.1 = phi i32 [ 0, %do.end832 ], [ %inc844, %for.body842 ], !dbg !9419
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !2199, metadata !DIExpression()), !dbg !9138
  %171 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9420
  %base836 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %171, i64 0, i32 0, !dbg !9420
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !2196, metadata !DIExpression(DW_OP_deref)), !dbg !9138
  %call840 = call fastcc i32 @VEC_expr_t_base_iterate(%struct.VEC_expr_t_base* %base836, i32 %n.1, %struct._expr** nonnull %expr) #7, !dbg !9420
  %tobool841 = icmp eq i32 %call840, 0, !dbg !9422
  br i1 %tobool841, label %do.body846, label %for.body842, !dbg !9422

for.body842:                                      ; preds = %for.cond833
  %172 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9423
  call void @llvm.dbg.value(metadata %struct._expr* %172, metadata !2196, metadata !DIExpression()), !dbg !9138
  call void @dump_expr(%struct._expr* %172) #6, !dbg !9424
  %inc844 = add nuw nsw i32 %n.1, 1, !dbg !9425
  call void @llvm.dbg.value(metadata i32 %inc844, metadata !2199, metadata !DIExpression()), !dbg !9138
  br label %for.cond833, !dbg !9426, !llvm.loop !9427

do.body846:                                       ; preds = %for.cond833
  %173 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9429
  %tobool847 = icmp eq i8 %173, 0, !dbg !9429
  br i1 %tobool847, label %if.else862, label %do.body849, !dbg !9430

do.body849:                                       ; preds = %do.body846
  %call851 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !9431
  %mul852 = shl nsw i32 %call851, 1, !dbg !9431
  %add853 = or i32 %mul852, 1, !dbg !9431
  call void @llvm.dbg.value(metadata i32 %add853, metadata !2294, metadata !DIExpression()), !dbg !9432
  %conv855 = sext i32 %add853 to i64, !dbg !9431
  %174 = alloca i8, i64 %conv855, align 16, !dbg !9431
  call void @llvm.dbg.value(metadata i8* %174, metadata !2298, metadata !DIExpression()), !dbg !9432
  %call858 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %174, i64 %conv855, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !9431
  call void @sel_prepare_string_for_dot_label(i8* nonnull %174) #6, !dbg !9431
  %175 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9431
  %call859 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %175, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %174) #6, !dbg !9431
  br label %if.end867, !dbg !9431

if.else862:                                       ; preds = %do.body846
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9429
  %call863 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %176, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !9429
  br label %if.end867

if.end867:                                        ; preds = %do.body849, %if.else862, %if.end730
  store i32 0, i32* %pneed_stall, align 4, !dbg !9433
  br label %cleanup868, !dbg !9434

cleanup868:                                       ; preds = %entry, %if.end867, %if.then722
  %retval.0 = phi i8 [ 0, %if.then722 ], [ 1, %if.end867 ], [ 0, %entry ], !dbg !9138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9435
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !9435
  ret i8 %retval.0, !dbg !9435
}

; Function Attrs: nounwind uwtable
define internal fastcc void @convert_vec_av_set_to_ready() unnamed_addr #5 !dbg !9436 {
entry:
  %expr = alloca %struct._expr*, align 8
  %0 = bitcast %struct._expr** %expr to i8*, !dbg !9445
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9445
  %1 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9446
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %1, i64 0, i32 0, !dbg !9446
  %call = tail call fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %base) #7, !dbg !9446
  store i32 %call, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !9447
  %sub = add nsw i32 %call, -1, !dbg !9448
  store i32 %sub, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !9449
  %cmp = icmp sgt i32 %call, 0, !dbg !9450
  br i1 %cmp, label %cond.end3, label %cond.true1, !dbg !9450

cond.true1:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3976, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9450
  %.pre = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !9451
  br label %cond.end3, !dbg !9450

cond.end3:                                        ; preds = %entry, %cond.true1
  %2 = phi i32 [ %call, %entry ], [ %.pre, %cond.true1 ], !dbg !9451
  %3 = load i32, i32* @max_issue_size, align 4, !dbg !9453
  %cmp5 = icmp sgt i32 %2, %3, !dbg !9454
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9455

if.then:                                          ; preds = %cond.end3
  store i32 %2, i32* @max_issue_size, align 4, !dbg !9456
  tail call void @sched_extend_ready_list(i32 %2) #6, !dbg !9458
  br label %if.end, !dbg !9459

if.end:                                           ; preds = %if.then, %cond.end3
  call void @llvm.dbg.value(metadata i32 0, metadata !9438, metadata !DIExpression()), !dbg !9460
  %4 = bitcast %struct._expr** %expr to i64***, !dbg !9461
  br label %for.cond, !dbg !9462

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ], !dbg !9463
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9438, metadata !DIExpression()), !dbg !9460
  %5 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9464
  %base8 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %5, i64 0, i32 0, !dbg !9464
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !9439, metadata !DIExpression(DW_OP_deref)), !dbg !9460
  %6 = trunc i64 %indvars.iv to i32, !dbg !9464
  %call12 = call fastcc i32 @VEC_expr_t_base_iterate(%struct.VEC_expr_t_base* %base8, i32 %6, %struct._expr** nonnull %expr) #7, !dbg !9464
  %tobool13 = icmp eq i32 %call12, 0, !dbg !9465
  br i1 %tobool13, label %for.end, label %for.body, !dbg !9465

for.body:                                         ; preds = %for.cond
  %7 = load i64**, i64*** %4, align 8, !dbg !9466
  %8 = load i64*, i64** %7, align 8, !dbg !9466
  %9 = load i64, i64* %8, align 8, !dbg !9467
  %10 = load i8*, i8** @ready_try, align 8, !dbg !9468
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %indvars.iv, !dbg !9468
  store i8 0, i8* %arrayidx, align 1, !dbg !9469
  %11 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !9470
  %arrayidx15 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %11, i64 %indvars.iv, !dbg !9471
  %12 = bitcast %struct.rtx_def** %arrayidx15 to i64*, !dbg !9472
  store i64 %9, i64* %12, align 8, !dbg !9472
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !9473
  call void @llvm.dbg.value(metadata i32 undef, metadata !9438, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9460
  br label %for.cond, !dbg !9474, !llvm.loop !9475

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9477
  ret void, !dbg !9477
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @recog_memoized(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !9478 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !9483, metadata !DIExpression()), !dbg !9484
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !9485
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !9485
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !9485
  %1 = load i32, i32* %rt_int, align 8, !dbg !9485
  %cmp = icmp slt i32 %1, 0, !dbg !9487
  br i1 %cmp, label %if.then, label %if.end, !dbg !9488

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !9489
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !9489
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9489
  %call = tail call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %insn, i32* null) #6, !dbg !9490
  store i32 %call, i32* %rt_int, align 8, !dbg !9491
  br label %if.end, !dbg !9492

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %call, %if.then ], [ %1, %entry ], !dbg !9493
  ret i32 %4, !dbg !9494
}

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %vec_) unnamed_addr #0 !dbg !9495 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_base* %vec_, metadata !9501, metadata !DIExpression()), !dbg !9502
  %tobool = icmp eq %struct.VEC_expr_t_base* %vec_, null, !dbg !9503
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9503

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 0, !dbg !9503
  %0 = load i32, i32* %num, align 8, !dbg !9503
  br label %cond.end, !dbg !9503

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !9503
  ret i32 %cond, !dbg !9503
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_expr_t_base_block_remove(%struct.VEC_expr_t_base* %vec_, i32 %ix_, i32 %len_) unnamed_addr #0 !dbg !9504 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_base* %vec_, metadata !9509, metadata !DIExpression()), !dbg !9513
  call void @llvm.dbg.value(metadata i32 0, metadata !9510, metadata !DIExpression()), !dbg !9513
  call void @llvm.dbg.value(metadata i32 %len_, metadata !9511, metadata !DIExpression()), !dbg !9513
  %arrayidx = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 2, i64 0, !dbg !9514
  call void @llvm.dbg.value(metadata %struct._expr** %arrayidx, metadata !9512, metadata !DIExpression()), !dbg !9513
  %num1 = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 0, !dbg !9514
  %0 = load i32, i32* %num1, align 8, !dbg !9514
  %sub = sub i32 %0, %len_, !dbg !9514
  store i32 %sub, i32* %num1, align 8, !dbg !9514
  %1 = bitcast %struct._expr** %arrayidx to i8*, !dbg !9514
  %idx.ext = zext i32 %len_ to i64, !dbg !9514
  %add.ptr = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 2, i64 %idx.ext, !dbg !9514
  %2 = bitcast %struct._expr** %add.ptr to i8*, !dbg !9514
  %conv4 = zext i32 %sub to i64, !dbg !9514
  %mul = shl nuw nsw i64 %conv4, 3, !dbg !9514
  %call = tail call i8* @memmove(i8* nonnull %1, i8* nonnull %2, i64 %mul) #6, !dbg !9514
  ret void, !dbg !9514
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._expr** @VEC_expr_t_heap_safe_push(%struct.VEC_expr_t_heap** %vec_, %struct._expr* %obj_) unnamed_addr #0 !dbg !9515 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_heap** @vec_av_set, metadata !9520, metadata !DIExpression()), !dbg !9522
  call void @llvm.dbg.value(metadata %struct._expr* %obj_, metadata !9521, metadata !DIExpression()), !dbg !9522
  %call = tail call fastcc i32 @VEC_expr_t_heap_reserve(%struct.VEC_expr_t_heap** nonnull @vec_av_set, i32 1) #7, !dbg !9523
  %0 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9523
  %tobool = icmp eq %struct.VEC_expr_t_heap* %0, null, !dbg !9523
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9523

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %0, i64 0, i32 0, !dbg !9523
  br label %cond.end, !dbg !9523

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_expr_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9523
  %call1 = tail call fastcc %struct._expr** @VEC_expr_t_base_quick_push(%struct.VEC_expr_t_base* %cond, %struct._expr* %obj_) #7, !dbg !9523
  ret %struct._expr** %call1, !dbg !9523
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @sel_target_adjust_priority(%struct._expr* %expr) unnamed_addr #5 !dbg !9524 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !9528, metadata !DIExpression()), !dbg !9537
  %priority1 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 3, !dbg !9538
  %0 = load i32, i32* %priority1, align 8, !dbg !9538
  call void @llvm.dbg.value(metadata i32 %0, metadata !9529, metadata !DIExpression()), !dbg !9537
  %1 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 1), align 8, !dbg !9539
  %tobool = icmp eq i32 (%struct.rtx_def*, i32)* %1, null, !dbg !9541
  br i1 %tobool, label %if.end, label %if.then, !dbg !9542

if.then:                                          ; preds = %entry
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !9543
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9543
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %2, i64 0, i32 0, !dbg !9543
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !9543
  %call = tail call i32 %1(%struct.rtx_def* %3, i32 %0) #6, !dbg !9544
  call void @llvm.dbg.value(metadata i32 %call, metadata !9530, metadata !DIExpression()), !dbg !9537
  %.pre = load i32, i32* %priority1, align 8, !dbg !9545
  br label %if.end, !dbg !9546

if.end:                                           ; preds = %entry, %if.then
  %4 = phi i32 [ %.pre, %if.then ], [ %0, %entry ], !dbg !9545
  %new_priority.0 = phi i32 [ %call, %if.then ], [ %0, %entry ], !dbg !9547
  call void @llvm.dbg.value(metadata i32 %new_priority.0, metadata !9530, metadata !DIExpression()), !dbg !9537
  %sub = sub nsw i32 %new_priority.0, %4, !dbg !9548
  %priority_adj = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 4, !dbg !9549
  store i32 %sub, i32* %priority_adj, align 4, !dbg !9550
  %cmp = icmp sgt i32 %sub, -1, !dbg !9551
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !9551

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3308, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9551
  br label %cond.end, !dbg !9551

cond.end:                                         ; preds = %if.end, %cond.true
  %5 = load i32, i32* @sched_verbose, align 4, !dbg !9552
  %cmp4 = icmp sgt i32 %5, 3, !dbg !9553
  br i1 %cmp4, label %do.body, label %if.end39, !dbg !9554

do.body:                                          ; preds = %cond.end
  %6 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9555
  %tobool6 = icmp eq i8 %6, 0, !dbg !9555
  br i1 %tobool6, label %if.else26, label %do.body8, !dbg !9556

do.body8:                                         ; preds = %do.body
  %vinsn9 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !9557
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn9, align 8, !dbg !9557
  %insn_rtx10 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i64 0, i32 0, !dbg !9557
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx10, align 8, !dbg !9557
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9557
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9557
  %9 = load i32, i32* %rt_int, align 8, !dbg !9557
  %10 = load i32, i32* %priority1, align 8, !dbg !9557
  %11 = load i32, i32* %priority_adj, align 4, !dbg !9557
  %call13 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58, i64 0, i64 0), i32 %9, i32 %10, i32 %11, i32 %new_priority.0) #6, !dbg !9557
  %mul = shl nsw i32 %call13, 1, !dbg !9557
  %add = or i32 %mul, 1, !dbg !9557
  call void @llvm.dbg.value(metadata i32 %add, metadata !9531, metadata !DIExpression()), !dbg !9558
  %conv = sext i32 %add to i64, !dbg !9557
  %12 = alloca i8, i64 %conv, align 16, !dbg !9557
  call void @llvm.dbg.value(metadata i8* %12, metadata !9536, metadata !DIExpression()), !dbg !9558
  %13 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn9, align 8, !dbg !9557
  %insn_rtx17 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %13, i64 0, i32 0, !dbg !9557
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx17, align 8, !dbg !9557
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9557
  %rt_int21 = bitcast %union.rtunion_def* %arrayidx20 to i32*, !dbg !9557
  %15 = load i32, i32* %rt_int21, align 8, !dbg !9557
  %16 = load i32, i32* %priority1, align 8, !dbg !9557
  %17 = load i32, i32* %priority_adj, align 4, !dbg !9557
  %call24 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %12, i64 %conv, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58, i64 0, i64 0), i32 %15, i32 %16, i32 %17, i32 %new_priority.0) #6, !dbg !9557
  call void @sel_prepare_string_for_dot_label(i8* nonnull %12) #6, !dbg !9557
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9557
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %12) #6, !dbg !9557
  br label %if.end39, !dbg !9557

if.else26:                                        ; preds = %do.body
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9555
  %vinsn27 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !9555
  %20 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn27, align 8, !dbg !9555
  %insn_rtx28 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %20, i64 0, i32 0, !dbg !9555
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx28, align 8, !dbg !9555
  %arrayidx31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9555
  %rt_int32 = bitcast %union.rtunion_def* %arrayidx31 to i32*, !dbg !9555
  %22 = load i32, i32* %rt_int32, align 8, !dbg !9555
  %23 = load i32, i32* %priority1, align 8, !dbg !9555
  %24 = load i32, i32* %priority_adj, align 4, !dbg !9555
  %call35 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58, i64 0, i64 0), i32 %22, i32 %23, i32 %24, i32 %new_priority.0) #6, !dbg !9555
  br label %if.end39

if.end39:                                         ; preds = %do.body8, %if.else26, %cond.end
  ret i32 %new_priority.0, !dbg !9559
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._expr** @VEC_expr_t_base_address(%struct.VEC_expr_t_base* %vec_) unnamed_addr #0 !dbg !9560 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_base* %vec_, metadata !9564, metadata !DIExpression()), !dbg !9565
  %tobool = icmp eq %struct.VEC_expr_t_base* %vec_, null, !dbg !9566
  %arraydecay = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 2, i64 0, !dbg !9566
  %cond = select i1 %tobool, %struct._expr** null, %struct._expr** %arraydecay, !dbg !9566
  ret %struct._expr** %cond, !dbg !9566
}

; Function Attrs: nounwind uwtable
define internal i32 @sel_rank_for_schedule(i8* %x, i8* %y) #5 !dbg !9567 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !9569, metadata !DIExpression()), !dbg !9590
  call void @llvm.dbg.value(metadata i8* %y, metadata !9570, metadata !DIExpression()), !dbg !9590
  %0 = bitcast i8* %y to %struct._expr**, !dbg !9591
  %1 = load %struct._expr*, %struct._expr** %0, align 8, !dbg !9592
  call void @llvm.dbg.value(metadata %struct._expr* %1, metadata !9571, metadata !DIExpression()), !dbg !9590
  %2 = bitcast i8* %x to %struct._expr**, !dbg !9593
  %3 = load %struct._expr*, %struct._expr** %2, align 8, !dbg !9594
  call void @llvm.dbg.value(metadata %struct._expr* %3, metadata !9572, metadata !DIExpression()), !dbg !9590
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %1, i64 0, i32 0, !dbg !9595
  %4 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9595
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %4, metadata !9575, metadata !DIExpression()), !dbg !9590
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %3, i64 0, i32 0, !dbg !9596
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !9596
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %5, metadata !9576, metadata !DIExpression()), !dbg !9590
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %4, i64 0, i32 0, !dbg !9597
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !9597
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !9573, metadata !DIExpression()), !dbg !9590
  %insn_rtx4 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 0, !dbg !9598
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx4, align 8, !dbg !9598
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !9574, metadata !DIExpression()), !dbg !9590
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !9599
  %bf.load = load i32, i32* %8, align 8, !dbg !9599
  %bf.clear = and i32 %bf.load, 65535, !dbg !9599
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !9599
  br i1 %cmp, label %land.lhs.true, label %entry.if.else_crit_edge, !dbg !9601

entry.if.else_crit_edge:                          ; preds = %entry
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !9602
  %bf.load8.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !9604
  %.pre6 = and i32 %bf.load8.pre, 65535, !dbg !9604
  br label %if.else, !dbg !9601

land.lhs.true:                                    ; preds = %entry
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !9605
  %bf.load5 = load i32, i32* %9, align 8, !dbg !9605
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !9605
  %cmp7 = icmp eq i32 %bf.clear6, 7, !dbg !9605
  br i1 %cmp7, label %if.else, label %cleanup174, !dbg !9606

if.else:                                          ; preds = %entry.if.else_crit_edge, %land.lhs.true
  %bf.clear9.pre-phi = phi i32 [ %.pre6, %entry.if.else_crit_edge ], [ %bf.clear6, %land.lhs.true ], !dbg !9604
  %bf.load33 = phi i32 [ %bf.load8.pre, %entry.if.else_crit_edge ], [ %bf.load5, %land.lhs.true ], !dbg !9604
  %cmp10 = icmp eq i32 %bf.clear9.pre-phi, 7, !dbg !9604
  br i1 %cmp10, label %cleanup174, label %if.end12, !dbg !9607

if.end12:                                         ; preds = %if.else
  %bf.lshr2 = xor i32 %bf.load, %bf.load33, !dbg !9608
  %10 = and i32 %bf.lshr2, 268435456, !dbg !9608
  %cmp18 = icmp eq i32 %10, 0, !dbg !9608
  br i1 %cmp18, label %if.end46, label %if.then19, !dbg !9610

if.then19:                                        ; preds = %if.end12
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %4, i64 0, i32 1, i32 0, !dbg !9611
  %11 = load i32, i32* %type, align 8, !dbg !9611
  %cmp20 = icmp eq i32 %11, 23, !dbg !9611
  br i1 %cmp20, label %if.end36, label %lor.lhs.false, !dbg !9611

lor.lhs.false:                                    ; preds = %if.then19
  %cmp23 = icmp eq i32 %11, 24, !dbg !9611
  br i1 %cmp23, label %if.end36, label %land.lhs.true24, !dbg !9614

land.lhs.true24:                                  ; preds = %lor.lhs.false
  %type26 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 1, i32 0, !dbg !9615
  %12 = load i32, i32* %type26, align 8, !dbg !9615
  %cmp27 = icmp eq i32 %12, 23, !dbg !9615
  br i1 %cmp27, label %if.end36, label %lor.lhs.false28, !dbg !9615

lor.lhs.false28:                                  ; preds = %land.lhs.true24
  %cmp31 = icmp eq i32 %12, 24, !dbg !9615
  br i1 %cmp31, label %if.end36, label %if.then32, !dbg !9616

if.then32:                                        ; preds = %lor.lhs.false28
  %bf.clear35 = and i32 %bf.load33, 268435456, !dbg !9617
  %tobool = icmp eq i32 %bf.clear35, 0, !dbg !9617
  %cond = select i1 %tobool, i32 -1, i32 1, !dbg !9617
  br label %cleanup174, !dbg !9618

if.end36:                                         ; preds = %lor.lhs.false28, %land.lhs.true24, %lor.lhs.false, %if.then19
  %type38 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 1, i32 0, !dbg !9619
  %13 = load i32, i32* %type38, align 8, !dbg !9619
  %cmp39 = icmp eq i32 %13, 23, !dbg !9619
  br i1 %cmp39, label %if.end45, label %lor.lhs.false40, !dbg !9619

lor.lhs.false40:                                  ; preds = %if.end36
  %cmp43 = icmp eq i32 %13, 24, !dbg !9619
  br i1 %cmp43, label %if.end45, label %cleanup174, !dbg !9621

if.end45:                                         ; preds = %lor.lhs.false40, %if.end36
  br label %cleanup174, !dbg !9622

if.end46:                                         ; preds = %if.end12
  %call = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %6) #6, !dbg !9623
  %conv = zext i8 %call to i32, !dbg !9623
  %call47 = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %7) #6, !dbg !9624
  %conv48 = zext i8 %call47 to i32, !dbg !9624
  %sub = sub nsw i32 %conv, %conv48, !dbg !9625
  call void @llvm.dbg.value(metadata i32 %sub, metadata !9577, metadata !DIExpression()), !dbg !9590
  %tobool49 = icmp eq i32 %sub, 0, !dbg !9626
  br i1 %tobool49, label %if.end51, label %cleanup174, !dbg !9628

if.end51:                                         ; preds = %if.end46
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %1, i64 0, i32 5, !dbg !9629
  %14 = load i32, i32* %sched_times, align 8, !dbg !9629
  %cmp52 = icmp sgt i32 %14, 0, !dbg !9631
  br i1 %cmp52, label %if.end51.if.then58_crit_edge, label %lor.lhs.false54, !dbg !9632

if.end51.if.then58_crit_edge:                     ; preds = %if.end51
  %sched_times60.phi.trans.insert = getelementptr inbounds %struct._expr, %struct._expr* %3, i64 0, i32 5, !dbg !9633
  %.pre = load i32, i32* %sched_times60.phi.trans.insert, align 8, !dbg !9635
  br label %if.then58, !dbg !9632

lor.lhs.false54:                                  ; preds = %if.end51
  %sched_times55 = getelementptr inbounds %struct._expr, %struct._expr* %3, i64 0, i32 5, !dbg !9636
  %15 = load i32, i32* %sched_times55, align 8, !dbg !9636
  %cmp56 = icmp sgt i32 %15, 0, !dbg !9637
  br i1 %cmp56, label %if.then58, label %if.end65, !dbg !9638

if.then58:                                        ; preds = %if.end51.if.then58_crit_edge, %lor.lhs.false54
  %16 = phi i32 [ %.pre, %if.end51.if.then58_crit_edge ], [ %15, %lor.lhs.false54 ], !dbg !9635
  %sub61 = sub nsw i32 %14, %16, !dbg !9639
  call void @llvm.dbg.value(metadata i32 %sub61, metadata !9577, metadata !DIExpression()), !dbg !9590
  %tobool62 = icmp eq i32 %sub61, 0, !dbg !9640
  br i1 %tobool62, label %if.end65, label %cleanup174, !dbg !9642

if.end65:                                         ; preds = %if.then58, %lor.lhs.false54
  %call66 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %6) #6, !dbg !9643
  %tobool68 = icmp eq i8 %call66, 0, !dbg !9643
  br i1 %tobool68, label %if.else73, label %land.lhs.true69, !dbg !9645

land.lhs.true69:                                  ; preds = %if.end65
  %call70 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %7) #6, !dbg !9646
  %tobool71 = icmp eq i8 %call70, 0, !dbg !9646
  br i1 %tobool71, label %cleanup174, label %if.else73, !dbg !9647

if.else73:                                        ; preds = %land.lhs.true69, %if.end65
  %call74 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %7) #6, !dbg !9648
  %tobool76 = icmp eq i8 %call74, 0, !dbg !9648
  br i1 %tobool76, label %if.end82, label %land.lhs.true77, !dbg !9650

land.lhs.true77:                                  ; preds = %if.else73
  %call78 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %6) #6, !dbg !9651
  %tobool79 = icmp eq i8 %call78, 0, !dbg !9651
  br i1 %tobool79, label %cleanup174, label %if.end82, !dbg !9652

if.end82:                                         ; preds = %land.lhs.true77, %if.else73
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %1, i64 0, i32 2, !dbg !9653
  %17 = load i32, i32* %usefulness, align 4, !dbg !9653
  %cmp83 = icmp eq i32 %17, 0, !dbg !9654
  br i1 %cmp83, label %if.else97, label %land.lhs.true85, !dbg !9655

land.lhs.true85:                                  ; preds = %if.end82
  %usefulness86 = getelementptr inbounds %struct._expr, %struct._expr* %3, i64 0, i32 2, !dbg !9656
  %18 = load i32, i32* %usefulness86, align 4, !dbg !9656
  %cmp87 = icmp eq i32 %18, 0, !dbg !9657
  br i1 %cmp87, label %if.else97, label %if.then89, !dbg !9658

if.then89:                                        ; preds = %land.lhs.true85
  %priority = getelementptr inbounds %struct._expr, %struct._expr* %3, i64 0, i32 3, !dbg !9659
  %19 = load i32, i32* %priority, align 8, !dbg !9659
  %priority_adj = getelementptr inbounds %struct._expr, %struct._expr* %3, i64 0, i32 4, !dbg !9660
  %20 = load i32, i32* %priority_adj, align 4, !dbg !9660
  %add = add nsw i32 %19, %20, !dbg !9661
  call void @llvm.dbg.value(metadata i32 %add, metadata !9578, metadata !DIExpression()), !dbg !9662
  %priority90 = getelementptr inbounds %struct._expr, %struct._expr* %1, i64 0, i32 3, !dbg !9663
  %21 = load i32, i32* %priority90, align 8, !dbg !9663
  %priority_adj91 = getelementptr inbounds %struct._expr, %struct._expr* %1, i64 0, i32 4, !dbg !9664
  %22 = load i32, i32* %priority_adj91, align 4, !dbg !9664
  %add92 = add nsw i32 %21, %22, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %add92, metadata !9581, metadata !DIExpression()), !dbg !9662
  %mul = mul nsw i32 %add, %18, !dbg !9666
  %mul95 = mul nsw i32 %add92, %17, !dbg !9667
  %sub96 = sub nsw i32 %mul, %mul95, !dbg !9668
  call void @llvm.dbg.value(metadata i32 %sub96, metadata !9577, metadata !DIExpression()), !dbg !9590
  br label %if.end105, !dbg !9669

if.else97:                                        ; preds = %land.lhs.true85, %if.end82
  %priority98 = getelementptr inbounds %struct._expr, %struct._expr* %3, i64 0, i32 3, !dbg !9670
  %23 = load i32, i32* %priority98, align 8, !dbg !9670
  %priority99 = getelementptr inbounds %struct._expr, %struct._expr* %1, i64 0, i32 3, !dbg !9671
  %24 = load i32, i32* %priority99, align 8, !dbg !9671
  %sub100 = sub nsw i32 %23, %24, !dbg !9672
  %priority_adj101 = getelementptr inbounds %struct._expr, %struct._expr* %3, i64 0, i32 4, !dbg !9673
  %25 = load i32, i32* %priority_adj101, align 4, !dbg !9673
  %add102 = add nsw i32 %sub100, %25, !dbg !9674
  %priority_adj103 = getelementptr inbounds %struct._expr, %struct._expr* %1, i64 0, i32 4, !dbg !9675
  %26 = load i32, i32* %priority_adj103, align 4, !dbg !9675
  %sub104 = sub nsw i32 %add102, %26, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %sub104, metadata !9577, metadata !DIExpression()), !dbg !9590
  br label %if.end105

if.end105:                                        ; preds = %if.else97, %if.then89
  %val.0 = phi i32 [ %sub96, %if.then89 ], [ %sub104, %if.else97 ], !dbg !9677
  call void @llvm.dbg.value(metadata i32 %val.0, metadata !9577, metadata !DIExpression()), !dbg !9590
  %tobool106 = icmp eq i32 %val.0, 0, !dbg !9678
  br i1 %tobool106, label %if.end108, label %cleanup174, !dbg !9680

if.end108:                                        ; preds = %if.end105
  %27 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !9681
  %cmp109 = icmp eq %struct.spec_info_def* %27, null, !dbg !9682
  br i1 %cmp109, label %if.end138, label %land.lhs.true111, !dbg !9683

land.lhs.true111:                                 ; preds = %if.end108
  %mask = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %27, i64 0, i32 0, !dbg !9684
  %28 = load i32, i32* %mask, align 8, !dbg !9684
  %cmp112 = icmp eq i32 %28, 0, !dbg !9685
  br i1 %cmp112, label %if.end138, label %if.then114, !dbg !9686

if.then114:                                       ; preds = %land.lhs.true111
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %1, i64 0, i32 7, !dbg !9687
  %29 = load i32, i32* %spec_done_ds, align 8, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %29, metadata !9582, metadata !DIExpression()), !dbg !9688
  %tobool115 = icmp eq i32 %29, 0, !dbg !9689
  br i1 %tobool115, label %if.end119, label %if.then116, !dbg !9691

if.then116:                                       ; preds = %if.then114
  %call117 = tail call i32 @ds_weak(i32 %29) #6, !dbg !9692
  call void @llvm.dbg.value(metadata i32 %call117, metadata !9586, metadata !DIExpression()), !dbg !9688
  br label %if.end119, !dbg !9693

if.end119:                                        ; preds = %if.then114, %if.then116
  %dw1.0 = phi i32 [ %call117, %if.then116 ], [ 63, %if.then114 ], !dbg !9694
  call void @llvm.dbg.value(metadata i32 %dw1.0, metadata !9586, metadata !DIExpression()), !dbg !9688
  %spec_done_ds120 = getelementptr inbounds %struct._expr, %struct._expr* %3, i64 0, i32 7, !dbg !9695
  %30 = load i32, i32* %spec_done_ds120, align 8, !dbg !9695
  call void @llvm.dbg.value(metadata i32 %30, metadata !9585, metadata !DIExpression()), !dbg !9688
  %tobool121 = icmp eq i32 %30, 0, !dbg !9696
  br i1 %tobool121, label %if.end125, label %if.then122, !dbg !9698

if.then122:                                       ; preds = %if.end119
  %call123 = tail call i32 @ds_weak(i32 %30) #6, !dbg !9699
  call void @llvm.dbg.value(metadata i32 %call123, metadata !9588, metadata !DIExpression()), !dbg !9688
  br label %if.end125, !dbg !9700

if.end125:                                        ; preds = %if.end119, %if.then122
  %dw2.0 = phi i32 [ %call123, %if.then122 ], [ 63, %if.end119 ], !dbg !9701
  call void @llvm.dbg.value(metadata i32 %dw2.0, metadata !9588, metadata !DIExpression()), !dbg !9688
  %sub126 = sub nsw i32 %dw2.0, %dw1.0, !dbg !9702
  call void @llvm.dbg.value(metadata i32 %sub126, metadata !9589, metadata !DIExpression()), !dbg !9688
  %sub126.off = add i32 %sub126, 7, !dbg !9703
  %31 = icmp ult i32 %sub126.off, 15, !dbg !9703
  br i1 %31, label %if.end138, label %cleanup174

if.end138:                                        ; preds = %land.lhs.true111, %if.end108, %if.end125
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9705
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9705
  %32 = load i32, i32* %rt_int, align 8, !dbg !9705
  %33 = load i32, i32* @first_emitted_uid, align 4, !dbg !9707
  %cmp139 = icmp slt i32 %32, %33, !dbg !9708
  br i1 %cmp139, label %land.lhs.true141, label %if.end149, !dbg !9709

land.lhs.true141:                                 ; preds = %if.end138
  %arrayidx144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9710
  %rt_int145 = bitcast %union.rtunion_def* %arrayidx144 to i32*, !dbg !9710
  %34 = load i32, i32* %rt_int145, align 8, !dbg !9710
  %cmp146 = icmp slt i32 %34, %33, !dbg !9711
  br i1 %cmp146, label %if.end149, label %cleanup174, !dbg !9712

if.end149:                                        ; preds = %land.lhs.true141, %if.end138
  br i1 %cmp139, label %if.end149.if.end164_crit_edge, label %land.lhs.true156, !dbg !9713

if.end149.if.end164_crit_edge:                    ; preds = %if.end149
  %arrayidx171.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9590
  %rt_int172.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx171.phi.trans.insert to i32*, !dbg !9590
  %.pre5 = load i32, i32* %rt_int172.phi.trans.insert, align 8, !dbg !9715
  br label %if.end164, !dbg !9713

land.lhs.true156:                                 ; preds = %if.end149
  %arrayidx159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9716
  %rt_int160 = bitcast %union.rtunion_def* %arrayidx159 to i32*, !dbg !9716
  %35 = load i32, i32* %rt_int160, align 8, !dbg !9716
  %cmp161 = icmp slt i32 %35, %33, !dbg !9717
  br i1 %cmp161, label %cleanup174, label %if.end164, !dbg !9718

if.end164:                                        ; preds = %if.end149.if.end164_crit_edge, %land.lhs.true156
  %36 = phi i32 [ %.pre5, %if.end149.if.end164_crit_edge ], [ %35, %land.lhs.true156 ], !dbg !9715
  %sub173 = sub nsw i32 %32, %36, !dbg !9719
  br label %cleanup174, !dbg !9720

cleanup174:                                       ; preds = %if.then58, %land.lhs.true69, %land.lhs.true77, %land.lhs.true141, %if.end105, %if.end46, %land.lhs.true156, %lor.lhs.false40, %if.else, %land.lhs.true, %if.end125, %if.end164, %if.end45, %if.then32
  %retval.1 = phi i32 [ -1, %if.end45 ], [ %cond, %if.then32 ], [ %sub126, %if.end125 ], [ %sub173, %if.end164 ], [ -1, %land.lhs.true ], [ 1, %if.else ], [ 1, %lor.lhs.false40 ], [ %sub, %if.end46 ], [ %sub61, %if.then58 ], [ -1, %land.lhs.true69 ], [ 1, %land.lhs.true77 ], [ %val.0, %if.end105 ], [ -1, %land.lhs.true141 ], [ 1, %land.lhs.true156 ], !dbg !9590
  ret i32 %retval.1, !dbg !9721
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._expr* @VEC_expr_t_base_index(%struct.VEC_expr_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !9722 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_base* %vec_, metadata !9726, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9727, metadata !DIExpression()), !dbg !9728
  br label %land.end, !dbg !9729

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !9729
  %arrayidx = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9729
  %0 = load %struct._expr*, %struct._expr** %arrayidx, align 8, !dbg !9729
  ret %struct._expr* %0, !dbg !9729
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !9730 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_base* %vec_, metadata !9734, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9735, metadata !DIExpression()), !dbg !9738
  %idxprom = zext i32 %ix_ to i64, !dbg !9739
  %arrayidx = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9739
  call void @llvm.dbg.value(metadata %struct._expr** %arrayidx, metadata !9736, metadata !DIExpression()), !dbg !9738
  %0 = load %struct._expr*, %struct._expr** %arrayidx, align 8, !dbg !9739
  call void @llvm.dbg.value(metadata %struct._expr* %0, metadata !9737, metadata !DIExpression()), !dbg !9738
  %num2 = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 0, !dbg !9739
  %1 = load i32, i32* %num2, align 8, !dbg !9739
  %dec = add i32 %1, -1, !dbg !9739
  store i32 %dec, i32* %num2, align 8, !dbg !9739
  %idxprom3 = zext i32 %dec to i64, !dbg !9739
  %arrayidx4 = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 2, i64 %idxprom3, !dbg !9739
  %2 = bitcast %struct._expr** %arrayidx4 to i64*, !dbg !9739
  %3 = load i64, i64* %2, align 8, !dbg !9739
  %4 = bitcast %struct._expr** %arrayidx to i64*, !dbg !9739
  store i64 %3, i64* %4, align 8, !dbg !9739
  ret %struct._expr* %0, !dbg !9739
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vinsn_vec_has_expr_p(%struct.VEC_vinsn_t_heap* %vinsn_vec, %struct._expr* %expr) unnamed_addr #5 !dbg !9740 {
entry:
  %vinsn = alloca %struct.vinsn_def*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_heap* %vinsn_vec, metadata !9744, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !9745, metadata !DIExpression()), !dbg !9748
  %0 = bitcast %struct.vinsn_def** %vinsn to i8*, !dbg !9749
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9749
  call void @llvm.dbg.value(metadata i32 0, metadata !9747, metadata !DIExpression()), !dbg !9748
  %vinsn2 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !9750
  %base = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %vinsn_vec, i64 0, i32 0, !dbg !9756
  br label %for.cond, !dbg !9757

for.cond:                                         ; preds = %for.inc, %entry
  %n.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !9758
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !9747, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata %struct.vinsn_def** %vinsn, metadata !9746, metadata !DIExpression(DW_OP_deref)), !dbg !9748
  %call = call fastcc i32 @VEC_vinsn_t_base_iterate(%struct.VEC_vinsn_t_base* %base, i32 %n.0, %struct.vinsn_def** nonnull %vinsn) #7, !dbg !9759
  %tobool1 = icmp eq i32 %call, 0, !dbg !9760
  br i1 %tobool1, label %cleanup, label %for.body, !dbg !9760

for.body:                                         ; preds = %for.cond
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9761
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %1, metadata !9746, metadata !DIExpression()), !dbg !9748
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 1, i32 0, !dbg !9761
  %2 = load i32, i32* %type, align 8, !dbg !9761
  %cmp = icmp eq i32 %2, 23, !dbg !9761
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %1, metadata !9746, metadata !DIExpression()), !dbg !9748
  br i1 %cmp, label %if.then, label %if.else, !dbg !9762

if.then:                                          ; preds = %for.body
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn2, align 8, !dbg !9750
  %call3 = call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %1, %struct.vinsn_def* %3) #6, !dbg !9763
  %tobool4 = icmp eq i8 %call3, 0, !dbg !9763
  br i1 %tobool4, label %for.inc, label %cleanup, !dbg !9764

if.else:                                          ; preds = %for.body
  %reg_sets = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 1, i32 3, !dbg !9765
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !9765
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn2, align 8, !dbg !9768
  %reg_sets9 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 1, i32 3, !dbg !9768
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets9, align 8, !dbg !9768
  %call10 = call zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %6) #6, !dbg !9769
  %tobool11 = icmp eq i8 %call10, 0, !dbg !9769
  br i1 %tobool11, label %for.inc, label %cleanup, !dbg !9770

for.inc:                                          ; preds = %if.then, %if.else
  %inc = add nuw nsw i32 %n.0, 1, !dbg !9771
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9747, metadata !DIExpression()), !dbg !9748
  br label %for.cond, !dbg !9772, !llvm.loop !9773

cleanup:                                          ; preds = %if.then, %if.else, %for.cond
  %retval.0 = phi i8 [ 1, %if.then ], [ 1, %if.else ], [ 0, %for.cond ], !dbg !9748
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9775
  ret i8 %retval.0, !dbg !9775
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @find_best_reg_for_expr(%struct._expr* %expr, %struct._list_node* %bnds, i8* %is_orig_reg_p) unnamed_addr #5 !dbg !2305 {
entry:
  %original_insns = alloca %struct._list_node*, align 8
  %hard_regs_used = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !2309, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds, metadata !2310, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i8* %is_orig_reg_p, metadata !2311, metadata !DIExpression()), !dbg !9776
  %0 = bitcast %struct._list_node** %original_insns to i8*, !dbg !9777
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9777
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !2313, metadata !DIExpression()), !dbg !9776
  store %struct._list_node* null, %struct._list_node** %original_insns, align 8, !dbg !9778
  store i8 0, i8* %is_orig_reg_p, align 1, !dbg !9779
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !9780
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9780
  %reg_sets = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 1, i32 3, !dbg !9780
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !9780
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %2, i64 0, i32 0, !dbg !9780
  %3 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !9780
  %tobool = icmp eq %struct.bitmap_element_def* %3, null, !dbg !9780
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9782

land.lhs.true:                                    ; preds = %entry
  %reg_clobbers = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i64 0, i32 1, i32 4, !dbg !9783
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !9783
  %first3 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %4, i64 0, i32 0, !dbg !9783
  %5 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first3, align 8, !dbg !9783
  %tobool4 = icmp eq %struct.bitmap_element_def* %5, null, !dbg !9783
  br i1 %tobool4, label %cleanup, label %if.end, !dbg !9784

if.end:                                           ; preds = %land.lhs.true, %entry
  %call = tail call %struct.bitmap_head_def* @get_clear_regset_from_pool() #6, !dbg !9785
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !2312, metadata !DIExpression()), !dbg !9776
  store i64 0, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !9786
  call void @llvm.dbg.value(metadata %struct._list_node** %original_insns, metadata !2313, metadata !DIExpression(DW_OP_deref)), !dbg !9776
  call fastcc void @collect_unavailable_regs_from_bnds(%struct._expr* %expr, %struct._list_node* %bnds, %struct.bitmap_head_def* %call, %struct.reg_rename* nonnull @find_best_reg_for_expr.reg_rename_data, %struct._list_node** nonnull %original_insns) #7, !dbg !9787
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9788
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %6, i64 0, i32 1, i32 0, !dbg !9788
  %7 = load i32, i32* %type, align 8, !dbg !9788
  %cmp = icmp eq i32 %7, 23, !dbg !9788
  br i1 %cmp, label %if.then7, label %if.else29, !dbg !9789

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2315, metadata !DIExpression()), !dbg !9790
  call fastcc void @verify_target_availability(%struct._expr* %expr, %struct.bitmap_head_def* %call, %struct.reg_rename* nonnull @find_best_reg_for_expr.reg_rename_data) #7, !dbg !9791
  %8 = load i32, i32* @reload_completed, align 4, !dbg !9792
  %tobool8 = icmp eq i32 %8, 0, !dbg !9792
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !9793

if.then9:                                         ; preds = %if.then7
  %9 = bitcast i64* %hard_regs_used to i8*, !dbg !9794
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !9794
  call void @llvm.dbg.value(metadata i64 0, metadata !2318, metadata !DIExpression()), !dbg !9795
  store i64 0, i64* %hard_regs_used, align 8, !dbg !9796
  call void @llvm.dbg.value(metadata i64* %hard_regs_used, metadata !2318, metadata !DIExpression(DW_OP_deref)), !dbg !9795
  call void @reg_set_to_hard_reg_set(i64* nonnull %hard_regs_used, %struct.bitmap_head_def* %call) #6, !dbg !9796
  %10 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !9798
  %11 = load i64, i64* %hard_regs_used, align 8, !dbg !9798
  call void @llvm.dbg.value(metadata i64 %11, metadata !2318, metadata !DIExpression()), !dbg !9795
  %or = or i64 %11, %10, !dbg !9798
  call void @llvm.dbg.value(metadata i64 %or, metadata !2318, metadata !DIExpression()), !dbg !9795
  store i64 %or, i64* %hard_regs_used, align 8, !dbg !9798
  call void @llvm.dbg.value(metadata i64 %or, metadata !2318, metadata !DIExpression()), !dbg !9795
  %12 = load %struct._list_node*, %struct._list_node** %original_insns, align 8, !dbg !9799
  call void @llvm.dbg.value(metadata %struct._list_node* %12, metadata !2313, metadata !DIExpression()), !dbg !9776
  %call10 = call fastcc %struct.rtx_def* @choose_best_reg(i64 %or, %struct.reg_rename* nonnull @find_best_reg_for_expr.reg_rename_data, %struct._list_node* %12, i8* %is_orig_reg_p) #7, !dbg !9800
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !2315, metadata !DIExpression()), !dbg !9790
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !9801
  br label %if.end12, !dbg !9802

if.else:                                          ; preds = %if.then7
  %13 = load %struct._list_node*, %struct._list_node** %original_insns, align 8, !dbg !9803
  call void @llvm.dbg.value(metadata %struct._list_node* %13, metadata !2313, metadata !DIExpression()), !dbg !9776
  %call11 = call fastcc %struct.rtx_def* @choose_best_pseudo_reg(%struct.bitmap_head_def* %call, %struct.reg_rename* nonnull @find_best_reg_for_expr.reg_rename_data, %struct._list_node* %13, i8* %is_orig_reg_p) #7, !dbg !9804
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call11, metadata !2315, metadata !DIExpression()), !dbg !9790
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then9
  %best_reg.0 = phi %struct.rtx_def* [ %call10, %if.then9 ], [ %call11, %if.else ], !dbg !9805
  call void @llvm.dbg.value(metadata %struct.rtx_def* %best_reg.0, metadata !2315, metadata !DIExpression()), !dbg !9790
  %tobool13 = icmp eq %struct.rtx_def* %best_reg.0, null, !dbg !9806
  br i1 %tobool13, label %if.end46, label %if.else15, !dbg !9808

if.else15:                                        ; preds = %if.end12
  %14 = load i8, i8* %is_orig_reg_p, align 1, !dbg !9809
  %tobool16 = icmp eq i8 %14, 0, !dbg !9809
  br i1 %tobool16, label %if.else19, label %if.then17, !dbg !9811

if.then17:                                        ; preds = %if.else15
  %15 = load %struct._list_node*, %struct._list_node** %original_insns, align 8, !dbg !9812
  call void @llvm.dbg.value(metadata %struct._list_node* %15, metadata !2313, metadata !DIExpression()), !dbg !9776
  %call18 = call fastcc zeroext i8 @try_replace_dest_reg(%struct._list_node* %15, %struct.rtx_def* nonnull %best_reg.0, %struct._expr* %expr) #7, !dbg !9814
  call void @llvm.dbg.value(metadata i8 %call18, metadata !2314, metadata !DIExpression()), !dbg !9776
  br label %if.end46, !dbg !9815

if.else19:                                        ; preds = %if.else15
  %16 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9816
  %call21 = call i32 @sel_vinsn_cost(%struct.vinsn_def* %16) #6, !dbg !9819
  %cmp22 = icmp slt i32 %call21, 2, !dbg !9820
  br i1 %cmp22, label %if.end46, label %if.else24, !dbg !9821

if.else24:                                        ; preds = %if.else19
  %17 = load %struct._list_node*, %struct._list_node** %original_insns, align 8, !dbg !9822
  call void @llvm.dbg.value(metadata %struct._list_node* %17, metadata !2313, metadata !DIExpression()), !dbg !9776
  %call25 = call fastcc zeroext i8 @try_replace_dest_reg(%struct._list_node* %17, %struct.rtx_def* nonnull %best_reg.0, %struct._expr* %expr) #7, !dbg !9823
  call void @llvm.dbg.value(metadata i8 %call25, metadata !2314, metadata !DIExpression()), !dbg !9776
  br label %if.end46

if.else29:                                        ; preds = %if.end
  %18 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !9824
  %call31 = call fastcc zeroext i8 @vinsn_writes_one_of_regs_p(%struct.vinsn_def* %6, %struct.bitmap_head_def* %call, i64 %18) #7, !dbg !9827
  %tobool32 = icmp eq i8 %call31, 0, !dbg !9827
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !9828
  %19 = load i8, i8* %target_available, align 8, !dbg !9828
  br i1 %tobool32, label %if.else36, label %if.then33, !dbg !9829

if.then33:                                        ; preds = %if.else29
  call void @llvm.dbg.value(metadata i8 0, metadata !2314, metadata !DIExpression()), !dbg !9776
  %cmp34 = icmp slt i8 %19, 1, !dbg !9830
  br i1 %cmp34, label %if.end46, label %cond.true, !dbg !9830

cond.true:                                        ; preds = %if.then33
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1772, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9830
  br label %if.end46, !dbg !9830

if.else36:                                        ; preds = %if.else29
  call void @llvm.dbg.value(metadata i8 1, metadata !2314, metadata !DIExpression()), !dbg !9776
  %cmp39 = icmp eq i8 %19, 0, !dbg !9832
  br i1 %cmp39, label %cond.true41, label %if.end46, !dbg !9832

cond.true41:                                      ; preds = %if.else36
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1777, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9832
  br label %if.end46, !dbg !9832

if.end46:                                         ; preds = %if.end12, %if.else36, %if.then33, %cond.true, %cond.true41, %if.else24, %if.else19, %if.then17
  %reg_ok.4 = phi i8 [ 0, %if.end12 ], [ %call18, %if.then17 ], [ %call25, %if.else24 ], [ 0, %if.else19 ], [ 0, %if.then33 ], [ 0, %cond.true ], [ 1, %if.else36 ], [ 1, %cond.true41 ], !dbg !9834
  call void @llvm.dbg.value(metadata i8 %reg_ok.4, metadata !2314, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata %struct._list_node** %original_insns, metadata !2313, metadata !DIExpression(DW_OP_deref)), !dbg !9776
  call fastcc void @_list_clear(%struct._list_node** nonnull %original_insns) #7, !dbg !9835
  call void @return_regset_to_pool(%struct.bitmap_head_def* %call) #6, !dbg !9836
  br label %cleanup, !dbg !9837

cleanup:                                          ; preds = %land.lhs.true, %if.end46
  %retval.0 = phi i8 [ %reg_ok.4, %if.end46 ], [ 1, %land.lhs.true ], !dbg !9776
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9838
  ret i8 %retval.0, !dbg !9838
}

declare dso_local i32 @tick_check_p(%struct._expr*, %struct.deps*, %struct._fence*) local_unnamed_addr #2

declare dso_local i8* @xrecalloc(i8*, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_t_base_iterate(%struct.VEC_expr_t_base* %vec_, i32 %ix_, %struct._expr** %ptr) unnamed_addr #0 !dbg !9839 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_base* %vec_, metadata !9843, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9844, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata %struct._expr** %ptr, metadata !9845, metadata !DIExpression()), !dbg !9846
  %tobool = icmp eq %struct.VEC_expr_t_base* %vec_, null, !dbg !9847
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !9847

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 0, !dbg !9847
  %0 = load i32, i32* %num, align 8, !dbg !9847
  %cmp = icmp ugt i32 %0, %ix_, !dbg !9847
  br i1 %cmp, label %if.then, label %if.else, !dbg !9849

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !9850
  %arrayidx = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9850
  %1 = load %struct._expr*, %struct._expr** %arrayidx, align 8, !dbg !9850
  br label %return, !dbg !9850

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !9852

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct._expr* [ null, %if.else ], [ %1, %if.then ], !dbg !9854
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !9854
  store %struct._expr* %storemerge, %struct._expr** %ptr, align 8, !dbg !9854
  ret i32 %retval.0, !dbg !9849
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_t_heap_reserve(%struct.VEC_expr_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9855 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_heap** @vec_av_set, metadata !9859, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.value(metadata i32 1, metadata !9860, metadata !DIExpression()), !dbg !9862
  %0 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9863
  %tobool = icmp eq %struct.VEC_expr_t_heap* %0, null, !dbg !9863
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9863

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %0, i64 0, i32 0, !dbg !9863
  br label %cond.end, !dbg !9863

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_expr_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9863
  %call = tail call fastcc i32 @VEC_expr_t_base_space(%struct.VEC_expr_t_base* %cond, i32 1) #7, !dbg !9863
  %tobool1 = icmp eq i32 %call, 0, !dbg !9863
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9863
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9861, metadata !DIExpression()), !dbg !9862
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9863

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_expr_t_heap** @vec_av_set to i8**), align 8, !dbg !9864
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 1) #6, !dbg !9864
  store i8* %call3, i8** bitcast (%struct.VEC_expr_t_heap** @vec_av_set to i8**), align 8, !dbg !9864
  br label %if.end, !dbg !9864

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9863
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._expr** @VEC_expr_t_base_quick_push(%struct.VEC_expr_t_base* %vec_, %struct._expr* %obj_) unnamed_addr #0 !dbg !9866 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_base* %vec_, metadata !9870, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata %struct._expr* %obj_, metadata !9871, metadata !DIExpression()), !dbg !9873
  %num1 = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 0, !dbg !9874
  %0 = load i32, i32* %num1, align 8, !dbg !9874
  %inc = add i32 %0, 1, !dbg !9874
  store i32 %inc, i32* %num1, align 8, !dbg !9874
  %idxprom = zext i32 %0 to i64, !dbg !9874
  %arrayidx = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9874
  call void @llvm.dbg.value(metadata %struct._expr** %arrayidx, metadata !9872, metadata !DIExpression()), !dbg !9873
  store %struct._expr* %obj_, %struct._expr** %arrayidx, align 8, !dbg !9874
  ret %struct._expr** %arrayidx, !dbg !9874
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_expr_t_base_space(%struct.VEC_expr_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9875 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_base* %vec_, metadata !9879, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i32 1, metadata !9880, metadata !DIExpression()), !dbg !9881
  %tobool = icmp eq %struct.VEC_expr_t_base* %vec_, null, !dbg !9882
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9882

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 1, !dbg !9882
  %0 = load i32, i32* %alloc, align 4, !dbg !9882
  %num = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %vec_, i64 0, i32 0, !dbg !9882
  %1 = load i32, i32* %num, align 8, !dbg !9882
  %cmp1 = icmp ne i32 %0, %1, !dbg !9882
  %phitmp = zext i1 %cmp1 to i32, !dbg !9882
  br label %cond.end, !dbg !9882

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9882

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !9882
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vinsn_t_base_iterate(%struct.VEC_vinsn_t_base* %vec_, i32 %ix_, %struct.vinsn_def** %ptr) unnamed_addr #0 !dbg !9883 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_base* %vec_, metadata !9889, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9890, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata %struct.vinsn_def** %ptr, metadata !9891, metadata !DIExpression()), !dbg !9892
  %tobool = icmp eq %struct.VEC_vinsn_t_base* %vec_, null, !dbg !9893
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !9893

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %vec_, i64 0, i32 0, !dbg !9893
  %0 = load i32, i32* %num, align 8, !dbg !9893
  %cmp = icmp ugt i32 %0, %ix_, !dbg !9893
  br i1 %cmp, label %if.then, label %if.else, !dbg !9895

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !9896
  %arrayidx = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9896
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %arrayidx, align 8, !dbg !9896
  br label %return, !dbg !9896

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !9898

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.vinsn_def* [ null, %if.else ], [ %1, %if.then ], !dbg !9900
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !9900
  store %struct.vinsn_def* %storemerge, %struct.vinsn_def** %ptr, align 8, !dbg !9900
  ret i32 %retval.0, !dbg !9895
}

declare dso_local zeroext i8 @vinsn_equal_p(%struct.vinsn_def*, %struct.vinsn_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @collect_unavailable_regs_from_bnds(%struct._expr* %expr, %struct._list_node* %bnds, %struct.bitmap_head_def* %used_regs, %struct.reg_rename* %reg_rename_p, %struct._list_node** %original_insns) unnamed_addr #5 !dbg !9901 {
entry:
  %orig_ops = alloca %struct._list_node*, align 8
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !9906, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds, metadata !9907, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %used_regs, metadata !9908, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, metadata !9909, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata %struct._list_node** %original_insns, metadata !9910, metadata !DIExpression()), !dbg !9917
  %0 = bitcast %struct._list_node** %orig_ops to i8*, !dbg !9918
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !9919
  br label %for.cond, !dbg !9921

for.cond:                                         ; preds = %cleanup, %entry
  %bnds.addr.0 = phi %struct._list_node* [ %bnds, %entry ], [ %5, %cleanup ]
  call void @llvm.dbg.value(metadata %struct._list_node* %bnds.addr.0, metadata !9907, metadata !DIExpression()), !dbg !9917
  %tobool = icmp eq %struct._list_node* %bnds.addr.0, null, !dbg !9922
  br i1 %tobool, label %for.end, label %for.body, !dbg !9922

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9923
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !9915, metadata !DIExpression()), !dbg !9918
  store %struct._list_node* null, %struct._list_node** %orig_ops, align 8, !dbg !9924
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds.addr.0, i64 0, i32 1, !dbg !9925
  call void @llvm.dbg.value(metadata %union.anon.0* %u, metadata !9916, metadata !DIExpression()), !dbg !9918
  %1 = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds.addr.0, i64 0, i32 1, i32 0, i32 4, !dbg !9926
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !9926
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9927
  %call = call zeroext i8 @av_set_is_in_p(%struct._list_node* %2, %struct.vinsn_def* %3) #6, !dbg !9928
  %tobool2 = icmp eq i8 %call, 0, !dbg !9928
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !9929

if.end:                                           ; preds = %for.body
  %bnd1 = bitcast %union.anon.0* %u to %struct._bnd*, !dbg !9925
  call void @llvm.dbg.value(metadata %struct._bnd* %bnd1, metadata !9916, metadata !DIExpression()), !dbg !9918
  %call3 = call fastcc %struct._list_node* @find_sequential_best_exprs(%struct._bnd* nonnull %bnd1, %struct._expr* %expr, i8 zeroext 0) #7, !dbg !9930
  call void @llvm.dbg.value(metadata %struct._list_node* %call3, metadata !9915, metadata !DIExpression()), !dbg !9918
  store %struct._list_node* %call3, %struct._list_node** %orig_ops, align 8, !dbg !9931
  %to = getelementptr inbounds %union.anon.0, %union.anon.0* %u, i64 0, i32 0, i32 0, !dbg !9932
  %4 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !9932
  call void @llvm.dbg.value(metadata %struct._list_node* %call3, metadata !9915, metadata !DIExpression()), !dbg !9918
  %call4 = call fastcc zeroext i8 @find_used_regs(%struct.rtx_def* %4, %struct._list_node* %call3, %struct.bitmap_head_def* %used_regs, %struct.reg_rename* nonnull @find_best_reg_for_expr.reg_rename_data, %struct._list_node** %original_insns) #7, !dbg !9933
  call void @llvm.dbg.value(metadata i8 1, metadata !9911, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops, metadata !9915, metadata !DIExpression(DW_OP_deref)), !dbg !9918
  call void @av_set_clear(%struct._list_node** nonnull %orig_ops) #6, !dbg !9934
  br label %cleanup, !dbg !9935

cleanup:                                          ; preds = %for.body, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9935
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %bnds.addr.0, i64 0, i32 0, !dbg !9936
  %5 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !9936
  call void @llvm.dbg.value(metadata %struct._list_node* %5, metadata !9907, metadata !DIExpression()), !dbg !9917
  br label %for.cond, !dbg !9937, !llvm.loop !9938

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9940
}

; Function Attrs: nounwind uwtable
define internal fastcc void @verify_target_availability(%struct._expr* %expr, %struct.bitmap_head_def* %used_regs, %struct.reg_rename* %reg_rename_p) unnamed_addr #5 !dbg !9941 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !9945, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %used_regs, metadata !9946, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, metadata !9947, metadata !DIExpression()), !dbg !9955
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !9956
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9956
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 1, i32 1, !dbg !9956
  %1 = bitcast %struct.rtx_def** %lhs to i32**, !dbg !9956
  %2 = load i32*, i32** %1, align 8, !dbg !9956
  %bf.load = load i32, i32* %2, align 8, !dbg !9956
  %bf.clear = and i32 %bf.load, 65535, !dbg !9956
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !9956
  br i1 %cmp, label %lor.lhs.false, label %cleanup.cont, !dbg !9958

lor.lhs.false:                                    ; preds = %entry
  %target_available1 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !9959
  %3 = load i8, i8* %target_available1, align 8, !dbg !9959
  %cmp2 = icmp slt i8 %3, 0, !dbg !9960
  br i1 %cmp2, label %cleanup.cont, label %if.end, !dbg !9961

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call i32 @expr_dest_regno(%struct._expr* %expr) #6, !dbg !9962
  call void @llvm.dbg.value(metadata i32 %call, metadata !9950, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 undef, metadata !9951, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !9955
  %4 = load i8, i8* %target_available1, align 8, !dbg !9963
  %cmp11 = icmp eq i8 %4, 1, !dbg !9964
  call void @llvm.dbg.value(metadata i1 %cmp11, metadata !9952, metadata !DIExpression()), !dbg !9955
  %5 = load i32, i32* @reload_completed, align 4, !dbg !9965
  %tobool = icmp eq i32 %5, 0, !dbg !9965
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9965

cond.true:                                        ; preds = %if.end
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9966
  %lhs6 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %6, i64 0, i32 1, i32 1, !dbg !9966
  %7 = bitcast %struct.rtx_def** %lhs6 to i32**, !dbg !9966
  %8 = load i32*, i32** %7, align 8, !dbg !9966
  %bf.load7 = load i32, i32* %8, align 8, !dbg !9966
  call void @llvm.dbg.value(metadata i32 %bf.load7, metadata !9951, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !9955
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !9966
  call void @llvm.dbg.value(metadata i32 %bf.lshr, metadata !9951, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !9955
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !9966
  call void @llvm.dbg.value(metadata i32 %bf.clear8, metadata !9951, metadata !DIExpression()), !dbg !9955
  %idxprom = zext i32 %call to i64, !dbg !9967
  %idxprom14 = zext i32 %bf.clear8 to i64, !dbg !9967
  %arrayidx15 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom14, !dbg !9967
  %9 = load i8, i8* %arrayidx15, align 1, !dbg !9967
  %phitmp = zext i8 %9 to i64, !dbg !9965
  br label %cond.end, !dbg !9965

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 1, %if.end ]
  call void @llvm.dbg.value(metadata i8 1, metadata !9954, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8 1, metadata !9953, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 0, metadata !9949, metadata !DIExpression()), !dbg !9955
  br label %for.cond, !dbg !9968

for.cond:                                         ; preds = %for.body, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end ], !dbg !9970
  %live_available.0 = phi i8 [ %spec.select, %for.body ], [ 1, %cond.end ], !dbg !9955
  %hard_available.0 = phi i8 [ %hard_available.1, %for.body ], [ 1, %cond.end ], !dbg !9955
  call void @llvm.dbg.value(metadata i8 %hard_available.0, metadata !9954, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8 %live_available.0, metadata !9953, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9949, metadata !DIExpression()), !dbg !9955
  %exitcond = icmp eq i64 %indvars.iv, %cond, !dbg !9971
  br i1 %exitcond, label %for.end, label %for.body, !dbg !9973

for.body:                                         ; preds = %for.cond
  %10 = trunc i64 %indvars.iv to i32, !dbg !9974
  %add = add i32 %call, %10, !dbg !9974
  %call19 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %used_regs, i32 %add) #6, !dbg !9977
  %tobool20 = icmp eq i32 %call19, 0, !dbg !9977
  %spec.select = select i1 %tobool20, i8 %live_available.0, i8 0, !dbg !9978
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !9953, metadata !DIExpression()), !dbg !9955
  %11 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !9979
  %sh_prom = zext i32 %add to i64, !dbg !9979
  %shl = shl i64 1, %sh_prom, !dbg !9979
  %and = and i64 %11, %shl, !dbg !9979
  %tobool24 = icmp eq i64 %and, 0, !dbg !9979
  %hard_available.1 = select i1 %tobool24, i8 %hard_available.0, i8 0, !dbg !9981
  call void @llvm.dbg.value(metadata i8 %hard_available.1, metadata !9954, metadata !DIExpression()), !dbg !9955
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9982
  call void @llvm.dbg.value(metadata i32 undef, metadata !9949, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9955
  br label %for.cond, !dbg !9983, !llvm.loop !9984

for.end:                                          ; preds = %for.cond
  %live_available.0.lcssa = phi i8 [ %live_available.0, %for.cond ], !dbg !9955
  %hard_available.0.lcssa = phi i8 [ %hard_available.0, %for.cond ], !dbg !9955
  call void @llvm.dbg.value(metadata i8 %live_available.0.lcssa, metadata !9953, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8 %hard_available.0.lcssa, metadata !9954, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8 %live_available.0.lcssa, metadata !9953, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8 %hard_available.0.lcssa, metadata !9954, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8 %live_available.0.lcssa, metadata !9953, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8 %hard_available.0.lcssa, metadata !9954, metadata !DIExpression()), !dbg !9955
  br i1 %cmp11, label %if.then28, label %if.else, !dbg !9986

if.then28:                                        ; preds = %for.end
  %tobool29 = icmp eq i8 %live_available.0.lcssa, 0, !dbg !9987
  br i1 %tobool29, label %cond.true30, label %cleanup.cont, !dbg !9987

cond.true30:                                      ; preds = %if.then28
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1597, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9987
  br label %cleanup.cont, !dbg !9987

if.else:                                          ; preds = %for.end
  %.b = load i1, i1* @scheduled_something_on_previous_fence, align 1, !dbg !9989
  %tobool35 = xor i1 %.b, true, !dbg !9989
  %tobool37 = icmp ne i8 %live_available.0.lcssa, 0, !dbg !9989
  %or.cond = and i1 %tobool37, %tobool35, !dbg !9989
  %tobool39 = icmp ne i8 %hard_available.0.lcssa, 0, !dbg !9989
  %or.cond1 = and i1 %or.cond, %tobool39, !dbg !9989
  br i1 %or.cond1, label %lor.lhs.false40, label %cleanup.cont, !dbg !9989

lor.lhs.false40:                                  ; preds = %if.else
  %12 = load i32, i32* @reload_completed, align 4, !dbg !9989
  %tobool41 = icmp eq i32 %12, 0, !dbg !9989
  br i1 %tobool41, label %land.lhs.true, label %cond.true49, !dbg !9989

land.lhs.true:                                    ; preds = %lor.lhs.false40
  %13 = load i8, i8* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 2), align 8, !dbg !9989
  %tobool43 = icmp eq i8 %13, 0, !dbg !9989
  br i1 %tobool43, label %cond.true49, label %land.lhs.true44, !dbg !9989

land.lhs.true44:                                  ; preds = %land.lhs.true
  %14 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !9989
  %idxprom45 = zext i32 %call to i64, !dbg !9989
  %calls_crossed = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %14, i64 %idxprom45, i32 3, !dbg !9989
  %15 = load i32, i32* %calls_crossed, align 4, !dbg !9989
  %cmp47 = icmp eq i32 %15, 0, !dbg !9989
  br i1 %cmp47, label %cleanup.cont, label %cond.true49, !dbg !9989

cond.true49:                                      ; preds = %land.lhs.true, %lor.lhs.false40, %land.lhs.true44
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1614, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9989
  br label %cleanup.cont, !dbg !9989

cleanup.cont:                                     ; preds = %if.then28, %lor.lhs.false, %entry, %cond.true49, %if.else, %land.lhs.true44, %cond.true30
  ret void, !dbg !9990
}

declare dso_local void @reg_set_to_hard_reg_set(i64*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @choose_best_reg(i64 %hard_regs_used, %struct.reg_rename* %reg_rename_p, %struct._list_node* %original_insns, i8* %is_orig_reg_p_ptr) unnamed_addr #5 !dbg !9991 {
entry:
  call void @llvm.dbg.value(metadata i64 %hard_regs_used, metadata !9995, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, metadata !9996, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata %struct._list_node* %original_insns, metadata !9997, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata i8* %is_orig_reg_p_ptr, metadata !9998, metadata !DIExpression()), !dbg !10000
  %call = tail call fastcc %struct.rtx_def* @choose_best_reg_1(i64 %hard_regs_used, %struct.reg_rename* nonnull @find_best_reg_for_expr.reg_rename_data, %struct._list_node* %original_insns, i8* %is_orig_reg_p_ptr) #7, !dbg !10001
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !9999, metadata !DIExpression()), !dbg !10000
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !10002
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !10002

lor.lhs.false:                                    ; preds = %entry
  %0 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 4), align 8, !dbg !10002
  %call1 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %call) #7, !dbg !10002
  %sh_prom = zext i32 %call1 to i64, !dbg !10002
  %shl = shl i64 1, %sh_prom, !dbg !10002
  %and = and i64 %0, %shl, !dbg !10002
  %tobool = icmp eq i64 %and, 0, !dbg !10002
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !10002

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1475, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10002
  br label %cond.end, !dbg !10002

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  ret %struct.rtx_def* %call, !dbg !10003
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @choose_best_pseudo_reg(%struct.bitmap_head_def* %used_regs, %struct.reg_rename* %reg_rename_p, %struct._list_node* %original_insns, i8* %is_orig_reg_p_ptr) unnamed_addr #5 !dbg !10004 {
entry:
  %original_insns.addr = alloca %struct._list_node*, align 8
  %i = alloca %struct._list_iterator, align 8
  %def = alloca %struct._def*, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %used_regs, metadata !10008, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, metadata !10009, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata %struct._list_node* %original_insns, metadata !10010, metadata !DIExpression()), !dbg !10026
  store %struct._list_node* %original_insns, %struct._list_node** %original_insns.addr, align 8
  call void @llvm.dbg.value(metadata i8* %is_orig_reg_p_ptr, metadata !10011, metadata !DIExpression()), !dbg !10026
  %0 = bitcast %struct._list_iterator* %i to i8*, !dbg !10027
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !10027
  %1 = bitcast %struct._def** %def to i8*, !dbg !10028
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10028
  call void @llvm.dbg.value(metadata i32 0, metadata !10017, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata i8 0, metadata !10018, metadata !DIExpression()), !dbg !10026
  %2 = load i32, i32* @reload_completed, align 4, !dbg !10029
  %tobool = icmp eq i32 %2, 0, !dbg !10029
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10029

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1500, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10029
  br label %cond.end, !dbg !10029

cond.end:                                         ; preds = %entry, %cond.true
  store i8 1, i8* %is_orig_reg_p_ptr, align 1, !dbg !10030
  call void @llvm.dbg.value(metadata %struct._list_node** %original_insns.addr, metadata !10010, metadata !DIExpression(DW_OP_deref)), !dbg !10026
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !10012, metadata !DIExpression(DW_OP_deref)), !dbg !10026
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** nonnull %original_insns.addr, i8 zeroext 0) #7, !dbg !10031
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !10032
  br label %for.cond, !dbg !10031

for.cond:                                         ; preds = %for.inc, %cond.end
  %mode.0 = phi i32 [ 0, %cond.end ], [ %mode.1, %for.inc ], !dbg !10026
  %bad_hard_regs.0 = phi i8 [ 0, %cond.end ], [ %bad_hard_regs.2, %for.inc ], !dbg !10033
  %retval.0 = phi %struct.rtx_def* [ undef, %cond.end ], [ %retval.1, %for.inc ]
  call void @llvm.dbg.value(metadata i8 %bad_hard_regs.0, metadata !10018, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !10017, metadata !DIExpression()), !dbg !10026
  %3 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !10034
  %4 = load %struct._list_node*, %struct._list_node** %3, align 8, !dbg !10034
  call void @llvm.dbg.value(metadata %struct._def** %def, metadata !10014, metadata !DIExpression(DW_OP_deref)), !dbg !10026
  %call = call fastcc zeroext i8 @_list_iter_cond_def(%struct._list_node* %4, %struct._def** nonnull %def) #7, !dbg !10034
  %tobool1 = icmp eq i8 %call, 0, !dbg !10031
  br i1 %tobool1, label %for.end, label %for.body, !dbg !10031

for.body:                                         ; preds = %for.cond
  %5 = load %struct._def*, %struct._def** %def, align 8, !dbg !10035
  call void @llvm.dbg.value(metadata %struct._def* %5, metadata !10014, metadata !DIExpression()), !dbg !10026
  %orig_insn = getelementptr inbounds %struct._def, %struct._def* %5, i64 0, i32 0, !dbg !10035
  %6 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !10035
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, !dbg !10035
  %7 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !10035
  %rt_rtx = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !10035
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10035
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10035
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !10035
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !10035
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !10019, metadata !DIExpression()), !dbg !10036
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 0, !dbg !10037
  %bf.load = load i32, i32* %10, align 8, !dbg !10037
  %bf.clear = and i32 %bf.load, 65535, !dbg !10037
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !10037
  br i1 %cmp, label %cond.end8, label %cond.true6, !dbg !10037

cond.true6:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1510, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10037
  %bf.load11.pre = load i32, i32* %10, align 8, !dbg !10038
  br label %cond.end8, !dbg !10037

cond.end8:                                        ; preds = %for.body, %cond.true6
  %bf.load11 = phi i32 [ %bf.load, %for.body ], [ %bf.load11.pre, %cond.true6 ], !dbg !10038
  %cmp10 = icmp eq i32 %mode.0, 0, !dbg !10040
  %bf.lshr = lshr i32 %bf.load11, 16, !dbg !10038
  %bf.clear12 = and i32 %bf.lshr, 255, !dbg !10038
  br i1 %cmp10, label %if.end, label %if.else, !dbg !10041

if.else:                                          ; preds = %cond.end8
  %cmp16 = icmp eq i32 %mode.0, %bf.clear12, !dbg !10042
  br i1 %cmp16, label %if.end, label %cond.true17, !dbg !10042

cond.true17:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1516, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10042
  br label %if.end, !dbg !10042

if.end:                                           ; preds = %cond.true17, %if.else, %cond.end8
  %mode.1 = phi i32 [ %bf.clear12, %cond.end8 ], [ %mode.0, %if.else ], [ %mode.0, %cond.true17 ], !dbg !10026
  call void @llvm.dbg.value(metadata i32 %mode.1, metadata !10017, metadata !DIExpression()), !dbg !10026
  %call21 = call fastcc i32 @rhs_regno(%struct.rtx_def* %9) #7, !dbg !10043
  call void @llvm.dbg.value(metadata i32 %call21, metadata !10023, metadata !DIExpression()), !dbg !10036
  %call22 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %used_regs, i32 %call21) #6, !dbg !10044
  %tobool23 = icmp eq i32 %call22, 0, !dbg !10044
  br i1 %tobool23, label %if.then24, label %cleanup, !dbg !10046

if.then24:                                        ; preds = %if.end
  %cmp25 = icmp slt i32 %call21, 53, !dbg !10047
  br i1 %cmp25, label %if.then26, label %cleanup, !dbg !10050

if.then26:                                        ; preds = %if.then24
  %call27 = call zeroext i8 @df_regs_ever_live_p(i32 %call21) #6, !dbg !10051
  %tobool28 = icmp eq i8 %call27, 0, !dbg !10051
  br i1 %tobool28, label %cond.true29, label %cond.end31, !dbg !10051

cond.true29:                                      ; preds = %if.then26
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1523, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10051
  br label %cond.end31, !dbg !10051

cond.end31:                                       ; preds = %if.then26, %cond.true29
  %11 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10053
  %sh_prom = zext i32 %call21 to i64, !dbg !10053
  %shl = shl i64 1, %sh_prom, !dbg !10053
  %and = and i64 %11, %shl, !dbg !10053
  %tobool33 = icmp eq i64 %and, 0, !dbg !10053
  br i1 %tobool33, label %if.then34, label %cleanup, !dbg !10055

if.then34:                                        ; preds = %cond.end31
  %12 = load i8, i8* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 2), align 8, !dbg !10056
  %tobool35 = icmp eq i8 %12, 0, !dbg !10059
  br i1 %tobool35, label %if.then38, label %lor.lhs.false, !dbg !10060

lor.lhs.false:                                    ; preds = %if.then34
  %13 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !10061
  %idxprom = sext i32 %call21 to i64, !dbg !10061
  %calls_crossed = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %13, i64 %idxprom, i32 3, !dbg !10061
  %14 = load i32, i32* %calls_crossed, align 4, !dbg !10061
  %cmp37 = icmp sgt i32 %14, 0, !dbg !10062
  br i1 %cmp37, label %if.then38, label %cleanup, !dbg !10063

if.then38:                                        ; preds = %if.then34, %lor.lhs.false
  %call39 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode.1, i32 %call21) #6, !dbg !10064
  br label %cleanup, !dbg !10065

cleanup:                                          ; preds = %cond.end31, %if.end, %lor.lhs.false, %if.then24, %if.then38
  %bad_hard_regs.2 = phi i8 [ %bad_hard_regs.0, %if.then38 ], [ %bad_hard_regs.0, %if.then24 ], [ %bad_hard_regs.0, %if.end ], [ 1, %cond.end31 ], [ 1, %lor.lhs.false ], !dbg !10033
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then38 ], [ false, %if.then24 ], [ true, %if.end ], [ true, %cond.end31 ], [ true, %lor.lhs.false ]
  %retval.1 = phi %struct.rtx_def* [ %call39, %if.then38 ], [ %9, %if.then24 ], [ %retval.0, %if.end ], [ %retval.0, %cond.end31 ], [ %retval.0, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata i8 %bad_hard_regs.2, metadata !10018, metadata !DIExpression()), !dbg !10026
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup64.loopexit

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !10012, metadata !DIExpression(DW_OP_deref)), !dbg !10026
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #7, !dbg !10034
  br label %for.cond, !dbg !10034, !llvm.loop !10066

for.end:                                          ; preds = %for.cond
  %mode.0.lcssa = phi i32 [ %mode.0, %for.cond ], !dbg !10026
  %bad_hard_regs.0.lcssa = phi i8 [ %bad_hard_regs.0, %for.cond ], !dbg !10033
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !10017, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata i8 %bad_hard_regs.0.lcssa, metadata !10018, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !10017, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata i8 %bad_hard_regs.0.lcssa, metadata !10018, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !10017, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata i8 %bad_hard_regs.0.lcssa, metadata !10018, metadata !DIExpression()), !dbg !10026
  store i8 0, i8* %is_orig_reg_p_ptr, align 1, !dbg !10068
  %tobool46 = icmp eq i8 %bad_hard_regs.0.lcssa, 0, !dbg !10069
  br i1 %tobool46, label %if.end48, label %cleanup64, !dbg !10071

if.end48:                                         ; preds = %for.end
  %call49 = call %struct.rtx_def* @gen_reg_rtx(i32 %mode.0.lcssa) #6, !dbg !10072
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !10024, metadata !DIExpression()), !dbg !10073
  %cmp50 = icmp eq i32 %mode.0.lcssa, 0, !dbg !10074
  br i1 %cmp50, label %cond.true51, label %cond.end53, !dbg !10074

cond.true51:                                      ; preds = %if.end48
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1557, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10074
  br label %cond.end53, !dbg !10074

cond.end53:                                       ; preds = %if.end48, %cond.true51
  %call55 = call i32 @max_reg_num() #6, !dbg !10075
  store i32 %call55, i32* @max_regno, align 4, !dbg !10076
  call void @maybe_extend_reg_info_p() #6, !dbg !10077
  %15 = load i8, i8* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 2), align 8, !dbg !10078
  %tobool57 = icmp ne i8 %15, 0, !dbg !10079
  %cond58 = zext i1 %tobool57 to i32, !dbg !10079
  %16 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !10080
  %call59 = call fastcc i32 @rhs_regno(%struct.rtx_def* %call49) #7, !dbg !10080
  %idxprom60 = zext i32 %call59 to i64, !dbg !10080
  %calls_crossed62 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %16, i64 %idxprom60, i32 3, !dbg !10080
  store i32 %cond58, i32* %calls_crossed62, align 4, !dbg !10081
  br label %cleanup64

cleanup64.loopexit:                               ; preds = %cleanup
  %retval.1.lcssa = phi %struct.rtx_def* [ %retval.1, %cleanup ]
  br label %cleanup64, !dbg !10082

cleanup64:                                        ; preds = %cleanup64.loopexit, %for.end, %cond.end53
  %retval.2 = phi %struct.rtx_def* [ %call49, %cond.end53 ], [ null, %for.end ], [ %retval.1.lcssa, %cleanup64.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10082
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !10082
  ret %struct.rtx_def* %retval.2, !dbg !10082
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_replace_dest_reg(%struct._list_node* %orig_insns, %struct.rtx_def* %best_reg, %struct._expr* %expr) unnamed_addr #5 !dbg !10083 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %orig_insns, metadata !10087, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata %struct.rtx_def* %best_reg, metadata !10088, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !10089, metadata !DIExpression()), !dbg !10094
  br label %for.cond, !dbg !10095

for.cond:                                         ; preds = %for.inc, %entry
  %orig_insns.addr.0 = phi %struct._list_node* [ %orig_insns, %entry ], [ %11, %for.inc ]
  call void @llvm.dbg.value(metadata %struct._list_node* %orig_insns.addr.0, metadata !10087, metadata !DIExpression()), !dbg !10094
  %tobool = icmp eq %struct._list_node* %orig_insns.addr.0, null, !dbg !10096
  br i1 %tobool, label %for.end, label %for.body, !dbg !10096

for.body:                                         ; preds = %for.cond
  %orig_insn1 = getelementptr inbounds %struct._list_node, %struct._list_node* %orig_insns.addr.0, i64 0, i32 1, i32 0, i32 0, !dbg !10097
  %0 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn1, align 8, !dbg !10097
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !10090, metadata !DIExpression()), !dbg !10098
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10099
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i64 0, i32 0, !dbg !10099
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10099
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %2, i64 0, i32 0, !dbg !10099
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10099
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10099
  %3 = load i32, i32* %rt_int, align 8, !dbg !10099
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base5, i32 %3) #7, !dbg !10099
  %call10 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !10099
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call10, i64 0, i32 0, i32 0, !dbg !10099
  %4 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10099
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %4, i64 0, i32 1, i32 0, !dbg !10099
  %5 = load i32, i32* %type, align 8, !dbg !10099
  %cmp = icmp eq i32 %5, 23, !dbg !10099
  br i1 %cmp, label %cond.end14, label %cond.true12, !dbg !10099

cond.true12:                                      ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1663, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10099
  br label %cond.end14, !dbg !10099

cond.end14:                                       ; preds = %for.body, %cond.true12
  %call16 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %best_reg) #7, !dbg !10100
  %6 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10102
  %base19 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %6, i64 0, i32 0, !dbg !10102
  %7 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10102
  %base25 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %7, i64 0, i32 0, !dbg !10102
  %8 = load i32, i32* %rt_int, align 8, !dbg !10102
  %call33 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base25, i32 %8) #7, !dbg !10102
  %call34 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base19, i32 %call33) #7, !dbg !10102
  %vinsn36 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call34, i64 0, i32 0, i32 0, !dbg !10102
  %9 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn36, align 8, !dbg !10102
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %9, i64 0, i32 1, i32 1, !dbg !10102
  %10 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !10102
  %call38 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %10) #7, !dbg !10102
  %cmp39 = icmp eq i32 %call16, %call38, !dbg !10103
  br i1 %cmp39, label %if.end, label %land.lhs.true, !dbg !10104

land.lhs.true:                                    ; preds = %cond.end14
  %call40 = tail call fastcc zeroext i8 @replace_src_with_reg_ok_p(%struct.rtx_def* %0, %struct.rtx_def* %best_reg) #7, !dbg !10105
  %tobool41 = icmp eq i8 %call40, 0, !dbg !10105
  br i1 %tobool41, label %cleanup, label %lor.lhs.false, !dbg !10106

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call42 = tail call fastcc zeroext i8 @replace_dest_with_reg_ok_p(%struct.rtx_def* %0, %struct.rtx_def* %best_reg) #7, !dbg !10107
  %tobool43 = icmp eq i8 %call42, 0, !dbg !10107
  br i1 %tobool43, label %cleanup, label %if.end, !dbg !10108

if.end:                                           ; preds = %lor.lhs.false, %cond.end14
  br label %cleanup, !dbg !10109

cleanup:                                          ; preds = %lor.lhs.false, %land.lhs.true, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %lor.lhs.false ], [ false, %land.lhs.true ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %return.loopexit

for.inc:                                          ; preds = %cleanup
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %orig_insns.addr.0, i64 0, i32 0, !dbg !10110
  %11 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !10110
  call void @llvm.dbg.value(metadata %struct._list_node* %11, metadata !10087, metadata !DIExpression()), !dbg !10094
  br label %for.cond, !dbg !10111, !llvm.loop !10112

for.end:                                          ; preds = %for.cond
  %call44 = tail call i32 @expr_dest_regno(%struct._expr* %expr) #6, !dbg !10114
  %call45 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %best_reg) #7, !dbg !10116
  %cmp46 = icmp eq i32 %call44, %call45, !dbg !10117
  br i1 %cmp46, label %if.else, label %if.then47, !dbg !10118

if.then47:                                        ; preds = %for.end
  tail call fastcc void @replace_dest_with_reg_in_expr(%struct._expr* %expr, %struct.rtx_def* %best_reg) #7, !dbg !10119
  br label %return, !dbg !10119

if.else:                                          ; preds = %for.end
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 11, !dbg !10120
  store i8 1, i8* %target_available, align 8, !dbg !10121
  br label %return

return.loopexit:                                  ; preds = %cleanup
  br label %return, !dbg !10122

return:                                           ; preds = %return.loopexit, %if.then47, %if.else
  %retval.2 = phi i8 [ 1, %if.else ], [ 1, %if.then47 ], [ 0, %return.loopexit ]
  ret i8 %retval.2, !dbg !10122
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vinsn_writes_one_of_regs_p(%struct.vinsn_def* %vi, %struct.bitmap_head_def* %used_regs, i64 %unavailable_hard_regs) unnamed_addr #5 !dbg !10123 {
entry:
  %regno = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %vi, metadata !10127, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %used_regs, metadata !10128, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata i64 %unavailable_hard_regs, metadata !10129, metadata !DIExpression()), !dbg !10133
  %0 = bitcast i32* %regno to i8*, !dbg !10134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !10134
  %1 = bitcast %struct.bitmap_iterator* %rsi to i8*, !dbg !10135
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !10135
  %reg_sets = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 3, !dbg !10136
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !10136
  call void @llvm.dbg.value(metadata i32* %regno, metadata !10130, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !10131, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %2, i32 0, i32* nonnull %regno) #7, !dbg !10136
  br label %for.cond, !dbg !10136

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata i32* %regno, metadata !10130, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !10131, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %regno) #7, !dbg !10138
  %tobool = icmp eq i8 %call, 0, !dbg !10136
  br i1 %tobool, label %for.end, label %for.body, !dbg !10136

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %regno, align 4, !dbg !10140
  call void @llvm.dbg.value(metadata i32 %3, metadata !10130, metadata !DIExpression()), !dbg !10133
  %call1 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %used_regs, i32 %3) #6, !dbg !10140
  %tobool2 = icmp eq i32 %call1, 0, !dbg !10140
  br i1 %tobool2, label %if.end, label %cleanup.loopexit1, !dbg !10143

if.end:                                           ; preds = %for.body
  %4 = load i32, i32* %regno, align 4, !dbg !10144
  call void @llvm.dbg.value(metadata i32 %4, metadata !10130, metadata !DIExpression()), !dbg !10133
  %cmp = icmp ult i32 %4, 53, !dbg !10144
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !10146

land.lhs.true:                                    ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 %4, metadata !10130, metadata !DIExpression()), !dbg !10133
  %sh_prom = zext i32 %4 to i64, !dbg !10147
  %shl = shl i64 1, %sh_prom, !dbg !10147
  %and = and i64 %shl, %unavailable_hard_regs, !dbg !10147
  %tobool3 = icmp eq i64 %and, 0, !dbg !10147
  br i1 %tobool3, label %for.inc, label %cleanup.loopexit1, !dbg !10148

for.inc:                                          ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.value(metadata i32* %regno, metadata !10130, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !10131, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %regno) #7, !dbg !10138
  br label %for.cond, !dbg !10138, !llvm.loop !10149

for.end:                                          ; preds = %for.cond
  %reg_clobbers = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %vi, i64 0, i32 1, i32 4, !dbg !10151
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !10151
  call void @llvm.dbg.value(metadata i32* %regno, metadata !10130, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !10131, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %5, i32 0, i32* nonnull %regno) #7, !dbg !10151
  br label %for.cond7, !dbg !10151

for.cond7:                                        ; preds = %for.inc23, %for.end
  call void @llvm.dbg.value(metadata i32* %regno, metadata !10130, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !10131, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  %call8 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %regno) #7, !dbg !10153
  %tobool9 = icmp eq i8 %call8, 0, !dbg !10151
  br i1 %tobool9, label %cleanup.loopexit, label %for.body10, !dbg !10151

for.body10:                                       ; preds = %for.cond7
  %6 = load i32, i32* %regno, align 4, !dbg !10155
  call void @llvm.dbg.value(metadata i32 %6, metadata !10130, metadata !DIExpression()), !dbg !10133
  %call11 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %used_regs, i32 %6) #6, !dbg !10155
  %tobool12 = icmp eq i32 %call11, 0, !dbg !10155
  br i1 %tobool12, label %if.end14, label %cleanup.loopexit, !dbg !10158

if.end14:                                         ; preds = %for.body10
  %7 = load i32, i32* %regno, align 4, !dbg !10159
  call void @llvm.dbg.value(metadata i32 %7, metadata !10130, metadata !DIExpression()), !dbg !10133
  %cmp15 = icmp ult i32 %7, 53, !dbg !10159
  br i1 %cmp15, label %land.lhs.true16, label %for.inc23, !dbg !10161

land.lhs.true16:                                  ; preds = %if.end14
  call void @llvm.dbg.value(metadata i32 %7, metadata !10130, metadata !DIExpression()), !dbg !10133
  %sh_prom17 = zext i32 %7 to i64, !dbg !10162
  %shl18 = shl i64 1, %sh_prom17, !dbg !10162
  %and19 = and i64 %shl18, %unavailable_hard_regs, !dbg !10162
  %tobool20 = icmp eq i64 %and19, 0, !dbg !10162
  br i1 %tobool20, label %for.inc23, label %cleanup.loopexit, !dbg !10163

for.inc23:                                        ; preds = %land.lhs.true16, %if.end14
  call void @llvm.dbg.value(metadata i32* %regno, metadata !10130, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !10131, metadata !DIExpression(DW_OP_deref)), !dbg !10133
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %regno) #7, !dbg !10153
  br label %for.cond7, !dbg !10153, !llvm.loop !10164

cleanup.loopexit:                                 ; preds = %for.cond7, %for.body10, %land.lhs.true16
  %retval.0.ph = phi i8 [ 0, %for.cond7 ], [ 1, %land.lhs.true16 ], [ 1, %for.body10 ]
  br label %cleanup, !dbg !10166

cleanup.loopexit1:                                ; preds = %for.body, %land.lhs.true
  br label %cleanup, !dbg !10166

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit
  %retval.0 = phi i8 [ %retval.0.ph, %cleanup.loopexit ], [ 1, %cleanup.loopexit1 ], !dbg !10133
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !10166
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !10166
  ret i8 %retval.0, !dbg !10166
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @_list_clear(%struct._list_node** %l) unnamed_addr #0 !dbg !10167 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %l, metadata !10169, metadata !DIExpression()), !dbg !10170
  br label %while.cond, !dbg !10171

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct._list_node*, %struct._list_node** %l, align 8, !dbg !10172
  %tobool = icmp eq %struct._list_node* %0, null, !dbg !10171
  br i1 %tobool, label %while.end, label %while.body, !dbg !10171

while.body:                                       ; preds = %while.cond
  tail call fastcc void @_list_remove(%struct._list_node** %l) #7, !dbg !10173
  br label %while.cond, !dbg !10171, !llvm.loop !10174

while.end:                                        ; preds = %while.cond
  ret void, !dbg !10176
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._list_node* @find_sequential_best_exprs(%struct._bnd* %bnd, %struct._expr* %expr_vliw, i8 zeroext %for_moveop) unnamed_addr #5 !dbg !10177 {
entry:
  %expr_seq = alloca %struct._list_node*, align 8
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._bnd* %bnd, metadata !10181, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata %struct._expr* %expr_vliw, metadata !10182, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata i8 %for_moveop, metadata !10183, metadata !DIExpression()), !dbg !10199
  %0 = bitcast %struct._list_node** %expr_seq to i8*, !dbg !10200
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10200
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !10184, metadata !DIExpression()), !dbg !10199
  store %struct._list_node* null, %struct._list_node** %expr_seq, align 8, !dbg !10201
  %1 = bitcast %struct._expr** %expr to i8*, !dbg !10202
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10202
  %2 = bitcast %struct._list_iterator* %i to i8*, !dbg !10203
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !10203
  %av = getelementptr inbounds %struct._bnd, %struct._bnd* %bnd, i64 0, i32 2, !dbg !10204
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !10186, metadata !DIExpression(DW_OP_deref)), !dbg !10199
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** nonnull %av, i8 zeroext 0) #7, !dbg !10204
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !10206
  br label %for.cond, !dbg !10204

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !10208
  %4 = load %struct._list_node*, %struct._list_node** %3, align 8, !dbg !10208
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !10185, metadata !DIExpression(DW_OP_deref)), !dbg !10199
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %4, %struct._expr** nonnull %expr) #7, !dbg !10208
  %tobool = icmp eq i8 %call, 0, !dbg !10204
  br i1 %tobool, label %for.end.loopexit, label %for.body, !dbg !10204

for.body:                                         ; preds = %for.cond
  %5 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10209
  call void @llvm.dbg.value(metadata %struct._expr* %5, metadata !10185, metadata !DIExpression()), !dbg !10199
  %call1 = call fastcc zeroext i8 @equal_after_moveup_path_p(%struct._expr* %5, %struct._list_node* null, %struct._expr* %expr_vliw) #7, !dbg !10212
  %tobool2 = icmp eq i8 %call1, 0, !dbg !10212
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !10213

if.then:                                          ; preds = %for.body
  %tobool3 = icmp eq i8 %for_moveop, 0, !dbg !10214
  br i1 %tobool3, label %if.then.if.end34_crit_edge, label %if.then4, !dbg !10217

if.then.if.end34_crit_edge:                       ; preds = %if.then
  %.pre2 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10218
  br label %if.end34, !dbg !10217

if.then4:                                         ; preds = %if.then
  %6 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10219
  call void @llvm.dbg.value(metadata %struct._expr* %6, metadata !10185, metadata !DIExpression()), !dbg !10199
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %6, i64 0, i32 0, !dbg !10219
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10219
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i64 0, i32 1, i32 0, !dbg !10219
  %8 = load i32, i32* %type, align 8, !dbg !10219
  %cmp = icmp eq i32 %8, 23, !dbg !10219
  br i1 %cmp, label %land.lhs.true, label %if.end27, !dbg !10222

land.lhs.true:                                    ; preds = %if.then4
  call void @llvm.dbg.value(metadata %struct._expr* %6, metadata !10185, metadata !DIExpression()), !dbg !10199
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i64 0, i32 1, i32 1, !dbg !10223
  %9 = bitcast %struct.rtx_def** %lhs to i32**, !dbg !10223
  %10 = load i32*, i32** %9, align 8, !dbg !10223
  %bf.load = load i32, i32* %10, align 8, !dbg !10223
  %bf.clear = and i32 %bf.load, 65535, !dbg !10223
  %cmp7 = icmp eq i32 %bf.clear, 37, !dbg !10223
  br i1 %cmp7, label %if.then8, label %if.end27, !dbg !10224

if.then8:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct._expr* %6, metadata !10185, metadata !DIExpression()), !dbg !10199
  %call9 = call i32 @expr_dest_regno(%struct._expr* %6) #6, !dbg !10225
  %call10 = call i32 @expr_dest_regno(%struct._expr* %expr_vliw) #6, !dbg !10228
  %cmp11 = icmp eq i32 %call9, %call10, !dbg !10229
  %11 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10230
  call void @llvm.dbg.value(metadata %struct._expr* %11, metadata !10185, metadata !DIExpression()), !dbg !10199
  br i1 %cmp11, label %if.else, label %if.then12, !dbg !10231

if.then12:                                        ; preds = %if.then8
  %vinsn13 = getelementptr inbounds %struct._expr, %struct._expr* %expr_vliw, i64 0, i32 0, !dbg !10232
  %12 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn13, align 8, !dbg !10232
  %lhs15 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %12, i64 0, i32 1, i32 1, !dbg !10232
  %13 = load %struct.rtx_def*, %struct.rtx_def** %lhs15, align 8, !dbg !10232
  call fastcc void @replace_dest_with_reg_in_expr(%struct._expr* %11, %struct.rtx_def* %13) #7, !dbg !10234
  %14 = load i32, i32* @stat_renamed_scheduled, align 4, !dbg !10235
  %inc = add nsw i32 %14, 1, !dbg !10235
  store i32 %inc, i32* @stat_renamed_scheduled, align 4, !dbg !10235
  %.pre1 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10236
  br label %if.end27, !dbg !10238

if.else:                                          ; preds = %if.then8
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %11, i64 0, i32 11, !dbg !10239
  %15 = load i8, i8* %target_available, align 8, !dbg !10239
  %target_available16 = getelementptr inbounds %struct._expr, %struct._expr* %expr_vliw, i64 0, i32 11, !dbg !10241
  %16 = load i8, i8* %target_available16, align 8, !dbg !10241
  %cmp18 = icmp eq i8 %15, %16, !dbg !10242
  br i1 %cmp18, label %if.end27, label %if.then20, !dbg !10243

if.then20:                                        ; preds = %if.else
  %cmp23 = icmp eq i8 %16, 1, !dbg !10244
  br i1 %cmp23, label %cond.end, label %cond.true, !dbg !10244

cond.true:                                        ; preds = %if.then20
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5097, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10244
  %.pre = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10246
  br label %cond.end, !dbg !10244

cond.end:                                         ; preds = %if.then20, %cond.true
  %17 = phi %struct._expr* [ %11, %if.then20 ], [ %.pre, %cond.true ], !dbg !10246
  call void @llvm.dbg.value(metadata %struct._expr* %17, metadata !10185, metadata !DIExpression()), !dbg !10199
  %target_available25 = getelementptr inbounds %struct._expr, %struct._expr* %17, i64 0, i32 11, !dbg !10246
  store i8 1, i8* %target_available25, align 8, !dbg !10247
  br label %if.end27, !dbg !10248

if.end27:                                         ; preds = %if.else, %if.then12, %cond.end, %land.lhs.true, %if.then4
  %18 = phi %struct._expr* [ %11, %if.else ], [ %.pre1, %if.then12 ], [ %17, %cond.end ], [ %6, %land.lhs.true ], [ %6, %if.then4 ], !dbg !10236
  call void @llvm.dbg.value(metadata %struct._expr* %18, metadata !10185, metadata !DIExpression()), !dbg !10199
  %was_substituted = getelementptr inbounds %struct._expr, %struct._expr* %18, i64 0, i32 12, !dbg !10236
  %bf.load28 = load i8, i8* %was_substituted, align 1, !dbg !10236
  %bf.clear29 = and i8 %bf.load28, 2, !dbg !10236
  %tobool30 = icmp eq i8 %bf.clear29, 0, !dbg !10236
  br i1 %tobool30, label %if.end34, label %if.then31, !dbg !10249

if.then31:                                        ; preds = %if.end27
  %19 = load i32, i32* @stat_substitutions_total, align 4, !dbg !10250
  %inc32 = add nsw i32 %19, 1, !dbg !10250
  store i32 %inc32, i32* @stat_substitutions_total, align 4, !dbg !10250
  br label %if.end34, !dbg !10251

if.end34:                                         ; preds = %if.then.if.end34_crit_edge, %if.end27, %if.then31
  %20 = phi %struct._expr* [ %.pre2, %if.then.if.end34_crit_edge ], [ %18, %if.end27 ], [ %18, %if.then31 ], !dbg !10218
  call void @llvm.dbg.value(metadata %struct._expr* %20, metadata !10185, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata %struct._list_node** %expr_seq, metadata !10184, metadata !DIExpression(DW_OP_deref)), !dbg !10199
  call void @av_set_add(%struct._list_node** nonnull %expr_seq, %struct._expr* %20) #6, !dbg !10252
  br label %for.end, !dbg !10253

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !10186, metadata !DIExpression(DW_OP_deref)), !dbg !10199
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #7, !dbg !10208
  br label %for.cond, !dbg !10208, !llvm.loop !10254

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !10256

for.end:                                          ; preds = %for.end.loopexit, %if.end34
  %tobool37 = icmp ne i8 %for_moveop, 0, !dbg !10256
  %21 = load i32, i32* @sched_verbose, align 4, !dbg !10257
  %cmp39 = icmp sgt i32 %21, 1, !dbg !10258
  %or.cond = and i1 %tobool37, %cmp39, !dbg !10259
  br i1 %or.cond, label %do.body, label %if.end77, !dbg !10259

do.body:                                          ; preds = %for.end
  %22 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10260
  %tobool42 = icmp eq i8 %22, 0, !dbg !10260
  br i1 %tobool42, label %if.else51, label %do.body44, !dbg !10261

do.body44:                                        ; preds = %do.body
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !10262
  %mul = shl nsw i32 %call45, 1, !dbg !10262
  %add = or i32 %mul, 1, !dbg !10262
  call void @llvm.dbg.value(metadata i32 %add, metadata !10187, metadata !DIExpression()), !dbg !10263
  %conv46 = sext i32 %add to i64, !dbg !10262
  %23 = alloca i8, i64 %conv46, align 16, !dbg !10262
  call void @llvm.dbg.value(metadata i8* %23, metadata !10193, metadata !DIExpression()), !dbg !10263
  %call49 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %23, i64 %conv46, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !10262
  call void @sel_prepare_string_for_dot_label(i8* nonnull %23) #6, !dbg !10262
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10262
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %23) #6, !dbg !10262
  br label %do.end55, !dbg !10262

if.else51:                                        ; preds = %do.body
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10260
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !10260
  br label %do.end55

do.end55:                                         ; preds = %if.else51, %do.body44
  %26 = load %struct._list_node*, %struct._list_node** %expr_seq, align 8, !dbg !10264
  call void @llvm.dbg.value(metadata %struct._list_node* %26, metadata !10184, metadata !DIExpression()), !dbg !10199
  call void @dump_av_set(%struct._list_node* %26) #6, !dbg !10265
  %27 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10266
  %tobool57 = icmp eq i8 %27, 0, !dbg !10266
  br i1 %tobool57, label %if.else72, label %do.body59, !dbg !10267

do.body59:                                        ; preds = %do.end55
  %call61 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !10268
  %mul62 = shl nsw i32 %call61, 1, !dbg !10268
  %add63 = or i32 %mul62, 1, !dbg !10268
  call void @llvm.dbg.value(metadata i32 %add63, metadata !10194, metadata !DIExpression()), !dbg !10269
  %conv65 = sext i32 %add63 to i64, !dbg !10268
  %28 = alloca i8, i64 %conv65, align 16, !dbg !10268
  call void @llvm.dbg.value(metadata i8* %28, metadata !10198, metadata !DIExpression()), !dbg !10269
  %call68 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %28, i64 %conv65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !10268
  call void @sel_prepare_string_for_dot_label(i8* nonnull %28) #6, !dbg !10268
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10268
  %call69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %28) #6, !dbg !10268
  br label %if.end77, !dbg !10268

if.else72:                                        ; preds = %do.end55
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10266
  %call73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !10266
  br label %if.end77

if.end77:                                         ; preds = %do.body59, %if.else72, %for.end
  %31 = load %struct._list_node*, %struct._list_node** %expr_seq, align 8, !dbg !10270
  call void @llvm.dbg.value(metadata %struct._list_node* %31, metadata !10184, metadata !DIExpression()), !dbg !10199
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !10271
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10271
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10271
  ret %struct._list_node* %31, !dbg !10272
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @find_used_regs(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, %struct.bitmap_head_def* %used_regs, %struct.reg_rename* %reg_rename_p, %struct._list_node** %original_insns) unnamed_addr #5 !dbg !10273 {
entry:
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %i = alloca %struct._list_iterator, align 8
  %def = alloca %struct._def*, align 8
  %expr = alloca %struct._expr*, align 8
  %expr_iter = alloca %struct._list_iterator, align 8
  %sparams = alloca %struct.fur_static_params, align 8
  %lparams = alloca %struct.cmpd_local_params, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10277, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata %struct._list_node* %orig_ops, metadata !10278, metadata !DIExpression()), !dbg !10294
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %used_regs, metadata !10279, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, metadata !10280, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata %struct._list_node** %original_insns, metadata !10281, metadata !DIExpression()), !dbg !10294
  %0 = bitcast %struct._list_iterator* %i to i8*, !dbg !10295
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !10295
  %1 = bitcast %struct._def** %def to i8*, !dbg !10296
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10296
  call void @llvm.dbg.value(metadata i8 0, metadata !10285, metadata !DIExpression()), !dbg !10294
  %2 = bitcast %struct._expr** %expr to i8*, !dbg !10297
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !10297
  %3 = bitcast %struct._list_iterator* %expr_iter to i8*, !dbg !10298
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !10298
  %4 = bitcast %struct.fur_static_params* %sparams to i8*, !dbg !10299
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !10299
  %5 = bitcast %struct.cmpd_local_params* %lparams to i8*, !dbg !10300
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #8, !dbg !10300
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !10301
  tail call void @bitmap_clear(%struct.bitmap_head_def* %6) #6, !dbg !10302
  %crosses_call = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %sparams, i64 0, i32 2, !dbg !10303
  store i8 0, i8* %crosses_call, align 8, !dbg !10304
  %original_insns1 = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %sparams, i64 0, i32 1, !dbg !10305
  store %struct._list_node** %original_insns, %struct._list_node*** %original_insns1, align 8, !dbg !10306
  %used_regs2 = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %sparams, i64 0, i32 0, !dbg !10307
  store %struct.bitmap_head_def* %used_regs, %struct.bitmap_head_def** %used_regs2, align 8, !dbg !10308
  store %struct.code_motion_path_driver_info_def* @fur_hooks, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10309
  call void @llvm.dbg.value(metadata %struct._list_node* %orig_ops, metadata !10278, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !10289, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  %call = call fastcc i32 @code_motion_path_driver(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, %struct._list_node* null, %struct.cmpd_local_params* nonnull %lparams, i8* nonnull %4) #7, !dbg !10310
  call void @llvm.dbg.value(metadata i32 %call, metadata !10284, metadata !DIExpression()), !dbg !10294
  %7 = load i8, i8* %crosses_call, align 8, !dbg !10311
  %8 = load i8, i8* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 2), align 8, !dbg !10312
  %or1 = or i8 %8, %7, !dbg !10312
  store i8 %or1, i8* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 2), align 8, !dbg !10312
  %cmp = icmp eq i32 %call, 1, !dbg !10313
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10313

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3260, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10313
  br label %cond.end, !dbg !10313

cond.end:                                         ; preds = %entry, %cond.true
  %tobool = icmp eq %struct._list_node** %original_insns, null, !dbg !10314
  br i1 %tobool, label %cond.true9, label %land.lhs.true, !dbg !10314

land.lhs.true:                                    ; preds = %cond.end
  %9 = load %struct._list_node*, %struct._list_node** %original_insns, align 8, !dbg !10314
  %tobool8 = icmp eq %struct._list_node* %9, null, !dbg !10314
  br i1 %tobool8, label %cond.true9, label %cond.end11, !dbg !10314

cond.true9:                                       ; preds = %land.lhs.true, %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10314
  br label %cond.end11, !dbg !10314

cond.end11:                                       ; preds = %land.lhs.true, %cond.true9
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops.addr, metadata !10278, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  call void @llvm.dbg.value(metadata %struct._list_iterator* %expr_iter, metadata !10287, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %expr_iter, %struct._list_node** nonnull %orig_ops.addr, i8 zeroext 0) #7, !dbg !10315
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %expr_iter, i64 0, i32 0, !dbg !10317
  br label %for.cond, !dbg !10315

for.cond:                                         ; preds = %for.body, %cond.end11
  %needs_spec_check_p.0 = phi i8 [ 0, %cond.end11 ], [ %or172, %for.body ], !dbg !10294
  call void @llvm.dbg.value(metadata i8 %needs_spec_check_p.0, metadata !10285, metadata !DIExpression()), !dbg !10294
  %10 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !10319
  %11 = load %struct._list_node*, %struct._list_node** %10, align 8, !dbg !10319
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !10286, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  %call13 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %11, %struct._expr** nonnull %expr) #7, !dbg !10319
  %tobool14 = icmp eq i8 %call13, 0, !dbg !10315
  br i1 %tobool14, label %for.end, label %for.body, !dbg !10315

for.body:                                         ; preds = %for.cond
  %12 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10320
  call void @llvm.dbg.value(metadata %struct._expr* %12, metadata !10286, metadata !DIExpression()), !dbg !10294
  %needs_spec_check_p15 = getelementptr inbounds %struct._expr, %struct._expr* %12, i64 0, i32 12, !dbg !10320
  %bf.load = load i8, i8* %needs_spec_check_p15, align 1, !dbg !10320
  %bf.clear = and i8 %bf.load, 1, !dbg !10320
  %or172 = or i8 %needs_spec_check_p.0, %bf.clear, !dbg !10321
  call void @llvm.dbg.value(metadata i8 %or172, metadata !10285, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata %struct._list_iterator* %expr_iter, metadata !10287, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %expr_iter) #7, !dbg !10319
  br label %for.cond, !dbg !10319, !llvm.loop !10322

for.end:                                          ; preds = %for.cond
  %needs_spec_check_p.0.lcssa = phi i8 [ %needs_spec_check_p.0, %for.cond ], !dbg !10294
  call void @llvm.dbg.value(metadata i8 %needs_spec_check_p.0.lcssa, metadata !10285, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata i8 %needs_spec_check_p.0.lcssa, metadata !10285, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata i8 %needs_spec_check_p.0.lcssa, metadata !10285, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !10282, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %i, %struct._list_node** %original_insns, i8 zeroext 0) #7, !dbg !10324
  %lp20 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i64 0, i32 0, !dbg !10325
  %tobool41 = icmp eq i8 %needs_spec_check_p.0.lcssa, 0, !dbg !10326
  br i1 %tobool41, label %for.end.split.us, label %for.end.for.end.split_crit_edge, !dbg !10324

for.end.for.end.split_crit_edge:                  ; preds = %for.end
  br label %for.cond19, !dbg !10324

for.end.split.us:                                 ; preds = %for.end
  br label %for.cond19.us, !dbg !10324

for.cond19.us:                                    ; preds = %if.end.us, %for.end.split.us
  %13 = load %struct._list_node**, %struct._list_node*** %lp20, align 8, !dbg !10328
  %14 = load %struct._list_node*, %struct._list_node** %13, align 8, !dbg !10328
  call void @llvm.dbg.value(metadata %struct._def** %def, metadata !10283, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  %call21.us = call fastcc zeroext i8 @_list_iter_cond_def(%struct._list_node* %14, %struct._def** nonnull %def) #7, !dbg !10328
  %tobool22.us = icmp eq i8 %call21.us, 0, !dbg !10324
  br i1 %tobool22.us, label %for.end47.us-lcssa.us, label %for.body23.us, !dbg !10324

for.body23.us:                                    ; preds = %for.cond19.us
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10329
  %base.us = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i64 0, i32 0, !dbg !10329
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10329
  %base31.us = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !10329
  %17 = load %struct._def*, %struct._def** %def, align 8, !dbg !10329
  call void @llvm.dbg.value(metadata %struct._def* %17, metadata !10283, metadata !DIExpression()), !dbg !10294
  %orig_insn.us = getelementptr inbounds %struct._def, %struct._def* %17, i64 0, i32 0, !dbg !10329
  %18 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn.us, align 8, !dbg !10329
  %arrayidx.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10329
  %rt_int.us = bitcast %union.rtunion_def* %arrayidx.us to i32*, !dbg !10329
  %19 = load i32, i32* %rt_int.us, align 8, !dbg !10329
  %call35.us = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base31.us, i32 %19) #7, !dbg !10329
  %call36.us = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base.us, i32 %call35.us) #7, !dbg !10329
  %vinsn38.us = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call36.us, i64 0, i32 0, i32 0, !dbg !10329
  %20 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn38.us, align 8, !dbg !10329
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %20, metadata !10290, metadata !DIExpression()), !dbg !10330
  %type.us = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %20, i64 0, i32 1, i32 0, !dbg !10331
  %21 = load i32, i32* %type.us, align 8, !dbg !10331
  %cmp39.us = icmp eq i32 %21, 23, !dbg !10331
  br i1 %cmp39.us, label %if.then.us, label %if.end.us, !dbg !10333

if.then.us:                                       ; preds = %for.body23.us
  %22 = load %struct._def*, %struct._def** %def, align 8, !dbg !10334
  call void @llvm.dbg.value(metadata %struct._def* %22, metadata !10283, metadata !DIExpression()), !dbg !10294
  call fastcc void @mark_unavailable_hard_regs(%struct._def* %22, %struct.reg_rename* nonnull @find_best_reg_for_expr.reg_rename_data, %struct.bitmap_head_def* %used_regs) #7, !dbg !10335
  br label %if.end.us, !dbg !10335

if.end.us:                                        ; preds = %if.then.us, %for.body23.us
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !10282, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #7, !dbg !10328
  br label %for.cond19.us, !dbg !10328, !llvm.loop !10336

for.end47.us-lcssa.us:                            ; preds = %for.cond19.us
  br label %for.end47, !dbg !10338

for.cond19:                                       ; preds = %if.end, %for.end.for.end.split_crit_edge
  %23 = load %struct._list_node**, %struct._list_node*** %lp20, align 8, !dbg !10328
  %24 = load %struct._list_node*, %struct._list_node** %23, align 8, !dbg !10328
  call void @llvm.dbg.value(metadata %struct._def** %def, metadata !10283, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  %call21 = call fastcc zeroext i8 @_list_iter_cond_def(%struct._list_node* %24, %struct._def** nonnull %def) #7, !dbg !10328
  %tobool22 = icmp eq i8 %call21, 0, !dbg !10324
  br i1 %tobool22, label %for.end47.us-lcssa, label %for.body23, !dbg !10324

for.body23:                                       ; preds = %for.cond19
  %25 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10329
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %25, i64 0, i32 0, !dbg !10329
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10329
  %base31 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %26, i64 0, i32 0, !dbg !10329
  %27 = load %struct._def*, %struct._def** %def, align 8, !dbg !10329
  call void @llvm.dbg.value(metadata %struct._def* %27, metadata !10283, metadata !DIExpression()), !dbg !10294
  %orig_insn = getelementptr inbounds %struct._def, %struct._def* %27, i64 0, i32 0, !dbg !10329
  %28 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !10329
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10329
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10329
  %29 = load i32, i32* %rt_int, align 8, !dbg !10329
  %call35 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base31, i32 %29) #7, !dbg !10329
  %call36 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call35) #7, !dbg !10329
  %vinsn38 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call36, i64 0, i32 0, i32 0, !dbg !10329
  %30 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn38, align 8, !dbg !10329
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %30, metadata !10290, metadata !DIExpression()), !dbg !10330
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %30, i64 0, i32 1, i32 0, !dbg !10331
  %31 = load i32, i32* %type, align 8, !dbg !10331
  %cmp39 = icmp eq i32 %31, 23, !dbg !10331
  br i1 %cmp39, label %if.then, label %if.end, !dbg !10333

if.then:                                          ; preds = %for.body23
  %32 = load %struct._def*, %struct._def** %def, align 8, !dbg !10334
  call void @llvm.dbg.value(metadata %struct._def* %32, metadata !10283, metadata !DIExpression()), !dbg !10294
  call fastcc void @mark_unavailable_hard_regs(%struct._def* %32, %struct.reg_rename* nonnull @find_best_reg_for_expr.reg_rename_data, %struct.bitmap_head_def* %used_regs) #7, !dbg !10335
  br label %if.end, !dbg !10335

if.end:                                           ; preds = %if.then, %for.body23
  %reg_uses = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %30, i64 0, i32 1, i32 5, !dbg !10339
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !10339
  %call44 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %used_regs, %struct.bitmap_head_def* %33) #6, !dbg !10339
  call void @llvm.dbg.value(metadata %struct._list_iterator* %i, metadata !10282, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %i) #7, !dbg !10328
  br label %for.cond19, !dbg !10328, !llvm.loop !10336

for.end47.us-lcssa:                               ; preds = %for.cond19
  br label %for.end47, !dbg !10338

for.end47:                                        ; preds = %for.end47.us-lcssa.us, %for.end47.us-lcssa
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #8, !dbg !10338
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !10338
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !10338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !10338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10338
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !10338
  ret i8 undef, !dbg !10340
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @equal_after_moveup_path_p(%struct._expr* %expr, %struct._list_node* %path, %struct._expr* %expr_vliw) unnamed_addr #5 !dbg !10341 {
entry:
  %_tmp = alloca %struct._expr, align 8
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !10345, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !10346, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata %struct._expr* %expr_vliw, metadata !10347, metadata !DIExpression()), !dbg !10356
  %0 = bitcast %struct._expr* %_tmp to i8*, !dbg !10357
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #8, !dbg !10357
  call void @llvm.dbg.value(metadata %struct._expr* %_tmp, metadata !10349, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i8 1, metadata !10351, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata %struct._expr* %_tmp, metadata !10348, metadata !DIExpression(DW_OP_deref)), !dbg !10356
  call void @copy_expr_onside(%struct._expr* nonnull %_tmp, %struct._expr* %expr) #6, !dbg !10358
  call void @llvm.dbg.value(metadata i32 0, metadata !10350, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i8 1, metadata !10351, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !10346, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i8 1, metadata !10351, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i8 1, metadata !10351, metadata !DIExpression()), !dbg !10356
  br i1 false, label %entry.if.end50_crit_edge, label %if.then, !dbg !10359

entry.if.end50_crit_edge:                         ; preds = %entry
  br label %if.end50, !dbg !10359

if.then:                                          ; preds = %entry
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %_tmp, i64 0, i32 0, !dbg !10360
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10360
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %1, metadata !10352, metadata !DIExpression()), !dbg !10361
  %vinsn45 = getelementptr inbounds %struct._expr, %struct._expr* %expr_vliw, i64 0, i32 0, !dbg !10362
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn45, align 8, !dbg !10362
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %2, metadata !10355, metadata !DIExpression()), !dbg !10361
  %cmp46 = icmp eq %struct.vinsn_def* %1, %2, !dbg !10363
  br i1 %cmp46, label %if.end50, label %if.then48, !dbg !10365

if.then48:                                        ; preds = %if.then
  %call49 = call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %1, %struct.vinsn_def* %2) #6, !dbg !10366
  call void @llvm.dbg.value(metadata i8 %call49, metadata !10351, metadata !DIExpression()), !dbg !10356
  br label %if.end50, !dbg !10367

if.end50:                                         ; preds = %entry.if.end50_crit_edge, %if.then, %if.then48
  %res.2 = phi i8 [ undef, %entry.if.end50_crit_edge ], [ %call49, %if.then48 ], [ 1, %if.then ], !dbg !10356
  call void @llvm.dbg.value(metadata i8 %res.2, metadata !10351, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata %struct._expr* %_tmp, metadata !10348, metadata !DIExpression(DW_OP_deref)), !dbg !10356
  call void @clear_expr(%struct._expr* nonnull %_tmp) #6, !dbg !10368
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #8, !dbg !10369
  ret i8 %res.2, !dbg !10370
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @code_motion_path_driver(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, %struct._list_node* %path, %struct.cmpd_local_params* %local_params_in, i8* %static_params) unnamed_addr #5 !dbg !10371 {
entry:
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %path.addr = alloca %struct._list_node*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10375, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata %struct._list_node* %orig_ops, metadata !10376, metadata !DIExpression()), !dbg !10452
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %path, metadata !10377, metadata !DIExpression()), !dbg !10452
  store %struct._list_node* %path, %struct._list_node** %path.addr, align 8
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %local_params_in, metadata !10378, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !10379, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata %struct._expr* null, metadata !10380, metadata !DIExpression()), !dbg !10452
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !10453
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !10453
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !10453
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !10381, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i8 0, metadata !10385, metadata !DIExpression()), !dbg !10452
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !10454
  %cmp = icmp sgt i32 %1, 5, !dbg !10455
  br i1 %cmp, label %do.body, label %if.end54, !dbg !10456

do.body:                                          ; preds = %entry
  %2 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10457
  %tobool = icmp eq i8 %2, 0, !dbg !10457
  br i1 %tobool, label %if.else, label %do.body2, !dbg !10458

do.body2:                                         ; preds = %do.body
  %3 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10459
  %routine_name = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %3, i64 0, i32 8, !dbg !10459
  %4 = load i8*, i8** %routine_name, align 8, !dbg !10459
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* %4) #6, !dbg !10459
  %mul = shl nsw i32 %call, 1, !dbg !10459
  %add = or i32 %mul, 1, !dbg !10459
  call void @llvm.dbg.value(metadata i32 %add, metadata !10386, metadata !DIExpression()), !dbg !10460
  %conv = sext i32 %add to i64, !dbg !10459
  %5 = alloca i8, i64 %conv, align 16, !dbg !10459
  call void @llvm.dbg.value(metadata i8* %5, metadata !10392, metadata !DIExpression()), !dbg !10460
  %6 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10459
  %routine_name5 = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %6, i64 0, i32 8, !dbg !10459
  %7 = load i8*, i8** %routine_name5, align 8, !dbg !10459
  %call6 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %5, i64 %conv, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* %7) #6, !dbg !10459
  call void @sel_prepare_string_for_dot_label(i8* nonnull %5) #6, !dbg !10459
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10459
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %5) #6, !dbg !10459
  br label %do.end11, !dbg !10459

if.else:                                          ; preds = %do.body
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10457
  %10 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10457
  %routine_name8 = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %10, i64 0, i32 8, !dbg !10457
  %11 = load i8*, i8** %routine_name8, align 8, !dbg !10457
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* %11) #6, !dbg !10457
  br label %do.end11

do.end11:                                         ; preds = %if.else, %do.body2
  call void @dump_insn(%struct.rtx_def* %insn) #6, !dbg !10461
  %12 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10462
  %tobool13 = icmp eq i8 %12, 0, !dbg !10462
  br i1 %tobool13, label %if.else28, label %do.body15, !dbg !10463

do.body15:                                        ; preds = %do.end11
  %call17 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !10464
  %mul18 = shl nsw i32 %call17, 1, !dbg !10464
  %add19 = or i32 %mul18, 1, !dbg !10464
  call void @llvm.dbg.value(metadata i32 %add19, metadata !10393, metadata !DIExpression()), !dbg !10465
  %conv21 = sext i32 %add19 to i64, !dbg !10464
  %13 = alloca i8, i64 %conv21, align 16, !dbg !10464
  call void @llvm.dbg.value(metadata i8* %13, metadata !10397, metadata !DIExpression()), !dbg !10465
  %call24 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %13, i64 %conv21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !10464
  call void @sel_prepare_string_for_dot_label(i8* nonnull %13) #6, !dbg !10464
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10464
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %13) #6, !dbg !10464
  br label %do.end32, !dbg !10464

if.else28:                                        ; preds = %do.end11
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10462
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !10462
  br label %do.end32

do.end32:                                         ; preds = %if.else28, %do.body15
  %16 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !10466
  call void @llvm.dbg.value(metadata %struct._list_node* %16, metadata !10376, metadata !DIExpression()), !dbg !10452
  call void @dump_av_set(%struct._list_node* %16) #6, !dbg !10467
  %17 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10468
  %tobool34 = icmp eq i8 %17, 0, !dbg !10468
  br i1 %tobool34, label %if.else49, label %do.body36, !dbg !10469

do.body36:                                        ; preds = %do.end32
  %call38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !10470
  %mul39 = shl nsw i32 %call38, 1, !dbg !10470
  %add40 = or i32 %mul39, 1, !dbg !10470
  call void @llvm.dbg.value(metadata i32 %add40, metadata !10398, metadata !DIExpression()), !dbg !10471
  %conv42 = sext i32 %add40 to i64, !dbg !10470
  %18 = alloca i8, i64 %conv42, align 16, !dbg !10470
  call void @llvm.dbg.value(metadata i8* %18, metadata !10402, metadata !DIExpression()), !dbg !10471
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %18, i64 %conv42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !10470
  call void @sel_prepare_string_for_dot_label(i8* nonnull %18) #6, !dbg !10470
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10470
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %18) #6, !dbg !10470
  br label %if.end54, !dbg !10470

if.else49:                                        ; preds = %do.end32
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10468
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !10468
  br label %if.end54

if.end54:                                         ; preds = %do.body36, %if.else49, %entry
  %21 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !10472
  call void @llvm.dbg.value(metadata %struct._list_node* %21, metadata !10376, metadata !DIExpression()), !dbg !10452
  %tobool55 = icmp eq %struct._list_node* %21, null, !dbg !10472
  br i1 %tobool55, label %cond.true, label %cond.end, !dbg !10472

cond.true:                                        ; preds = %if.end54
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6420, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10472
  br label %cond.end, !dbg !10472

cond.end:                                         ; preds = %if.end54, %cond.true
  %22 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !10473
  call void @llvm.dbg.value(metadata %struct._list_node* %22, metadata !10377, metadata !DIExpression()), !dbg !10452
  %call56 = call fastcc zeroext i8 @is_ineligible_successor(%struct.rtx_def* %insn, %struct._list_node* %22) #7, !dbg !10474
  %tobool57 = icmp eq i8 %call56, 0, !dbg !10474
  br i1 %tobool57, label %if.end95, label %if.then58, !dbg !10475

if.then58:                                        ; preds = %cond.end
  %23 = load i32, i32* @sched_verbose, align 4, !dbg !10476
  %cmp59 = icmp sgt i32 %23, 5, !dbg !10477
  br i1 %cmp59, label %do.body62, label %cleanup362, !dbg !10478

do.body62:                                        ; preds = %if.then58
  %24 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10479
  %tobool63 = icmp eq i8 %24, 0, !dbg !10479
  br i1 %tobool63, label %if.else85, label %do.body65, !dbg !10480

do.body65:                                        ; preds = %do.body62
  %arrayidx69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10481
  %rt_int = bitcast %union.rtunion_def* %arrayidx69 to i32*, !dbg !10481
  %25 = load i32, i32* %rt_int, align 8, !dbg !10481
  %call70 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.63, i64 0, i64 0), i32 %25) #6, !dbg !10481
  %mul71 = shl nsw i32 %call70, 1, !dbg !10481
  %add72 = or i32 %mul71, 1, !dbg !10481
  call void @llvm.dbg.value(metadata i32 %add72, metadata !10403, metadata !DIExpression()), !dbg !10482
  %conv74 = sext i32 %add72 to i64, !dbg !10481
  %26 = alloca i8, i64 %conv74, align 16, !dbg !10481
  call void @llvm.dbg.value(metadata i8* %26, metadata !10410, metadata !DIExpression()), !dbg !10482
  %27 = load i32, i32* %rt_int, align 8, !dbg !10481
  %call81 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %26, i64 %conv74, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.63, i64 0, i64 0), i32 %27) #6, !dbg !10481
  call void @sel_prepare_string_for_dot_label(i8* nonnull %26) #6, !dbg !10481
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10481
  %call82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %26) #6, !dbg !10481
  br label %cleanup362, !dbg !10481

if.else85:                                        ; preds = %do.body62
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10479
  %arrayidx88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10479
  %rt_int89 = bitcast %union.rtunion_def* %arrayidx88 to i32*, !dbg !10479
  %30 = load i32, i32* %rt_int89, align 8, !dbg !10479
  %call90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.63, i64 0, i64 0), i32 %30) #6, !dbg !10479
  br label %cleanup362

if.end95:                                         ; preds = %cond.end
  %call96 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %insn) #6, !dbg !10483
  %tobool97 = icmp eq i8 %call96, 0, !dbg !10483
  br i1 %tobool97, label %if.end169, label %if.then98, !dbg !10484

if.then98:                                        ; preds = %if.end95
  %call99 = call i32 @get_av_level(%struct.rtx_def* %insn) #6, !dbg !10485
  %31 = load i32, i32* @global_level, align 4, !dbg !10485
  %cmp100 = icmp eq i32 %call99, %31, !dbg !10485
  br i1 %cmp100, label %if.end130, label %if.then102, !dbg !10486

if.then102:                                       ; preds = %if.then98
  %32 = load i32, i32* @sched_verbose, align 4, !dbg !10487
  %cmp103 = icmp sgt i32 %32, 5, !dbg !10488
  br i1 %cmp103, label %do.body106, label %cleanup362, !dbg !10489

do.body106:                                       ; preds = %if.then102
  %33 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10490
  %tobool107 = icmp eq i8 %33, 0, !dbg !10490
  br i1 %tobool107, label %if.else123, label %do.body109, !dbg !10491

do.body109:                                       ; preds = %do.body106
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !10492
  %34 = load i32, i32* %index, align 8, !dbg !10492
  %call111 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.64, i64 0, i64 0), i32 %34) #6, !dbg !10492
  %mul112 = shl nsw i32 %call111, 1, !dbg !10492
  %add113 = or i32 %mul112, 1, !dbg !10492
  call void @llvm.dbg.value(metadata i32 %add113, metadata !10411, metadata !DIExpression()), !dbg !10493
  %conv115 = sext i32 %add113 to i64, !dbg !10492
  %35 = alloca i8, i64 %conv115, align 16, !dbg !10492
  call void @llvm.dbg.value(metadata i8* %35, metadata !10420, metadata !DIExpression()), !dbg !10493
  %36 = load i32, i32* %index, align 8, !dbg !10492
  %call119 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %35, i64 %conv115, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.64, i64 0, i64 0), i32 %36) #6, !dbg !10492
  call void @sel_prepare_string_for_dot_label(i8* nonnull %35) #6, !dbg !10492
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10492
  %call120 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %35) #6, !dbg !10492
  br label %cleanup362, !dbg !10492

if.else123:                                       ; preds = %do.body106
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10490
  %index124 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !10490
  %39 = load i32, i32* %index124, align 8, !dbg !10490
  %call125 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.64, i64 0, i64 0), i32 %39) #6, !dbg !10490
  br label %cleanup362

if.end130:                                        ; preds = %if.then98
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !10494
  %index131 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !10495
  %41 = load i32, i32* %index131, align 8, !dbg !10495
  %call132 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %40, i32 %41) #6, !dbg !10496
  %tobool133 = icmp eq i32 %call132, 0, !dbg !10496
  br i1 %tobool133, label %if.end169, label %if.then134, !dbg !10497

if.then134:                                       ; preds = %if.end130
  %42 = load i32, i32* @sched_verbose, align 4, !dbg !10498
  %cmp135 = icmp sgt i32 %42, 5, !dbg !10499
  br i1 %cmp135, label %do.body138, label %if.end162, !dbg !10500

do.body138:                                       ; preds = %if.then134
  %43 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10501
  %tobool139 = icmp eq i8 %43, 0, !dbg !10501
  br i1 %tobool139, label %if.else156, label %do.body141, !dbg !10502

do.body141:                                       ; preds = %do.body138
  %44 = load i32, i32* %index131, align 8, !dbg !10503
  %call144 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.65, i64 0, i64 0), i32 %44) #6, !dbg !10503
  %mul145 = shl nsw i32 %call144, 1, !dbg !10503
  %add146 = or i32 %mul145, 1, !dbg !10503
  call void @llvm.dbg.value(metadata i32 %add146, metadata !10421, metadata !DIExpression()), !dbg !10504
  %conv148 = sext i32 %add146 to i64, !dbg !10503
  %45 = alloca i8, i64 %conv148, align 16, !dbg !10503
  call void @llvm.dbg.value(metadata i8* %45, metadata !10428, metadata !DIExpression()), !dbg !10504
  %46 = load i32, i32* %index131, align 8, !dbg !10503
  %call152 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %45, i64 %conv148, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.65, i64 0, i64 0), i32 %46) #6, !dbg !10503
  call void @sel_prepare_string_for_dot_label(i8* nonnull %45) #6, !dbg !10503
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10503
  %call153 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %45) #6, !dbg !10503
  br label %if.end162, !dbg !10503

if.else156:                                       ; preds = %do.body138
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10501
  %49 = load i32, i32* %index131, align 8, !dbg !10501
  %call158 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.65, i64 0, i64 0), i32 %49) #6, !dbg !10501
  br label %if.end162

if.end162:                                        ; preds = %do.body141, %if.else156, %if.then134
  %50 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10505
  %on_enter = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %50, i64 0, i32 0, !dbg !10507
  %51 = load i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)*, i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)** %on_enter, align 8, !dbg !10507
  %tobool163 = icmp eq i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)* %51, null, !dbg !10505
  br i1 %tobool163, label %if.end169, label %if.then164, !dbg !10508

if.then164:                                       ; preds = %if.end162
  %call166 = call i32 %51(%struct.rtx_def* %insn, %struct.cmpd_local_params* %local_params_in, i8* %static_params, i8 zeroext 1) #6, !dbg !10509
  br label %cleanup362, !dbg !10510

if.end169:                                        ; preds = %if.end162, %if.end130, %if.end95
  %52 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10511
  %on_enter170 = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %52, i64 0, i32 0, !dbg !10513
  %53 = load i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)*, i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)** %on_enter170, align 8, !dbg !10513
  %tobool171 = icmp eq i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)* %53, null, !dbg !10511
  br i1 %tobool171, label %if.end175, label %if.then172, !dbg !10514

if.then172:                                       ; preds = %if.end169
  %call174 = call i32 %53(%struct.rtx_def* %insn, %struct.cmpd_local_params* %local_params_in, i8* %static_params, i8 zeroext 0) #6, !dbg !10515
  br label %if.end175, !dbg !10515

if.end175:                                        ; preds = %if.end169, %if.then172
  %54 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !10516
  call void @llvm.dbg.value(metadata %struct._list_node* %54, metadata !10376, metadata !DIExpression()), !dbg !10452
  %call176 = call %struct._list_node* @av_set_copy(%struct._list_node* %54) #6, !dbg !10517
  call void @llvm.dbg.value(metadata %struct._list_node* %call176, metadata !10376, metadata !DIExpression()), !dbg !10452
  store %struct._list_node* %call176, %struct._list_node** %orig_ops.addr, align 8, !dbg !10518
  %call177 = call i32 @get_av_level(%struct.rtx_def* %insn) #6, !dbg !10519
  %55 = load i32, i32* @global_level, align 4, !dbg !10519
  %cmp178 = icmp eq i32 %call177, %55, !dbg !10519
  br i1 %cmp178, label %if.then180, label %if.end182, !dbg !10521

if.then180:                                       ; preds = %if.end175
  %call181 = call %struct._list_node* @get_av_set(%struct.rtx_def* %insn) #6, !dbg !10522
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops.addr, metadata !10376, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call void @av_set_intersect(%struct._list_node** nonnull %orig_ops.addr, %struct._list_node* %call181) #6, !dbg !10523
  br label %if.end182, !dbg !10523

if.end182:                                        ; preds = %if.then180, %if.end175
  %56 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !10524
  call void @llvm.dbg.value(metadata %struct._list_node* %56, metadata !10376, metadata !DIExpression()), !dbg !10452
  %tobool183 = icmp eq %struct._list_node* %56, null, !dbg !10524
  br i1 %tobool183, label %if.then184, label %if.end213, !dbg !10525

if.then184:                                       ; preds = %if.end182
  %57 = load i32, i32* @sched_verbose, align 4, !dbg !10526
  %cmp185 = icmp sgt i32 %57, 5, !dbg !10527
  br i1 %cmp185, label %do.body188, label %cleanup362, !dbg !10528

do.body188:                                       ; preds = %if.then184
  %58 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10529
  %tobool189 = icmp eq i8 %58, 0, !dbg !10529
  br i1 %tobool189, label %if.else206, label %do.body191, !dbg !10530

do.body191:                                       ; preds = %do.body188
  %index193 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !10531
  %59 = load i32, i32* %index193, align 8, !dbg !10531
  %call194 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.66, i64 0, i64 0), i32 %59) #6, !dbg !10531
  %mul195 = shl nsw i32 %call194, 1, !dbg !10531
  %add196 = or i32 %mul195, 1, !dbg !10531
  call void @llvm.dbg.value(metadata i32 %add196, metadata !10429, metadata !DIExpression()), !dbg !10532
  %conv198 = sext i32 %add196 to i64, !dbg !10531
  %60 = alloca i8, i64 %conv198, align 16, !dbg !10531
  call void @llvm.dbg.value(metadata i8* %60, metadata !10436, metadata !DIExpression()), !dbg !10532
  %61 = load i32, i32* %index193, align 8, !dbg !10531
  %call202 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %60, i64 %conv198, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.66, i64 0, i64 0), i32 %61) #6, !dbg !10531
  call void @sel_prepare_string_for_dot_label(i8* nonnull %60) #6, !dbg !10531
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10531
  %call203 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %60) #6, !dbg !10531
  br label %cleanup362, !dbg !10531

if.else206:                                       ; preds = %do.body188
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10529
  %index207 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !10529
  %64 = load i32, i32* %index207, align 8, !dbg !10529
  %call208 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.66, i64 0, i64 0), i32 %64) #6, !dbg !10529
  br label %cleanup362

if.end213:                                        ; preds = %if.end182
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops.addr, metadata !10376, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call void @av_set_leave_one_nonspec(%struct._list_node** nonnull %orig_ops.addr) #6, !dbg !10533
  %65 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !10534
  call void @llvm.dbg.value(metadata %struct._list_node* %65, metadata !10376, metadata !DIExpression()), !dbg !10452
  %tobool214 = icmp eq %struct._list_node* %65, null, !dbg !10534
  br i1 %tobool214, label %cond.true215, label %cond.end217, !dbg !10534

cond.true215:                                     ; preds = %if.end213
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6487, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10534
  br label %cond.end217, !dbg !10534

cond.end217:                                      ; preds = %if.end213, %cond.true215
  call void @llvm.dbg.value(metadata %struct._list_node** %path.addr, metadata !10377, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call fastcc void @_xlist_add(%struct._list_node** nonnull %path.addr, %struct.rtx_def* %insn) #7, !dbg !10535
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10382, metadata !DIExpression()), !dbg !10452
  %call219 = call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %0) #6, !dbg !10536
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call219, metadata !10383, metadata !DIExpression()), !dbg !10452
  br label %for.cond, !dbg !10537

for.cond:                                         ; preds = %if.end305, %cond.end217
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %cond.end217 ], [ %90, %if.end305 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !10375, metadata !DIExpression()), !dbg !10452
  %66 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !10538
  call void @llvm.dbg.value(metadata %struct._list_node* %66, metadata !10376, metadata !DIExpression()), !dbg !10452
  %67 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10539
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %67, i64 0, i32 0, !dbg !10539
  %68 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10539
  %base227 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %68, i64 0, i32 0, !dbg !10539
  %arrayidx233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10539
  %rt_int234 = bitcast %union.rtunion_def* %arrayidx233 to i32*, !dbg !10539
  %69 = load i32, i32* %rt_int234, align 8, !dbg !10539
  %call235 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base227, i32 %69) #7, !dbg !10539
  %call236 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call235) #7, !dbg !10539
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call236, i64 0, i32 0, i32 0, !dbg !10539
  %70 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10539
  %call238 = call %struct._expr* @av_set_lookup(%struct._list_node* %66, %struct.vinsn_def* %70) #6, !dbg !10540
  call void @llvm.dbg.value(metadata %struct._expr* %call238, metadata !10380, metadata !DIExpression()), !dbg !10452
  %tobool239 = icmp eq %struct._expr* %call238, null, !dbg !10541
  br i1 %tobool239, label %if.else290, label %if.then240, !dbg !10542

if.then240:                                       ; preds = %for.cond
  %insn.addr.0.lcssa = phi %struct.rtx_def* [ %insn.addr.0, %for.cond ]
  %rt_int234.lcssa = phi i32* [ %rt_int234, %for.cond ], !dbg !10539
  %call238.lcssa = phi %struct._expr* [ %call238, %for.cond ], !dbg !10540
  %tobool239.lcssa = phi i1 [ %tobool239, %for.cond ], !dbg !10541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0.lcssa, metadata !10375, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0.lcssa, metadata !10375, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0.lcssa, metadata !10375, metadata !DIExpression()), !dbg !10452
  %71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10543
  %rt_rtx = bitcast %union.rtunion_def* %71 to %struct.rtx_def**, !dbg !10543
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %72, metadata !10437, metadata !DIExpression()), !dbg !10544
  %73 = load i32, i32* @sched_verbose, align 4, !dbg !10545
  %cmp244 = icmp sgt i32 %73, 5, !dbg !10546
  br i1 %cmp244, label %do.body247, label %if.end280, !dbg !10547

do.body247:                                       ; preds = %if.then240
  %74 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10548
  %tobool248 = icmp eq i8 %74, 0, !dbg !10548
  br i1 %tobool248, label %if.else271, label %do.body250, !dbg !10549

do.body250:                                       ; preds = %do.body247
  %75 = load i32, i32* %rt_int234.lcssa, align 8, !dbg !10550
  %call256 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.67, i64 0, i64 0), i32 %75) #6, !dbg !10550
  %mul257 = shl nsw i32 %call256, 1, !dbg !10550
  %add258 = or i32 %mul257, 1, !dbg !10550
  call void @llvm.dbg.value(metadata i32 %add258, metadata !10443, metadata !DIExpression()), !dbg !10551
  %conv260 = sext i32 %add258 to i64, !dbg !10550
  %76 = alloca i8, i64 %conv260, align 16, !dbg !10550
  call void @llvm.dbg.value(metadata i8* %76, metadata !10448, metadata !DIExpression()), !dbg !10551
  %77 = load i32, i32* %rt_int234.lcssa, align 8, !dbg !10550
  %call267 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %76, i64 %conv260, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.67, i64 0, i64 0), i32 %77) #6, !dbg !10550
  call void @sel_prepare_string_for_dot_label(i8* nonnull %76) #6, !dbg !10550
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10550
  %call268 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %76) #6, !dbg !10550
  br label %if.end280, !dbg !10550

if.else271:                                       ; preds = %do.body247
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10548
  %80 = load i32, i32* %rt_int234.lcssa, align 8, !dbg !10548
  %call276 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.67, i64 0, i64 0), i32 %80) #6, !dbg !10548
  br label %if.end280

if.end280:                                        ; preds = %do.body250, %if.else271, %if.then240
  %81 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10552
  %orig_expr_found = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %81, i64 0, i32 1, !dbg !10553
  %82 = load void (%struct.rtx_def*, %struct._expr*, %struct.cmpd_local_params*, i8*)*, void (%struct.rtx_def*, %struct._expr*, %struct.cmpd_local_params*, i8*)** %orig_expr_found, align 8, !dbg !10553
  call void %82(%struct.rtx_def* %insn.addr.0.lcssa, %struct._expr* nonnull %call238.lcssa, %struct.cmpd_local_params* %local_params_in, i8* %static_params) #6, !dbg !10552
  %cmp281 = icmp eq %struct.rtx_def* %insn.addr.0.lcssa, %insn, !dbg !10554
  br i1 %cmp281, label %if.then283, label %for.end, !dbg !10556

if.then283:                                       ; preds = %if.end280
  %83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !10557
  %rt_rtx287 = bitcast %union.rtunion_def* %83 to %struct.rtx_def**, !dbg !10557
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx287, align 8, !dbg !10557
  call void @llvm.dbg.value(metadata %struct.rtx_def* %84, metadata !10382, metadata !DIExpression()), !dbg !10452
  %call288 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %72) #6, !dbg !10559
  call void @llvm.dbg.value(metadata i8 %call288, metadata !10385, metadata !DIExpression()), !dbg !10452
  br label %for.end, !dbg !10560

if.else290:                                       ; preds = %for.cond
  %85 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10561
  %orig_expr_not_found = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %85, i64 0, i32 2, !dbg !10564
  %86 = load i8 (%struct.rtx_def*, %struct._list_node*, i8*)*, i8 (%struct.rtx_def*, %struct._list_node*, i8*)** %orig_expr_not_found, align 8, !dbg !10564
  %87 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !10565
  call void @llvm.dbg.value(metadata %struct._list_node* %87, metadata !10376, metadata !DIExpression()), !dbg !10452
  %call291 = call zeroext i8 %86(%struct.rtx_def* %insn.addr.0, %struct._list_node* %87, i8* %static_params) #6, !dbg !10561
  %tobool292 = icmp eq i8 %call291, 0, !dbg !10561
  br i1 %tobool292, label %if.else294, label %if.then293, !dbg !10566

if.then293:                                       ; preds = %if.else290
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops.addr, metadata !10376, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call fastcc void @undo_transformations(%struct._list_node** nonnull %orig_ops.addr, %struct.rtx_def* %insn.addr.0) #7, !dbg !10567
  %88 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !10569
  call void @llvm.dbg.value(metadata %struct._list_node* %88, metadata !10376, metadata !DIExpression()), !dbg !10452
  %tobool296 = icmp eq %struct._list_node* %88, null, !dbg !10569
  br i1 %tobool296, label %cond.true297, label %if.end301, !dbg !10569

if.else294:                                       ; preds = %if.else290
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops.addr, metadata !10376, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call void @llvm.dbg.value(metadata %struct._list_node** %path.addr, metadata !10377, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call fastcc void @code_motion_path_driver_cleanup(%struct._list_node** nonnull %orig_ops.addr, %struct._list_node** nonnull %path.addr) #7, !dbg !10570
  br label %cleanup362, !dbg !10572

cond.true297:                                     ; preds = %if.then293
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6557, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10569
  br label %if.end301, !dbg !10569

if.end301:                                        ; preds = %if.then293, %cond.true297
  %cmp302 = icmp eq %struct.rtx_def* %insn.addr.0, %call219, !dbg !10573
  br i1 %cmp302, label %for.end.loopexit, label %if.end305, !dbg !10575

if.end305:                                        ; preds = %if.end301
  %89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !10576
  %rt_rtx309 = bitcast %union.rtunion_def* %89 to %struct.rtx_def**, !dbg !10576
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx309, align 8, !dbg !10576
  call void @llvm.dbg.value(metadata %struct.rtx_def* %90, metadata !10375, metadata !DIExpression()), !dbg !10452
  br label %for.cond, !dbg !10577, !llvm.loop !10578

for.end.loopexit:                                 ; preds = %if.end301
  %tobool239.lcssa18 = phi i1 [ %tobool239, %if.end301 ], !dbg !10541
  br label %for.end, !dbg !10581

for.end:                                          ; preds = %for.end.loopexit, %if.end280, %if.then283
  %tobool23919 = phi i1 [ %tobool239.lcssa, %if.then283 ], [ %tobool239.lcssa, %if.end280 ], [ %tobool239.lcssa18, %for.end.loopexit ]
  %first_insn.1 = phi %struct.rtx_def* [ %84, %if.then283 ], [ %insn, %if.end280 ], [ %insn, %for.end.loopexit ], !dbg !10452
  %removed_last_insn.1 = phi i8 [ %call288, %if.then283 ], [ 0, %if.end280 ], [ 0, %for.end.loopexit ], !dbg !10452
  %insn.addr.1 = phi %struct.rtx_def* [ %72, %if.then283 ], [ %72, %if.end280 ], [ %call219, %for.end.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !10375, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i8 %removed_last_insn.1, metadata !10385, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_insn.1, metadata !10382, metadata !DIExpression()), !dbg !10452
  br i1 %tobool23919, label %if.then311, label %if.end332, !dbg !10582

if.then311:                                       ; preds = %for.end
  %call312 = call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %0) #6, !dbg !10583
  %cmp313 = icmp eq %struct.rtx_def* %insn.addr.1, %call312, !dbg !10583
  br i1 %cmp313, label %cond.end317, label %cond.true315, !dbg !10583

cond.true315:                                     ; preds = %if.then311
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6573, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10583
  br label %cond.end317, !dbg !10583

cond.end317:                                      ; preds = %if.then311, %cond.true315
  %cmp319 = icmp eq %struct.rtx_def* %insn.addr.1, %first_insn.1, !dbg !10584
  br i1 %cmp319, label %if.end322, label %if.then321, !dbg !10586

if.then321:                                       ; preds = %cond.end317
  call void @llvm.dbg.value(metadata %struct._list_node** %path.addr, metadata !10377, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call fastcc void @_xlist_add(%struct._list_node** nonnull %path.addr, %struct.rtx_def* %insn.addr.1) #7, !dbg !10587
  br label %if.end322, !dbg !10587

if.end322:                                        ; preds = %cond.end317, %if.then321
  %91 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !10588
  call void @llvm.dbg.value(metadata %struct._list_node* %91, metadata !10376, metadata !DIExpression()), !dbg !10452
  %92 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !10589
  call void @llvm.dbg.value(metadata %struct._list_node* %92, metadata !10377, metadata !DIExpression()), !dbg !10452
  %call323 = call fastcc i32 @code_motion_process_successors(%struct.rtx_def* %insn.addr.1, %struct._list_node* %91, %struct._list_node* %92, i8* %static_params) #7, !dbg !10590
  call void @llvm.dbg.value(metadata i32 %call323, metadata !10449, metadata !DIExpression()), !dbg !10591
  br i1 %cmp319, label %if.end327, label %if.then326, !dbg !10592

if.then326:                                       ; preds = %if.end322
  call void @llvm.dbg.value(metadata %struct._list_node** %path.addr, metadata !10377, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call fastcc void @_list_remove(%struct._list_node** nonnull %path.addr) #7, !dbg !10593
  br label %if.end327, !dbg !10593

if.end327:                                        ; preds = %if.end322, %if.then326
  %cmp328 = icmp eq i32 %call323, 1, !dbg !10595
  br i1 %cmp328, label %cleanup, label %if.then330, !dbg !10597

if.then330:                                       ; preds = %if.end327
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops.addr, metadata !10376, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call void @llvm.dbg.value(metadata %struct._list_node** %path.addr, metadata !10377, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call fastcc void @code_motion_path_driver_cleanup(%struct._list_node** nonnull %orig_ops.addr, %struct._list_node** nonnull %path.addr) #7, !dbg !10598
  br label %cleanup, !dbg !10600

cleanup:                                          ; preds = %if.end327, %if.then330
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then330 ], [ true, %if.end327 ]
  br i1 %cleanup.dest.slot.0, label %if.end332, label %cleanup362

if.end332:                                        ; preds = %for.end, %cleanup
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops.addr, metadata !10376, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call void @av_set_clear(%struct._list_node** nonnull %orig_ops.addr) #6, !dbg !10601
  %93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first_insn.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10602
  %rt_rtx336 = bitcast %union.rtunion_def* %93 to %struct.rtx_def**, !dbg !10602
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx336, align 8, !dbg !10602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %94, metadata !10384, metadata !DIExpression()), !dbg !10452
  br label %while.cond, !dbg !10603

while.cond:                                       ; preds = %if.end342, %if.end332
  %insn.addr.2 = phi %struct.rtx_def* [ %insn.addr.1, %if.end332 ], [ %98, %if.end342 ], !dbg !10452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.2, metadata !10375, metadata !DIExpression()), !dbg !10452
  %cmp337 = icmp eq %struct.rtx_def* %insn.addr.2, %94, !dbg !10604
  br i1 %cmp337, label %while.end, label %while.body, !dbg !10603

while.body:                                       ; preds = %while.cond
  %95 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10605
  %ascend = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %95, i64 0, i32 5, !dbg !10608
  %96 = load void (%struct.rtx_def*, i8*)*, void (%struct.rtx_def*, i8*)** %ascend, align 8, !dbg !10608
  %tobool339 = icmp eq void (%struct.rtx_def*, i8*)* %96, null, !dbg !10605
  br i1 %tobool339, label %if.end342, label %if.then340, !dbg !10609

if.then340:                                       ; preds = %while.body
  call void %96(%struct.rtx_def* %insn.addr.2, i8* %static_params) #6, !dbg !10610
  br label %if.end342, !dbg !10610

if.end342:                                        ; preds = %while.body, %if.then340
  %97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10611
  %rt_rtx346 = bitcast %union.rtunion_def* %97 to %struct.rtx_def**, !dbg !10611
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx346, align 8, !dbg !10611
  call void @llvm.dbg.value(metadata %struct.rtx_def* %98, metadata !10375, metadata !DIExpression()), !dbg !10452
  br label %while.cond, !dbg !10603, !llvm.loop !10612

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_insn.1, metadata !10375, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata %struct._list_node** %path.addr, metadata !10377, metadata !DIExpression(DW_OP_deref)), !dbg !10452
  call fastcc void @_list_remove(%struct._list_node** nonnull %path.addr) #7, !dbg !10614
  %removed_last_insn348 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %local_params_in, i64 0, i32 5, !dbg !10615
  %bf.load = load i8, i8* %removed_last_insn348, align 8, !dbg !10616
  %bf.value = and i8 %removed_last_insn.1, 1, !dbg !10616
  %bf.clear = and i8 %bf.load, -2, !dbg !10616
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !10616
  store i8 %bf.set, i8* %removed_last_insn348, align 8, !dbg !10616
  %99 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10617
  %at_first_insn = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %99, i64 0, i32 6, !dbg !10618
  %100 = load void (%struct.rtx_def*, %struct.cmpd_local_params*, i8*)*, void (%struct.rtx_def*, %struct.cmpd_local_params*, i8*)** %at_first_insn, align 8, !dbg !10618
  call void %100(%struct.rtx_def* %first_insn.1, %struct.cmpd_local_params* %local_params_in, i8* %static_params) #6, !dbg !10617
  %tobool349 = icmp eq i8 %removed_last_insn.1, 0, !dbg !10619
  br i1 %tobool349, label %if.end355, label %if.then350, !dbg !10621

if.then350:                                       ; preds = %while.end
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx336, align 8, !dbg !10622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %101, metadata !10375, metadata !DIExpression()), !dbg !10452
  br label %if.end355, !dbg !10623

if.end355:                                        ; preds = %while.end, %if.then350
  %insn.addr.3 = phi %struct.rtx_def* [ %101, %if.then350 ], [ %first_insn.1, %while.end ], !dbg !10452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.3, metadata !10375, metadata !DIExpression()), !dbg !10452
  %102 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !10624
  %arrayidx358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.3, i64 0, i32 1, i32 0, i32 1, !dbg !10625
  %rt_bb359 = bitcast %struct.object_block** %arrayidx358 to %struct.basic_block_def**, !dbg !10625
  %103 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb359, align 8, !dbg !10625
  %index360 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %103, i64 0, i32 9, !dbg !10626
  %104 = load i32, i32* %index360, align 8, !dbg !10626
  %call361 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %102, i32 %104) #6, !dbg !10627
  br label %cleanup362, !dbg !10628

cleanup362:                                       ; preds = %if.then184, %if.else206, %do.body191, %if.then102, %if.else123, %do.body109, %if.then58, %if.else85, %do.body65, %cleanup, %if.end355, %if.else294, %if.then164
  %retval.1 = phi i32 [ %call166, %if.then164 ], [ 1, %if.end355 ], [ %call323, %cleanup ], [ -1, %if.else294 ], [ 0, %do.body65 ], [ 0, %if.else85 ], [ 0, %if.then58 ], [ 0, %do.body109 ], [ 0, %if.else123 ], [ 0, %if.then102 ], [ 0, %do.body191 ], [ 0, %if.else206 ], [ 0, %if.then184 ], !dbg !10452
  ret i32 %retval.1, !dbg !10629
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @_list_iter_cond_def(%struct._list_node* %def_list, %struct._def** %def) unnamed_addr #0 !dbg !10630 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %def_list, metadata !10635, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata %struct._def** %def, metadata !10636, metadata !DIExpression()), !dbg !10637
  %tobool = icmp eq %struct._list_node* %def_list, null, !dbg !10638
  br i1 %tobool, label %return, label %if.then, !dbg !10640

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %def_list, i64 0, i32 1, !dbg !10641
  %0 = bitcast %struct._def** %def to %union.anon.0**, !dbg !10643
  store %union.anon.0* %u, %union.anon.0** %0, align 8, !dbg !10643
  br label %return, !dbg !10644

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %entry ], !dbg !10637
  ret i8 %retval.0, !dbg !10645
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_unavailable_hard_regs(%struct._def* %def, %struct.reg_rename* %reg_rename_p, %struct.bitmap_head_def* %used_regs) unnamed_addr #5 !dbg !10646 {
entry:
  %cur_reg = alloca i32, align 4
  %hrsi = alloca %struct.hard_reg_set_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._def* %def, metadata !10650, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, metadata !10651, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %used_regs, metadata !10652, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata i32 0, metadata !10654, metadata !DIExpression()), !dbg !10675
  %0 = bitcast i32* %cur_reg to i8*, !dbg !10676
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !10676
  %1 = bitcast %struct.hard_reg_set_iterator* %hrsi to i8*, !dbg !10677
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !10677
  %orig_insn = getelementptr inbounds %struct._def, %struct._def* %def, i64 0, i32 0, !dbg !10678
  %2 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !10678
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, !dbg !10678
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !10678
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !10678
  %5 = load i32*, i32** %4, align 8, !dbg !10678
  %bf.load = load i32, i32* %5, align 8, !dbg !10678
  %bf.clear = and i32 %bf.load, 65535, !dbg !10678
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !10678
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10678

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10678
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !10679
  br label %cond.end, !dbg !10678

cond.end:                                         ; preds = %entry, %cond.true
  %6 = phi %struct.rtx_def* [ %2, %entry ], [ %.pre, %cond.true ], !dbg !10679
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, !dbg !10679
  %7 = getelementptr inbounds %union.u, %union.u* %u6, i64 1, i32 0, i32 0, i64 0, !dbg !10679
  %rt_rtx9 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !10679
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !10679
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10679
  %rt_rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !10679
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !10679
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !10655, metadata !DIExpression()), !dbg !10675
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 0, !dbg !10680
  %bf.load14 = load i32, i32* %10, align 8, !dbg !10680
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !10680
  %cmp16 = icmp eq i32 %bf.clear15, 37, !dbg !10680
  br i1 %cmp16, label %if.end, label %cleanup, !dbg !10682

if.end:                                           ; preds = %cond.end
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %9) #7, !dbg !10683
  call void @llvm.dbg.value(metadata i32 %call, metadata !10657, metadata !DIExpression()), !dbg !10675
  %11 = load i32, i32* @reload_completed, align 4, !dbg !10684
  %tobool17 = icmp ne i32 %11, 0, !dbg !10684
  %cmp18 = icmp ult i32 %call, 53, !dbg !10686
  %or.cond = or i1 %tobool17, %cmp18, !dbg !10687
  br i1 %or.cond, label %if.end20, label %cleanup, !dbg !10687

if.end20:                                         ; preds = %if.end
  %tobool21 = icmp eq i32 %11, 0, !dbg !10688
  br i1 %tobool21, label %if.end25, label %if.then22, !dbg !10690

if.then22:                                        ; preds = %if.end20
  %12 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !10691
  %call24 = tail call fastcc i32 @get_reg_class(%struct.rtx_def* %12) #7, !dbg !10692
  call void @llvm.dbg.value(metadata i32 %call24, metadata !10654, metadata !DIExpression()), !dbg !10675
  br label %if.end25, !dbg !10693

if.end25:                                         ; preds = %if.end20, %if.then22
  %cl.0 = phi i32 [ %call24, %if.then22 ], [ 0, %if.end20 ], !dbg !10675
  call void @llvm.dbg.value(metadata i32 %cl.0, metadata !10654, metadata !DIExpression()), !dbg !10675
  %idxprom = zext i32 %call to i64, !dbg !10694
  %arrayidx26 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom, !dbg !10694
  %13 = load i8, i8* %arrayidx26, align 1, !dbg !10694
  %tobool27 = icmp eq i8 %13, 0, !dbg !10694
  br i1 %tobool27, label %lor.lhs.false, label %if.then43, !dbg !10696

lor.lhs.false:                                    ; preds = %if.end25
  %arrayidx29 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom, !dbg !10697
  %14 = load i8, i8* %arrayidx29, align 1, !dbg !10697
  %tobool31 = icmp eq i8 %14, 0, !dbg !10697
  br i1 %tobool31, label %lor.lhs.false32, label %if.then43, !dbg !10698

lor.lhs.false32:                                  ; preds = %lor.lhs.false
  %15 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 41), align 1, !dbg !10699
  %tobool34 = icmp ne i8 %15, 0, !dbg !10699
  %cmp36 = icmp eq i32 %call, 6, !dbg !10700
  %or.cond1 = and i1 %tobool34, %cmp36, !dbg !10701
  br i1 %or.cond1, label %if.then43, label %lor.lhs.false38, !dbg !10701

lor.lhs.false38:                                  ; preds = %lor.lhs.false32
  %16 = load i32, i32* @reload_completed, align 4, !dbg !10702
  %tobool39 = icmp ne i32 %16, 0, !dbg !10702
  %cmp41 = icmp eq i32 %cl.0, 0, !dbg !10703
  %or.cond2 = and i1 %tobool39, %cmp41, !dbg !10704
  br i1 %or.cond2, label %if.then43, label %if.end48, !dbg !10704

if.then43:                                        ; preds = %lor.lhs.false, %if.end25, %lor.lhs.false38, %lor.lhs.false32
  store i64 -1, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10705
  %crosses_call = getelementptr inbounds %struct._def, %struct._def* %def, i64 0, i32 1, !dbg !10707
  %17 = load i8, i8* %crosses_call, align 8, !dbg !10707
  %tobool44 = icmp eq i8 %17, 0, !dbg !10709
  br i1 %tobool44, label %if.then45, label %cleanup, !dbg !10710

if.then45:                                        ; preds = %if.then43
  %shl = shl i64 1, %idxprom, !dbg !10711
  %neg = xor i64 %shl, -1, !dbg !10711
  store i64 %neg, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10711
  br label %cleanup, !dbg !10711

if.end48:                                         ; preds = %lor.lhs.false38
  %tobool49 = icmp eq i8 %15, 0, !dbg !10712
  br i1 %tobool49, label %if.end67, label %if.then50, !dbg !10713

if.then50:                                        ; preds = %if.end48
  %18 = load i8, i8* getelementptr inbounds ([53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 20, i64 16), align 4, !dbg !10714
  %conv51 = zext i8 %18 to i32, !dbg !10714
  call void @llvm.dbg.value(metadata i32 %conv51, metadata !10667, metadata !DIExpression()), !dbg !10716
  br label %for.cond, !dbg !10717

for.cond:                                         ; preds = %for.body, %if.then50
  %i.0 = phi i32 [ %conv51, %if.then50 ], [ %dec, %for.body ], !dbg !10718
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10667, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10667, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10716
  %tobool52 = icmp eq i32 %i.0, 0, !dbg !10719
  br i1 %tobool52, label %for.end, label %for.body, !dbg !10719

for.body:                                         ; preds = %for.cond
  %dec = add nsw i32 %i.0, -1, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %dec, metadata !10667, metadata !DIExpression()), !dbg !10716
  %add = add nsw i32 %i.0, 19, !dbg !10722
  %sh_prom53 = zext i32 %add to i64, !dbg !10722
  %shl54 = shl i64 1, %sh_prom53, !dbg !10722
  %19 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10722
  %or = or i64 %19, %shl54, !dbg !10722
  store i64 %or, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10722
  br label %for.cond, !dbg !10723, !llvm.loop !10724

for.end:                                          ; preds = %for.cond
  %20 = load i8, i8* getelementptr inbounds ([53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 6, i64 16), align 2, !dbg !10726
  call void @llvm.dbg.value(metadata i8 %20, metadata !10667, metadata !DIExpression()), !dbg !10716
  %21 = zext i8 %20 to i64, !dbg !10728
  br label %for.cond57, !dbg !10728

for.cond57:                                       ; preds = %for.body60, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body60 ], [ %21, %for.end ], !dbg !10729
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10667, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10667, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10716
  %tobool59 = icmp eq i64 %indvars.iv, 0, !dbg !10730
  br i1 %tobool59, label %if.end67.loopexit, label %for.body60, !dbg !10730

for.body60:                                       ; preds = %for.cond57
  %add61 = add nsw i64 %indvars.iv, 5, !dbg !10731
  %sh_prom62 = and i64 %add61, 4294967295, !dbg !10731
  %shl63 = shl i64 1, %sh_prom62, !dbg !10731
  %22 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10731
  %or65 = or i64 %22, %shl63, !dbg !10731
  store i64 %or65, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10731
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !10733
  br label %for.cond57, !dbg !10734, !llvm.loop !10735

if.end67.loopexit:                                ; preds = %for.cond57
  br label %if.end67, !dbg !10737

if.end67:                                         ; preds = %if.end67.loopexit, %if.end48
  %call68 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %9) #7, !dbg !10737
  %23 = and i32 %call68, -8, !dbg !10737
  %cmp70 = icmp eq i32 %23, 8, !dbg !10737
  br i1 %cmp70, label %land.lhs.true72, label %if.end78, !dbg !10739

land.lhs.true72:                                  ; preds = %if.end67
  %call73 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %used_regs, i32 8) #6, !dbg !10740
  %tobool74 = icmp eq i32 %call73, 0, !dbg !10740
  br i1 %tobool74, label %if.end78, label %if.then75, !dbg !10741

if.then75:                                        ; preds = %land.lhs.true72
  %24 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 5), align 8, !dbg !10742
  %25 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10742
  %or77 = or i64 %25, %24, !dbg !10742
  store i64 %or77, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10742
  br label %if.end78, !dbg !10742

if.end78:                                         ; preds = %land.lhs.true72, %if.then75, %if.end67
  %crosses_call79 = getelementptr inbounds %struct._def, %struct._def* %def, i64 0, i32 1, !dbg !10743
  %26 = load i8, i8* %crosses_call79, align 8, !dbg !10743
  %tobool80 = icmp eq i8 %26, 0, !dbg !10745
  br i1 %tobool80, label %if.end84, label %if.then81, !dbg !10746

if.then81:                                        ; preds = %if.end78
  %27 = load i64, i64* @call_used_reg_set, align 8, !dbg !10747
  %28 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10747
  %or83 = or i64 %28, %27, !dbg !10747
  store i64 %or83, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10747
  br label %if.end84, !dbg !10747

if.end84:                                         ; preds = %if.end78, %if.then81
  %29 = load i32, i32* @reload_completed, align 4, !dbg !10748
  %tobool85 = icmp eq i32 %29, 0, !dbg !10748
  br i1 %tobool85, label %cleanup, label %if.end87, !dbg !10750

if.end87:                                         ; preds = %if.end84
  %idxprom88 = zext i32 %cl.0 to i64, !dbg !10751
  %arrayidx89 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom88, !dbg !10751
  %30 = load i64, i64* %arrayidx89, align 8, !dbg !10751
  store i64 %30, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 1), align 8, !dbg !10751
  %bf.load90 = load i32, i32* %10, align 8, !dbg !10752
  %bf.lshr = lshr i32 %bf.load90, 16, !dbg !10752
  %bf.clear91 = and i32 %bf.lshr, 255, !dbg !10752
  call void @llvm.dbg.value(metadata i32 %bf.clear91, metadata !10653, metadata !DIExpression()), !dbg !10675
  %idxprom92 = zext i32 %bf.clear91 to i64, !dbg !10753
  %arrayidx93 = getelementptr inbounds %struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 1, i64 %idxprom92, !dbg !10753
  %31 = load i8, i8* %arrayidx93, align 1, !dbg !10753
  %tobool94 = icmp eq i8 %31, 0, !dbg !10753
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !10755

if.then95:                                        ; preds = %if.end87
  tail call fastcc void @init_regs_for_mode(i32 %bf.clear91) #7, !dbg !10756
  %.pre3 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 1), align 8, !dbg !10757
  br label %if.end96, !dbg !10756

if.end96:                                         ; preds = %if.end87, %if.then95
  %32 = phi i64 [ %30, %if.end87 ], [ %.pre3, %if.then95 ], !dbg !10757
  %arrayidx98 = getelementptr inbounds %struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 0, i64 %idxprom92, !dbg !10757
  %33 = load i64, i64* %arrayidx98, align 8, !dbg !10757
  %and100 = and i64 %32, %33, !dbg !10757
  store i64 %and100, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 1), align 8, !dbg !10757
  %34 = load i8, i8* %crosses_call79, align 8, !dbg !10758
  %tobool103 = icmp eq i8 %34, 0, !dbg !10760
  br i1 %tobool103, label %if.end110, label %if.then104, !dbg !10761

if.then104:                                       ; preds = %if.end96
  %arrayidx106 = getelementptr inbounds %struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 3, i64 %idxprom92, !dbg !10762
  %35 = load i64, i64* %arrayidx106, align 8, !dbg !10762
  %neg107 = xor i64 %35, -1, !dbg !10762
  %and109 = and i64 %and100, %neg107, !dbg !10762
  store i64 %and109, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 1), align 8, !dbg !10762
  br label %if.end110, !dbg !10762

if.end110:                                        ; preds = %if.end96, %if.then104
  %36 = phi i64 [ %and100, %if.end96 ], [ %and109, %if.then104 ], !dbg !10763
  call void @llvm.dbg.value(metadata i32* %cur_reg, metadata !10656, metadata !DIExpression(DW_OP_deref)), !dbg !10675
  call void @llvm.dbg.value(metadata %struct.hard_reg_set_iterator* %hrsi, metadata !10658, metadata !DIExpression(DW_OP_deref)), !dbg !10675
  call fastcc void @hard_reg_set_iter_init(%struct.hard_reg_set_iterator* nonnull %hrsi, i64 %36, i32 0, i32* nonnull %cur_reg) #7, !dbg !10763
  br label %for.cond112, !dbg !10763

for.cond112:                                      ; preds = %for.inc150, %if.end110
  call void @llvm.dbg.value(metadata i32* %cur_reg, metadata !10656, metadata !DIExpression(DW_OP_deref)), !dbg !10675
  call void @llvm.dbg.value(metadata %struct.hard_reg_set_iterator* %hrsi, metadata !10658, metadata !DIExpression(DW_OP_deref)), !dbg !10675
  %call113 = call fastcc zeroext i8 @hard_reg_set_iter_set(%struct.hard_reg_set_iterator* nonnull %hrsi, i32* nonnull %cur_reg) #7, !dbg !10764
  %tobool114 = icmp eq i8 %call113, 0, !dbg !10763
  br i1 %tobool114, label %for.end151, label %for.body115, !dbg !10763

for.body115:                                      ; preds = %for.cond112
  %37 = load i32, i32* %cur_reg, align 4, !dbg !10765
  call void @llvm.dbg.value(metadata i32 %37, metadata !10656, metadata !DIExpression()), !dbg !10675
  %idxprom117 = zext i32 %37 to i64, !dbg !10766
  %arrayidx120 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom117, i64 %idxprom92, !dbg !10766
  %38 = load i8, i8* %arrayidx120, align 1, !dbg !10766
  %conv121 = zext i8 %38 to i32, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %conv121, metadata !10670, metadata !DIExpression()), !dbg !10767
  %cmp122 = icmp eq i8 %38, 0, !dbg !10768
  br i1 %cmp122, label %cond.true124, label %cond.end126, !dbg !10768

cond.true124:                                     ; preds = %for.body115
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1324, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10768
  br label %cond.end126, !dbg !10768

cond.end126:                                      ; preds = %for.body115, %cond.true124
  call void @llvm.dbg.value(metadata i32 %conv121, metadata !10674, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10767
  br label %for.cond129, !dbg !10769

for.cond129:                                      ; preds = %for.inc, %cond.end126
  %i116.0.in = phi i32 [ %conv121, %cond.end126 ], [ %i116.0, %for.inc ]
  %i116.0 = add nsw i32 %i116.0.in, -1, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %i116.0, metadata !10674, metadata !DIExpression()), !dbg !10767
  %cmp130 = icmp sgt i32 %i116.0.in, 0, !dbg !10772
  br i1 %cmp130, label %for.body132, label %for.end140, !dbg !10774

for.body132:                                      ; preds = %for.cond129
  %add133 = add i32 %call, %i116.0, !dbg !10775
  %39 = load i32, i32* %cur_reg, align 4, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %39, metadata !10656, metadata !DIExpression()), !dbg !10675
  %add134 = add i32 %39, %i116.0, !dbg !10778
  %call135 = call fastcc zeroext i8 @sel_hard_regno_rename_ok(i32 %add133, i32 %add134) #7, !dbg !10779
  %tobool136 = icmp eq i8 %call135, 0, !dbg !10779
  br i1 %tobool136, label %for.end140, label %for.inc, !dbg !10780

for.inc:                                          ; preds = %for.body132
  call void @llvm.dbg.value(metadata i32 %i116.0, metadata !10674, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10767
  br label %for.cond129, !dbg !10781, !llvm.loop !10782

for.end140:                                       ; preds = %for.body132, %for.cond129
  %cmp130.lcssa = phi i1 [ %cmp130, %for.body132 ], [ %cmp130, %for.cond129 ], !dbg !10772
  br i1 %cmp130.lcssa, label %if.then143, label %for.inc150, !dbg !10784

if.then143:                                       ; preds = %for.end140
  %40 = load i32, i32* %cur_reg, align 4, !dbg !10785
  call void @llvm.dbg.value(metadata i32 %40, metadata !10656, metadata !DIExpression()), !dbg !10675
  %sh_prom144 = zext i32 %40 to i64, !dbg !10785
  %shl145 = shl i64 1, %sh_prom144, !dbg !10785
  %neg146 = xor i64 %shl145, -1, !dbg !10785
  %41 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 1), align 8, !dbg !10785
  %and148 = and i64 %41, %neg146, !dbg !10785
  store i64 %and148, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 1), align 8, !dbg !10785
  br label %for.inc150, !dbg !10785

for.inc150:                                       ; preds = %for.end140, %if.then143
  call void @llvm.dbg.value(metadata i32* %cur_reg, metadata !10656, metadata !DIExpression(DW_OP_deref)), !dbg !10675
  call void @llvm.dbg.value(metadata %struct.hard_reg_set_iterator* %hrsi, metadata !10658, metadata !DIExpression(DW_OP_deref)), !dbg !10675
  call fastcc void @hard_reg_set_iter_next(%struct.hard_reg_set_iterator* nonnull %hrsi, i32* nonnull %cur_reg) #7, !dbg !10764
  br label %for.cond112, !dbg !10764, !llvm.loop !10787

for.end151:                                       ; preds = %for.cond112
  %42 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 0), align 8, !dbg !10789
  %neg153 = xor i64 %42, -1, !dbg !10789
  %43 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 1), align 8, !dbg !10789
  %and155 = and i64 %43, %neg153, !dbg !10789
  %shl157 = shl i64 1, %idxprom, !dbg !10790
  %or159 = or i64 %and155, %shl157, !dbg !10790
  store i64 %or159, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 1), align 8, !dbg !10790
  br label %cleanup, !dbg !10791

cleanup:                                          ; preds = %if.then43, %if.end84, %if.then45, %if.end, %cond.end, %for.end151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !10791
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !10791
  ret void, !dbg !10791
}

declare dso_local void @dump_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @av_set_intersect(%struct._list_node**, %struct._list_node*) local_unnamed_addr #2

declare dso_local %struct._list_node* @get_av_set(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @av_set_leave_one_nonspec(%struct._list_node**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @undo_transformations(%struct._list_node** %av_ptr, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !10792 {
entry:
  %av_iter = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  %new_set = alloca %struct._list_node*, align 8
  %_tmp_expr = alloca %struct._expr, align 8
  call void @llvm.dbg.value(metadata %struct._list_node** %av_ptr, metadata !10796, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10797, metadata !DIExpression()), !dbg !10828
  %0 = bitcast %struct._list_iterator* %av_iter to i8*, !dbg !10829
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !10829
  %1 = bitcast %struct._expr** %expr to i8*, !dbg !10830
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10830
  %2 = bitcast %struct._list_node** %new_set to i8*, !dbg !10831
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !10831
  call void @llvm.dbg.value(metadata %struct._list_node* null, metadata !10800, metadata !DIExpression()), !dbg !10828
  store %struct._list_node* null, %struct._list_node** %new_set, align 8, !dbg !10832
  call void @llvm.dbg.value(metadata %struct._list_iterator* %av_iter, metadata !10798, metadata !DIExpression(DW_OP_deref)), !dbg !10828
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %av_iter, %struct._list_node** %av_ptr, i8 zeroext 1) #7, !dbg !10833
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %av_iter, i64 0, i32 0, !dbg !10834
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10835
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10835
  br label %for.cond, !dbg !10833

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !10836
  %4 = load %struct._list_node*, %struct._list_node** %3, align 8, !dbg !10836
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !10799, metadata !DIExpression(DW_OP_deref)), !dbg !10828
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %4, %struct._expr** nonnull %expr) #7, !dbg !10836
  %tobool = icmp eq i8 %call, 0, !dbg !10833
  br i1 %tobool, label %for.end, label %for.body, !dbg !10833

for.body:                                         ; preds = %for.cond
  %5 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10837
  call void @llvm.dbg.value(metadata %struct._expr* %5, metadata !10799, metadata !DIExpression()), !dbg !10828
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %5, i64 0, i32 0, !dbg !10837
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10837
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %6, i64 0, i32 0, !dbg !10837
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10837
  %call1 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn, %struct.rtx_def* %7) #6, !dbg !10838
  %tobool2 = icmp eq i8 %call1, 0, !dbg !10838
  br i1 %tobool2, label %land.lhs.true, label %for.inc, !dbg !10839

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !10840
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %8, i64 0, i32 0, !dbg !10840
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !10840
  %base6 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i64 0, i32 0, !dbg !10840
  %10 = load i32, i32* %rt_int, align 8, !dbg !10840
  %call10 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base6, i32 %10) #7, !dbg !10840
  %call11 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call10) #7, !dbg !10840
  %vinsn13 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call11, i64 0, i32 0, i32 0, !dbg !10840
  %11 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn13, align 8, !dbg !10840
  %reg_sets = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %11, i64 0, i32 1, i32 3, !dbg !10840
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !10840
  %13 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10841
  call void @llvm.dbg.value(metadata %struct._expr* %13, metadata !10799, metadata !DIExpression()), !dbg !10828
  %vinsn14 = getelementptr inbounds %struct._expr, %struct._expr* %13, i64 0, i32 0, !dbg !10841
  %14 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn14, align 8, !dbg !10841
  %reg_uses = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %14, i64 0, i32 1, i32 5, !dbg !10841
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !10841
  %call16 = call zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def* %12, %struct.bitmap_head_def* %15) #6, !dbg !10842
  %tobool17 = icmp eq i8 %call16, 0, !dbg !10842
  br i1 %tobool17, label %for.inc, label %land.lhs.true18, !dbg !10843

land.lhs.true18:                                  ; preds = %land.lhs.true
  %call19 = call fastcc zeroext i8 @identical_copy_p(%struct.rtx_def* %insn) #7, !dbg !10844
  %tobool20 = icmp eq i8 %call19, 0, !dbg !10844
  br i1 %tobool20, label %if.then, label %for.inc, !dbg !10845

if.then:                                          ; preds = %land.lhs.true18
  %16 = load i32, i32* @sched_verbose, align 4, !dbg !10846
  %cmp = icmp sgt i32 %16, 5, !dbg !10847
  br i1 %cmp, label %do.body, label %if.end53, !dbg !10848

do.body:                                          ; preds = %if.then
  %17 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10849
  %tobool23 = icmp eq i8 %17, 0, !dbg !10849
  br i1 %tobool23, label %if.else, label %do.body25, !dbg !10850

do.body25:                                        ; preds = %do.body
  %18 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10851
  call void @llvm.dbg.value(metadata %struct._expr* %18, metadata !10799, metadata !DIExpression()), !dbg !10828
  %vinsn26 = getelementptr inbounds %struct._expr, %struct._expr* %18, i64 0, i32 0, !dbg !10851
  %19 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn26, align 8, !dbg !10851
  %insn_rtx27 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %19, i64 0, i32 0, !dbg !10851
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx27, align 8, !dbg !10851
  %arrayidx30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10851
  %rt_int31 = bitcast %union.rtunion_def* %arrayidx30 to i32*, !dbg !10851
  %21 = load i32, i32* %rt_int31, align 8, !dbg !10851
  %call32 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.68, i64 0, i64 0), i32 %21) #6, !dbg !10851
  %mul = shl nsw i32 %call32, 1, !dbg !10851
  %add = or i32 %mul, 1, !dbg !10851
  call void @llvm.dbg.value(metadata i32 %add, metadata !10801, metadata !DIExpression()), !dbg !10852
  %conv33 = sext i32 %add to i64, !dbg !10851
  %22 = alloca i8, i64 %conv33, align 16, !dbg !10851
  call void @llvm.dbg.value(metadata i8* %22, metadata !10810, metadata !DIExpression()), !dbg !10852
  %23 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10851
  call void @llvm.dbg.value(metadata %struct._expr* %23, metadata !10799, metadata !DIExpression()), !dbg !10828
  %vinsn36 = getelementptr inbounds %struct._expr, %struct._expr* %23, i64 0, i32 0, !dbg !10851
  %24 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn36, align 8, !dbg !10851
  %insn_rtx37 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %24, i64 0, i32 0, !dbg !10851
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx37, align 8, !dbg !10851
  %arrayidx40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10851
  %rt_int41 = bitcast %union.rtunion_def* %arrayidx40 to i32*, !dbg !10851
  %26 = load i32, i32* %rt_int41, align 8, !dbg !10851
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %22, i64 %conv33, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.68, i64 0, i64 0), i32 %26) #6, !dbg !10851
  call void @sel_prepare_string_for_dot_label(i8* nonnull %22) #6, !dbg !10851
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10851
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %22) #6, !dbg !10851
  br label %if.end53, !dbg !10851

if.else:                                          ; preds = %do.body
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10849
  %29 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10849
  call void @llvm.dbg.value(metadata %struct._expr* %29, metadata !10799, metadata !DIExpression()), !dbg !10828
  %vinsn44 = getelementptr inbounds %struct._expr, %struct._expr* %29, i64 0, i32 0, !dbg !10849
  %30 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn44, align 8, !dbg !10849
  %insn_rtx45 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %30, i64 0, i32 0, !dbg !10849
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx45, align 8, !dbg !10849
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10849
  %rt_int49 = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !10849
  %32 = load i32, i32* %rt_int49, align 8, !dbg !10849
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.68, i64 0, i64 0), i32 %32) #6, !dbg !10849
  br label %if.end53

if.end53:                                         ; preds = %do.body25, %if.else, %if.then
  call void @llvm.dbg.value(metadata %struct._list_iterator* %av_iter, metadata !10798, metadata !DIExpression(DW_OP_deref)), !dbg !10828
  call void @av_set_iter_remove(%struct._list_iterator* nonnull %av_iter) #6, !dbg !10853
  br label %for.inc, !dbg !10854

for.inc:                                          ; preds = %land.lhs.true18, %land.lhs.true, %for.body, %if.end53
  call void @llvm.dbg.value(metadata %struct._list_iterator* %av_iter, metadata !10798, metadata !DIExpression(DW_OP_deref)), !dbg !10828
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %av_iter) #7, !dbg !10836
  br label %for.cond, !dbg !10836, !llvm.loop !10855

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct._list_iterator* %av_iter, metadata !10798, metadata !DIExpression(DW_OP_deref)), !dbg !10828
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %av_iter, %struct._list_node** %av_ptr, i8 zeroext 0) #7, !dbg !10857
  %33 = bitcast %struct._expr* %_tmp_expr to i8*, !dbg !10858
  %vinsn93 = getelementptr inbounds %struct._expr, %struct._expr* %_tmp_expr, i64 0, i32 0, !dbg !10859
  br label %for.cond55, !dbg !10857

for.cond55:                                       ; preds = %for.inc104, %for.end
  %34 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !10861
  %35 = load %struct._list_node*, %struct._list_node** %34, align 8, !dbg !10861
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !10799, metadata !DIExpression(DW_OP_deref)), !dbg !10828
  %call57 = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %35, %struct._expr** nonnull %expr) #7, !dbg !10861
  %tobool58 = icmp eq i8 %call57, 0, !dbg !10857
  br i1 %tobool58, label %for.end105, label %for.body59, !dbg !10857

for.body59:                                       ; preds = %for.cond55
  %36 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10862
  call void @llvm.dbg.value(metadata %struct._expr* %36, metadata !10799, metadata !DIExpression()), !dbg !10828
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %36, i64 0, i32 10, !dbg !10862
  %37 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %history_of_changes, align 8, !dbg !10862
  call void @llvm.dbg.value(metadata %struct._expr* %36, metadata !10799, metadata !DIExpression()), !dbg !10828
  %vinsn60 = getelementptr inbounds %struct._expr, %struct._expr* %36, i64 0, i32 0, !dbg !10863
  %38 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn60, align 8, !dbg !10863
  %call61 = call i32 @find_in_history_vect(%struct.VEC_expr_history_def_heap* %37, %struct.rtx_def* %insn, %struct.vinsn_def* %38, i8 zeroext 1) #6, !dbg !10864
  call void @llvm.dbg.value(metadata i32 %call61, metadata !10811, metadata !DIExpression()), !dbg !10865
  %cmp62 = icmp sgt i32 %call61, -1, !dbg !10866
  br i1 %cmp62, label %if.then64, label %for.inc104, !dbg !10867

if.then64:                                        ; preds = %for.body59
  %39 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10868
  call void @llvm.dbg.value(metadata %struct._expr* %39, metadata !10799, metadata !DIExpression()), !dbg !10828
  %history_of_changes65 = getelementptr inbounds %struct._expr, %struct._expr* %39, i64 0, i32 10, !dbg !10868
  %40 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %history_of_changes65, align 8, !dbg !10868
  %tobool66 = icmp eq %struct.VEC_expr_history_def_heap* %40, null, !dbg !10868
  br i1 %tobool66, label %cond.end71, label %cond.true67, !dbg !10868

cond.true67:                                      ; preds = %if.then64
  call void @llvm.dbg.value(metadata %struct._expr* %39, metadata !10799, metadata !DIExpression()), !dbg !10828
  %base69 = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %40, i64 0, i32 0, !dbg !10868
  br label %cond.end71, !dbg !10868

cond.end71:                                       ; preds = %if.then64, %cond.true67
  %cond72 = phi %struct.VEC_expr_history_def_base* [ %base69, %cond.true67 ], [ null, %if.then64 ], !dbg !10868
  %call73 = call fastcc %struct.expr_history_def_1* @VEC_expr_history_def_base_index(%struct.VEC_expr_history_def_base* %cond72, i32 %call61) #7, !dbg !10868
  call void @llvm.dbg.value(metadata %struct.expr_history_def_1* %call73, metadata !10815, metadata !DIExpression()), !dbg !10869
  %type = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %call73, i64 0, i32 4, !dbg !10870
  %41 = load i32, i32* %type, align 4, !dbg !10870
  switch i32 %41, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb76
  ], !dbg !10871

sw.bb:                                            ; preds = %cond.end71
  %spec_ds = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %call73, i64 0, i32 3, !dbg !10872
  %42 = load i32, i32* %spec_ds, align 8, !dbg !10872
  call void @llvm.dbg.value(metadata i32 %42, metadata !10819, metadata !DIExpression()), !dbg !10873
  %43 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10874
  call void @llvm.dbg.value(metadata %struct._expr* %43, metadata !10799, metadata !DIExpression()), !dbg !10828
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %43, i64 0, i32 7, !dbg !10874
  %44 = load i32, i32* %spec_done_ds, align 8, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %44, metadata !10822, metadata !DIExpression()), !dbg !10873
  %and = and i32 %42, 16777215, !dbg !10875
  call void @llvm.dbg.value(metadata i32 %and, metadata !10819, metadata !DIExpression()), !dbg !10873
  %and74 = and i32 %44, 16777215, !dbg !10876
  call void @llvm.dbg.value(metadata i32 %and74, metadata !10822, metadata !DIExpression()), !dbg !10873
  %neg = xor i32 %and, -1, !dbg !10877
  %and75 = and i32 %and74, %neg, !dbg !10878
  call void @llvm.dbg.value(metadata i32 %and75, metadata !10822, metadata !DIExpression()), !dbg !10873
  call void @llvm.dbg.value(metadata %struct._expr* %43, metadata !10799, metadata !DIExpression()), !dbg !10828
  %spec_to_check_ds = getelementptr inbounds %struct._expr, %struct._expr* %43, i64 0, i32 8, !dbg !10879
  %45 = load i32, i32* %spec_to_check_ds, align 4, !dbg !10880
  %or = or i32 %45, %and75, !dbg !10880
  store i32 %or, i32* %spec_to_check_ds, align 4, !dbg !10880
  br label %for.inc104

sw.bb76:                                          ; preds = %cond.end71
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %33) #8, !dbg !10881
  call void @llvm.dbg.value(metadata %struct._expr* %_tmp_expr, metadata !10825, metadata !DIExpression()), !dbg !10858
  call void @llvm.dbg.value(metadata i8 1, metadata !10827, metadata !DIExpression()), !dbg !10858
  %old_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %call73, i64 0, i32 1, !dbg !10882
  %46 = load %struct.vinsn_def*, %struct.vinsn_def** %old_expr_vinsn, align 8, !dbg !10882
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %46, metadata !10826, metadata !DIExpression()), !dbg !10858
  %type79 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %46, i64 0, i32 1, i32 0, !dbg !10883
  %47 = load i32, i32* %type79, align 8, !dbg !10883
  %cmp80 = icmp ne i32 %47, 23, !dbg !10883
  %48 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10883
  call void @llvm.dbg.value(metadata %struct._expr* %48, metadata !10799, metadata !DIExpression()), !dbg !10828
  %vinsn82 = getelementptr inbounds %struct._expr, %struct._expr* %48, i64 0, i32 0, !dbg !10883
  %49 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn82, align 8, !dbg !10883
  %type84 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %49, i64 0, i32 1, i32 0, !dbg !10883
  %50 = load i32, i32* %type84, align 8, !dbg !10883
  %cmp85 = icmp eq i32 %50, 23, !dbg !10883
  %cmp87 = xor i1 %cmp85, %cmp80, !dbg !10883
  br i1 %cmp87, label %cond.end91, label %cond.true89, !dbg !10883

cond.true89:                                      ; preds = %sw.bb76
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1986, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10883
  %.pre = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10884
  br label %cond.end91, !dbg !10883

cond.end91:                                       ; preds = %sw.bb76, %cond.true89
  %51 = phi %struct._expr* [ %48, %sw.bb76 ], [ %.pre, %cond.true89 ], !dbg !10884
  call void @llvm.dbg.value(metadata %struct._expr* %51, metadata !10799, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata %struct._expr* %_tmp_expr, metadata !10823, metadata !DIExpression(DW_OP_deref)), !dbg !10858
  call void @copy_expr(%struct._expr* nonnull %_tmp_expr, %struct._expr* %51) #6, !dbg !10885
  %new_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %call73, i64 0, i32 2, !dbg !10886
  %52 = load %struct.vinsn_def*, %struct.vinsn_def** %new_expr_vinsn, align 8, !dbg !10886
  %53 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn93, align 8, !dbg !10887
  %call94 = call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %52, %struct.vinsn_def* %53) #6, !dbg !10888
  %tobool95 = icmp eq i8 %call94, 0, !dbg !10888
  br i1 %tobool95, label %if.else97, label %if.then96, !dbg !10889

if.then96:                                        ; preds = %cond.end91
  call void @llvm.dbg.value(metadata %struct._expr* %_tmp_expr, metadata !10823, metadata !DIExpression(DW_OP_deref)), !dbg !10858
  call void @change_vinsn_in_expr(%struct._expr* nonnull %_tmp_expr, %struct.vinsn_def* %46) #6, !dbg !10890
  br label %if.end99, !dbg !10890

if.else97:                                        ; preds = %cond.end91
  call void @llvm.dbg.value(metadata %struct._expr* %_tmp_expr, metadata !10823, metadata !DIExpression(DW_OP_deref)), !dbg !10858
  %call98 = call fastcc zeroext i8 @substitute_reg_in_expr(%struct._expr* nonnull %_tmp_expr, %struct.rtx_def* %insn, i8 zeroext 1) #7, !dbg !10891
  call void @llvm.dbg.value(metadata i8 %call98, metadata !10827, metadata !DIExpression()), !dbg !10858
  br label %if.end99

if.end99:                                         ; preds = %if.else97, %if.then96
  %add77.0 = phi i8 [ 1, %if.then96 ], [ %call98, %if.else97 ], !dbg !10858
  call void @llvm.dbg.value(metadata i8 %add77.0, metadata !10827, metadata !DIExpression()), !dbg !10858
  %tobool100 = icmp eq i8 %add77.0, 0, !dbg !10892
  br i1 %tobool100, label %if.end102, label %if.then101, !dbg !10894

if.then101:                                       ; preds = %if.end99
  call void @llvm.dbg.value(metadata %struct._list_node** %new_set, metadata !10800, metadata !DIExpression(DW_OP_deref)), !dbg !10828
  call void @llvm.dbg.value(metadata %struct._expr* %_tmp_expr, metadata !10823, metadata !DIExpression(DW_OP_deref)), !dbg !10858
  call void @av_set_add(%struct._list_node** nonnull %new_set, %struct._expr* nonnull %_tmp_expr) #6, !dbg !10895
  br label %if.end102, !dbg !10895

if.end102:                                        ; preds = %if.end99, %if.then101
  call void @llvm.dbg.value(metadata %struct._expr* %_tmp_expr, metadata !10823, metadata !DIExpression(DW_OP_deref)), !dbg !10858
  call void @clear_expr(%struct._expr* nonnull %_tmp_expr) #6, !dbg !10896
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %33) #8, !dbg !10897
  br label %for.inc104

sw.default:                                       ; preds = %cond.end71
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2003, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10898
  br label %for.inc104, !dbg !10899

for.inc104:                                       ; preds = %for.body59, %sw.default, %if.end102, %sw.bb
  call void @llvm.dbg.value(metadata %struct._list_iterator* %av_iter, metadata !10798, metadata !DIExpression(DW_OP_deref)), !dbg !10828
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %av_iter) #7, !dbg !10861
  br label %for.cond55, !dbg !10861, !llvm.loop !10900

for.end105:                                       ; preds = %for.cond55
  call void @llvm.dbg.value(metadata %struct._list_node** %new_set, metadata !10800, metadata !DIExpression(DW_OP_deref)), !dbg !10828
  call void @av_set_union_and_clear(%struct._list_node** %av_ptr, %struct._list_node** nonnull %new_set, %struct.rtx_def* null) #6, !dbg !10902
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !10903
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10903
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !10903
  ret void, !dbg !10903
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @code_motion_path_driver_cleanup(%struct._list_node** %orig_ops_p, %struct._list_node** %path_p) unnamed_addr #0 !dbg !10904 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops_p, metadata !10908, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata %struct._list_node** %path_p, metadata !10909, metadata !DIExpression()), !dbg !10910
  tail call fastcc void @_list_remove(%struct._list_node** %path_p) #7, !dbg !10911
  tail call void @av_set_clear(%struct._list_node** %orig_ops_p) #6, !dbg !10912
  ret void, !dbg !10913
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @code_motion_process_successors(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, %struct._list_node* %path, i8* %static_params) unnamed_addr #5 !dbg !10914 {
entry:
  %succ_i = alloca %struct.succ_iterator, align 8
  %succ = alloca %struct.rtx_def*, align 8
  %lparams = alloca %struct.cmpd_local_params, align 8
  %_x = alloca %struct._expr, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10918, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata %struct._list_node* %orig_ops, metadata !10919, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata %struct._list_node* %path, metadata !10920, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata i8* %static_params, metadata !10921, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata i32 0, metadata !10922, metadata !DIExpression()), !dbg !10935
  %0 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %succ_i, i64 0, i32 0, !dbg !10936
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #8, !dbg !10936
  %1 = bitcast %struct.rtx_def** %succ to i8*, !dbg !10937
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10937
  %2 = bitcast %struct.cmpd_local_params* %lparams to i8*, !dbg !10938
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2) #8, !dbg !10938
  %3 = bitcast %struct._expr* %_x to i8*, !dbg !10939
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #8, !dbg !10939
  %c_expr_local = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i64 0, i32 3, !dbg !10940
  store %struct._expr* %_x, %struct._expr** %c_expr_local, align 8, !dbg !10941
  %c_expr_merged = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i64 0, i32 2, !dbg !10942
  store %struct._expr* null, %struct._expr** %c_expr_merged, align 8, !dbg !10943
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !10935
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !10935
  %4 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !10944
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %succ_i, i64 0, i32 1, !dbg !10945
  %5 = bitcast %struct.edge_def** %e1 to i64*, !dbg !10945
  %6 = bitcast %struct.cmpd_local_params* %lparams to i64*, !dbg !10945
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %succ_i, i64 0, i32 2, !dbg !10945
  %7 = bitcast %struct.edge_def** %e2 to i64*, !dbg !10945
  %e25 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i64 0, i32 1, !dbg !10945
  %8 = bitcast %struct.edge_def** %e25 to i64*, !dbg !10945
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %succ_i, i64 0, i32 6, !dbg !10946
  br label %rescan, !dbg !10948

rescan.loopexit:                                  ; preds = %cleanup
  %res.3.lcssa = phi i32 [ %res.3, %cleanup ], !dbg !10949
  call void @llvm.dbg.value(metadata i32 %res.3.lcssa, metadata !10922, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata i32 %res.3.lcssa, metadata !10922, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata i32 %res.3.lcssa, metadata !10922, metadata !DIExpression()), !dbg !10935
  br label %rescan, !dbg !10951

rescan:                                           ; preds = %rescan.loopexit, %entry
  %res.0 = phi i32 [ 0, %entry ], [ %res.3.lcssa, %rescan.loopexit ], !dbg !10935
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !10922, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.label(metadata !10934), !dbg !10952
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !10953
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !10925, metadata !DIExpression()), !dbg !10935
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 9, !dbg !10954
  %10 = load i32, i32* %index, align 8, !dbg !10954
  call void @llvm.dbg.value(metadata i32 %10, metadata !10926, metadata !DIExpression()), !dbg !10935
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 1, !dbg !10951
  %11 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !10951
  %tobool = icmp eq %struct.VEC_edge_gc* %11, null, !dbg !10951
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10951

cond.true:                                        ; preds = %rescan
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %11, i64 0, i32 0, !dbg !10951
  br label %cond.end, !dbg !10951

cond.end:                                         ; preds = %rescan, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %rescan ], !dbg !10951
  %call = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !10951
  call void @llvm.dbg.value(metadata i32 %call, metadata !10927, metadata !DIExpression()), !dbg !10935
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #8, !dbg !10955
  %12 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10955
  %succ_flags = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %12, i64 0, i32 7, !dbg !10955
  %13 = load i32, i32* %succ_flags, align 8, !dbg !10955
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !10924, metadata !DIExpression(DW_OP_deref)), !dbg !10935
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i32 %13) #7, !dbg !10955
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 64, i1 false), !dbg !10955
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #8, !dbg !10955
  br label %for.cond, !dbg !10955

for.cond:                                         ; preds = %for.inc, %cond.end
  %res.1 = phi i32 [ %res.0, %cond.end ], [ %res.3, %for.inc ], !dbg !10935
  call void @llvm.dbg.value(metadata i32 %res.1, metadata !10922, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %succ_i, metadata !10923, metadata !DIExpression(DW_OP_deref)), !dbg !10935
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !10924, metadata !DIExpression(DW_OP_deref)), !dbg !10935
  %call2 = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %succ_i, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %insn, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #7, !dbg !10956
  %tobool3 = icmp eq i8 %call2, 0, !dbg !10955
  br i1 %tobool3, label %for.end, label %for.body, !dbg !10955

for.body:                                         ; preds = %for.cond
  %14 = load i64, i64* %5, align 8, !dbg !10957
  store i64 %14, i64* %6, align 8, !dbg !10958
  %15 = load i64, i64* %7, align 8, !dbg !10959
  store i64 %15, i64* %8, align 8, !dbg !10960
  %16 = load i16, i16* %current_flags, align 2, !dbg !10961
  %cmp = icmp eq i16 %16, 1, !dbg !10962
  br i1 %cmp, label %if.then, label %if.end, !dbg !10963

if.then:                                          ; preds = %for.body
  %17 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !10964
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !10924, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !10928, metadata !DIExpression(DW_OP_deref)), !dbg !10935
  %call7 = call fastcc i32 @code_motion_path_driver(%struct.rtx_def* %17, %struct._list_node* %orig_ops, %struct._list_node* %path, %struct.cmpd_local_params* nonnull %lparams, i8* %static_params) #7, !dbg !10965
  call void @llvm.dbg.value(metadata i32 %call7, metadata !10930, metadata !DIExpression()), !dbg !10945
  br label %if.end, !dbg !10966

if.end:                                           ; preds = %for.body, %if.then
  %b.0 = phi i32 [ %call7, %if.then ], [ 0, %for.body ], !dbg !10946
  call void @llvm.dbg.value(metadata i32 %b.0, metadata !10930, metadata !DIExpression()), !dbg !10945
  %18 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10967
  %merge_succs = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %18, i64 0, i32 3, !dbg !10968
  %19 = load void (%struct.rtx_def*, %struct.rtx_def*, i32, %struct.cmpd_local_params*, i8*)*, void (%struct.rtx_def*, %struct.rtx_def*, i32, %struct.cmpd_local_params*, i8*)** %merge_succs, align 8, !dbg !10968
  %20 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !10969
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !10924, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !10928, metadata !DIExpression(DW_OP_deref)), !dbg !10935
  call void %19(%struct.rtx_def* %insn, %struct.rtx_def* %20, i32 %b.0, %struct.cmpd_local_params* nonnull %lparams, i8* %static_params) #6, !dbg !10967
  switch i32 %b.0, label %if.end17 [
    i32 1, label %if.end18
    i32 -1, label %land.lhs.true
  ], !dbg !10970

land.lhs.true:                                    ; preds = %if.end
  %cmp14 = icmp eq i32 %res.1, 1, !dbg !10971
  %spec.select = select i1 %cmp14, i32 1, i32 -1, !dbg !10973
  br label %if.end17, !dbg !10973

if.end17:                                         ; preds = %land.lhs.true, %if.end
  %res.2 = phi i32 [ %res.1, %if.end ], [ %spec.select, %land.lhs.true ], !dbg !10935
  call void @llvm.dbg.value(metadata i32 %res.2, metadata !10922, metadata !DIExpression()), !dbg !10935
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.end17
  %res.3 = phi i32 [ %res.2, %if.end17 ], [ 1, %if.end ], !dbg !10949
  call void @llvm.dbg.value(metadata i32 %res.3, metadata !10922, metadata !DIExpression()), !dbg !10935
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !10974
  %index23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i64 0, i32 9, !dbg !10976
  %22 = load i32, i32* %index23, align 8, !dbg !10976
  %cmp24 = icmp eq i32 %22, %10, !dbg !10977
  br i1 %cmp24, label %lor.lhs.false, label %cleanup, !dbg !10978

lor.lhs.false:                                    ; preds = %if.end18
  %23 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !10979
  %tobool27 = icmp eq %struct.VEC_edge_gc* %23, null, !dbg !10979
  br i1 %tobool27, label %cond.end32, label %cond.true28, !dbg !10979

cond.true28:                                      ; preds = %lor.lhs.false
  %base30 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %23, i64 0, i32 0, !dbg !10979
  br label %cond.end32, !dbg !10979

cond.end32:                                       ; preds = %lor.lhs.false, %cond.true28
  %cond33 = phi %struct.VEC_edge_base* [ %base30, %cond.true28 ], [ null, %lor.lhs.false ], !dbg !10979
  %call34 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond33) #7, !dbg !10979
  %cmp35 = icmp eq i32 %call34, %call, !dbg !10980
  %spec.select1 = select i1 %cmp35, i32 0, i32 2, !dbg !10981
  br label %cleanup, !dbg !10981

cleanup:                                          ; preds = %if.end18, %cond.end32
  %cleanup.dest.slot.0 = phi i32 [ 2, %if.end18 ], [ %spec.select1, %cond.end32 ]
  %switch = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %switch, label %for.inc, label %rescan.loopexit

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %succ_i, metadata !10923, metadata !DIExpression(DW_OP_deref)), !dbg !10935
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %succ_i) #7, !dbg !10956
  br label %for.cond, !dbg !10956, !llvm.loop !10982

for.end:                                          ; preds = %for.cond
  %res.1.lcssa = phi i32 [ %res.1, %for.cond ], !dbg !10935
  call void @llvm.dbg.value(metadata i32 %res.1.lcssa, metadata !10922, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata i32 %res.1.lcssa, metadata !10922, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata i32 %res.1.lcssa, metadata !10922, metadata !DIExpression()), !dbg !10935
  %cmp39 = icmp eq i32 %res.1.lcssa, -1, !dbg !10984
  br i1 %cmp39, label %if.end45, label %land.lhs.true41, !dbg !10986

land.lhs.true41:                                  ; preds = %for.end
  %24 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !10987
  %after_merge_succs = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %24, i64 0, i32 4, !dbg !10988
  %25 = load void (%struct.cmpd_local_params*, i8*)*, void (%struct.cmpd_local_params*, i8*)** %after_merge_succs, align 8, !dbg !10988
  %tobool42 = icmp eq void (%struct.cmpd_local_params*, i8*)* %25, null, !dbg !10987
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !10989

if.then43:                                        ; preds = %land.lhs.true41
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !10928, metadata !DIExpression(DW_OP_deref)), !dbg !10935
  call void %25(%struct.cmpd_local_params* nonnull %lparams, i8* %static_params) #6, !dbg !10990
  br label %if.end45, !dbg !10990

if.end45:                                         ; preds = %land.lhs.true41, %for.end, %if.then43
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #8, !dbg !10991
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2) #8, !dbg !10991
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !10991
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #8, !dbg !10991
  ret i32 %res.1.lcssa, !dbg !10992
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @identical_copy_p(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !10993 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !10995, metadata !DIExpression()), !dbg !10999
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !11000
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !11000
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !11000
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11000
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !10998, metadata !DIExpression()), !dbg !10999
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !11001
  %bf.load = load i32, i32* %2, align 8, !dbg !11001
  %bf.clear = and i32 %bf.load, 65535, !dbg !11001
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !11003
  br i1 %cmp, label %if.end, label %cleanup, !dbg !11004

if.end:                                           ; preds = %entry
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11005
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !11005
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !11005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !10996, metadata !DIExpression()), !dbg !10999
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !11006
  %bf.load5 = load i32, i32* %4, align 8, !dbg !11006
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !11006
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !11006
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !11008

if.end9:                                          ; preds = %if.end
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11009
  %rt_rtx13 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !11009
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !11009
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !10997, metadata !DIExpression()), !dbg !10999
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !11010
  %bf.load14 = load i32, i32* %7, align 8, !dbg !11010
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !11010
  %cmp16 = icmp eq i32 %bf.clear15, 37, !dbg !11010
  br i1 %cmp16, label %if.end18, label %cleanup, !dbg !11012

if.end18:                                         ; preds = %if.end9
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !11013
  %call19 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %6) #7, !dbg !11014
  %cmp20 = icmp eq i32 %call, %call19, !dbg !11015
  %conv21 = zext i1 %cmp20 to i8, !dbg !11013
  br label %cleanup, !dbg !11016

cleanup:                                          ; preds = %entry, %if.end9, %if.end, %if.end18
  %retval.0 = phi i8 [ %conv21, %if.end18 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end9 ], !dbg !10999
  ret i8 %retval.0, !dbg !11017
}

declare dso_local i32 @find_in_history_vect(%struct.VEC_expr_history_def_heap*, %struct.rtx_def*, %struct.vinsn_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.expr_history_def_1* @VEC_expr_history_def_base_index(%struct.VEC_expr_history_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !11018 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_history_def_base* %vec_, metadata !11023, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !11024, metadata !DIExpression()), !dbg !11025
  br label %land.end, !dbg !11026

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !11026
  %arrayidx = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11026
  ret %struct.expr_history_def_1* %arrayidx, !dbg !11026
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_reg_class(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !11027 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11031, metadata !DIExpression()), !dbg !11055
  tail call void @extract_insn(%struct.rtx_def* %insn) #6, !dbg !11056
  %call = tail call i32 @constrain_operands(i32 1) #6, !dbg !11057
  %tobool = icmp eq i32 %call, 0, !dbg !11057
  br i1 %tobool, label %if.then, label %if.end, !dbg !11059

if.then:                                          ; preds = %entry
  tail call void @_fatal_insn_not_found(%struct.rtx_def* %insn, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1033, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11060
  br label %if.end, !dbg !11060

if.end:                                           ; preds = %entry, %if.then
  tail call void @preprocess_constraints() #6, !dbg !11061
  %0 = load i32, i32* @which_alternative, align 4, !dbg !11062
  call void @llvm.dbg.value(metadata i32 %0, metadata !11032, metadata !DIExpression()), !dbg !11055
  %1 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !11063
  call void @llvm.dbg.value(metadata i32 0, metadata !11033, metadata !DIExpression()), !dbg !11055
  %idxprom2 = sext i32 %0 to i64, !dbg !11064
  %2 = sext i8 %1 to i64, !dbg !11065
  br label %for.cond, !dbg !11065

for.cond:                                         ; preds = %for.inc, %if.end
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc ], [ 0, %if.end ], !dbg !11066
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !11033, metadata !DIExpression()), !dbg !11055
  %cmp = icmp slt i64 %indvars.iv9, %2, !dbg !11067
  br i1 %cmp, label %for.body, label %for.end, !dbg !11068

for.body:                                         ; preds = %for.cond
  %matches4 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv9, i64 %idxprom2, i32 3, !dbg !11069
  %3 = load i32, i32* %matches4, align 16, !dbg !11069
  call void @llvm.dbg.value(metadata i32 %3, metadata !11035, metadata !DIExpression()), !dbg !11064
  %cmp5 = icmp sgt i32 %3, -1, !dbg !11070
  br i1 %cmp5, label %if.then7, label %for.inc, !dbg !11072

if.then7:                                         ; preds = %for.body
  %idxprom8 = sext i32 %3 to i64, !dbg !11073
  %cl = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom8, i64 %idxprom2, i32 1, !dbg !11074
  %4 = load i32, i32* %cl, align 8, !dbg !11074
  %cl16 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv9, i64 %idxprom2, i32 1, !dbg !11075
  store i32 %4, i32* %cl16, align 8, !dbg !11076
  br label %for.inc, !dbg !11077

for.inc:                                          ; preds = %for.body, %if.then7
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !11078
  call void @llvm.dbg.value(metadata i32 undef, metadata !11033, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11055
  br label %for.cond, !dbg !11079, !llvm.loop !11080

for.end:                                          ; preds = %for.cond
  %conv = sext i8 %1 to i64, !dbg !11082
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !11083
  %5 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !11083
  %rt_rtx = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !11083
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11083
  %call19 = tail call i32 @asm_noperands(%struct.rtx_def* %6) #6, !dbg !11084
  %cmp20 = icmp sgt i32 %call19, 0, !dbg !11085
  br i1 %cmp20, label %for.cond23.preheader, label %if.else, !dbg !11086

for.cond23.preheader:                             ; preds = %for.end
  %7 = sext i8 %1 to i64, !dbg !11087
  br label %for.cond23, !dbg !11087

for.cond23:                                       ; preds = %for.cond23.preheader, %for.inc53
  %indvars.iv = phi i64 [ 0, %for.cond23.preheader ], [ %indvars.iv.next, %for.inc53 ], !dbg !11088
  %retval.0 = phi i32 [ undef, %for.cond23.preheader ], [ %retval.2, %for.inc53 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11033, metadata !DIExpression()), !dbg !11055
  %cmp24 = icmp slt i64 %indvars.iv, %7, !dbg !11089
  br i1 %cmp24, label %for.body26, label %cleanup95.loopexit, !dbg !11087

for.body26:                                       ; preds = %for.cond23
  %arrayidx28 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 4, i64 %indvars.iv, !dbg !11090
  %8 = load i32, i32* %arrayidx28, align 4, !dbg !11090
  %cmp29 = icmp eq i32 %8, 1, !dbg !11091
  br i1 %cmp29, label %if.then31, label %for.inc53, !dbg !11092

if.then31:                                        ; preds = %for.body26
  %arrayidx33 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 1, i64 %indvars.iv, !dbg !11093
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx33, align 8, !dbg !11093
  call void @llvm.dbg.value(metadata %struct.rtx_def** %9, metadata !11039, metadata !DIExpression()), !dbg !11094
  %10 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8, !dbg !11095
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !11046, metadata !DIExpression()), !dbg !11094
  %cl39 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv, i64 %idxprom2, i32 1, !dbg !11096
  %11 = load i32, i32* %cl39, align 8, !dbg !11096
  call void @llvm.dbg.value(metadata i32 %11, metadata !11047, metadata !DIExpression()), !dbg !11094
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !11097
  %bf.load = load i32, i32* %12, align 8, !dbg !11097
  %bf.clear = and i32 %bf.load, 65535, !dbg !11097
  %cmp40 = icmp eq i32 %bf.clear, 37, !dbg !11097
  br i1 %cmp40, label %land.lhs.true, label %if.end49, !dbg !11099

land.lhs.true:                                    ; preds = %if.then31
  %call42 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %10) #7, !dbg !11100
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11101
  %rt_uint = bitcast %union.rtunion_def* %13 to i32*, !dbg !11101
  %14 = load i32, i32* %rt_uint, align 8, !dbg !11101
  %cmp46 = icmp eq i32 %call42, %14, !dbg !11102
  br i1 %cmp46, label %cleanup, label %if.end49, !dbg !11103

if.end49:                                         ; preds = %land.lhs.true, %if.then31
  br label %cleanup, !dbg !11104

cleanup:                                          ; preds = %land.lhs.true, %if.end49
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end49 ], [ true, %land.lhs.true ]
  %retval.1 = phi i32 [ %11, %if.end49 ], [ %retval.0, %land.lhs.true ]
  br i1 %cleanup.dest.slot.0, label %for.inc53, label %cleanup95.loopexit

for.inc53:                                        ; preds = %for.body26, %cleanup
  %retval.2 = phi i32 [ %retval.1, %cleanup ], [ %retval.0, %for.body26 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !11105
  call void @llvm.dbg.value(metadata i32 undef, metadata !11033, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11055
  br label %for.cond23, !dbg !11106, !llvm.loop !11107

if.else:                                          ; preds = %for.end
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !11109
  %bf.load56 = load i32, i32* %15, align 8, !dbg !11109
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !11109
  %cmp58 = icmp eq i32 %bf.clear57, 10, !dbg !11109
  br i1 %cmp58, label %cleanup95, label %for.cond61.preheader, !dbg !11110

for.cond61.preheader:                             ; preds = %if.else
  %16 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 8), align 1, !dbg !11111
  %conv62 = sext i8 %16 to i64, !dbg !11111
  %add = add nsw i64 %conv, %conv62, !dbg !11111
  %17 = sext i8 %1 to i64, !dbg !11112
  %18 = sext i8 %1 to i64, !dbg !11112
  br label %for.cond61, !dbg !11112

for.cond61:                                       ; preds = %for.cond61.preheader, %for.inc90
  %indvars.iv6 = phi i64 [ 0, %for.cond61.preheader ], [ %indvars.iv.next7, %for.inc90 ], !dbg !11113
  %retval.3 = phi i32 [ undef, %for.cond61.preheader ], [ %retval.4, %for.inc90 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !11033, metadata !DIExpression()), !dbg !11055
  %cmp63 = icmp slt i64 %indvars.iv6, %add, !dbg !11114
  br i1 %cmp63, label %for.body65, label %cleanup95.loopexit4, !dbg !11112

for.body65:                                       ; preds = %for.cond61
  %cmp66 = icmp slt i64 %indvars.iv6, %17, !dbg !11115
  br i1 %cmp66, label %cond.end, label %cond.false, !dbg !11116

cond.false:                                       ; preds = %for.body65
  %19 = sub nsw i64 %indvars.iv6, %18, !dbg !11117
  %arrayidx69 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 6, i64 %19, !dbg !11118
  %20 = load i8, i8* %arrayidx69, align 1, !dbg !11118
  %conv70 = sext i8 %20 to i64, !dbg !11118
  br label %cond.end, !dbg !11116

cond.end:                                         ; preds = %for.body65, %cond.false
  %cond = phi i64 [ %conv70, %cond.false ], [ %indvars.iv6, %for.body65 ], !dbg !11116
  %sext = shl i64 %cond, 32, !dbg !11119
  %idxprom72 = ashr exact i64 %sext, 32, !dbg !11119
  %cl76 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom72, i64 %idxprom2, i32 1, !dbg !11120
  %21 = load i32, i32* %cl76, align 8, !dbg !11120
  call void @llvm.dbg.value(metadata i32 %21, metadata !11054, metadata !DIExpression()), !dbg !11121
  %arrayidx78 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 4, i64 %idxprom72, !dbg !11122
  %22 = load i32, i32* %arrayidx78, align 4, !dbg !11122
  %cmp79 = icmp eq i32 %22, 1, !dbg !11124
  br i1 %cmp79, label %cleanup87, label %lor.lhs.false, !dbg !11125

lor.lhs.false:                                    ; preds = %cond.end
  %cmp83 = icmp eq i32 %22, 2, !dbg !11126
  %spec.select = zext i1 %cmp83 to i32, !dbg !11127
  %spec.select3 = select i1 %cmp83, i32 %21, i32 %retval.3, !dbg !11127
  br label %cleanup87, !dbg !11127

cleanup87:                                        ; preds = %lor.lhs.false, %cond.end
  %cleanup.dest.slot.1 = phi i32 [ 1, %cond.end ], [ %spec.select, %lor.lhs.false ]
  %retval.4 = phi i32 [ %21, %cond.end ], [ %spec.select3, %lor.lhs.false ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %for.inc90, label %cleanup95.loopexit4

for.inc90:                                        ; preds = %cleanup87
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !11128
  call void @llvm.dbg.value(metadata i32 undef, metadata !11033, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11055
  br label %for.cond61, !dbg !11129, !llvm.loop !11130

cleanup95.loopexit:                               ; preds = %cleanup, %for.cond23
  %retval.5.ph = phi i32 [ 0, %for.cond23 ], [ %retval.1, %cleanup ]
  br label %cleanup95, !dbg !11132

cleanup95.loopexit4:                              ; preds = %cleanup87, %for.cond61
  %retval.5.ph5 = phi i32 [ 0, %for.cond61 ], [ %retval.4, %cleanup87 ]
  br label %cleanup95, !dbg !11132

cleanup95:                                        ; preds = %cleanup95.loopexit4, %cleanup95.loopexit, %if.else
  %retval.5 = phi i32 [ 0, %if.else ], [ %retval.5.ph, %cleanup95.loopexit ], [ %retval.5.ph5, %cleanup95.loopexit4 ]
  ret i32 %retval.5, !dbg !11132
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_regs_for_mode(i32 %mode) unnamed_addr #5 !dbg !11133 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !11137, metadata !DIExpression()), !dbg !11144
  %idxprom = zext i32 %mode to i64, !dbg !11145
  %arrayidx = getelementptr inbounds %struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 0, i64 %idxprom, !dbg !11145
  store i64 0, i64* %arrayidx, align 8, !dbg !11145
  %arrayidx2 = getelementptr inbounds %struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 3, i64 %idxprom, !dbg !11146
  store i64 0, i64* %arrayidx2, align 8, !dbg !11146
  call void @llvm.dbg.value(metadata i32 0, metadata !11138, metadata !DIExpression()), !dbg !11144
  br label %for.cond, !dbg !11147

for.cond:                                         ; preds = %cleanup, %entry
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %cleanup ], [ 0, %entry ], !dbg !11148
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !11138, metadata !DIExpression()), !dbg !11144
  %exitcond = icmp eq i64 %indvars.iv2, 53, !dbg !11149
  br i1 %exitcond, label %for.end35, label %for.body, !dbg !11150

for.body:                                         ; preds = %for.cond
  %arrayidx6 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %indvars.iv2, i64 %idxprom, !dbg !11151
  %0 = load i8, i8* %arrayidx6, align 1, !dbg !11151
  call void @llvm.dbg.value(metadata i8 %0, metadata !11139, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i8 %0, metadata !11143, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11152
  %1 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 4), align 8, !dbg !11153
  %2 = zext i8 %0 to i64, !dbg !11157
  br label %for.cond7, !dbg !11157

for.cond7:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %2, %for.body ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !11158
  call void @llvm.dbg.value(metadata i32 undef, metadata !11143, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11152
  %cmp8 = icmp sgt i64 %indvars.iv, 0, !dbg !11159
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !11160

for.body10:                                       ; preds = %for.cond7
  %3 = add nsw i64 %indvars.iv2, %indvars.iv.next, !dbg !11161
  %arrayidx12 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %3, !dbg !11162
  %4 = load i8, i8* %arrayidx12, align 1, !dbg !11162
  %tobool = icmp eq i8 %4, 0, !dbg !11162
  br i1 %tobool, label %lor.lhs.false, label %for.end, !dbg !11163

lor.lhs.false:                                    ; preds = %for.body10
  %arrayidx16 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %3, !dbg !11164
  %5 = load i8, i8* %arrayidx16, align 1, !dbg !11164
  %tobool18 = icmp eq i8 %5, 0, !dbg !11164
  br i1 %tobool18, label %lor.lhs.false19, label %for.end, !dbg !11165

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %sh_prom = and i64 %3, 4294967295, !dbg !11166
  %shl = shl i64 1, %sh_prom, !dbg !11166
  %and = and i64 %1, %shl, !dbg !11166
  %tobool21 = icmp eq i64 %and, 0, !dbg !11166
  br i1 %tobool21, label %for.end, label %for.inc, !dbg !11167

for.inc:                                          ; preds = %lor.lhs.false19
  call void @llvm.dbg.value(metadata i32 undef, metadata !11143, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11152
  br label %for.cond7, !dbg !11168, !llvm.loop !11169

for.end:                                          ; preds = %lor.lhs.false19, %lor.lhs.false, %for.body10, %for.cond7
  %cmp8.lcssa = phi i1 [ %cmp8, %lor.lhs.false19 ], [ %cmp8, %lor.lhs.false ], [ %cmp8, %for.body10 ], [ %cmp8, %for.cond7 ], !dbg !11159
  br i1 %cmp8.lcssa, label %cleanup, label %if.end25, !dbg !11171

if.end25:                                         ; preds = %for.end
  %6 = trunc i64 %indvars.iv2 to i32, !dbg !11172
  %call = tail call zeroext i8 @ix86_hard_regno_mode_ok(i32 %6, i32 %mode) #6, !dbg !11172
  %tobool26 = icmp eq i8 %call, 0, !dbg !11172
  br i1 %tobool26, label %cleanup, label %if.end28, !dbg !11174

if.end28:                                         ; preds = %if.end25
  %shl30 = shl i64 1, %indvars.iv2, !dbg !11175
  %7 = load i64, i64* %arrayidx, align 8, !dbg !11175
  %or = or i64 %7, %shl30, !dbg !11175
  store i64 %or, i64* %arrayidx, align 8, !dbg !11175
  br label %cleanup, !dbg !11176

cleanup:                                          ; preds = %if.end25, %for.end, %if.end28
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !11177
  call void @llvm.dbg.value(metadata i32 undef, metadata !11138, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11144
  br label %for.cond, !dbg !11178, !llvm.loop !11179

for.end35:                                        ; preds = %for.cond
  %arrayidx37 = getelementptr inbounds %struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 1, i64 %idxprom, !dbg !11181
  store i8 1, i8* %arrayidx37, align 1, !dbg !11182
  ret void, !dbg !11183
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @hard_reg_set_iter_init(%struct.hard_reg_set_iterator* %iter, i64 %set, i32 %min, i32* %regno) unnamed_addr #0 !dbg !11184 {
entry:
  %set.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.hard_reg_set_iterator* %iter, metadata !11189, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i64 %set, metadata !11190, metadata !DIExpression()), !dbg !11193
  store i64 %set, i64* %set.addr, align 8
  call void @llvm.dbg.value(metadata i32 0, metadata !11191, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32* %regno, metadata !11192, metadata !DIExpression()), !dbg !11193
  %pelt = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %iter, i64 0, i32 0, !dbg !11194
  store i64* %set.addr, i64** %pelt, align 8, !dbg !11195
  %length = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %iter, i64 0, i32 1, !dbg !11196
  store i16 1, i16* %length, align 8, !dbg !11197
  %word_no = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %iter, i64 0, i32 2, !dbg !11198
  store i16 0, i16* %word_no, align 2, !dbg !11199
  br i1 true, label %if.then, label %entry.if.end_crit_edge, !dbg !11200

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end, !dbg !11200

if.then:                                          ; preds = %entry
  %bits8 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %iter, i64 0, i32 3, !dbg !11201
  store i64 %set, i64* %bits8, align 8, !dbg !11204
  %tobool = icmp eq i64 %set, 0, !dbg !11205
  %lnot.ext = zext i1 %tobool to i32, !dbg !11205
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !11191, metadata !DIExpression()), !dbg !11193
  br label %if.end, !dbg !11206

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %min.addr.0 = phi i32 [ %lnot.ext, %if.then ], [ undef, %entry.if.end_crit_edge ]
  call void @llvm.dbg.value(metadata i32 %min.addr.0, metadata !11191, metadata !DIExpression()), !dbg !11193
  store i32 %min.addr.0, i32* %regno, align 4, !dbg !11207
  ret void, !dbg !11208
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @hard_reg_set_iter_set(%struct.hard_reg_set_iterator* %iter, i32* %regno) unnamed_addr #0 !dbg !11209 {
entry:
  call void @llvm.dbg.value(metadata %struct.hard_reg_set_iterator* %iter, metadata !11213, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32* %regno, metadata !11214, metadata !DIExpression()), !dbg !11215
  %word_no = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %iter, i64 0, i32 2, !dbg !11216
  %length = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %iter, i64 0, i32 1, !dbg !11216
  %bits = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %iter, i64 0, i32 3, !dbg !11219
  %pelt = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %iter, i64 0, i32 0, !dbg !11221
  %.pre = load i16, i16* %word_no, align 2, !dbg !11223
  %.pre1 = load i16, i16* %length, align 8, !dbg !11224
  br label %while.body, !dbg !11225

while.body:                                       ; preds = %entry, %while.end30
  %0 = phi i16 [ %.pre1, %entry ], [ %.lcssa, %while.end30 ], !dbg !11224
  %1 = phi i16 [ %.pre, %entry ], [ %inc.lcssa, %while.end30 ], !dbg !11223
  %cmp = icmp ult i16 %1, %0, !dbg !11226
  br i1 %cmp, label %if.end, label %return.loopexit, !dbg !11227

if.end:                                           ; preds = %while.body
  %2 = load i64, i64* %bits, align 8, !dbg !11228
  %tobool = icmp eq i64 %2, 0, !dbg !11229
  br i1 %tobool, label %if.end12, label %while.cond4.preheader, !dbg !11230

while.cond4.preheader:                            ; preds = %if.end
  %.lcssa4 = phi i64 [ %2, %if.end ], !dbg !11228
  br label %while.cond4, !dbg !11231

while.cond4:                                      ; preds = %while.cond4.preheader, %while.body7
  %3 = phi i64 [ %.lcssa4, %while.cond4.preheader ], [ %.pre2, %while.body7 ], !dbg !11233
  %and = and i64 %3, 1, !dbg !11234
  %tobool6 = icmp eq i64 %and, 0, !dbg !11235
  br i1 %tobool6, label %while.body7, label %while.end, !dbg !11231

while.body7:                                      ; preds = %while.cond4
  %shr = lshr i64 %3, 1, !dbg !11236
  store i64 %shr, i64* %bits, align 8, !dbg !11236
  %4 = load i32, i32* %regno, align 4, !dbg !11238
  %add = add i32 %4, 1, !dbg !11238
  store i32 %add, i32* %regno, align 4, !dbg !11238
  %.pre2 = load i64, i64* %bits, align 8, !dbg !11233
  br label %while.cond4, !dbg !11231, !llvm.loop !11239

while.end:                                        ; preds = %while.cond4
  %5 = load i32, i32* %regno, align 4, !dbg !11241
  %cmp9 = icmp ult i32 %5, 53, !dbg !11242
  %conv11 = zext i1 %cmp9 to i8, !dbg !11243
  br label %return, !dbg !11244

if.end12:                                         ; preds = %if.end
  %6 = load i32, i32* %regno, align 4, !dbg !11245
  %sub = add i32 %6, 63, !dbg !11246
  %sub14 = and i32 %sub, -64, !dbg !11247
  br label %while.cond15, !dbg !11248

while.cond15:                                     ; preds = %if.end28, %if.end12
  %storemerge = phi i32 [ %sub14, %if.end12 ], [ %add29, %if.end28 ], !dbg !11249
  store i32 %storemerge, i32* %regno, align 4, !dbg !11249
  %7 = load i16, i16* %word_no, align 2, !dbg !11250
  %inc = add i16 %7, 1, !dbg !11250
  store i16 %inc, i16* %word_no, align 2, !dbg !11250
  %8 = load i16, i16* %length, align 8, !dbg !11251
  %cmp20 = icmp ult i16 %inc, %8, !dbg !11252
  br i1 %cmp20, label %while.body22, label %while.end30, !dbg !11248

while.body22:                                     ; preds = %while.cond15
  %9 = load i64*, i64** %pelt, align 8, !dbg !11253
  %idxprom = zext i16 %inc to i64, !dbg !11254
  %arrayidx = getelementptr inbounds i64, i64* %9, i64 %idxprom, !dbg !11254
  %10 = load i64, i64* %arrayidx, align 8, !dbg !11254
  store i64 %10, i64* %bits, align 8, !dbg !11255
  %tobool26 = icmp eq i64 %10, 0, !dbg !11256
  br i1 %tobool26, label %if.end28, label %while.end30, !dbg !11258

if.end28:                                         ; preds = %while.body22
  %11 = load i32, i32* %regno, align 4, !dbg !11259
  %add29 = add i32 %11, 64, !dbg !11259
  br label %while.cond15, !dbg !11248, !llvm.loop !11260

while.end30:                                      ; preds = %while.body22, %while.cond15
  %inc.lcssa = phi i16 [ %inc, %while.body22 ], [ %inc, %while.cond15 ], !dbg !11250
  %.lcssa = phi i16 [ %8, %while.body22 ], [ %8, %while.cond15 ], !dbg !11251
  br label %while.body, !dbg !11225, !llvm.loop !11262

return.loopexit:                                  ; preds = %while.body
  br label %return, !dbg !11264

return:                                           ; preds = %return.loopexit, %while.end
  %retval.0 = phi i8 [ %conv11, %while.end ], [ 0, %return.loopexit ], !dbg !11249
  ret i8 %retval.0, !dbg !11264
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sel_hard_regno_rename_ok(i32 %from, i32 %to) unnamed_addr #0 !dbg !11265 {
entry:
  call void @llvm.dbg.value(metadata i32 %from, metadata !11269, metadata !DIExpression()), !dbg !11271
  call void @llvm.dbg.value(metadata i32 %to, metadata !11270, metadata !DIExpression()), !dbg !11271
  %idxprom = sext i32 %from to i64, !dbg !11272
  %arrayidx = getelementptr inbounds %struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 2, i64 %idxprom, !dbg !11272
  %0 = load i64, i64* %arrayidx, align 8, !dbg !11272
  %sh_prom = zext i32 %from to i64, !dbg !11272
  %shl = shl i64 1, %sh_prom, !dbg !11272
  %and = and i64 %0, %shl, !dbg !11272
  %tobool = icmp eq i64 %and, 0, !dbg !11272
  br i1 %tobool, label %if.end, label %if.then, !dbg !11274

if.then:                                          ; preds = %entry
  %sh_prom3 = zext i32 %to to i64, !dbg !11275
  %shl4 = shl i64 1, %sh_prom3, !dbg !11275
  %and5 = and i64 %0, %shl4, !dbg !11275
  br label %return, !dbg !11276

if.end:                                           ; preds = %entry
  tail call fastcc void @init_hard_regno_rename(i32 %from) #7, !dbg !11277
  %1 = load i64, i64* %arrayidx, align 8, !dbg !11278
  %sh_prom10 = zext i32 %to to i64, !dbg !11278
  %shl11 = shl i64 1, %sh_prom10, !dbg !11278
  %and12 = and i64 %1, %shl11, !dbg !11278
  br label %return, !dbg !11279

return:                                           ; preds = %if.end, %if.then
  %retval.0.in.in = phi i64 [ %and5, %if.then ], [ %and12, %if.end ]
  %retval.0.in = icmp ne i64 %retval.0.in.in, 0, !dbg !11271
  %retval.0 = zext i1 %retval.0.in to i8, !dbg !11271
  ret i8 %retval.0, !dbg !11280
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @hard_reg_set_iter_next(%struct.hard_reg_set_iterator* %iter, i32* %regno) unnamed_addr #0 !dbg !11281 {
entry:
  call void @llvm.dbg.value(metadata %struct.hard_reg_set_iterator* %iter, metadata !11285, metadata !DIExpression()), !dbg !11287
  call void @llvm.dbg.value(metadata i32* %regno, metadata !11286, metadata !DIExpression()), !dbg !11287
  %bits = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %iter, i64 0, i32 3, !dbg !11288
  %0 = load i64, i64* %bits, align 8, !dbg !11289
  %shr = lshr i64 %0, 1, !dbg !11289
  store i64 %shr, i64* %bits, align 8, !dbg !11289
  %1 = load i32, i32* %regno, align 4, !dbg !11290
  %add = add i32 %1, 1, !dbg !11290
  store i32 %add, i32* %regno, align 4, !dbg !11290
  ret void, !dbg !11291
}

declare dso_local void @extract_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @constrain_operands(i32) local_unnamed_addr #2

declare dso_local void @_fatal_insn_not_found(%struct.rtx_def*, i8*, i32, i8*) local_unnamed_addr #2

declare dso_local void @preprocess_constraints() local_unnamed_addr #2

declare dso_local i32 @asm_noperands(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_hard_regno_rename(i32 %regno) unnamed_addr #5 !dbg !11292 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !11294, metadata !DIExpression()), !dbg !11296
  %sh_prom = zext i32 %regno to i64, !dbg !11297
  %shl = shl i64 1, %sh_prom, !dbg !11297
  %idxprom = sext i32 %regno to i64, !dbg !11297
  %arrayidx = getelementptr inbounds %struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 2, i64 %idxprom, !dbg !11297
  %0 = load i64, i64* %arrayidx, align 8, !dbg !11297
  %or = or i64 %0, %shl, !dbg !11297
  store i64 %or, i64* %arrayidx, align 8, !dbg !11297
  call void @llvm.dbg.value(metadata i32 0, metadata !11295, metadata !DIExpression()), !dbg !11296
  %1 = and i32 %regno, -8, !dbg !11298
  %cmp3 = icmp eq i32 %1, 8, !dbg !11298
  br i1 %cmp3, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !11303

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !11303

entry.split.us:                                   ; preds = %entry
  br label %for.end.us-lcssa.us, !dbg !11303

if.end.us:                                        ; No predecessors!
  unreachable, !dbg !11304

for.end.us-lcssa.us:                              ; preds = %entry.split.us
  call void @llvm.dbg.value(metadata i32 undef, metadata !11295, metadata !DIExpression()), !dbg !11296
  br label %for.end, !dbg !11305

for.cond:                                         ; preds = %for.inc, %entry.entry.split_crit_edge
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry.entry.split_crit_edge ]
  %2 = phi i64 [ %4, %for.inc ], [ %or, %entry.entry.split_crit_edge ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11295, metadata !DIExpression()), !dbg !11296
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !11306
  br i1 %exitcond, label %for.end.us-lcssa, label %for.body, !dbg !11307

for.body:                                         ; preds = %for.cond
  %3 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 4), align 8, !dbg !11308
  %shl2 = shl i64 1, %indvars.iv, !dbg !11308
  %and = and i64 %3, %shl2, !dbg !11308
  %tobool = icmp eq i64 %and, 0, !dbg !11308
  br i1 %tobool, label %for.inc, label %if.end, !dbg !11310

if.end:                                           ; preds = %for.body
  %or10 = or i64 %2, %shl2, !dbg !11311
  store i64 %or10, i64* %arrayidx, align 8, !dbg !11311
  br label %for.inc, !dbg !11311

for.inc:                                          ; preds = %for.body, %if.end
  %4 = phi i64 [ %2, %for.body ], [ %or10, %if.end ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !11312
  call void @llvm.dbg.value(metadata i32 undef, metadata !11295, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11296
  br label %for.cond, !dbg !11313, !llvm.loop !11314

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !11305

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  ret void, !dbg !11305
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @choose_best_reg_1(i64 %hard_regs_used, %struct.reg_rename* %reg_rename_p, %struct._list_node* %original_insns, i8* %is_orig_reg_p_ptr) unnamed_addr #5 !dbg !11316 {
entry:
  %original_insns.addr = alloca %struct._list_node*, align 8
  %cur_reg = alloca i32, align 4
  %hrsi = alloca %struct.hard_reg_set_iterator, align 8
  %di = alloca %struct._list_iterator, align 8
  %def = alloca %struct._def*, align 8
  call void @llvm.dbg.value(metadata i64 %hard_regs_used, metadata !11318, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, metadata !11319, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata %struct._list_node* %original_insns, metadata !11320, metadata !DIExpression()), !dbg !11335
  store %struct._list_node* %original_insns, %struct._list_node** %original_insns.addr, align 8
  call void @llvm.dbg.value(metadata i8* %is_orig_reg_p_ptr, metadata !11321, metadata !DIExpression()), !dbg !11335
  %0 = bitcast i32* %cur_reg to i8*, !dbg !11336
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !11336
  call void @llvm.dbg.value(metadata i32 0, metadata !11324, metadata !DIExpression()), !dbg !11335
  %1 = bitcast %struct.hard_reg_set_iterator* %hrsi to i8*, !dbg !11337
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !11337
  %2 = bitcast %struct._list_iterator* %di to i8*, !dbg !11338
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !11338
  %3 = bitcast %struct._def** %def to i8*, !dbg !11339
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !11339
  store i8 1, i8* %is_orig_reg_p_ptr, align 1, !dbg !11340
  call void @llvm.dbg.value(metadata %struct._list_node** %original_insns.addr, metadata !11320, metadata !DIExpression(DW_OP_deref)), !dbg !11335
  call void @llvm.dbg.value(metadata %struct._list_iterator* %di, metadata !11329, metadata !DIExpression(DW_OP_deref)), !dbg !11335
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %di, %struct._list_node** nonnull %original_insns.addr, i8 zeroext 0) #7, !dbg !11341
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %di, i64 0, i32 0, !dbg !11342
  br label %for.cond, !dbg !11341

for.cond:                                         ; preds = %for.inc38, %entry
  %mode.0 = phi i32 [ 0, %entry ], [ %mode.1, %for.inc38 ], !dbg !11335
  %retval.0 = phi %struct.rtx_def* [ undef, %entry ], [ %retval.1, %for.inc38 ]
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !11324, metadata !DIExpression()), !dbg !11335
  %4 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !11343
  %5 = load %struct._list_node*, %struct._list_node** %4, align 8, !dbg !11343
  call void @llvm.dbg.value(metadata %struct._def** %def, metadata !11330, metadata !DIExpression(DW_OP_deref)), !dbg !11335
  %call = call fastcc zeroext i8 @_list_iter_cond_def(%struct._list_node* %5, %struct._def** nonnull %def) #7, !dbg !11343
  %tobool = icmp eq i8 %call, 0, !dbg !11341
  br i1 %tobool, label %for.end39, label %for.body, !dbg !11341

for.body:                                         ; preds = %for.cond
  %6 = load %struct._def*, %struct._def** %def, align 8, !dbg !11344
  call void @llvm.dbg.value(metadata %struct._def* %6, metadata !11330, metadata !DIExpression()), !dbg !11335
  %orig_insn = getelementptr inbounds %struct._def, %struct._def* %6, i64 0, i32 0, !dbg !11344
  %7 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !11344
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, !dbg !11344
  %8 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !11344
  %rt_rtx = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !11344
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11344
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11344
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !11344
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !11344
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !11331, metadata !DIExpression()), !dbg !11345
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !11346
  %bf.load = load i32, i32* %11, align 8, !dbg !11346
  %bf.clear = and i32 %bf.load, 65535, !dbg !11346
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !11346
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11346

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1398, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11346
  br label %cond.end, !dbg !11346

cond.end:                                         ; preds = %for.body, %cond.true
  %cmp5 = icmp eq i32 %mode.0, 0, !dbg !11347
  br i1 %cmp5, label %if.then, label %cond.end.if.end_crit_edge, !dbg !11349

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  %bf.load8.pre = load i32, i32* %11, align 8, !dbg !11350
  %.pre = lshr i32 %bf.load8.pre, 16, !dbg !11350
  %.pre4 = and i32 %.pre, 255, !dbg !11350
  br label %if.end, !dbg !11349

if.then:                                          ; preds = %cond.end
  %bf.load6 = load i32, i32* %11, align 8, !dbg !11351
  %bf.lshr = lshr i32 %bf.load6, 16, !dbg !11351
  %bf.clear7 = and i32 %bf.lshr, 255, !dbg !11351
  call void @llvm.dbg.value(metadata i32 %bf.clear7, metadata !11324, metadata !DIExpression()), !dbg !11335
  br label %if.end, !dbg !11352

if.end:                                           ; preds = %cond.end.if.end_crit_edge, %if.then
  %bf.clear10.pre-phi = phi i32 [ %.pre4, %cond.end.if.end_crit_edge ], [ %bf.clear7, %if.then ], !dbg !11350
  %mode.1 = phi i32 [ %mode.0, %cond.end.if.end_crit_edge ], [ %bf.clear7, %if.then ], !dbg !11335
  call void @llvm.dbg.value(metadata i32 %mode.1, metadata !11324, metadata !DIExpression()), !dbg !11335
  %cmp11 = icmp eq i32 %mode.1, %bf.clear10.pre-phi, !dbg !11350
  br i1 %cmp11, label %cond.end14, label %cond.true12, !dbg !11350

cond.true12:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1406, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11350
  br label %cond.end14, !dbg !11350

cond.end14:                                       ; preds = %if.end, %cond.true12
  %call16 = call fastcc i32 @rhs_regno(%struct.rtx_def* %10) #7, !dbg !11353
  call void @llvm.dbg.value(metadata i32 %call16, metadata !11325, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 0, metadata !11326, metadata !DIExpression()), !dbg !11335
  %idxprom = zext i32 %call16 to i64, !dbg !11354
  %idxprom18 = zext i32 %mode.1 to i64, !dbg !11354
  %arrayidx19 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom18, !dbg !11354
  %12 = load i8, i8* %arrayidx19, align 1, !dbg !11354
  %conv = zext i8 %12 to i32, !dbg !11354
  call void @llvm.dbg.value(metadata i32 %conv, metadata !11327, metadata !DIExpression()), !dbg !11335
  %wide.trip.count = zext i8 %12 to i64, !dbg !11356
  br label %for.cond20, !dbg !11358

for.cond20:                                       ; preds = %for.inc, %cond.end14
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.inc ], [ 0, %cond.end14 ], !dbg !11359
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !11326, metadata !DIExpression()), !dbg !11335
  %13 = trunc i64 %indvars.iv6 to i32, !dbg !11360
  %exitcond = icmp eq i64 %indvars.iv6, %wide.trip.count, !dbg !11356
  br i1 %exitcond, label %for.end, label %for.body23, !dbg !11360

for.body23:                                       ; preds = %for.cond20
  %14 = trunc i64 %indvars.iv6 to i32, !dbg !11361
  %add = add i32 %call16, %14, !dbg !11361
  %sh_prom = zext i32 %add to i64, !dbg !11361
  %shl = shl i64 1, %sh_prom, !dbg !11361
  %and = and i64 %shl, %hard_regs_used, !dbg !11361
  %tobool24 = icmp eq i64 %and, 0, !dbg !11361
  br i1 %tobool24, label %for.inc, label %for.end, !dbg !11363

for.inc:                                          ; preds = %for.body23
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !11364
  call void @llvm.dbg.value(metadata i32 undef, metadata !11326, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11335
  br label %for.cond20, !dbg !11365, !llvm.loop !11366

for.end:                                          ; preds = %for.cond20, %for.body23
  %.lcssa = phi i32 [ %13, %for.cond20 ], [ %13, %for.body23 ], !dbg !11360
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !11326, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !11326, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !11326, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !11326, metadata !DIExpression()), !dbg !11335
  %cmp27 = icmp eq i32 %.lcssa, %conv, !dbg !11368
  br i1 %cmp27, label %if.then29, label %cleanup, !dbg !11370

if.then29:                                        ; preds = %for.end
  %cmp30 = icmp eq i32 %mode.1, 0, !dbg !11371
  br i1 %cmp30, label %cond.true32, label %cond.end34, !dbg !11371

cond.true32:                                      ; preds = %if.then29
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11371
  br label %cond.end34, !dbg !11371

cond.end34:                                       ; preds = %if.then29, %cond.true32
  %call36 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode.1, i32 %call16) #6, !dbg !11373
  br label %cleanup, !dbg !11374

cleanup:                                          ; preds = %for.end, %cond.end34
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end34 ], [ true, %for.end ]
  %retval.1 = phi %struct.rtx_def* [ %call36, %cond.end34 ], [ %retval.0, %for.end ]
  br i1 %cleanup.dest.slot.0, label %for.inc38, label %cleanup108.loopexit

for.inc38:                                        ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct._list_iterator* %di, metadata !11329, metadata !DIExpression(DW_OP_deref)), !dbg !11335
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %di) #7, !dbg !11343
  br label %for.cond, !dbg !11343, !llvm.loop !11375

for.end39:                                        ; preds = %for.cond
  %mode.0.lcssa = phi i32 [ %mode.0, %for.cond ], !dbg !11335
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11324, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11324, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !11324, metadata !DIExpression()), !dbg !11335
  store i8 0, i8* %is_orig_reg_p_ptr, align 1, !dbg !11377
  call void @llvm.dbg.value(metadata i32 -1, metadata !11322, metadata !DIExpression()), !dbg !11335
  %15 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 1), align 8, !dbg !11378
  call void @llvm.dbg.value(metadata i32* %cur_reg, metadata !11323, metadata !DIExpression(DW_OP_deref)), !dbg !11335
  call void @llvm.dbg.value(metadata %struct.hard_reg_set_iterator* %hrsi, metadata !11328, metadata !DIExpression(DW_OP_deref)), !dbg !11335
  call fastcc void @hard_reg_set_iter_init(%struct.hard_reg_set_iterator* nonnull %hrsi, i64 %15, i32 0, i32* nonnull %cur_reg) #7, !dbg !11378
  %idxprom51 = zext i32 %mode.0.lcssa to i64, !dbg !11380
  br label %for.cond40, !dbg !11378

for.cond40:                                       ; preds = %for.inc95, %for.end39
  %best_new_reg.0 = phi i32 [ -1, %for.end39 ], [ %best_new_reg.3, %for.inc95 ], !dbg !11385
  call void @llvm.dbg.value(metadata i32 %best_new_reg.0, metadata !11322, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32* %cur_reg, metadata !11323, metadata !DIExpression(DW_OP_deref)), !dbg !11335
  call void @llvm.dbg.value(metadata %struct.hard_reg_set_iterator* %hrsi, metadata !11328, metadata !DIExpression(DW_OP_deref)), !dbg !11335
  %call41 = call fastcc zeroext i8 @hard_reg_set_iter_set(%struct.hard_reg_set_iterator* nonnull %hrsi, i32* nonnull %cur_reg) #7, !dbg !11386
  %tobool42 = icmp eq i8 %call41, 0, !dbg !11378
  br i1 %tobool42, label %for.end96, label %for.body43, !dbg !11378

for.body43:                                       ; preds = %for.cond40
  %16 = load i32, i32* %cur_reg, align 4, !dbg !11387
  call void @llvm.dbg.value(metadata i32 %16, metadata !11323, metadata !DIExpression()), !dbg !11335
  %sh_prom44 = zext i32 %16 to i64, !dbg !11387
  %shl45 = shl i64 1, %sh_prom44, !dbg !11387
  %and46 = and i64 %shl45, %hard_regs_used, !dbg !11387
  %tobool47 = icmp eq i64 %and46, 0, !dbg !11387
  br i1 %tobool47, label %if.then48, label %for.inc95, !dbg !11388

if.then48:                                        ; preds = %for.body43
  call void @llvm.dbg.value(metadata i32 1, metadata !11326, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 %16, metadata !11323, metadata !DIExpression()), !dbg !11335
  %arrayidx52 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %sh_prom44, i64 %idxprom51, !dbg !11389
  %17 = load i8, i8* %arrayidx52, align 1, !dbg !11389
  %18 = zext i8 %17 to i64, !dbg !11390
  call void @llvm.dbg.value(metadata i64 %18, metadata !11327, metadata !DIExpression()), !dbg !11335
  br label %for.cond54, !dbg !11390

for.cond54:                                       ; preds = %for.inc71, %if.then48
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc71 ], [ 1, %if.then48 ], !dbg !11380
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11326, metadata !DIExpression()), !dbg !11335
  %cmp55 = icmp ult i64 %indvars.iv, %18, !dbg !11391
  br i1 %cmp55, label %for.body57, label %for.end73, !dbg !11393

for.body57:                                       ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 %16, metadata !11323, metadata !DIExpression()), !dbg !11335
  %19 = trunc i64 %indvars.iv to i32, !dbg !11394
  %add58 = add i32 %16, %19, !dbg !11394
  %sh_prom59 = zext i32 %add58 to i64, !dbg !11394
  %shl60 = shl i64 1, %sh_prom59, !dbg !11394
  %and61 = and i64 %shl60, %hard_regs_used, !dbg !11394
  %tobool62 = icmp eq i64 %and61, 0, !dbg !11394
  br i1 %tobool62, label %lor.lhs.false, label %for.end73, !dbg !11396

lor.lhs.false:                                    ; preds = %for.body57
  %20 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i64 0, i32 1), align 8, !dbg !11397
  call void @llvm.dbg.value(metadata i32 %16, metadata !11323, metadata !DIExpression()), !dbg !11335
  %and67 = and i64 %20, %shl60, !dbg !11397
  %tobool68 = icmp eq i64 %and67, 0, !dbg !11397
  br i1 %tobool68, label %for.end73, label %for.inc71, !dbg !11398

for.inc71:                                        ; preds = %lor.lhs.false
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !11399
  call void @llvm.dbg.value(metadata i32 undef, metadata !11326, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11335
  br label %for.cond54, !dbg !11400, !llvm.loop !11401

for.end73:                                        ; preds = %lor.lhs.false, %for.body57, %for.cond54
  %cmp55.lcssa = phi i1 [ %cmp55, %lor.lhs.false ], [ %cmp55, %for.body57 ], [ %cmp55, %for.cond54 ], !dbg !11391
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11326, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11326, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11326, metadata !DIExpression()), !dbg !11335
  br i1 %cmp55.lcssa, label %for.inc95, label %if.end77, !dbg !11403

if.end77:                                         ; preds = %for.end73
  %cmp78 = icmp slt i32 %best_new_reg.0, 0, !dbg !11404
  br i1 %cmp78, label %if.then87, label %lor.lhs.false80, !dbg !11406

lor.lhs.false80:                                  ; preds = %if.end77
  call void @llvm.dbg.value(metadata i32 %16, metadata !11323, metadata !DIExpression()), !dbg !11335
  %arrayidx82 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_rename_tick, i64 0, i64 %sh_prom44, !dbg !11407
  %21 = load i32, i32* %arrayidx82, align 4, !dbg !11407
  %idxprom83 = sext i32 %best_new_reg.0 to i64, !dbg !11408
  %arrayidx84 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_rename_tick, i64 0, i64 %idxprom83, !dbg !11408
  %22 = load i32, i32* %arrayidx84, align 4, !dbg !11408
  %cmp85 = icmp slt i32 %21, %22, !dbg !11409
  br i1 %cmp85, label %if.then87, label %for.inc95, !dbg !11410

if.then87:                                        ; preds = %lor.lhs.false80, %if.end77
  call void @llvm.dbg.value(metadata i32 %16, metadata !11323, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 %16, metadata !11322, metadata !DIExpression()), !dbg !11335
  %idxprom88 = sext i32 %16 to i64, !dbg !11411
  %arrayidx89 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_rename_tick, i64 0, i64 %idxprom88, !dbg !11411
  %23 = load i32, i32* %arrayidx89, align 4, !dbg !11411
  %tobool90 = icmp eq i32 %23, 0, !dbg !11411
  br i1 %tobool90, label %for.end96, label %for.inc95, !dbg !11414

for.inc95:                                        ; preds = %if.then87, %for.body43, %lor.lhs.false80, %for.end73
  %best_new_reg.3 = phi i32 [ %best_new_reg.0, %for.end73 ], [ %best_new_reg.0, %for.body43 ], [ %best_new_reg.0, %lor.lhs.false80 ], [ %16, %if.then87 ], !dbg !11385
  call void @llvm.dbg.value(metadata i32 %best_new_reg.3, metadata !11322, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32* %cur_reg, metadata !11323, metadata !DIExpression(DW_OP_deref)), !dbg !11335
  call void @llvm.dbg.value(metadata %struct.hard_reg_set_iterator* %hrsi, metadata !11328, metadata !DIExpression(DW_OP_deref)), !dbg !11335
  call fastcc void @hard_reg_set_iter_next(%struct.hard_reg_set_iterator* nonnull %hrsi, i32* nonnull %cur_reg) #7, !dbg !11386
  br label %for.cond40, !dbg !11386, !llvm.loop !11415

for.end96:                                        ; preds = %if.then87, %for.cond40
  %best_new_reg.4 = phi i32 [ %best_new_reg.0, %for.cond40 ], [ %16, %if.then87 ], !dbg !11335
  call void @llvm.dbg.value(metadata i32 %best_new_reg.4, metadata !11322, metadata !DIExpression()), !dbg !11335
  %cmp97 = icmp sgt i32 %best_new_reg.4, -1, !dbg !11417
  br i1 %cmp97, label %if.then99, label %cleanup108, !dbg !11419

if.then99:                                        ; preds = %for.end96
  %cmp100 = icmp eq i32 %mode.0.lcssa, 0, !dbg !11420
  br i1 %cmp100, label %cond.true102, label %cond.end104, !dbg !11420

cond.true102:                                     ; preds = %if.then99
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1457, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11420
  br label %cond.end104, !dbg !11420

cond.end104:                                      ; preds = %if.then99, %cond.true102
  %call106 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode.0.lcssa, i32 %best_new_reg.4) #6, !dbg !11422
  br label %cleanup108, !dbg !11423

cleanup108.loopexit:                              ; preds = %cleanup
  %retval.1.lcssa = phi %struct.rtx_def* [ %retval.1, %cleanup ]
  br label %cleanup108, !dbg !11424

cleanup108:                                       ; preds = %cleanup108.loopexit, %for.end96, %cond.end104
  %retval.2 = phi %struct.rtx_def* [ %call106, %cond.end104 ], [ null, %for.end96 ], [ %retval.1.lcssa, %cleanup108.loopexit ], !dbg !11335
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !11424
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !11424
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !11424
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !11424
  ret %struct.rtx_def* %retval.2, !dbg !11424
}

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @df_regs_ever_live_p(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #2

declare dso_local i32 @max_reg_num() local_unnamed_addr #2

declare dso_local void @maybe_extend_reg_info_p() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @replace_src_with_reg_ok_p(%struct.rtx_def* %insn, %struct.rtx_def* %new_src_reg) unnamed_addr #5 !dbg !11425 {
entry:
  %mode = alloca i32, align 4
  %dst_loc = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11429, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_src_reg, metadata !11430, metadata !DIExpression()), !dbg !11435
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11436
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !11436
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11436
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !11436
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11436
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11436
  %2 = load i32, i32* %rt_int, align 8, !dbg !11436
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #7, !dbg !11436
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !11436
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 0, !dbg !11436
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11436
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %3, metadata !11431, metadata !DIExpression()), !dbg !11435
  %4 = bitcast i32* %mode to i8*, !dbg !11437
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8, !dbg !11437
  %5 = bitcast %struct.rtx_def** %dst_loc to i8*, !dbg !11438
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !11438
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i64 0, i32 1, i32 0, !dbg !11439
  %6 = load i32, i32* %type, align 8, !dbg !11439
  %cmp = icmp eq i32 %6, 23, !dbg !11439
  br i1 %cmp, label %cond.end10, label %cond.true8, !dbg !11439

cond.true8:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 923, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11439
  br label %cond.end10, !dbg !11439

cond.end10:                                       ; preds = %entry, %cond.true8
  call void @llvm.dbg.value(metadata i32* %mode, metadata !11432, metadata !DIExpression(DW_OP_deref)), !dbg !11435
  call void @llvm.dbg.value(metadata %struct.rtx_def** %dst_loc, metadata !11433, metadata !DIExpression(DW_OP_deref)), !dbg !11435
  call void @get_dest_and_mode(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %dst_loc, i32* nonnull %mode) #6, !dbg !11440
  %7 = load i32, i32* %mode, align 4, !dbg !11441
  call void @llvm.dbg.value(metadata i32 %7, metadata !11432, metadata !DIExpression()), !dbg !11435
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_src_reg, i64 0, i32 0, !dbg !11441
  %bf.load = load i32, i32* %8, align 8, !dbg !11441
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !11441
  %bf.clear = and i32 %bf.lshr, 255, !dbg !11441
  %cmp12 = icmp eq i32 %7, %bf.clear, !dbg !11441
  br i1 %cmp12, label %cond.end15, label %cond.true13, !dbg !11441

cond.true13:                                      ; preds = %cond.end10
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 926, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11441
  br label %cond.end15, !dbg !11441

cond.end15:                                       ; preds = %cond.end10, %cond.true13
  %9 = bitcast %struct.rtx_def** %dst_loc to i32**, !dbg !11442
  %10 = load i32*, i32** %9, align 8, !dbg !11442
  %bf.load17 = load i32, i32* %10, align 8, !dbg !11442
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !11442
  %cmp19 = icmp eq i32 %bf.clear18, 37, !dbg !11442
  br i1 %cmp19, label %land.lhs.true, label %if.end, !dbg !11444

land.lhs.true:                                    ; preds = %cond.end15
  %call20 = call fastcc i32 @rhs_regno(%struct.rtx_def* %new_src_reg) #7, !dbg !11445
  %11 = load %struct.rtx_def*, %struct.rtx_def** %dst_loc, align 8, !dbg !11446
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !11433, metadata !DIExpression()), !dbg !11435
  %call21 = call fastcc i32 @rhs_regno(%struct.rtx_def* %11) #7, !dbg !11446
  %cmp22 = icmp eq i32 %call20, %call21, !dbg !11447
  br i1 %cmp22, label %cleanup, label %if.end, !dbg !11448

if.end:                                           ; preds = %land.lhs.true, %cond.end15
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !11449
  %12 = getelementptr inbounds %union.u, %union.u* %u23, i64 1, i32 0, i32 0, i64 0, !dbg !11449
  %rt_rtx = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !11449
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11449
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11449
  %rt_rtx29 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !11449
  %call30 = call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx29, %struct.rtx_def* %new_src_reg, i8 zeroext 1) #6, !dbg !11450
  %call31 = call i32 @verify_changes(i32 0) #6, !dbg !11451
  %conv = trunc i32 %call31 to i8, !dbg !11451
  call void @llvm.dbg.value(metadata i8 %conv, metadata !11434, metadata !DIExpression()), !dbg !11435
  call void @cancel_changes(i32 0) #6, !dbg !11452
  br label %cleanup, !dbg !11453

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %retval.0 = phi i8 [ %conv, %if.end ], [ 1, %land.lhs.true ], !dbg !11435
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !11454
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8, !dbg !11454
  ret i8 %retval.0, !dbg !11454
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @replace_dest_with_reg_ok_p(%struct.rtx_def* %insn, %struct.rtx_def* %new_reg) unnamed_addr #5 !dbg !11455 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11457, metadata !DIExpression()), !dbg !11461
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_reg, metadata !11458, metadata !DIExpression()), !dbg !11461
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11462
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %0, i64 0, i32 0, !dbg !11462
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11462
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !11462
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11462
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11462
  %2 = load i32, i32* %rt_int, align 8, !dbg !11462
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %2) #7, !dbg !11462
  %call7 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !11462
  %vinsn = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i64 0, i32 0, i32 0, !dbg !11462
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11462
  call void @llvm.dbg.value(metadata %struct.vinsn_def* %3, metadata !11459, metadata !DIExpression()), !dbg !11461
  %type = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i64 0, i32 1, i32 0, !dbg !11463
  %4 = load i32, i32* %type, align 8, !dbg !11463
  %cmp = icmp eq i32 %4, 23, !dbg !11463
  br i1 %cmp, label %cond.end10, label %cond.true8, !dbg !11463

cond.true8:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 948, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11463
  br label %cond.end10, !dbg !11463

cond.end10:                                       ; preds = %entry, %cond.true8
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i64 0, i32 1, i32 1, !dbg !11464
  %5 = bitcast %struct.rtx_def** %lhs to i32**, !dbg !11464
  %6 = load i32*, i32** %5, align 8, !dbg !11464
  %bf.load = load i32, i32* %6, align 8, !dbg !11464
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_reg, i64 0, i32 0, !dbg !11464
  %bf.load13 = load i32, i32* %7, align 8, !dbg !11464
  %bf.lshr1 = xor i32 %bf.load, %bf.load13, !dbg !11464
  %8 = and i32 %bf.lshr1, 16711680, !dbg !11464
  %cmp16 = icmp eq i32 %8, 0, !dbg !11464
  br i1 %cmp16, label %cond.end19, label %cond.true17, !dbg !11464

cond.true17:                                      ; preds = %cond.end10
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 949, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11464
  br label %cond.end19, !dbg !11464

cond.end19:                                       ; preds = %cond.end10, %cond.true17
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !11465
  %9 = getelementptr inbounds %union.u, %union.u* %u21, i64 1, i32 0, i32 0, i64 0, !dbg !11465
  %rt_rtx = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !11465
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11465
  %arrayidx26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11465
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !11465
  %call28 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx27, %struct.rtx_def* %new_reg, i8 zeroext 1) #6, !dbg !11466
  %call29 = tail call i32 @verify_changes(i32 0) #6, !dbg !11467
  %conv = trunc i32 %call29 to i8, !dbg !11467
  call void @llvm.dbg.value(metadata i8 %conv, metadata !11460, metadata !DIExpression()), !dbg !11461
  tail call void @cancel_changes(i32 0) #6, !dbg !11468
  ret i8 %conv, !dbg !11469
}

declare dso_local void @get_dest_and_mode(%struct.rtx_def*, %struct.rtx_def**, i32*) local_unnamed_addr #2

declare dso_local zeroext i8 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @verify_changes(i32) local_unnamed_addr #2

declare dso_local void @cancel_changes(i32) local_unnamed_addr #2

declare dso_local void @sched_extend_ready_list(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @ready_element(%struct.ready_list*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def** @ready_lastpos(%struct.ready_list*) local_unnamed_addr #2

declare dso_local void @dump_vinsn(%struct.vinsn_def*) local_unnamed_addr #2

declare dso_local i32 @max_issue(%struct.ready_list*, i32, i8*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_expr_cost(%struct._expr* %expr, %struct._fence* %fence) unnamed_addr #5 !dbg !11470 {
entry:
  call void @llvm.dbg.value(metadata %struct._expr* %expr, metadata !11474, metadata !DIExpression()), !dbg !11477
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !11475, metadata !DIExpression()), !dbg !11477
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i64 0, i32 0, !dbg !11478
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11478
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i64 0, i32 0, !dbg !11478
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !11478
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !11476, metadata !DIExpression()), !dbg !11477
  %call = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %1) #7, !dbg !11479
  %cmp = icmp slt i32 %call, 0, !dbg !11481
  br i1 %cmp, label %if.then, label %if.else16, !dbg !11482

if.then:                                          ; preds = %entry
  %starts_cycle_p = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 13, !dbg !11483
  %bf.load = load i8, i8* %starts_cycle_p, align 8, !dbg !11483
  %bf.clear = and i8 %bf.load, 4, !dbg !11483
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !11483
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !11486

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11487
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %2, i64 0, i32 0, !dbg !11487
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11487
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !11487
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11487
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11487
  %4 = load i32, i32* %rt_int, align 8, !dbg !11487
  %call8 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base4, i32 %4) #7, !dbg !11487
  %call9 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call8) #7, !dbg !11487
  %asm_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call9, i64 0, i32 13, !dbg !11487
  %bf.load10 = load i8, i8* %asm_p, align 4, !dbg !11487
  %bf.clear12 = and i8 %bf.load10, 2, !dbg !11487
  %tobool14 = icmp eq i8 %bf.clear12, 0, !dbg !11487
  br i1 %tobool14, label %if.else, label %cleanup, !dbg !11488

if.else:                                          ; preds = %land.lhs.true, %if.then
  br label %cleanup, !dbg !11489

if.else16:                                        ; preds = %entry
  %state = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 1, !dbg !11490
  %5 = load i8*, i8** %state, align 8, !dbg !11490
  %call17 = tail call fastcc i32 @estimate_insn_cost(%struct.rtx_def* %1, i8* %5) #7, !dbg !11491
  br label %cleanup, !dbg !11492

cleanup:                                          ; preds = %land.lhs.true, %if.else16, %if.else
  %retval.0 = phi i32 [ 0, %if.else ], [ %call17, %if.else16 ], [ 1, %land.lhs.true ], !dbg !11493
  ret i32 %retval.0, !dbg !11494
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @estimate_insn_cost(%struct.rtx_def* %insn, i8* %state) unnamed_addr #5 !dbg !2345 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2349, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i8* %state, metadata !2350, metadata !DIExpression()), !dbg !11495
  %0 = load i8*, i8** @estimate_insn_cost.temp, align 8, !dbg !11496
  %tobool = icmp eq i8* %0, null, !dbg !11496
  br i1 %tobool, label %if.then, label %if.end, !dbg !11498

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @dfa_state_size, align 8, !dbg !11499
  %call = tail call i8* @xmalloc(i64 %1) #6, !dbg !11500
  store i8* %call, i8** @estimate_insn_cost.temp, align 8, !dbg !11501
  br label %if.end, !dbg !11502

if.end:                                           ; preds = %entry, %if.then
  %2 = phi i8* [ %0, %entry ], [ %call, %if.then ], !dbg !11503
  %3 = load i64, i64* @dfa_state_size, align 8, !dbg !11504
  %call1 = tail call i8* @memcpy(i8* %2, i8* %state, i64 %3) #6, !dbg !11505
  %4 = load i8*, i8** @estimate_insn_cost.temp, align 8, !dbg !11506
  %call2 = tail call i32 @state_transition(i8* %4, %struct.rtx_def* %insn) #6, !dbg !11507
  call void @llvm.dbg.value(metadata i32 %call2, metadata !2351, metadata !DIExpression()), !dbg !11495
  %cmp = icmp slt i32 %call2, 0, !dbg !11508
  br i1 %cmp, label %cleanup, label %if.else, !dbg !11510

if.else:                                          ; preds = %if.end
  %cmp4 = icmp eq i32 %call2, 0, !dbg !11511
  %spec.select = select i1 %cmp4, i32 1, i32 %call2, !dbg !11513
  ret i32 %spec.select, !dbg !11513

cleanup:                                          ; preds = %if.end
  ret i32 0, !dbg !11514
}

declare dso_local i32 @state_transition(i8*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @sel_dfa_new_cycle(%struct.rtx_def* %insn, %struct._fence* %fence) unnamed_addr #5 !dbg !11515 {
entry:
  %sort_p = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11519, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !11520, metadata !DIExpression()), !dbg !11524
  %last_scheduled_insn = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 10, !dbg !11525
  %0 = load %struct.rtx_def*, %struct.rtx_def** %last_scheduled_insn, align 8, !dbg !11525
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !11525
  br i1 %tobool, label %cond.false11, label %cond.true, !dbg !11525

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11526
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i64 0, i32 0, !dbg !11526
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11526
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %2, i64 0, i32 0, !dbg !11526
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11526
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11526
  %3 = load i32, i32* %rt_int, align 8, !dbg !11526
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base5, i32 %3) #7, !dbg !11526
  %call10 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !11526
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call10, i64 0, i32 10, !dbg !11526
  %4 = load i32, i32* %sched_cycle, align 8, !dbg !11526
  br label %cond.end12, !dbg !11525

cond.false11:                                     ; preds = %entry
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !11527
  %5 = load i32, i32* %cycle, align 8, !dbg !11527
  %sub = add nsw i32 %5, -1, !dbg !11528
  br label %cond.end12, !dbg !11525

cond.end12:                                       ; preds = %cond.false11, %cond.true
  %cond13 = phi i32 [ %4, %cond.true ], [ %sub, %cond.false11 ], !dbg !11525
  call void @llvm.dbg.value(metadata i32 %cond13, metadata !11521, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i8 0, metadata !11522, metadata !DIExpression()), !dbg !11524
  %6 = bitcast i32* %sort_p to i8*, !dbg !11529
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8, !dbg !11529
  call void @llvm.dbg.value(metadata i32 0, metadata !11523, metadata !DIExpression()), !dbg !11524
  store i32 0, i32* %sort_p, align 4, !dbg !11530
  %7 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 19), align 8, !dbg !11531
  %tobool14 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)* %7, null, !dbg !11533
  br i1 %tobool14, label %cleanup, label %if.end, !dbg !11534

if.end:                                           ; preds = %cond.end12
  %8 = load i8*, i8** @curr_state, align 8, !dbg !11535
  %state = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 1, !dbg !11536
  %9 = load i8*, i8** %state, align 8, !dbg !11536
  %10 = load i64, i64* @dfa_state_size, align 8, !dbg !11537
  %call15 = tail call i8* @memcpy(i8* %8, i8* %9, i64 %10) #6, !dbg !11538
  %cycle17 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !11524
  br label %while.cond, !dbg !11539

while.cond:                                       ; preds = %while.body, %if.end
  %11 = phi i32 [ 0, %if.end ], [ %.pre, %while.body ], !dbg !11540
  %res.0 = phi i8 [ 0, %if.end ], [ 1, %while.body ], !dbg !11524
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !11522, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 %11, metadata !11523, metadata !DIExpression()), !dbg !11524
  %tobool16 = icmp eq i32 %11, 0, !dbg !11540
  br i1 %tobool16, label %land.rhs, label %cleanup.loopexit, !dbg !11541

land.rhs:                                         ; preds = %while.cond
  %12 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 19), align 8, !dbg !11542
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11543
  %14 = load i32, i32* @sched_verbose, align 4, !dbg !11544
  %15 = load i32, i32* %cycle17, align 8, !dbg !11545
  call void @llvm.dbg.value(metadata i32* %sort_p, metadata !11523, metadata !DIExpression(DW_OP_deref)), !dbg !11524
  %call18 = call i32 %12(%struct._IO_FILE* %13, i32 %14, %struct.rtx_def* %insn, i32 %cond13, i32 %15, i32* nonnull %sort_p) #6, !dbg !11546
  %tobool19 = icmp eq i32 %call18, 0, !dbg !11541
  br i1 %tobool19, label %cleanup.loopexit, label %while.body, !dbg !11539

while.body:                                       ; preds = %land.rhs
  %16 = load i8*, i8** %state, align 8, !dbg !11547
  %17 = load i8*, i8** @curr_state, align 8, !dbg !11549
  %18 = load i64, i64* @dfa_state_size, align 8, !dbg !11550
  %call21 = call i8* @memcpy(i8* %16, i8* %17, i64 %18) #6, !dbg !11551
  call fastcc void @advance_one_cycle(%struct._fence* %fence) #7, !dbg !11552
  %19 = load i8*, i8** @curr_state, align 8, !dbg !11553
  %20 = load i8*, i8** %state, align 8, !dbg !11554
  %21 = load i64, i64* @dfa_state_size, align 8, !dbg !11555
  %call23 = call i8* @memcpy(i8* %19, i8* %20, i64 %21) #6, !dbg !11556
  call void @llvm.dbg.value(metadata i8 1, metadata !11522, metadata !DIExpression()), !dbg !11524
  %.pre = load i32, i32* %sort_p, align 4, !dbg !11540
  br label %while.cond, !dbg !11539, !llvm.loop !11557

cleanup.loopexit:                                 ; preds = %while.cond, %land.rhs
  %res.0.lcssa = phi i8 [ %res.0, %while.cond ], [ %res.0, %land.rhs ], !dbg !11524
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !11522, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !11522, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !11522, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !11522, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !11522, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i8 %res.0.lcssa, metadata !11522, metadata !DIExpression()), !dbg !11524
  br label %cleanup, !dbg !11559

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end12
  %retval.0 = phi i8 [ 0, %cond.end12 ], [ %res.0.lcssa, %cleanup.loopexit ], !dbg !11524
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8, !dbg !11559
  ret i8 %retval.0, !dbg !11559
}

; Function Attrs: nounwind uwtable
define internal fastcc void @advance_one_cycle(%struct._fence* %fence) unnamed_addr #5 !dbg !11560 {
entry:
  %insn = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !11564, metadata !DIExpression()), !dbg !11575
  %0 = bitcast %struct.rtx_def** %insn to i8*, !dbg !11576
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !11576
  %state = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 1, !dbg !11577
  %1 = load i8*, i8** %state, align 8, !dbg !11577
  tail call void @advance_state(i8* %1) #6, !dbg !11578
  %cycle1 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 2, !dbg !11579
  %2 = load i32, i32* %cycle1, align 8, !dbg !11580
  %inc = add nsw i32 %2, 1, !dbg !11580
  store i32 %inc, i32* %cycle1, align 8, !dbg !11580
  call void @llvm.dbg.value(metadata i32 %inc, metadata !11566, metadata !DIExpression()), !dbg !11575
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 3, !dbg !11581
  store i32 0, i32* %cycle_issued_insns, align 4, !dbg !11582
  %starts_cycle_p = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 13, !dbg !11583
  %bf.load = load i8, i8* %starts_cycle_p, align 8, !dbg !11584
  %bf.set = or i8 %bf.load, 4, !dbg !11584
  store i8 %bf.set, i8* %starts_cycle_p, align 8, !dbg !11584
  %3 = load i32, i32* @issue_rate, align 4, !dbg !11585
  store i32 %3, i32* @can_issue_more, align 4, !dbg !11586
  %issue_more = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 11, !dbg !11587
  store i32 %3, i32* %issue_more, align 8, !dbg !11588
  call void @llvm.dbg.value(metadata i32 0, metadata !11565, metadata !DIExpression()), !dbg !11575
  %executing_insns = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 7, !dbg !11589
  %dc = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 5, !dbg !11592
  br label %for.cond.outer, !dbg !11596

for.cond.outer:                                   ; preds = %if.end, %entry
  %i.0.ph = phi i32 [ %inc27, %if.end ], [ 0, %entry ]
  br label %for.cond, !dbg !11597

for.cond:                                         ; preds = %for.cond.outer, %cond.end24
  call void @llvm.dbg.value(metadata i32 %i.0.ph, metadata !11565, metadata !DIExpression()), !dbg !11575
  %4 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %executing_insns, align 8, !dbg !11598
  %tobool = icmp eq %struct.VEC_rtx_gc* %4, null, !dbg !11598
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11598

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %4, i64 0, i32 0, !dbg !11598
  br label %cond.end, !dbg !11598

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !11598
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn, metadata !11567, metadata !DIExpression(DW_OP_deref)), !dbg !11575
  %call = call fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond, i32 %i.0.ph, %struct.rtx_def** nonnull %insn) #7, !dbg !11598
  %tobool3 = icmp eq i32 %call, 0, !dbg !11597
  br i1 %tobool3, label %for.end, label %for.body, !dbg !11597

for.body:                                         ; preds = %cond.end
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11599
  %base6 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i64 0, i32 0, !dbg !11599
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11599
  %base12 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i64 0, i32 0, !dbg !11599
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !11599
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !11567, metadata !DIExpression()), !dbg !11575
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11599
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11599
  %8 = load i32, i32* %rt_int, align 8, !dbg !11599
  %call16 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base12, i32 %8) #7, !dbg !11599
  %call17 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base6, i32 %call16) #7, !dbg !11599
  %ready_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call17, i64 0, i32 11, !dbg !11599
  %9 = load i32, i32* %ready_cycle, align 4, !dbg !11599
  %cmp = icmp sgt i32 %9, %2, !dbg !11600
  br i1 %cmp, label %if.end, label %if.then, !dbg !11601

if.then:                                          ; preds = %for.body
  %10 = load %struct.deps*, %struct.deps** %dc, align 8, !dbg !11602
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !11603
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !11567, metadata !DIExpression()), !dbg !11575
  call void @remove_from_deps(%struct.deps* %10, %struct.rtx_def* %11) #6, !dbg !11604
  %12 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %executing_insns, align 8, !dbg !11605
  %tobool19 = icmp eq %struct.VEC_rtx_gc* %12, null, !dbg !11605
  br i1 %tobool19, label %cond.end24, label %cond.true20, !dbg !11605

cond.true20:                                      ; preds = %if.then
  %base22 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %12, i64 0, i32 0, !dbg !11605
  br label %cond.end24, !dbg !11605

cond.end24:                                       ; preds = %if.then, %cond.true20
  %cond25 = phi %struct.VEC_rtx_base* [ %base22, %cond.true20 ], [ null, %if.then ], !dbg !11605
  %call26 = call fastcc %struct.rtx_def* @VEC_rtx_base_unordered_remove(%struct.VEC_rtx_base* %cond25, i32 %i.0.ph) #7, !dbg !11605
  br label %for.cond, !dbg !11606, !llvm.loop !11607

if.end:                                           ; preds = %for.body
  %inc27 = add i32 %i.0.ph, 1, !dbg !11609
  call void @llvm.dbg.value(metadata i32 %inc27, metadata !11565, metadata !DIExpression()), !dbg !11575
  br label %for.cond.outer, !dbg !11610, !llvm.loop !11607

for.end:                                          ; preds = %cond.end
  %13 = load i32, i32* @sched_verbose, align 4, !dbg !11611
  %cmp28 = icmp sgt i32 %13, 1, !dbg !11612
  br i1 %cmp28, label %do.body, label %if.end46, !dbg !11613

do.body:                                          ; preds = %for.end
  %14 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !11614
  %tobool30 = icmp eq i8 %14, 0, !dbg !11614
  br i1 %tobool30, label %if.else, label %do.body32, !dbg !11615

do.body32:                                        ; preds = %do.body
  %15 = load i32, i32* %cycle1, align 8, !dbg !11616
  %call34 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.74, i64 0, i64 0), i32 %15) #6, !dbg !11616
  %mul = shl nsw i32 %call34, 1, !dbg !11616
  %add = or i32 %mul, 1, !dbg !11616
  call void @llvm.dbg.value(metadata i32 %add, metadata !11568, metadata !DIExpression()), !dbg !11617
  %conv = sext i32 %add to i64, !dbg !11616
  %16 = alloca i8, i64 %conv, align 16, !dbg !11616
  call void @llvm.dbg.value(metadata i8* %16, metadata !11574, metadata !DIExpression()), !dbg !11617
  %17 = load i32, i32* %cycle1, align 8, !dbg !11616
  %call38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %16, i64 %conv, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.74, i64 0, i64 0), i32 %17) #6, !dbg !11616
  call void @sel_prepare_string_for_dot_label(i8* nonnull %16) #6, !dbg !11616
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11616
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %16) #6, !dbg !11616
  br label %do.end44, !dbg !11616

if.else:                                          ; preds = %do.body
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11614
  %20 = load i32, i32* %cycle1, align 8, !dbg !11614
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.74, i64 0, i64 0), i32 %20) #6, !dbg !11614
  br label %do.end44

do.end44:                                         ; preds = %if.else, %do.body32
  %21 = load i8*, i8** %state, align 8, !dbg !11618
  call fastcc void @debug_state(i8* %21) #7, !dbg !11619
  br label %if.end46, !dbg !11620

if.end46:                                         ; preds = %do.end44, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !11621
  ret void, !dbg !11621
}

declare dso_local void @advance_state(i8*) local_unnamed_addr #2

declare dso_local void @remove_from_deps(%struct.deps*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @VEC_rtx_base_unordered_remove(%struct.VEC_rtx_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !11622 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !11627, metadata !DIExpression()), !dbg !11631
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !11628, metadata !DIExpression()), !dbg !11631
  %idxprom = zext i32 %ix_ to i64, !dbg !11632
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11632
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx, metadata !11629, metadata !DIExpression()), !dbg !11631
  %0 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !11632
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !11630, metadata !DIExpression()), !dbg !11631
  %num2 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !11632
  %1 = load i32, i32* %num2, align 8, !dbg !11632
  %dec = add i32 %1, -1, !dbg !11632
  store i32 %dec, i32* %num2, align 8, !dbg !11632
  %idxprom3 = zext i32 %dec to i64, !dbg !11632
  %arrayidx4 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom3, !dbg !11632
  %2 = bitcast %struct.rtx_def** %arrayidx4 to i64*, !dbg !11632
  %3 = load i64, i64* %2, align 8, !dbg !11632
  %4 = bitcast %struct.rtx_def** %arrayidx to i64*, !dbg !11632
  store i64 %3, i64* %4, align 8, !dbg !11632
  ret %struct.rtx_def* %0, !dbg !11632
}

; Function Attrs: nounwind uwtable
define internal fastcc void @debug_state(i8* %state) unnamed_addr #5 !dbg !11633 {
entry:
  call void @llvm.dbg.value(metadata i8* %state, metadata !11637, metadata !DIExpression()), !dbg !11658
  %0 = load i64, i64* @dfa_state_size, align 8, !dbg !11659
  %conv = trunc i64 %0 to i32, !dbg !11659
  call void @llvm.dbg.value(metadata i32 %conv, metadata !11640, metadata !DIExpression()), !dbg !11658
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !11660
  %tobool = icmp eq i8 %1, 0, !dbg !11660
  br i1 %tobool, label %if.else, label %do.body1, !dbg !11661

do.body1:                                         ; preds = %entry
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32 %conv) #6, !dbg !11662
  %mul = shl nsw i32 %call, 1, !dbg !11662
  %add = or i32 %mul, 1, !dbg !11662
  call void @llvm.dbg.value(metadata i32 %add, metadata !11641, metadata !DIExpression()), !dbg !11663
  %conv2 = sext i32 %add to i64, !dbg !11662
  %2 = alloca i8, i64 %conv2, align 16, !dbg !11662
  call void @llvm.dbg.value(metadata i8* %2, metadata !11645, metadata !DIExpression()), !dbg !11663
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %2, i64 %conv2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32 %conv) #6, !dbg !11662
  call void @sel_prepare_string_for_dot_label(i8* nonnull %2) #6, !dbg !11662
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11662
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %2) #6, !dbg !11662
  br label %do.end9, !dbg !11662

if.else:                                          ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11660
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32 %conv) #6, !dbg !11660
  br label %do.end9

do.end9:                                          ; preds = %if.else, %do.body1
  call void @llvm.dbg.value(metadata i32 0, metadata !11639, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i8* %state, metadata !11638, metadata !DIExpression()), !dbg !11658
  %wide.trip.count = and i64 %0, 4294967295, !dbg !11664
  br label %for.cond, !dbg !11665

for.cond:                                         ; preds = %for.inc, %do.end9
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %do.end9 ], !dbg !11666
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11639, metadata !DIExpression()), !dbg !11658
  %5 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !11658
  %tobool12 = icmp ne i8 %5, 0, !dbg !11658
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !11664
  br i1 %exitcond, label %do.body39, label %do.body11, !dbg !11667

do.body11:                                        ; preds = %for.cond
  br i1 %tobool12, label %do.body14, label %if.else31, !dbg !11668

do.body14:                                        ; preds = %do.body11
  %arrayidx = getelementptr inbounds i8, i8* %state, i64 %indvars.iv, !dbg !11669
  %6 = load i8, i8* %arrayidx, align 1, !dbg !11669
  %conv16 = zext i8 %6 to i32, !dbg !11669
  %call17 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), i32 %conv16) #6, !dbg !11669
  %mul18 = shl nsw i32 %call17, 1, !dbg !11669
  %add19 = or i32 %mul18, 1, !dbg !11669
  call void @llvm.dbg.value(metadata i32 %add19, metadata !11646, metadata !DIExpression()), !dbg !11670
  %conv21 = sext i32 %add19 to i64, !dbg !11669
  %7 = alloca i8, i64 %conv21, align 16, !dbg !11669
  call void @llvm.dbg.value(metadata i8* %7, metadata !11652, metadata !DIExpression()), !dbg !11670
  %8 = load i8, i8* %arrayidx, align 1, !dbg !11669
  %conv26 = zext i8 %8 to i32, !dbg !11669
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %7, i64 %conv21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), i32 %conv26) #6, !dbg !11669
  call void @sel_prepare_string_for_dot_label(i8* nonnull %7) #6, !dbg !11669
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11669
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %7) #6, !dbg !11669
  br label %for.inc, !dbg !11669

if.else31:                                        ; preds = %do.body11
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11671
  %arrayidx33 = getelementptr inbounds i8, i8* %state, i64 %indvars.iv, !dbg !11671
  %11 = load i8, i8* %arrayidx33, align 1, !dbg !11671
  %conv34 = zext i8 %11 to i32, !dbg !11671
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), i32 %conv34) #6, !dbg !11671
  br label %for.inc

for.inc:                                          ; preds = %do.body14, %if.else31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !11672
  br label %for.cond, !dbg !11673, !llvm.loop !11674

do.body39:                                        ; preds = %for.cond
  %tobool12.lcssa = phi i1 [ %tobool12, %for.cond ], !dbg !11658
  br i1 %tobool12.lcssa, label %do.body42, label %if.else55, !dbg !11676

do.body42:                                        ; preds = %do.body39
  %call44 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !11677
  %mul45 = shl nsw i32 %call44, 1, !dbg !11677
  %add46 = or i32 %mul45, 1, !dbg !11677
  call void @llvm.dbg.value(metadata i32 %add46, metadata !11653, metadata !DIExpression()), !dbg !11678
  %conv48 = sext i32 %add46 to i64, !dbg !11677
  %12 = alloca i8, i64 %conv48, align 16, !dbg !11677
  call void @llvm.dbg.value(metadata i8* %12, metadata !11657, metadata !DIExpression()), !dbg !11678
  %call51 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %12, i64 %conv48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !11677
  call void @sel_prepare_string_for_dot_label(i8* nonnull %12) #6, !dbg !11677
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11677
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %12) #6, !dbg !11677
  br label %do.end59, !dbg !11677

if.else55:                                        ; preds = %do.body39
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11679
  %call56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !11679
  br label %do.end59

do.end59:                                         ; preds = %if.else55, %do.body42
  ret void, !dbg !11680
}

declare dso_local zeroext i8 @vinsn_cond_branch_p(%struct.vinsn_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @move_cond_jump(%struct.rtx_def* %insn, %struct._bnd* %bnd) unnamed_addr #5 !dbg !11681 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11685, metadata !DIExpression()), !dbg !11700
  call void @llvm.dbg.value(metadata %struct._bnd* %bnd, metadata !11686, metadata !DIExpression()), !dbg !11700
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !11701
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !11701
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !11701
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !11688, metadata !DIExpression()), !dbg !11700
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %bnd, i64 0, i32 0, !dbg !11702
  %1 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !11702
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 1, !dbg !11702
  %rt_bb4 = bitcast %struct.object_block** %arrayidx3 to %struct.basic_block_def**, !dbg !11702
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb4, align 8, !dbg !11702
  %cmp = icmp eq %struct.basic_block_def* %0, %2, !dbg !11702
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11702

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4902, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11702
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !11703
  br label %cond.end, !dbg !11702

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi %struct.rtx_def* [ %1, %entry ], [ %.pre, %cond.true ], !dbg !11703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !11692, metadata !DIExpression()), !dbg !11700
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11704
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !11704
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11704
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !11691, metadata !DIExpression()), !dbg !11700
  store %struct.rtx_def* %insn, %struct.rtx_def** %to, align 8, !dbg !11705
  %call = tail call %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def* %0) #6, !dbg !11706
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !11687, metadata !DIExpression()), !dbg !11700
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !11707
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !11707
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %6, metadata !11689, metadata !DIExpression()), !dbg !11700
  %tobool = icmp eq %struct.basic_block_def* %6, null, !dbg !11708
  br i1 %tobool, label %cond.true10, label %cond.end12, !dbg !11708

cond.true10:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4913, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11708
  br label %cond.end12, !dbg !11708

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %call14 = tail call %struct.basic_block_def* @sel_split_edge(%struct.edge_def* %call) #6, !dbg !11709
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call14, metadata !11690, metadata !DIExpression()), !dbg !11700
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call14, i64 0, i32 6, !dbg !11710
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !11710
  %cmp15 = icmp eq %struct.basic_block_def* %7, %6, !dbg !11710
  br i1 %cmp15, label %land.lhs.true, label %cond.true18, !dbg !11710

land.lhs.true:                                    ; preds = %cond.end12
  %next_bb16 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 6, !dbg !11710
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb16, align 8, !dbg !11710
  %cmp17 = icmp eq %struct.basic_block_def* %8, %call14, !dbg !11710
  br i1 %cmp17, label %cond.end20, label %cond.true18, !dbg !11710

cond.true18:                                      ; preds = %land.lhs.true, %cond.end12
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11710
  br label %cond.end20, !dbg !11710

cond.end20:                                       ; preds = %land.lhs.true, %cond.true18
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !11711
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !11711
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !11711
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !11711
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !11711
  %cmp22 = icmp eq %struct.rtx_def* %10, %insn, !dbg !11711
  br i1 %cmp22, label %cond.end25, label %cond.true23, !dbg !11711

cond.true23:                                      ; preds = %cond.end20
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4920, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11711
  br label %cond.end25, !dbg !11711

cond.end25:                                       ; preds = %cond.end20, %cond.true23
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !11693, metadata !DIExpression()), !dbg !11700
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call14, i64 0, i32 9, !dbg !11712
  br label %for.cond, !dbg !11716

for.cond:                                         ; preds = %for.body, %cond.end25
  %link.0 = phi %struct.rtx_def* [ %3, %cond.end25 ], [ %16, %for.body ], !dbg !11717
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !11693, metadata !DIExpression()), !dbg !11700
  %cmp27 = icmp eq %struct.rtx_def* %link.0, %insn, !dbg !11718
  br i1 %cmp27, label %for.end, label %for.body, !dbg !11719

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %index, align 8, !dbg !11720
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11721
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %12, i64 0, i32 0, !dbg !11721
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11721
  %base35 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !11721
  %arrayidx41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11721
  %rt_int = bitcast %union.rtunion_def* %arrayidx41 to i32*, !dbg !11721
  %14 = load i32, i32* %rt_int, align 8, !dbg !11721
  %call42 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base35, i32 %14) #7, !dbg !11721
  %call43 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call42) #7, !dbg !11721
  %orig_bb_index = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call43, i64 0, i32 0, i32 6, !dbg !11721
  store i32 %11, i32* %orig_bb_index, align 4, !dbg !11722
  tail call void @df_insn_change_bb(%struct.rtx_def* %link.0, %struct.basic_block_def* %call14) #6, !dbg !11723
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !11724
  %rt_rtx47 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !11724
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !11724
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !11693, metadata !DIExpression()), !dbg !11700
  br label %for.cond, !dbg !11725, !llvm.loop !11726

for.end:                                          ; preds = %for.cond
  %17 = bitcast %union.rtunion_def* %4 to i64*, !dbg !11728
  %18 = load i64, i64* %17, align 8, !dbg !11728
  %il52 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call14, i64 0, i32 7, !dbg !11729
  %rtl53 = bitcast %union.basic_block_il_dependent* %il52 to %struct.rtl_bb_info**, !dbg !11729
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl53, align 8, !dbg !11729
  %end_54 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i64 0, i32 1, !dbg !11729
  %20 = bitcast %struct.rtx_def** %end_54 to i64*, !dbg !11730
  store i64 %18, i64* %20, align 8, !dbg !11730
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11731
  %rt_rtx58 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !11731
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !11731
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !11731
  %rt_rtx62 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !11731
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx62, align 8, !dbg !11732
  %24 = bitcast %union.rtunion_def* %21 to i64*, !dbg !11733
  %25 = load i64, i64* %24, align 8, !dbg !11733
  store i64 %25, i64* %17, align 8, !dbg !11734
  %26 = bitcast %union.basic_block_il_dependent* %il52 to i32***, !dbg !11735
  %27 = load i32**, i32*** %26, align 8, !dbg !11735
  %28 = load i32*, i32** %27, align 8, !dbg !11735
  %bf.load = load i32, i32* %28, align 8, !dbg !11735
  %bf.clear = and i32 %bf.load, 65535, !dbg !11735
  %cmp73 = icmp eq i32 %bf.clear, 13, !dbg !11735
  %29 = ptrtoint i32* %28 to i64, !dbg !11735
  br i1 %cmp73, label %land.lhs.true74, label %cond.true83, !dbg !11735

land.lhs.true74:                                  ; preds = %for.end
  %30 = getelementptr inbounds i32, i32* %28, i64 12, !dbg !11735
  %31 = load i32, i32* %30, align 8, !dbg !11735
  %cmp82 = icmp eq i32 %31, 10, !dbg !11735
  br i1 %cmp82, label %land.lhs.true74.cond.end85_crit_edge, label %cond.true83, !dbg !11735

land.lhs.true74.cond.end85_crit_edge:             ; preds = %land.lhs.true74
  br label %cond.end85, !dbg !11735

cond.true83:                                      ; preds = %land.lhs.true74, %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4937, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11735
  %.phi.trans.insert = bitcast %union.basic_block_il_dependent* %il52 to i64**, !dbg !11700
  %.pre1 = load i64*, i64** %.phi.trans.insert, align 8, !dbg !11736
  %.pre2 = load i64, i64* %.pre1, align 8, !dbg !11736
  br label %cond.end85, !dbg !11735

cond.end85:                                       ; preds = %land.lhs.true74.cond.end85_crit_edge, %cond.true83
  %32 = phi i64 [ %29, %land.lhs.true74.cond.end85_crit_edge ], [ %.pre2, %cond.true83 ], !dbg !11736
  store i64 %32, i64* %24, align 8, !dbg !11737
  %33 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl53, align 8, !dbg !11738
  %head_96 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %33, i64 0, i32 0, !dbg !11738
  %34 = load %struct.rtx_def*, %struct.rtx_def** %head_96, align 8, !dbg !11738
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !11738
  %36 = bitcast %union.rtunion_def* %35 to i64*, !dbg !11738
  %37 = load i64, i64* %36, align 8, !dbg !11738
  %38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !11739
  %39 = bitcast %union.rtunion_def* %38 to i64*, !dbg !11740
  store i64 %37, i64* %39, align 8, !dbg !11740
  %40 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl53, align 8, !dbg !11741
  %head_107 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %40, i64 0, i32 0, !dbg !11741
  %41 = load %struct.rtx_def*, %struct.rtx_def** %head_107, align 8, !dbg !11741
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !11741
  %rt_rtx111 = bitcast %union.rtunion_def* %42 to %struct.rtx_def**, !dbg !11741
  store %struct.rtx_def* %3, %struct.rtx_def** %rt_rtx111, align 8, !dbg !11742
  %rt_rtx115 = bitcast %union.rtunion_def* %38 to %struct.rtx_def**, !dbg !11743
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx115, align 8, !dbg !11743
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11743
  %rt_rtx119 = bitcast %union.rtunion_def* %44 to %struct.rtx_def**, !dbg !11743
  store %struct.rtx_def* %5, %struct.rtx_def** %rt_rtx119, align 8, !dbg !11744
  %call120 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %0) #6, !dbg !11745
  %tobool121 = icmp eq i8 %call120, 0, !dbg !11745
  br i1 %tobool121, label %land.lhs.true122, label %cond.true125, !dbg !11745

land.lhs.true122:                                 ; preds = %cond.end85
  %call123 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %call14) #6, !dbg !11745
  %tobool124 = icmp eq i8 %call123, 0, !dbg !11745
  br i1 %tobool124, label %cond.end127, label %cond.true125, !dbg !11745

cond.true125:                                     ; preds = %land.lhs.true122, %cond.end85
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4944, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11745
  br label %cond.end127, !dbg !11745

cond.end127:                                      ; preds = %land.lhs.true122, %cond.true125
  %45 = load i32, i32* @global_level, align 4, !dbg !11746
  %46 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !11747
  %base131 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %46, i64 0, i32 0, !dbg !11747
  %47 = load i32, i32* %index, align 8, !dbg !11747
  %call136 = tail call fastcc %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %base131, i32 %47) #7, !dbg !11747
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call136, i64 0, i32 2, !dbg !11747
  store i32 %45, i32* %av_level, align 8, !dbg !11748
  %48 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !11749
  %base139 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %48, i64 0, i32 0, !dbg !11749
  %49 = load i32, i32* %index, align 8, !dbg !11749
  %call144 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base139, i32 %49) #7, !dbg !11749
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call144, i64 0, i32 0, !dbg !11749
  %50 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !11749
  %cmp145 = icmp eq %struct.bitmap_head_def* %50, null, !dbg !11749
  br i1 %cmp145, label %cond.end148, label %cond.true146, !dbg !11749

cond.true146:                                     ; preds = %cond.end127
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4950, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11749
  br label %cond.end148, !dbg !11749

cond.end148:                                      ; preds = %cond.end127, %cond.true146
  %call150 = tail call %struct.bitmap_head_def* @get_clear_regset_from_pool() #6, !dbg !11750
  %51 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !11751
  %base153 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %51, i64 0, i32 0, !dbg !11751
  %52 = load i32, i32* %index, align 8, !dbg !11751
  %call158 = tail call fastcc %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %base153, i32 %52) #7, !dbg !11751
  %lv_set159 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call158, i64 0, i32 0, !dbg !11751
  store %struct.bitmap_head_def* %call150, %struct.bitmap_head_def** %lv_set159, align 8, !dbg !11752
  %call160 = tail call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %call14) #6, !dbg !11753
  tail call fastcc void @update_data_sets(%struct.rtx_def* %call160) #7, !dbg !11754
  tail call fastcc void @update_data_sets(%struct.rtx_def* %insn) #7, !dbg !11755
  %53 = load i32, i32* @sched_verbose, align 4, !dbg !11756
  %cmp161 = icmp sgt i32 %53, 3, !dbg !11757
  br i1 %cmp161, label %do.body, label %if.end185, !dbg !11758

do.body:                                          ; preds = %cond.end148
  %54 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !11759
  %tobool162 = icmp eq i8 %54, 0, !dbg !11759
  br i1 %tobool162, label %if.else, label %do.body164, !dbg !11760

do.body164:                                       ; preds = %do.body
  %arrayidx167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11761
  %rt_int168 = bitcast %union.rtunion_def* %arrayidx167 to i32*, !dbg !11761
  %55 = load i32, i32* %rt_int168, align 8, !dbg !11761
  %call169 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i64 0, i64 0), i32 %55) #6, !dbg !11761
  %mul = shl nsw i32 %call169, 1, !dbg !11761
  %add = or i32 %mul, 1, !dbg !11761
  call void @llvm.dbg.value(metadata i32 %add, metadata !11694, metadata !DIExpression()), !dbg !11762
  %conv = sext i32 %add to i64, !dbg !11761
  %56 = alloca i8, i64 %conv, align 16, !dbg !11761
  call void @llvm.dbg.value(metadata i8* %56, metadata !11699, metadata !DIExpression()), !dbg !11762
  %57 = load i32, i32* %rt_int168, align 8, !dbg !11761
  %call176 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %56, i64 %conv, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i64 0, i64 0), i32 %57) #6, !dbg !11761
  call void @sel_prepare_string_for_dot_label(i8* nonnull %56) #6, !dbg !11761
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11761
  %call177 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %56) #6, !dbg !11761
  br label %if.end185, !dbg !11761

if.else:                                          ; preds = %do.body
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11759
  %arrayidx180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11759
  %rt_int181 = bitcast %union.rtunion_def* %arrayidx180 to i32*, !dbg !11759
  %60 = load i32, i32* %rt_int181, align 8, !dbg !11759
  %call182 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i64 0, i64 0), i32 %60) #6, !dbg !11759
  br label %if.end185

if.end185:                                        ; preds = %do.body164, %if.else, %cond.end148
  ret void, !dbg !11763
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @prepare_place_to_insert(%struct._bnd* %bnd) unnamed_addr #5 !dbg !11764 {
entry:
  call void @llvm.dbg.value(metadata %struct._bnd* %bnd, metadata !11768, metadata !DIExpression()), !dbg !11775
  %ptr = getelementptr inbounds %struct._bnd, %struct._bnd* %bnd, i64 0, i32 1, !dbg !11776
  %0 = load %struct._list_node*, %struct._list_node** %ptr, align 8, !dbg !11776
  %tobool = icmp eq %struct._list_node* %0, null, !dbg !11776
  br i1 %tobool, label %if.end13, label %if.then, !dbg !11777

if.then:                                          ; preds = %entry
  %x = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i64 0, i32 1, i32 0, i32 0, !dbg !11778
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !11778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !11769, metadata !DIExpression()), !dbg !11775
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !11779
  %bf.load = load i32, i32* %2, align 8, !dbg !11779
  %bf.clear = and i32 %bf.load, 65535, !dbg !11779
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !11779
  br i1 %cmp, label %if.then2, label %if.end13, !dbg !11780

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct._list_node* %0, metadata !11770, metadata !DIExpression()), !dbg !11781
  br label %while.cond, !dbg !11782

while.cond:                                       ; preds = %land.rhs, %if.then2
  %l.0 = phi %struct._list_node* [ %0, %if.then2 ], [ %3, %land.rhs ], !dbg !11781
  call void @llvm.dbg.value(metadata %struct._list_node* %l.0, metadata !11770, metadata !DIExpression()), !dbg !11781
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %l.0, i64 0, i32 0, !dbg !11783
  %3 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !11783
  call void @llvm.dbg.value(metadata %struct._list_node* %3, metadata !11770, metadata !DIExpression()), !dbg !11781
  %cond = icmp eq %struct._list_node* %3, null, !dbg !11784
  br i1 %cond, label %if.then11.loopexit, label %land.rhs, !dbg !11784

land.rhs:                                         ; preds = %while.cond
  %x6 = getelementptr inbounds %struct._list_node, %struct._list_node* %3, i64 0, i32 1, i32 0, i32 0, !dbg !11785
  %4 = bitcast %struct.rtx_def** %x6 to i32**, !dbg !11785
  %5 = load i32*, i32** %4, align 8, !dbg !11785
  %bf.load7 = load i32, i32* %5, align 8, !dbg !11785
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !11785
  %cmp9 = icmp eq i32 %bf.clear8, 7, !dbg !11785
  br i1 %cmp9, label %while.cond, label %while.end, !dbg !11782, !llvm.loop !11786

while.end:                                        ; preds = %land.rhs
  br label %if.end13, !dbg !11788

if.then11.loopexit:                               ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !11769, metadata !DIExpression()), !dbg !11775
  br label %if.end13, !dbg !11789

if.end13:                                         ; preds = %while.end, %entry, %if.then, %if.then11.loopexit
  %place_to_insert.2 = phi %struct.rtx_def* [ %1, %if.then ], [ %1, %while.end ], [ null, %if.then11.loopexit ], [ null, %entry ], !dbg !11791
  call void @llvm.dbg.value(metadata %struct.rtx_def* %place_to_insert.2, metadata !11769, metadata !DIExpression()), !dbg !11775
  %tobool14 = icmp eq %struct.rtx_def* %place_to_insert.2, null, !dbg !11792
  br i1 %tobool14, label %if.then15, label %if.end23, !dbg !11794

if.then15:                                        ; preds = %if.end13
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %bnd, i64 0, i32 0, !dbg !11795
  %6 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !11795
  %call = tail call %struct.rtx_def* @get_nop_from_pool(%struct.rtx_def* %6) #6, !dbg !11797
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !11769, metadata !DIExpression()), !dbg !11775
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !11798
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !11798
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !11798
  %8 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !11798
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 1, !dbg !11798
  %rt_bb21 = bitcast %struct.object_block** %arrayidx20 to %struct.basic_block_def**, !dbg !11798
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb21, align 8, !dbg !11798
  %cmp22 = icmp eq %struct.basic_block_def* %7, %9, !dbg !11798
  br i1 %cmp22, label %if.end23, label %cond.true, !dbg !11798

cond.true:                                        ; preds = %if.then15
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11798
  br label %if.end23, !dbg !11798

if.end23:                                         ; preds = %if.end13, %cond.true, %if.then15
  %place_to_insert.3 = phi %struct.rtx_def* [ %place_to_insert.2, %if.end13 ], [ %call, %if.then15 ], [ %call, %cond.true ], !dbg !11775
  call void @llvm.dbg.value(metadata %struct.rtx_def* %place_to_insert.3, metadata !11769, metadata !DIExpression()), !dbg !11775
  ret %struct.rtx_def* %place_to_insert.3, !dbg !11799
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @move_exprs_to_boundary(%struct._bnd* %bnd, %struct._expr* %expr_vliw, %struct._list_node* %expr_seq, %struct._expr* %c_expr) unnamed_addr #5 !dbg !11800 {
entry:
  %should_move = alloca i8, align 1
  %book_uid = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %uid = alloca i32, align 4
  %bi5 = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._bnd* %bnd, metadata !11804, metadata !DIExpression()), !dbg !11818
  call void @llvm.dbg.value(metadata %struct._expr* %expr_vliw, metadata !11805, metadata !DIExpression()), !dbg !11818
  call void @llvm.dbg.value(metadata %struct._list_node* %expr_seq, metadata !11806, metadata !DIExpression()), !dbg !11818
  call void @llvm.dbg.value(metadata %struct._expr* %c_expr, metadata !11807, metadata !DIExpression()), !dbg !11818
  call void @llvm.dbg.value(metadata i8* %should_move, metadata !11809, metadata !DIExpression(DW_OP_deref)), !dbg !11818
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %should_move) #8, !dbg !11819
  %0 = bitcast i32* %book_uid to i8*, !dbg !11820
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !11820
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !11821
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !11821
  %2 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !11822
  call void @llvm.dbg.value(metadata i32 %2, metadata !11812, metadata !DIExpression()), !dbg !11818
  %call = tail call i32 @get_max_uid() #6, !dbg !11823
  store i32 %call, i32* @max_uid_before_move_op, align 4, !dbg !11824
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !11825
  tail call void @bitmap_clear(%struct.bitmap_head_def* %3) #6, !dbg !11826
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_originators, align 8, !dbg !11827
  tail call void @bitmap_clear(%struct.bitmap_head_def* %4) #6, !dbg !11828
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %bnd, i64 0, i32 0, !dbg !11829
  %5 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !11829
  %call1 = tail call fastcc %struct.rtx_def* @get_dest_from_orig_ops(%struct._list_node* %expr_seq) #7, !dbg !11830
  call void @llvm.dbg.value(metadata i8* %should_move, metadata !11809, metadata !DIExpression(DW_OP_deref)), !dbg !11818
  %call2 = call fastcc zeroext i8 @move_op(%struct.rtx_def* %5, %struct._list_node* %expr_seq, %struct._expr* %expr_vliw, %struct.rtx_def* %call1, %struct._expr* %c_expr, i8* nonnull %should_move) #7, !dbg !11831
  call void @llvm.dbg.value(metadata i8 %call2, metadata !11808, metadata !DIExpression()), !dbg !11818
  %tobool = icmp eq i8 %call2, 0, !dbg !11832
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !11832

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11832
  br label %cond.end, !dbg !11832

cond.end:                                         ; preds = %entry, %cond.true
  %6 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !11833
  %cmp = icmp sgt i32 %6, %2, !dbg !11835
  br i1 %cmp, label %if.then, label %if.end, !dbg !11836

if.then:                                          ; preds = %cond.end
  %7 = load i32, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !11837
  %inc = add nsw i32 %7, 1, !dbg !11837
  store i32 %inc, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !11837
  br label %if.end, !dbg !11838

if.end:                                           ; preds = %if.then, %cond.end
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !11839
  call void @llvm.dbg.value(metadata i32* %book_uid, metadata !11810, metadata !DIExpression(DW_OP_deref)), !dbg !11818
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11811, metadata !DIExpression(DW_OP_deref)), !dbg !11818
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %8, i32 0, i32* nonnull %book_uid) #7, !dbg !11839
  %9 = bitcast i32* %uid to i8*, !dbg !11840
  %10 = bitcast %struct.bitmap_iterator* %bi5 to i8*, !dbg !11840
  br label %for.cond, !dbg !11839

for.cond:                                         ; preds = %for.end, %if.end
  call void @llvm.dbg.value(metadata i32* %book_uid, metadata !11810, metadata !DIExpression(DW_OP_deref)), !dbg !11818
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11811, metadata !DIExpression(DW_OP_deref)), !dbg !11818
  %call3 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %book_uid) #7, !dbg !11841
  %tobool4 = icmp eq i8 %call3, 0, !dbg !11839
  br i1 %tobool4, label %for.end107, label %for.body, !dbg !11839

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8, !dbg !11842
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8, !dbg !11843
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11844
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i64 0, i32 0, !dbg !11844
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11844
  %base13 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !11844
  %13 = load i32, i32* %book_uid, align 4, !dbg !11844
  call void @llvm.dbg.value(metadata i32 %13, metadata !11810, metadata !DIExpression()), !dbg !11818
  %call17 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base13, i32 %13) #7, !dbg !11844
  %call18 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call17) #7, !dbg !11844
  %originators = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call18, i64 0, i32 6, !dbg !11844
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators, align 8, !dbg !11844
  %tobool19 = icmp eq %struct.bitmap_head_def* %14, null, !dbg !11844
  br i1 %tobool19, label %if.then20, label %if.end37, !dbg !11846

if.then20:                                        ; preds = %for.body
  %call21 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !11847
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11848
  %base24 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i64 0, i32 0, !dbg !11848
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11848
  %base30 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !11848
  %17 = load i32, i32* %book_uid, align 4, !dbg !11848
  call void @llvm.dbg.value(metadata i32 %17, metadata !11810, metadata !DIExpression()), !dbg !11818
  %call34 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base30, i32 %17) #7, !dbg !11848
  %call35 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base24, i32 %call34) #7, !dbg !11848
  %originators36 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call35, i64 0, i32 6, !dbg !11848
  store %struct.bitmap_head_def* %call21, %struct.bitmap_head_def** %originators36, align 8, !dbg !11849
  br label %if.end37, !dbg !11848

if.end37:                                         ; preds = %for.body, %if.then20
  %18 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11850
  %base40 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %18, i64 0, i32 0, !dbg !11850
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11850
  %base46 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i64 0, i32 0, !dbg !11850
  %20 = load i32, i32* %book_uid, align 4, !dbg !11850
  call void @llvm.dbg.value(metadata i32 %20, metadata !11810, metadata !DIExpression()), !dbg !11818
  %call50 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base46, i32 %20) #7, !dbg !11850
  %call51 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base40, i32 %call50) #7, !dbg !11850
  %originators52 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call51, i64 0, i32 6, !dbg !11850
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators52, align 8, !dbg !11850
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_originators, align 8, !dbg !11851
  call void @bitmap_copy(%struct.bitmap_head_def* %21, %struct.bitmap_head_def* %22) #6, !dbg !11852
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_originators, align 8, !dbg !11853
  call void @llvm.dbg.value(metadata i32* %uid, metadata !11813, metadata !DIExpression(DW_OP_deref)), !dbg !11840
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi5, metadata !11817, metadata !DIExpression(DW_OP_deref)), !dbg !11840
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi5, %struct.bitmap_head_def* %23, i32 0, i32* nonnull %uid) #7, !dbg !11853
  br label %for.cond53, !dbg !11853

for.cond53:                                       ; preds = %for.inc, %if.end37
  call void @llvm.dbg.value(metadata i32* %uid, metadata !11813, metadata !DIExpression(DW_OP_deref)), !dbg !11840
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi5, metadata !11817, metadata !DIExpression(DW_OP_deref)), !dbg !11840
  %call54 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi5, i32* nonnull %uid) #7, !dbg !11855
  %tobool55 = icmp eq i8 %call54, 0, !dbg !11853
  br i1 %tobool55, label %for.end, label %for.body56, !dbg !11853

for.body56:                                       ; preds = %for.cond53
  %24 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11857
  %base59 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %24, i64 0, i32 0, !dbg !11857
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11857
  %base65 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %25, i64 0, i32 0, !dbg !11857
  %26 = load i32, i32* %uid, align 4, !dbg !11857
  call void @llvm.dbg.value(metadata i32 %26, metadata !11813, metadata !DIExpression()), !dbg !11840
  %call69 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base65, i32 %26) #7, !dbg !11857
  %call70 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base59, i32 %call69) #7, !dbg !11857
  %originators71 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call70, i64 0, i32 6, !dbg !11857
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators71, align 8, !dbg !11857
  %tobool72 = icmp eq %struct.bitmap_head_def* %27, null, !dbg !11857
  br i1 %tobool72, label %for.inc, label %if.then73, !dbg !11859

if.then73:                                        ; preds = %for.body56
  %28 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11860
  %base76 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %28, i64 0, i32 0, !dbg !11860
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11860
  %base82 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %29, i64 0, i32 0, !dbg !11860
  %30 = load i32, i32* %book_uid, align 4, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %30, metadata !11810, metadata !DIExpression()), !dbg !11818
  %call86 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base82, i32 %30) #7, !dbg !11860
  %call87 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base76, i32 %call86) #7, !dbg !11860
  %originators88 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call87, i64 0, i32 6, !dbg !11860
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators88, align 8, !dbg !11860
  %32 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11861
  %base91 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %32, i64 0, i32 0, !dbg !11861
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11861
  %base97 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %33, i64 0, i32 0, !dbg !11861
  %34 = load i32, i32* %uid, align 4, !dbg !11861
  call void @llvm.dbg.value(metadata i32 %34, metadata !11813, metadata !DIExpression()), !dbg !11840
  %call101 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base97, i32 %34) #7, !dbg !11861
  %call102 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base91, i32 %call101) #7, !dbg !11861
  %originators103 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call102, i64 0, i32 6, !dbg !11861
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators103, align 8, !dbg !11861
  %call104 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %31, %struct.bitmap_head_def* %35) #6, !dbg !11862
  br label %for.inc, !dbg !11862

for.inc:                                          ; preds = %for.body56, %if.then73
  call void @llvm.dbg.value(metadata i32* %uid, metadata !11813, metadata !DIExpression(DW_OP_deref)), !dbg !11840
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi5, metadata !11817, metadata !DIExpression(DW_OP_deref)), !dbg !11840
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi5, i32* nonnull %uid) #7, !dbg !11855
  br label %for.cond53, !dbg !11855, !llvm.loop !11863

for.end:                                          ; preds = %for.cond53
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8, !dbg !11865
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8, !dbg !11865
  call void @llvm.dbg.value(metadata i32* %book_uid, metadata !11810, metadata !DIExpression(DW_OP_deref)), !dbg !11818
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11811, metadata !DIExpression(DW_OP_deref)), !dbg !11818
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %book_uid) #7, !dbg !11841
  br label %for.cond, !dbg !11841, !llvm.loop !11866

for.end107:                                       ; preds = %for.cond
  %36 = load i8, i8* %should_move, align 1, !dbg !11868
  call void @llvm.dbg.value(metadata i8 %36, metadata !11809, metadata !DIExpression()), !dbg !11818
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !11869
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !11869
  call void @llvm.dbg.value(metadata i8* %should_move, metadata !11809, metadata !DIExpression(DW_OP_deref)), !dbg !11818
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %should_move) #8, !dbg !11869
  ret i8 %36, !dbg !11870
}

declare dso_local %struct.rtx_def* @sel_move_insn(%struct._expr*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @return_nop_to_pool(%struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_temp_moveop_nops(i8 zeroext %full_tidying) unnamed_addr #5 !dbg !11871 {
entry:
  %insn = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata i8 %full_tidying, metadata !11873, metadata !DIExpression()), !dbg !11876
  %0 = bitcast %struct.rtx_def** %insn to i8*, !dbg !11877
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !11877
  call void @llvm.dbg.value(metadata i32 0, metadata !11874, metadata !DIExpression()), !dbg !11876
  br label %for.cond, !dbg !11878

for.cond:                                         ; preds = %cond.end4, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cond.end4 ], !dbg !11880
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !11874, metadata !DIExpression()), !dbg !11876
  %1 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !11881
  %base = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %1, i64 0, i32 0, !dbg !11881
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn, metadata !11875, metadata !DIExpression(DW_OP_deref)), !dbg !11876
  %call = call fastcc i32 @VEC_insn_t_base_iterate(%struct.VEC_insn_t_base* %base, i32 %i.0, %struct.rtx_def** nonnull %insn) #7, !dbg !11881
  %tobool1 = icmp eq i32 %call, 0, !dbg !11883
  br i1 %tobool1, label %for.end, label %for.body, !dbg !11883

for.body:                                         ; preds = %for.cond
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !11884
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !11875, metadata !DIExpression()), !dbg !11876
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, !dbg !11884
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !11884
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !11884
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11884
  %5 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !11884
  %cmp = icmp eq %struct.rtx_def* %4, %5, !dbg !11884
  br i1 %cmp, label %cond.end4, label %cond.true2, !dbg !11884

cond.true2:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4972, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11884
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !11886
  br label %cond.end4, !dbg !11884

cond.end4:                                        ; preds = %for.body, %cond.true2
  %6 = phi %struct.rtx_def* [ %2, %for.body ], [ %.pre, %cond.true2 ], !dbg !11886
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !11875, metadata !DIExpression()), !dbg !11876
  call void @return_nop_to_pool(%struct.rtx_def* %6, i8 zeroext %full_tidying) #6, !dbg !11887
  %inc = add nuw nsw i32 %i.0, 1, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %inc, metadata !11874, metadata !DIExpression()), !dbg !11876
  br label %for.cond, !dbg !11889, !llvm.loop !11890

for.end:                                          ; preds = %for.cond
  %7 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !11892
  %base8 = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %7, i64 0, i32 0, !dbg !11892
  %call12 = call fastcc i32 @VEC_insn_t_base_length(%struct.VEC_insn_t_base* %base8) #7, !dbg !11892
  %cmp13 = icmp eq i32 %call12, 0, !dbg !11894
  br i1 %cmp13, label %if.end, label %if.then, !dbg !11895

if.then:                                          ; preds = %for.end
  %8 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !11896
  %base16 = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %8, i64 0, i32 0, !dbg !11896
  %call26 = call fastcc i32 @VEC_insn_t_base_length(%struct.VEC_insn_t_base* %base16) #7, !dbg !11896
  call fastcc void @VEC_insn_t_base_block_remove(%struct.VEC_insn_t_base* %base16, i32 0, i32 %call26) #7, !dbg !11896
  br label %if.end, !dbg !11896

if.end:                                           ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !11897
  ret void, !dbg !11897
}

declare dso_local %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @sel_split_edge(%struct.edge_def*) local_unnamed_addr #2

declare dso_local void @df_insn_change_bb(%struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @move_op(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, %struct._expr* %expr_vliw, %struct.rtx_def* %dest, %struct._expr* %c_expr, i8* %should_move) unnamed_addr #5 !dbg !11898 {
entry:
  %sparams = alloca %struct.moveop_static_params, align 8
  %lparams = alloca %struct.cmpd_local_params, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !11902, metadata !DIExpression()), !dbg !11911
  call void @llvm.dbg.value(metadata %struct._list_node* %orig_ops, metadata !11903, metadata !DIExpression()), !dbg !11911
  call void @llvm.dbg.value(metadata %struct._expr* %expr_vliw, metadata !11904, metadata !DIExpression()), !dbg !11911
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !11905, metadata !DIExpression()), !dbg !11911
  call void @llvm.dbg.value(metadata %struct._expr* %c_expr, metadata !11906, metadata !DIExpression()), !dbg !11911
  call void @llvm.dbg.value(metadata i8* %should_move, metadata !11907, metadata !DIExpression()), !dbg !11911
  %0 = bitcast %struct.moveop_static_params* %sparams to i8*, !dbg !11912
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !11912
  %1 = bitcast %struct.cmpd_local_params* %lparams to i8*, !dbg !11913
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1) #8, !dbg !11913
  %dest1 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %sparams, i64 0, i32 0, !dbg !11914
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest1, align 8, !dbg !11915
  %c_expr2 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %sparams, i64 0, i32 1, !dbg !11916
  store %struct._expr* %c_expr, %struct._expr** %c_expr2, align 8, !dbg !11917
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr_vliw, i64 0, i32 0, !dbg !11918
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11918
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %2, i64 0, i32 0, !dbg !11918
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !11918
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11918
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11918
  %4 = load i32, i32* %rt_int, align 8, !dbg !11918
  %uid = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %sparams, i64 0, i32 2, !dbg !11919
  store i32 %4, i32* %uid, align 8, !dbg !11920
  %was_renamed = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %sparams, i64 0, i32 3, !dbg !11921
  store i8 0, i8* %was_renamed, align 4, !dbg !11922
  %e1 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i64 0, i32 0, !dbg !11923
  store %struct.edge_def* null, %struct.edge_def** %e1, align 8, !dbg !11924
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !11925
  tail call void @bitmap_clear(%struct.bitmap_head_def* %5) #6, !dbg !11926
  store %struct.code_motion_path_driver_info_def* @move_op_hooks, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !11927
  call void @llvm.dbg.value(metadata %struct.cmpd_local_params* %lparams, metadata !11909, metadata !DIExpression(DW_OP_deref)), !dbg !11911
  %call = call fastcc i32 @code_motion_path_driver(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, %struct._list_node* null, %struct.cmpd_local_params* nonnull %lparams, i8* nonnull %0) #7, !dbg !11928
  %conv = trunc i32 %call to i8, !dbg !11928
  call void @llvm.dbg.value(metadata i8 %conv, metadata !11910, metadata !DIExpression()), !dbg !11911
  %6 = load i8, i8* %was_renamed, align 4, !dbg !11929
  %tobool = icmp eq i8 %6, 0, !dbg !11931
  br i1 %tobool, label %if.end, label %if.then, !dbg !11932

if.then:                                          ; preds = %entry
  %was_renamed4 = getelementptr inbounds %struct._expr, %struct._expr* %expr_vliw, i64 0, i32 12, !dbg !11933
  %bf.load = load i8, i8* %was_renamed4, align 1, !dbg !11934
  %bf.set = or i8 %bf.load, 4, !dbg !11934
  store i8 %bf.set, i8* %was_renamed4, align 1, !dbg !11934
  br label %if.end, !dbg !11933

if.end:                                           ; preds = %entry, %if.then
  %7 = load i32, i32* %uid, align 8, !dbg !11935
  %cmp = icmp eq i32 %7, -1, !dbg !11936
  %conv7 = zext i1 %cmp to i8, !dbg !11937
  store i8 %conv7, i8* %should_move, align 1, !dbg !11938
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1) #8, !dbg !11939
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !11939
  ret i8 %conv, !dbg !11940
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @get_dest_from_orig_ops(%struct._list_node* %orig_ops) unnamed_addr #5 !dbg !11941 {
entry:
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %av_it = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %orig_ops, metadata !11945, metadata !DIExpression()), !dbg !11954
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !11946, metadata !DIExpression()), !dbg !11954
  %0 = bitcast %struct._list_iterator* %av_it to i8*, !dbg !11955
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !11955
  %1 = bitcast %struct._expr** %expr to i8*, !dbg !11956
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !11956
  call void @llvm.dbg.value(metadata i8 1, metadata !11949, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata %struct._list_node** %orig_ops.addr, metadata !11945, metadata !DIExpression(DW_OP_deref)), !dbg !11954
  call void @llvm.dbg.value(metadata %struct._list_iterator* %av_it, metadata !11947, metadata !DIExpression(DW_OP_deref)), !dbg !11954
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %av_it, %struct._list_node** nonnull %orig_ops.addr, i8 zeroext 0) #7, !dbg !11957
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %av_it, i64 0, i32 0, !dbg !11958
  br label %for.cond, !dbg !11957

for.cond:                                         ; preds = %for.inc, %entry
  %first_p.0 = phi i8 [ 1, %entry ], [ 0, %for.inc ], !dbg !11954
  %dest.0 = phi %struct.rtx_def* [ null, %entry ], [ %dest.1, %for.inc ], !dbg !11954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0, metadata !11946, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i8 %first_p.0, metadata !11949, metadata !DIExpression()), !dbg !11954
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !11959
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !11959
  call void @llvm.dbg.value(metadata %struct._expr** %expr, metadata !11948, metadata !DIExpression(DW_OP_deref)), !dbg !11954
  %call = call fastcc zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** nonnull %expr) #7, !dbg !11959
  %tobool = icmp eq i8 %call, 0, !dbg !11957
  br i1 %tobool, label %for.end, label %for.body, !dbg !11957

for.body:                                         ; preds = %for.cond
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !11960
  call void @llvm.dbg.value(metadata %struct._expr* %4, metadata !11948, metadata !DIExpression()), !dbg !11954
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i64 0, i32 0, !dbg !11960
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11960
  %lhs = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i64 0, i32 1, i32 1, !dbg !11960
  %6 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !11960
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !11950, metadata !DIExpression()), !dbg !11961
  %tobool1 = icmp eq i8 %first_p.0, 0, !dbg !11962
  br i1 %tobool1, label %if.else, label %for.inc, !dbg !11964

if.else:                                          ; preds = %for.body
  %cmp = icmp eq %struct.rtx_def* %dest.0, %6, !dbg !11965
  br i1 %cmp, label %for.inc, label %lor.lhs.false, !dbg !11965

lor.lhs.false:                                    ; preds = %if.else
  %cmp2 = icmp ne %struct.rtx_def* %dest.0, null, !dbg !11965
  %cmp3 = icmp ne %struct.rtx_def* %6, null, !dbg !11965
  %or.cond = and i1 %cmp2, %cmp3, !dbg !11965
  br i1 %or.cond, label %land.lhs.true4, label %cond.true, !dbg !11965

land.lhs.true4:                                   ; preds = %lor.lhs.false
  %call5 = call i32 @rtx_equal_p(%struct.rtx_def* nonnull %dest.0, %struct.rtx_def* nonnull %6) #6, !dbg !11965
  %tobool6 = icmp eq i32 %call5, 0, !dbg !11965
  br i1 %tobool6, label %cond.true, label %for.inc, !dbg !11965

cond.true:                                        ; preds = %land.lhs.true4, %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5640, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11965
  br label %for.inc, !dbg !11965

for.inc:                                          ; preds = %land.lhs.true4, %for.body, %if.else, %cond.true
  %dest.1 = phi %struct.rtx_def* [ %6, %for.body ], [ %dest.0, %if.else ], [ %dest.0, %land.lhs.true4 ], [ %dest.0, %cond.true ], !dbg !11954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.1, metadata !11946, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i8 0, metadata !11949, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata %struct._list_iterator* %av_it, metadata !11947, metadata !DIExpression(DW_OP_deref)), !dbg !11954
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %av_it) #7, !dbg !11959
  br label %for.cond, !dbg !11959, !llvm.loop !11966

for.end:                                          ; preds = %for.cond
  %dest.0.lcssa = phi %struct.rtx_def* [ %dest.0, %for.cond ], !dbg !11954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0.lcssa, metadata !11946, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0.lcssa, metadata !11946, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0.lcssa, metadata !11946, metadata !DIExpression()), !dbg !11954
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !11968
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !11968
  ret %struct.rtx_def* %dest.0.lcssa, !dbg !11969
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_insn_t_base_iterate(%struct.VEC_insn_t_base* %vec_, i32 %ix_, %struct.rtx_def** %ptr) unnamed_addr #0 !dbg !11970 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_insn_t_base* %vec_, metadata !11976, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !11977, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata %struct.rtx_def** %ptr, metadata !11978, metadata !DIExpression()), !dbg !11979
  %tobool = icmp eq %struct.VEC_insn_t_base* %vec_, null, !dbg !11980
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !11980

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %vec_, i64 0, i32 0, !dbg !11980
  %0 = load i32, i32* %num, align 8, !dbg !11980
  %cmp = icmp ugt i32 %0, %ix_, !dbg !11980
  br i1 %cmp, label %if.then, label %if.else, !dbg !11982

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !11983
  %arrayidx = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11983
  %1 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !11983
  br label %return, !dbg !11983

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !11985

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.rtx_def* [ null, %if.else ], [ %1, %if.then ], !dbg !11987
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !11987
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %ptr, align 8, !dbg !11987
  ret i32 %retval.0, !dbg !11982
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_insn_t_base_length(%struct.VEC_insn_t_base* %vec_) unnamed_addr #0 !dbg !11988 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_insn_t_base* %vec_, metadata !11992, metadata !DIExpression()), !dbg !11993
  %tobool = icmp eq %struct.VEC_insn_t_base* %vec_, null, !dbg !11994
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11994

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %vec_, i64 0, i32 0, !dbg !11994
  %0 = load i32, i32* %num, align 8, !dbg !11994
  br label %cond.end, !dbg !11994

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !11994
  ret i32 %cond, !dbg !11994
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_insn_t_base_block_remove(%struct.VEC_insn_t_base* %vec_, i32 %ix_, i32 %len_) unnamed_addr #0 !dbg !11995 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_insn_t_base* %vec_, metadata !11999, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 0, metadata !12000, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 %len_, metadata !12001, metadata !DIExpression()), !dbg !12003
  %arrayidx = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %vec_, i64 0, i32 2, i64 0, !dbg !12004
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx, metadata !12002, metadata !DIExpression()), !dbg !12003
  %num1 = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %vec_, i64 0, i32 0, !dbg !12004
  %0 = load i32, i32* %num1, align 8, !dbg !12004
  %sub = sub i32 %0, %len_, !dbg !12004
  store i32 %sub, i32* %num1, align 8, !dbg !12004
  %1 = bitcast %struct.rtx_def** %arrayidx to i8*, !dbg !12004
  %idx.ext = zext i32 %len_ to i64, !dbg !12004
  %add.ptr = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %vec_, i64 0, i32 2, i64 %idx.ext, !dbg !12004
  %2 = bitcast %struct.rtx_def** %add.ptr to i8*, !dbg !12004
  %conv4 = zext i32 %sub to i64, !dbg !12004
  %mul = shl nuw nsw i64 %conv4, 3, !dbg !12004
  %call = tail call i8* @memmove(i8* nonnull %1, i8* nonnull %2, i64 %mul) #6, !dbg !12004
  ret void, !dbg !12004
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @advance_state_on_fence(%struct._fence* %fence, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !12005 {
entry:
  call void @llvm.dbg.value(metadata %struct._fence* %fence, metadata !12009, metadata !DIExpression()), !dbg !12016
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !12010, metadata !DIExpression()), !dbg !12016
  %call = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %insn) #7, !dbg !12017
  %cmp = icmp sgt i32 %call, -1, !dbg !12018
  br i1 %cmp, label %if.then, label %if.else, !dbg !12019

if.then:                                          ; preds = %entry
  %0 = load i64, i64* @dfa_state_size, align 8, !dbg !12020
  %1 = alloca i8, i64 %0, align 16, !dbg !12020
  call void @llvm.dbg.value(metadata i8* %1, metadata !12015, metadata !DIExpression()), !dbg !12021
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12022
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %2, i64 0, i32 0, !dbg !12022
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12022
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, !dbg !12022
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12022
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !12022
  %4 = load i32, i32* %rt_int, align 8, !dbg !12022
  %call7 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base3, i32 %4) #7, !dbg !12022
  %call8 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call7) #7, !dbg !12022
  %asm_p9 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call8, i64 0, i32 13, !dbg !12022
  %bf.load = load i8, i8* %asm_p9, align 4, !dbg !12022
  %bf.clear = and i8 %bf.load, 2, !dbg !12022
  %tobool10 = icmp eq i8 %bf.clear, 0, !dbg !12022
  br i1 %tobool10, label %cond.end13, label %cond.true11, !dbg !12022

cond.true11:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5269, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12022
  br label %cond.end13, !dbg !12022

cond.end13:                                       ; preds = %if.then, %cond.true11
  call void @llvm.dbg.value(metadata i8 0, metadata !12011, metadata !DIExpression()), !dbg !12016
  %state = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 1, !dbg !12023
  %5 = load i8*, i8** %state, align 8, !dbg !12023
  %6 = load i64, i64* @dfa_state_size, align 8, !dbg !12024
  %call15 = call i8* @memcpy(i8* nonnull %1, i8* %5, i64 %6) #6, !dbg !12025
  %7 = load i8*, i8** %state, align 8, !dbg !12026
  %call17 = call i32 @state_transition(i8* %7, %struct.rtx_def* %insn) #6, !dbg !12027
  call void @llvm.dbg.value(metadata i32 %call17, metadata !12012, metadata !DIExpression()), !dbg !12021
  %cmp18 = icmp slt i32 %call17, 0, !dbg !12028
  br i1 %cmp18, label %cond.end21, label %cond.true19, !dbg !12028

cond.true19:                                      ; preds = %cond.end13
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5274, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12028
  br label %cond.end21, !dbg !12028

cond.end21:                                       ; preds = %cond.end13, %cond.true19
  %8 = load i8*, i8** %state, align 8, !dbg !12029
  %9 = load i64, i64* @dfa_state_size, align 8, !dbg !12031
  %call24 = call i32 @memcmp(i8* nonnull %1, i8* %8, i64 %9) #6, !dbg !12032
  %tobool25 = icmp eq i32 %call24, 0, !dbg !12032
  br i1 %tobool25, label %if.end63, label %if.then26, !dbg !12033

if.then26:                                        ; preds = %cond.end21
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 3, !dbg !12034
  %10 = load i32, i32* %cycle_issued_insns, align 4, !dbg !12036
  %inc = add nsw i32 %10, 1, !dbg !12036
  store i32 %inc, i32* %cycle_issued_insns, align 4, !dbg !12036
  %11 = load i32, i32* @issue_rate, align 4, !dbg !12037
  %cmp28 = icmp slt i32 %10, %11, !dbg !12039
  br i1 %cmp28, label %if.end63, label %if.then29, !dbg !12040

if.then29:                                        ; preds = %if.then26
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5282, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12041
  br label %if.end63, !dbg !12041

if.else:                                          ; preds = %entry
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12042
  %base33 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %12, i64 0, i32 0, !dbg !12042
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12042
  %base39 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !12042
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12042
  %rt_int46 = bitcast %union.rtunion_def* %arrayidx45 to i32*, !dbg !12042
  %14 = load i32, i32* %rt_int46, align 8, !dbg !12042
  %call47 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base39, i32 %14) #7, !dbg !12042
  %call48 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base33, i32 %call47) #7, !dbg !12042
  %asm_p49 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call48, i64 0, i32 13, !dbg !12042
  %bf.load50 = load i8, i8* %asm_p49, align 4, !dbg !12042
  %bf.lshr51 = lshr i8 %bf.load50, 1, !dbg !12042
  %bf.clear52 = and i8 %bf.lshr51, 1, !dbg !12042
  call void @llvm.dbg.value(metadata i8 %bf.clear52, metadata !12011, metadata !DIExpression()), !dbg !12016
  %starts_cycle_p = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 13, !dbg !12044
  %bf.load54 = load i8, i8* %starts_cycle_p, align 8, !dbg !12044
  %bf.clear56 = and i8 %bf.load54, 4, !dbg !12044
  %tobool58 = icmp eq i8 %bf.clear56, 0, !dbg !12044
  %tobool60 = icmp ne i8 %bf.clear52, 0, !dbg !12046
  %or.cond = and i1 %tobool58, %tobool60, !dbg !12047
  br i1 %or.cond, label %if.then61, label %if.end63, !dbg !12047

if.then61:                                        ; preds = %if.else
  tail call fastcc void @advance_one_cycle(%struct._fence* %fence) #7, !dbg !12048
  br label %if.end63, !dbg !12048

if.end63:                                         ; preds = %if.then26, %cond.end21, %if.then61, %if.else, %if.then29
  %asm_p.0 = phi i8 [ 0, %if.then26 ], [ 0, %if.then29 ], [ 0, %cond.end21 ], [ %bf.clear52, %if.else ], [ %bf.clear52, %if.then61 ], !dbg !12049
  call void @llvm.dbg.value(metadata i8 %asm_p.0, metadata !12011, metadata !DIExpression()), !dbg !12016
  %15 = load i32, i32* @sched_verbose, align 4, !dbg !12050
  %cmp64 = icmp sgt i32 %15, 1, !dbg !12052
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !12053

if.then66:                                        ; preds = %if.end63
  %state67 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 1, !dbg !12054
  %16 = load i8*, i8** %state67, align 8, !dbg !12054
  call fastcc void @debug_state(i8* %16) #7, !dbg !12055
  br label %if.end68, !dbg !12055

if.end68:                                         ; preds = %if.then66, %if.end63
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !12056
  %bf.load69 = load i32, i32* %17, align 8, !dbg !12056
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !12056
  %cmp71 = icmp eq i32 %bf.clear70, 7, !dbg !12056
  br i1 %cmp71, label %if.end77, label %if.then73, !dbg !12058

if.then73:                                        ; preds = %if.end68
  %starts_cycle_p74 = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 13, !dbg !12059
  %bf.load75 = load i8, i8* %starts_cycle_p74, align 8, !dbg !12060
  %bf.clear76 = and i8 %bf.load75, -5, !dbg !12060
  store i8 %bf.clear76, i8* %starts_cycle_p74, align 8, !dbg !12060
  br label %if.end77, !dbg !12059

if.end77:                                         ; preds = %if.then73, %if.end68
  %18 = load i32, i32* @can_issue_more, align 4, !dbg !12061
  %issue_more = getelementptr inbounds %struct._fence, %struct._fence* %fence, i64 0, i32 11, !dbg !12062
  store i32 %18, i32* %issue_more, align 8, !dbg !12063
  ret i8 %asm_p.0, !dbg !12064
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_gc_safe_push(%struct.VEC_rtx_gc** %vec_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !12065 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** %vec_, metadata !12070, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !12071, metadata !DIExpression()), !dbg !12072
  %call = tail call fastcc i32 @VEC_rtx_gc_reserve(%struct.VEC_rtx_gc** %vec_, i32 1) #7, !dbg !12073
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %vec_, align 8, !dbg !12073
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !12073
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12073

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %0, i64 0, i32 0, !dbg !12073
  br label %cond.end, !dbg !12073

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !12073
  %call1 = tail call fastcc %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %cond, %struct.rtx_def* %obj_) #7, !dbg !12073
  ret %struct.rtx_def** %call1, !dbg !12073
}

declare dso_local i32 @maximal_insn_latency(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @dump_insn_1(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_gc_reserve(%struct.VEC_rtx_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !12074 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** %vec_, metadata !12078, metadata !DIExpression()), !dbg !12081
  call void @llvm.dbg.value(metadata i32 1, metadata !12079, metadata !DIExpression()), !dbg !12081
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %vec_, align 8, !dbg !12082
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !12082
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12082

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %0, i64 0, i32 0, !dbg !12082
  br label %cond.end, !dbg !12082

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !12082
  %call = tail call fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %cond, i32 1) #7, !dbg !12082
  %tobool1 = icmp eq i32 %call, 0, !dbg !12082
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !12082
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !12080, metadata !DIExpression()), !dbg !12081
  br i1 %tobool1, label %if.then, label %if.end, !dbg !12082

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_rtx_gc** %vec_ to i8**, !dbg !12083
  %2 = load i8*, i8** %1, align 8, !dbg !12083
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !12083
  store i8* %call3, i8** %1, align 8, !dbg !12083
  br label %if.end, !dbg !12083

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !12082
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %vec_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !12085 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !12089, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !12090, metadata !DIExpression()), !dbg !12092
  %num1 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !12093
  %0 = load i32, i32* %num1, align 8, !dbg !12093
  %inc = add i32 %0, 1, !dbg !12093
  store i32 %inc, i32* %num1, align 8, !dbg !12093
  %idxprom = zext i32 %0 to i64, !dbg !12093
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !12093
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx, metadata !12091, metadata !DIExpression()), !dbg !12092
  store %struct.rtx_def* %obj_, %struct.rtx_def** %arrayidx, align 8, !dbg !12093
  ret %struct.rtx_def** %arrayidx, !dbg !12093
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !12094 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !12098, metadata !DIExpression()), !dbg !12100
  call void @llvm.dbg.value(metadata i32 1, metadata !12099, metadata !DIExpression()), !dbg !12100
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !12101
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !12101

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 1, !dbg !12101
  %0 = load i32, i32* %alloc, align 4, !dbg !12101
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !12101
  %1 = load i32, i32* %num, align 8, !dbg !12101
  %cmp1 = icmp ne i32 %0, %1, !dbg !12101
  %phitmp = zext i1 %cmp1 to i32, !dbg !12101
  br label %cond.end, !dbg !12101

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12101

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !12101
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local void @advance_deps_context(%struct.deps*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct._list_node* @ilist_copy(%struct._list_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vinsn_t_base_length(%struct.VEC_vinsn_t_base* %vec_) unnamed_addr #0 !dbg !12102 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_base* %vec_, metadata !12106, metadata !DIExpression()), !dbg !12107
  %tobool = icmp eq %struct.VEC_vinsn_t_base* %vec_, null, !dbg !12108
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12108

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %vec_, i64 0, i32 0, !dbg !12108
  %0 = load i32, i32* %num, align 8, !dbg !12108
  br label %cond.end, !dbg !12108

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !12108
  ret i32 %cond, !dbg !12108
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vinsn_t_base_block_remove(%struct.VEC_vinsn_t_base* %vec_, i32 %ix_, i32 %len_) unnamed_addr #0 !dbg !12109 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_base* %vec_, metadata !12113, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i32 0, metadata !12114, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i32 %len_, metadata !12115, metadata !DIExpression()), !dbg !12117
  %arrayidx = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %vec_, i64 0, i32 2, i64 0, !dbg !12118
  call void @llvm.dbg.value(metadata %struct.vinsn_def** %arrayidx, metadata !12116, metadata !DIExpression()), !dbg !12117
  %num1 = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %vec_, i64 0, i32 0, !dbg !12118
  %0 = load i32, i32* %num1, align 8, !dbg !12118
  %sub = sub i32 %0, %len_, !dbg !12118
  store i32 %sub, i32* %num1, align 8, !dbg !12118
  %1 = bitcast %struct.vinsn_def** %arrayidx to i8*, !dbg !12118
  %idx.ext = zext i32 %len_ to i64, !dbg !12118
  %add.ptr = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %vec_, i64 0, i32 2, i64 %idx.ext, !dbg !12118
  %2 = bitcast %struct.vinsn_def** %add.ptr to i8*, !dbg !12118
  %conv4 = zext i32 %sub to i64, !dbg !12118
  %mul = shl nuw nsw i64 %conv4, 3, !dbg !12118
  %call = tail call i8* @memmove(i8* nonnull %1, i8* nonnull %2, i64 %mul) #6, !dbg !12118
  ret void, !dbg !12118
}

declare dso_local void @move_fence_to_fences(%struct._list_node*, %struct.flist_tail_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @extract_new_fences_from(%struct._list_node* %old_fences, %struct.flist_tail_def* %new_fences, i32 %orig_max_seqno) unnamed_addr #5 !dbg !12119 {
entry:
  %insn = alloca %struct.rtx_def*, align 8
  %succ = alloca %struct.rtx_def*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %ii = alloca %struct._list_iterator, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._list_node* %old_fences, metadata !12123, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata %struct.flist_tail_def* %new_fences, metadata !12124, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata i32 %orig_max_seqno, metadata !12125, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata i8 0, metadata !12126, metadata !DIExpression()), !dbg !12157
  %0 = bitcast %struct.rtx_def** %insn to i8*, !dbg !12158
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !12158
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !12127, metadata !DIExpression()), !dbg !12157
  store %struct.rtx_def* null, %struct.rtx_def** %insn, align 8, !dbg !12159
  %1 = bitcast %struct.rtx_def** %succ to i8*, !dbg !12160
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !12160
  %2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %si, i64 0, i32 0, !dbg !12161
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #8, !dbg !12161
  %3 = bitcast %struct._list_iterator* %ii to i8*, !dbg !12162
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !12162
  call void @llvm.dbg.value(metadata %struct._fence* %fence1, metadata !12131, metadata !DIExpression()), !dbg !12157
  %bnds = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, i32 4, !dbg !12163
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ii, metadata !12130, metadata !DIExpression(DW_OP_deref)), !dbg !12157
  call fastcc void @_list_iter_start(%struct._list_iterator* nonnull %ii, %struct._list_node** nonnull %bnds, i8 zeroext 0) #7, !dbg !12163
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ii, i64 0, i32 0, !dbg !12165
  br label %for.cond, !dbg !12163

for.cond:                                         ; preds = %for.inc, %entry
  %was_here_p.0 = phi i8 [ 0, %entry ], [ 1, %for.inc ], !dbg !12157
  call void @llvm.dbg.value(metadata i8 %was_here_p.0, metadata !12126, metadata !DIExpression()), !dbg !12157
  %4 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !12167
  %5 = load %struct._list_node*, %struct._list_node** %4, align 8, !dbg !12167
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn, metadata !12127, metadata !DIExpression(DW_OP_deref)), !dbg !12157
  %call = call fastcc zeroext i8 @_list_iter_cond_x(%struct._list_node* %5, %struct.rtx_def** nonnull %insn) #7, !dbg !12167
  %tobool = icmp eq i8 %call, 0, !dbg !12163
  br i1 %tobool, label %for.end, label %for.body, !dbg !12163

for.body:                                         ; preds = %for.cond
  %tobool2 = icmp eq i8 %was_here_p.0, 0, !dbg !12168
  br i1 %tobool2, label %for.inc, label %cond.true, !dbg !12168

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 650, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12168
  br label %for.inc, !dbg !12168

for.inc:                                          ; preds = %for.body, %cond.true
  call void @llvm.dbg.value(metadata i8 1, metadata !12126, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata %struct._list_iterator* %ii, metadata !12130, metadata !DIExpression(DW_OP_deref)), !dbg !12157
  call fastcc void @_list_iter_next(%struct._list_iterator* nonnull %ii) #7, !dbg !12167
  br label %for.cond, !dbg !12167, !llvm.loop !12170

for.end:                                          ; preds = %for.cond
  %was_here_p.0.lcssa = phi i8 [ %was_here_p.0, %for.cond ], !dbg !12157
  call void @llvm.dbg.value(metadata i8 %was_here_p.0.lcssa, metadata !12126, metadata !DIExpression()), !dbg !12157
  %fence1 = getelementptr inbounds %struct._list_node, %struct._list_node* %old_fences, i64 0, i32 1, i32 0, !dbg !12172
  call void @llvm.dbg.value(metadata i8 %was_here_p.0.lcssa, metadata !12126, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata i8 %was_here_p.0.lcssa, metadata !12126, metadata !DIExpression()), !dbg !12157
  %tobool3 = icmp ne i8 %was_here_p.0.lcssa, 0, !dbg !12173
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12173
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !12127, metadata !DIExpression()), !dbg !12157
  %cmp = icmp ne %struct.rtx_def* %6, null, !dbg !12173
  %or.cond = and i1 %tobool3, %cmp, !dbg !12173
  br i1 %or.cond, label %cond.end7, label %cond.true5, !dbg !12173

cond.true5:                                       ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 653, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12173
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12174
  br label %cond.end7, !dbg !12173

cond.end7:                                        ; preds = %for.end, %cond.true5
  %7 = phi %struct.rtx_def* [ %6, %for.end ], [ %.pre, %cond.true5 ], !dbg !12174
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !12127, metadata !DIExpression()), !dbg !12157
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 1, !dbg !12174
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !12174
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !12174
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !12132, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !12127, metadata !DIExpression()), !dbg !12157
  %call10 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %7) #6, !dbg !12175
  %tobool11 = icmp eq i8 %call10, 0, !dbg !12175
  br i1 %tobool11, label %if.then, label %lor.lhs.false, !dbg !12176

lor.lhs.false:                                    ; preds = %cond.end7
  %call12 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %8) #7, !dbg !12177
  %tobool14 = icmp eq i8 %call12, 0, !dbg !12177
  br i1 %tobool14, label %if.end154, label %land.lhs.true15, !dbg !12178

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %call16 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %8) #7, !dbg !12179
  %call17 = call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %call16) #7, !dbg !12180
  %tobool19 = icmp eq i8 %call17, 0, !dbg !12180
  br i1 %tobool19, label %if.end154, label %if.then, !dbg !12181

if.then:                                          ; preds = %land.lhs.true15, %cond.end7
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12182
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !12127, metadata !DIExpression()), !dbg !12157
  %call21 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %9) #6, !dbg !12183
  %tobool23 = icmp eq i8 %call21, 0, !dbg !12183
  br i1 %tobool23, label %cond.false27, label %cond.true24, !dbg !12183

cond.true24:                                      ; preds = %if.then
  %call25 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %8) #7, !dbg !12184
  %call26 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %call25) #6, !dbg !12185
  br label %cond.end31, !dbg !12183

cond.false27:                                     ; preds = %if.then
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12186
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !12127, metadata !DIExpression()), !dbg !12157
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !12186
  %rt_rtx = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !12186
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12186
  br label %cond.end31, !dbg !12183

cond.end31:                                       ; preds = %cond.false27, %cond.true24
  %cond32 = phi %struct.rtx_def* [ %call26, %cond.true24 ], [ %12, %cond.false27 ], !dbg !12183
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond32, metadata !12133, metadata !DIExpression()), !dbg !12187
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12188
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %13, i64 0, i32 0, !dbg !12188
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12188
  %base40 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !12188
  %arrayidx46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond32, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12188
  %rt_int = bitcast %union.rtunion_def* %arrayidx46 to i32*, !dbg !12188
  %15 = load i32, i32* %rt_int, align 8, !dbg !12188
  %call47 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base40, i32 %15) #7, !dbg !12188
  %call48 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call47) #7, !dbg !12188
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call48, i64 0, i32 2, !dbg !12188
  %16 = load i32, i32* %seqno, align 4, !dbg !12188
  %cmp49 = icmp sgt i32 %16, 0, !dbg !12189
  br i1 %cmp49, label %land.lhs.true51, label %cleanup, !dbg !12190

land.lhs.true51:                                  ; preds = %cond.end31
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12191
  %base54 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i64 0, i32 0, !dbg !12191
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12191
  %base60 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i64 0, i32 0, !dbg !12191
  %19 = load i32, i32* %rt_int, align 8, !dbg !12191
  %call68 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base60, i32 %19) #7, !dbg !12191
  %call69 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base54, i32 %call68) #7, !dbg !12191
  %seqno70 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call69, i64 0, i32 2, !dbg !12191
  %20 = load i32, i32* %seqno70, align 4, !dbg !12191
  %cmp71 = icmp sgt i32 %20, %orig_max_seqno, !dbg !12192
  br i1 %cmp71, label %cleanup, label %land.lhs.true73, !dbg !12193

land.lhs.true73:                                  ; preds = %land.lhs.true51
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12194
  %base76 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i64 0, i32 0, !dbg !12194
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12194
  %base82 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %22, i64 0, i32 0, !dbg !12194
  %23 = load i32, i32* %rt_int, align 8, !dbg !12194
  %call90 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base82, i32 %23) #7, !dbg !12194
  %call91 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base76, i32 %call90) #7, !dbg !12194
  %sched_times = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call91, i64 0, i32 0, i32 5, !dbg !12194
  %24 = load i32, i32* %sched_times, align 8, !dbg !12194
  %cmp92 = icmp slt i32 %24, 1, !dbg !12195
  br i1 %cmp92, label %if.then94, label %cleanup, !dbg !12196

if.then94:                                        ; preds = %land.lhs.true73
  %insn95 = getelementptr inbounds %struct._fence, %struct._fence* %fence1, i64 0, i32 0, !dbg !12197
  store %struct.rtx_def* %cond32, %struct.rtx_def** %insn95, align 8, !dbg !12198
  call void @move_fence_to_fences(%struct._list_node* %old_fences, %struct.flist_tail_def* %new_fences) #6, !dbg !12199
  %25 = load i32, i32* @sched_verbose, align 4, !dbg !12200
  %cmp96 = icmp sgt i32 %25, 0, !dbg !12201
  br i1 %cmp96, label %do.body, label %cleanup, !dbg !12202

do.body:                                          ; preds = %if.then94
  %26 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12203
  %tobool99 = icmp eq i8 %26, 0, !dbg !12203
  br i1 %tobool99, label %if.else, label %do.body101, !dbg !12204

do.body101:                                       ; preds = %do.body
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12205
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !12127, metadata !DIExpression()), !dbg !12157
  %arrayidx104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12205
  %rt_int105 = bitcast %union.rtunion_def* %arrayidx104 to i32*, !dbg !12205
  %28 = load i32, i32* %rt_int105, align 8, !dbg !12205
  %29 = load i32, i32* %rt_int, align 8, !dbg !12205
  %arrayidx112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond32, i64 0, i32 1, i32 0, i32 1, !dbg !12205
  %rt_bb113 = bitcast %struct.object_block** %arrayidx112 to %struct.basic_block_def**, !dbg !12205
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb113, align 8, !dbg !12205
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i64 0, i32 9, !dbg !12205
  %31 = load i32, i32* %index, align 8, !dbg !12205
  %call114 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.81, i64 0, i64 0), i32 %28, i32 %29, i32 %31) #6, !dbg !12205
  %mul = shl nsw i32 %call114, 1, !dbg !12205
  %add115 = or i32 %mul, 1, !dbg !12205
  call void @llvm.dbg.value(metadata i32 %add115, metadata !12136, metadata !DIExpression()), !dbg !12206
  %conv116 = sext i32 %add115 to i64, !dbg !12205
  %32 = alloca i8, i64 %conv116, align 16, !dbg !12205
  call void @llvm.dbg.value(metadata i8* %32, metadata !12143, metadata !DIExpression()), !dbg !12206
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12205
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !12127, metadata !DIExpression()), !dbg !12157
  %arrayidx121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12205
  %rt_int122 = bitcast %union.rtunion_def* %arrayidx121 to i32*, !dbg !12205
  %34 = load i32, i32* %rt_int122, align 8, !dbg !12205
  %35 = load i32, i32* %rt_int, align 8, !dbg !12205
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb113, align 8, !dbg !12205
  %index131 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i64 0, i32 9, !dbg !12205
  %37 = load i32, i32* %index131, align 8, !dbg !12205
  %call133 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %32, i64 %conv116, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.81, i64 0, i64 0), i32 %34, i32 %35, i32 %37) #6, !dbg !12205
  call void @sel_prepare_string_for_dot_label(i8* nonnull %32) #6, !dbg !12205
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12205
  %call134 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %32) #6, !dbg !12205
  br label %cleanup, !dbg !12205

if.else:                                          ; preds = %do.body
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12203
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12203
  call void @llvm.dbg.value(metadata %struct.rtx_def* %40, metadata !12127, metadata !DIExpression()), !dbg !12157
  %arrayidx137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12203
  %rt_int138 = bitcast %union.rtunion_def* %arrayidx137 to i32*, !dbg !12203
  %41 = load i32, i32* %rt_int138, align 8, !dbg !12203
  %42 = load i32, i32* %rt_int, align 8, !dbg !12203
  %arrayidx145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond32, i64 0, i32 1, i32 0, i32 1, !dbg !12203
  %rt_bb146 = bitcast %struct.object_block** %arrayidx145 to %struct.basic_block_def**, !dbg !12203
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb146, align 8, !dbg !12203
  %index147 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %43, i64 0, i32 9, !dbg !12203
  %44 = load i32, i32* %index147, align 8, !dbg !12203
  %call149 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.81, i64 0, i64 0), i32 %41, i32 %42, i32 %44) #6, !dbg !12203
  br label %cleanup

if.end154:                                        ; preds = %land.lhs.true15, %lor.lhs.false
  %45 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %tmp, i64 0, i32 0, !dbg !12207
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %45) #8, !dbg !12207
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %46, metadata !12127, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !12128, metadata !DIExpression(DW_OP_deref)), !dbg !12157
  call fastcc void @_succ_iter_start(%struct.succ_iterator* nonnull sret %tmp, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %46, i32 9) #7, !dbg !12207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %45, i64 64, i1 false), !dbg !12207
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %45) #8, !dbg !12207
  br label %for.cond155, !dbg !12207

for.cond155:                                      ; preds = %for.inc306, %if.end154
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12208
  call void @llvm.dbg.value(metadata %struct.rtx_def* %47, metadata !12127, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata %struct.rtx_def** %succ, metadata !12128, metadata !DIExpression(DW_OP_deref)), !dbg !12157
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !12129, metadata !DIExpression(DW_OP_deref)), !dbg !12157
  %call156 = call fastcc zeroext i8 @_succ_iter_cond(%struct.succ_iterator* nonnull %si, %struct.rtx_def** nonnull %succ, %struct.rtx_def* %47, i8 (%struct.edge_def*, %struct.succ_iterator*)* nonnull @_eligible_successor_edge_p) #7, !dbg !12208
  %tobool157 = icmp eq i8 %call156, 0, !dbg !12207
  br i1 %tobool157, label %cleanup.loopexit, label %for.body158, !dbg !12207

for.body158:                                      ; preds = %for.cond155
  %48 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12209
  %base162 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %48, i64 0, i32 0, !dbg !12209
  %49 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12209
  %base168 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %49, i64 0, i32 0, !dbg !12209
  %50 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12209
  call void @llvm.dbg.value(metadata %struct.rtx_def* %50, metadata !12128, metadata !DIExpression()), !dbg !12157
  %arrayidx174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12209
  %rt_int175 = bitcast %union.rtunion_def* %arrayidx174 to i32*, !dbg !12209
  %51 = load i32, i32* %rt_int175, align 8, !dbg !12209
  %call176 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base168, i32 %51) #7, !dbg !12209
  %call177 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base162, i32 %call176) #7, !dbg !12209
  %seqno178 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call177, i64 0, i32 2, !dbg !12209
  %52 = load i32, i32* %seqno178, align 4, !dbg !12209
  call void @llvm.dbg.value(metadata i32 %52, metadata !12144, metadata !DIExpression()), !dbg !12210
  %cmp179 = icmp sgt i32 %52, 0, !dbg !12211
  %cmp182 = icmp sle i32 %52, %orig_max_seqno, !dbg !12212
  %or.cond1 = and i1 %cmp179, %cmp182, !dbg !12213
  br i1 %or.cond1, label %land.lhs.true184, label %for.inc306, !dbg !12213

land.lhs.true184:                                 ; preds = %for.body158
  %53 = load i8, i8* @pipelining_p, align 1, !dbg !12214
  %tobool186 = icmp eq i8 %53, 0, !dbg !12214
  br i1 %tobool186, label %lor.lhs.false187, label %if.then210, !dbg !12215

lor.lhs.false187:                                 ; preds = %land.lhs.true184
  %54 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12216
  %base190 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %54, i64 0, i32 0, !dbg !12216
  %55 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12216
  %base196 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %55, i64 0, i32 0, !dbg !12216
  %56 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12216
  call void @llvm.dbg.value(metadata %struct.rtx_def* %56, metadata !12128, metadata !DIExpression()), !dbg !12157
  %arrayidx202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12216
  %rt_int203 = bitcast %union.rtunion_def* %arrayidx202 to i32*, !dbg !12216
  %57 = load i32, i32* %rt_int203, align 8, !dbg !12216
  %call204 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base196, i32 %57) #7, !dbg !12216
  %call205 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base190, i32 %call204) #7, !dbg !12216
  %sched_times207 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call205, i64 0, i32 0, i32 5, !dbg !12216
  %58 = load i32, i32* %sched_times207, align 8, !dbg !12216
  %cmp208 = icmp slt i32 %58, 1, !dbg !12217
  br i1 %cmp208, label %if.then210, label %for.inc306, !dbg !12218

if.then210:                                       ; preds = %land.lhs.true184, %lor.lhs.false187
  %59 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12219
  call void @llvm.dbg.value(metadata %struct.rtx_def* %59, metadata !12127, metadata !DIExpression()), !dbg !12157
  %60 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12220
  call void @llvm.dbg.value(metadata %struct.rtx_def* %60, metadata !12128, metadata !DIExpression()), !dbg !12157
  %call211 = call zeroext i8 @in_same_ebb_p(%struct.rtx_def* %59, %struct.rtx_def* %60) #6, !dbg !12221
  %tobool213 = icmp eq i8 %call211, 0, !dbg !12221
  br i1 %tobool213, label %lor.rhs, label %lor.end, !dbg !12222

lor.rhs:                                          ; preds = %if.then210
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12223
  call void @llvm.dbg.value(metadata %struct.rtx_def* %61, metadata !12127, metadata !DIExpression()), !dbg !12157
  %62 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12224
  call void @llvm.dbg.value(metadata %struct.rtx_def* %62, metadata !12128, metadata !DIExpression()), !dbg !12157
  %call214 = call fastcc zeroext i8 @in_fallthru_bb_p(%struct.rtx_def* %61, %struct.rtx_def* %62) #7, !dbg !12225
  %tobool216 = icmp ne i8 %call214, 0, !dbg !12222
  br label %lor.end, !dbg !12222

lor.end:                                          ; preds = %if.then210, %lor.rhs
  %63 = phi i1 [ true, %if.then210 ], [ %tobool216, %lor.rhs ]
  call void @llvm.dbg.value(metadata i1 %63, metadata !12148, metadata !DIExpression()), !dbg !12226
  %64 = load i32, i32* @sched_verbose, align 4, !dbg !12227
  %cmp218 = icmp sgt i32 %64, 0, !dbg !12228
  br i1 %cmp218, label %do.body221, label %if.end293, !dbg !12229

do.body221:                                       ; preds = %lor.end
  %65 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12230
  %tobool222 = icmp eq i8 %65, 0, !dbg !12230
  br i1 %tobool222, label %if.else271, label %do.body224, !dbg !12231

do.body224:                                       ; preds = %do.body221
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %66, metadata !12127, metadata !DIExpression()), !dbg !12157
  %arrayidx228 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12232
  %rt_int229 = bitcast %union.rtunion_def* %arrayidx228 to i32*, !dbg !12232
  %67 = load i32, i32* %rt_int229, align 8, !dbg !12232
  %68 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %68, metadata !12128, metadata !DIExpression()), !dbg !12157
  %arrayidx232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12232
  %rt_int233 = bitcast %union.rtunion_def* %arrayidx232 to i32*, !dbg !12232
  %69 = load i32, i32* %rt_int233, align 8, !dbg !12232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %68, metadata !12128, metadata !DIExpression()), !dbg !12157
  %arrayidx236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i64 0, i32 1, i32 0, i32 1, !dbg !12232
  %rt_bb237 = bitcast %struct.object_block** %arrayidx236 to %struct.basic_block_def**, !dbg !12232
  %70 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb237, align 8, !dbg !12232
  %index238 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %70, i64 0, i32 9, !dbg !12232
  %71 = load i32, i32* %index238, align 8, !dbg !12232
  %cond242 = select i1 %63, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), !dbg !12232
  %call243 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.82, i64 0, i64 0), i32 %67, i32 %69, i32 %71, i8* %cond242) #6, !dbg !12232
  %mul244 = shl nsw i32 %call243, 1, !dbg !12232
  %add245 = or i32 %mul244, 1, !dbg !12232
  call void @llvm.dbg.value(metadata i32 %add245, metadata !12151, metadata !DIExpression()), !dbg !12233
  %conv247 = sext i32 %add245 to i64, !dbg !12232
  %72 = alloca i8, i64 %conv247, align 16, !dbg !12232
  call void @llvm.dbg.value(metadata i8* %72, metadata !12156, metadata !DIExpression()), !dbg !12233
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %73, metadata !12127, metadata !DIExpression()), !dbg !12157
  %arrayidx252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12232
  %rt_int253 = bitcast %union.rtunion_def* %arrayidx252 to i32*, !dbg !12232
  %74 = load i32, i32* %rt_int253, align 8, !dbg !12232
  %75 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %75, metadata !12128, metadata !DIExpression()), !dbg !12157
  %arrayidx256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12232
  %rt_int257 = bitcast %union.rtunion_def* %arrayidx256 to i32*, !dbg !12232
  %76 = load i32, i32* %rt_int257, align 8, !dbg !12232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %75, metadata !12128, metadata !DIExpression()), !dbg !12157
  %arrayidx260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i64 0, i32 1, i32 0, i32 1, !dbg !12232
  %rt_bb261 = bitcast %struct.object_block** %arrayidx260 to %struct.basic_block_def**, !dbg !12232
  %77 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb261, align 8, !dbg !12232
  %index262 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %77, i64 0, i32 9, !dbg !12232
  %78 = load i32, i32* %index262, align 8, !dbg !12232
  %call267 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %72, i64 %conv247, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.82, i64 0, i64 0), i32 %74, i32 %76, i32 %78, i8* %cond242) #6, !dbg !12232
  call void @sel_prepare_string_for_dot_label(i8* nonnull %72) #6, !dbg !12232
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12232
  %call268 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %72) #6, !dbg !12232
  br label %if.end293, !dbg !12232

if.else271:                                       ; preds = %do.body221
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12230
  %81 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12230
  call void @llvm.dbg.value(metadata %struct.rtx_def* %81, metadata !12127, metadata !DIExpression()), !dbg !12157
  %arrayidx274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12230
  %rt_int275 = bitcast %union.rtunion_def* %arrayidx274 to i32*, !dbg !12230
  %82 = load i32, i32* %rt_int275, align 8, !dbg !12230
  %83 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12230
  call void @llvm.dbg.value(metadata %struct.rtx_def* %83, metadata !12128, metadata !DIExpression()), !dbg !12157
  %arrayidx278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12230
  %rt_int279 = bitcast %union.rtunion_def* %arrayidx278 to i32*, !dbg !12230
  %84 = load i32, i32* %rt_int279, align 8, !dbg !12230
  call void @llvm.dbg.value(metadata %struct.rtx_def* %83, metadata !12128, metadata !DIExpression()), !dbg !12157
  %arrayidx282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i64 0, i32 1, i32 0, i32 1, !dbg !12230
  %rt_bb283 = bitcast %struct.object_block** %arrayidx282 to %struct.basic_block_def**, !dbg !12230
  %85 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb283, align 8, !dbg !12230
  %index284 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %85, i64 0, i32 9, !dbg !12230
  %86 = load i32, i32* %index284, align 8, !dbg !12230
  %cond288 = select i1 %63, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), !dbg !12230
  %call289 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.82, i64 0, i64 0), i32 %82, i32 %84, i32 %86, i8* %cond288) #6, !dbg !12230
  br label %if.end293

if.end293:                                        ; preds = %do.body224, %if.else271, %lor.end
  br i1 %63, label %if.then295, label %if.else296, !dbg !12234

if.then295:                                       ; preds = %if.end293
  %87 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12235
  call void @llvm.dbg.value(metadata %struct.rtx_def* %87, metadata !12128, metadata !DIExpression()), !dbg !12157
  call void @add_dirty_fence_to_fences(%struct.flist_tail_def* %new_fences, %struct.rtx_def* %87, %struct._fence* nonnull %fence1) #6, !dbg !12237
  br label %for.inc306, !dbg !12237

if.else296:                                       ; preds = %if.end293
  %88 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !12238
  %89 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %89, metadata !12128, metadata !DIExpression()), !dbg !12157
  %arrayidx299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i64 0, i32 1, i32 0, i32 1, !dbg !12240
  %rt_bb300 = bitcast %struct.object_block** %arrayidx299 to %struct.basic_block_def**, !dbg !12240
  %90 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb300, align 8, !dbg !12240
  %index301 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %90, i64 0, i32 9, !dbg !12240
  %91 = load i32, i32* %index301, align 8, !dbg !12240
  %call303 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %88, i32 %91) #6, !dbg !12241
  %92 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12242
  call void @llvm.dbg.value(metadata %struct.rtx_def* %92, metadata !12128, metadata !DIExpression()), !dbg !12157
  call void @add_clean_fence_to_fences(%struct.flist_tail_def* %new_fences, %struct.rtx_def* %92, %struct._fence* nonnull %fence1) #6, !dbg !12243
  br label %for.inc306

for.inc306:                                       ; preds = %for.body158, %lor.lhs.false187, %if.else296, %if.then295
  call void @llvm.dbg.value(metadata %struct.succ_iterator* %si, metadata !12129, metadata !DIExpression(DW_OP_deref)), !dbg !12157
  call fastcc void @_succ_iter_next(%struct.succ_iterator* nonnull %si) #7, !dbg !12208
  br label %for.cond155, !dbg !12208, !llvm.loop !12244

cleanup.loopexit:                                 ; preds = %for.cond155
  br label %cleanup, !dbg !12246

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true51, %cond.end31, %land.lhs.true73, %do.body101, %if.else, %if.then94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !12246
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #8, !dbg !12246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !12246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !12246
  ret void, !dbg !12246
}

declare dso_local void @flist_clear(%struct._list_node**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @_list_iter_cond_x(%struct._list_node* %l, %struct.rtx_def** %xp) unnamed_addr #0 !dbg !12247 {
entry:
  call void @llvm.dbg.value(metadata %struct._list_node* %l, metadata !12251, metadata !DIExpression()), !dbg !12253
  call void @llvm.dbg.value(metadata %struct.rtx_def** %xp, metadata !12252, metadata !DIExpression()), !dbg !12253
  %tobool = icmp eq %struct._list_node* %l, null, !dbg !12254
  br i1 %tobool, label %return, label %if.then, !dbg !12256

if.then:                                          ; preds = %entry
  %x = getelementptr inbounds %struct._list_node, %struct._list_node* %l, i64 0, i32 1, i32 0, i32 0, !dbg !12257
  %0 = bitcast %struct.rtx_def** %x to i64*, !dbg !12257
  %1 = load i64, i64* %0, align 8, !dbg !12257
  %2 = bitcast %struct.rtx_def** %xp to i64*, !dbg !12259
  store i64 %1, i64* %2, align 8, !dbg !12259
  br label %return, !dbg !12260

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %entry ], !dbg !12253
  ret i8 %retval.0, !dbg !12261
}

declare dso_local zeroext i8 @in_same_ebb_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @in_fallthru_bb_p(%struct.rtx_def* %insn, %struct.rtx_def* %succ) unnamed_addr #5 !dbg !12262 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !12264, metadata !DIExpression()), !dbg !12267
  call void @llvm.dbg.value(metadata %struct.rtx_def* %succ, metadata !12265, metadata !DIExpression()), !dbg !12267
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !12268
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !12268
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !12268
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !12266, metadata !DIExpression()), !dbg !12267
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %succ, i64 0, i32 1, i32 0, i32 1, !dbg !12269
  %rt_bb4 = bitcast %struct.object_block** %arrayidx3 to %struct.basic_block_def**, !dbg !12269
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb4, align 8, !dbg !12269
  %cmp = icmp eq %struct.basic_block_def* %0, %1, !dbg !12271
  br i1 %cmp, label %cleanup, label %if.end, !dbg !12272

if.end:                                           ; preds = %entry
  %call = tail call %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def* %0) #6, !dbg !12273
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !12273
  br i1 %tobool, label %cleanup, label %if.then5, !dbg !12275

if.then5:                                         ; preds = %if.end
  %call6 = tail call %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def* %0) #6, !dbg !12276
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call6, i64 0, i32 1, !dbg !12277
  br label %while.cond, !dbg !12278

while.cond:                                       ; preds = %while.body, %if.then5
  %bb.0.in = phi %struct.basic_block_def** [ %dest, %if.then5 ], [ %next_bb, %while.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !12267
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !12266, metadata !DIExpression()), !dbg !12267
  %call8 = tail call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %bb.0) #6, !dbg !12279
  %tobool9 = icmp eq i8 %call8, 0, !dbg !12278
  br i1 %tobool9, label %while.end, label %while.body, !dbg !12278

while.body:                                       ; preds = %while.cond
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !12280
  br label %while.cond, !dbg !12278, !llvm.loop !12281

while.end:                                        ; preds = %while.cond
  %bb.0.lcssa = phi %struct.basic_block_def* [ %bb.0, %while.cond ], !dbg !12267
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb4, align 8, !dbg !12282
  %cmp14 = icmp eq %struct.basic_block_def* %bb.0.lcssa, %2, !dbg !12283
  %conv15 = zext i1 %cmp14 to i8, !dbg !12284
  br label %cleanup, !dbg !12285

cleanup:                                          ; preds = %if.end, %entry, %while.end
  %retval.0 = phi i8 [ %conv15, %while.end ], [ 1, %entry ], [ 0, %if.end ], !dbg !12267
  ret i8 %retval.0, !dbg !12286
}

declare dso_local void @add_dirty_fence_to_fences(%struct.flist_tail_def*, %struct.rtx_def*, %struct._fence*) local_unnamed_addr #2

declare dso_local void @add_clean_fence_to_fences(%struct.flist_tail_def*, %struct.rtx_def*, %struct._fence*) local_unnamed_addr #2

declare dso_local void @free_data_for_scheduled_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @simplify_changed_insns() unnamed_addr #5 !dbg !12287 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !12289, metadata !DIExpression()), !dbg !12300
  br label %for.cond, !dbg !12301

for.cond:                                         ; preds = %for.inc53, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc53 ], [ 0, %entry ], !dbg !12302
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12289, metadata !DIExpression()), !dbg !12300
  %0 = load i32, i32* @current_nr_blocks, align 4, !dbg !12303
  %1 = sext i32 %0 to i64, !dbg !12304
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !12304
  br i1 %cmp, label %for.body, label %for.end54, !dbg !12305

for.body:                                         ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !12306
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !12306
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !12306
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 2, !dbg !12306
  %4 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !12306
  %tobool = icmp eq %struct.VEC_basic_block_gc* %4, null, !dbg !12306
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12306

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %4, i64 0, i32 0, !dbg !12306
  br label %cond.end, !dbg !12306

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !12306
  %5 = load i32*, i32** @rgn_bb_table, align 8, !dbg !12306
  %6 = load i32*, i32** @ebb_head, align 8, !dbg !12306
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %indvars.iv, !dbg !12306
  %7 = load i32, i32* %arrayidx, align 4, !dbg !12306
  %idxprom4 = sext i32 %7 to i64, !dbg !12306
  %arrayidx5 = getelementptr inbounds i32, i32* %5, i64 %idxprom4, !dbg !12306
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !12306
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %8) #7, !dbg !12306
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !12290, metadata !DIExpression()), !dbg !12307
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !12308
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !12308
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !12308
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 0, !dbg !12308
  br label %for.cond6, !dbg !12308

for.cond6:                                        ; preds = %for.inc, %cond.end
  %insn.0.in = phi %struct.rtx_def** [ %head_, %cond.end ], [ %rt_rtx52, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !12309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !12294, metadata !DIExpression()), !dbg !12307
  %tobool7 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !12310
  br i1 %tobool7, label %for.inc53, label %land.rhs, !dbg !12310

land.rhs:                                         ; preds = %for.cond6
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !12310
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 1, !dbg !12310
  %11 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !12310
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !12310
  %rt_rtx = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !12310
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12310
  %cmp11 = icmp eq %struct.rtx_def* %insn.0, %13, !dbg !12310
  br i1 %cmp11, label %for.inc53, label %for.body12, !dbg !12308

for.body12:                                       ; preds = %land.rhs
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !12311
  %bf.load = load i32, i32* %14, align 8, !dbg !12311
  %bf.clear = and i32 %bf.load, 65535, !dbg !12311
  %cmp13 = icmp eq i32 %bf.clear, 8, !dbg !12311
  br i1 %cmp13, label %if.then, label %lor.lhs.false, !dbg !12311

lor.lhs.false:                                    ; preds = %for.body12
  %cmp16 = icmp eq i32 %bf.clear, 7, !dbg !12311
  br i1 %cmp16, label %if.then, label %lor.lhs.false17, !dbg !12311

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %cmp20 = icmp eq i32 %bf.clear, 9, !dbg !12311
  br i1 %cmp20, label %if.then, label %lor.lhs.false21, !dbg !12311

lor.lhs.false21:                                  ; preds = %lor.lhs.false17
  %cmp24 = icmp eq i32 %bf.clear, 10, !dbg !12311
  br i1 %cmp24, label %if.then, label %for.inc, !dbg !12312

if.then:                                          ; preds = %lor.lhs.false21, %lor.lhs.false17, %lor.lhs.false, %for.body12
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12313
  %base27 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i64 0, i32 0, !dbg !12313
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12313
  %base33 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !12313
  %arrayidx39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12313
  %rt_int = bitcast %union.rtunion_def* %arrayidx39 to i32*, !dbg !12313
  %17 = load i32, i32* %rt_int, align 8, !dbg !12313
  %call40 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base33, i32 %17) #7, !dbg !12313
  %call41 = tail call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base27, i32 %call40) #7, !dbg !12313
  call void @llvm.dbg.value(metadata %struct._sel_insn_data* %call41, metadata !12295, metadata !DIExpression()), !dbg !12314
  %was_substituted = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call41, i64 0, i32 0, i32 12, !dbg !12315
  %bf.load43 = load i8, i8* %was_substituted, align 1, !dbg !12315
  %bf.clear44 = and i8 %bf.load43, 2, !dbg !12315
  %tobool45 = icmp eq i8 %bf.clear44, 0, !dbg !12315
  br i1 %tobool45, label %for.inc, label %if.then46, !dbg !12317

if.then46:                                        ; preds = %if.then
  %call47 = tail call zeroext i8 @validate_simplify_insn(%struct.rtx_def* nonnull %insn.0) #6, !dbg !12318
  br label %for.inc, !dbg !12318

for.inc:                                          ; preds = %if.then, %lor.lhs.false21, %if.then46
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !12310
  %rt_rtx52 = bitcast %union.rtunion_def* %18 to %struct.rtx_def**, !dbg !12310
  br label %for.cond6, !dbg !12310, !llvm.loop !12319

for.inc53:                                        ; preds = %land.rhs, %for.cond6
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12321
  call void @llvm.dbg.value(metadata i32 undef, metadata !12289, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12300
  br label %for.cond, !dbg !12322, !llvm.loop !12323

for.end54:                                        ; preds = %for.cond
  ret void, !dbg !12325
}

declare dso_local void @sched_finish_ready_list() local_unnamed_addr #2

declare dso_local void @free_nop_pool() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_expr_t_heap_free(%struct.VEC_expr_t_heap** %vec_) unnamed_addr #0 !dbg !12326 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_expr_t_heap** @vec_av_set, metadata !12330, metadata !DIExpression()), !dbg !12331
  %0 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !12332
  %tobool = icmp eq %struct.VEC_expr_t_heap* %0, null, !dbg !12332
  br i1 %tobool, label %if.end, label %if.then, !dbg !12334

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_expr_t_heap* %0 to i8*, !dbg !12334
  tail call void @free(i8* nonnull %1) #6, !dbg !12332
  br label %if.end, !dbg !12332

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_expr_t_heap* null, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !12334
  ret void, !dbg !12334
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @vinsn_vec_free(%struct.VEC_vinsn_t_heap** %vinsn_vec) unnamed_addr #5 !dbg !12335 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_heap** %vinsn_vec, metadata !12337, metadata !DIExpression()), !dbg !12338
  %0 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %vinsn_vec, align 8, !dbg !12339
  %tobool = icmp eq %struct.VEC_vinsn_t_heap* %0, null, !dbg !12339
  br i1 %tobool, label %if.end, label %if.then, !dbg !12341

if.then:                                          ; preds = %entry
  tail call fastcc void @VEC_vinsn_t_heap_free(%struct.VEC_vinsn_t_heap** %vinsn_vec) #7, !dbg !12342
  br label %if.end, !dbg !12342

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !12343
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sel_region_target_finish(i8 zeroext %reset_sched_cycles_p) unnamed_addr #5 !dbg !12344 {
entry:
  call void @llvm.dbg.value(metadata i8 %reset_sched_cycles_p, metadata !12346, metadata !DIExpression()), !dbg !12349
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !12350
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !12348, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i32 0, metadata !12347, metadata !DIExpression()), !dbg !12349
  %tobool34 = icmp eq i8 %reset_sched_cycles_p, 0, !dbg !12351
  br i1 %tobool34, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !12356

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !12356

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !12356

for.cond.us:                                      ; preds = %for.inc.us, %entry.split.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.us ], [ 0, %entry.split.us ], !dbg !12357
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12347, metadata !DIExpression()), !dbg !12349
  %0 = load i32, i32* @current_nr_blocks, align 4, !dbg !12358
  %1 = sext i32 %0 to i64, !dbg !12359
  %cmp.us = icmp slt i64 %indvars.iv, %1, !dbg !12359
  br i1 %cmp.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !12360

for.body.us:                                      ; preds = %for.cond.us
  %2 = trunc i64 %indvars.iv to i32, !dbg !12361
  %call1.us = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %2) #6, !dbg !12361
  %tobool.us = icmp eq i32 %call1.us, 0, !dbg !12361
  br i1 %tobool.us, label %if.end.us, label %for.inc.us, !dbg !12363

if.end.us:                                        ; preds = %for.body.us
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !12364
  %cfg.us = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !12364
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg.us, align 8, !dbg !12364
  %x_basic_block_info.us = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 2, !dbg !12364
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info.us, align 8, !dbg !12364
  %tobool2.us = icmp eq %struct.VEC_basic_block_gc* %5, null, !dbg !12364
  br i1 %tobool2.us, label %cond.end.us, label %cond.true.us, !dbg !12364

cond.true.us:                                     ; preds = %if.end.us
  %base.us = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i64 0, i32 0, !dbg !12364
  br label %cond.end.us, !dbg !12364

cond.end.us:                                      ; preds = %cond.true.us, %if.end.us
  %cond.us = phi %struct.VEC_basic_block_base* [ %base.us, %cond.true.us ], [ null, %if.end.us ], !dbg !12364
  %6 = load i32*, i32** @rgn_bb_table, align 8, !dbg !12364
  %7 = load i32*, i32** @ebb_head, align 8, !dbg !12364
  %arrayidx.us = getelementptr inbounds i32, i32* %7, i64 %indvars.iv, !dbg !12364
  %8 = load i32, i32* %arrayidx.us, align 4, !dbg !12364
  %idxprom6.us = sext i32 %8 to i64, !dbg !12364
  %arrayidx7.us = getelementptr inbounds i32, i32* %6, i64 %idxprom6.us, !dbg !12364
  %9 = load i32, i32* %arrayidx7.us, align 4, !dbg !12364
  %call8.us = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond.us, i32 %9) #7, !dbg !12364
  %call9.us = tail call zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def* %call8.us) #6, !dbg !12366
  %tobool10.us = icmp eq i8 %call9.us, 0, !dbg !12366
  br i1 %tobool10.us, label %if.end12.us, label %for.inc.us, !dbg !12367

if.end12.us:                                      ; preds = %cond.end.us
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !12368
  %cfg14.us = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 1, !dbg !12368
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg14.us, align 8, !dbg !12368
  %x_basic_block_info15.us = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 2, !dbg !12368
  %12 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info15.us, align 8, !dbg !12368
  %tobool16.us = icmp eq %struct.VEC_basic_block_gc* %12, null, !dbg !12368
  br i1 %tobool16.us, label %cond.end23.us, label %cond.true17.us, !dbg !12368

cond.true17.us:                                   ; preds = %if.end12.us
  %base21.us = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %12, i64 0, i32 0, !dbg !12368
  br label %cond.end23.us, !dbg !12368

cond.end23.us:                                    ; preds = %cond.true17.us, %if.end12.us
  %cond24.us = phi %struct.VEC_basic_block_base* [ %base21.us, %cond.true17.us ], [ null, %if.end12.us ], !dbg !12368
  %13 = load i32*, i32** @rgn_bb_table, align 8, !dbg !12368
  %14 = load i32*, i32** @ebb_head, align 8, !dbg !12368
  %arrayidx26.us = getelementptr inbounds i32, i32* %14, i64 %indvars.iv, !dbg !12368
  %15 = load i32, i32* %arrayidx26.us, align 4, !dbg !12368
  %idxprom27.us = sext i32 %15 to i64, !dbg !12368
  %arrayidx28.us = getelementptr inbounds i32, i32* %13, i64 %idxprom27.us, !dbg !12368
  %16 = load i32, i32* %arrayidx28.us, align 4, !dbg !12368
  %call29.us = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond24.us, i32 %16) #7, !dbg !12368
  tail call fastcc void @find_ebb_boundaries(%struct.basic_block_def* %call29.us, %struct.bitmap_head_def* %call) #7, !dbg !12369
  %17 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !12370
  %head.us = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %17, i64 0, i32 10, !dbg !12372
  %18 = load %struct.rtx_def*, %struct.rtx_def** %head.us, align 8, !dbg !12372
  %tail.us = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %17, i64 0, i32 11, !dbg !12373
  %19 = load %struct.rtx_def*, %struct.rtx_def** %tail.us, align 8, !dbg !12373
  %call30.us = tail call i32 @no_real_insns_p(%struct.rtx_def* %18, %struct.rtx_def* %19) #6, !dbg !12374
  %tobool31.us = icmp eq i32 %call30.us, 0, !dbg !12374
  br i1 %tobool31.us, label %if.end33.us, label %for.inc.us, !dbg !12375

if.end33.us:                                      ; preds = %cond.end23.us
  %20 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 4), align 8, !dbg !12376
  %tobool37.us = icmp eq void (%struct._IO_FILE*, i32, i32)* %20, null, !dbg !12378
  br i1 %tobool37.us, label %if.end39.us, label %if.then38.us, !dbg !12379

if.then38.us:                                     ; preds = %if.end33.us
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12380
  %22 = load i32, i32* @sched_verbose, align 4, !dbg !12381
  tail call void %20(%struct._IO_FILE* %21, i32 %22, i32 -1) #6, !dbg !12382
  br label %if.end39.us, !dbg !12382

if.end39.us:                                      ; preds = %if.then38.us, %if.end33.us
  tail call fastcc void @put_TImodes() #7, !dbg !12383
  %23 = load void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 5), align 8, !dbg !12384
  %tobool40.us = icmp eq void (%struct._IO_FILE*, i32)* %23, null, !dbg !12386
  br i1 %tobool40.us, label %for.inc.us, label %if.then41.us, !dbg !12387

if.then41.us:                                     ; preds = %if.end39.us
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12388
  %25 = load i32, i32* @sched_verbose, align 4, !dbg !12390
  tail call void %23(%struct._IO_FILE* %24, i32 %25) #6, !dbg !12391
  tail call void @sched_init_luids(%struct.VEC_basic_block_heap* null, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #6, !dbg !12392
  br label %for.inc.us, !dbg !12393

for.inc.us:                                       ; preds = %if.then41.us, %if.end39.us, %cond.end23.us, %cond.end.us, %for.body.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12394
  call void @llvm.dbg.value(metadata i32 undef, metadata !12347, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12349
  br label %for.cond.us, !dbg !12395, !llvm.loop !12396

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !12398

for.cond:                                         ; preds = %for.inc, %entry.entry.split_crit_edge
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc ], [ 0, %entry.entry.split_crit_edge ], !dbg !12357
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !12347, metadata !DIExpression()), !dbg !12349
  %26 = load i32, i32* @current_nr_blocks, align 4, !dbg !12358
  %27 = sext i32 %26 to i64, !dbg !12359
  %cmp = icmp slt i64 %indvars.iv1, %27, !dbg !12359
  br i1 %cmp, label %for.body, label %for.end.us-lcssa, !dbg !12360

for.body:                                         ; preds = %for.cond
  %28 = trunc i64 %indvars.iv1 to i32, !dbg !12361
  %call1 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %28) #6, !dbg !12361
  %tobool = icmp eq i32 %call1, 0, !dbg !12361
  br i1 %tobool, label %if.end, label %for.inc, !dbg !12363

if.end:                                           ; preds = %for.body
  %29 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !12364
  %cfg = getelementptr inbounds %struct.function, %struct.function* %29, i64 0, i32 1, !dbg !12364
  %30 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !12364
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %30, i64 0, i32 2, !dbg !12364
  %31 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !12364
  %tobool2 = icmp eq %struct.VEC_basic_block_gc* %31, null, !dbg !12364
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !12364

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %31, i64 0, i32 0, !dbg !12364
  br label %cond.end, !dbg !12364

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !12364
  %32 = load i32*, i32** @rgn_bb_table, align 8, !dbg !12364
  %33 = load i32*, i32** @ebb_head, align 8, !dbg !12364
  %arrayidx = getelementptr inbounds i32, i32* %33, i64 %indvars.iv1, !dbg !12364
  %34 = load i32, i32* %arrayidx, align 4, !dbg !12364
  %idxprom6 = sext i32 %34 to i64, !dbg !12364
  %arrayidx7 = getelementptr inbounds i32, i32* %32, i64 %idxprom6, !dbg !12364
  %35 = load i32, i32* %arrayidx7, align 4, !dbg !12364
  %call8 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %35) #7, !dbg !12364
  %call9 = tail call zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def* %call8) #6, !dbg !12366
  %tobool10 = icmp eq i8 %call9, 0, !dbg !12366
  br i1 %tobool10, label %if.end12, label %for.inc, !dbg !12367

if.end12:                                         ; preds = %cond.end
  %36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !12368
  %cfg14 = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, i32 1, !dbg !12368
  %37 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg14, align 8, !dbg !12368
  %x_basic_block_info15 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %37, i64 0, i32 2, !dbg !12368
  %38 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info15, align 8, !dbg !12368
  %tobool16 = icmp eq %struct.VEC_basic_block_gc* %38, null, !dbg !12368
  br i1 %tobool16, label %cond.end23, label %cond.true17, !dbg !12368

cond.true17:                                      ; preds = %if.end12
  %base21 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %38, i64 0, i32 0, !dbg !12368
  br label %cond.end23, !dbg !12368

cond.end23:                                       ; preds = %if.end12, %cond.true17
  %cond24 = phi %struct.VEC_basic_block_base* [ %base21, %cond.true17 ], [ null, %if.end12 ], !dbg !12368
  %39 = load i32*, i32** @rgn_bb_table, align 8, !dbg !12368
  %40 = load i32*, i32** @ebb_head, align 8, !dbg !12368
  %arrayidx26 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv1, !dbg !12368
  %41 = load i32, i32* %arrayidx26, align 4, !dbg !12368
  %idxprom27 = sext i32 %41 to i64, !dbg !12368
  %arrayidx28 = getelementptr inbounds i32, i32* %39, i64 %idxprom27, !dbg !12368
  %42 = load i32, i32* %arrayidx28, align 4, !dbg !12368
  %call29 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond24, i32 %42) #7, !dbg !12368
  tail call fastcc void @find_ebb_boundaries(%struct.basic_block_def* %call29, %struct.bitmap_head_def* %call) #7, !dbg !12369
  %43 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !12370
  %head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %43, i64 0, i32 10, !dbg !12372
  %44 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !12372
  %tail = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %43, i64 0, i32 11, !dbg !12373
  %45 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !12373
  %call30 = tail call i32 @no_real_insns_p(%struct.rtx_def* %44, %struct.rtx_def* %45) #6, !dbg !12374
  %tobool31 = icmp eq i32 %call30, 0, !dbg !12374
  br i1 %tobool31, label %if.end33, label %for.inc, !dbg !12375

if.end33:                                         ; preds = %cond.end23
  tail call fastcc void @reset_sched_cycles_in_current_ebb() #7, !dbg !12399
  %46 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 4), align 8, !dbg !12376
  %tobool37 = icmp eq void (%struct._IO_FILE*, i32, i32)* %46, null, !dbg !12378
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !12379

if.then38:                                        ; preds = %if.end33
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12380
  %48 = load i32, i32* @sched_verbose, align 4, !dbg !12381
  tail call void %46(%struct._IO_FILE* %47, i32 %48, i32 -1) #6, !dbg !12382
  br label %if.end39, !dbg !12382

if.end39:                                         ; preds = %if.end33, %if.then38
  tail call fastcc void @put_TImodes() #7, !dbg !12383
  %49 = load void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 5), align 8, !dbg !12384
  %tobool40 = icmp eq void (%struct._IO_FILE*, i32)* %49, null, !dbg !12386
  br i1 %tobool40, label %for.inc, label %if.then41, !dbg !12387

if.then41:                                        ; preds = %if.end39
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12388
  %51 = load i32, i32* @sched_verbose, align 4, !dbg !12390
  tail call void %49(%struct._IO_FILE* %50, i32 %51) #6, !dbg !12391
  tail call void @sched_init_luids(%struct.VEC_basic_block_heap* null, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #6, !dbg !12392
  br label %for.inc, !dbg !12393

for.inc:                                          ; preds = %if.end39, %cond.end23, %cond.end, %for.body, %if.then41
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !12394
  call void @llvm.dbg.value(metadata i32 undef, metadata !12347, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12349
  br label %for.cond, !dbg !12395, !llvm.loop !12396

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !12398

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !12398
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !12348, metadata !DIExpression()), !dbg !12349
  ret void, !dbg !12400
}

declare dso_local void @sel_finish_global_and_expr() local_unnamed_addr #2

declare dso_local void @free_nop_vinsn() local_unnamed_addr #2

declare dso_local void @finish_deps_global() local_unnamed_addr #2

declare dso_local void @sched_finish_luids() local_unnamed_addr #2

declare dso_local void @sel_finish_bbs() local_unnamed_addr #2

declare dso_local void @sel_unregister_cfg_hooks() local_unnamed_addr #2

declare dso_local zeroext i8 @validate_simplify_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vinsn_t_heap_free(%struct.VEC_vinsn_t_heap** %vec_) unnamed_addr #0 !dbg !12401 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vinsn_t_heap** %vec_, metadata !12405, metadata !DIExpression()), !dbg !12406
  %0 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %vec_, align 8, !dbg !12407
  %tobool = icmp eq %struct.VEC_vinsn_t_heap* %0, null, !dbg !12407
  br i1 %tobool, label %if.end, label %if.then, !dbg !12409

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_vinsn_t_heap* %0 to i8*, !dbg !12409
  tail call void @free(i8* nonnull %1) #6, !dbg !12407
  br label %if.end, !dbg !12407

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_vinsn_t_heap* null, %struct.VEC_vinsn_t_heap** %vec_, align 8, !dbg !12409
  ret void, !dbg !12409
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_ebb_boundaries(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %scheduled_blocks) unnamed_addr #5 !dbg !12410 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !12414, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %scheduled_blocks, metadata !12415, metadata !DIExpression()), !dbg !12438
  %0 = bitcast %struct.rtx_def** %head to i8*, !dbg !12439
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !12439
  %1 = bitcast %struct.rtx_def** %tail to i8*, !dbg !12439
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !12439
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !12418, metadata !DIExpression()), !dbg !12438
  %2 = load i32, i32* @sched_verbose, align 4, !dbg !12440
  %cmp = icmp sgt i32 %2, 1, !dbg !12441
  br i1 %cmp, label %do.body, label %if.end10, !dbg !12442

do.body:                                          ; preds = %entry
  %3 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12443
  %tobool = icmp eq i8 %3, 0, !dbg !12443
  br i1 %tobool, label %if.else, label %do.body2, !dbg !12444

do.body2:                                         ; preds = %do.body
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !12445
  %mul = shl nsw i32 %call, 1, !dbg !12445
  %add = or i32 %mul, 1, !dbg !12445
  call void @llvm.dbg.value(metadata i32 %add, metadata !12419, metadata !DIExpression()), !dbg !12446
  %conv = sext i32 %add to i64, !dbg !12445
  %4 = alloca i8, i64 %conv, align 16, !dbg !12445
  call void @llvm.dbg.value(metadata i8* %4, metadata !12424, metadata !DIExpression()), !dbg !12446
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %4, i64 %conv, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !12445
  call void @sel_prepare_string_for_dot_label(i8* nonnull %4) #6, !dbg !12445
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12445
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %4) #6, !dbg !12445
  br label %if.end10, !dbg !12445

if.else:                                          ; preds = %do.body
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12443
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !12443
  br label %if.end10

if.end10:                                         ; preds = %do.body2, %if.else, %entry
  br label %do.body11, !dbg !12447

do.body11:                                        ; preds = %land.end, %if.end10
  %bb1.0 = phi %struct.basic_block_def* [ %bb, %if.end10 ], [ %bb1.1, %land.end ], !dbg !12448
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb1.0, metadata !12418, metadata !DIExpression()), !dbg !12438
  %7 = load i32*, i32** @block_to_bb, align 8, !dbg !12449
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb1.0, i64 0, i32 9, !dbg !12449
  %8 = load i32, i32* %index, align 8, !dbg !12449
  %idxprom = sext i32 %8 to i64, !dbg !12449
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !12449
  %9 = load i32, i32* %arrayidx, align 4, !dbg !12449
  %call12 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %scheduled_blocks, i32 %9) #6, !dbg !12450
  %10 = load i32, i32* @sched_verbose, align 4, !dbg !12451
  %cmp13 = icmp sgt i32 %10, 1, !dbg !12452
  br i1 %cmp13, label %do.body16, label %do.cond41, !dbg !12453

do.body16:                                        ; preds = %do.body11
  %11 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12454
  %tobool17 = icmp eq i8 %11, 0, !dbg !12454
  br i1 %tobool17, label %if.else34, label %do.body19, !dbg !12455

do.body19:                                        ; preds = %do.body16
  %12 = load i32, i32* %index, align 8, !dbg !12456
  %call22 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0), i32 %12) #6, !dbg !12456
  %mul23 = shl nsw i32 %call22, 1, !dbg !12456
  %add24 = or i32 %mul23, 1, !dbg !12456
  call void @llvm.dbg.value(metadata i32 %add24, metadata !12425, metadata !DIExpression()), !dbg !12457
  %conv26 = sext i32 %add24 to i64, !dbg !12456
  %13 = alloca i8, i64 %conv26, align 16, !dbg !12456
  call void @llvm.dbg.value(metadata i8* %13, metadata !12431, metadata !DIExpression()), !dbg !12457
  %14 = load i32, i32* %index, align 8, !dbg !12456
  %call30 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %13, i64 %conv26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0), i32 %14) #6, !dbg !12456
  call void @sel_prepare_string_for_dot_label(i8* nonnull %13) #6, !dbg !12456
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12456
  %call31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %13) #6, !dbg !12456
  br label %do.cond41, !dbg !12456

if.else34:                                        ; preds = %do.body16
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12454
  %17 = load i32, i32* %index, align 8, !dbg !12454
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0), i32 %17) #6, !dbg !12454
  br label %do.cond41

do.cond41:                                        ; preds = %do.body11, %if.else34, %do.body19
  %call42 = call zeroext i8 @bb_ends_ebb_p(%struct.basic_block_def* %bb1.0) #6, !dbg !12458
  %tobool43 = icmp eq i8 %call42, 0, !dbg !12458
  br i1 %tobool43, label %land.rhs, label %land.end, !dbg !12459

land.rhs:                                         ; preds = %do.cond41
  %call44 = call fastcc %struct.basic_block_def* @bb_next_bb(%struct.basic_block_def* %bb1.0) #7, !dbg !12460
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call44, metadata !12418, metadata !DIExpression()), !dbg !12438
  %tobool45 = icmp ne %struct.basic_block_def* %call44, null, !dbg !12459
  br label %land.end

land.end:                                         ; preds = %do.cond41, %land.rhs
  %bb1.1 = phi %struct.basic_block_def* [ %bb1.0, %do.cond41 ], [ %call44, %land.rhs ], !dbg !12438
  %18 = phi i1 [ false, %do.cond41 ], [ %tobool45, %land.rhs ], !dbg !12438
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb1.1, metadata !12418, metadata !DIExpression()), !dbg !12438
  br i1 %18, label %do.body11, label %do.end46, !dbg !12461, !llvm.loop !12462

do.end46:                                         ; preds = %land.end
  %bb1.1.lcssa = phi %struct.basic_block_def* [ %bb1.1, %land.end ], !dbg !12438
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb1.1.lcssa, metadata !12418, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb1.1.lcssa, metadata !12418, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb1.1.lcssa, metadata !12418, metadata !DIExpression()), !dbg !12438
  %19 = load i32, i32* @sched_verbose, align 4, !dbg !12464
  %cmp47 = icmp sgt i32 %19, 1, !dbg !12465
  br i1 %cmp47, label %do.body50, label %if.end71, !dbg !12466

do.body50:                                        ; preds = %do.end46
  %20 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12467
  %tobool51 = icmp eq i8 %20, 0, !dbg !12467
  br i1 %tobool51, label %if.else66, label %do.body53, !dbg !12468

do.body53:                                        ; preds = %do.body50
  %call55 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !12469
  %mul56 = shl nsw i32 %call55, 1, !dbg !12469
  %add57 = or i32 %mul56, 1, !dbg !12469
  call void @llvm.dbg.value(metadata i32 %add57, metadata !12432, metadata !DIExpression()), !dbg !12470
  %conv59 = sext i32 %add57 to i64, !dbg !12469
  %21 = alloca i8, i64 %conv59, align 16, !dbg !12469
  call void @llvm.dbg.value(metadata i8* %21, metadata !12437, metadata !DIExpression()), !dbg !12470
  %call62 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %21, i64 %conv59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !12469
  call void @sel_prepare_string_for_dot_label(i8* nonnull %21) #6, !dbg !12469
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12469
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %21) #6, !dbg !12469
  br label %if.end71, !dbg !12469

if.else66:                                        ; preds = %do.body50
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12467
  %call67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !12467
  br label %if.end71

if.end71:                                         ; preds = %do.body53, %if.else66, %do.end46
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !12416, metadata !DIExpression(DW_OP_deref)), !dbg !12438
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !12417, metadata !DIExpression(DW_OP_deref)), !dbg !12438
  call void @get_ebb_head_tail(%struct.basic_block_def* %bb, %struct.basic_block_def* %bb1.1.lcssa, %struct.rtx_def** nonnull %head, %struct.rtx_def** nonnull %tail) #6, !dbg !12471
  %24 = bitcast %struct.rtx_def** %head to i64*, !dbg !12472
  %25 = load i64, i64* %24, align 8, !dbg !12472
  %26 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !12473
  %head72 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %26, i64 0, i32 10, !dbg !12474
  %27 = bitcast %struct.rtx_def** %head72 to i64*, !dbg !12475
  store i64 %25, i64* %27, align 8, !dbg !12475
  %28 = bitcast %struct.rtx_def** %tail to i64*, !dbg !12476
  %29 = load i64, i64* %28, align 8, !dbg !12476
  %tail73 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %26, i64 0, i32 11, !dbg !12477
  %30 = bitcast %struct.rtx_def** %tail73 to i64*, !dbg !12478
  store i64 %29, i64* %30, align 8, !dbg !12478
  %31 = inttoptr i64 %25 to %struct.rtx_def*, !dbg !12479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !12416, metadata !DIExpression()), !dbg !12438
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !12479
  %33 = bitcast %union.rtunion_def* %32 to i64*, !dbg !12479
  %34 = load i64, i64* %33, align 8, !dbg !12479
  %prev_head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %26, i64 0, i32 8, !dbg !12480
  %35 = bitcast %struct.rtx_def** %prev_head to i64*, !dbg !12481
  store i64 %34, i64* %35, align 8, !dbg !12481
  %36 = inttoptr i64 %29 to %struct.rtx_def*, !dbg !12482
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !12417, metadata !DIExpression()), !dbg !12438
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !12482
  %38 = bitcast %union.rtunion_def* %37 to i64*, !dbg !12482
  %39 = load i64, i64* %38, align 8, !dbg !12482
  %next_tail = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %26, i64 0, i32 9, !dbg !12483
  %40 = bitcast %struct.rtx_def** %next_tail to i64*, !dbg !12484
  store i64 %39, i64* %40, align 8, !dbg !12484
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !12485
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !12485
  ret void, !dbg !12485
}

declare dso_local i32 @no_real_insns_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @reset_sched_cycles_in_current_ebb() unnamed_addr #5 !dbg !12486 {
entry:
  %sort_p = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !12488, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 -1, metadata !12489, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 0, metadata !12490, metadata !DIExpression()), !dbg !12528
  %0 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 4), align 8, !dbg !12529
  %tobool = icmp eq void (%struct._IO_FILE*, i32, i32)* %0, null, !dbg !12531
  br i1 %tobool, label %if.end, label %if.then, !dbg !12532

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12533
  %2 = load i32, i32* @sched_verbose, align 4, !dbg !12535
  tail call void %0(%struct._IO_FILE* %1, i32 %2, i32 -1) #6, !dbg !12536
  br label %if.end, !dbg !12537

if.end:                                           ; preds = %entry, %if.then
  %3 = load i8*, i8** @curr_state, align 8, !dbg !12538
  tail call void @state_reset(i8* %3) #6, !dbg !12539
  %4 = load i8*, i8** @curr_state, align 8, !dbg !12540
  tail call void @advance_state(i8* %4) #6, !dbg !12541
  %5 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !12542
  %head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %5, i64 0, i32 10, !dbg !12543
  %6 = bitcast i32* %sort_p to i8*, !dbg !12544
  br label %for.cond, !dbg !12545

for.cond:                                         ; preds = %cleanup, %if.end
  %.pre4 = phi %struct.haifa_sched_info* [ %5, %if.end ], [ %.pre, %cleanup ]
  %7 = phi %struct.haifa_sched_info* [ %5, %if.end ], [ %.pre, %cleanup ], !dbg !12546
  %insn.0.in = phi %struct.rtx_def** [ %head, %if.end ], [ %rt_rtx, %cleanup ]
  %haifa_clock.0 = phi i32 [ 0, %if.end ], [ %haifa_clock.4, %cleanup ], !dbg !12528
  %haifa_last_clock.0 = phi i32 [ -1, %if.end ], [ %haifa_last_clock.1, %cleanup ], !dbg !12528
  %last_clock.0 = phi i32 [ 0, %if.end ], [ %last_clock.1, %cleanup ], !dbg !12528
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !12547
  call void @llvm.dbg.value(metadata i32 %last_clock.0, metadata !12488, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 %haifa_last_clock.0, metadata !12489, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 %haifa_clock.0, metadata !12490, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !12491, metadata !DIExpression()), !dbg !12528
  %next_tail = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %7, i64 0, i32 9, !dbg !12548
  %8 = load %struct.rtx_def*, %struct.rtx_def** %next_tail, align 8, !dbg !12548
  %cmp = icmp eq %struct.rtx_def* %insn.0, %8, !dbg !12549
  br i1 %cmp, label %for.end, label %for.body, !dbg !12550

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8, !dbg !12551
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !12552
  %bf.load = load i32, i32* %9, align 8, !dbg !12552
  %bf.clear = and i32 %bf.load, 65535, !dbg !12552
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !12552
  br i1 %cmp1, label %if.end14, label %lor.lhs.false, !dbg !12552

lor.lhs.false:                                    ; preds = %for.body
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !12552
  br i1 %cmp4, label %if.end14, label %lor.lhs.false5, !dbg !12552

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !12552
  br i1 %cmp8, label %if.end14, label %lor.lhs.false9, !dbg !12552

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !12552
  br i1 %cmp12, label %if.end14, label %cleanup, !dbg !12554

if.end14:                                         ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %for.body
  call void @llvm.dbg.value(metadata i8 0, metadata !12498, metadata !DIExpression()), !dbg !12544
  %call = call fastcc i32 @recog_memoized(%struct.rtx_def* %insn.0) #7, !dbg !12555
  %call.lobit = lshr i32 %call, 31, !dbg !12555
  %10 = trunc i32 %call.lobit to i8, !dbg !12555
  %.not = xor i8 %10, 1, !dbg !12555
  call void @llvm.dbg.value(metadata i8 %.not, metadata !12499, metadata !DIExpression()), !dbg !12544
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12556
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i64 0, i32 0, !dbg !12556
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12556
  %base20 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i64 0, i32 0, !dbg !12556
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12556
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !12556
  %13 = load i32, i32* %rt_int, align 8, !dbg !12556
  %call24 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base20, i32 %13) #7, !dbg !12556
  %call25 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call24) #7, !dbg !12556
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call25, i64 0, i32 10, !dbg !12556
  %14 = load i32, i32* %sched_cycle, align 8, !dbg !12556
  call void @llvm.dbg.value(metadata i32 %14, metadata !12501, metadata !DIExpression()), !dbg !12544
  %sub = sub nsw i32 %14, %last_clock.0, !dbg !12557
  call void @llvm.dbg.value(metadata i32 %sub, metadata !12492, metadata !DIExpression()), !dbg !12544
  %tobool26 = icmp eq i8 %.not, 0, !dbg !12558
  br i1 %tobool26, label %if.then27, label %if.else53, !dbg !12560

if.then27:                                        ; preds = %if.end14
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12561
  %base30 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i64 0, i32 0, !dbg !12561
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12561
  %base36 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i64 0, i32 0, !dbg !12561
  %17 = load i32, i32* %rt_int, align 8, !dbg !12561
  %call44 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base36, i32 %17) #7, !dbg !12561
  %call45 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base30, i32 %call44) #7, !dbg !12561
  %asm_p46 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call45, i64 0, i32 13, !dbg !12561
  %bf.load47 = load i8, i8* %asm_p46, align 4, !dbg !12561
  call void @llvm.dbg.value(metadata i8 %bf.load47, metadata !12498, metadata !DIExpression(DW_OP_constu, 2, DW_OP_and, DW_OP_stack_value)), !dbg !12544
  %bf.clear48 = lshr i8 %bf.load47, 1
  %bf.clear48.lobit = and i8 %bf.clear48, 1
  %18 = zext i8 %bf.clear48.lobit to i32
  call void @llvm.dbg.value(metadata i32 %18, metadata !12496, metadata !DIExpression()), !dbg !12544
  br label %if.end55, !dbg !12563

if.else53:                                        ; preds = %if.end14
  %19 = load i8*, i8** @curr_state, align 8, !dbg !12564
  %call54 = call fastcc i32 @estimate_insn_cost(%struct.rtx_def* %insn.0, i8* %19) #7, !dbg !12565
  call void @llvm.dbg.value(metadata i32 %call54, metadata !12496, metadata !DIExpression()), !dbg !12544
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.then27
  %haifa_cost.1 = phi i32 [ %call54, %if.else53 ], [ %18, %if.then27 ], !dbg !12566
  call void @llvm.dbg.value(metadata i32 %haifa_cost.1, metadata !12496, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i8 0, metadata !12500, metadata !DIExpression()), !dbg !12544
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12567
  %base58 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %20, i64 0, i32 0, !dbg !12567
  %21 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12567
  %base64 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %21, i64 0, i32 0, !dbg !12567
  %22 = load i32, i32* %rt_int, align 8, !dbg !12567
  %call72 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base64, i32 %22) #7, !dbg !12567
  %call73 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base58, i32 %call72) #7, !dbg !12567
  %after_stall_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call73, i64 0, i32 13, !dbg !12567
  %bf.load74 = load i8, i8* %after_stall_p, align 4, !dbg !12567
  %bf.clear76 = and i8 %bf.load74, 4, !dbg !12567
  %tobool78 = icmp ne i8 %bf.clear76, 0, !dbg !12567
  %cmp79 = icmp sgt i32 %sub, %haifa_cost.1, !dbg !12569
  %or.cond = and i1 %tobool78, %cmp79, !dbg !12570
  %haifa_cost.2 = select i1 %or.cond, i32 %sub, i32 %haifa_cost.1, !dbg !12570
  call void @llvm.dbg.value(metadata i32 %haifa_cost.2, metadata !12496, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i1 %or.cond, metadata !12500, metadata !DIExpression()), !dbg !12544
  %cmp83 = icmp sgt i32 %haifa_cost.2, 0, !dbg !12571
  br i1 %cmp83, label %while.cond.preheader, label %if.else119, !dbg !12572

while.cond.preheader:                             ; preds = %if.end55
  %tobool105.demorgan = and i1 %tobool78, %cmp79, !dbg !12573
  %tobool105 = xor i1 %tobool105.demorgan, true, !dbg !12573
  %tobool108 = icmp ne i8 %.not, 0, !dbg !12573
  %or.cond1 = and i1 %tobool108, %tobool105, !dbg !12573
  br i1 %or.cond1, label %while.cond.preheader.split.us, label %while.cond.preheader.while.cond.preheader.split_crit_edge, !dbg !12575

while.cond.preheader.while.cond.preheader.split_crit_edge: ; preds = %while.cond.preheader
  br label %while.cond, !dbg !12575

while.cond.preheader.split.us:                    ; preds = %while.cond.preheader
  br label %while.cond.us, !dbg !12575

while.cond.us:                                    ; preds = %if.end117.us, %while.cond.preheader.split.us
  %i.0.us = phi i32 [ %inc.us, %if.end117.us ], [ 0, %while.cond.preheader.split.us ], !dbg !12576
  %haifa_cost.3.us = phi i32 [ %dec.us, %if.end117.us ], [ %haifa_cost.2, %while.cond.preheader.split.us ], !dbg !12544
  call void @llvm.dbg.value(metadata i32 %haifa_cost.3.us, metadata !12496, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !12502, metadata !DIExpression()), !dbg !12576
  %dec.us = add nsw i32 %haifa_cost.3.us, -1, !dbg !12577
  call void @llvm.dbg.value(metadata i32 %dec.us, metadata !12496, metadata !DIExpression()), !dbg !12544
  %tobool86.us = icmp eq i32 %haifa_cost.3.us, 0, !dbg !12575
  br i1 %tobool86.us, label %while.end.us-lcssa.us, label %while.body.us, !dbg !12575

while.body.us:                                    ; preds = %while.cond.us
  %23 = load i8*, i8** @curr_state, align 8, !dbg !12578
  call void @advance_state(i8* %23) #6, !dbg !12579
  %inc.us = add nuw nsw i32 %i.0.us, 1, !dbg !12580
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !12502, metadata !DIExpression()), !dbg !12576
  %24 = load i32, i32* @sched_verbose, align 4, !dbg !12581
  %cmp87.us = icmp sgt i32 %24, 1, !dbg !12582
  br i1 %cmp87.us, label %do.body.us, label %if.end104.us, !dbg !12583

do.body.us:                                       ; preds = %while.body.us
  %25 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12584
  %tobool90.us = icmp eq i8 %25, 0, !dbg !12584
  br i1 %tobool90.us, label %if.else99.us, label %do.body92.us, !dbg !12585

do.body92.us:                                     ; preds = %do.body.us
  %call93.us = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0)) #6, !dbg !12586
  %mul.us = shl nsw i32 %call93.us, 1, !dbg !12586
  %add.us = or i32 %mul.us, 1, !dbg !12586
  call void @llvm.dbg.value(metadata i32 %add.us, metadata !12505, metadata !DIExpression()), !dbg !12587
  %conv94.us = sext i32 %add.us to i64, !dbg !12586
  %26 = alloca i8, i64 %conv94.us, align 16, !dbg !12586
  call void @llvm.dbg.value(metadata i8* %26, metadata !12512, metadata !DIExpression()), !dbg !12587
  %call97.us = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %26, i64 %conv94.us, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0)) #6, !dbg !12586
  call void @sel_prepare_string_for_dot_label(i8* nonnull %26) #6, !dbg !12586
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12586
  %call98.us = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %26) #6, !dbg !12586
  br label %do.end103.us, !dbg !12586

if.else99.us:                                     ; preds = %do.body.us
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12584
  %call100.us = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0)) #6, !dbg !12584
  br label %do.end103.us

do.end103.us:                                     ; preds = %if.else99.us, %do.body92.us
  %29 = load i8*, i8** @curr_state, align 8, !dbg !12588
  call fastcc void @debug_state(i8* %29) #7, !dbg !12589
  br label %if.end104.us, !dbg !12590

if.end104.us:                                     ; preds = %do.end103.us, %while.body.us
  %cmp110.us = icmp sgt i32 %dec.us, 0, !dbg !12591
  br i1 %cmp110.us, label %land.lhs.true112.us, label %if.end117.us, !dbg !12592

land.lhs.true112.us:                              ; preds = %if.end104.us
  %30 = load i8*, i8** @curr_state, align 8, !dbg !12593
  %call113.us = call fastcc i32 @estimate_insn_cost(%struct.rtx_def* %insn.0, i8* %30) #7, !dbg !12594
  %cmp114.us = icmp eq i32 %call113.us, 0, !dbg !12595
  br i1 %cmp114.us, label %while.end.us-lcssa.us, label %if.end117.us, !dbg !12596

if.end117.us:                                     ; preds = %land.lhs.true112.us, %if.end104.us
  br label %while.cond.us, !dbg !12575, !llvm.loop !12597

while.end.us-lcssa.us:                            ; preds = %land.lhs.true112.us, %while.cond.us
  %dec.us.lcssa = phi i32 [ %dec.us, %land.lhs.true112.us ], [ %dec.us, %while.cond.us ], !dbg !12577
  %i.1.ph.us = phi i32 [ %inc.us, %land.lhs.true112.us ], [ %i.0.us, %while.cond.us ]
  br label %while.end, !dbg !12599

while.cond:                                       ; preds = %while.cond.preheader.while.cond.preheader.split_crit_edge, %if.end104
  %haifa_cost.3 = phi i32 [ %dec, %if.end104 ], [ %haifa_cost.2, %while.cond.preheader.while.cond.preheader.split_crit_edge ], !dbg !12544
  call void @llvm.dbg.value(metadata i32 %haifa_cost.3, metadata !12496, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i32 undef, metadata !12502, metadata !DIExpression()), !dbg !12576
  %dec = add nsw i32 %haifa_cost.3, -1, !dbg !12577
  call void @llvm.dbg.value(metadata i32 %dec, metadata !12496, metadata !DIExpression()), !dbg !12544
  %tobool86 = icmp eq i32 %haifa_cost.3, 0, !dbg !12575
  br i1 %tobool86, label %while.end.us-lcssa, label %while.body, !dbg !12575

while.body:                                       ; preds = %while.cond
  %31 = load i8*, i8** @curr_state, align 8, !dbg !12578
  call void @advance_state(i8* %31) #6, !dbg !12579
  call void @llvm.dbg.value(metadata i32 undef, metadata !12502, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12576
  %32 = load i32, i32* @sched_verbose, align 4, !dbg !12581
  %cmp87 = icmp sgt i32 %32, 1, !dbg !12582
  br i1 %cmp87, label %do.body, label %if.end104, !dbg !12583

do.body:                                          ; preds = %while.body
  %33 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12584
  %tobool90 = icmp eq i8 %33, 0, !dbg !12584
  br i1 %tobool90, label %if.else99, label %do.body92, !dbg !12585

do.body92:                                        ; preds = %do.body
  %call93 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0)) #6, !dbg !12586
  %mul = shl nsw i32 %call93, 1, !dbg !12586
  %add = or i32 %mul, 1, !dbg !12586
  call void @llvm.dbg.value(metadata i32 %add, metadata !12505, metadata !DIExpression()), !dbg !12587
  %conv94 = sext i32 %add to i64, !dbg !12586
  %34 = alloca i8, i64 %conv94, align 16, !dbg !12586
  call void @llvm.dbg.value(metadata i8* %34, metadata !12512, metadata !DIExpression()), !dbg !12587
  %call97 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %34, i64 %conv94, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0)) #6, !dbg !12586
  call void @sel_prepare_string_for_dot_label(i8* nonnull %34) #6, !dbg !12586
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12586
  %call98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %34) #6, !dbg !12586
  br label %do.end103, !dbg !12586

if.else99:                                        ; preds = %do.body
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12584
  %call100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0)) #6, !dbg !12584
  br label %do.end103

do.end103:                                        ; preds = %if.else99, %do.body92
  %37 = load i8*, i8** @curr_state, align 8, !dbg !12588
  call fastcc void @debug_state(i8* %37) #7, !dbg !12589
  br label %if.end104, !dbg !12590

if.end104:                                        ; preds = %do.end103, %while.body
  br label %while.cond, !dbg !12575, !llvm.loop !12597

while.end.us-lcssa:                               ; preds = %while.cond
  call void @llvm.dbg.value(metadata i32 %haifa_cost.2, metadata !12502, metadata !DIExpression()), !dbg !12576
  br label %while.end, !dbg !12599

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %dec.lcssa = phi i32 [ -1, %while.end.us-lcssa ], [ %dec.us.lcssa, %while.end.us-lcssa.us ], !dbg !12577
  %i.1 = phi i32 [ %haifa_cost.2, %while.end.us-lcssa ], [ %i.1.ph.us, %while.end.us-lcssa.us ], !dbg !12576
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !12502, metadata !DIExpression()), !dbg !12576
  %add118 = add nsw i32 %haifa_clock.0, %i.1, !dbg !12599
  call void @llvm.dbg.value(metadata i32 %add118, metadata !12490, metadata !DIExpression()), !dbg !12528
  br label %if.end126, !dbg !12600

if.else119:                                       ; preds = %if.end55
  %cmp120 = icmp eq i32 %haifa_cost.2, 0, !dbg !12601
  br i1 %cmp120, label %if.end126, label %cond.true122, !dbg !12601

cond.true122:                                     ; preds = %if.else119
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7045, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12601
  br label %if.end126, !dbg !12601

if.end126:                                        ; preds = %cond.true122, %if.else119, %while.end
  %haifa_cost.4 = phi i32 [ %dec.lcssa, %while.end ], [ 0, %if.else119 ], [ %haifa_cost.2, %cond.true122 ], !dbg !12544
  %haifa_clock.1 = phi i32 [ %add118, %while.end ], [ %haifa_clock.0, %if.else119 ], [ %haifa_clock.0, %cond.true122 ], !dbg !12528
  call void @llvm.dbg.value(metadata i32 %haifa_clock.1, metadata !12490, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 %haifa_cost.4, metadata !12496, metadata !DIExpression()), !dbg !12544
  %38 = load i32, i32* @sched_verbose, align 4, !dbg !12602
  %cmp127 = icmp sgt i32 %38, 1, !dbg !12603
  br i1 %cmp127, label %do.body130, label %if.end163, !dbg !12604

do.body130:                                       ; preds = %if.end126
  %39 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12605
  %tobool131 = icmp eq i8 %39, 0, !dbg !12605
  br i1 %tobool131, label %if.else154, label %do.body133, !dbg !12606

do.body133:                                       ; preds = %do.body130
  %40 = load i32, i32* %rt_int, align 8, !dbg !12607
  %call139 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 %40, i32 %haifa_cost.4) #6, !dbg !12607
  %mul140 = shl nsw i32 %call139, 1, !dbg !12607
  %add141 = or i32 %mul140, 1, !dbg !12607
  call void @llvm.dbg.value(metadata i32 %add141, metadata !12513, metadata !DIExpression()), !dbg !12608
  %conv143 = sext i32 %add141 to i64, !dbg !12607
  %41 = alloca i8, i64 %conv143, align 16, !dbg !12607
  call void @llvm.dbg.value(metadata i8* %41, metadata !12518, metadata !DIExpression()), !dbg !12608
  %42 = load i32, i32* %rt_int, align 8, !dbg !12607
  %call150 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %41, i64 %conv143, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 %42, i32 %haifa_cost.4) #6, !dbg !12607
  call void @sel_prepare_string_for_dot_label(i8* nonnull %41) #6, !dbg !12607
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12607
  %call151 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %41) #6, !dbg !12607
  br label %if.end163, !dbg !12607

if.else154:                                       ; preds = %do.body130
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12605
  %45 = load i32, i32* %rt_int, align 8, !dbg !12605
  %call159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 %45, i32 %haifa_cost.4) #6, !dbg !12605
  br label %if.end163

if.end163:                                        ; preds = %do.body133, %if.else154, %if.end126
  %46 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 19), align 8, !dbg !12609
  %tobool164 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)* %46, null, !dbg !12610
  br i1 %tobool164, label %if.end197, label %while.cond166.preheader, !dbg !12611

while.cond166.preheader:                          ; preds = %if.end163
  br label %while.cond166, !dbg !12612

while.cond166:                                    ; preds = %while.cond166.preheader, %if.end195
  %47 = phi i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)* [ %.pre3, %if.end195 ], [ %46, %while.cond166.preheader ], !dbg !12613
  %haifa_clock.2 = phi i32 [ %inc170, %if.end195 ], [ %haifa_clock.1, %while.cond166.preheader ], !dbg !12544
  call void @llvm.dbg.value(metadata i32 %haifa_clock.2, metadata !12490, metadata !DIExpression()), !dbg !12528
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12614
  %49 = load i32, i32* @sched_verbose, align 4, !dbg !12615
  call void @llvm.dbg.value(metadata i32* %sort_p, metadata !12497, metadata !DIExpression(DW_OP_deref)), !dbg !12544
  %call167 = call i32 %47(%struct._IO_FILE* %48, i32 %49, %struct.rtx_def* %insn.0, i32 %haifa_last_clock.0, i32 %haifa_clock.2, i32* nonnull %sort_p) #6, !dbg !12616
  %tobool168 = icmp eq i32 %call167, 0, !dbg !12612
  br i1 %tobool168, label %if.end197.loopexit, label %while.body169, !dbg !12612

while.body169:                                    ; preds = %while.cond166
  %50 = load i8*, i8** @curr_state, align 8, !dbg !12617
  call void @advance_state(i8* %50) #6, !dbg !12618
  %inc170 = add nsw i32 %haifa_clock.2, 1, !dbg !12619
  call void @llvm.dbg.value(metadata i32 %inc170, metadata !12490, metadata !DIExpression()), !dbg !12528
  %51 = load i32, i32* @sched_verbose, align 4, !dbg !12620
  %cmp171 = icmp sgt i32 %51, 1, !dbg !12621
  br i1 %cmp171, label %do.body174, label %if.end195, !dbg !12622

do.body174:                                       ; preds = %while.body169
  %52 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12623
  %tobool175 = icmp eq i8 %52, 0, !dbg !12623
  br i1 %tobool175, label %if.else190, label %do.body177, !dbg !12624

do.body177:                                       ; preds = %do.body174
  %call179 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.89, i64 0, i64 0)) #6, !dbg !12625
  %mul180 = shl nsw i32 %call179, 1, !dbg !12625
  %add181 = or i32 %mul180, 1, !dbg !12625
  call void @llvm.dbg.value(metadata i32 %add181, metadata !12519, metadata !DIExpression()), !dbg !12626
  %conv183 = sext i32 %add181 to i64, !dbg !12625
  %53 = alloca i8, i64 %conv183, align 16, !dbg !12625
  call void @llvm.dbg.value(metadata i8* %53, metadata !12527, metadata !DIExpression()), !dbg !12626
  %call186 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %53, i64 %conv183, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.89, i64 0, i64 0)) #6, !dbg !12625
  call void @sel_prepare_string_for_dot_label(i8* nonnull %53) #6, !dbg !12625
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12625
  %call187 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %53) #6, !dbg !12625
  br label %do.end194, !dbg !12625

if.else190:                                       ; preds = %do.body174
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12623
  %call191 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.89, i64 0, i64 0)) #6, !dbg !12623
  br label %do.end194

do.end194:                                        ; preds = %if.else190, %do.body177
  %56 = load i8*, i8** @curr_state, align 8, !dbg !12627
  call fastcc void @debug_state(i8* %56) #7, !dbg !12628
  br label %if.end195, !dbg !12629

if.end195:                                        ; preds = %do.end194, %while.body169
  %.pre3 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 19), align 8, !dbg !12613
  br label %while.cond166, !dbg !12612, !llvm.loop !12630

if.end197.loopexit:                               ; preds = %while.cond166
  %haifa_clock.2.lcssa = phi i32 [ %haifa_clock.2, %while.cond166 ], !dbg !12544
  call void @llvm.dbg.value(metadata i32 %haifa_clock.2.lcssa, metadata !12490, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 %haifa_clock.2.lcssa, metadata !12490, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 %haifa_clock.2.lcssa, metadata !12490, metadata !DIExpression()), !dbg !12528
  br label %if.end197, !dbg !12632

if.end197:                                        ; preds = %if.end197.loopexit, %if.end163
  %haifa_clock.3 = phi i32 [ %haifa_clock.1, %if.end163 ], [ %haifa_clock.2.lcssa, %if.end197.loopexit ], !dbg !12599
  call void @llvm.dbg.value(metadata i32 %haifa_clock.3, metadata !12490, metadata !DIExpression()), !dbg !12528
  br i1 %tobool26, label %if.end211, label %if.then199, !dbg !12634

if.then199:                                       ; preds = %if.end197
  %57 = load i8*, i8** @curr_state, align 8, !dbg !12635
  %call200 = call i32 @state_transition(i8* %57, %struct.rtx_def* %insn.0) #6, !dbg !12637
  call void @llvm.dbg.value(metadata i32 %call200, metadata !12492, metadata !DIExpression()), !dbg !12544
  %58 = load i32, i32* @sched_verbose, align 4, !dbg !12638
  %cmp201 = icmp sgt i32 %58, 1, !dbg !12640
  br i1 %cmp201, label %if.then203, label %if.end204, !dbg !12641

if.then203:                                       ; preds = %if.then199
  %59 = load i8*, i8** @curr_state, align 8, !dbg !12642
  call fastcc void @debug_state(i8* %59) #7, !dbg !12643
  br label %if.end204, !dbg !12643

if.end204:                                        ; preds = %if.then203, %if.then199
  %cmp205 = icmp slt i32 %call200, 0, !dbg !12644
  br i1 %cmp205, label %if.end211, label %cond.true207, !dbg !12644

cond.true207:                                     ; preds = %if.end204
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7071, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12644
  br label %if.end211, !dbg !12644

if.end211:                                        ; preds = %if.end197, %cond.true207, %if.end204
  %60 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 3), align 8, !dbg !12645
  %tobool212 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)* %60, null, !dbg !12647
  br i1 %tobool212, label %if.end215, label %if.then213, !dbg !12648

if.then213:                                       ; preds = %if.end211
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12649
  %62 = load i32, i32* @sched_verbose, align 4, !dbg !12650
  %call214 = call i32 %60(%struct._IO_FILE* %61, i32 %62, %struct.rtx_def* %insn.0, i32 0) #6, !dbg !12651
  br label %if.end215, !dbg !12651

if.end215:                                        ; preds = %if.end211, %if.then213
  %63 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12652
  %base218 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %63, i64 0, i32 0, !dbg !12652
  %64 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12652
  %base224 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %64, i64 0, i32 0, !dbg !12652
  %65 = load i32, i32* %rt_int, align 8, !dbg !12652
  %call232 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base224, i32 %65) #7, !dbg !12652
  %call233 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base218, i32 %call232) #7, !dbg !12652
  %sched_cycle234 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call233, i64 0, i32 10, !dbg !12652
  store i32 %haifa_clock.3, i32* %sched_cycle234, align 8, !dbg !12653
  call void @llvm.dbg.value(metadata i32 %14, metadata !12488, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 %haifa_clock.3, metadata !12489, metadata !DIExpression()), !dbg !12528
  %.pre.pre = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !12546
  br label %cleanup, !dbg !12654

cleanup:                                          ; preds = %lor.lhs.false9, %if.end215
  %.pre = phi %struct.haifa_sched_info* [ %.pre.pre, %if.end215 ], [ %.pre4, %lor.lhs.false9 ], !dbg !12546
  %haifa_clock.4 = phi i32 [ %haifa_clock.3, %if.end215 ], [ %haifa_clock.0, %lor.lhs.false9 ], !dbg !12528
  %haifa_last_clock.1 = phi i32 [ %haifa_clock.3, %if.end215 ], [ %haifa_last_clock.0, %lor.lhs.false9 ], !dbg !12528
  %last_clock.1 = phi i32 [ %14, %if.end215 ], [ %last_clock.0, %lor.lhs.false9 ], !dbg !12528
  call void @llvm.dbg.value(metadata i32 %last_clock.1, metadata !12488, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 %haifa_last_clock.1, metadata !12489, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 %haifa_clock.4, metadata !12490, metadata !DIExpression()), !dbg !12528
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8, !dbg !12654
  %66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !12655
  %rt_rtx = bitcast %union.rtunion_def* %66 to %struct.rtx_def**, !dbg !12655
  br label %for.cond, !dbg !12656, !llvm.loop !12657

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12659
}

; Function Attrs: nounwind uwtable
define internal fastcc void @put_TImodes() unnamed_addr #5 !dbg !12660 {
entry:
  call void @llvm.dbg.value(metadata i32 -1, metadata !12662, metadata !DIExpression()), !dbg !12675
  %0 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !12676
  %head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %0, i64 0, i32 10, !dbg !12677
  br label %for.cond, !dbg !12678

for.cond:                                         ; preds = %cleanup, %entry
  %1 = phi %struct.haifa_sched_info* [ %0, %entry ], [ %.pre, %cleanup ], !dbg !12679
  %insn.0.in = phi %struct.rtx_def** [ %head, %entry ], [ %rt_rtx85, %cleanup ]
  %last_clock.0 = phi i32 [ -1, %entry ], [ %last_clock.2, %cleanup ], !dbg !12675
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !12680
  call void @llvm.dbg.value(metadata i32 %last_clock.0, metadata !12662, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !12663, metadata !DIExpression()), !dbg !12675
  %next_tail = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %1, i64 0, i32 9, !dbg !12681
  %2 = load %struct.rtx_def*, %struct.rtx_def** %next_tail, align 8, !dbg !12681
  %cmp = icmp eq %struct.rtx_def* %insn.0, %2, !dbg !12682
  br i1 %cmp, label %for.end, label %for.body, !dbg !12683

for.body:                                         ; preds = %for.cond
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !12684
  %bf.load = load i32, i32* %3, align 8, !dbg !12684
  %bf.clear = and i32 %bf.load, 65535, !dbg !12684
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !12684
  br i1 %cmp1, label %if.end, label %lor.lhs.false, !dbg !12684

lor.lhs.false:                                    ; preds = %for.body
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !12684
  br i1 %cmp4, label %if.end, label %lor.lhs.false5, !dbg !12684

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !12684
  br i1 %cmp8, label %if.end, label %lor.lhs.false9, !dbg !12684

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !12684
  br i1 %cmp12, label %if.end, label %cleanup, !dbg !12686

if.end:                                           ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %for.body
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12687
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i64 0, i32 0, !dbg !12687
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12687
  %base15 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !12687
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !12687
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !12687
  %6 = load i32, i32* %rt_int, align 8, !dbg !12687
  %call = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base15, i32 %6) #7, !dbg !12687
  %call19 = call fastcc %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %base, i32 %call) #7, !dbg !12687
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call19, i64 0, i32 10, !dbg !12687
  %7 = load i32, i32* %sched_cycle, align 8, !dbg !12687
  call void @llvm.dbg.value(metadata i32 %7, metadata !12668, metadata !DIExpression()), !dbg !12688
  %cmp20 = icmp eq i32 %last_clock.0, -1, !dbg !12689
  %sub = sub nsw i32 %7, %last_clock.0, !dbg !12690
  %cond24 = select i1 %cmp20, i32 1, i32 %sub, !dbg !12690
  call void @llvm.dbg.value(metadata i32 %cond24, metadata !12664, metadata !DIExpression()), !dbg !12688
  %cmp25 = icmp sgt i32 %cond24, -1, !dbg !12691
  br i1 %cmp25, label %cond.end28, label %cond.true26, !dbg !12691

cond.true26:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7102, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12691
  br label %cond.end28, !dbg !12691

cond.end28:                                       ; preds = %if.end, %cond.true26
  %8 = load i32, i32* @issue_rate, align 4, !dbg !12692
  %cmp30 = icmp sgt i32 %8, 1, !dbg !12694
  br i1 %cmp30, label %land.lhs.true, label %if.end53, !dbg !12695

land.lhs.true:                                    ; preds = %cond.end28
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !12696
  %9 = getelementptr inbounds %union.u, %union.u* %u31, i64 1, i32 0, i32 0, i64 0, !dbg !12696
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !12696
  %11 = load i32*, i32** %10, align 8, !dbg !12696
  %bf.load34 = load i32, i32* %11, align 8, !dbg !12696
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !12696
  %cmp36 = icmp eq i32 %bf.clear35, 24, !dbg !12697
  br i1 %cmp36, label %if.end53, label %land.lhs.true37, !dbg !12698

land.lhs.true37:                                  ; preds = %land.lhs.true
  %cmp44 = icmp eq i32 %bf.clear35, 25, !dbg !12699
  br i1 %cmp44, label %if.end53, label %if.then45, !dbg !12700

if.then45:                                        ; preds = %land.lhs.true37
  %12 = load i32, i32* @reload_completed, align 4, !dbg !12701
  %tobool46 = icmp ne i32 %12, 0, !dbg !12701
  %cmp48 = icmp sgt i32 %cond24, 0, !dbg !12704
  %or.cond = and i1 %tobool46, %cmp48, !dbg !12705
  br i1 %or.cond, label %if.then49, label %if.end53, !dbg !12705

if.then49:                                        ; preds = %if.then45
  %bf.load50 = load i32, i32* %3, align 8, !dbg !12706
  %bf.clear51 = and i32 %bf.load50, -16711681, !dbg !12706
  %bf.set = or i32 %bf.clear51, 1179648, !dbg !12706
  store i32 %bf.set, i32* %3, align 8, !dbg !12706
  br label %if.end53, !dbg !12706

if.end53:                                         ; preds = %land.lhs.true37, %land.lhs.true, %if.then45, %if.then49, %cond.end28
  %last_clock.1 = phi i32 [ %last_clock.0, %land.lhs.true37 ], [ %last_clock.0, %land.lhs.true ], [ %last_clock.0, %cond.end28 ], [ %7, %if.then49 ], [ %7, %if.then45 ], !dbg !12675
  call void @llvm.dbg.value(metadata i32 %last_clock.1, metadata !12662, metadata !DIExpression()), !dbg !12675
  %13 = load i32, i32* @sched_verbose, align 4, !dbg !12707
  %cmp54 = icmp sgt i32 %13, 1, !dbg !12708
  br i1 %cmp54, label %do.body, label %cleanup, !dbg !12709

do.body:                                          ; preds = %if.end53
  %14 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12710
  %tobool56 = icmp eq i8 %14, 0, !dbg !12710
  br i1 %tobool56, label %if.else, label %do.body58, !dbg !12711

do.body58:                                        ; preds = %do.body
  %15 = load i32, i32* %rt_int, align 8, !dbg !12712
  %call63 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i32 %15, i32 %cond24) #6, !dbg !12712
  %mul = shl nsw i32 %call63, 1, !dbg !12712
  %add = or i32 %mul, 1, !dbg !12712
  call void @llvm.dbg.value(metadata i32 %add, metadata !12669, metadata !DIExpression()), !dbg !12713
  %conv = sext i32 %add to i64, !dbg !12712
  %16 = alloca i8, i64 %conv, align 16, !dbg !12712
  call void @llvm.dbg.value(metadata i8* %16, metadata !12674, metadata !DIExpression()), !dbg !12713
  %17 = load i32, i32* %rt_int, align 8, !dbg !12712
  %call70 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %16, i64 %conv, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i32 %17, i32 %cond24) #6, !dbg !12712
  call void @sel_prepare_string_for_dot_label(i8* nonnull %16) #6, !dbg !12712
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12712
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %16) #6, !dbg !12712
  br label %cleanup, !dbg !12712

if.else:                                          ; preds = %do.body
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12710
  %20 = load i32, i32* %rt_int, align 8, !dbg !12710
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i32 %20, i32 %cond24) #6, !dbg !12710
  br label %cleanup

cleanup:                                          ; preds = %if.end53, %if.else, %do.body58, %lor.lhs.false9
  %last_clock.2 = phi i32 [ %last_clock.0, %lor.lhs.false9 ], [ %last_clock.1, %do.body58 ], [ %last_clock.1, %if.else ], [ %last_clock.1, %if.end53 ], !dbg !12675
  call void @llvm.dbg.value(metadata i32 %last_clock.2, metadata !12662, metadata !DIExpression()), !dbg !12675
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !12714
  %rt_rtx85 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !12714
  %.pre = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !12679
  br label %for.cond, !dbg !12715, !llvm.loop !12716

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12718
}

declare dso_local zeroext i8 @bb_ends_ebb_p(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @bb_next_bb(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !12719 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !12723, metadata !DIExpression()), !dbg !12724
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !12725
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !12725
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !12725
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12725

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !12725
  br label %cond.end, !dbg !12725

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !12725
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !12725
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
  ], !dbg !12726

sw.bb:                                            ; preds = %cond.end
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 6, !dbg !12727
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !12727
  br label %return, !dbg !12729

sw.bb2:                                           ; preds = %cond.end
  %call3 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) #7, !dbg !12730
  br label %return, !dbg !12731

sw.bb4:                                           ; preds = %cond.end
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !12732
  %tobool6 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !12732
  br i1 %tobool6, label %cond.end11, label %cond.true7, !dbg !12732

cond.true7:                                       ; preds = %sw.bb4
  %base9 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !12732
  br label %cond.end11, !dbg !12732

cond.end11:                                       ; preds = %sw.bb4, %cond.true7
  %cond12 = phi %struct.VEC_edge_base* [ %base9, %cond.true7 ], [ null, %sw.bb4 ], !dbg !12732
  %call13 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond12, i32 0) #7, !dbg !12732
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call13, i64 0, i32 7, !dbg !12732
  %3 = load i32, i32* %flags, align 8, !dbg !12732
  %and = and i32 %3, 1, !dbg !12732
  %tobool14 = icmp eq i32 %and, 0, !dbg !12732
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !12732
  %tobool17 = icmp ne %struct.VEC_edge_gc* %4, null, !dbg !12732
  br i1 %tobool14, label %cond.false25, label %cond.true15, !dbg !12732

cond.true15:                                      ; preds = %cond.end11
  br i1 %tobool17, label %cond.true18, label %cond.end22, !dbg !12732

cond.true18:                                      ; preds = %cond.true15
  %base20 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !12732
  br label %cond.end22, !dbg !12732

cond.end22:                                       ; preds = %cond.true15, %cond.true18
  %cond23 = phi %struct.VEC_edge_base* [ %base20, %cond.true18 ], [ null, %cond.true15 ], !dbg !12732
  %call24 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond23, i32 0) #7, !dbg !12732
  br label %cond.end35, !dbg !12732

cond.false25:                                     ; preds = %cond.end11
  br i1 %tobool17, label %cond.true28, label %cond.end32, !dbg !12732

cond.true28:                                      ; preds = %cond.false25
  %base30 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !12732
  br label %cond.end32, !dbg !12732

cond.end32:                                       ; preds = %cond.false25, %cond.true28
  %cond33 = phi %struct.VEC_edge_base* [ %base30, %cond.true28 ], [ null, %cond.false25 ], !dbg !12732
  %call34 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond33, i32 1) #7, !dbg !12732
  br label %cond.end35, !dbg !12732

cond.end35:                                       ; preds = %cond.end32, %cond.end22
  %cond36 = phi %struct.edge_def* [ %call24, %cond.end22 ], [ %call34, %cond.end32 ], !dbg !12732
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond36, i64 0, i32 1, !dbg !12733
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !12733
  br label %return, !dbg !12734

sw.default:                                       ; preds = %cond.end
  %next_bb37 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 6, !dbg !12735
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb37, align 8, !dbg !12735
  br label %return, !dbg !12736

return:                                           ; preds = %sw.default, %cond.end35, %sw.bb2, %sw.bb
  %retval.0 = phi %struct.basic_block_def* [ %6, %sw.default ], [ %5, %cond.end35 ], [ %call3, %sw.bb2 ], [ %1, %sw.bb ], !dbg !12737
  ret %struct.basic_block_def* %retval.0, !dbg !12738
}

declare dso_local void @get_ebb_head_tail(%struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def**, %struct.rtx_def**) local_unnamed_addr #2

declare dso_local void @state_reset(i8*) local_unnamed_addr #2

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #2

declare dso_local void @alloc_sched_pools() local_unnamed_addr #2

declare dso_local void @setup_sched_dump() local_unnamed_addr #2

declare dso_local void @sched_rgn_init(i8 zeroext) local_unnamed_addr #2

declare dso_local void @sched_init() local_unnamed_addr #2

declare dso_local void @sched_init_bbs() local_unnamed_addr #2

declare dso_local void @sched_extend_target() local_unnamed_addr #2

declare dso_local void @setup_nop_and_exit_insns() local_unnamed_addr #2

declare dso_local void @sel_extend_global_bb_info() local_unnamed_addr #2

declare dso_local void @init_lv_sets() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_hard_regs_data() unnamed_addr #5 !dbg !12739 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !12741, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 0, metadata !12742, metadata !DIExpression()), !dbg !12743
  store i64 0, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 4), align 8, !dbg !12744
  call void @llvm.dbg.value(metadata i32 0, metadata !12741, metadata !DIExpression()), !dbg !12743
  br label %for.cond, !dbg !12745

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc ], [ 0, %entry ], !dbg !12747
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !12741, metadata !DIExpression()), !dbg !12743
  %exitcond7 = icmp eq i64 %indvars.iv5, 53, !dbg !12748
  br i1 %exitcond7, label %for.cond3.preheader, label %for.body, !dbg !12750

for.cond3.preheader:                              ; preds = %for.cond
  br label %for.cond3, !dbg !12751

for.body:                                         ; preds = %for.cond
  %0 = trunc i64 %indvars.iv5 to i32, !dbg !12753
  %call = tail call zeroext i8 @df_regs_ever_live_p(i32 %0) #6, !dbg !12753
  %tobool = icmp eq i8 %call, 0, !dbg !12753
  br i1 %tobool, label %lor.lhs.false, label %for.body.if.then_crit_edge, !dbg !12755

for.body.if.then_crit_edge:                       ; preds = %for.body
  br label %if.then, !dbg !12755

lor.lhs.false:                                    ; preds = %for.body
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv5, !dbg !12756
  %1 = load i8, i8* %arrayidx, align 1, !dbg !12756
  %tobool2 = icmp eq i8 %1, 0, !dbg !12756
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !12757

if.then:                                          ; preds = %for.body.if.then_crit_edge, %lor.lhs.false
  %shl = shl i64 1, %indvars.iv5, !dbg !12758
  %2 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 4), align 8, !dbg !12758
  %or = or i64 %2, %shl, !dbg !12758
  store i64 %or, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 4), align 8, !dbg !12758
  br label %for.inc, !dbg !12758

for.inc:                                          ; preds = %lor.lhs.false, %if.then
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !12741, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12743
  br label %for.cond, !dbg !12760, !llvm.loop !12761

for.cond3:                                        ; preds = %for.cond3.preheader, %for.body6
  %indvars.iv2 = phi i64 [ 0, %for.cond3.preheader ], [ %indvars.iv.next3, %for.body6 ], !dbg !12763
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !12742, metadata !DIExpression()), !dbg !12743
  %exitcond4 = icmp eq i64 %indvars.iv2, 87, !dbg !12764
  br i1 %exitcond4, label %for.cond12.preheader, label %for.body6, !dbg !12751

for.cond12.preheader:                             ; preds = %for.cond3
  br label %for.cond12, !dbg !12766

for.body6:                                        ; preds = %for.cond3
  %arrayidx8 = getelementptr inbounds %struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 1, i64 %indvars.iv2, !dbg !12768
  store i8 0, i8* %arrayidx8, align 1, !dbg !12769
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !12770
  call void @llvm.dbg.value(metadata i32 undef, metadata !12742, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12743
  br label %for.cond3, !dbg !12771, !llvm.loop !12772

for.cond12:                                       ; preds = %for.cond12.preheader, %for.body15
  %indvars.iv = phi i64 [ 0, %for.cond12.preheader ], [ %indvars.iv.next, %for.body15 ], !dbg !12774
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12741, metadata !DIExpression()), !dbg !12743
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !12775
  br i1 %exitcond, label %for.end20, label %for.body15, !dbg !12766

for.body15:                                       ; preds = %for.cond12
  %arrayidx17 = getelementptr inbounds %struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 2, i64 %indvars.iv, !dbg !12777
  store i64 0, i64* %arrayidx17, align 8, !dbg !12777
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12778
  call void @llvm.dbg.value(metadata i32 undef, metadata !12741, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12743
  br label %for.cond12, !dbg !12779, !llvm.loop !12780

for.end20:                                        ; preds = %for.cond12
  store i64 0, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 5), align 8, !dbg !12782
  call void @llvm.dbg.value(metadata i32 8, metadata !12741, metadata !DIExpression()), !dbg !12743
  br label %for.end30, !dbg !12783

for.end30:                                        ; preds = %for.end20
  call void @llvm.dbg.value(metadata i32 undef, metadata !12741, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 undef, metadata !12741, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12743
  store i64 65280, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i64 0, i32 5), align 8, !dbg !12785
  ret void, !dbg !12787
}

declare dso_local void @free_bb_note_pool() local_unnamed_addr #2

declare dso_local void @free_lv_sets() local_unnamed_addr #2

declare dso_local void @sel_finish_global_bb_info() local_unnamed_addr #2

declare dso_local void @free_regset_pool() local_unnamed_addr #2

declare dso_local void @free_nop_and_exit_insns() local_unnamed_addr #2

declare dso_local void @sched_rgn_finish() local_unnamed_addr #2

declare dso_local void @sched_deps_finish() local_unnamed_addr #2

declare dso_local void @sched_finish() local_unnamed_addr #2

declare dso_local void @sel_finish_pipelining() local_unnamed_addr #2

declare dso_local void @free_sched_pools() local_unnamed_addr #2

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2358, !2359, !2360}
!llvm.ident = !{!2361}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_forced_ebb_heads", scope: !2, file: !3, line: 483, type: !1978, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !592, globals: !2060, nameTableKind: None)
!3 = !DIFile(filename: "sel-sched.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !150, !154, !160, !165, !170, !189, !196, !203, !397, !402, !408, !413, !556, !562}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !142, line: 31, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149}
!144 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !142, line: 91, baseType: !7, size: 32, elements: !151)
!151 = !{!152, !153}
!152 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !155, line: 363, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!156 = !{!157, !158, !159}
!157 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !155, line: 355, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164}
!162 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !166, line: 474, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !171, line: 280, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!173 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!183 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!184 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !171, line: 1817, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !171, line: 1805, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202}
!198 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !171, line: 39, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!205 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!208 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!209 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!210 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!211 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!212 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!213 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!214 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!215 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!216 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!217 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!220 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!221 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!222 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!223 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!224 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!225 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!226 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!227 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!228 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!229 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!230 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!231 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!232 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!233 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!234 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!235 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!236 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!237 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!238 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!239 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!240 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!241 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!242 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!243 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!244 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!245 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!246 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!247 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!248 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!249 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!250 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!251 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!252 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!253 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!254 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!255 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!256 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!257 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!258 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!259 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!260 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!261 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!262 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!263 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!264 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!265 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!266 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!267 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!268 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!269 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!270 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!271 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!272 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!273 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!274 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!275 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!277 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!278 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!279 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!280 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!281 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!282 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!283 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!284 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!285 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!286 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!287 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!288 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!289 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!290 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!291 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!292 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!293 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!294 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!295 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!296 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!297 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!298 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!299 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!300 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!301 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!302 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!303 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!304 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!305 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!306 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!307 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!308 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!309 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!310 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!311 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!312 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!313 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!314 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!315 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!316 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!317 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!318 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!320 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!321 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!322 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!323 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!324 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!325 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!326 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!327 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!328 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!329 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!330 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!331 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!332 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!333 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!334 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!335 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!336 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!337 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!338 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!339 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!340 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!341 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!342 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!343 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!344 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!345 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!346 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!347 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!348 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!349 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!350 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!351 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!352 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!353 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!354 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!355 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!356 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!357 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!369 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!370 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!371 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!372 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!373 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!374 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!383 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!384 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!385 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!386 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!387 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!388 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!389 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!390 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!391 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!392 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!393 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!394 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!395 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!396 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "local_trans_type", file: !398, line: 73, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./sel-sched-ir.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401}
!400 = !DIEnumerator(name: "TRANS_SUBSTITUTION", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "TRANS_SPECULATION", value: 1, isUnsigned: true)
!402 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "post_call_group", file: !403, line: 432, baseType: !7, size: 32, elements: !404)
!403 = !DIFile(filename: "./sched-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!404 = !{!405, !406, !407}
!405 = !DIEnumerator(name: "not_post_call", value: 0, isUnsigned: true)
!406 = !DIEnumerator(name: "post_call", value: 1, isUnsigned: true)
!407 = !DIEnumerator(name: "post_call_initial", value: 2, isUnsigned: true)
!408 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_pending_barrier_mode", file: !403, line: 424, baseType: !7, size: 32, elements: !409)
!409 = !{!410, !411, !412}
!410 = !DIEnumerator(name: "NOT_A_BARRIER", value: 0, isUnsigned: true)
!411 = !DIEnumerator(name: "MOVE_BARRIER", value: 1, isUnsigned: true)
!412 = !DIEnumerator(name: "TRUE_BARRIER", value: 2, isUnsigned: true)
!413 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !414, line: 45, baseType: !7, size: 32, elements: !415)
!414 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!415 = !{!416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555}
!416 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!417 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!418 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!419 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!420 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!421 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!422 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!423 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!424 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!425 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!426 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!427 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!428 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!429 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!430 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!431 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!432 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!433 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!434 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!435 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!436 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!437 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!438 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!439 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!440 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!441 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!442 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!443 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!444 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!445 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!446 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!447 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!448 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!449 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!450 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!451 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!452 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!453 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!454 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!455 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!456 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!457 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!458 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!459 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!460 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!461 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!462 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!463 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!464 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!465 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!466 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!467 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!468 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!469 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!470 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!471 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!472 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!473 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!474 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!475 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!476 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!477 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!478 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!479 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!480 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!481 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!482 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!483 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!484 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!485 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!486 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!487 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!488 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!489 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!490 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!491 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!492 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!493 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!494 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!495 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!496 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!497 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!498 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!499 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!500 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!501 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!502 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!503 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!504 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!505 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!506 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!507 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!508 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!509 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!510 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!511 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!512 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!513 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!514 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!515 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!516 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!517 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!518 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!519 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!520 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!521 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!522 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!523 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!524 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!525 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!526 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!527 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!528 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!529 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!530 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!531 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!532 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!533 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!534 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!535 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!536 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!537 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!538 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!539 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!540 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!541 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!542 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!543 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!544 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!545 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!546 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!547 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!548 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!549 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!550 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!551 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!552 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!553 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!554 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!555 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!556 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MOVEUP_EXPR_CODE", file: !3, line: 267, baseType: !7, size: 32, elements: !557)
!557 = !{!558, !559, !560, !561}
!558 = !DIEnumerator(name: "MOVEUP_EXPR_SAME", value: 0, isUnsigned: true)
!559 = !DIEnumerator(name: "MOVEUP_EXPR_AS_RHS", value: 1, isUnsigned: true)
!560 = !DIEnumerator(name: "MOVEUP_EXPR_NULL", value: 2, isUnsigned: true)
!561 = !DIEnumerator(name: "MOVEUP_EXPR_CHANGED", value: 3, isUnsigned: true)
!562 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !166, line: 1188, baseType: !7, size: 32, elements: !563)
!563 = !{!564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591}
!564 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!565 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!566 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!567 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!568 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!569 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!570 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!571 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!572 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!573 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!574 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!575 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!576 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!577 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!578 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!579 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!580 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!581 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!582 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!583 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!584 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!585 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!586 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!587 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!588 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!589 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!590 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!591 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!592 = !{!593, !594, !595, !596, !599, !600, !597, !413, !602, !607, !1868, !1899, !7, !1912, !1921, !5, !1927, !1928, !2013, !2025, !1158, !2034, !1079, !2039, !677, !1998, !2044, !2056, !1840, !2058, !1834, !1835, !1911, !1818, !1853}
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!595 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !598)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "moveop_static_params_p", file: !3, line: 406, baseType: !603)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moveop_static_params", file: !3, line: 370, size: 192, elements: !605)
!605 = !{!606, !1833, !1897, !1898}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !604, file: !3, line: 373, baseType: !607, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !608, line: 50, baseType: !609)
!608 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !414, line: 240, size: 384, elements: !611)
!611 = !{!612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !610, file: !414, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !610, file: !414, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !610, file: !414, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !610, file: !414, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !610, file: !414, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !610, file: !414, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !610, file: !414, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !610, file: !414, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !610, file: !414, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !610, file: !414, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !610, file: !414, line: 321, baseType: !623, size: 320, offset: 64)
!623 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !414, line: 315, size: 320, elements: !624)
!624 = !{!625, !1768, !1770, !1831, !1832}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !623, file: !414, line: 316, baseType: !626, size: 64)
!626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !627, size: 64, elements: !642)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !414, line: 183, baseType: !628)
!628 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !414, line: 166, size: 64, elements: !629)
!629 = !{!630, !631, !632, !633, !634, !644, !645, !657, !660, !722, !1746, !1747, !1758, !1765}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !628, file: !414, line: 168, baseType: !595, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !628, file: !414, line: 169, baseType: !7, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !628, file: !414, line: 170, baseType: !600, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !628, file: !414, line: 171, baseType: !607, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !628, file: !414, line: 172, baseType: !635, size: 64)
!635 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !608, line: 53, baseType: !636)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !414, line: 359, size: 128, elements: !638)
!638 = !{!639, !640}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !637, file: !414, line: 360, baseType: !595, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !637, file: !414, line: 361, baseType: !641, size: 64, offset: 64)
!641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 64, elements: !642)
!642 = !{!643}
!643 = !DISubrange(count: 1)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !628, file: !414, line: 173, baseType: !5, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !628, file: !414, line: 174, baseType: !646, size: 32)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !414, line: 133, baseType: !647)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !414, line: 115, size: 32, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !647, file: !414, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !647, file: !414, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !647, file: !414, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !647, file: !414, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !647, file: !414, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !647, file: !414, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !647, file: !414, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !647, file: !414, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !628, file: !414, line: 175, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !414, line: 175, flags: DIFlagFwdDecl)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !628, file: !414, line: 176, baseType: !661, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !663, line: 75, size: 256, elements: !664)
!663 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!664 = !{!665, !680, !681, !682}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !662, file: !663, line: 76, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !663, line: 68, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !663, line: 63, size: 320, elements: !669)
!669 = !{!670, !672, !673, !674}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !668, file: !663, line: 64, baseType: !671, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !668, file: !663, line: 65, baseType: !671, size: 64, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !668, file: !663, line: 66, baseType: !7, size: 32, offset: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !668, file: !663, line: 67, baseType: !675, size: 128, offset: 192)
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !676, size: 128, elements: !678)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !663, line: 29, baseType: !677)
!677 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!678 = !{!679}
!679 = !DISubrange(count: 2)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !662, file: !663, line: 77, baseType: !666, size: 64, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !662, file: !663, line: 78, baseType: !7, size: 32, offset: 128)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !662, file: !663, line: 79, baseType: !683, size: 64, offset: 192)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !663, line: 49, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !663, line: 45, size: 832, elements: !686)
!686 = !{!687, !688, !689}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !685, file: !663, line: 46, baseType: !671, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !685, file: !663, line: 47, baseType: !661, size: 64, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !685, file: !663, line: 48, baseType: !690, size: 704, offset: 128)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !691, line: 164, size: 704, elements: !692)
!691 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!692 = !{!693, !695, !705, !706, !707, !708, !709, !710, !714, !718, !719, !720, !721}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !690, file: !691, line: 166, baseType: !694, size: 64)
!694 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !690, file: !691, line: 167, baseType: !696, size: 64, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !691, line: 157, size: 192, elements: !698)
!698 = !{!699, !700, !701}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !697, file: !691, line: 159, baseType: !597, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !697, file: !691, line: 160, baseType: !696, size: 64, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !697, file: !691, line: 161, baseType: !702, size: 32, offset: 128)
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !598, size: 32, elements: !703)
!703 = !{!704}
!704 = !DISubrange(count: 4)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !690, file: !691, line: 168, baseType: !597, size: 64, offset: 128)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !690, file: !691, line: 169, baseType: !597, size: 64, offset: 192)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !690, file: !691, line: 170, baseType: !597, size: 64, offset: 256)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !690, file: !691, line: 171, baseType: !694, size: 64, offset: 320)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !690, file: !691, line: 172, baseType: !595, size: 32, offset: 384)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !690, file: !691, line: 176, baseType: !711, size: 64, offset: 448)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{!696, !599, !694}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !690, file: !691, line: 177, baseType: !715, size: 64, offset: 512)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{null, !599, !696}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !690, file: !691, line: 178, baseType: !599, size: 64, offset: 576)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !690, file: !691, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !690, file: !691, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !690, file: !691, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !628, file: !414, line: 177, baseType: !723, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !608, line: 56, baseType: !724)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !171, line: 3371, size: 1792, elements: !726)
!726 = !{!727, !760, !766, !777, !796, !807, !812, !819, !825, !838, !850, !888, !893, !921, !929, !930, !935, !944, !950, !955, !959, !963, !1385, !1434, !1440, !1446, !1453, !1476, !1490, !1507, !1519, !1541, !1556, !1728}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !725, file: !171, line: 3372, baseType: !728, size: 64)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !171, line: 360, size: 64, elements: !729)
!729 = !{!730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !728, file: !171, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !728, file: !171, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !728, file: !171, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !728, file: !171, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !728, file: !171, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !728, file: !171, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !728, file: !171, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !728, file: !171, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !728, file: !171, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !728, file: !171, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !728, file: !171, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !728, file: !171, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !728, file: !171, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !728, file: !171, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !728, file: !171, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !728, file: !171, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !728, file: !171, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !728, file: !171, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !728, file: !171, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !728, file: !171, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !728, file: !171, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !728, file: !171, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !728, file: !171, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !728, file: !171, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !728, file: !171, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !728, file: !171, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !728, file: !171, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !728, file: !171, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !728, file: !171, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !728, file: !171, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !725, file: !171, line: 3373, baseType: !761, size: 192)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !171, line: 402, size: 192, elements: !762)
!762 = !{!763, !764, !765}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !761, file: !171, line: 403, baseType: !728, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !761, file: !171, line: 404, baseType: !723, size: 64, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !761, file: !171, line: 405, baseType: !723, size: 64, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !725, file: !171, line: 3374, baseType: !767, size: 320)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !171, line: 1384, size: 320, elements: !768)
!768 = !{!769, !770}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !767, file: !171, line: 1385, baseType: !761, size: 192)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !767, file: !171, line: 1386, baseType: !771, size: 128, offset: 192)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !772, line: 58, baseType: !773)
!772 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !772, line: 54, size: 128, elements: !774)
!774 = !{!775, !776}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !773, file: !772, line: 56, baseType: !677, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !773, file: !772, line: 57, baseType: !694, size: 64, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !725, file: !171, line: 3375, baseType: !778, size: 256)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !171, line: 1397, size: 256, elements: !779)
!779 = !{!780, !781}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !778, file: !171, line: 1398, baseType: !761, size: 192)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !778, file: !171, line: 1399, baseType: !782, size: 64, offset: 192)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !784, line: 52, size: 256, elements: !785)
!784 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!785 = !{!786, !787, !788, !789, !790, !791, !792}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !783, file: !784, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !783, file: !784, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !783, file: !784, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !783, file: !784, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !783, file: !784, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !783, file: !784, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !783, file: !784, line: 62, baseType: !793, size: 192, offset: 64)
!793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 192, elements: !794)
!794 = !{!795}
!795 = !DISubrange(count: 3)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !725, file: !171, line: 3376, baseType: !797, size: 256)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !171, line: 1408, size: 256, elements: !798)
!798 = !{!799, !800}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !797, file: !171, line: 1409, baseType: !761, size: 192)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !797, file: !171, line: 1410, baseType: !801, size: 64, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !803, line: 27, size: 192, elements: !804)
!803 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!804 = !{!805, !806}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !802, file: !803, line: 29, baseType: !771, size: 128)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !802, file: !803, line: 30, baseType: !5, size: 32, offset: 128)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !725, file: !171, line: 3377, baseType: !808, size: 256)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !171, line: 1437, size: 256, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !808, file: !171, line: 1438, baseType: !761, size: 192)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !808, file: !171, line: 1439, baseType: !723, size: 64, offset: 192)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !725, file: !171, line: 3378, baseType: !813, size: 256)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !171, line: 1418, size: 256, elements: !814)
!814 = !{!815, !816, !817}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !813, file: !171, line: 1419, baseType: !761, size: 192)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !813, file: !171, line: 1420, baseType: !595, size: 32, offset: 192)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !813, file: !171, line: 1421, baseType: !818, size: 8, offset: 224)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !598, size: 8, elements: !642)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !725, file: !171, line: 3379, baseType: !820, size: 320)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !171, line: 1428, size: 320, elements: !821)
!821 = !{!822, !823, !824}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !820, file: !171, line: 1429, baseType: !761, size: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !820, file: !171, line: 1430, baseType: !723, size: 64, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !820, file: !171, line: 1431, baseType: !723, size: 64, offset: 256)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !725, file: !171, line: 3380, baseType: !826, size: 320)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !171, line: 1460, size: 320, elements: !827)
!827 = !{!828, !829}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !826, file: !171, line: 1461, baseType: !761, size: 192)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !826, file: !171, line: 1462, baseType: !830, size: 128, offset: 192)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !831, line: 31, size: 128, elements: !832)
!831 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!832 = !{!833, !836, !837}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !830, file: !831, line: 32, baseType: !834, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !594)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !830, file: !831, line: 33, baseType: !7, size: 32, offset: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !830, file: !831, line: 34, baseType: !7, size: 32, offset: 96)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !725, file: !171, line: 3381, baseType: !839, size: 384)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !171, line: 2507, size: 384, elements: !840)
!840 = !{!841, !842, !847, !848, !849}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !839, file: !171, line: 2508, baseType: !761, size: 192)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !839, file: !171, line: 2509, baseType: !843, size: 32, offset: 192)
!843 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !844, line: 58, baseType: !845)
!844 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !846, line: 44, baseType: !7)
!846 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!847 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !839, file: !171, line: 2510, baseType: !7, size: 32, offset: 224)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !839, file: !171, line: 2511, baseType: !723, size: 64, offset: 256)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !839, file: !171, line: 2512, baseType: !723, size: 64, offset: 320)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !725, file: !171, line: 3382, baseType: !851, size: 896)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !171, line: 2652, size: 896, elements: !852)
!852 = !{!853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !851, file: !171, line: 2653, baseType: !839, size: 384)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !851, file: !171, line: 2654, baseType: !723, size: 64, offset: 384)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !851, file: !171, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !851, file: !171, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !851, file: !171, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !851, file: !171, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !851, file: !171, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !851, file: !171, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !851, file: !171, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !851, file: !171, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !851, file: !171, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !851, file: !171, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !851, file: !171, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !851, file: !171, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !851, file: !171, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !851, file: !171, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !851, file: !171, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !851, file: !171, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !851, file: !171, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !851, file: !171, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !851, file: !171, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !851, file: !171, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !851, file: !171, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !851, file: !171, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !851, file: !171, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !851, file: !171, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !851, file: !171, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !851, file: !171, line: 2703, baseType: !7, size: 32, offset: 512)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !851, file: !171, line: 2705, baseType: !723, size: 64, offset: 576)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !851, file: !171, line: 2706, baseType: !723, size: 64, offset: 640)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !851, file: !171, line: 2707, baseType: !723, size: 64, offset: 704)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !851, file: !171, line: 2708, baseType: !723, size: 64, offset: 768)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !851, file: !171, line: 2711, baseType: !886, size: 64, offset: 832)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !171, line: 2711, flags: DIFlagFwdDecl)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !725, file: !171, line: 3383, baseType: !889, size: 960)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !171, line: 2756, size: 960, elements: !890)
!890 = !{!891, !892}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !889, file: !171, line: 2757, baseType: !851, size: 896)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !889, file: !171, line: 2758, baseType: !607, size: 64, offset: 896)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !725, file: !171, line: 3384, baseType: !894, size: 1472)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !171, line: 3114, size: 1472, elements: !895)
!895 = !{!896, !917, !918, !919, !920}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !894, file: !171, line: 3115, baseType: !897, size: 1216)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !171, line: 2984, size: 1216, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !897, file: !171, line: 2985, baseType: !889, size: 960)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !897, file: !171, line: 2986, baseType: !723, size: 64, offset: 960)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !897, file: !171, line: 2987, baseType: !723, size: 64, offset: 1024)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !897, file: !171, line: 2988, baseType: !723, size: 64, offset: 1088)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !897, file: !171, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !897, file: !171, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !897, file: !171, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !897, file: !171, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !897, file: !171, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !897, file: !171, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !897, file: !171, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !897, file: !171, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !897, file: !171, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !897, file: !171, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !897, file: !171, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !897, file: !171, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !897, file: !171, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !897, file: !171, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !894, file: !171, line: 3117, baseType: !723, size: 64, offset: 1216)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !894, file: !171, line: 3119, baseType: !723, size: 64, offset: 1280)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !894, file: !171, line: 3121, baseType: !723, size: 64, offset: 1344)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !894, file: !171, line: 3123, baseType: !723, size: 64, offset: 1408)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !725, file: !171, line: 3385, baseType: !922, size: 1088)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !171, line: 2874, size: 1088, elements: !923)
!923 = !{!924, !925, !926}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !922, file: !171, line: 2875, baseType: !889, size: 960)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !922, file: !171, line: 2876, baseType: !607, size: 64, offset: 960)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !922, file: !171, line: 2877, baseType: !927, size: 64, offset: 1024)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !171, line: 2856, flags: DIFlagFwdDecl)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !725, file: !171, line: 3386, baseType: !897, size: 1216)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !725, file: !171, line: 3387, baseType: !931, size: 1280)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !171, line: 3093, size: 1280, elements: !932)
!932 = !{!933, !934}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !931, file: !171, line: 3094, baseType: !897, size: 1216)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !931, file: !171, line: 3095, baseType: !927, size: 64, offset: 1216)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !725, file: !171, line: 3388, baseType: !936, size: 1216)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !171, line: 2824, size: 1216, elements: !937)
!937 = !{!938, !939, !940, !941, !942, !943}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !936, file: !171, line: 2825, baseType: !851, size: 896)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !936, file: !171, line: 2827, baseType: !723, size: 64, offset: 896)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !936, file: !171, line: 2828, baseType: !723, size: 64, offset: 960)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !936, file: !171, line: 2829, baseType: !723, size: 64, offset: 1024)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !936, file: !171, line: 2830, baseType: !723, size: 64, offset: 1088)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !936, file: !171, line: 2831, baseType: !723, size: 64, offset: 1152)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !725, file: !171, line: 3389, baseType: !945, size: 1024)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !171, line: 2850, size: 1024, elements: !946)
!946 = !{!947, !948, !949}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !945, file: !171, line: 2851, baseType: !889, size: 960)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !945, file: !171, line: 2852, baseType: !595, size: 32, offset: 960)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !945, file: !171, line: 2853, baseType: !595, size: 32, offset: 992)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !725, file: !171, line: 3390, baseType: !951, size: 1024)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !171, line: 2857, size: 1024, elements: !952)
!952 = !{!953, !954}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !951, file: !171, line: 2858, baseType: !889, size: 960)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !951, file: !171, line: 2859, baseType: !927, size: 64, offset: 960)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !725, file: !171, line: 3391, baseType: !956, size: 960)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !171, line: 2862, size: 960, elements: !957)
!957 = !{!958}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !956, file: !171, line: 2863, baseType: !889, size: 960)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !725, file: !171, line: 3392, baseType: !960, size: 1472)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !171, line: 3304, size: 1472, elements: !961)
!961 = !{!962}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !960, file: !171, line: 3305, baseType: !894, size: 1472)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !725, file: !171, line: 3393, baseType: !964, size: 1792)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !171, line: 3248, size: 1792, elements: !965)
!965 = !{!966, !967, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !964, file: !171, line: 3249, baseType: !894, size: 1472)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !964, file: !171, line: 3251, baseType: !968, size: 64, offset: 1472)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !970, line: 463, size: 1152, elements: !971)
!970 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!971 = !{!972, !1136, !1296, !1297, !1300, !1308, !1309, !1310, !1311, !1312, !1313, !1337, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !969, file: !970, line: 464, baseType: !973, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !975)
!975 = !{!976, !1025, !1038, !1052, !1104, !1117}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !974, file: !135, line: 197, baseType: !977, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !980)
!980 = !{!981, !982, !983, !984, !985, !986, !1013, !1022, !1023, !1024}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !979, file: !135, line: 119, baseType: !978, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !979, file: !135, line: 122, baseType: !978, size: 64, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !979, file: !135, line: 123, baseType: !978, size: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !979, file: !135, line: 126, baseType: !595, size: 32, offset: 192)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !979, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !979, file: !135, line: 165, baseType: !987, size: 192, offset: 256)
!987 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !988)
!988 = !{!989, !1002, !1008}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !987, file: !135, line: 137, baseType: !990, size: 128)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !991)
!991 = !{!992, !1001}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !990, file: !135, line: 135, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !995)
!995 = !{!996, !997, !998, !999, !1000}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !994, file: !135, line: 96, baseType: !993, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !994, file: !135, line: 97, baseType: !993, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !994, file: !135, line: 101, baseType: !723, size: 64, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !994, file: !135, line: 106, baseType: !723, size: 64, offset: 192)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !994, file: !135, line: 111, baseType: !723, size: 64, offset: 256)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !990, file: !135, line: 136, baseType: !993, size: 64, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !987, file: !135, line: 151, baseType: !1003, size: 192)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1004)
!1004 = !{!1005, !1006, !1007}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1003, file: !135, line: 141, baseType: !723, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1003, file: !135, line: 145, baseType: !723, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1003, file: !135, line: 150, baseType: !595, size: 32, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !987, file: !135, line: 164, baseType: !1009, size: 128)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1010)
!1010 = !{!1011, !1012}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1009, file: !135, line: 161, baseType: !723, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1009, file: !135, line: 163, baseType: !843, size: 32, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !979, file: !135, line: 168, baseType: !1014, size: 64, offset: 448)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1016)
!1016 = !{!1017, !1018, !1019, !1020, !1021}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1015, file: !135, line: 70, baseType: !1014, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1015, file: !135, line: 73, baseType: !978, size: 64, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1015, file: !135, line: 78, baseType: !723, size: 64, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1015, file: !135, line: 85, baseType: !607, size: 64, offset: 192)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1015, file: !135, line: 88, baseType: !595, size: 32, offset: 256)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !979, file: !135, line: 173, baseType: !607, size: 64, offset: 512)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !979, file: !135, line: 173, baseType: !607, size: 64, offset: 576)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !979, file: !135, line: 177, baseType: !594, size: 8, offset: 640)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !974, file: !135, line: 200, baseType: !1026, size: 64, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1028)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1029)
!1029 = !{!1030}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1028, file: !135, line: 185, baseType: !1031, size: 128)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1033)
!1033 = !{!1034, !1035, !1036}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1032, file: !135, line: 184, baseType: !7, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1032, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1032, file: !135, line: 184, baseType: !1037, size: 64, offset: 64)
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !977, size: 64, elements: !642)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !974, file: !135, line: 203, baseType: !1039, size: 64, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1042)
!1042 = !{!1043}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1041, file: !135, line: 189, baseType: !1044, size: 128)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1046)
!1046 = !{!1047, !1048, !1049}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1045, file: !135, line: 188, baseType: !7, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1045, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1045, file: !135, line: 188, baseType: !1050, size: 64, offset: 64)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1051, size: 64, elements: !642)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1014)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !974, file: !135, line: 207, baseType: !1053, size: 64, offset: 192)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1054, line: 144, baseType: !1055)
!1054 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1054, line: 100, size: 896, elements: !1057)
!1057 = !{!1058, !1066, !1071, !1076, !1078, !1081, !1082, !1083, !1084, !1085, !1090, !1092, !1093, !1098, !1103}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1056, file: !1054, line: 102, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1054, line: 52, baseType: !1060)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!1063, !1064}
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1054, line: 47, baseType: !7)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1056, file: !1054, line: 105, baseType: !1067, size: 64, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1054, line: 59, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!595, !1064, !1064}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1056, file: !1054, line: 108, baseType: !1072, size: 64, offset: 128)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1054, line: 63, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !599}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1056, file: !1054, line: 111, baseType: !1077, size: 64, offset: 192)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1056, file: !1054, line: 114, baseType: !1079, size: 64, offset: 256)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1080, line: 46, baseType: !677)
!1080 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1056, file: !1054, line: 117, baseType: !1079, size: 64, offset: 320)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1056, file: !1054, line: 120, baseType: !1079, size: 64, offset: 384)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1056, file: !1054, line: 124, baseType: !7, size: 32, offset: 448)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1056, file: !1054, line: 128, baseType: !7, size: 32, offset: 480)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1056, file: !1054, line: 131, baseType: !1086, size: 64, offset: 512)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1054, line: 75, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!599, !1079, !1079}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1056, file: !1054, line: 132, baseType: !1091, size: 64, offset: 576)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1054, line: 78, baseType: !1073)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1056, file: !1054, line: 135, baseType: !599, size: 64, offset: 640)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1056, file: !1054, line: 136, baseType: !1094, size: 64, offset: 704)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1054, line: 82, baseType: !1095)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!599, !599, !1079, !1079}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1056, file: !1054, line: 137, baseType: !1099, size: 64, offset: 768)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1054, line: 83, baseType: !1100)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{null, !599, !599}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1056, file: !1054, line: 141, baseType: !7, size: 32, offset: 832)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !974, file: !135, line: 211, baseType: !1105, size: 64, offset: 256)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !171, line: 183, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !171, line: 183, size: 128, elements: !1108)
!1108 = !{!1109}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1107, file: !171, line: 183, baseType: !1110, size: 128)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !171, line: 182, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !171, line: 182, size: 128, elements: !1112)
!1112 = !{!1113, !1114, !1115}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1111, file: !171, line: 182, baseType: !7, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1111, file: !171, line: 182, baseType: !7, size: 32, offset: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1111, file: !171, line: 182, baseType: !1116, size: 64, offset: 64)
!1116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !723, size: 64, elements: !642)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !974, file: !135, line: 220, baseType: !1118, size: 64, offset: 320)
!1118 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1119)
!1119 = !{!1120, !1121}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1118, file: !135, line: 218, baseType: !1105, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1118, file: !135, line: 219, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1124, line: 29, baseType: !1125)
!1124 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1124, line: 29, size: 96, elements: !1126)
!1126 = !{!1127}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1125, file: !1124, line: 29, baseType: !1128, size: 96)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1124, line: 27, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1124, line: 27, size: 96, elements: !1130)
!1130 = !{!1131, !1132, !1133}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1129, file: !1124, line: 27, baseType: !7, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1129, file: !1124, line: 27, baseType: !7, size: 32, offset: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1129, file: !1124, line: 27, baseType: !1134, size: 8, offset: 64)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1135, size: 8, elements: !642)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1124, line: 26, baseType: !594)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !969, file: !970, line: 467, baseType: !1137, size: 64, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !155, line: 374, size: 640, elements: !1139)
!1139 = !{!1140, !1271, !1272, !1285, !1286, !1287, !1288, !1289, !1290, !1292, !1294, !1295}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1138, file: !155, line: 377, baseType: !1141, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !608, line: 111, baseType: !1142)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !155, line: 217, size: 832, elements: !1144)
!1144 = !{!1145, !1180, !1181, !1182, !1241, !1245, !1246, !1247, !1265, !1266, !1267, !1268, !1269, !1270}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1143, file: !155, line: 219, baseType: !1146, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !155, line: 151, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !155, line: 151, size: 128, elements: !1149)
!1149 = !{!1150}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1148, file: !155, line: 151, baseType: !1151, size: 128)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !155, line: 150, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !155, line: 150, size: 128, elements: !1153)
!1153 = !{!1154, !1155, !1156}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1152, file: !155, line: 150, baseType: !7, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1152, file: !155, line: 150, baseType: !7, size: 32, offset: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1152, file: !155, line: 150, baseType: !1157, size: 64, offset: 64)
!1157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1158, size: 64, elements: !642)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !608, line: 108, baseType: !1159)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !155, line: 122, size: 512, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1172, !1173, !1174, !1175, !1176, !1177, !1178}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1160, file: !155, line: 124, baseType: !1142, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1160, file: !155, line: 125, baseType: !1142, size: 64, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1160, file: !155, line: 131, baseType: !1165, size: 64, offset: 128)
!1165 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !155, line: 128, size: 64, elements: !1166)
!1166 = !{!1167, !1171}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1165, file: !155, line: 129, baseType: !1168, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !608, line: 66, baseType: !1169)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !608, line: 65, flags: DIFlagFwdDecl)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1165, file: !155, line: 130, baseType: !607, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1160, file: !155, line: 134, baseType: !599, size: 64, offset: 192)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1160, file: !155, line: 137, baseType: !723, size: 64, offset: 256)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1160, file: !155, line: 138, baseType: !843, size: 32, offset: 320)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1160, file: !155, line: 142, baseType: !7, size: 32, offset: 352)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1160, file: !155, line: 144, baseType: !595, size: 32, offset: 384)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1160, file: !155, line: 145, baseType: !595, size: 32, offset: 416)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1160, file: !155, line: 146, baseType: !1179, size: 64, offset: 448)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !155, line: 119, baseType: !694)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1143, file: !155, line: 220, baseType: !1146, size: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1143, file: !155, line: 223, baseType: !599, size: 64, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1143, file: !155, line: 226, baseType: !1183, size: 64, offset: 192)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 100, size: 1216, elements: !1185)
!1185 = !{!1186, !1187, !1188, !1189, !1190, !1195, !1196, !1197, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1231, !1239, !1240}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1184, file: !142, line: 102, baseType: !595, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1184, file: !142, line: 105, baseType: !7, size: 32, offset: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1184, file: !142, line: 108, baseType: !1142, size: 64, offset: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1184, file: !142, line: 111, baseType: !1142, size: 64, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1184, file: !142, line: 114, baseType: !1191, size: 64, offset: 192)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !142, line: 41, size: 64, elements: !1192)
!1192 = !{!1193, !1194}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1191, file: !142, line: 42, baseType: !141, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1191, file: !142, line: 43, baseType: !7, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1184, file: !142, line: 117, baseType: !7, size: 32, offset: 256)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1184, file: !142, line: 120, baseType: !7, size: 32, offset: 288)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1184, file: !142, line: 123, baseType: !1198, size: 64, offset: 320)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !142, line: 87, baseType: !1200)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !142, line: 87, size: 128, elements: !1201)
!1201 = !{!1202}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1200, file: !142, line: 87, baseType: !1203, size: 128)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !142, line: 85, baseType: !1204)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !142, line: 85, size: 128, elements: !1205)
!1205 = !{!1206, !1207, !1208}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1204, file: !142, line: 85, baseType: !7, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1204, file: !142, line: 85, baseType: !7, size: 32, offset: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1204, file: !142, line: 85, baseType: !1209, size: 64, offset: 64)
!1209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1210, size: 64, elements: !642)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !142, line: 84, baseType: !1183)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1184, file: !142, line: 126, baseType: !1183, size: 64, offset: 384)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1184, file: !142, line: 129, baseType: !1183, size: 64, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1184, file: !142, line: 132, baseType: !599, size: 64, offset: 512)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1184, file: !142, line: 139, baseType: !723, size: 64, offset: 576)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1184, file: !142, line: 143, baseType: !771, size: 128, offset: 640)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1184, file: !142, line: 146, baseType: !771, size: 128, offset: 768)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1184, file: !142, line: 148, baseType: !594, size: 8, offset: 896)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1184, file: !142, line: 149, baseType: !594, size: 8, offset: 904)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1184, file: !142, line: 153, baseType: !150, size: 32, offset: 928)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1184, file: !142, line: 156, baseType: !1221, size: 64, offset: 960)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !142, line: 48, size: 320, elements: !1223)
!1223 = !{!1224, !1228, !1229, !1230}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1222, file: !142, line: 50, baseType: !1225, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !608, line: 58, baseType: !1226)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !608, line: 57, flags: DIFlagFwdDecl)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1222, file: !142, line: 59, baseType: !771, size: 128, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1222, file: !142, line: 64, baseType: !594, size: 8, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1222, file: !142, line: 67, baseType: !1221, size: 64, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1184, file: !142, line: 159, baseType: !1232, size: 64, offset: 1024)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !142, line: 72, size: 256, elements: !1234)
!1234 = !{!1235, !1236, !1237, !1238}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1233, file: !142, line: 74, baseType: !1159, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1233, file: !142, line: 77, baseType: !1232, size: 64, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1233, file: !142, line: 78, baseType: !1232, size: 64, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1233, file: !142, line: 81, baseType: !1232, size: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1184, file: !142, line: 162, baseType: !594, size: 8, offset: 1088)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1184, file: !142, line: 166, baseType: !723, size: 64, offset: 1152)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1143, file: !155, line: 229, baseType: !1242, size: 128, offset: 256)
!1242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1243, size: 128, elements: !678)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !155, line: 229, flags: DIFlagFwdDecl)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1143, file: !155, line: 232, baseType: !1142, size: 64, offset: 384)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1143, file: !155, line: 233, baseType: !1142, size: 64, offset: 448)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1143, file: !155, line: 238, baseType: !1248, size: 64, offset: 512)
!1248 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !155, line: 235, size: 64, elements: !1249)
!1249 = !{!1250, !1256}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1248, file: !155, line: 236, baseType: !1251, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !155, line: 273, size: 128, elements: !1253)
!1253 = !{!1254, !1255}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1252, file: !155, line: 275, baseType: !1168, size: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1252, file: !155, line: 278, baseType: !1168, size: 64, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1248, file: !155, line: 237, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !155, line: 259, size: 320, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263, !1264}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1258, file: !155, line: 261, baseType: !607, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1258, file: !155, line: 262, baseType: !607, size: 64, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1258, file: !155, line: 266, baseType: !607, size: 64, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1258, file: !155, line: 267, baseType: !607, size: 64, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1258, file: !155, line: 270, baseType: !595, size: 32, offset: 256)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1143, file: !155, line: 241, baseType: !1179, size: 64, offset: 576)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1143, file: !155, line: 244, baseType: !595, size: 32, offset: 640)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1143, file: !155, line: 247, baseType: !595, size: 32, offset: 672)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1143, file: !155, line: 250, baseType: !595, size: 32, offset: 704)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1143, file: !155, line: 253, baseType: !595, size: 32, offset: 736)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1143, file: !155, line: 256, baseType: !595, size: 32, offset: 768)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1138, file: !155, line: 378, baseType: !1141, size: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1138, file: !155, line: 381, baseType: !1273, size: 64, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !155, line: 282, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !155, line: 282, size: 128, elements: !1276)
!1276 = !{!1277}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1275, file: !155, line: 282, baseType: !1278, size: 128)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !155, line: 281, baseType: !1279)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !155, line: 281, size: 128, elements: !1280)
!1280 = !{!1281, !1282, !1283}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1279, file: !155, line: 281, baseType: !7, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1279, file: !155, line: 281, baseType: !7, size: 32, offset: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1279, file: !155, line: 281, baseType: !1284, size: 64, offset: 64)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1141, size: 64, elements: !642)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1138, file: !155, line: 384, baseType: !595, size: 32, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1138, file: !155, line: 387, baseType: !595, size: 32, offset: 224)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1138, file: !155, line: 390, baseType: !595, size: 32, offset: 256)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1138, file: !155, line: 394, baseType: !1273, size: 64, offset: 320)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1138, file: !155, line: 396, baseType: !154, size: 32, offset: 384)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1138, file: !155, line: 399, baseType: !1291, size: 64, offset: 416)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 64, elements: !678)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1138, file: !155, line: 402, baseType: !1293, size: 64, offset: 480)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !678)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1138, file: !155, line: 406, baseType: !595, size: 32, offset: 544)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1138, file: !155, line: 409, baseType: !595, size: 32, offset: 576)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !969, file: !970, line: 470, baseType: !1169, size: 64, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !969, file: !970, line: 473, baseType: !1298, size: 64, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !970, line: 166, flags: DIFlagFwdDecl)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !969, file: !970, line: 476, baseType: !1301, size: 64, offset: 256)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !142, line: 187, size: 256, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1302, file: !142, line: 189, baseType: !595, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1302, file: !142, line: 192, baseType: !1198, size: 64, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1302, file: !142, line: 197, baseType: !1053, size: 64, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1302, file: !142, line: 200, baseType: !1183, size: 64, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !969, file: !970, line: 479, baseType: !1053, size: 64, offset: 320)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !969, file: !970, line: 484, baseType: !723, size: 64, offset: 384)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !969, file: !970, line: 488, baseType: !723, size: 64, offset: 448)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !969, file: !970, line: 493, baseType: !723, size: 64, offset: 512)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !969, file: !970, line: 496, baseType: !723, size: 64, offset: 576)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !969, file: !970, line: 501, baseType: !1314, size: 64, offset: 640)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !166, line: 2355, size: 576, elements: !1316)
!1316 = !{!1317, !1320, !1321, !1322, !1323, !1325, !1326, !1331, !1332, !1333, !1334, !1335, !1336}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1315, file: !166, line: 2356, baseType: !1318, size: 64)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !166, line: 2356, flags: DIFlagFwdDecl)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1315, file: !166, line: 2357, baseType: !600, size: 64, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1315, file: !166, line: 2358, baseType: !595, size: 32, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1315, file: !166, line: 2359, baseType: !595, size: 32, offset: 160)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1315, file: !166, line: 2360, baseType: !1324, size: 128, offset: 192)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 128, elements: !703)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1315, file: !166, line: 2364, baseType: !595, size: 32, offset: 320)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1315, file: !166, line: 2367, baseType: !1327, size: 128, offset: 384)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !166, line: 2349, size: 128, elements: !1328)
!1328 = !{!1329, !1330}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1327, file: !166, line: 2351, baseType: !607, size: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1327, file: !166, line: 2352, baseType: !694, size: 64, offset: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1315, file: !166, line: 2371, baseType: !165, size: 32, offset: 512)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1315, file: !166, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1315, file: !166, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1315, file: !166, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1315, file: !166, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1315, file: !166, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !969, file: !970, line: 504, baseType: !1338, size: 64, offset: 704)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !970, line: 504, flags: DIFlagFwdDecl)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !969, file: !970, line: 507, baseType: !1053, size: 64, offset: 768)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !969, file: !970, line: 510, baseType: !595, size: 32, offset: 832)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !969, file: !970, line: 513, baseType: !595, size: 32, offset: 864)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !969, file: !970, line: 516, baseType: !843, size: 32, offset: 896)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !969, file: !970, line: 519, baseType: !843, size: 32, offset: 928)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !969, file: !970, line: 522, baseType: !7, size: 32, offset: 960)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !969, file: !970, line: 523, baseType: !7, size: 32, offset: 992)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !969, file: !970, line: 528, baseType: !600, size: 64, offset: 1024)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !969, file: !970, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !969, file: !970, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !969, file: !970, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !969, file: !970, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !969, file: !970, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !969, file: !970, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !969, file: !970, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !969, file: !970, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !969, file: !970, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !969, file: !970, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !969, file: !970, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !969, file: !970, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !969, file: !970, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !969, file: !970, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !969, file: !970, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !969, file: !970, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !964, file: !171, line: 3254, baseType: !723, size: 64, offset: 1536)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !964, file: !171, line: 3257, baseType: !723, size: 64, offset: 1600)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !964, file: !171, line: 3258, baseType: !723, size: 64, offset: 1664)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !964, file: !171, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !964, file: !171, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !964, file: !171, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !964, file: !171, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !964, file: !171, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !964, file: !171, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !964, file: !171, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !964, file: !171, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !964, file: !171, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !964, file: !171, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !964, file: !171, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !964, file: !171, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !964, file: !171, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !964, file: !171, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !964, file: !171, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !964, file: !171, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !964, file: !171, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !964, file: !171, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !725, file: !171, line: 3394, baseType: !1386, size: 1344)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !171, line: 2279, size: 1344, elements: !1387)
!1387 = !{!1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1413, !1414, !1415, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1386, file: !171, line: 2280, baseType: !761, size: 192)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1386, file: !171, line: 2281, baseType: !723, size: 64, offset: 192)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1386, file: !171, line: 2282, baseType: !723, size: 64, offset: 256)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1386, file: !171, line: 2283, baseType: !723, size: 64, offset: 320)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1386, file: !171, line: 2284, baseType: !723, size: 64, offset: 384)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1386, file: !171, line: 2285, baseType: !7, size: 32, offset: 448)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1386, file: !171, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1386, file: !171, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1386, file: !171, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1386, file: !171, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1386, file: !171, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1386, file: !171, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1386, file: !171, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1386, file: !171, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1386, file: !171, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1386, file: !171, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1386, file: !171, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1386, file: !171, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1386, file: !171, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1386, file: !171, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1386, file: !171, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1386, file: !171, line: 2305, baseType: !7, size: 32, offset: 512)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1386, file: !171, line: 2306, baseType: !1411, size: 32, offset: 544)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1412, line: 31, baseType: !595)
!1412 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1386, file: !171, line: 2307, baseType: !723, size: 64, offset: 576)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1386, file: !171, line: 2308, baseType: !723, size: 64, offset: 640)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1386, file: !171, line: 2314, baseType: !1416, size: 64, offset: 704)
!1416 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !171, line: 2309, size: 64, elements: !1417)
!1417 = !{!1418, !1419, !1420}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1416, file: !171, line: 2310, baseType: !595, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1416, file: !171, line: 2311, baseType: !600, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1416, file: !171, line: 2312, baseType: !1421, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !171, line: 2277, flags: DIFlagFwdDecl)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1386, file: !171, line: 2315, baseType: !723, size: 64, offset: 768)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1386, file: !171, line: 2316, baseType: !723, size: 64, offset: 832)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1386, file: !171, line: 2317, baseType: !723, size: 64, offset: 896)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1386, file: !171, line: 2318, baseType: !723, size: 64, offset: 960)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1386, file: !171, line: 2319, baseType: !723, size: 64, offset: 1024)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1386, file: !171, line: 2320, baseType: !723, size: 64, offset: 1088)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1386, file: !171, line: 2321, baseType: !723, size: 64, offset: 1152)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1386, file: !171, line: 2322, baseType: !723, size: 64, offset: 1216)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1386, file: !171, line: 2324, baseType: !1432, size: 64, offset: 1280)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !171, line: 2324, flags: DIFlagFwdDecl)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !725, file: !171, line: 3395, baseType: !1435, size: 320)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !171, line: 1469, size: 320, elements: !1436)
!1436 = !{!1437, !1438, !1439}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1435, file: !171, line: 1470, baseType: !761, size: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1435, file: !171, line: 1471, baseType: !723, size: 64, offset: 192)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1435, file: !171, line: 1472, baseType: !723, size: 64, offset: 256)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !725, file: !171, line: 3396, baseType: !1441, size: 320)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !171, line: 1482, size: 320, elements: !1442)
!1442 = !{!1443, !1444, !1445}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1441, file: !171, line: 1483, baseType: !761, size: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1441, file: !171, line: 1484, baseType: !595, size: 32, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1441, file: !171, line: 1485, baseType: !1116, size: 64, offset: 256)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !725, file: !171, line: 3397, baseType: !1447, size: 384)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !171, line: 1829, size: 384, elements: !1448)
!1448 = !{!1449, !1450, !1451, !1452}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1447, file: !171, line: 1830, baseType: !761, size: 192)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1447, file: !171, line: 1831, baseType: !843, size: 32, offset: 192)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1447, file: !171, line: 1832, baseType: !723, size: 64, offset: 256)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1447, file: !171, line: 1835, baseType: !1116, size: 64, offset: 320)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !725, file: !171, line: 3398, baseType: !1454, size: 704)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !171, line: 1898, size: 704, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1460, !1463}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1454, file: !171, line: 1899, baseType: !761, size: 192)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1454, file: !171, line: 1902, baseType: !723, size: 64, offset: 192)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1454, file: !171, line: 1905, baseType: !1225, size: 64, offset: 256)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1454, file: !171, line: 1908, baseType: !7, size: 32, offset: 320)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1454, file: !171, line: 1911, baseType: !1461, size: 64, offset: 384)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !171, line: 1876, flags: DIFlagFwdDecl)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1454, file: !171, line: 1914, baseType: !1464, size: 256, offset: 448)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !171, line: 1883, size: 256, elements: !1465)
!1465 = !{!1466, !1468, !1469, !1474}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1464, file: !171, line: 1884, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1464, file: !171, line: 1885, baseType: !1467, size: 64, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1464, file: !171, line: 1891, baseType: !1470, size: 64, offset: 128)
!1470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1464, file: !171, line: 1891, size: 64, elements: !1471)
!1471 = !{!1472, !1473}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1470, file: !171, line: 1891, baseType: !1225, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1470, file: !171, line: 1891, baseType: !723, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1464, file: !171, line: 1892, baseType: !1475, size: 64, offset: 192)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !725, file: !171, line: 3399, baseType: !1477, size: 704)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !171, line: 2008, size: 704, elements: !1478)
!1478 = !{!1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1477, file: !171, line: 2009, baseType: !761, size: 192)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1477, file: !171, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1477, file: !171, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1477, file: !171, line: 2014, baseType: !843, size: 32, offset: 224)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1477, file: !171, line: 2016, baseType: !723, size: 64, offset: 256)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1477, file: !171, line: 2017, baseType: !1105, size: 64, offset: 320)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1477, file: !171, line: 2019, baseType: !723, size: 64, offset: 384)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1477, file: !171, line: 2020, baseType: !723, size: 64, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1477, file: !171, line: 2021, baseType: !723, size: 64, offset: 512)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1477, file: !171, line: 2022, baseType: !723, size: 64, offset: 576)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1477, file: !171, line: 2023, baseType: !723, size: 64, offset: 640)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !725, file: !171, line: 3400, baseType: !1491, size: 832)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !171, line: 2430, size: 832, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1491, file: !171, line: 2431, baseType: !761, size: 192)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1491, file: !171, line: 2433, baseType: !723, size: 64, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1491, file: !171, line: 2434, baseType: !723, size: 64, offset: 256)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1491, file: !171, line: 2435, baseType: !723, size: 64, offset: 320)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1491, file: !171, line: 2436, baseType: !723, size: 64, offset: 384)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1491, file: !171, line: 2437, baseType: !1105, size: 64, offset: 448)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1491, file: !171, line: 2438, baseType: !723, size: 64, offset: 512)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1491, file: !171, line: 2440, baseType: !723, size: 64, offset: 576)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1491, file: !171, line: 2441, baseType: !723, size: 64, offset: 640)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1491, file: !171, line: 2443, baseType: !1503, size: 128, offset: 704)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !171, line: 182, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !171, line: 182, size: 128, elements: !1505)
!1505 = !{!1506}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1504, file: !171, line: 182, baseType: !1110, size: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !725, file: !171, line: 3401, baseType: !1508, size: 320)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !171, line: 3327, size: 320, elements: !1509)
!1509 = !{!1510, !1511, !1518}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1508, file: !171, line: 3329, baseType: !761, size: 192)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1508, file: !171, line: 3330, baseType: !1512, size: 64, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !171, line: 3320, size: 192, elements: !1514)
!1514 = !{!1515, !1516, !1517}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1513, file: !171, line: 3322, baseType: !1512, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1513, file: !171, line: 3323, baseType: !1512, size: 64, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1513, file: !171, line: 3324, baseType: !723, size: 64, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1508, file: !171, line: 3331, baseType: !1512, size: 64, offset: 256)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !725, file: !171, line: 3402, baseType: !1520, size: 256)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !171, line: 1540, size: 256, elements: !1521)
!1521 = !{!1522, !1523}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1520, file: !171, line: 1541, baseType: !761, size: 192)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1520, file: !171, line: 1542, baseType: !1524, size: 64, offset: 192)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !171, line: 1538, baseType: !1526)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !171, line: 1538, size: 192, elements: !1527)
!1527 = !{!1528}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1526, file: !171, line: 1538, baseType: !1529, size: 192)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !171, line: 1537, baseType: !1530)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !171, line: 1537, size: 192, elements: !1531)
!1531 = !{!1532, !1533, !1534}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1530, file: !171, line: 1537, baseType: !7, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1530, file: !171, line: 1537, baseType: !7, size: 32, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1530, file: !171, line: 1537, baseType: !1535, size: 128, offset: 64)
!1535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1536, size: 128, elements: !642)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !171, line: 1535, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !171, line: 1532, size: 128, elements: !1538)
!1538 = !{!1539, !1540}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1537, file: !171, line: 1533, baseType: !723, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1537, file: !171, line: 1534, baseType: !723, size: 64, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !725, file: !171, line: 3403, baseType: !1542, size: 512)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !171, line: 1938, size: 512, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1553, !1554, !1555}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1542, file: !171, line: 1939, baseType: !761, size: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1542, file: !171, line: 1940, baseType: !843, size: 32, offset: 192)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1542, file: !171, line: 1941, baseType: !170, size: 32, offset: 224)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1542, file: !171, line: 1946, baseType: !1548, size: 32, offset: 256)
!1548 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !171, line: 1942, size: 32, elements: !1549)
!1549 = !{!1550, !1551, !1552}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1548, file: !171, line: 1943, baseType: !189, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1548, file: !171, line: 1944, baseType: !196, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1548, file: !171, line: 1945, baseType: !203, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1542, file: !171, line: 1950, baseType: !1168, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1542, file: !171, line: 1951, baseType: !1168, size: 64, offset: 384)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1542, file: !171, line: 1953, baseType: !1116, size: 64, offset: 448)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !725, file: !171, line: 3404, baseType: !1557, size: 1664)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !171, line: 3337, size: 1664, elements: !1558)
!1558 = !{!1559, !1560}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1557, file: !171, line: 3338, baseType: !761, size: 192)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1557, file: !171, line: 3341, baseType: !1561, size: 1472, offset: 192)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1562, line: 410, size: 1472, elements: !1563)
!1562 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1561, file: !1562, line: 412, baseType: !595, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1561, file: !1562, line: 413, baseType: !595, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1561, file: !1562, line: 414, baseType: !595, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1561, file: !1562, line: 415, baseType: !595, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1561, file: !1562, line: 416, baseType: !595, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1561, file: !1562, line: 417, baseType: !595, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1561, file: !1562, line: 418, baseType: !594, size: 8, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1561, file: !1562, line: 419, baseType: !594, size: 8, offset: 200)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1561, file: !1562, line: 420, baseType: !1573, size: 8, offset: 208)
!1573 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1561, file: !1562, line: 421, baseType: !1573, size: 8, offset: 216)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1561, file: !1562, line: 422, baseType: !1573, size: 8, offset: 224)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1561, file: !1562, line: 423, baseType: !1573, size: 8, offset: 232)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1561, file: !1562, line: 424, baseType: !1573, size: 8, offset: 240)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1561, file: !1562, line: 425, baseType: !1573, size: 8, offset: 248)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1561, file: !1562, line: 426, baseType: !1573, size: 8, offset: 256)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1561, file: !1562, line: 427, baseType: !1573, size: 8, offset: 264)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1561, file: !1562, line: 428, baseType: !1573, size: 8, offset: 272)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1561, file: !1562, line: 429, baseType: !1573, size: 8, offset: 280)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1561, file: !1562, line: 430, baseType: !1573, size: 8, offset: 288)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1561, file: !1562, line: 431, baseType: !1573, size: 8, offset: 296)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1561, file: !1562, line: 432, baseType: !1573, size: 8, offset: 304)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1561, file: !1562, line: 433, baseType: !1573, size: 8, offset: 312)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1561, file: !1562, line: 434, baseType: !1573, size: 8, offset: 320)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1561, file: !1562, line: 435, baseType: !1573, size: 8, offset: 328)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1561, file: !1562, line: 436, baseType: !1573, size: 8, offset: 336)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1561, file: !1562, line: 437, baseType: !1573, size: 8, offset: 344)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1561, file: !1562, line: 438, baseType: !1573, size: 8, offset: 352)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1561, file: !1562, line: 439, baseType: !1573, size: 8, offset: 360)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1561, file: !1562, line: 440, baseType: !1573, size: 8, offset: 368)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1561, file: !1562, line: 441, baseType: !1573, size: 8, offset: 376)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1561, file: !1562, line: 442, baseType: !1573, size: 8, offset: 384)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1561, file: !1562, line: 443, baseType: !1573, size: 8, offset: 392)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1561, file: !1562, line: 444, baseType: !1573, size: 8, offset: 400)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1561, file: !1562, line: 445, baseType: !1573, size: 8, offset: 408)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1561, file: !1562, line: 446, baseType: !1573, size: 8, offset: 416)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1561, file: !1562, line: 447, baseType: !1573, size: 8, offset: 424)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1561, file: !1562, line: 448, baseType: !1573, size: 8, offset: 432)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1561, file: !1562, line: 449, baseType: !1573, size: 8, offset: 440)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1561, file: !1562, line: 450, baseType: !1573, size: 8, offset: 448)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1561, file: !1562, line: 451, baseType: !1573, size: 8, offset: 456)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1561, file: !1562, line: 452, baseType: !1573, size: 8, offset: 464)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1561, file: !1562, line: 453, baseType: !1573, size: 8, offset: 472)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1561, file: !1562, line: 454, baseType: !1573, size: 8, offset: 480)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1561, file: !1562, line: 455, baseType: !1573, size: 8, offset: 488)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1561, file: !1562, line: 456, baseType: !1573, size: 8, offset: 496)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1561, file: !1562, line: 457, baseType: !1573, size: 8, offset: 504)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1561, file: !1562, line: 458, baseType: !1573, size: 8, offset: 512)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1561, file: !1562, line: 459, baseType: !1573, size: 8, offset: 520)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1561, file: !1562, line: 460, baseType: !1573, size: 8, offset: 528)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1561, file: !1562, line: 461, baseType: !1573, size: 8, offset: 536)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1561, file: !1562, line: 462, baseType: !1573, size: 8, offset: 544)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1561, file: !1562, line: 463, baseType: !1573, size: 8, offset: 552)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1561, file: !1562, line: 464, baseType: !1573, size: 8, offset: 560)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1561, file: !1562, line: 465, baseType: !1573, size: 8, offset: 568)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1561, file: !1562, line: 466, baseType: !1573, size: 8, offset: 576)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1561, file: !1562, line: 467, baseType: !1573, size: 8, offset: 584)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1561, file: !1562, line: 468, baseType: !1573, size: 8, offset: 592)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1561, file: !1562, line: 469, baseType: !1573, size: 8, offset: 600)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1561, file: !1562, line: 470, baseType: !1573, size: 8, offset: 608)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1561, file: !1562, line: 471, baseType: !1573, size: 8, offset: 616)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1561, file: !1562, line: 472, baseType: !1573, size: 8, offset: 624)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1561, file: !1562, line: 473, baseType: !1573, size: 8, offset: 632)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1561, file: !1562, line: 474, baseType: !1573, size: 8, offset: 640)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1561, file: !1562, line: 475, baseType: !1573, size: 8, offset: 648)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1561, file: !1562, line: 476, baseType: !1573, size: 8, offset: 656)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1561, file: !1562, line: 477, baseType: !1573, size: 8, offset: 664)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1561, file: !1562, line: 478, baseType: !1573, size: 8, offset: 672)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1561, file: !1562, line: 479, baseType: !1573, size: 8, offset: 680)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1561, file: !1562, line: 480, baseType: !1573, size: 8, offset: 688)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1561, file: !1562, line: 481, baseType: !1573, size: 8, offset: 696)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1561, file: !1562, line: 482, baseType: !1573, size: 8, offset: 704)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1561, file: !1562, line: 483, baseType: !1573, size: 8, offset: 712)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1561, file: !1562, line: 484, baseType: !1573, size: 8, offset: 720)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1561, file: !1562, line: 485, baseType: !1573, size: 8, offset: 728)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1561, file: !1562, line: 486, baseType: !1573, size: 8, offset: 736)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1561, file: !1562, line: 487, baseType: !1573, size: 8, offset: 744)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1561, file: !1562, line: 488, baseType: !1573, size: 8, offset: 752)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1561, file: !1562, line: 489, baseType: !1573, size: 8, offset: 760)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1561, file: !1562, line: 490, baseType: !1573, size: 8, offset: 768)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1561, file: !1562, line: 491, baseType: !1573, size: 8, offset: 776)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1561, file: !1562, line: 492, baseType: !1573, size: 8, offset: 784)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1561, file: !1562, line: 493, baseType: !1573, size: 8, offset: 792)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1561, file: !1562, line: 494, baseType: !1573, size: 8, offset: 800)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1561, file: !1562, line: 495, baseType: !1573, size: 8, offset: 808)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1561, file: !1562, line: 496, baseType: !1573, size: 8, offset: 816)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1561, file: !1562, line: 497, baseType: !1573, size: 8, offset: 824)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1561, file: !1562, line: 498, baseType: !1573, size: 8, offset: 832)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1561, file: !1562, line: 499, baseType: !1573, size: 8, offset: 840)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1561, file: !1562, line: 500, baseType: !1573, size: 8, offset: 848)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1561, file: !1562, line: 501, baseType: !1573, size: 8, offset: 856)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1561, file: !1562, line: 502, baseType: !1573, size: 8, offset: 864)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1561, file: !1562, line: 503, baseType: !1573, size: 8, offset: 872)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1561, file: !1562, line: 504, baseType: !1573, size: 8, offset: 880)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1561, file: !1562, line: 505, baseType: !1573, size: 8, offset: 888)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1561, file: !1562, line: 506, baseType: !1573, size: 8, offset: 896)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1561, file: !1562, line: 507, baseType: !1573, size: 8, offset: 904)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1561, file: !1562, line: 508, baseType: !1573, size: 8, offset: 912)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1561, file: !1562, line: 509, baseType: !1573, size: 8, offset: 920)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1561, file: !1562, line: 510, baseType: !1573, size: 8, offset: 928)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1561, file: !1562, line: 511, baseType: !1573, size: 8, offset: 936)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1561, file: !1562, line: 512, baseType: !1573, size: 8, offset: 944)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1561, file: !1562, line: 513, baseType: !1573, size: 8, offset: 952)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1561, file: !1562, line: 514, baseType: !1573, size: 8, offset: 960)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1561, file: !1562, line: 515, baseType: !1573, size: 8, offset: 968)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1561, file: !1562, line: 516, baseType: !1573, size: 8, offset: 976)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1561, file: !1562, line: 517, baseType: !1573, size: 8, offset: 984)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1561, file: !1562, line: 518, baseType: !1573, size: 8, offset: 992)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1561, file: !1562, line: 519, baseType: !1573, size: 8, offset: 1000)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1561, file: !1562, line: 520, baseType: !1573, size: 8, offset: 1008)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1561, file: !1562, line: 521, baseType: !1573, size: 8, offset: 1016)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1561, file: !1562, line: 522, baseType: !1573, size: 8, offset: 1024)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1561, file: !1562, line: 523, baseType: !1573, size: 8, offset: 1032)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1561, file: !1562, line: 524, baseType: !1573, size: 8, offset: 1040)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1561, file: !1562, line: 525, baseType: !1573, size: 8, offset: 1048)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1561, file: !1562, line: 526, baseType: !1573, size: 8, offset: 1056)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1561, file: !1562, line: 527, baseType: !1573, size: 8, offset: 1064)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1561, file: !1562, line: 528, baseType: !1573, size: 8, offset: 1072)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1561, file: !1562, line: 529, baseType: !1573, size: 8, offset: 1080)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1561, file: !1562, line: 530, baseType: !1573, size: 8, offset: 1088)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1561, file: !1562, line: 531, baseType: !1573, size: 8, offset: 1096)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1561, file: !1562, line: 532, baseType: !1573, size: 8, offset: 1104)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1561, file: !1562, line: 533, baseType: !1573, size: 8, offset: 1112)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1561, file: !1562, line: 534, baseType: !1573, size: 8, offset: 1120)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1561, file: !1562, line: 535, baseType: !1573, size: 8, offset: 1128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1561, file: !1562, line: 536, baseType: !1573, size: 8, offset: 1136)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1561, file: !1562, line: 537, baseType: !1573, size: 8, offset: 1144)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1561, file: !1562, line: 538, baseType: !1573, size: 8, offset: 1152)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1561, file: !1562, line: 539, baseType: !1573, size: 8, offset: 1160)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1561, file: !1562, line: 540, baseType: !1573, size: 8, offset: 1168)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1561, file: !1562, line: 541, baseType: !1573, size: 8, offset: 1176)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1561, file: !1562, line: 542, baseType: !1573, size: 8, offset: 1184)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1561, file: !1562, line: 543, baseType: !1573, size: 8, offset: 1192)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1561, file: !1562, line: 544, baseType: !1573, size: 8, offset: 1200)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1561, file: !1562, line: 545, baseType: !1573, size: 8, offset: 1208)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1561, file: !1562, line: 546, baseType: !1573, size: 8, offset: 1216)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1561, file: !1562, line: 547, baseType: !1573, size: 8, offset: 1224)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1561, file: !1562, line: 548, baseType: !1573, size: 8, offset: 1232)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1561, file: !1562, line: 549, baseType: !1573, size: 8, offset: 1240)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1561, file: !1562, line: 550, baseType: !1573, size: 8, offset: 1248)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1561, file: !1562, line: 551, baseType: !1573, size: 8, offset: 1256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1561, file: !1562, line: 552, baseType: !1573, size: 8, offset: 1264)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1561, file: !1562, line: 553, baseType: !1573, size: 8, offset: 1272)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1561, file: !1562, line: 554, baseType: !1573, size: 8, offset: 1280)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1561, file: !1562, line: 555, baseType: !1573, size: 8, offset: 1288)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1561, file: !1562, line: 556, baseType: !1573, size: 8, offset: 1296)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1561, file: !1562, line: 557, baseType: !1573, size: 8, offset: 1304)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1561, file: !1562, line: 558, baseType: !1573, size: 8, offset: 1312)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1561, file: !1562, line: 559, baseType: !1573, size: 8, offset: 1320)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1561, file: !1562, line: 560, baseType: !1573, size: 8, offset: 1328)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1561, file: !1562, line: 561, baseType: !1573, size: 8, offset: 1336)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1561, file: !1562, line: 562, baseType: !1573, size: 8, offset: 1344)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1561, file: !1562, line: 563, baseType: !1573, size: 8, offset: 1352)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1561, file: !1562, line: 564, baseType: !1573, size: 8, offset: 1360)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1561, file: !1562, line: 565, baseType: !1573, size: 8, offset: 1368)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1561, file: !1562, line: 566, baseType: !1573, size: 8, offset: 1376)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1561, file: !1562, line: 567, baseType: !1573, size: 8, offset: 1384)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1561, file: !1562, line: 568, baseType: !1573, size: 8, offset: 1392)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1561, file: !1562, line: 569, baseType: !1573, size: 8, offset: 1400)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1561, file: !1562, line: 570, baseType: !1573, size: 8, offset: 1408)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1561, file: !1562, line: 571, baseType: !1573, size: 8, offset: 1416)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1561, file: !1562, line: 572, baseType: !1573, size: 8, offset: 1424)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1561, file: !1562, line: 573, baseType: !1573, size: 8, offset: 1432)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1561, file: !1562, line: 574, baseType: !1573, size: 8, offset: 1440)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !725, file: !171, line: 3405, baseType: !1729, size: 384)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !171, line: 3352, size: 384, elements: !1730)
!1730 = !{!1731, !1732}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1729, file: !171, line: 3353, baseType: !761, size: 192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1729, file: !171, line: 3356, baseType: !1733, size: 192, offset: 192)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1562, line: 578, size: 192, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1733, file: !1562, line: 580, baseType: !595, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1733, file: !1562, line: 581, baseType: !595, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1733, file: !1562, line: 582, baseType: !595, size: 32, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1733, file: !1562, line: 583, baseType: !595, size: 32, offset: 96)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1733, file: !1562, line: 584, baseType: !594, size: 8, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1733, file: !1562, line: 585, baseType: !594, size: 8, offset: 136)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1733, file: !1562, line: 586, baseType: !594, size: 8, offset: 144)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1733, file: !1562, line: 587, baseType: !594, size: 8, offset: 152)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1733, file: !1562, line: 588, baseType: !594, size: 8, offset: 160)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1733, file: !1562, line: 589, baseType: !594, size: 8, offset: 168)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1733, file: !1562, line: 590, baseType: !594, size: 8, offset: 176)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !628, file: !414, line: 178, baseType: !1142, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !628, file: !414, line: 179, baseType: !1748, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !414, line: 150, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !414, line: 142, size: 320, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755, !1756, !1757}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1750, file: !414, line: 144, baseType: !723, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1750, file: !414, line: 145, baseType: !607, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1750, file: !414, line: 146, baseType: !607, size: 64, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1750, file: !414, line: 147, baseType: !1411, size: 32, offset: 192)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1750, file: !414, line: 148, baseType: !7, size: 32, offset: 224)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1750, file: !414, line: 149, baseType: !594, size: 8, offset: 256)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !628, file: !414, line: 180, baseType: !1759, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !414, line: 162, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !414, line: 159, size: 128, elements: !1762)
!1762 = !{!1763, !1764}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1761, file: !414, line: 160, baseType: !723, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1761, file: !414, line: 161, baseType: !694, size: 64, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !628, file: !414, line: 181, baseType: !1766, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !414, line: 181, flags: DIFlagFwdDecl)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !623, file: !414, line: 317, baseType: !1769, size: 64)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 64, elements: !642)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !623, file: !414, line: 318, baseType: !1771, size: 320)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !414, line: 188, size: 320, elements: !1772)
!1772 = !{!1773, !1775, !1830}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1771, file: !414, line: 190, baseType: !1774, size: 192)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !627, size: 192, elements: !794)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1771, file: !414, line: 193, baseType: !1776, size: 64, offset: 192)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !414, line: 206, size: 320, elements: !1778)
!1778 = !{!1779, !1815, !1816, !1817, !1829}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1777, file: !414, line: 208, baseType: !1780, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !608, line: 62, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1783, line: 538, size: 256, elements: !1784)
!1783 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1784 = !{!1785, !1789, !1795, !1806}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1782, file: !1783, line: 539, baseType: !1786, size: 32)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1783, line: 482, size: 32, elements: !1787)
!1787 = !{!1788}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1786, file: !1783, line: 484, baseType: !7, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1782, file: !1783, line: 540, baseType: !1790, size: 192)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1783, line: 488, size: 192, elements: !1791)
!1791 = !{!1792, !1793, !1794}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1790, file: !1783, line: 489, baseType: !1786, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1790, file: !1783, line: 492, baseType: !600, size: 64, offset: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1790, file: !1783, line: 496, baseType: !723, size: 64, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1782, file: !1783, line: 541, baseType: !1796, size: 256)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1783, line: 504, size: 256, elements: !1797)
!1797 = !{!1798, !1799, !1804, !1805}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1796, file: !1783, line: 505, baseType: !1786, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1796, file: !1783, line: 509, baseType: !1800, size: 64, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1783, line: 501, baseType: !1801)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{null, !1064}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1796, file: !1783, line: 510, baseType: !1064, size: 64, offset: 128)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1796, file: !1783, line: 513, baseType: !1780, size: 64, offset: 192)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1782, file: !1783, line: 542, baseType: !1807, size: 128)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1783, line: 530, size: 128, elements: !1808)
!1808 = !{!1809, !1810}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1807, file: !1783, line: 531, baseType: !1786, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1807, file: !1783, line: 534, baseType: !1811, size: 64, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1783, line: 525, baseType: !1812)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!594, !723, !600, !677, !677}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1777, file: !414, line: 211, baseType: !7, size: 32, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1777, file: !414, line: 214, baseType: !694, size: 64, offset: 128)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1777, file: !414, line: 224, baseType: !1818, size: 64, offset: 192)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !414, line: 202, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !414, line: 202, size: 128, elements: !1821)
!1821 = !{!1822}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1820, file: !414, line: 202, baseType: !1823, size: 128)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !414, line: 200, baseType: !1824)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !414, line: 200, size: 128, elements: !1825)
!1825 = !{!1826, !1827, !1828}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1824, file: !414, line: 200, baseType: !7, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1824, file: !414, line: 200, baseType: !7, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1824, file: !414, line: 200, baseType: !641, size: 64, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1777, file: !414, line: 234, baseType: !1818, size: 64, offset: 256)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1771, file: !414, line: 197, baseType: !694, size: 64, offset: 256)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !623, file: !414, line: 319, baseType: !783, size: 256)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !623, file: !414, line: 320, baseType: !802, size: 192)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "c_expr", scope: !604, file: !3, line: 376, baseType: !1834, size: 64, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_t", file: !398, line: 171, baseType: !1835)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_def", file: !398, line: 170, baseType: !1837)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_expr", file: !398, line: 105, size: 512, elements: !1838)
!1838 = !{!1839, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1869, !1870, !1871, !1892, !1893, !1894, !1895, !1896}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "vinsn", scope: !1837, file: !398, line: 108, baseType: !1840, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "vinsn_t", file: !398, line: 55, baseType: !1841)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vinsn_def", file: !398, line: 629, size: 640, elements: !1843)
!1843 = !{!1844, !1845, !1856, !1857, !1858, !1859, !1860}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "insn_rtx", scope: !1842, file: !398, line: 632, baseType: !607, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1842, file: !398, line: 635, baseType: !1846, size: 384, offset: 64)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idata_def", file: !398, line: 573, size: 384, elements: !1847)
!1847 = !{!1848, !1849, !1850, !1851, !1854, !1855}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1846, file: !398, line: 585, baseType: !595, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1846, file: !398, line: 588, baseType: !607, size: 64, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1846, file: !398, line: 591, baseType: !607, size: 64, offset: 128)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "reg_sets", scope: !1846, file: !398, line: 602, baseType: !1852, size: 64, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !155, line: 37, baseType: !1853)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !608, line: 47, baseType: !661)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "reg_clobbers", scope: !1846, file: !398, line: 604, baseType: !1852, size: 64, offset: 256)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "reg_uses", scope: !1846, file: !398, line: 606, baseType: !1852, size: 64, offset: 320)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1842, file: !398, line: 639, baseType: !7, size: 32, offset: 448)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rtx", scope: !1842, file: !398, line: 642, baseType: !7, size: 32, offset: 480)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1842, file: !398, line: 645, baseType: !595, size: 32, offset: 512)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !1842, file: !398, line: 648, baseType: !595, size: 32, offset: 544)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "may_trap_p", scope: !1842, file: !398, line: 651, baseType: !594, size: 8, offset: 576)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !1837, file: !398, line: 115, baseType: !595, size: 32, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "usefulness", scope: !1837, file: !398, line: 120, baseType: !595, size: 32, offset: 96)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !1837, file: !398, line: 123, baseType: !595, size: 32, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "priority_adj", scope: !1837, file: !398, line: 126, baseType: !595, size: 32, offset: 160)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "sched_times", scope: !1837, file: !398, line: 129, baseType: !595, size: 32, offset: 192)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "orig_bb_index", scope: !1837, file: !398, line: 133, baseType: !595, size: 32, offset: 224)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "spec_done_ds", scope: !1837, file: !398, line: 137, baseType: !1868, size: 32, offset: 256)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "ds_t", file: !403, line: 218, baseType: !595)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "spec_to_check_ds", scope: !1837, file: !398, line: 141, baseType: !1868, size: 32, offset: 288)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "orig_sched_cycle", scope: !1837, file: !398, line: 145, baseType: !595, size: 32, offset: 320)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "history_of_changes", scope: !1837, file: !398, line: 148, baseType: !1872, size: 64, offset: 384)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_history_def_heap", file: !398, line: 102, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_history_def_heap", file: !398, line: 102, size: 320, elements: !1875)
!1875 = !{!1876}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1874, file: !398, line: 102, baseType: !1877, size: 320)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_history_def_base", file: !398, line: 101, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_history_def_base", file: !398, line: 101, size: 320, elements: !1879)
!1879 = !{!1880, !1881, !1882}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1878, file: !398, line: 101, baseType: !7, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1878, file: !398, line: 101, baseType: !7, size: 32, offset: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1878, file: !398, line: 101, baseType: !1883, size: 256, offset: 64)
!1883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1884, size: 256, elements: !642)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_history_def", file: !398, line: 99, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "expr_history_def_1", file: !398, line: 81, size: 256, elements: !1886)
!1886 = !{!1887, !1888, !1889, !1890, !1891}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1885, file: !398, line: 84, baseType: !7, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "old_expr_vinsn", scope: !1885, file: !398, line: 87, baseType: !1840, size: 64, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "new_expr_vinsn", scope: !1885, file: !398, line: 90, baseType: !1840, size: 64, offset: 128)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "spec_ds", scope: !1885, file: !398, line: 93, baseType: !1868, size: 32, offset: 192)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1885, file: !398, line: 96, baseType: !397, size: 32, offset: 224)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "target_available", scope: !1837, file: !398, line: 153, baseType: !1573, size: 8, offset: 448)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "needs_spec_check_p", scope: !1837, file: !398, line: 157, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 456)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "was_substituted", scope: !1837, file: !398, line: 161, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 456)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "was_renamed", scope: !1837, file: !398, line: 164, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 456)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "cant_move", scope: !1837, file: !398, line: 167, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 456)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !604, file: !3, line: 380, baseType: !595, size: 32, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "was_renamed", scope: !604, file: !3, line: 388, baseType: !594, size: 8, offset: 160)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_insn_t_heap", file: !3, line: 529, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_insn_t_heap", file: !3, line: 529, size: 128, elements: !1902)
!1902 = !{!1903}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1901, file: !3, line: 529, baseType: !1904, size: 128)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_insn_t_base", file: !3, line: 528, baseType: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_insn_t_base", file: !3, line: 528, size: 128, elements: !1906)
!1906 = !{!1907, !1908, !1909}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1905, file: !3, line: 528, baseType: !7, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1905, file: !3, line: 528, baseType: !7, size: 32, offset: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1905, file: !3, line: 528, baseType: !1910, size: 64, offset: 64)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 64, elements: !642)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "insn_t", file: !398, line: 64, baseType: !607)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "transformed_insns", file: !398, line: 675, size: 256, elements: !1914)
!1914 = !{!1915, !1916, !1917, !1918, !1919, !1920}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "vinsn_old", scope: !1913, file: !398, line: 678, baseType: !1840, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "vinsn_new", scope: !1913, file: !398, line: 681, baseType: !1840, size: 64, offset: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1913, file: !398, line: 684, baseType: !1868, size: 32, offset: 128)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1913, file: !398, line: 687, baseType: !397, size: 32, offset: 160)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "was_target_conflict", scope: !1913, file: !398, line: 690, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "needs_check", scope: !1913, file: !398, line: 693, baseType: !7, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx_search_arg_p", file: !3, line: 292, baseType: !1922)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_search_arg", file: !3, line: 283, size: 128, elements: !1924)
!1924 = !{!1925, !1926}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1923, file: !3, line: 286, baseType: !607, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1923, file: !3, line: 289, baseType: !595, size: 32, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "_list_t", file: !398, line: 46, baseType: !1929)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_list_node", file: !398, line: 354, size: 896, elements: !1931)
!1931 = !{!1932, !1933}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1930, file: !398, line: 356, baseType: !1928, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1930, file: !398, line: 366, baseType: !1934, size: 832, offset: 64)
!1934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1930, file: !398, line: 358, size: 832, elements: !1935)
!1935 = !{!1936, !1937, !1982, !1983, !2007, !2012}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1934, file: !398, line: 360, baseType: !607, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "bnd", scope: !1934, file: !398, line: 361, baseType: !1938, size: 320)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_bnd", file: !398, line: 222, size: 320, elements: !1939)
!1939 = !{!1940, !1941, !1944, !1946, !1947}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1938, file: !398, line: 225, baseType: !1911, size: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1938, file: !398, line: 228, baseType: !1942, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "ilist_t", file: !398, line: 67, baseType: !1943)
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "_xlist_t", file: !398, line: 59, baseType: !1928)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "av", scope: !1938, file: !398, line: 231, baseType: !1945, size: 64, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_set_t", file: !398, line: 216, baseType: !1928)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "av1", scope: !1938, file: !398, line: 234, baseType: !1945, size: 64, offset: 192)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "dc", scope: !1938, file: !398, line: 239, baseType: !1948, size: 64, offset: 256)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "deps_t", file: !403, line: 549, baseType: !1949)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps", file: !403, line: 451, size: 1472, elements: !1951)
!1951 = !{!1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1976, !1979, !1980, !1981}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_insns", scope: !1950, file: !403, line: 463, baseType: !607, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_mems", scope: !1950, file: !403, line: 466, baseType: !607, size: 64, offset: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_insns", scope: !1950, file: !403, line: 469, baseType: !607, size: 64, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_mems", scope: !1950, file: !403, line: 472, baseType: !607, size: 64, offset: 192)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_list_length", scope: !1950, file: !403, line: 480, baseType: !595, size: 32, offset: 256)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_list_length", scope: !1950, file: !403, line: 483, baseType: !595, size: 32, offset: 288)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "pending_flush_length", scope: !1950, file: !403, line: 487, baseType: !595, size: 32, offset: 320)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "last_pending_memory_flush", scope: !1950, file: !403, line: 498, baseType: !607, size: 64, offset: 384)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call", scope: !1950, file: !403, line: 503, baseType: !607, size: 64, offset: 448)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call_may_noreturn", scope: !1950, file: !403, line: 509, baseType: !607, size: 64, offset: 512)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "sched_before_next_call", scope: !1950, file: !403, line: 515, baseType: !607, size: 64, offset: 576)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "in_post_call_group_p", scope: !1950, file: !403, line: 519, baseType: !402, size: 32, offset: 640)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "last_debug_insn", scope: !1950, file: !403, line: 522, baseType: !607, size: 64, offset: 704)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg", scope: !1950, file: !403, line: 526, baseType: !595, size: 32, offset: 768)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last", scope: !1950, file: !403, line: 532, baseType: !1967, size: 64, offset: 832)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps_reg", file: !403, line: 440, size: 320, elements: !1969)
!1969 = !{!1970, !1971, !1972, !1973, !1974, !1975}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !1968, file: !403, line: 442, baseType: !607, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "sets", scope: !1968, file: !403, line: 443, baseType: !607, size: 64, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "implicit_sets", scope: !1968, file: !403, line: 444, baseType: !607, size: 64, offset: 128)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers", scope: !1968, file: !403, line: 445, baseType: !607, size: 64, offset: 192)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "uses_length", scope: !1968, file: !403, line: 446, baseType: !595, size: 32, offset: 256)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers_length", scope: !1968, file: !403, line: 447, baseType: !595, size: 32, offset: 288)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last_in_use", scope: !1950, file: !403, line: 536, baseType: !1977, size: 256, offset: 896)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset_head", file: !155, line: 34, baseType: !1978)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !663, line: 84, baseType: !662)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "reg_conditional_sets", scope: !1950, file: !403, line: 539, baseType: !1977, size: 256, offset: 1152)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "last_reg_pending_barrier", scope: !1950, file: !403, line: 542, baseType: !408, size: 32, offset: 1408)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !1950, file: !403, line: 546, baseType: !7, size: 1, offset: 1440, flags: DIFlagBitField, extraData: i64 1440)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1934, file: !398, line: 362, baseType: !1836, size: 512)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "fence", scope: !1934, file: !398, line: 363, baseType: !1984, size: 832)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_fence", file: !398, line: 259, size: 832, elements: !1985)
!1985 = !{!1986, !1987, !1990, !1991, !1992, !1993, !1994, !1996, !1997, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1984, file: !398, line: 262, baseType: !1911, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1984, file: !398, line: 265, baseType: !1988, size: 64, offset: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "state_t", file: !1989, line: 158, baseType: !599)
!1989 = !DIFile(filename: "./insn-attr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "cycle", scope: !1984, file: !398, line: 268, baseType: !595, size: 32, offset: 128)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "cycle_issued_insns", scope: !1984, file: !398, line: 272, baseType: !595, size: 32, offset: 160)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "bnds", scope: !1984, file: !398, line: 276, baseType: !1942, size: 64, offset: 192)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "dc", scope: !1984, file: !398, line: 280, baseType: !1948, size: 64, offset: 256)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1984, file: !398, line: 284, baseType: !1995, size: 64, offset: 320)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "tc_t", file: !398, line: 38, baseType: !599)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "executing_insns", scope: !1984, file: !398, line: 287, baseType: !1818, size: 64, offset: 384)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "ready_ticks", scope: !1984, file: !398, line: 291, baseType: !1998, size: 64, offset: 448)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ready_ticks_size", scope: !1984, file: !398, line: 294, baseType: !595, size: 32, offset: 512)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "last_scheduled_insn", scope: !1984, file: !398, line: 297, baseType: !607, size: 64, offset: 576)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "issue_more", scope: !1984, file: !398, line: 300, baseType: !595, size: 32, offset: 640)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "sched_next", scope: !1984, file: !398, line: 303, baseType: !607, size: 64, offset: 704)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "processed_p", scope: !1984, file: !398, line: 306, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled_p", scope: !1984, file: !398, line: 309, baseType: !7, size: 1, offset: 769, flags: DIFlagBitField, extraData: i64 768)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "starts_cycle_p", scope: !1984, file: !398, line: 312, baseType: !7, size: 1, offset: 770, flags: DIFlagBitField, extraData: i64 768)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "after_stall_p", scope: !1984, file: !398, line: 315, baseType: !7, size: 1, offset: 771, flags: DIFlagBitField, extraData: i64 768)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1934, file: !398, line: 364, baseType: !2008, size: 128)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_def", file: !398, line: 201, size: 128, elements: !2009)
!2009 = !{!2010, !2011}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "orig_insn", scope: !2008, file: !398, line: 203, baseType: !1911, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "crosses_call", scope: !2008, file: !398, line: 210, baseType: !594, size: 8, offset: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1934, file: !398, line: 365, baseType: !599, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vinsn_t_heap", file: !3, line: 512, baseType: !2015)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vinsn_t_heap", file: !3, line: 512, size: 128, elements: !2016)
!2016 = !{!2017}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2015, file: !3, line: 512, baseType: !2018, size: 128)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vinsn_t_base", file: !3, line: 511, baseType: !2019)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vinsn_t_base", file: !3, line: 511, size: 128, elements: !2020)
!2020 = !{!2021, !2022, !2023}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2019, file: !3, line: 511, baseType: !7, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2019, file: !3, line: 511, baseType: !7, size: 32, offset: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2019, file: !3, line: 511, baseType: !2024, size: 64, offset: 64)
!2024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1840, size: 64, elements: !642)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "fur_static_params_p", file: !3, line: 404, baseType: !2026)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fur_static_params", file: !3, line: 392, size: 192, elements: !2028)
!2028 = !{!2029, !2030, !2033}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "used_regs", scope: !2027, file: !3, line: 395, baseType: !1852, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "original_insns", scope: !2027, file: !3, line: 398, baseType: !2031, size: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_list_t", file: !398, line: 551, baseType: !1928)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "crosses_call", scope: !2027, file: !3, line: 401, baseType: !594, size: 8, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_heap", file: !155, line: 152, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_heap", file: !155, line: 152, size: 128, elements: !2037)
!2037 = !{!2038}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2036, file: !155, line: 152, baseType: !1151, size: 128)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_heap", file: !155, line: 283, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_heap", file: !155, line: 283, size: 128, elements: !2042)
!2042 = !{!2043}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2041, file: !155, line: 283, baseType: !1278, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_t_heap", file: !3, line: 507, baseType: !2046)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_t_heap", file: !3, line: 507, size: 128, elements: !2047)
!2047 = !{!2048}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2046, file: !3, line: 507, baseType: !2049, size: 128)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_t_base", file: !3, line: 506, baseType: !2050)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_t_base", file: !3, line: 506, size: 128, elements: !2051)
!2051 = !{!2052, !2053, !2054}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2050, file: !3, line: 506, baseType: !7, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2050, file: !3, line: 506, baseType: !7, size: 32, offset: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2050, file: !3, line: 506, baseType: !2055, size: 64, offset: 64)
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1834, size: 64, elements: !642)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1834)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !2059, line: 42, baseType: !677)
!2059 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2060 = !{!2061, !2064, !2066, !2110, !2112, !2114, !2116, !2118, !2121, !2123, !2125, !0, !2128, !2130, !2132, !2134, !2136, !2138, !2140, !2142, !2144, !2146, !2148, !2150, !2152, !2157, !2159, !2162, !2164, !2166, !2168, !2170, !2172, !2174, !2299, !2301, !2303, !2326, !2341, !2343, !2352}
!2061 = !DIGlobalVariableExpression(var: !2062, expr: !DIExpression())
!2062 = distinct !DIGlobalVariable(name: "forced_ebb_heads", scope: !2, file: !3, line: 484, type: !2063, isLocal: false, isDefinition: true)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "blocks_to_reschedule", scope: !2, file: !3, line: 487, type: !1853, isLocal: false, isDefinition: true)
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "move_op_hooks", scope: !2, file: !3, line: 6260, type: !2068, isLocal: false, isDefinition: true)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "code_motion_path_driver_info_def", file: !3, line: 410, size: 576, elements: !2069)
!2069 = !{!2070, !2084, !2088, !2092, !2096, !2100, !2104, !2108, !2109}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "on_enter", scope: !2068, file: !3, line: 413, baseType: !2071, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{!595, !1911, !2074, !599, !594}
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "cmpd_local_params_p", file: !3, line: 405, baseType: !2075)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cmpd_local_params", file: !3, line: 348, size: 384, elements: !2077)
!2077 = !{!2078, !2079, !2080, !2081, !2082, !2083}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "e1", scope: !2076, file: !3, line: 353, baseType: !1158, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "e2", scope: !2076, file: !3, line: 353, baseType: !1158, size: 64, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "c_expr_merged", scope: !2076, file: !3, line: 356, baseType: !1834, size: 64, offset: 128)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "c_expr_local", scope: !2076, file: !3, line: 356, baseType: !1834, size: 64, offset: 192)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "old_original_insns", scope: !2076, file: !3, line: 361, baseType: !2032, size: 64, offset: 256)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "removed_last_insn", scope: !2076, file: !3, line: 366, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "orig_expr_found", scope: !2068, file: !3, line: 416, baseType: !2085, size: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{null, !1911, !1834, !2074, !599}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "orig_expr_not_found", scope: !2068, file: !3, line: 420, baseType: !2089, size: 64, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{!594, !1911, !1945, !599}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "merge_succs", scope: !2068, file: !3, line: 423, baseType: !2093, size: 64, offset: 192)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{null, !1911, !1911, !595, !2074, !599}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "after_merge_succs", scope: !2068, file: !3, line: 427, baseType: !2097, size: 64, offset: 256)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{null, !2074, !599}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "ascend", scope: !2068, file: !3, line: 431, baseType: !2101, size: 64, offset: 320)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{null, !1911, !599}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "at_first_insn", scope: !2068, file: !3, line: 435, baseType: !2105, size: 64, offset: 384)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{null, !1911, !2074, !599}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "succ_flags", scope: !2068, file: !3, line: 439, baseType: !595, size: 32, offset: 448)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "routine_name", scope: !2068, file: !3, line: 442, baseType: !600, size: 64, offset: 512)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "fur_hooks", scope: !2, file: !3, line: 6274, type: !2068, isLocal: false, isDefinition: true)
!2112 = !DIGlobalVariableExpression(var: !2113, expr: !DIExpression())
!2113 = distinct !DIGlobalVariable(name: "pipelining_p", scope: !2, file: !3, line: 255, type: !594, isLocal: false, isDefinition: true)
!2114 = !DIGlobalVariableExpression(var: !2115, expr: !DIExpression())
!2115 = distinct !DIGlobalVariable(name: "bookkeeping_p", scope: !2, file: !3, line: 258, type: !594, isLocal: false, isDefinition: true)
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(name: "max_insns_to_rename", scope: !2, file: !3, line: 261, type: !595, isLocal: false, isDefinition: true)
!2118 = !DIGlobalVariableExpression(var: !2119, expr: !DIExpression())
!2119 = distinct !DIGlobalVariable(name: "code_motion_path_driver_info", scope: !2, file: !3, line: 447, type: !2120, isLocal: false, isDefinition: true)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(name: "sched_emulate_haifa_p", scope: !2, file: !3, line: 456, type: !595, isLocal: false, isDefinition: true)
!2123 = !DIGlobalVariableExpression(var: !2124, expr: !DIExpression())
!2124 = distinct !DIGlobalVariable(name: "global_level", scope: !2, file: !3, line: 462, type: !595, isLocal: false, isDefinition: true)
!2125 = !DIGlobalVariableExpression(var: !2126, expr: !DIExpression())
!2126 = distinct !DIGlobalVariable(name: "fences", scope: !2, file: !3, line: 465, type: !2127, isLocal: false, isDefinition: true)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "flist_t", file: !398, line: 338, baseType: !1928)
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "ignore_first", scope: !2, file: !3, line: 490, type: !594, isLocal: true, isDefinition: true)
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "current_originators", scope: !2, file: !3, line: 534, type: !1853, isLocal: true, isDefinition: true)
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "current_copies", scope: !2, file: !3, line: 535, type: !1853, isLocal: true, isDefinition: true)
!2134 = !DIGlobalVariableExpression(var: !2135, expr: !DIExpression())
!2135 = distinct !DIGlobalVariable(name: "first_emitted_uid", scope: !2, file: !3, line: 479, type: !595, isLocal: true, isDefinition: true)
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "num_insns_scheduled", scope: !2, file: !3, line: 503, type: !595, isLocal: true, isDefinition: true)
!2138 = !DIGlobalVariableExpression(var: !2139, expr: !DIExpression())
!2139 = distinct !DIGlobalVariable(name: "max_uid_before_move_op", scope: !2, file: !3, line: 4984, type: !595, isLocal: true, isDefinition: true)
!2140 = !DIGlobalVariableExpression(var: !2141, expr: !DIExpression())
!2141 = distinct !DIGlobalVariable(name: "stat_bookkeeping_copies", scope: !2, file: !3, line: 544, type: !595, isLocal: true, isDefinition: true)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(name: "vec_temp_moveop_nops", scope: !2, file: !3, line: 530, type: !1899, isLocal: true, isDefinition: true)
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "enable_schedule_as_rhs_p", scope: !2, file: !3, line: 468, type: !594, isLocal: true, isDefinition: true)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "was_target_conflict", scope: !2, file: !3, line: 2069, type: !594, isLocal: true, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "code_motion_visited_blocks", scope: !2, file: !3, line: 539, type: !1853, isLocal: true, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "reg_rename_this_tick", scope: !2, file: !3, line: 1349, type: !595, isLocal: true, isDefinition: true)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "reg_rename_tick", scope: !2, file: !3, line: 1346, type: !2154, isLocal: true, isDefinition: true)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 1696, elements: !2155)
!2155 = !{!2156}
!2156 = !DISubrange(count: 53)
!2157 = !DIGlobalVariableExpression(var: !2158, expr: !DIExpression())
!2158 = distinct !DIGlobalVariable(name: "max_ws", scope: !2, file: !3, line: 500, type: !595, isLocal: true, isDefinition: true)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "vec_bookkeeping_blocked_vinsns", scope: !2, file: !3, line: 519, type: !2161, isLocal: true, isDefinition: true)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "vinsn_vec_t", file: !3, line: 513, baseType: !2013)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "cur_seqno", scope: !2, file: !3, line: 6677, type: !595, isLocal: true, isDefinition: true)
!2164 = !DIGlobalVariableExpression(var: !2165, expr: !DIExpression())
!2165 = distinct !DIGlobalVariable(name: "stat_insns_needed_bookkeeping", scope: !2, file: !3, line: 547, type: !595, isLocal: true, isDefinition: true)
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "stat_renamed_scheduled", scope: !2, file: !3, line: 550, type: !595, isLocal: true, isDefinition: true)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "stat_substitutions_total", scope: !2, file: !3, line: 553, type: !595, isLocal: true, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "scheduled_something_on_previous_fence", scope: !2, file: !3, line: 476, type: !594, isLocal: true, isDefinition: true)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "can_issue_more", scope: !2, file: !3, line: 496, type: !595, isLocal: true, isDefinition: true)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "av_max_prio", scope: !2176, file: !3, line: 3695, type: !595, isLocal: true, isDefinition: true)
!2176 = distinct !DISubprogram(name: "fill_vec_av_set", scope: !3, file: !3, line: 3689, type: !2177, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2182)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!594, !1945, !2179, !2180, !1998}
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_t", file: !398, line: 252, baseType: !1928)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "fence_t", file: !398, line: 317, baseType: !2181)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!2182 = !{!2183, !2184, !2185, !2186, !2187, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2206, !2207, !2208, !2209, !2210, !2211, !2218, !2219, !2227, !2228, !2231, !2238, !2239, !2246, !2247, !2254, !2255, !2264, !2265, !2270, !2275, !2276, !2281, !2282, !2288, !2289, !2293, !2294, !2298}
!2183 = !DILocalVariable(name: "av", arg: 1, scope: !2176, file: !3, line: 3689, type: !1945)
!2184 = !DILocalVariable(name: "bnds", arg: 2, scope: !2176, file: !3, line: 3689, type: !2179)
!2185 = !DILocalVariable(name: "fence", arg: 3, scope: !2176, file: !3, line: 3689, type: !2180)
!2186 = !DILocalVariable(name: "pneed_stall", arg: 4, scope: !2176, file: !3, line: 3690, type: !1998)
!2187 = !DILocalVariable(name: "si", scope: !2176, file: !3, line: 3692, type: !2188)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_set_iterator", file: !398, line: 533, baseType: !2189)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_list_iterator", file: !398, line: 426, baseType: !2190)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 416, size: 128, elements: !2191)
!2191 = !{!2192, !2194, !2195}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "lp", scope: !2190, file: !398, line: 419, baseType: !2193, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "can_remove_p", scope: !2190, file: !398, line: 422, baseType: !594, size: 8, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "removed_p", scope: !2190, file: !398, line: 425, baseType: !594, size: 8, offset: 72)
!2196 = !DILocalVariable(name: "expr", scope: !2176, file: !3, line: 3693, type: !1834)
!2197 = !DILocalVariable(name: "sched_next_worked", scope: !2176, file: !3, line: 3694, type: !595)
!2198 = !DILocalVariable(name: "stalled", scope: !2176, file: !3, line: 3694, type: !595)
!2199 = !DILocalVariable(name: "n", scope: !2176, file: !3, line: 3694, type: !595)
!2200 = !DILocalVariable(name: "min_need_stall", scope: !2176, file: !3, line: 3696, type: !595)
!2201 = !DILocalVariable(name: "dc", scope: !2176, file: !3, line: 3697, type: !1948)
!2202 = !DILocalVariable(name: "expr", scope: !2203, file: !3, line: 3740, type: !1834)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !3, line: 3739, column: 5)
!2204 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 3738, column: 3)
!2205 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 3738, column: 3)
!2206 = !DILocalVariable(name: "insn", scope: !2203, file: !3, line: 3741, type: !1911)
!2207 = !DILocalVariable(name: "target_available", scope: !2203, file: !3, line: 3742, type: !598)
!2208 = !DILocalVariable(name: "is_orig_reg_p", scope: !2203, file: !3, line: 3743, type: !594)
!2209 = !DILocalVariable(name: "need_cycles", scope: !2203, file: !3, line: 3744, type: !595)
!2210 = !DILocalVariable(name: "new_prio", scope: !2203, file: !3, line: 3744, type: !595)
!2211 = !DILocalVariable(name: "__j", scope: !2212, file: !3, line: 3775, type: !595)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !3, line: 3775, column: 13)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !3, line: 3775, column: 13)
!2214 = distinct !DILexicalBlock(scope: !2215, file: !3, line: 3775, column: 13)
!2215 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 3774, column: 15)
!2216 = distinct !DILexicalBlock(scope: !2217, file: !3, line: 3772, column: 2)
!2217 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3771, column: 11)
!2218 = !DILocalVariable(name: "__s", scope: !2212, file: !3, line: 3775, type: !597)
!2219 = !DILocalVariable(name: "__j", scope: !2220, file: !3, line: 3797, type: !595)
!2220 = distinct !DILexicalBlock(scope: !2221, file: !3, line: 3797, column: 13)
!2221 = distinct !DILexicalBlock(scope: !2222, file: !3, line: 3797, column: 13)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !3, line: 3797, column: 13)
!2223 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 3796, column: 15)
!2224 = distinct !DILexicalBlock(scope: !2225, file: !3, line: 3794, column: 9)
!2225 = distinct !DILexicalBlock(scope: !2226, file: !3, line: 3787, column: 16)
!2226 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3780, column: 11)
!2227 = !DILocalVariable(name: "__s", scope: !2220, file: !3, line: 3797, type: !597)
!2228 = !DILocalVariable(name: "need_n_ticks_till_branch", scope: !2229, file: !3, line: 3811, type: !595)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !3, line: 3808, column: 2)
!2230 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3806, column: 11)
!2231 = !DILocalVariable(name: "__j", scope: !2232, file: !3, line: 3817, type: !595)
!2232 = distinct !DILexicalBlock(scope: !2233, file: !3, line: 3817, column: 3)
!2233 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 3817, column: 3)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !3, line: 3817, column: 3)
!2235 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 3816, column: 12)
!2236 = distinct !DILexicalBlock(scope: !2237, file: !3, line: 3814, column: 6)
!2237 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 3813, column: 8)
!2238 = !DILocalVariable(name: "__s", scope: !2232, file: !3, line: 3817, type: !597)
!2239 = !DILocalVariable(name: "__j", scope: !2240, file: !3, line: 3828, type: !595)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !3, line: 3828, column: 4)
!2241 = distinct !DILexicalBlock(scope: !2242, file: !3, line: 3828, column: 4)
!2242 = distinct !DILexicalBlock(scope: !2243, file: !3, line: 3828, column: 4)
!2243 = distinct !DILexicalBlock(scope: !2244, file: !3, line: 3827, column: 13)
!2244 = distinct !DILexicalBlock(scope: !2245, file: !3, line: 3825, column: 7)
!2245 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 3822, column: 8)
!2246 = !DILocalVariable(name: "__s", scope: !2240, file: !3, line: 3828, type: !597)
!2247 = !DILocalVariable(name: "__j", scope: !2248, file: !3, line: 3843, type: !595)
!2248 = distinct !DILexicalBlock(scope: !2249, file: !3, line: 3843, column: 6)
!2249 = distinct !DILexicalBlock(scope: !2250, file: !3, line: 3843, column: 6)
!2250 = distinct !DILexicalBlock(scope: !2251, file: !3, line: 3843, column: 6)
!2251 = distinct !DILexicalBlock(scope: !2252, file: !3, line: 3842, column: 8)
!2252 = distinct !DILexicalBlock(scope: !2253, file: !3, line: 3838, column: 2)
!2253 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3836, column: 11)
!2254 = !DILocalVariable(name: "__s", scope: !2248, file: !3, line: 3843, type: !597)
!2255 = !DILocalVariable(name: "__j", scope: !2256, file: !3, line: 3871, type: !595)
!2256 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 3871, column: 3)
!2257 = distinct !DILexicalBlock(scope: !2258, file: !3, line: 3871, column: 3)
!2258 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 3871, column: 3)
!2259 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 3870, column: 12)
!2260 = distinct !DILexicalBlock(scope: !2261, file: !3, line: 3863, column: 6)
!2261 = distinct !DILexicalBlock(scope: !2262, file: !3, line: 3862, column: 8)
!2262 = distinct !DILexicalBlock(scope: !2263, file: !3, line: 3855, column: 2)
!2263 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3854, column: 11)
!2264 = !DILocalVariable(name: "__s", scope: !2256, file: !3, line: 3871, type: !597)
!2265 = !DILocalVariable(name: "new_size", scope: !2266, file: !3, line: 3891, type: !595)
!2266 = distinct !DILexicalBlock(scope: !2267, file: !3, line: 3890, column: 13)
!2267 = distinct !DILexicalBlock(scope: !2268, file: !3, line: 3889, column: 15)
!2268 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 3888, column: 9)
!2269 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3887, column: 11)
!2270 = !DILocalVariable(name: "__j", scope: !2271, file: !3, line: 3909, type: !595)
!2271 = distinct !DILexicalBlock(scope: !2272, file: !3, line: 3909, column: 13)
!2272 = distinct !DILexicalBlock(scope: !2273, file: !3, line: 3909, column: 13)
!2273 = distinct !DILexicalBlock(scope: !2274, file: !3, line: 3909, column: 13)
!2274 = distinct !DILexicalBlock(scope: !2268, file: !3, line: 3908, column: 15)
!2275 = !DILocalVariable(name: "__s", scope: !2271, file: !3, line: 3909, type: !597)
!2276 = !DILocalVariable(name: "__j", scope: !2277, file: !3, line: 3916, type: !595)
!2277 = distinct !DILexicalBlock(scope: !2278, file: !3, line: 3916, column: 9)
!2278 = distinct !DILexicalBlock(scope: !2279, file: !3, line: 3916, column: 9)
!2279 = distinct !DILexicalBlock(scope: !2280, file: !3, line: 3916, column: 9)
!2280 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3915, column: 11)
!2281 = !DILocalVariable(name: "__s", scope: !2277, file: !3, line: 3916, type: !597)
!2282 = !DILocalVariable(name: "__j", scope: !2283, file: !3, line: 3952, type: !595)
!2283 = distinct !DILexicalBlock(scope: !2284, file: !3, line: 3952, column: 7)
!2284 = distinct !DILexicalBlock(scope: !2285, file: !3, line: 3952, column: 7)
!2285 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 3952, column: 7)
!2286 = distinct !DILexicalBlock(scope: !2287, file: !3, line: 3951, column: 5)
!2287 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 3950, column: 7)
!2288 = !DILocalVariable(name: "__s", scope: !2283, file: !3, line: 3952, type: !597)
!2289 = !DILocalVariable(name: "__j", scope: !2290, file: !3, line: 3954, type: !595)
!2290 = distinct !DILexicalBlock(scope: !2291, file: !3, line: 3954, column: 7)
!2291 = distinct !DILexicalBlock(scope: !2292, file: !3, line: 3954, column: 7)
!2292 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 3954, column: 7)
!2293 = !DILocalVariable(name: "__s", scope: !2290, file: !3, line: 3954, type: !597)
!2294 = !DILocalVariable(name: "__j", scope: !2295, file: !3, line: 3957, type: !595)
!2295 = distinct !DILexicalBlock(scope: !2296, file: !3, line: 3957, column: 7)
!2296 = distinct !DILexicalBlock(scope: !2297, file: !3, line: 3957, column: 7)
!2297 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 3957, column: 7)
!2298 = !DILocalVariable(name: "__s", scope: !2295, file: !3, line: 3957, type: !597)
!2299 = !DIGlobalVariableExpression(var: !2300, expr: !DIExpression())
!2300 = distinct !DIGlobalVariable(name: "est_ticks_till_branch", scope: !2176, file: !3, line: 3695, type: !595, isLocal: true, isDefinition: true)
!2301 = !DIGlobalVariableExpression(var: !2302, expr: !DIExpression())
!2302 = distinct !DIGlobalVariable(name: "vec_av_set", scope: !2, file: !3, line: 508, type: !2044, isLocal: true, isDefinition: true)
!2303 = !DIGlobalVariableExpression(var: !2304, expr: !DIExpression())
!2304 = distinct !DIGlobalVariable(name: "reg_rename_data", scope: !2305, file: !3, line: 1690, type: !2321, isLocal: true, isDefinition: true)
!2305 = distinct !DISubprogram(name: "find_best_reg_for_expr", scope: !3, file: !3, line: 1688, type: !2306, scopeLine: 1689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2308)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{!594, !1834, !2179, !593}
!2308 = !{!2309, !2310, !2311, !2312, !2313, !2314, !2315, !2318}
!2309 = !DILocalVariable(name: "expr", arg: 1, scope: !2305, file: !3, line: 1688, type: !1834)
!2310 = !DILocalVariable(name: "bnds", arg: 2, scope: !2305, file: !3, line: 1688, type: !2179)
!2311 = !DILocalVariable(name: "is_orig_reg_p", arg: 3, scope: !2305, file: !3, line: 1688, type: !593)
!2312 = !DILocalVariable(name: "used_regs", scope: !2305, file: !3, line: 1692, type: !1852)
!2313 = !DILocalVariable(name: "original_insns", scope: !2305, file: !3, line: 1693, type: !2032)
!2314 = !DILocalVariable(name: "reg_ok", scope: !2305, file: !3, line: 1694, type: !594)
!2315 = !DILocalVariable(name: "best_reg", scope: !2316, file: !3, line: 1723, type: !607)
!2316 = distinct !DILexicalBlock(scope: !2317, file: !3, line: 1722, column: 5)
!2317 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 1721, column: 7)
!2318 = !DILocalVariable(name: "hard_regs_used", scope: !2319, file: !3, line: 1731, type: !2058)
!2319 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 1730, column: 2)
!2320 = distinct !DILexicalBlock(scope: !2316, file: !3, line: 1729, column: 11)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_rename", file: !3, line: 325, size: 192, elements: !2322)
!2322 = !{!2323, !2324, !2325}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "unavailable_hard_regs", scope: !2321, file: !3, line: 328, baseType: !2058, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "available_for_renaming", scope: !2321, file: !3, line: 331, baseType: !2058, size: 64, offset: 64)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "crosses_call", scope: !2321, file: !3, line: 334, baseType: !594, size: 8, offset: 128)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "sel_hrd", scope: !2, file: !3, line: 339, type: !2328, isLocal: true, isDefinition: true)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hard_regs_data", file: !3, line: 296, size: 15360, elements: !2329)
!2329 = !{!2330, !2334, !2336, !2338, !2339, !2340}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "regs_for_mode", scope: !2328, file: !3, line: 300, baseType: !2331, size: 5568)
!2331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2058, size: 5568, elements: !2332)
!2332 = !{!2333}
!2333 = !DISubrange(count: 87)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "regs_for_mode_ok", scope: !2328, file: !3, line: 303, baseType: !2335, size: 696, offset: 5568)
!2335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !594, size: 696, elements: !2332)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "regs_for_rename", scope: !2328, file: !3, line: 308, baseType: !2337, size: 3392, offset: 6272)
!2337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2058, size: 3392, elements: !2155)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "regs_for_call_clobbered", scope: !2328, file: !3, line: 312, baseType: !2331, size: 5568, offset: 9664)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "regs_ever_used", scope: !2328, file: !3, line: 315, baseType: !2058, size: 64, offset: 15232)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "stack_regs", scope: !2328, file: !3, line: 319, baseType: !2058, size: 64, offset: 15296)
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "max_issue_size", scope: !2, file: !3, line: 493, type: !595, isLocal: true, isDefinition: true)
!2343 = !DIGlobalVariableExpression(var: !2344, expr: !DIExpression())
!2344 = distinct !DIGlobalVariable(name: "temp", scope: !2345, file: !3, line: 4282, type: !1988, isLocal: true, isDefinition: true)
!2345 = distinct !DISubprogram(name: "estimate_insn_cost", scope: !3, file: !3, line: 4280, type: !2346, scopeLine: 4281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2348)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!595, !607, !1988}
!2348 = !{!2349, !2350, !2351}
!2349 = !DILocalVariable(name: "insn", arg: 1, scope: !2345, file: !3, line: 4280, type: !607)
!2350 = !DILocalVariable(name: "state", arg: 2, scope: !2345, file: !3, line: 4280, type: !1988)
!2351 = !DILocalVariable(name: "cost", scope: !2345, file: !3, line: 4283, type: !595)
!2352 = !DIGlobalVariableExpression(var: !2353, expr: !DIExpression())
!2353 = distinct !DIGlobalVariable(name: "vec_target_unavailable_vinsns", scope: !2, file: !3, line: 524, type: !2161, isLocal: true, isDefinition: true)
!2354 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2355 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2356 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2357 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2358 = !{i32 2, !"Dwarf Version", i32 4}
!2359 = !{i32 2, !"Debug Info Version", i32 3}
!2360 = !{i32 1, !"wchar_size", i32 4}
!2361 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2362 = distinct !DISubprogram(name: "vprintf", scope: !2363, file: !2363, line: 39, type: !2364, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2374)
!2363 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2364 = !DISubroutineType(types: !2365)
!2365 = !{!595, !2366, !2367}
!2366 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !600)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2369)
!2369 = !{!2370, !2371, !2372, !2373}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2368, file: !3, baseType: !7, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2368, file: !3, baseType: !7, size: 32, offset: 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2368, file: !3, baseType: !599, size: 64, offset: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2368, file: !3, baseType: !599, size: 64, offset: 128)
!2374 = !{!2375, !2376}
!2375 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2362, file: !2363, line: 39, type: !2366)
!2376 = !DILocalVariable(name: "__arg", arg: 2, scope: !2362, file: !2363, line: 39, type: !2367)
!2377 = !DILocation(line: 0, scope: !2362)
!2378 = !DILocation(line: 41, column: 20, scope: !2362)
!2379 = !DILocation(line: 41, column: 10, scope: !2362)
!2380 = !DILocation(line: 41, column: 3, scope: !2362)
!2381 = distinct !DISubprogram(name: "getchar", scope: !2363, file: !2363, line: 47, type: !2382, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2384)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!595}
!2384 = !{}
!2385 = !DILocation(line: 49, column: 16, scope: !2381)
!2386 = !DILocation(line: 49, column: 10, scope: !2381)
!2387 = !DILocation(line: 49, column: 3, scope: !2381)
!2388 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2363, file: !2363, line: 56, type: !2389, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2442)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{!595, !2391}
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2393, line: 7, baseType: !2394)
!2393 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2395, line: 49, size: 1728, elements: !2396)
!2395 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2396 = !{!2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2412, !2414, !2415, !2416, !2419, !2421, !2422, !2423, !2426, !2428, !2431, !2434, !2435, !2436, !2437, !2438}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2394, file: !2395, line: 51, baseType: !595, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2394, file: !2395, line: 54, baseType: !597, size: 64, offset: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2394, file: !2395, line: 55, baseType: !597, size: 64, offset: 128)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2394, file: !2395, line: 56, baseType: !597, size: 64, offset: 192)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2394, file: !2395, line: 57, baseType: !597, size: 64, offset: 256)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2394, file: !2395, line: 58, baseType: !597, size: 64, offset: 320)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2394, file: !2395, line: 59, baseType: !597, size: 64, offset: 384)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2394, file: !2395, line: 60, baseType: !597, size: 64, offset: 448)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2394, file: !2395, line: 61, baseType: !597, size: 64, offset: 512)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2394, file: !2395, line: 64, baseType: !597, size: 64, offset: 576)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2394, file: !2395, line: 65, baseType: !597, size: 64, offset: 640)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2394, file: !2395, line: 66, baseType: !597, size: 64, offset: 704)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2394, file: !2395, line: 68, baseType: !2410, size: 64, offset: 768)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2395, line: 36, flags: DIFlagFwdDecl)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2394, file: !2395, line: 70, baseType: !2413, size: 64, offset: 832)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2394, file: !2395, line: 72, baseType: !595, size: 32, offset: 896)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2394, file: !2395, line: 73, baseType: !595, size: 32, offset: 928)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2394, file: !2395, line: 74, baseType: !2417, size: 64, offset: 960)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2418, line: 152, baseType: !694)
!2418 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2394, file: !2395, line: 77, baseType: !2420, size: 16, offset: 1024)
!2420 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2394, file: !2395, line: 78, baseType: !1573, size: 8, offset: 1040)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2394, file: !2395, line: 79, baseType: !818, size: 8, offset: 1048)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2394, file: !2395, line: 81, baseType: !2424, size: 64, offset: 1088)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2395, line: 43, baseType: null)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2394, file: !2395, line: 89, baseType: !2427, size: 64, offset: 1152)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2418, line: 153, baseType: !694)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2394, file: !2395, line: 91, baseType: !2429, size: 64, offset: 1216)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2395, line: 37, flags: DIFlagFwdDecl)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2394, file: !2395, line: 92, baseType: !2432, size: 64, offset: 1280)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2395, line: 38, flags: DIFlagFwdDecl)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2394, file: !2395, line: 93, baseType: !2413, size: 64, offset: 1344)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2394, file: !2395, line: 94, baseType: !599, size: 64, offset: 1408)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2394, file: !2395, line: 95, baseType: !1079, size: 64, offset: 1472)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2394, file: !2395, line: 96, baseType: !595, size: 32, offset: 1536)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2394, file: !2395, line: 98, baseType: !2439, size: 160, offset: 1568)
!2439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !598, size: 160, elements: !2440)
!2440 = !{!2441}
!2441 = !DISubrange(count: 20)
!2442 = !{!2443}
!2443 = !DILocalVariable(name: "__fp", arg: 1, scope: !2388, file: !2363, line: 56, type: !2391)
!2444 = !DILocation(line: 0, scope: !2388)
!2445 = !DILocation(line: 58, column: 10, scope: !2388)
!2446 = !DILocation(line: 58, column: 3, scope: !2388)
!2447 = distinct !DISubprogram(name: "getc_unlocked", scope: !2363, file: !2363, line: 66, type: !2389, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2448)
!2448 = !{!2449}
!2449 = !DILocalVariable(name: "__fp", arg: 1, scope: !2447, file: !2363, line: 66, type: !2391)
!2450 = !DILocation(line: 0, scope: !2447)
!2451 = !DILocation(line: 68, column: 10, scope: !2447)
!2452 = !DILocation(line: 68, column: 3, scope: !2447)
!2453 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2363, file: !2363, line: 73, type: !2382, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2384)
!2454 = !DILocation(line: 75, column: 10, scope: !2453)
!2455 = !DILocation(line: 75, column: 3, scope: !2453)
!2456 = distinct !DISubprogram(name: "putchar", scope: !2363, file: !2363, line: 82, type: !2457, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2459)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{!595, !595}
!2459 = !{!2460}
!2460 = !DILocalVariable(name: "__c", arg: 1, scope: !2456, file: !2363, line: 82, type: !595)
!2461 = !DILocation(line: 0, scope: !2456)
!2462 = !DILocation(line: 84, column: 21, scope: !2456)
!2463 = !DILocation(line: 84, column: 10, scope: !2456)
!2464 = !DILocation(line: 84, column: 3, scope: !2456)
!2465 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2363, file: !2363, line: 91, type: !2466, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2468)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{!595, !595, !2391}
!2468 = !{!2469, !2470}
!2469 = !DILocalVariable(name: "__c", arg: 1, scope: !2465, file: !2363, line: 91, type: !595)
!2470 = !DILocalVariable(name: "__stream", arg: 2, scope: !2465, file: !2363, line: 91, type: !2391)
!2471 = !DILocation(line: 0, scope: !2465)
!2472 = !DILocation(line: 93, column: 10, scope: !2465)
!2473 = !DILocation(line: 93, column: 3, scope: !2465)
!2474 = distinct !DISubprogram(name: "putc_unlocked", scope: !2363, file: !2363, line: 101, type: !2466, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2475)
!2475 = !{!2476, !2477}
!2476 = !DILocalVariable(name: "__c", arg: 1, scope: !2474, file: !2363, line: 101, type: !595)
!2477 = !DILocalVariable(name: "__stream", arg: 2, scope: !2474, file: !2363, line: 101, type: !2391)
!2478 = !DILocation(line: 0, scope: !2474)
!2479 = !DILocation(line: 103, column: 10, scope: !2474)
!2480 = !DILocation(line: 103, column: 3, scope: !2474)
!2481 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2363, file: !2363, line: 108, type: !2457, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2482)
!2482 = !{!2483}
!2483 = !DILocalVariable(name: "__c", arg: 1, scope: !2481, file: !2363, line: 108, type: !595)
!2484 = !DILocation(line: 0, scope: !2481)
!2485 = !DILocation(line: 110, column: 10, scope: !2481)
!2486 = !DILocation(line: 110, column: 3, scope: !2481)
!2487 = distinct !DISubprogram(name: "getline", scope: !2363, file: !2363, line: 118, type: !2488, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2492)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{!2490, !596, !2491, !2391}
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2418, line: 193, baseType: !694)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!2492 = !{!2493, !2494, !2495}
!2493 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2487, file: !2363, line: 118, type: !596)
!2494 = !DILocalVariable(name: "__n", arg: 2, scope: !2487, file: !2363, line: 118, type: !2491)
!2495 = !DILocalVariable(name: "__stream", arg: 3, scope: !2487, file: !2363, line: 118, type: !2391)
!2496 = !DILocation(line: 0, scope: !2487)
!2497 = !DILocation(line: 120, column: 10, scope: !2487)
!2498 = !DILocation(line: 120, column: 3, scope: !2487)
!2499 = distinct !DISubprogram(name: "feof_unlocked", scope: !2363, file: !2363, line: 128, type: !2389, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2500)
!2500 = !{!2501}
!2501 = !DILocalVariable(name: "__stream", arg: 1, scope: !2499, file: !2363, line: 128, type: !2391)
!2502 = !DILocation(line: 0, scope: !2499)
!2503 = !DILocation(line: 130, column: 10, scope: !2499)
!2504 = !DILocation(line: 130, column: 3, scope: !2499)
!2505 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2363, file: !2363, line: 135, type: !2389, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2506)
!2506 = !{!2507}
!2507 = !DILocalVariable(name: "__stream", arg: 1, scope: !2505, file: !2363, line: 135, type: !2391)
!2508 = !DILocation(line: 0, scope: !2505)
!2509 = !DILocation(line: 137, column: 10, scope: !2505)
!2510 = !DILocation(line: 137, column: 3, scope: !2505)
!2511 = distinct !DISubprogram(name: "tolower", scope: !2512, file: !2512, line: 207, type: !2457, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2513)
!2512 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2513 = !{!2514}
!2514 = !DILocalVariable(name: "__c", arg: 1, scope: !2511, file: !2512, line: 207, type: !595)
!2515 = !DILocation(line: 0, scope: !2511)
!2516 = !DILocation(line: 209, column: 22, scope: !2511)
!2517 = !DILocation(line: 209, column: 39, scope: !2511)
!2518 = !DILocation(line: 209, column: 38, scope: !2511)
!2519 = !DILocation(line: 209, column: 37, scope: !2511)
!2520 = !DILocation(line: 209, column: 10, scope: !2511)
!2521 = !DILocation(line: 209, column: 3, scope: !2511)
!2522 = distinct !DISubprogram(name: "toupper", scope: !2512, file: !2512, line: 213, type: !2457, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2523)
!2523 = !{!2524}
!2524 = !DILocalVariable(name: "__c", arg: 1, scope: !2522, file: !2512, line: 213, type: !595)
!2525 = !DILocation(line: 0, scope: !2522)
!2526 = !DILocation(line: 215, column: 22, scope: !2522)
!2527 = !DILocation(line: 215, column: 39, scope: !2522)
!2528 = !DILocation(line: 215, column: 38, scope: !2522)
!2529 = !DILocation(line: 215, column: 37, scope: !2522)
!2530 = !DILocation(line: 215, column: 10, scope: !2522)
!2531 = !DILocation(line: 215, column: 3, scope: !2522)
!2532 = distinct !DISubprogram(name: "atoi", scope: !2533, file: !2533, line: 361, type: !2534, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2536)
!2533 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2534 = !DISubroutineType(types: !2535)
!2535 = !{!595, !600}
!2536 = !{!2537}
!2537 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2532, file: !2533, line: 361, type: !600)
!2538 = !DILocation(line: 0, scope: !2532)
!2539 = !DILocation(line: 363, column: 16, scope: !2532)
!2540 = !DILocation(line: 363, column: 10, scope: !2532)
!2541 = !DILocation(line: 363, column: 3, scope: !2532)
!2542 = distinct !DISubprogram(name: "atol", scope: !2533, file: !2533, line: 366, type: !2543, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2545)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!694, !600}
!2545 = !{!2546}
!2546 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2542, file: !2533, line: 366, type: !600)
!2547 = !DILocation(line: 0, scope: !2542)
!2548 = !DILocation(line: 368, column: 10, scope: !2542)
!2549 = !DILocation(line: 368, column: 3, scope: !2542)
!2550 = distinct !DISubprogram(name: "atoll", scope: !2533, file: !2533, line: 373, type: !2551, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2554)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{!2553, !600}
!2553 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2554 = !{!2555}
!2555 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2550, file: !2533, line: 373, type: !600)
!2556 = !DILocation(line: 0, scope: !2550)
!2557 = !DILocation(line: 375, column: 10, scope: !2550)
!2558 = !DILocation(line: 375, column: 3, scope: !2550)
!2559 = distinct !DISubprogram(name: "bsearch", scope: !2560, file: !2560, line: 20, type: !2561, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!2560 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!599, !1064, !1064, !1079, !1079, !2563}
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2533, line: 808, baseType: !1068)
!2564 = !{!2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574}
!2565 = !DILocalVariable(name: "__key", arg: 1, scope: !2559, file: !2560, line: 20, type: !1064)
!2566 = !DILocalVariable(name: "__base", arg: 2, scope: !2559, file: !2560, line: 20, type: !1064)
!2567 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2559, file: !2560, line: 20, type: !1079)
!2568 = !DILocalVariable(name: "__size", arg: 4, scope: !2559, file: !2560, line: 20, type: !1079)
!2569 = !DILocalVariable(name: "__compar", arg: 5, scope: !2559, file: !2560, line: 21, type: !2563)
!2570 = !DILocalVariable(name: "__l", scope: !2559, file: !2560, line: 23, type: !1079)
!2571 = !DILocalVariable(name: "__u", scope: !2559, file: !2560, line: 23, type: !1079)
!2572 = !DILocalVariable(name: "__idx", scope: !2559, file: !2560, line: 23, type: !1079)
!2573 = !DILocalVariable(name: "__p", scope: !2559, file: !2560, line: 24, type: !1064)
!2574 = !DILocalVariable(name: "__comparison", scope: !2559, file: !2560, line: 25, type: !595)
!2575 = !DILocation(line: 0, scope: !2559)
!2576 = !DILocation(line: 29, column: 3, scope: !2559)
!2577 = !DILocation(line: 27, column: 7, scope: !2559)
!2578 = !DILocation(line: 29, column: 14, scope: !2559)
!2579 = !DILocation(line: 31, column: 20, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2559, file: !2560, line: 30, column: 5)
!2581 = !DILocation(line: 31, column: 27, scope: !2580)
!2582 = !DILocation(line: 32, column: 56, scope: !2580)
!2583 = !DILocation(line: 32, column: 47, scope: !2580)
!2584 = !DILocation(line: 33, column: 22, scope: !2580)
!2585 = !DILocation(line: 34, column: 24, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2580, file: !2560, line: 34, column: 11)
!2587 = !DILocation(line: 34, column: 11, scope: !2580)
!2588 = !DILocation(line: 36, column: 29, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2586, file: !2560, line: 36, column: 16)
!2590 = !DILocation(line: 36, column: 16, scope: !2586)
!2591 = !DILocation(line: 37, column: 14, scope: !2589)
!2592 = distinct !{!2592, !2576, !2593}
!2593 = !DILocation(line: 40, column: 5, scope: !2559)
!2594 = !DILocation(line: 43, column: 1, scope: !2559)
!2595 = distinct !DISubprogram(name: "atof", scope: !2596, file: !2596, line: 25, type: !2597, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2600)
!2596 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2597 = !DISubroutineType(types: !2598)
!2598 = !{!2599, !600}
!2599 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2600 = !{!2601}
!2601 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2595, file: !2596, line: 25, type: !600)
!2602 = !DILocation(line: 0, scope: !2595)
!2603 = !DILocation(line: 27, column: 10, scope: !2595)
!2604 = !DILocation(line: 27, column: 3, scope: !2595)
!2605 = distinct !DISubprogram(name: "strtoimax", scope: !2606, file: !2606, line: 324, type: !2607, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2613)
!2606 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2607 = !DISubroutineType(types: !2608)
!2608 = !{!2609, !2366, !2612, !595}
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2610, line: 101, baseType: !2611)
!2610 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2418, line: 72, baseType: !694)
!2612 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !596)
!2613 = !{!2614, !2615, !2616}
!2614 = !DILocalVariable(name: "nptr", arg: 1, scope: !2605, file: !2606, line: 324, type: !2366)
!2615 = !DILocalVariable(name: "endptr", arg: 2, scope: !2605, file: !2606, line: 324, type: !2612)
!2616 = !DILocalVariable(name: "base", arg: 3, scope: !2605, file: !2606, line: 324, type: !595)
!2617 = !DILocation(line: 0, scope: !2605)
!2618 = !DILocation(line: 327, column: 10, scope: !2605)
!2619 = !DILocation(line: 327, column: 3, scope: !2605)
!2620 = distinct !DISubprogram(name: "strtoumax", scope: !2606, file: !2606, line: 336, type: !2621, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2625)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{!2623, !2366, !2612, !595}
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2610, line: 102, baseType: !2624)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2418, line: 73, baseType: !677)
!2625 = !{!2626, !2627, !2628}
!2626 = !DILocalVariable(name: "nptr", arg: 1, scope: !2620, file: !2606, line: 336, type: !2366)
!2627 = !DILocalVariable(name: "endptr", arg: 2, scope: !2620, file: !2606, line: 336, type: !2612)
!2628 = !DILocalVariable(name: "base", arg: 3, scope: !2620, file: !2606, line: 336, type: !595)
!2629 = !DILocation(line: 0, scope: !2620)
!2630 = !DILocation(line: 339, column: 10, scope: !2620)
!2631 = !DILocation(line: 339, column: 3, scope: !2620)
!2632 = distinct !DISubprogram(name: "wcstoimax", scope: !2606, file: !2606, line: 348, type: !2633, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2642)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{!2609, !2635, !2639, !595}
!2635 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2636)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2638)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2606, line: 34, baseType: !595)
!2639 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2640)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!2642 = !{!2643, !2644, !2645}
!2643 = !DILocalVariable(name: "nptr", arg: 1, scope: !2632, file: !2606, line: 348, type: !2635)
!2644 = !DILocalVariable(name: "endptr", arg: 2, scope: !2632, file: !2606, line: 348, type: !2639)
!2645 = !DILocalVariable(name: "base", arg: 3, scope: !2632, file: !2606, line: 348, type: !595)
!2646 = !DILocation(line: 0, scope: !2632)
!2647 = !DILocation(line: 351, column: 10, scope: !2632)
!2648 = !DILocation(line: 351, column: 3, scope: !2632)
!2649 = distinct !DISubprogram(name: "wcstoumax", scope: !2606, file: !2606, line: 362, type: !2650, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2652)
!2650 = !DISubroutineType(types: !2651)
!2651 = !{!2623, !2635, !2639, !595}
!2652 = !{!2653, !2654, !2655}
!2653 = !DILocalVariable(name: "nptr", arg: 1, scope: !2649, file: !2606, line: 362, type: !2635)
!2654 = !DILocalVariable(name: "endptr", arg: 2, scope: !2649, file: !2606, line: 362, type: !2639)
!2655 = !DILocalVariable(name: "base", arg: 3, scope: !2649, file: !2606, line: 362, type: !595)
!2656 = !DILocation(line: 0, scope: !2649)
!2657 = !DILocation(line: 365, column: 10, scope: !2649)
!2658 = !DILocation(line: 365, column: 3, scope: !2649)
!2659 = distinct !DISubprogram(name: "stat", scope: !2660, file: !2660, line: 453, type: !2661, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2698)
!2660 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2661 = !DISubroutineType(types: !2662)
!2662 = !{!595, !600, !2663}
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2665, line: 46, size: 1152, elements: !2666)
!2665 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2666 = !{!2667, !2669, !2671, !2673, !2675, !2677, !2679, !2680, !2681, !2682, !2684, !2686, !2694, !2695, !2696}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2664, file: !2665, line: 48, baseType: !2668, size: 64)
!2668 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2418, line: 145, baseType: !677)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2664, file: !2665, line: 53, baseType: !2670, size: 64, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2418, line: 148, baseType: !677)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2664, file: !2665, line: 61, baseType: !2672, size: 64, offset: 128)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2418, line: 151, baseType: !677)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2664, file: !2665, line: 62, baseType: !2674, size: 32, offset: 192)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2418, line: 150, baseType: !7)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2664, file: !2665, line: 64, baseType: !2676, size: 32, offset: 224)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2418, line: 146, baseType: !7)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2664, file: !2665, line: 65, baseType: !2678, size: 32, offset: 256)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2418, line: 147, baseType: !7)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2664, file: !2665, line: 67, baseType: !595, size: 32, offset: 288)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2664, file: !2665, line: 69, baseType: !2668, size: 64, offset: 320)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2664, file: !2665, line: 74, baseType: !2417, size: 64, offset: 384)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2664, file: !2665, line: 78, baseType: !2683, size: 64, offset: 448)
!2683 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2418, line: 174, baseType: !694)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2664, file: !2665, line: 80, baseType: !2685, size: 64, offset: 512)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2418, line: 179, baseType: !694)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2664, file: !2665, line: 91, baseType: !2687, size: 128, offset: 576)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2688, line: 10, size: 128, elements: !2689)
!2688 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2689 = !{!2690, !2692}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2687, file: !2688, line: 12, baseType: !2691, size: 64)
!2691 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2418, line: 160, baseType: !694)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2687, file: !2688, line: 16, baseType: !2693, size: 64, offset: 64)
!2693 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2418, line: 196, baseType: !694)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2664, file: !2665, line: 92, baseType: !2687, size: 128, offset: 704)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2664, file: !2665, line: 93, baseType: !2687, size: 128, offset: 832)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2664, file: !2665, line: 106, baseType: !2697, size: 192, offset: 960)
!2697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2693, size: 192, elements: !794)
!2698 = !{!2699, !2700}
!2699 = !DILocalVariable(name: "__path", arg: 1, scope: !2659, file: !2660, line: 453, type: !600)
!2700 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2659, file: !2660, line: 453, type: !2663)
!2701 = !DILocation(line: 0, scope: !2659)
!2702 = !DILocation(line: 455, column: 10, scope: !2659)
!2703 = !DILocation(line: 455, column: 3, scope: !2659)
!2704 = distinct !DISubprogram(name: "lstat", scope: !2660, file: !2660, line: 460, type: !2661, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2705)
!2705 = !{!2706, !2707}
!2706 = !DILocalVariable(name: "__path", arg: 1, scope: !2704, file: !2660, line: 460, type: !600)
!2707 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2704, file: !2660, line: 460, type: !2663)
!2708 = !DILocation(line: 0, scope: !2704)
!2709 = !DILocation(line: 462, column: 10, scope: !2704)
!2710 = !DILocation(line: 462, column: 3, scope: !2704)
!2711 = distinct !DISubprogram(name: "fstat", scope: !2660, file: !2660, line: 467, type: !2712, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2714)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!595, !595, !2663}
!2714 = !{!2715, !2716}
!2715 = !DILocalVariable(name: "__fd", arg: 1, scope: !2711, file: !2660, line: 467, type: !595)
!2716 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2711, file: !2660, line: 467, type: !2663)
!2717 = !DILocation(line: 0, scope: !2711)
!2718 = !DILocation(line: 469, column: 10, scope: !2711)
!2719 = !DILocation(line: 469, column: 3, scope: !2711)
!2720 = distinct !DISubprogram(name: "fstatat", scope: !2660, file: !2660, line: 474, type: !2721, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2723)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!595, !595, !600, !2663, !595}
!2723 = !{!2724, !2725, !2726, !2727}
!2724 = !DILocalVariable(name: "__fd", arg: 1, scope: !2720, file: !2660, line: 474, type: !595)
!2725 = !DILocalVariable(name: "__filename", arg: 2, scope: !2720, file: !2660, line: 474, type: !600)
!2726 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2720, file: !2660, line: 474, type: !2663)
!2727 = !DILocalVariable(name: "__flag", arg: 4, scope: !2720, file: !2660, line: 474, type: !595)
!2728 = !DILocation(line: 0, scope: !2720)
!2729 = !DILocation(line: 477, column: 10, scope: !2720)
!2730 = !DILocation(line: 477, column: 3, scope: !2720)
!2731 = distinct !DISubprogram(name: "mknod", scope: !2660, file: !2660, line: 483, type: !2732, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2734)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!595, !600, !2674, !2668}
!2734 = !{!2735, !2736, !2737}
!2735 = !DILocalVariable(name: "__path", arg: 1, scope: !2731, file: !2660, line: 483, type: !600)
!2736 = !DILocalVariable(name: "__mode", arg: 2, scope: !2731, file: !2660, line: 483, type: !2674)
!2737 = !DILocalVariable(name: "__dev", arg: 3, scope: !2731, file: !2660, line: 483, type: !2668)
!2738 = !DILocation(line: 0, scope: !2731)
!2739 = !DILocation(line: 485, column: 10, scope: !2731)
!2740 = !DILocation(line: 485, column: 3, scope: !2731)
!2741 = distinct !DISubprogram(name: "mknodat", scope: !2660, file: !2660, line: 491, type: !2742, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2744)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!595, !595, !600, !2674, !2668}
!2744 = !{!2745, !2746, !2747, !2748}
!2745 = !DILocalVariable(name: "__fd", arg: 1, scope: !2741, file: !2660, line: 491, type: !595)
!2746 = !DILocalVariable(name: "__path", arg: 2, scope: !2741, file: !2660, line: 491, type: !600)
!2747 = !DILocalVariable(name: "__mode", arg: 3, scope: !2741, file: !2660, line: 491, type: !2674)
!2748 = !DILocalVariable(name: "__dev", arg: 4, scope: !2741, file: !2660, line: 491, type: !2668)
!2749 = !DILocation(line: 0, scope: !2741)
!2750 = !DILocation(line: 494, column: 10, scope: !2741)
!2751 = !DILocation(line: 494, column: 3, scope: !2741)
!2752 = distinct !DISubprogram(name: "stat64", scope: !2660, file: !2660, line: 502, type: !2753, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2775)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!595, !600, !2755}
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2665, line: 119, size: 1152, elements: !2757)
!2757 = !{!2758, !2759, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2771, !2772, !2773, !2774}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2756, file: !2665, line: 121, baseType: !2668, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2756, file: !2665, line: 123, baseType: !2760, size: 64, offset: 64)
!2760 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2418, line: 149, baseType: !677)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2756, file: !2665, line: 124, baseType: !2672, size: 64, offset: 128)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2756, file: !2665, line: 125, baseType: !2674, size: 32, offset: 192)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2756, file: !2665, line: 132, baseType: !2676, size: 32, offset: 224)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2756, file: !2665, line: 133, baseType: !2678, size: 32, offset: 256)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2756, file: !2665, line: 135, baseType: !595, size: 32, offset: 288)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2756, file: !2665, line: 136, baseType: !2668, size: 64, offset: 320)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2756, file: !2665, line: 137, baseType: !2417, size: 64, offset: 384)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2756, file: !2665, line: 143, baseType: !2683, size: 64, offset: 448)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2756, file: !2665, line: 144, baseType: !2770, size: 64, offset: 512)
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2418, line: 180, baseType: !694)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2756, file: !2665, line: 152, baseType: !2687, size: 128, offset: 576)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2756, file: !2665, line: 153, baseType: !2687, size: 128, offset: 704)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2756, file: !2665, line: 154, baseType: !2687, size: 128, offset: 832)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2756, file: !2665, line: 164, baseType: !2697, size: 192, offset: 960)
!2775 = !{!2776, !2777}
!2776 = !DILocalVariable(name: "__path", arg: 1, scope: !2752, file: !2660, line: 502, type: !600)
!2777 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2752, file: !2660, line: 502, type: !2755)
!2778 = !DILocation(line: 0, scope: !2752)
!2779 = !DILocation(line: 504, column: 10, scope: !2752)
!2780 = !DILocation(line: 504, column: 3, scope: !2752)
!2781 = distinct !DISubprogram(name: "lstat64", scope: !2660, file: !2660, line: 509, type: !2753, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2782)
!2782 = !{!2783, !2784}
!2783 = !DILocalVariable(name: "__path", arg: 1, scope: !2781, file: !2660, line: 509, type: !600)
!2784 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2781, file: !2660, line: 509, type: !2755)
!2785 = !DILocation(line: 0, scope: !2781)
!2786 = !DILocation(line: 511, column: 10, scope: !2781)
!2787 = !DILocation(line: 511, column: 3, scope: !2781)
!2788 = distinct !DISubprogram(name: "fstat64", scope: !2660, file: !2660, line: 516, type: !2789, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2791)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!595, !595, !2755}
!2791 = !{!2792, !2793}
!2792 = !DILocalVariable(name: "__fd", arg: 1, scope: !2788, file: !2660, line: 516, type: !595)
!2793 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2788, file: !2660, line: 516, type: !2755)
!2794 = !DILocation(line: 0, scope: !2788)
!2795 = !DILocation(line: 518, column: 10, scope: !2788)
!2796 = !DILocation(line: 518, column: 3, scope: !2788)
!2797 = distinct !DISubprogram(name: "fstatat64", scope: !2660, file: !2660, line: 523, type: !2798, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2800)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!595, !595, !600, !2755, !595}
!2800 = !{!2801, !2802, !2803, !2804}
!2801 = !DILocalVariable(name: "__fd", arg: 1, scope: !2797, file: !2660, line: 523, type: !595)
!2802 = !DILocalVariable(name: "__filename", arg: 2, scope: !2797, file: !2660, line: 523, type: !600)
!2803 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2797, file: !2660, line: 523, type: !2755)
!2804 = !DILocalVariable(name: "__flag", arg: 4, scope: !2797, file: !2660, line: 523, type: !595)
!2805 = !DILocation(line: 0, scope: !2797)
!2806 = !DILocation(line: 526, column: 10, scope: !2797)
!2807 = !DILocation(line: 526, column: 3, scope: !2797)
!2808 = distinct !DISubprogram(name: "compute_live", scope: !3, file: !3, line: 3054, type: !2809, scopeLine: 3055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2811)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{!1852, !1911}
!2811 = !{!2812, !2813, !2814, !2815, !2816, !2817, !2820}
!2812 = !DILocalVariable(name: "insn", arg: 1, scope: !2808, file: !3, line: 3054, type: !1911)
!2813 = !DILocalVariable(name: "bb", scope: !2808, file: !3, line: 3056, type: !1141)
!2814 = !DILocalVariable(name: "final", scope: !2808, file: !3, line: 3057, type: !1911)
!2815 = !DILocalVariable(name: "temp", scope: !2808, file: !3, line: 3057, type: !1911)
!2816 = !DILocalVariable(name: "lv", scope: !2808, file: !3, line: 3058, type: !1852)
!2817 = !DILocalVariable(name: "src", scope: !2818, file: !3, line: 3063, type: !1852)
!2818 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 3062, column: 5)
!2819 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 3061, column: 7)
!2820 = !DILocalVariable(name: "bb", scope: !2821, file: !3, line: 3125, type: !1141)
!2821 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 3124, column: 5)
!2822 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 3123, column: 7)
!2823 = !DILocation(line: 0, scope: !2808)
!2824 = !DILocation(line: 3056, column: 20, scope: !2808)
!2825 = !DILocation(line: 3061, column: 8, scope: !2819)
!2826 = !DILocation(line: 3061, column: 7, scope: !2808)
!2827 = !DILocation(line: 0, scope: !2818)
!2828 = !DILocation(line: 3065, column: 11, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 3065, column: 11)
!2830 = !DILocation(line: 3065, column: 32, scope: !2829)
!2831 = !DILocation(line: 3065, column: 35, scope: !2829)
!2832 = !DILocation(line: 3065, column: 11, scope: !2818)
!2833 = !DILocation(line: 3066, column: 15, scope: !2829)
!2834 = !DILocation(line: 3066, column: 9, scope: !2829)
!2835 = !DILocation(line: 3069, column: 11, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 3068, column: 9)
!2837 = !DILocation(line: 3070, column: 15, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2836, file: !3, line: 3070, column: 15)
!2839 = !DILocation(line: 3070, column: 15, scope: !2836)
!2840 = !DILocation(line: 3071, column: 19, scope: !2838)
!2841 = !DILocation(line: 3071, column: 13, scope: !2838)
!2842 = !DILocation(line: 0, scope: !2829)
!2843 = !DILocation(line: 3074, column: 11, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 3074, column: 11)
!2845 = !DILocation(line: 3074, column: 11, scope: !2818)
!2846 = !DILocation(line: 3076, column: 9, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2844, file: !3, line: 3075, column: 2)
!2848 = !DILocation(line: 3077, column: 4, scope: !2847)
!2849 = !DILocation(line: 3079, column: 15, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 3079, column: 15)
!2851 = !DILocation(line: 3079, column: 36, scope: !2850)
!2852 = !DILocation(line: 3079, column: 41, scope: !2850)
!2853 = !DILocation(line: 3079, column: 15, scope: !2847)
!2854 = !DILocation(line: 3081, column: 15, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 3080, column: 13)
!2856 = !DILocation(line: 3082, column: 15, scope: !2855)
!2857 = !DILocation(line: 3082, column: 38, scope: !2855)
!2858 = !DILocation(line: 3083, column: 13, scope: !2855)
!2859 = !DILocation(line: 3085, column: 4, scope: !2847)
!2860 = !DILocation(line: 3086, column: 4, scope: !2847)
!2861 = !DILocation(line: 3091, column: 16, scope: !2808)
!2862 = !DILocation(line: 3092, column: 3, scope: !2808)
!2863 = !DILocation(line: 3098, column: 11, scope: !2808)
!2864 = !DILocation(line: 3099, column: 3, scope: !2808)
!2865 = !DILocation(line: 3099, column: 15, scope: !2808)
!2866 = !DILocation(line: 3099, column: 24, scope: !2808)
!2867 = !DILocation(line: 3099, column: 29, scope: !2808)
!2868 = !DILocation(line: 3099, column: 27, scope: !2808)
!2869 = distinct !{!2869, !2864, !2870}
!2870 = !DILocation(line: 3100, column: 12, scope: !2808)
!2871 = !DILocation(line: 3101, column: 7, scope: !2808)
!2872 = !DILocation(line: 3103, column: 12, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2874, file: !3, line: 3102, column: 5)
!2874 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 3101, column: 7)
!2875 = !DILocation(line: 3104, column: 14, scope: !2873)
!2876 = !DILocation(line: 3105, column: 5, scope: !2873)
!2877 = !DILocation(line: 3108, column: 12, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2874, file: !3, line: 3107, column: 5)
!2879 = !DILocation(line: 3109, column: 7, scope: !2878)
!2880 = !DILocation(line: 0, scope: !2874)
!2881 = !DILocation(line: 3113, column: 11, scope: !2808)
!2882 = !DILocation(line: 3114, column: 3, scope: !2808)
!2883 = !DILocation(line: 3114, column: 15, scope: !2808)
!2884 = !DILocation(line: 3116, column: 7, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 3115, column: 5)
!2886 = !DILocation(line: 3117, column: 7, scope: !2885)
!2887 = !DILocation(line: 3118, column: 7, scope: !2885)
!2888 = !DILocation(line: 3118, column: 32, scope: !2885)
!2889 = !DILocation(line: 3119, column: 14, scope: !2885)
!2890 = distinct !{!2890, !2882, !2891}
!2891 = !DILocation(line: 3120, column: 5, scope: !2808)
!2892 = !DILocation(line: 3123, column: 7, scope: !2822)
!2893 = !DILocation(line: 3123, column: 7, scope: !2808)
!2894 = !DILocation(line: 3125, column: 24, scope: !2821)
!2895 = !DILocation(line: 0, scope: !2821)
!2896 = !DILocation(line: 3127, column: 7, scope: !2821)
!2897 = !DILocation(line: 3128, column: 7, scope: !2821)
!2898 = !DILocation(line: 3128, column: 30, scope: !2821)
!2899 = !DILocation(line: 3129, column: 5, scope: !2821)
!2900 = !DILocation(line: 3133, column: 3, scope: !2808)
!2901 = !DILocation(line: 3134, column: 3, scope: !2808)
!2902 = !DILocation(line: 3135, column: 1, scope: !2808)
!2903 = distinct !DISubprogram(name: "VEC_sel_global_bb_info_def_base_index", scope: !398, file: !398, line: 888, type: !2904, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2920)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!2906, !2912, !7}
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DIDerivedType(tag: DW_TAG_typedef, name: "sel_global_bb_info_def", file: !398, line: 884, baseType: !2908)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 872, size: 128, elements: !2909)
!2909 = !{!2910, !2911}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "lv_set", scope: !2908, file: !398, line: 878, baseType: !1852, size: 64)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "lv_set_valid_p", scope: !2908, file: !398, line: 883, baseType: !594, size: 8, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_global_bb_info_def_base", file: !398, line: 888, baseType: !2914)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_global_bb_info_def_base", file: !398, line: 888, size: 192, elements: !2915)
!2915 = !{!2916, !2917, !2918}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2914, file: !398, line: 888, baseType: !7, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2914, file: !398, line: 888, baseType: !7, size: 32, offset: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2914, file: !398, line: 888, baseType: !2919, size: 128, offset: 64)
!2919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2907, size: 128, elements: !642)
!2920 = !{!2921, !2922}
!2921 = !DILocalVariable(name: "vec_", arg: 1, scope: !2903, file: !398, line: 888, type: !2912)
!2922 = !DILocalVariable(name: "ix_", arg: 2, scope: !2903, file: !398, line: 888, type: !7)
!2923 = !DILocation(line: 0, scope: !2903)
!2924 = !DILocation(line: 888, column: 1, scope: !2903)
!2925 = distinct !DISubprogram(name: "VEC_sel_insn_data_def_base_index", scope: !398, file: !398, line: 762, type: !2926, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2956)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{!2928, !2948, !7}
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!2929 = !DIDerivedType(tag: DW_TAG_typedef, name: "sel_insn_data_def", file: !398, line: 759, baseType: !2930)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sel_insn_data", file: !398, line: 698, size: 2560, elements: !2931)
!2931 = !{!2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2930, file: !398, line: 702, baseType: !1836, size: 512)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "ws_level", scope: !2930, file: !398, line: 705, baseType: !595, size: 32, offset: 512)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !2930, file: !398, line: 708, baseType: !595, size: 32, offset: 544)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2930, file: !398, line: 711, baseType: !1852, size: 64, offset: 576)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed_deps", scope: !2930, file: !398, line: 714, baseType: !1853, size: 64, offset: 640)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "found_deps", scope: !2930, file: !398, line: 719, baseType: !1853, size: 64, offset: 704)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "originators", scope: !2930, file: !398, line: 724, baseType: !1853, size: 64, offset: 768)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "transformed_insns", scope: !2930, file: !398, line: 727, baseType: !1053, size: 64, offset: 832)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "deps_context", scope: !2930, file: !398, line: 730, baseType: !1950, size: 1472, offset: 896)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "sched_next", scope: !2930, file: !398, line: 736, baseType: !1911, size: 64, offset: 2368)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "sched_cycle", scope: !2930, file: !398, line: 740, baseType: !595, size: 32, offset: 2432)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ready_cycle", scope: !2930, file: !398, line: 743, baseType: !595, size: 32, offset: 2464)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "spec_checked_ds", scope: !2930, file: !398, line: 746, baseType: !1868, size: 32, offset: 2496)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "live_valid_p", scope: !2930, file: !398, line: 749, baseType: !7, size: 1, offset: 2528, flags: DIFlagBitField, extraData: i64 2528)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "asm_p", scope: !2930, file: !398, line: 751, baseType: !7, size: 1, offset: 2529, flags: DIFlagBitField, extraData: i64 2528)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "after_stall_p", scope: !2930, file: !398, line: 756, baseType: !7, size: 1, offset: 2530, flags: DIFlagBitField, extraData: i64 2528)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_insn_data_def_base", file: !398, line: 762, baseType: !2950)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_insn_data_def_base", file: !398, line: 762, size: 2624, elements: !2951)
!2951 = !{!2952, !2953, !2954}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2950, file: !398, line: 762, baseType: !7, size: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2950, file: !398, line: 762, baseType: !7, size: 32, offset: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2950, file: !398, line: 762, baseType: !2955, size: 2560, offset: 64)
!2955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2929, size: 2560, elements: !642)
!2956 = !{!2957, !2958}
!2957 = !DILocalVariable(name: "vec_", arg: 1, scope: !2925, file: !398, line: 762, type: !2948)
!2958 = !DILocalVariable(name: "ix_", arg: 2, scope: !2925, file: !398, line: 762, type: !7)
!2959 = !DILocation(line: 0, scope: !2925)
!2960 = !DILocation(line: 762, column: 1, scope: !2925)
!2961 = distinct !DISubprogram(name: "VEC_int_base_index", scope: !1124, file: !1124, line: 31, type: !2962, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2973)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!595, !2964, !7}
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2966)
!2966 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1124, line: 31, baseType: !2967)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1124, line: 31, size: 96, elements: !2968)
!2968 = !{!2969, !2970, !2971}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2967, file: !1124, line: 31, baseType: !7, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2967, file: !1124, line: 31, baseType: !7, size: 32, offset: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2967, file: !1124, line: 31, baseType: !2972, size: 32, offset: 64)
!2972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 32, elements: !642)
!2973 = !{!2974, !2975}
!2974 = !DILocalVariable(name: "vec_", arg: 1, scope: !2961, file: !1124, line: 31, type: !2964)
!2975 = !DILocalVariable(name: "ix_", arg: 2, scope: !2961, file: !1124, line: 31, type: !7)
!2976 = !DILocation(line: 0, scope: !2961)
!2977 = !DILocation(line: 31, column: 1, scope: !2961)
!2978 = distinct !DISubprogram(name: "compute_live_after_bb", scope: !3, file: !3, line: 3025, type: !2979, scopeLine: 3026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2981)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!1852, !1141}
!2981 = !{!2982, !2983, !2984, !2991}
!2982 = !DILocalVariable(name: "bb", arg: 1, scope: !2978, file: !3, line: 3025, type: !1141)
!2983 = !DILocalVariable(name: "e", scope: !2978, file: !3, line: 3027, type: !1158)
!2984 = !DILocalVariable(name: "ei", scope: !2978, file: !3, line: 3028, type: !2985)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !155, line: 682, baseType: !2986)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !155, line: 679, size: 128, elements: !2987)
!2987 = !{!2988, !2989}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2986, file: !155, line: 680, baseType: !7, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2986, file: !155, line: 681, baseType: !2990, size: 64, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!2991 = !DILocalVariable(name: "lv", scope: !2978, file: !3, line: 3029, type: !1852)
!2992 = !DILocation(line: 0, scope: !2978)
!2993 = !DILocation(line: 3027, column: 3, scope: !2978)
!2994 = !DILocation(line: 3028, column: 3, scope: !2978)
!2995 = !DILocation(line: 3029, column: 15, scope: !2978)
!2996 = !DILocation(line: 3031, column: 3, scope: !2978)
!2997 = !DILocation(line: 3033, column: 3, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 3033, column: 3)
!2999 = !DILocation(line: 0, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 3033, column: 3)
!3001 = !DILocation(line: 3033, column: 3, scope: !3000)
!3002 = !DILocation(line: 3034, column: 25, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 3034, column: 9)
!3004 = !DILocation(line: 3034, column: 28, scope: !3003)
!3005 = !DILocation(line: 3034, column: 9, scope: !3003)
!3006 = !DILocation(line: 3034, column: 9, scope: !3000)
!3007 = !DILocation(line: 3036, column: 15, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 3036, column: 13)
!3009 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 3035, column: 7)
!3010 = !DILocation(line: 3036, column: 13, scope: !3009)
!3011 = !DILocation(line: 3038, column: 13, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 3037, column: 11)
!3013 = !DILocation(line: 3039, column: 13, scope: !3012)
!3014 = !DILocation(line: 3040, column: 58, scope: !3012)
!3015 = !DILocation(line: 3040, column: 61, scope: !3012)
!3016 = !DILocation(line: 3040, column: 35, scope: !3012)
!3017 = !DILocation(line: 3040, column: 13, scope: !3012)
!3018 = !DILocation(line: 3040, column: 33, scope: !3012)
!3019 = !DILocation(line: 3041, column: 13, scope: !3012)
!3020 = !DILocation(line: 3041, column: 41, scope: !3012)
!3021 = !DILocation(line: 3042, column: 11, scope: !3012)
!3022 = !DILocation(line: 3043, column: 9, scope: !3009)
!3023 = !DILocation(line: 3044, column: 7, scope: !3009)
!3024 = !DILocation(line: 3046, column: 7, scope: !3003)
!3025 = distinct !{!3025, !2997, !3026}
!3026 = !DILocation(line: 3046, column: 7, scope: !2998)
!3027 = !DILocation(line: 3049, column: 1, scope: !2978)
!3028 = !DILocation(line: 3048, column: 3, scope: !2978)
!3029 = distinct !DISubprogram(name: "propagate_lv_set", scope: !3, file: !3, line: 3013, type: !3030, scopeLine: 3014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3032)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{null, !1852, !1911}
!3032 = !{!3033, !3034}
!3033 = !DILocalVariable(name: "lv", arg: 1, scope: !3029, file: !3, line: 3013, type: !1852)
!3034 = !DILocalVariable(name: "insn", arg: 2, scope: !3029, file: !3, line: 3013, type: !1911)
!3035 = !DILocation(line: 0, scope: !3029)
!3036 = !DILocation(line: 3015, column: 3, scope: !3029)
!3037 = !DILocation(line: 3017, column: 7, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 3017, column: 7)
!3039 = !DILocation(line: 3017, column: 7, scope: !3029)
!3040 = !DILocation(line: 3020, column: 35, scope: !3029)
!3041 = !DILocation(line: 3020, column: 3, scope: !3029)
!3042 = !DILocation(line: 3021, column: 1, scope: !3029)
!3043 = distinct !DISubprogram(name: "sel_add_to_insn_priority", scope: !3, file: !3, line: 3673, type: !3044, scopeLine: 3674, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3046)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{null, !607, !595}
!3046 = !{!3047, !3048, !3049, !3054}
!3047 = !DILocalVariable(name: "insn", arg: 1, scope: !3043, file: !3, line: 3673, type: !607)
!3048 = !DILocalVariable(name: "amount", arg: 2, scope: !3043, file: !3, line: 3673, type: !595)
!3049 = !DILocalVariable(name: "__j", scope: !3050, file: !3, line: 3678, type: !595)
!3050 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 3678, column: 5)
!3051 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 3678, column: 5)
!3052 = distinct !DILexicalBlock(scope: !3053, file: !3, line: 3678, column: 5)
!3053 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 3677, column: 7)
!3054 = !DILocalVariable(name: "__s", scope: !3050, file: !3, line: 3678, type: !597)
!3055 = !DILocation(line: 0, scope: !3043)
!3056 = !DILocation(line: 3675, column: 3, scope: !3043)
!3057 = !DILocation(line: 3675, column: 40, scope: !3043)
!3058 = !DILocation(line: 3677, column: 7, scope: !3053)
!3059 = !DILocation(line: 3677, column: 21, scope: !3053)
!3060 = !DILocation(line: 3677, column: 7, scope: !3043)
!3061 = !DILocation(line: 3678, column: 5, scope: !3051)
!3062 = !DILocation(line: 3678, column: 5, scope: !3052)
!3063 = !DILocation(line: 3678, column: 5, scope: !3050)
!3064 = !DILocation(line: 0, scope: !3050)
!3065 = !DILocation(line: 3681, column: 1, scope: !3043)
!3066 = distinct !DISubprogram(name: "move_op_on_enter", scope: !3, file: !3, line: 6177, type: !2072, scopeLine: 6180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3067)
!3067 = !{!3068, !3069, !3070, !3071}
!3068 = !DILocalVariable(name: "insn", arg: 1, scope: !3066, file: !3, line: 6177, type: !1911)
!3069 = !DILocalVariable(name: "local_params", arg: 2, scope: !3066, file: !3, line: 6178, type: !2074)
!3070 = !DILocalVariable(name: "static_params", arg: 3, scope: !3066, file: !3, line: 6179, type: !599)
!3071 = !DILocalVariable(name: "visited_p", arg: 4, scope: !3066, file: !3, line: 6179, type: !594)
!3072 = !DILocation(line: 0, scope: !3066)
!3073 = !DILocation(line: 6181, column: 7, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 6181, column: 7)
!3075 = !DILocation(line: 6184, column: 1, scope: !3066)
!3076 = distinct !DISubprogram(name: "move_op_orig_expr_found", scope: !3, file: !3, line: 5973, type: !2086, scopeLine: 5976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3077)
!3077 = !{!3078, !3079, !3080, !3081, !3082, !3083, !3084}
!3078 = !DILocalVariable(name: "insn", arg: 1, scope: !3076, file: !3, line: 5973, type: !1911)
!3079 = !DILocalVariable(name: "expr", arg: 2, scope: !3076, file: !3, line: 5973, type: !1834)
!3080 = !DILocalVariable(name: "lparams", arg: 3, scope: !3076, file: !3, line: 5974, type: !2074)
!3081 = !DILocalVariable(name: "static_params", arg: 4, scope: !3076, file: !3, line: 5975, type: !599)
!3082 = !DILocalVariable(name: "only_disconnect", scope: !3076, file: !3, line: 5977, type: !594)
!3083 = !DILocalVariable(name: "insn_emitted", scope: !3076, file: !3, line: 5977, type: !594)
!3084 = !DILocalVariable(name: "params", scope: !3076, file: !3, line: 5978, type: !602)
!3085 = !DILocation(line: 0, scope: !3076)
!3086 = !DILocation(line: 5978, column: 35, scope: !3076)
!3087 = !DILocation(line: 5980, column: 29, scope: !3076)
!3088 = !DILocation(line: 5980, column: 37, scope: !3076)
!3089 = !DILocation(line: 5980, column: 3, scope: !3076)
!3090 = !DILocation(line: 5981, column: 3, scope: !3076)
!3091 = !DILocation(line: 5982, column: 18, scope: !3076)
!3092 = !DILocation(line: 5983, column: 30, scope: !3076)
!3093 = !DILocation(line: 5983, column: 37, scope: !3076)
!3094 = !DILocation(line: 5983, column: 34, scope: !3076)
!3095 = !DILocation(line: 5984, column: 27, scope: !3076)
!3096 = !DILocation(line: 5984, column: 22, scope: !3076)
!3097 = !DILocation(line: 5984, column: 46, scope: !3076)
!3098 = !DILocation(line: 5987, column: 7, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 5987, column: 7)
!3100 = !DILocation(line: 5987, column: 7, scope: !3076)
!3101 = !DILocation(line: 5988, column: 17, scope: !3099)
!3102 = !DILocation(line: 5988, column: 5, scope: !3099)
!3103 = !DILocation(line: 5989, column: 3, scope: !3076)
!3104 = !DILocation(line: 5990, column: 1, scope: !3076)
!3105 = distinct !DISubprogram(name: "move_op_orig_expr_not_found", scope: !3, file: !3, line: 6193, type: !2090, scopeLine: 6195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3106)
!3106 = !{!3107, !3108, !3109, !3110}
!3107 = !DILocalVariable(name: "insn", arg: 1, scope: !3105, file: !3, line: 6193, type: !1911)
!3108 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !3105, file: !3, line: 6193, type: !1945)
!3109 = !DILocalVariable(name: "static_params", arg: 3, scope: !3105, file: !3, line: 6194, type: !599)
!3110 = !DILocalVariable(name: "sparams", scope: !3105, file: !3, line: 6196, type: !602)
!3111 = !DILocation(line: 0, scope: !3105)
!3112 = !DILocation(line: 6205, column: 52, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 6205, column: 7)
!3114 = !DILocation(line: 6205, column: 7, scope: !3113)
!3115 = !DILocation(line: 6208, column: 1, scope: !3105)
!3116 = distinct !DISubprogram(name: "move_op_merge_succs", scope: !3, file: !3, line: 5704, type: !2094, scopeLine: 5708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3117)
!3117 = !{!3118, !3119, !3120, !3121, !3122, !3123, !3124}
!3118 = !DILocalVariable(name: "insn", arg: 1, scope: !3116, file: !3, line: 5704, type: !1911)
!3119 = !DILocalVariable(name: "succ", arg: 2, scope: !3116, file: !3, line: 5705, type: !1911)
!3120 = !DILocalVariable(name: "moveop_drv_call_res", arg: 3, scope: !3116, file: !3, line: 5706, type: !595)
!3121 = !DILocalVariable(name: "lparams", arg: 4, scope: !3116, file: !3, line: 5707, type: !2074)
!3122 = !DILocalVariable(name: "static_params", arg: 5, scope: !3116, file: !3, line: 5707, type: !599)
!3123 = !DILocalVariable(name: "sparams", scope: !3116, file: !3, line: 5709, type: !602)
!3124 = !DILocalVariable(name: "old_times", scope: !3125, file: !3, line: 5741, type: !595)
!3125 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 5722, column: 5)
!3126 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 5716, column: 7)
!3127 = !DILocation(line: 0, scope: !3116)
!3128 = !DILocation(line: 5712, column: 27, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 5712, column: 7)
!3130 = !DILocation(line: 5712, column: 7, scope: !3116)
!3131 = !DILocation(line: 5716, column: 17, scope: !3126)
!3132 = !DILocation(line: 5716, column: 8, scope: !3126)
!3133 = !DILocation(line: 5716, column: 7, scope: !3116)
!3134 = !DILocation(line: 5718, column: 41, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 5717, column: 5)
!3136 = !DILocation(line: 5718, column: 30, scope: !3135)
!3137 = !DILocation(line: 5719, column: 34, scope: !3135)
!3138 = !DILocation(line: 5719, column: 23, scope: !3135)
!3139 = !DILocation(line: 5720, column: 5, scope: !3135)
!3140 = !DILocation(line: 5741, column: 23, scope: !3125)
!3141 = !DILocation(line: 0, scope: !3125)
!3142 = !DILocation(line: 5743, column: 57, scope: !3125)
!3143 = !DILocation(line: 5743, column: 7, scope: !3125)
!3144 = !DILocation(line: 5744, column: 11, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3125, file: !3, line: 5744, column: 11)
!3146 = !DILocation(line: 5744, column: 46, scope: !3145)
!3147 = !DILocation(line: 5744, column: 11, scope: !3125)
!3148 = !DILocation(line: 5745, column: 2, scope: !3145)
!3149 = !DILocation(line: 5745, column: 44, scope: !3145)
!3150 = !DILocation(line: 5747, column: 28, scope: !3125)
!3151 = !DILocation(line: 5747, column: 7, scope: !3125)
!3152 = !DILocation(line: 5749, column: 1, scope: !3116)
!3153 = distinct !DISubprogram(name: "move_op_after_merge_succs", scope: !3, file: !3, line: 5785, type: !2098, scopeLine: 5786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3154)
!3154 = !{!3155, !3156, !3157}
!3155 = !DILocalVariable(name: "lp", arg: 1, scope: !3153, file: !3, line: 5785, type: !2074)
!3156 = !DILocalVariable(name: "sparams", arg: 2, scope: !3153, file: !3, line: 5785, type: !599)
!3157 = !DILocalVariable(name: "sp", scope: !3153, file: !3, line: 5787, type: !602)
!3158 = !DILocation(line: 0, scope: !3153)
!3159 = !DILocation(line: 5789, column: 20, scope: !3153)
!3160 = !DILocation(line: 5789, column: 7, scope: !3153)
!3161 = !DILocation(line: 5789, column: 14, scope: !3153)
!3162 = !DILocation(line: 5790, column: 1, scope: !3153)
!3163 = distinct !DISubprogram(name: "move_op_ascend", scope: !3, file: !3, line: 6134, type: !2102, scopeLine: 6135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3164)
!3164 = !{!3165, !3166, !3167, !3168}
!3165 = !DILocalVariable(name: "insn", arg: 1, scope: !3163, file: !3, line: 6134, type: !1911)
!3166 = !DILocalVariable(name: "static_params", arg: 2, scope: !3163, file: !3, line: 6134, type: !599)
!3167 = !DILocalVariable(name: "res", scope: !3163, file: !3, line: 6136, type: !556)
!3168 = !DILocalVariable(name: "sparams", scope: !3163, file: !3, line: 6137, type: !602)
!3169 = !DILocation(line: 0, scope: !3163)
!3170 = !DILocation(line: 6139, column: 9, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 6139, column: 7)
!3172 = !DILocation(line: 6139, column: 7, scope: !3163)
!3173 = !DILocation(line: 6141, column: 42, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 6140, column: 5)
!3175 = !DILocation(line: 6141, column: 13, scope: !3174)
!3176 = !DILocation(line: 6142, column: 7, scope: !3174)
!3177 = !DILocation(line: 6146, column: 3, scope: !3163)
!3178 = !DILocation(line: 6147, column: 1, scope: !3163)
!3179 = distinct !DISubprogram(name: "move_op_at_first_insn", scope: !3, file: !3, line: 6040, type: !2106, scopeLine: 6042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3180)
!3180 = !{!3181, !3182, !3183, !3184, !3185}
!3181 = !DILocalVariable(name: "insn", arg: 1, scope: !3179, file: !3, line: 6040, type: !1911)
!3182 = !DILocalVariable(name: "lparams", arg: 2, scope: !3179, file: !3, line: 6040, type: !2074)
!3183 = !DILocalVariable(name: "static_params", arg: 3, scope: !3179, file: !3, line: 6041, type: !599)
!3184 = !DILocalVariable(name: "sparams", scope: !3179, file: !3, line: 6043, type: !602)
!3185 = !DILocalVariable(name: "book_block", scope: !3179, file: !3, line: 6044, type: !1141)
!3186 = !DILocation(line: 0, scope: !3179)
!3187 = !DILocation(line: 6048, column: 17, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 6048, column: 7)
!3189 = !DILocation(line: 6048, column: 8, scope: !3188)
!3190 = !DILocation(line: 6049, column: 7, scope: !3188)
!3191 = !DILocation(line: 6049, column: 19, scope: !3188)
!3192 = !DILocation(line: 6049, column: 10, scope: !3188)
!3193 = !DILocation(line: 6050, column: 7, scope: !3188)
!3194 = !DILocation(line: 6050, column: 10, scope: !3188)
!3195 = !DILocation(line: 6048, column: 7, scope: !3179)
!3196 = !DILocation(line: 6054, column: 11, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 6054, column: 11)
!3198 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 6051, column: 5)
!3199 = !DILocation(line: 6054, column: 11, scope: !3198)
!3200 = !DILocation(line: 6055, column: 58, scope: !3197)
!3201 = !DILocation(line: 6056, column: 58, scope: !3197)
!3202 = !DILocation(line: 6056, column: 71, scope: !3197)
!3203 = !DILocation(line: 6055, column: 22, scope: !3197)
!3204 = !DILocation(line: 6055, column: 9, scope: !3197)
!3205 = !DILocation(line: 6058, column: 7, scope: !3198)
!3206 = !DILocation(line: 6059, column: 5, scope: !3198)
!3207 = !DILocation(line: 6107, column: 7, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 6107, column: 7)
!3209 = !DILocation(line: 6107, column: 7, scope: !3179)
!3210 = !DILocation(line: 6108, column: 5, scope: !3208)
!3211 = !DILocation(line: 6111, column: 16, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 6111, column: 7)
!3213 = !DILocation(line: 6111, column: 7, scope: !3212)
!3214 = !DILocation(line: 6111, column: 7, scope: !3179)
!3215 = !DILocation(line: 6112, column: 12, scope: !3212)
!3216 = !DILocation(line: 6112, column: 5, scope: !3212)
!3217 = !DILocation(line: 6116, column: 16, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 6116, column: 7)
!3219 = !DILocation(line: 6116, column: 7, scope: !3218)
!3220 = !DILocation(line: 6116, column: 7, scope: !3179)
!3221 = !DILocation(line: 6117, column: 24, scope: !3218)
!3222 = !DILocation(line: 6117, column: 5, scope: !3218)
!3223 = !DILocation(line: 6118, column: 1, scope: !3179)
!3224 = distinct !DISubprogram(name: "fur_on_enter", scope: !3, file: !3, line: 6153, type: !2072, scopeLine: 6155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3225)
!3225 = !{!3226, !3227, !3228, !3229, !3230}
!3226 = !DILocalVariable(name: "insn", arg: 1, scope: !3224, file: !3, line: 6153, type: !1911)
!3227 = !DILocalVariable(name: "local_params", arg: 2, scope: !3224, file: !3, line: 6153, type: !2074)
!3228 = !DILocalVariable(name: "static_params", arg: 3, scope: !3224, file: !3, line: 6154, type: !599)
!3229 = !DILocalVariable(name: "visited_p", arg: 4, scope: !3224, file: !3, line: 6154, type: !594)
!3230 = !DILocalVariable(name: "sparams", scope: !3224, file: !3, line: 6156, type: !2025)
!3231 = !DILocation(line: 0, scope: !3224)
!3232 = !DILocation(line: 6158, column: 7, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 6158, column: 7)
!3234 = !DILocation(line: 0, scope: !3233)
!3235 = !DILocation(line: 6158, column: 7, scope: !3224)
!3236 = !DILocation(line: 6162, column: 7, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3233, file: !3, line: 6159, column: 5)
!3238 = !DILocation(line: 6166, column: 7, scope: !3237)
!3239 = !DILocation(line: 6167, column: 16, scope: !3237)
!3240 = !DILocation(line: 6166, column: 48, scope: !3237)
!3241 = !DILocation(line: 6167, column: 4, scope: !3237)
!3242 = !DILocation(line: 6168, column: 5, scope: !3237)
!3243 = !DILocation(line: 6170, column: 19, scope: !3233)
!3244 = !DILocation(line: 6170, column: 38, scope: !3233)
!3245 = !DILocation(line: 6172, column: 3, scope: !3224)
!3246 = distinct !DISubprogram(name: "fur_orig_expr_found", scope: !3, file: !3, line: 5996, type: !2086, scopeLine: 5999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3247)
!3247 = !{!3248, !3249, !3250, !3251, !3252, !3253}
!3248 = !DILocalVariable(name: "insn", arg: 1, scope: !3246, file: !3, line: 5996, type: !1911)
!3249 = !DILocalVariable(name: "expr", arg: 2, scope: !3246, file: !3, line: 5996, type: !1834)
!3250 = !DILocalVariable(name: "lparams", arg: 3, scope: !3246, file: !3, line: 5997, type: !2074)
!3251 = !DILocalVariable(name: "static_params", arg: 4, scope: !3246, file: !3, line: 5998, type: !599)
!3252 = !DILocalVariable(name: "params", scope: !3246, file: !3, line: 6000, type: !2025)
!3253 = !DILocalVariable(name: "tmp", scope: !3246, file: !3, line: 6001, type: !1852)
!3254 = !DILocation(line: 0, scope: !3246)
!3255 = !DILocation(line: 6003, column: 7, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 6003, column: 7)
!3257 = !DILocation(line: 6003, column: 7, scope: !3246)
!3258 = !DILocation(line: 6006, column: 55, scope: !3246)
!3259 = !DILocation(line: 6004, column: 13, scope: !3256)
!3260 = !DILocation(line: 6004, column: 26, scope: !3256)
!3261 = !DILocation(line: 6004, column: 5, scope: !3256)
!3262 = !DILocation(line: 6006, column: 25, scope: !3246)
!3263 = !DILocation(line: 6006, column: 3, scope: !3246)
!3264 = !DILocation(line: 6013, column: 9, scope: !3246)
!3265 = !DILocation(line: 6014, column: 3, scope: !3246)
!3266 = !DILocation(line: 6015, column: 3, scope: !3246)
!3267 = !DILocation(line: 6016, column: 3, scope: !3246)
!3268 = !DILocation(line: 6017, column: 3, scope: !3246)
!3269 = !DILocation(line: 6018, column: 3, scope: !3246)
!3270 = !DILocation(line: 6033, column: 3, scope: !3246)
!3271 = !DILocation(line: 6035, column: 1, scope: !3246)
!3272 = distinct !DISubprogram(name: "fur_orig_expr_not_found", scope: !3, file: !3, line: 6215, type: !2090, scopeLine: 6216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3273)
!3273 = !{!3274, !3275, !3276, !3277, !3278, !3279, !3280}
!3274 = !DILocalVariable(name: "insn", arg: 1, scope: !3272, file: !3, line: 6215, type: !1911)
!3275 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !3272, file: !3, line: 6215, type: !1945)
!3276 = !DILocalVariable(name: "static_params", arg: 3, scope: !3272, file: !3, line: 6215, type: !599)
!3277 = !DILocalVariable(name: "mutexed", scope: !3272, file: !3, line: 6217, type: !594)
!3278 = !DILocalVariable(name: "r", scope: !3272, file: !3, line: 6218, type: !1834)
!3279 = !DILocalVariable(name: "avi", scope: !3272, file: !3, line: 6219, type: !2188)
!3280 = !DILocalVariable(name: "sparams", scope: !3272, file: !3, line: 6220, type: !2025)
!3281 = !DILocation(line: 0, scope: !3272)
!3282 = !DILocation(line: 6218, column: 3, scope: !3272)
!3283 = !DILocation(line: 6219, column: 3, scope: !3272)
!3284 = !DILocation(line: 6222, column: 7, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 6222, column: 7)
!3286 = !DILocation(line: 6222, column: 7, scope: !3272)
!3287 = !DILocation(line: 6223, column: 14, scope: !3285)
!3288 = !DILocation(line: 6223, column: 27, scope: !3285)
!3289 = !DILocation(line: 6223, column: 5, scope: !3285)
!3290 = !DILocation(line: 6224, column: 12, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 6224, column: 12)
!3292 = !DILocation(line: 6224, column: 12, scope: !3285)
!3293 = !DILocation(line: 6239, column: 3, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 6239, column: 3)
!3295 = !DILocation(line: 0, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 6239, column: 3)
!3297 = !DILocation(line: 6239, column: 3, scope: !3296)
!3298 = !DILocation(line: 6240, column: 48, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 6240, column: 9)
!3300 = !DILocation(line: 6240, column: 10, scope: !3299)
!3301 = !DILocation(line: 6240, column: 9, scope: !3296)
!3302 = distinct !{!3302, !3293, !3303}
!3303 = !DILocation(line: 6244, column: 7, scope: !3294)
!3304 = !DILocation(line: 6249, column: 7, scope: !3272)
!3305 = !DILocation(line: 6251, column: 7, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 6250, column: 5)
!3307 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 6249, column: 7)
!3308 = !DILocation(line: 6252, column: 7, scope: !3306)
!3309 = !DILocation(line: 6253, column: 7, scope: !3306)
!3310 = !DILocation(line: 6254, column: 5, scope: !3306)
!3311 = !DILocation(line: 6257, column: 1, scope: !3272)
!3312 = distinct !DISubprogram(name: "fur_merge_succs", scope: !3, file: !3, line: 5758, type: !2094, scopeLine: 5762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3313)
!3313 = !{!3314, !3315, !3316, !3317, !3318, !3319, !3320}
!3314 = !DILocalVariable(name: "insn", arg: 1, scope: !3312, file: !3, line: 5758, type: !1911)
!3315 = !DILocalVariable(name: "succ", arg: 2, scope: !3312, file: !3, line: 5758, type: !1911)
!3316 = !DILocalVariable(name: "moveop_drv_call_res", arg: 3, scope: !3312, file: !3, line: 5759, type: !595)
!3317 = !DILocalVariable(name: "lparams", arg: 4, scope: !3312, file: !3, line: 5760, type: !2074)
!3318 = !DILocalVariable(name: "static_params", arg: 5, scope: !3312, file: !3, line: 5761, type: !599)
!3319 = !DILocalVariable(name: "succ_live", scope: !3312, file: !3, line: 5763, type: !1852)
!3320 = !DILocalVariable(name: "sparams", scope: !3312, file: !3, line: 5764, type: !2025)
!3321 = !DILocation(line: 0, scope: !3312)
!3322 = !DILocation(line: 5770, column: 27, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 5770, column: 7)
!3324 = !DILocation(line: 5770, column: 7, scope: !3312)
!3325 = !DILocation(line: 5778, column: 15, scope: !3312)
!3326 = !DILocation(line: 5779, column: 3, scope: !3312)
!3327 = !DILocation(line: 5780, column: 1, scope: !3312)
!3328 = distinct !DISubprogram(name: "fur_at_first_insn", scope: !3, file: !3, line: 6123, type: !2106, scopeLine: 6126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3329)
!3329 = !{!3330, !3331, !3332}
!3330 = !DILocalVariable(name: "insn", arg: 1, scope: !3328, file: !3, line: 6123, type: !1911)
!3331 = !DILocalVariable(name: "lparams", arg: 2, scope: !3328, file: !3, line: 6124, type: !2074)
!3332 = !DILocalVariable(name: "static_params", arg: 3, scope: !3328, file: !3, line: 6125, type: !599)
!3333 = !DILocation(line: 0, scope: !3328)
!3334 = !DILocation(line: 6127, column: 3, scope: !3328)
!3335 = !DILocation(line: 6129, column: 1, scope: !3328)
!3336 = distinct !DISubprogram(name: "sel_sched_region", scope: !3, file: !3, line: 7541, type: !3337, scopeLine: 7542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3339)
!3337 = !DISubroutineType(types: !3338)
!3338 = !{null, !595}
!3339 = !{!3340, !3341, !3342, !3343, !3348}
!3340 = !DILocalVariable(name: "rgn", arg: 1, scope: !3336, file: !3, line: 7541, type: !595)
!3341 = !DILocalVariable(name: "schedule_p", scope: !3336, file: !3, line: 7543, type: !594)
!3342 = !DILocalVariable(name: "reset_sched_cycles_p", scope: !3336, file: !3, line: 7544, type: !594)
!3343 = !DILocalVariable(name: "__j", scope: !3344, file: !3, line: 7550, type: !595)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 7550, column: 5)
!3345 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 7550, column: 5)
!3346 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 7550, column: 5)
!3347 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 7549, column: 7)
!3348 = !DILocalVariable(name: "__s", scope: !3344, file: !3, line: 7550, type: !597)
!3349 = !DILocation(line: 0, scope: !3336)
!3350 = !DILocation(line: 7546, column: 7, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 7546, column: 7)
!3352 = !DILocation(line: 7546, column: 7, scope: !3336)
!3353 = !DILocation(line: 7549, column: 7, scope: !3347)
!3354 = !DILocation(line: 7549, column: 21, scope: !3347)
!3355 = !DILocation(line: 7549, column: 7, scope: !3336)
!3356 = !DILocation(line: 7550, column: 5, scope: !3345)
!3357 = !DILocation(line: 7550, column: 5, scope: !3346)
!3358 = !DILocation(line: 7550, column: 5, scope: !3344)
!3359 = !DILocation(line: 0, scope: !3344)
!3360 = !DILocation(line: 7552, column: 18, scope: !3336)
!3361 = !DILocation(line: 7553, column: 17, scope: !3336)
!3362 = !DILocation(line: 7553, column: 20, scope: !3336)
!3363 = !DILocation(line: 7555, column: 7, scope: !3336)
!3364 = !DILocation(line: 7554, column: 26, scope: !3336)
!3365 = !DILocation(line: 7556, column: 5, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 7555, column: 7)
!3367 = !DILocation(line: 7561, column: 3, scope: !3336)
!3368 = !DILocation(line: 7562, column: 1, scope: !3336)
!3369 = distinct !DISubprogram(name: "sel_region_init", scope: !3, file: !3, line: 6815, type: !3370, scopeLine: 6816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3372)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{!594, !595}
!3372 = !{!3373, !3374, !3375, !3377}
!3373 = !DILocalVariable(name: "rgn", arg: 1, scope: !3369, file: !3, line: 6815, type: !595)
!3374 = !DILocalVariable(name: "i", scope: !3369, file: !3, line: 6817, type: !595)
!3375 = !DILocalVariable(name: "bbs", scope: !3369, file: !3, line: 6818, type: !3376)
!3376 = !DIDerivedType(tag: DW_TAG_typedef, name: "bb_vec_t", file: !403, line: 40, baseType: !2039)
!3377 = !DILocalVariable(name: "header", scope: !3378, file: !3, line: 6866, type: !595)
!3378 = distinct !DILexicalBlock(scope: !3379, file: !3, line: 6865, column: 5)
!3379 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 6864, column: 7)
!3380 = !DILocation(line: 0, scope: !3369)
!3381 = !DILocation(line: 6818, column: 3, scope: !3369)
!3382 = !DILocation(line: 6820, column: 3, scope: !3369)
!3383 = !DILocation(line: 6825, column: 7, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 6825, column: 7)
!3385 = !DILocation(line: 6825, column: 7, scope: !3369)
!3386 = !DILocation(line: 6828, column: 7, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 6828, column: 7)
!3388 = !DILocation(line: 6828, column: 7, scope: !3369)
!3389 = !DILocation(line: 6829, column: 5, scope: !3387)
!3390 = !DILocation(line: 6831, column: 3, scope: !3369)
!3391 = !DILocation(line: 6833, column: 9, scope: !3369)
!3392 = !DILocation(line: 6833, column: 7, scope: !3369)
!3393 = !DILocation(line: 6835, column: 8, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 6835, column: 3)
!3395 = !DILocation(line: 0, scope: !3394)
!3396 = !DILocation(line: 6835, column: 19, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 6835, column: 3)
!3398 = !DILocation(line: 6835, column: 17, scope: !3397)
!3399 = !DILocation(line: 6835, column: 3, scope: !3394)
!3400 = !DILocation(line: 6836, column: 5, scope: !3397)
!3401 = !DILocation(line: 6835, column: 39, scope: !3397)
!3402 = !DILocation(line: 6835, column: 3, scope: !3397)
!3403 = distinct !{!3403, !3399, !3404}
!3404 = !DILocation(line: 6836, column: 5, scope: !3394)
!3405 = !DILocation(line: 6838, column: 3, scope: !3369)
!3406 = !DILocation(line: 6842, column: 3, scope: !3369)
!3407 = !DILocation(line: 6843, column: 3, scope: !3369)
!3408 = !DILocation(line: 6846, column: 3, scope: !3369)
!3409 = !DILocation(line: 6847, column: 3, scope: !3369)
!3410 = !DILocation(line: 6848, column: 3, scope: !3369)
!3411 = !DILocation(line: 6850, column: 3, scope: !3369)
!3412 = !DILocation(line: 6851, column: 3, scope: !3369)
!3413 = !DILocation(line: 6854, column: 3, scope: !3369)
!3414 = !DILocation(line: 6855, column: 3, scope: !3369)
!3415 = !DILocation(line: 6857, column: 3, scope: !3369)
!3416 = !DILocation(line: 6859, column: 26, scope: !3369)
!3417 = !DILocation(line: 6859, column: 24, scope: !3369)
!3418 = !DILocation(line: 6864, column: 7, scope: !3379)
!3419 = !DILocation(line: 6864, column: 7, scope: !3369)
!3420 = !DILocation(line: 6866, column: 46, scope: !3378)
!3421 = !DILocation(line: 6866, column: 21, scope: !3378)
!3422 = !DILocation(line: 0, scope: !3378)
!3423 = !DILocation(line: 6870, column: 11, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 6870, column: 11)
!3425 = !DILocation(line: 6870, column: 39, scope: !3424)
!3426 = !DILocation(line: 6870, column: 29, scope: !3424)
!3427 = !DILocation(line: 6870, column: 11, scope: !3378)
!3428 = !DILocation(line: 6872, column: 25, scope: !3424)
!3429 = !DILocation(line: 6872, column: 12, scope: !3424)
!3430 = !DILocation(line: 6871, column: 9, scope: !3424)
!3431 = !DILocation(line: 6876, column: 3, scope: !3369)
!3432 = !DILocation(line: 6880, column: 21, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 6880, column: 7)
!3434 = !DILocation(line: 6880, column: 7, scope: !3433)
!3435 = !DILocation(line: 6880, column: 7, scope: !3369)
!3436 = !DILocation(line: 6882, column: 28, scope: !3433)
!3437 = !DILocation(line: 6882, column: 40, scope: !3433)
!3438 = !DILocation(line: 6882, column: 5, scope: !3433)
!3439 = !DILocation(line: 6884, column: 23, scope: !3369)
!3440 = !DILocation(line: 6884, column: 38, scope: !3369)
!3441 = !DILocation(line: 6884, column: 21, scope: !3369)
!3442 = !DILocation(line: 6885, column: 21, scope: !3369)
!3443 = !DILocation(line: 6888, column: 3, scope: !3369)
!3444 = !DILocation(line: 6889, column: 24, scope: !3369)
!3445 = !DILocation(line: 6891, column: 3, scope: !3369)
!3446 = !DILocation(line: 6892, column: 17, scope: !3369)
!3447 = !DILocation(line: 6892, column: 3, scope: !3369)
!3448 = !DILocation(line: 6894, column: 3, scope: !3369)
!3449 = !DILocation(line: 6895, column: 20, scope: !3369)
!3450 = !DILocation(line: 6895, column: 18, scope: !3369)
!3451 = !DILocation(line: 6896, column: 25, scope: !3369)
!3452 = !DILocation(line: 6896, column: 23, scope: !3369)
!3453 = !DILocation(line: 6897, column: 32, scope: !3369)
!3454 = !DILocation(line: 6897, column: 30, scope: !3369)
!3455 = !DILocation(line: 6899, column: 3, scope: !3369)
!3456 = !DILocation(line: 6900, column: 1, scope: !3369)
!3457 = distinct !DISubprogram(name: "sel_sched_region_1", scope: !3, file: !3, line: 7431, type: !3458, scopeLine: 7432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3460)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{null}
!3460 = !{!3461, !3462, !3463, !3466, !3467, !3473, !3476, !3477}
!3461 = !DILocalVariable(name: "number_of_insns", scope: !3457, file: !3, line: 7433, type: !595)
!3462 = !DILocalVariable(name: "orig_max_seqno", scope: !3457, file: !3, line: 7434, type: !595)
!3463 = !DILocalVariable(name: "i", scope: !3464, file: !3, line: 7461, type: !595)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 7460, column: 5)
!3465 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 7459, column: 7)
!3466 = !DILocalVariable(name: "bb", scope: !3464, file: !3, line: 7462, type: !1141)
!3467 = !DILocalVariable(name: "_new_fences", scope: !3464, file: !3, line: 7463, type: !3468)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flist_tail_def", file: !398, line: 343, size: 128, elements: !3469)
!3469 = !{!3470, !3471}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3468, file: !398, line: 345, baseType: !2127, size: 64)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "tailp", scope: !3468, file: !398, line: 346, baseType: !3472, size: 64, offset: 64)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!3473 = !DILocalVariable(name: "new_fences", scope: !3464, file: !3, line: 7464, type: !3474)
!3474 = !DIDerivedType(tag: DW_TAG_typedef, name: "flist_tail_t", file: !398, line: 349, baseType: !3475)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3476 = !DILocalVariable(name: "do_p", scope: !3464, file: !3, line: 7465, type: !594)
!3477 = !DILocalVariable(name: "bb", scope: !3478, file: !3, line: 7481, type: !1141)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 7480, column: 13)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 7479, column: 11)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 7479, column: 11)
!3481 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 7476, column: 9)
!3482 = !DILocation(line: 7440, column: 21, scope: !3457)
!3483 = !DILocation(line: 7440, column: 36, scope: !3457)
!3484 = !DILocation(line: 0, scope: !3457)
!3485 = !DILocation(line: 7441, column: 3, scope: !3457)
!3486 = !DILocation(line: 7443, column: 20, scope: !3457)
!3487 = !DILocation(line: 7444, column: 3, scope: !3457)
!3488 = !DILocation(line: 7448, column: 10, scope: !3457)
!3489 = !DILocation(line: 7449, column: 7, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 7449, column: 7)
!3491 = !DILocation(line: 0, scope: !3490)
!3492 = !DILocation(line: 7449, column: 7, scope: !3457)
!3493 = !DILocation(line: 7450, column: 18, scope: !3490)
!3494 = !DILocation(line: 7450, column: 5, scope: !3490)
!3495 = !DILocation(line: 7452, column: 27, scope: !3490)
!3496 = !DILocation(line: 7452, column: 18, scope: !3490)
!3497 = !DILocation(line: 7452, column: 5, scope: !3490)
!3498 = !DILocation(line: 7453, column: 16, scope: !3457)
!3499 = !DILocation(line: 7455, column: 3, scope: !3457)
!3500 = !DILocation(line: 7457, column: 3, scope: !3457)
!3501 = !DILocation(line: 7459, column: 7, scope: !3465)
!3502 = !DILocation(line: 7459, column: 7, scope: !3457)
!3503 = !DILocation(line: 7463, column: 7, scope: !3464)
!3504 = !DILocation(line: 0, scope: !3464)
!3505 = !DILocation(line: 7467, column: 20, scope: !3464)
!3506 = !DILocation(line: 7468, column: 16, scope: !3464)
!3507 = !DILocation(line: 7468, column: 14, scope: !3464)
!3508 = !DILocation(line: 7469, column: 21, scope: !3464)
!3509 = !DILocation(line: 7470, column: 32, scope: !3464)
!3510 = !DILocation(line: 7475, column: 7, scope: !3464)
!3511 = !DILocation(line: 7479, column: 11, scope: !3480)
!3512 = !DILocation(line: 0, scope: !3480)
!3513 = !DILocation(line: 7479, column: 27, scope: !3479)
!3514 = !DILocation(line: 7479, column: 25, scope: !3479)
!3515 = !DILocation(line: 7501, column: 11, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 7501, column: 11)
!3517 = !DILocation(line: 7481, column: 32, scope: !3478)
!3518 = !DILocation(line: 0, scope: !3478)
!3519 = !DILocation(line: 7483, column: 19, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 7483, column: 19)
!3521 = !DILocation(line: 7483, column: 19, scope: !3478)
!3522 = !DILocation(line: 7485, column: 19, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 7484, column: 17)
!3524 = !DILocation(line: 7486, column: 19, scope: !3523)
!3525 = !DILocation(line: 7489, column: 19, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 7489, column: 19)
!3527 = !DILocation(line: 7489, column: 19, scope: !3478)
!3528 = !DILocation(line: 7491, column: 19, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 7490, column: 17)
!3530 = !DILocation(line: 7492, column: 54, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 7492, column: 23)
!3532 = !DILocation(line: 7492, column: 23, scope: !3531)
!3533 = !DILocation(line: 7493, column: 23, scope: !3531)
!3534 = !DILocation(line: 7493, column: 26, scope: !3531)
!3535 = !DILocation(line: 7492, column: 23, scope: !3529)
!3536 = !DILocation(line: 7494, column: 37, scope: !3531)
!3537 = !DILocation(line: 7495, column: 37, scope: !3531)
!3538 = !DILocation(line: 7495, column: 55, scope: !3531)
!3539 = !DILocation(line: 7495, column: 61, scope: !3531)
!3540 = !DILocation(line: 7494, column: 21, scope: !3531)
!3541 = !DILocation(line: 7497, column: 24, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 7497, column: 24)
!3543 = !DILocation(line: 7497, column: 60, scope: !3542)
!3544 = !DILocation(line: 7497, column: 24, scope: !3526)
!3545 = !DILocation(line: 7498, column: 33, scope: !3542)
!3546 = !DILocation(line: 7498, column: 59, scope: !3542)
!3547 = !DILocation(line: 7498, column: 17, scope: !3542)
!3548 = !DILocation(line: 7479, column: 47, scope: !3479)
!3549 = !DILocation(line: 7479, column: 11, scope: !3479)
!3550 = distinct !{!3550, !3511, !3551}
!3551 = !DILocation(line: 7499, column: 13, scope: !3480)
!3552 = !DILocation(line: 7501, column: 27, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 7501, column: 11)
!3554 = !DILocation(line: 7501, column: 25, scope: !3553)
!3555 = !DILocation(line: 7503, column: 20, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 7502, column: 13)
!3557 = !DILocation(line: 7508, column: 19, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3556, file: !3, line: 7508, column: 19)
!3559 = !DILocation(line: 7508, column: 19, scope: !3556)
!3560 = !DILocation(line: 7510, column: 19, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 7509, column: 17)
!3562 = !DILocation(line: 7511, column: 19, scope: !3561)
!3563 = !DILocation(line: 7514, column: 33, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3556, file: !3, line: 7514, column: 19)
!3565 = !DILocation(line: 7514, column: 59, scope: !3564)
!3566 = !DILocation(line: 7514, column: 19, scope: !3564)
!3567 = !DILocation(line: 7514, column: 19, scope: !3556)
!3568 = !DILocation(line: 7516, column: 19, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3564, file: !3, line: 7515, column: 17)
!3570 = !DILocation(line: 7518, column: 51, scope: !3569)
!3571 = !DILocation(line: 7518, column: 36, scope: !3569)
!3572 = !DILocation(line: 7521, column: 35, scope: !3569)
!3573 = !DILocation(line: 7521, column: 57, scope: !3569)
!3574 = !DILocation(line: 7521, column: 19, scope: !3569)
!3575 = !DILocation(line: 7523, column: 37, scope: !3569)
!3576 = !DILocation(line: 7523, column: 63, scope: !3569)
!3577 = !DILocation(line: 7523, column: 19, scope: !3569)
!3578 = !DILocation(line: 7525, column: 19, scope: !3569)
!3579 = !DILocation(line: 7527, column: 32, scope: !3569)
!3580 = !DILocation(line: 7527, column: 19, scope: !3569)
!3581 = !DILocation(line: 7529, column: 19, scope: !3569)
!3582 = !DILocation(line: 7532, column: 19, scope: !3569)
!3583 = !DILocation(line: 7501, column: 47, scope: !3553)
!3584 = !DILocation(line: 7501, column: 11, scope: !3553)
!3585 = distinct !{!3585, !3515, !3586}
!3586 = !DILocation(line: 7534, column: 13, scope: !3516)
!3587 = !DILocation(line: 0, scope: !3481)
!3588 = distinct !{!3588, !3510, !3589}
!3589 = !DILocation(line: 7535, column: 9, scope: !3464)
!3590 = !DILocation(line: 7536, column: 5, scope: !3465)
!3591 = !DILocation(line: 7536, column: 5, scope: !3464)
!3592 = !DILocation(line: 7537, column: 1, scope: !3457)
!3593 = distinct !DISubprogram(name: "sel_region_finish", scope: !3, file: !3, line: 7168, type: !3594, scopeLine: 7169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3596)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{null, !594}
!3596 = !{!3597, !3598, !3613, !3614}
!3597 = !DILocalVariable(name: "reset_sched_cycles_p", arg: 1, scope: !3593, file: !3, line: 7168, type: !594)
!3598 = !DILocalVariable(name: "si", scope: !3599, file: !3, line: 7186, type: !3600)
!3599 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 7185, column: 3)
!3600 = !DIDerivedType(tag: DW_TAG_typedef, name: "succ_iterator", file: !398, line: 995, baseType: !3601)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 967, size: 512, elements: !3602)
!3602 = !{!3603, !3604, !3605, !3606, !3607, !3608, !3610, !3611, !3612}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "bb_end", scope: !3601, file: !398, line: 970, baseType: !594, size: 8)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "e1", scope: !3601, file: !398, line: 973, baseType: !1158, size: 64, offset: 64)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "e2", scope: !3601, file: !398, line: 976, baseType: !1158, size: 64, offset: 128)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "ei", scope: !3601, file: !398, line: 979, baseType: !2985, size: 128, offset: 192)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3601, file: !398, line: 982, baseType: !1141, size: 64, offset: 320)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3601, file: !398, line: 986, baseType: !3609, size: 16, offset: 384)
!3609 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "current_flags", scope: !3601, file: !398, line: 990, baseType: !3609, size: 16, offset: 400)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "current_exit", scope: !3601, file: !398, line: 993, baseType: !595, size: 32, offset: 416)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "loop_exits", scope: !3601, file: !398, line: 994, baseType: !2034, size: 64, offset: 448)
!3613 = !DILocalVariable(name: "insn", scope: !3599, file: !3, line: 7187, type: !1911)
!3614 = !DILocalVariable(name: "bb", scope: !3615, file: !3, line: 7192, type: !1141)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 7191, column: 7)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 7189, column: 5)
!3617 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 7189, column: 5)
!3618 = !DILocation(line: 0, scope: !3593)
!3619 = !DILocation(line: 7170, column: 3, scope: !3593)
!3620 = !DILocation(line: 7171, column: 3, scope: !3593)
!3621 = !DILocation(line: 7172, column: 3, scope: !3593)
!3622 = !DILocation(line: 7175, column: 7, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 7175, column: 7)
!3624 = !DILocation(line: 7175, column: 7, scope: !3593)
!3625 = !DILocation(line: 7176, column: 5, scope: !3623)
!3626 = !DILocation(line: 7177, column: 3, scope: !3593)
!3627 = !DILocation(line: 7178, column: 3, scope: !3593)
!3628 = !DILocation(line: 7179, column: 3, scope: !3593)
!3629 = !DILocation(line: 7180, column: 3, scope: !3593)
!3630 = !DILocation(line: 7181, column: 3, scope: !3593)
!3631 = !DILocation(line: 7186, column: 5, scope: !3599)
!3632 = !DILocation(line: 7187, column: 5, scope: !3599)
!3633 = !DILocation(line: 7189, column: 5, scope: !3617)
!3634 = !DILocation(line: 0, scope: !3599)
!3635 = !DILocation(line: 7189, column: 5, scope: !3616)
!3636 = !DILocation(line: 7192, column: 19, scope: !3615)
!3637 = !DILocation(line: 0, scope: !3615)
!3638 = !DILocation(line: 7194, column: 7, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 7194, column: 6)
!3640 = !DILocation(line: 7194, column: 6, scope: !3615)
!3641 = !DILocation(line: 7195, column: 18, scope: !3639)
!3642 = !DILocation(line: 7195, column: 4, scope: !3639)
!3643 = distinct !{!3643, !3633, !3644}
!3644 = !DILocation(line: 7196, column: 7, scope: !3617)
!3645 = !DILocation(line: 7197, column: 3, scope: !3593)
!3646 = !DILocation(line: 7200, column: 7, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 7200, column: 7)
!3648 = !DILocation(line: 7200, column: 7, scope: !3593)
!3649 = !DILocation(line: 7201, column: 5, scope: !3647)
!3650 = !DILocation(line: 7203, column: 3, scope: !3593)
!3651 = !DILocation(line: 7205, column: 17, scope: !3593)
!3652 = !DILocation(line: 7205, column: 3, scope: !3593)
!3653 = !DILocation(line: 7207, column: 3, scope: !3593)
!3654 = !DILocation(line: 7209, column: 3, scope: !3593)
!3655 = !DILocation(line: 7210, column: 3, scope: !3593)
!3656 = !DILocation(line: 7212, column: 3, scope: !3593)
!3657 = !DILocation(line: 7213, column: 3, scope: !3593)
!3658 = !DILocation(line: 7215, column: 3, scope: !3593)
!3659 = !DILocation(line: 7217, column: 18, scope: !3593)
!3660 = !DILocation(line: 7218, column: 1, scope: !3593)
!3661 = distinct !DISubprogram(name: "maybe_skip_selective_scheduling", scope: !3, file: !3, line: 7615, type: !3662, scopeLine: 7616, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2384)
!3662 = !DISubroutineType(types: !3663)
!3663 = !{!594}
!3664 = !DILocation(line: 7617, column: 12, scope: !3661)
!3665 = !DILocation(line: 7617, column: 10, scope: !3661)
!3666 = !DILocation(line: 7617, column: 3, scope: !3661)
!3667 = distinct !DISubprogram(name: "run_selective_scheduling", scope: !3, file: !3, line: 7622, type: !3458, scopeLine: 7623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3668)
!3668 = !{!3669}
!3669 = !DILocalVariable(name: "rgn", scope: !3667, file: !3, line: 7624, type: !595)
!3670 = !DILocation(line: 7626, column: 7, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 7626, column: 7)
!3672 = !DILocation(line: 7626, column: 22, scope: !3671)
!3673 = !DILocation(line: 7626, column: 7, scope: !3667)
!3674 = !DILocation(line: 7629, column: 3, scope: !3667)
!3675 = !DILocation(line: 0, scope: !3667)
!3676 = !DILocation(line: 7631, column: 8, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 7631, column: 3)
!3678 = !DILocation(line: 0, scope: !3677)
!3679 = !DILocation(line: 7631, column: 23, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 7631, column: 3)
!3681 = !DILocation(line: 7631, column: 21, scope: !3680)
!3682 = !DILocation(line: 7631, column: 3, scope: !3677)
!3683 = !DILocation(line: 7632, column: 5, scope: !3680)
!3684 = !DILocation(line: 7631, column: 38, scope: !3680)
!3685 = !DILocation(line: 7631, column: 3, scope: !3680)
!3686 = distinct !{!3686, !3682, !3687}
!3687 = !DILocation(line: 7632, column: 26, scope: !3677)
!3688 = !DILocation(line: 7634, column: 3, scope: !3667)
!3689 = !DILocation(line: 7635, column: 1, scope: !3667)
!3690 = distinct !DISubprogram(name: "sel_global_init", scope: !3, file: !3, line: 7566, type: !3458, scopeLine: 7567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2384)
!3691 = !DILocation(line: 7568, column: 3, scope: !3690)
!3692 = !DILocation(line: 7569, column: 3, scope: !3690)
!3693 = !DILocation(line: 7572, column: 3, scope: !3690)
!3694 = !DILocation(line: 7573, column: 3, scope: !3690)
!3695 = !DILocation(line: 7575, column: 3, scope: !3690)
!3696 = !DILocation(line: 7576, column: 3, scope: !3690)
!3697 = !DILocation(line: 7578, column: 3, scope: !3690)
!3698 = !DILocation(line: 7580, column: 18, scope: !3690)
!3699 = !DILocation(line: 7581, column: 20, scope: !3690)
!3700 = !DILocation(line: 7581, column: 18, scope: !3690)
!3701 = !DILocation(line: 7583, column: 3, scope: !3690)
!3702 = !DILocation(line: 7584, column: 3, scope: !3690)
!3703 = !DILocation(line: 7585, column: 3, scope: !3690)
!3704 = !DILocation(line: 7586, column: 3, scope: !3690)
!3705 = !DILocation(line: 7587, column: 3, scope: !3690)
!3706 = !DILocation(line: 7588, column: 3, scope: !3690)
!3707 = !DILocation(line: 7589, column: 1, scope: !3690)
!3708 = distinct !DISubprogram(name: "sel_global_finish", scope: !3, file: !3, line: 7593, type: !3458, scopeLine: 7594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2384)
!3709 = !DILocation(line: 7595, column: 3, scope: !3708)
!3710 = !DILocation(line: 7596, column: 3, scope: !3708)
!3711 = !DILocation(line: 7597, column: 3, scope: !3708)
!3712 = !DILocation(line: 7599, column: 3, scope: !3708)
!3713 = !DILocation(line: 7600, column: 3, scope: !3708)
!3714 = !DILocation(line: 7602, column: 3, scope: !3708)
!3715 = !DILocation(line: 7603, column: 3, scope: !3708)
!3716 = !DILocation(line: 7604, column: 3, scope: !3708)
!3717 = !DILocation(line: 7606, column: 7, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 7606, column: 7)
!3719 = !DILocation(line: 7606, column: 7, scope: !3708)
!3720 = !DILocation(line: 7607, column: 5, scope: !3718)
!3721 = !DILocation(line: 7609, column: 3, scope: !3708)
!3722 = !DILocation(line: 7610, column: 3, scope: !3708)
!3723 = !DILocation(line: 7611, column: 1, scope: !3708)
!3724 = distinct !DISubprogram(name: "ei_start_1", scope: !155, file: !155, line: 696, type: !3725, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3727)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{!2985, !2990}
!3727 = !{!3728, !3729}
!3728 = !DILocalVariable(name: "ev", arg: 1, scope: !3724, file: !155, line: 696, type: !2990)
!3729 = !DILocalVariable(name: "i", scope: !3724, file: !155, line: 698, type: !2985)
!3730 = !DILocation(line: 0, scope: !3724)
!3731 = !DILocation(line: 700, column: 5, scope: !3724)
!3732 = !DILocation(line: 700, column: 11, scope: !3724)
!3733 = !DILocation(line: 701, column: 5, scope: !3724)
!3734 = !DILocation(line: 701, column: 15, scope: !3724)
!3735 = !DILocation(line: 703, column: 3, scope: !3724)
!3736 = distinct !DISubprogram(name: "ei_cond", scope: !155, file: !155, line: 771, type: !3737, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3740)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{!594, !2985, !3739}
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!3740 = !{!3741, !3742}
!3741 = !DILocalVariable(name: "ei", arg: 1, scope: !3736, file: !155, line: 771, type: !2985)
!3742 = !DILocalVariable(name: "p", arg: 2, scope: !3736, file: !155, line: 771, type: !3739)
!3743 = !DILocation(line: 0, scope: !3736)
!3744 = !DILocation(line: 773, column: 8, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3736, file: !155, line: 773, column: 7)
!3746 = !DILocation(line: 773, column: 7, scope: !3736)
!3747 = !DILocation(line: 775, column: 12, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3745, file: !155, line: 774, column: 5)
!3749 = !DILocation(line: 776, column: 7, scope: !3748)
!3750 = !DILocation(line: 781, column: 7, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3745, file: !155, line: 779, column: 5)
!3752 = !DILocation(line: 0, scope: !3745)
!3753 = !DILocation(line: 783, column: 1, scope: !3736)
!3754 = distinct !DISubprogram(name: "ei_next", scope: !155, file: !155, line: 736, type: !3755, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3758)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{null, !3757}
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!3758 = !{!3759}
!3759 = !DILocalVariable(name: "i", arg: 1, scope: !3754, file: !155, line: 736, type: !3757)
!3760 = !DILocation(line: 0, scope: !3754)
!3761 = !DILocation(line: 738, column: 3, scope: !3754)
!3762 = !DILocation(line: 739, column: 11, scope: !3754)
!3763 = !DILocation(line: 740, column: 1, scope: !3754)
!3764 = distinct !DISubprogram(name: "ei_end_p", scope: !155, file: !155, line: 721, type: !3765, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3767)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!594, !2985}
!3767 = !{!3768}
!3768 = !DILocalVariable(name: "i", arg: 1, scope: !3764, file: !155, line: 721, type: !2985)
!3769 = !DILocation(line: 723, column: 22, scope: !3764)
!3770 = !DILocation(line: 723, column: 19, scope: !3764)
!3771 = !DILocation(line: 723, column: 10, scope: !3764)
!3772 = !DILocation(line: 723, column: 3, scope: !3764)
!3773 = distinct !DISubprogram(name: "ei_edge", scope: !155, file: !155, line: 752, type: !3774, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3776)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!1158, !2985}
!3776 = !{!3777}
!3777 = !DILocalVariable(name: "i", arg: 1, scope: !3773, file: !155, line: 752, type: !2985)
!3778 = !DILocation(line: 754, column: 10, scope: !3773)
!3779 = !DILocation(line: 754, column: 3, scope: !3773)
!3780 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !155, file: !155, line: 150, type: !3781, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3785)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!7, !3783}
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1151)
!3785 = !{!3786}
!3786 = !DILocalVariable(name: "vec_", arg: 1, scope: !3780, file: !155, line: 150, type: !3783)
!3787 = !DILocation(line: 0, scope: !3780)
!3788 = !DILocation(line: 150, column: 1, scope: !3780)
!3789 = distinct !DISubprogram(name: "ei_container", scope: !155, file: !155, line: 685, type: !3790, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3792)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!1146, !2985}
!3792 = !{!3793}
!3793 = !DILocalVariable(name: "i", arg: 1, scope: !3789, file: !155, line: 685, type: !2985)
!3794 = !DILocation(line: 687, column: 3, scope: !3789)
!3795 = !DILocation(line: 688, column: 10, scope: !3789)
!3796 = !DILocation(line: 688, column: 3, scope: !3789)
!3797 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !155, file: !155, line: 150, type: !3798, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3800)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!1158, !3783, !7}
!3800 = !{!3801, !3802}
!3801 = !DILocalVariable(name: "vec_", arg: 1, scope: !3797, file: !155, line: 150, type: !3783)
!3802 = !DILocalVariable(name: "ix_", arg: 2, scope: !3797, file: !155, line: 150, type: !7)
!3803 = !DILocation(line: 0, scope: !3797)
!3804 = !DILocation(line: 150, column: 1, scope: !3797)
!3805 = distinct !DISubprogram(name: "track_scheduled_insns_and_blocks", scope: !3, file: !3, line: 5795, type: !3806, scopeLine: 5796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3808)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{null, !607}
!3808 = !{!3809}
!3809 = !DILocalVariable(name: "insn", arg: 1, scope: !3805, file: !3, line: 5795, type: !607)
!3810 = !DILocation(line: 0, scope: !3805)
!3811 = !DILocation(line: 5799, column: 19, scope: !3805)
!3812 = !DILocation(line: 5799, column: 40, scope: !3805)
!3813 = !DILocation(line: 5799, column: 3, scope: !3805)
!3814 = !DILocation(line: 5801, column: 22, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3805, file: !3, line: 5801, column: 7)
!3816 = !DILocation(line: 5801, column: 38, scope: !3815)
!3817 = !DILocation(line: 5801, column: 8, scope: !3815)
!3818 = !DILocation(line: 5801, column: 7, scope: !3805)
!3819 = !DILocation(line: 5805, column: 11, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 5805, column: 11)
!3821 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 5802, column: 5)
!3822 = !DILocation(line: 5805, column: 35, scope: !3820)
!3823 = !DILocation(line: 5805, column: 11, scope: !3821)
!3824 = !DILocation(line: 5806, column: 18, scope: !3820)
!3825 = !DILocation(line: 5806, column: 40, scope: !3820)
!3826 = !DILocation(line: 5806, column: 63, scope: !3820)
!3827 = !DILocation(line: 5806, column: 2, scope: !3820)
!3828 = !DILocation(line: 5807, column: 16, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 5807, column: 16)
!3830 = !DILocation(line: 5807, column: 34, scope: !3829)
!3831 = !DILocation(line: 5807, column: 32, scope: !3829)
!3832 = !DILocation(line: 5807, column: 52, scope: !3829)
!3833 = !DILocation(line: 5807, column: 56, scope: !3829)
!3834 = !DILocation(line: 5807, column: 16, scope: !3820)
!3835 = !DILocation(line: 5808, column: 21, scope: !3829)
!3836 = !DILocation(line: 5808, column: 2, scope: !3829)
!3837 = !DILocation(line: 5811, column: 23, scope: !3815)
!3838 = !DILocation(line: 5811, column: 39, scope: !3815)
!3839 = !DILocation(line: 5811, column: 5, scope: !3815)
!3840 = !DILocation(line: 5817, column: 7, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3805, file: !3, line: 5817, column: 7)
!3842 = !DILocation(line: 5817, column: 25, scope: !3841)
!3843 = !DILocation(line: 5817, column: 23, scope: !3841)
!3844 = !DILocation(line: 5817, column: 7, scope: !3805)
!3845 = !DILocation(line: 5818, column: 28, scope: !3841)
!3846 = !DILocation(line: 5818, column: 5, scope: !3841)
!3847 = !DILocation(line: 5819, column: 1, scope: !3805)
!3848 = distinct !DISubprogram(name: "handle_emitting_transformations", scope: !3, file: !3, line: 5893, type: !3849, scopeLine: 5895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3851)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!594, !607, !1834, !602}
!3851 = !{!3852, !3853, !3854, !3855}
!3852 = !DILocalVariable(name: "insn", arg: 1, scope: !3848, file: !3, line: 5893, type: !607)
!3853 = !DILocalVariable(name: "expr", arg: 2, scope: !3848, file: !3, line: 5893, type: !1834)
!3854 = !DILocalVariable(name: "params", arg: 3, scope: !3848, file: !3, line: 5894, type: !602)
!3855 = !DILocalVariable(name: "insn_emitted", scope: !3848, file: !3, line: 5896, type: !594)
!3856 = !DILocation(line: 0, scope: !3848)
!3857 = !DILocation(line: 5898, column: 18, scope: !3848)
!3858 = !DILocation(line: 5899, column: 19, scope: !3848)
!3859 = !DILocation(line: 5899, column: 16, scope: !3848)
!3860 = !DILocation(line: 5901, column: 3, scope: !3848)
!3861 = distinct !DISubprogram(name: "VEC_expr_history_def_base_length", scope: !398, file: !398, line: 101, type: !3862, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3866)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{!7, !3864}
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1877)
!3866 = !{!3867}
!3867 = !DILocalVariable(name: "vec_", arg: 1, scope: !3861, file: !398, line: 101, type: !3864)
!3868 = !DILocation(line: 0, scope: !3861)
!3869 = !DILocation(line: 101, column: 1, scope: !3861)
!3870 = distinct !DISubprogram(name: "remove_insn_from_stream", scope: !3, file: !3, line: 5952, type: !3871, scopeLine: 5953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3873)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{null, !607, !594}
!3873 = !{!3874, !3875, !3876}
!3874 = !DILocalVariable(name: "insn", arg: 1, scope: !3870, file: !3, line: 5952, type: !607)
!3875 = !DILocalVariable(name: "only_disconnect", arg: 2, scope: !3870, file: !3, line: 5952, type: !594)
!3876 = !DILocalVariable(name: "nop", scope: !3877, file: !3, line: 5960, type: !1911)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !3, line: 5959, column: 5)
!3878 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 5958, column: 7)
!3879 = !DILocation(line: 0, scope: !3870)
!3880 = !DILocation(line: 5958, column: 7, scope: !3878)
!3881 = !DILocation(line: 5958, column: 7, scope: !3870)
!3882 = !DILocation(line: 5960, column: 20, scope: !3877)
!3883 = !DILocation(line: 0, scope: !3877)
!3884 = !DILocation(line: 5961, column: 7, scope: !3877)
!3885 = !DILocation(line: 5962, column: 7, scope: !3877)
!3886 = !DILocation(line: 5963, column: 5, scope: !3877)
!3887 = !DILocation(line: 5965, column: 3, scope: !3870)
!3888 = !DILocation(line: 5966, column: 1, scope: !3870)
!3889 = distinct !DISubprogram(name: "maybe_emit_renaming_copy", scope: !3, file: !3, line: 5824, type: !3890, scopeLine: 5826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3892)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{!594, !607, !602}
!3892 = !{!3893, !3894, !3895, !3896, !3897, !3900}
!3893 = !DILocalVariable(name: "insn", arg: 1, scope: !3889, file: !3, line: 5824, type: !607)
!3894 = !DILocalVariable(name: "params", arg: 2, scope: !3889, file: !3, line: 5825, type: !602)
!3895 = !DILocalVariable(name: "insn_emitted", scope: !3889, file: !3, line: 5827, type: !594)
!3896 = !DILocalVariable(name: "cur_reg", scope: !3889, file: !3, line: 5828, type: !607)
!3897 = !DILocalVariable(name: "reg_move_insn", scope: !3898, file: !3, line: 5842, type: !1911)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 5841, column: 5)
!3899 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 5840, column: 7)
!3900 = !DILocalVariable(name: "reg_move_insn_rtx", scope: !3898, file: !3, line: 5842, type: !1911)
!3901 = !DILocation(line: 0, scope: !3889)
!3902 = !DILocation(line: 5831, column: 8, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 5831, column: 7)
!3904 = !DILocation(line: 5831, column: 7, scope: !3889)
!3905 = !DILocation(line: 5834, column: 13, scope: !3889)
!3906 = !DILocation(line: 5835, column: 3, scope: !3889)
!3907 = !DILocation(line: 0, scope: !3899)
!3908 = !DILocation(line: 5840, column: 7, scope: !3899)
!3909 = !DILocation(line: 5840, column: 31, scope: !3899)
!3910 = !DILocation(line: 5840, column: 28, scope: !3899)
!3911 = !DILocation(line: 5840, column: 7, scope: !3889)
!3912 = !DILocation(line: 5844, column: 53, scope: !3898)
!3913 = !DILocation(line: 5845, column: 61, scope: !3898)
!3914 = !DILocation(line: 5844, column: 27, scope: !3898)
!3915 = !DILocation(line: 0, scope: !3898)
!3916 = !DILocation(line: 5847, column: 52, scope: !3898)
!3917 = !DILocation(line: 5848, column: 52, scope: !3898)
!3918 = !DILocation(line: 5846, column: 23, scope: !3898)
!3919 = !DILocation(line: 5850, column: 7, scope: !3898)
!3920 = !DILocation(line: 5850, column: 53, scope: !3898)
!3921 = !DILocation(line: 5851, column: 46, scope: !3898)
!3922 = !DILocation(line: 5851, column: 62, scope: !3898)
!3923 = !DILocation(line: 5851, column: 7, scope: !3898)
!3924 = !DILocation(line: 5854, column: 15, scope: !3898)
!3925 = !DILocation(line: 5854, column: 27, scope: !3898)
!3926 = !DILocation(line: 5855, column: 5, scope: !3898)
!3927 = !DILocation(line: 5858, column: 1, scope: !3889)
!3928 = distinct !DISubprogram(name: "maybe_emit_speculative_check", scope: !3, file: !3, line: 5864, type: !3849, scopeLine: 5866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3929)
!3929 = !{!3930, !3931, !3932, !3933, !3934, !3935}
!3930 = !DILocalVariable(name: "insn", arg: 1, scope: !3928, file: !3, line: 5864, type: !607)
!3931 = !DILocalVariable(name: "expr", arg: 2, scope: !3928, file: !3, line: 5864, type: !1834)
!3932 = !DILocalVariable(name: "params", arg: 3, scope: !3928, file: !3, line: 5865, type: !602)
!3933 = !DILocalVariable(name: "insn_emitted", scope: !3928, file: !3, line: 5867, type: !594)
!3934 = !DILocalVariable(name: "x", scope: !3928, file: !3, line: 5868, type: !1911)
!3935 = !DILocalVariable(name: "check_ds", scope: !3928, file: !3, line: 5869, type: !1868)
!3936 = !DILocation(line: 0, scope: !3928)
!3937 = !DILocation(line: 5871, column: 14, scope: !3928)
!3938 = !DILocation(line: 5872, column: 16, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 5872, column: 7)
!3940 = !DILocation(line: 5872, column: 7, scope: !3928)
!3941 = !DILocation(line: 5875, column: 45, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 5873, column: 5)
!3943 = !DILocation(line: 5875, column: 11, scope: !3942)
!3944 = !DILocation(line: 5877, column: 5, scope: !3942)
!3945 = !DILocation(line: 5880, column: 7, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 5879, column: 5)
!3947 = !DILocation(line: 5880, column: 44, scope: !3946)
!3948 = !DILocation(line: 0, scope: !3939)
!3949 = !DILocation(line: 5884, column: 3, scope: !3928)
!3950 = !DILocation(line: 5886, column: 3, scope: !3928)
!3951 = distinct !DISubprogram(name: "rhs_regno", scope: !414, file: !414, line: 1051, type: !3952, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3957)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{!7, !3954}
!3954 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !608, line: 51, baseType: !3955)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !610)
!3957 = !{!3958}
!3958 = !DILocalVariable(name: "x", arg: 1, scope: !3951, file: !414, line: 1051, type: !3954)
!3959 = !DILocation(line: 0, scope: !3951)
!3960 = !DILocation(line: 1053, column: 10, scope: !3951)
!3961 = !DILocation(line: 1053, column: 3, scope: !3951)
!3962 = distinct !DISubprogram(name: "create_insn_rtx_with_rhs", scope: !3, file: !3, line: 880, type: !3963, scopeLine: 881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3965)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!607, !1840, !607}
!3965 = !{!3966, !3967, !3968, !3969, !3970}
!3966 = !DILocalVariable(name: "vi", arg: 1, scope: !3962, file: !3, line: 880, type: !1840)
!3967 = !DILocalVariable(name: "rhs_rtx", arg: 2, scope: !3962, file: !3, line: 880, type: !607)
!3968 = !DILocalVariable(name: "lhs_rtx", scope: !3962, file: !3, line: 882, type: !607)
!3969 = !DILocalVariable(name: "pattern", scope: !3962, file: !3, line: 883, type: !607)
!3970 = !DILocalVariable(name: "insn_rtx", scope: !3962, file: !3, line: 884, type: !607)
!3971 = !DILocation(line: 0, scope: !3962)
!3972 = !DILocation(line: 886, column: 23, scope: !3962)
!3973 = !DILocation(line: 886, column: 13, scope: !3962)
!3974 = !DILocation(line: 888, column: 13, scope: !3962)
!3975 = !DILocation(line: 889, column: 14, scope: !3962)
!3976 = !DILocation(line: 891, column: 3, scope: !3962)
!3977 = distinct !DISubprogram(name: "replace_dest_with_reg_in_expr", scope: !3, file: !3, line: 978, type: !3978, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3980)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{null, !1834, !607}
!3980 = !{!3981, !3982, !3983, !3984}
!3981 = !DILocalVariable(name: "expr", arg: 1, scope: !3977, file: !3, line: 978, type: !1834)
!3982 = !DILocalVariable(name: "new_reg", arg: 2, scope: !3977, file: !3, line: 978, type: !607)
!3983 = !DILocalVariable(name: "insn_rtx", scope: !3977, file: !3, line: 980, type: !607)
!3984 = !DILocalVariable(name: "vinsn", scope: !3977, file: !3, line: 981, type: !1840)
!3985 = !DILocation(line: 0, scope: !3977)
!3986 = !DILocation(line: 983, column: 40, scope: !3977)
!3987 = !DILocation(line: 983, column: 14, scope: !3977)
!3988 = !DILocation(line: 984, column: 11, scope: !3977)
!3989 = !DILocation(line: 986, column: 3, scope: !3977)
!3990 = !DILocation(line: 987, column: 3, scope: !3977)
!3991 = !DILocation(line: 987, column: 27, scope: !3977)
!3992 = !DILocation(line: 988, column: 3, scope: !3977)
!3993 = !DILocation(line: 988, column: 32, scope: !3977)
!3994 = !DILocation(line: 989, column: 1, scope: !3977)
!3995 = distinct !DISubprogram(name: "create_insn_rtx_with_lhs", scope: !3, file: !3, line: 961, type: !3963, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3996)
!3996 = !{!3997, !3998, !3999, !4000, !4001}
!3997 = !DILocalVariable(name: "vi", arg: 1, scope: !3995, file: !3, line: 961, type: !1840)
!3998 = !DILocalVariable(name: "lhs_rtx", arg: 2, scope: !3995, file: !3, line: 961, type: !607)
!3999 = !DILocalVariable(name: "rhs_rtx", scope: !3995, file: !3, line: 963, type: !607)
!4000 = !DILocalVariable(name: "pattern", scope: !3995, file: !3, line: 964, type: !607)
!4001 = !DILocalVariable(name: "insn_rtx", scope: !3995, file: !3, line: 965, type: !607)
!4002 = !DILocation(line: 0, scope: !3995)
!4003 = !DILocation(line: 967, column: 23, scope: !3995)
!4004 = !DILocation(line: 967, column: 13, scope: !3995)
!4005 = !DILocation(line: 969, column: 13, scope: !3995)
!4006 = !DILocation(line: 970, column: 14, scope: !3995)
!4007 = !DILocation(line: 972, column: 3, scope: !3995)
!4008 = distinct !DISubprogram(name: "get_spec_check_type_for_insn", scope: !3, file: !3, line: 3174, type: !4009, scopeLine: 3175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4011)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!1868, !1911, !1834}
!4011 = !{!4012, !4013, !4014, !4015}
!4012 = !DILocalVariable(name: "insn", arg: 1, scope: !4008, file: !3, line: 3174, type: !1911)
!4013 = !DILocalVariable(name: "expr", arg: 2, scope: !4008, file: !3, line: 3174, type: !1834)
!4014 = !DILocalVariable(name: "to_check_ds", scope: !4008, file: !3, line: 3176, type: !1868)
!4015 = !DILocalVariable(name: "already_checked_ds", scope: !4008, file: !3, line: 3177, type: !1868)
!4016 = !DILocation(line: 0, scope: !4008)
!4017 = !DILocation(line: 3177, column: 29, scope: !4008)
!4018 = !DILocation(line: 3179, column: 17, scope: !4008)
!4019 = !DILocation(line: 3181, column: 21, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 3181, column: 7)
!4021 = !DILocation(line: 3181, column: 7, scope: !4020)
!4022 = !DILocation(line: 3181, column: 7, scope: !4008)
!4023 = !DILocation(line: 3182, column: 27, scope: !4020)
!4024 = !DILocation(line: 3182, column: 24, scope: !4020)
!4025 = !DILocation(line: 3182, column: 5, scope: !4020)
!4026 = !DILocation(line: 3184, column: 7, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 3184, column: 7)
!4028 = !DILocation(line: 3184, column: 17, scope: !4027)
!4029 = !DILocation(line: 3185, column: 7, scope: !4027)
!4030 = !DILocation(line: 3185, column: 22, scope: !4027)
!4031 = !DILocation(line: 3185, column: 28, scope: !4027)
!4032 = !DILocation(line: 3186, column: 24, scope: !4027)
!4033 = !DILocation(line: 3184, column: 7, scope: !4008)
!4034 = !DILocation(line: 3188, column: 24, scope: !4008)
!4035 = !DILocation(line: 3190, column: 18, scope: !4008)
!4036 = !DILocation(line: 3190, column: 15, scope: !4008)
!4037 = !DILocation(line: 3192, column: 3, scope: !4008)
!4038 = distinct !DISubprogram(name: "create_speculation_check", scope: !3, file: !3, line: 1821, type: !4039, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4041)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!1911, !1834, !1868, !1911}
!4041 = !{!4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050}
!4042 = !DILocalVariable(name: "c_expr", arg: 1, scope: !4038, file: !3, line: 1821, type: !1834)
!4043 = !DILocalVariable(name: "check_ds", arg: 2, scope: !4038, file: !3, line: 1821, type: !1868)
!4044 = !DILocalVariable(name: "orig_insn", arg: 3, scope: !4038, file: !3, line: 1821, type: !1911)
!4045 = !DILocalVariable(name: "check_pattern", scope: !4038, file: !3, line: 1823, type: !607)
!4046 = !DILocalVariable(name: "insn_rtx", scope: !4038, file: !3, line: 1824, type: !607)
!4047 = !DILocalVariable(name: "insn", scope: !4038, file: !3, line: 1825, type: !1911)
!4048 = !DILocalVariable(name: "recovery_block", scope: !4038, file: !3, line: 1826, type: !1141)
!4049 = !DILocalVariable(name: "label", scope: !4038, file: !3, line: 1827, type: !607)
!4050 = !DILocalVariable(name: "twin_rtx", scope: !4051, file: !3, line: 1868, type: !607)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 1867, column: 5)
!4052 = distinct !DILexicalBlock(scope: !4038, file: !3, line: 1866, column: 7)
!4053 = !DILocation(line: 0, scope: !4038)
!4054 = !DILocation(line: 1831, column: 21, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4038, file: !3, line: 1831, column: 7)
!4056 = !DILocation(line: 1831, column: 7, scope: !4055)
!4057 = !DILocation(line: 1832, column: 7, scope: !4055)
!4058 = !DILocation(line: 1832, column: 10, scope: !4055)
!4059 = !DILocation(line: 1832, column: 52, scope: !4055)
!4060 = !DILocation(line: 1831, column: 7, scope: !4038)
!4061 = !DILocation(line: 1834, column: 24, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 1833, column: 5)
!4063 = !DILocation(line: 1835, column: 15, scope: !4062)
!4064 = !DILocation(line: 1836, column: 5, scope: !4062)
!4065 = !DILocation(line: 0, scope: !4055)
!4066 = !DILocation(line: 1844, column: 33, scope: !4038)
!4067 = !DILocation(line: 1844, column: 49, scope: !4038)
!4068 = !DILocation(line: 1844, column: 19, scope: !4038)
!4069 = !DILocation(line: 1847, column: 3, scope: !4038)
!4070 = !DILocation(line: 1850, column: 14, scope: !4038)
!4071 = !DILocation(line: 1852, column: 49, scope: !4038)
!4072 = !DILocation(line: 1853, column: 11, scope: !4038)
!4073 = !DILocation(line: 1852, column: 10, scope: !4038)
!4074 = !DILocation(line: 1856, column: 3, scope: !4038)
!4075 = !DILocation(line: 1856, column: 40, scope: !4038)
!4076 = !DILocation(line: 1857, column: 3, scope: !4038)
!4077 = !DILocation(line: 1857, column: 31, scope: !4038)
!4078 = !DILocation(line: 1861, column: 56, scope: !4038)
!4079 = !DILocation(line: 1861, column: 40, scope: !4038)
!4080 = !DILocation(line: 1862, column: 30, scope: !4038)
!4081 = !DILocation(line: 1862, column: 14, scope: !4038)
!4082 = !DILocation(line: 1861, column: 3, scope: !4038)
!4083 = !DILocation(line: 1861, column: 36, scope: !4038)
!4084 = !DILocation(line: 1866, column: 22, scope: !4052)
!4085 = !DILocation(line: 1866, column: 7, scope: !4038)
!4086 = !DILocation(line: 1870, column: 28, scope: !4051)
!4087 = !DILocation(line: 1870, column: 18, scope: !4051)
!4088 = !DILocation(line: 0, scope: !4051)
!4089 = !DILocation(line: 1871, column: 18, scope: !4051)
!4090 = !DILocation(line: 1873, column: 10, scope: !4051)
!4091 = !DILocation(line: 1874, column: 10, scope: !4051)
!4092 = !DILocation(line: 1875, column: 10, scope: !4051)
!4093 = !DILocation(line: 1872, column: 7, scope: !4051)
!4094 = !DILocation(line: 1876, column: 5, scope: !4051)
!4095 = !DILocation(line: 1885, column: 14, scope: !4038)
!4096 = !DILocation(line: 1886, column: 3, scope: !4038)
!4097 = !DILocation(line: 1888, column: 3, scope: !4038)
!4098 = distinct !DISubprogram(name: "need_nop_to_preserve_insn_bb", scope: !3, file: !3, line: 5909, type: !4099, scopeLine: 5910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4101)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!594, !607}
!4101 = !{!4102, !4103, !4104, !4105, !4106, !4107}
!4102 = !DILocalVariable(name: "insn", arg: 1, scope: !4098, file: !3, line: 5909, type: !607)
!4103 = !DILocalVariable(name: "bb_head", scope: !4098, file: !3, line: 5911, type: !1911)
!4104 = !DILocalVariable(name: "bb_end", scope: !4098, file: !3, line: 5911, type: !1911)
!4105 = !DILocalVariable(name: "bb_next", scope: !4098, file: !3, line: 5911, type: !1911)
!4106 = !DILocalVariable(name: "in_next", scope: !4098, file: !3, line: 5911, type: !1911)
!4107 = !DILocalVariable(name: "bb", scope: !4098, file: !3, line: 5912, type: !1141)
!4108 = !DILocation(line: 0, scope: !4098)
!4109 = !DILocation(line: 5912, column: 20, scope: !4098)
!4110 = !DILocation(line: 5914, column: 13, scope: !4098)
!4111 = !DILocation(line: 5915, column: 12, scope: !4098)
!4112 = !DILocation(line: 5917, column: 15, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 5917, column: 7)
!4114 = !DILocation(line: 5917, column: 7, scope: !4098)
!4115 = !DILocation(line: 5920, column: 3, scope: !4098)
!4116 = !DILocation(line: 5920, column: 18, scope: !4098)
!4117 = !DILocation(line: 5920, column: 28, scope: !4098)
!4118 = !DILocation(line: 5920, column: 31, scope: !4098)
!4119 = !DILocation(line: 5921, column: 15, scope: !4098)
!4120 = distinct !{!4120, !4115, !4119}
!4121 = !DILocation(line: 5923, column: 7, scope: !4098)
!4122 = !DILocation(line: 5926, column: 3, scope: !4098)
!4123 = !DILocation(line: 5926, column: 18, scope: !4098)
!4124 = !DILocation(line: 5926, column: 28, scope: !4098)
!4125 = !DILocation(line: 5926, column: 31, scope: !4098)
!4126 = !DILocation(line: 5927, column: 14, scope: !4098)
!4127 = distinct !{!4127, !4122, !4126}
!4128 = !DILocation(line: 5929, column: 7, scope: !4098)
!4129 = !DILocation(line: 5933, column: 3, scope: !4098)
!4130 = !DILocation(line: 5933, column: 18, scope: !4098)
!4131 = !DILocation(line: 5933, column: 28, scope: !4098)
!4132 = !DILocation(line: 5933, column: 31, scope: !4098)
!4133 = distinct !{!4133, !4129, !4134}
!4134 = !DILocation(line: 5934, column: 15, scope: !4098)
!4135 = !DILocation(line: 5936, column: 25, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 5936, column: 7)
!4137 = !DILocation(line: 5936, column: 28, scope: !4136)
!4138 = !DILocation(line: 5936, column: 7, scope: !4098)
!4139 = !DILocation(line: 5940, column: 3, scope: !4098)
!4140 = !DILocation(line: 5940, column: 10, scope: !4098)
!4141 = distinct !{!4141, !4139, !4142}
!4142 = !DILocation(line: 5941, column: 15, scope: !4098)
!4143 = !DILocation(line: 5943, column: 7, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 5943, column: 7)
!4145 = !DILocation(line: 5947, column: 1, scope: !4098)
!4146 = distinct !DISubprogram(name: "VEC_insn_t_heap_safe_push", scope: !3, file: !3, line: 529, type: !4147, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4151)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!4149, !4150, !1911}
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!4151 = !{!4152, !4153}
!4152 = !DILocalVariable(name: "vec_", arg: 1, scope: !4146, file: !3, line: 529, type: !4150)
!4153 = !DILocalVariable(name: "obj_", arg: 2, scope: !4146, file: !3, line: 529, type: !1911)
!4154 = !DILocation(line: 0, scope: !4146)
!4155 = !DILocation(line: 529, column: 1, scope: !4146)
!4156 = distinct !DISubprogram(name: "VEC_insn_t_heap_reserve", scope: !3, file: !3, line: 529, type: !4157, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4159)
!4157 = !DISubroutineType(types: !4158)
!4158 = !{!595, !4150, !595}
!4159 = !{!4160, !4161, !4162}
!4160 = !DILocalVariable(name: "vec_", arg: 1, scope: !4156, file: !3, line: 529, type: !4150)
!4161 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4156, file: !3, line: 529, type: !595)
!4162 = !DILocalVariable(name: "extend", scope: !4156, file: !3, line: 529, type: !595)
!4163 = !DILocation(line: 0, scope: !4156)
!4164 = !DILocation(line: 529, column: 1, scope: !4156)
!4165 = !DILocation(line: 529, column: 1, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 529, column: 1)
!4167 = distinct !DISubprogram(name: "VEC_insn_t_base_quick_push", scope: !3, file: !3, line: 528, type: !4168, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4171)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{!4149, !4170, !1911}
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!4171 = !{!4172, !4173, !4174}
!4172 = !DILocalVariable(name: "vec_", arg: 1, scope: !4167, file: !3, line: 528, type: !4170)
!4173 = !DILocalVariable(name: "obj_", arg: 2, scope: !4167, file: !3, line: 528, type: !1911)
!4174 = !DILocalVariable(name: "slot_", scope: !4167, file: !3, line: 528, type: !4149)
!4175 = !DILocation(line: 0, scope: !4167)
!4176 = !DILocation(line: 528, column: 1, scope: !4167)
!4177 = distinct !DISubprogram(name: "VEC_insn_t_base_space", scope: !3, file: !3, line: 528, type: !4178, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4180)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{!595, !4170, !595}
!4180 = !{!4181, !4182}
!4181 = !DILocalVariable(name: "vec_", arg: 1, scope: !4177, file: !3, line: 528, type: !4170)
!4182 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4177, file: !3, line: 528, type: !595)
!4183 = !DILocation(line: 0, scope: !4177)
!4184 = !DILocation(line: 528, column: 1, scope: !4177)
!4185 = distinct !DISubprogram(name: "moveup_expr_cached", scope: !3, file: !3, line: 2493, type: !4186, scopeLine: 2494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4188)
!4186 = !DISubroutineType(types: !4187)
!4187 = !{!556, !1834, !1911, !594}
!4188 = !{!4189, !4190, !4191, !4192, !4193, !4194, !4200, !4201, !4205, !4206, !4209, !4210, !4211, !4212, !4213, !4219, !4220, !4225, !4226, !4231, !4232, !4238, !4239, !4243}
!4189 = !DILocalVariable(name: "expr", arg: 1, scope: !4185, file: !3, line: 2493, type: !1834)
!4190 = !DILocalVariable(name: "insn", arg: 2, scope: !4185, file: !3, line: 2493, type: !1911)
!4191 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !4185, file: !3, line: 2493, type: !594)
!4192 = !DILocalVariable(name: "res", scope: !4185, file: !3, line: 2495, type: !556)
!4193 = !DILocalVariable(name: "got_answer", scope: !4185, file: !3, line: 2496, type: !594)
!4194 = !DILocalVariable(name: "__j", scope: !4195, file: !3, line: 2500, type: !595)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 2500, column: 7)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 2500, column: 7)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 2500, column: 7)
!4198 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 2499, column: 5)
!4199 = distinct !DILexicalBlock(scope: !4185, file: !3, line: 2498, column: 7)
!4200 = !DILocalVariable(name: "__s", scope: !4195, file: !3, line: 2500, type: !597)
!4201 = !DILocalVariable(name: "__j", scope: !4202, file: !3, line: 2502, type: !595)
!4202 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 2502, column: 7)
!4203 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 2502, column: 7)
!4204 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 2502, column: 7)
!4205 = !DILocalVariable(name: "__s", scope: !4202, file: !3, line: 2502, type: !597)
!4206 = !DILocalVariable(name: "expr_old_vinsn", scope: !4207, file: !3, line: 2520, type: !1840)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 2518, column: 5)
!4208 = distinct !DILexicalBlock(scope: !4185, file: !3, line: 2517, column: 7)
!4209 = !DILocalVariable(name: "expr_old_spec_ds", scope: !4207, file: !3, line: 2521, type: !1868)
!4210 = !DILocalVariable(name: "expr_uid", scope: !4207, file: !3, line: 2522, type: !595)
!4211 = !DILocalVariable(name: "unique_p", scope: !4207, file: !3, line: 2523, type: !594)
!4212 = !DILocalVariable(name: "trans_type", scope: !4207, file: !3, line: 2524, type: !397)
!4213 = !DILocalVariable(name: "__j", scope: !4214, file: !3, line: 2537, type: !595)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 2537, column: 13)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 2537, column: 13)
!4216 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 2537, column: 13)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 2536, column: 8)
!4218 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 2533, column: 9)
!4219 = !DILocalVariable(name: "__s", scope: !4214, file: !3, line: 2537, type: !597)
!4220 = !DILocalVariable(name: "__j", scope: !4221, file: !3, line: 2543, type: !595)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 2543, column: 13)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !3, line: 2543, column: 13)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 2543, column: 13)
!4224 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 2542, column: 15)
!4225 = !DILocalVariable(name: "__s", scope: !4221, file: !3, line: 2543, type: !597)
!4226 = !DILocalVariable(name: "__j", scope: !4227, file: !3, line: 2550, type: !595)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 2550, column: 13)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 2550, column: 13)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 2550, column: 13)
!4230 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 2549, column: 8)
!4231 = !DILocalVariable(name: "__s", scope: !4227, file: !3, line: 2550, type: !597)
!4232 = !DILocalVariable(name: "__j", scope: !4233, file: !3, line: 2564, type: !595)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 2564, column: 15)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 2564, column: 15)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 2564, column: 15)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 2563, column: 13)
!4237 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 2562, column: 15)
!4238 = !DILocalVariable(name: "__s", scope: !4233, file: !3, line: 2564, type: !597)
!4239 = !DILocalVariable(name: "__j", scope: !4240, file: !3, line: 2566, type: !595)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 2566, column: 15)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 2566, column: 15)
!4242 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 2566, column: 15)
!4243 = !DILocalVariable(name: "__s", scope: !4240, file: !3, line: 2566, type: !597)
!4244 = !DILocation(line: 0, scope: !4185)
!4245 = !DILocation(line: 2495, column: 3, scope: !4185)
!4246 = !DILocation(line: 2498, column: 7, scope: !4199)
!4247 = !DILocation(line: 2498, column: 21, scope: !4199)
!4248 = !DILocation(line: 2498, column: 7, scope: !4185)
!4249 = !DILocation(line: 2500, column: 7, scope: !4196)
!4250 = !DILocation(line: 2500, column: 7, scope: !4197)
!4251 = !DILocation(line: 2500, column: 7, scope: !4195)
!4252 = !DILocation(line: 0, scope: !4195)
!4253 = !DILocation(line: 2501, column: 7, scope: !4198)
!4254 = !DILocation(line: 2502, column: 7, scope: !4203)
!4255 = !DILocation(line: 2502, column: 7, scope: !4204)
!4256 = !DILocation(line: 2502, column: 7, scope: !4202)
!4257 = !DILocation(line: 0, scope: !4202)
!4258 = !DILocation(line: 2505, column: 7, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4185, file: !3, line: 2505, column: 7)
!4260 = !DILocation(line: 2506, column: 7, scope: !4259)
!4261 = !DILocation(line: 2506, column: 24, scope: !4259)
!4262 = !DILocation(line: 2506, column: 11, scope: !4259)
!4263 = !DILocation(line: 2507, column: 7, scope: !4259)
!4264 = !DILocation(line: 2507, column: 4, scope: !4259)
!4265 = !DILocation(line: 2505, column: 7, scope: !4185)
!4266 = !DILocation(line: 2510, column: 12, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 2510, column: 12)
!4268 = !DILocation(line: 2510, column: 12, scope: !4259)
!4269 = !DILocation(line: 2513, column: 5, scope: !4267)
!4270 = !DILocation(line: 2514, column: 12, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 2514, column: 12)
!4272 = !DILocation(line: 2517, column: 7, scope: !4185)
!4273 = !DILocation(line: 2520, column: 32, scope: !4207)
!4274 = !DILocation(line: 0, scope: !4207)
!4275 = !DILocation(line: 2521, column: 31, scope: !4207)
!4276 = !DILocation(line: 2522, column: 22, scope: !4207)
!4277 = !DILocation(line: 2523, column: 23, scope: !4207)
!4278 = !DILocation(line: 2524, column: 7, scope: !4207)
!4279 = !DILocation(line: 2524, column: 29, scope: !4207)
!4280 = !DILocation(line: 2528, column: 7, scope: !4207)
!4281 = !DILocation(line: 2530, column: 13, scope: !4207)
!4282 = !DILocation(line: 2530, column: 11, scope: !4207)
!4283 = !DILocation(line: 2532, column: 7, scope: !4207)
!4284 = !DILocation(line: 2535, column: 11, scope: !4218)
!4285 = !DILocation(line: 2536, column: 8, scope: !4217)
!4286 = !DILocation(line: 2536, column: 22, scope: !4217)
!4287 = !DILocation(line: 2536, column: 8, scope: !4218)
!4288 = !DILocation(line: 2537, column: 13, scope: !4215)
!4289 = !DILocation(line: 2537, column: 13, scope: !4216)
!4290 = !DILocation(line: 2537, column: 13, scope: !4214)
!4291 = !DILocation(line: 0, scope: !4214)
!4292 = !DILocation(line: 2541, column: 11, scope: !4218)
!4293 = !DILocation(line: 2542, column: 15, scope: !4224)
!4294 = !DILocation(line: 2542, column: 29, scope: !4224)
!4295 = !DILocation(line: 2542, column: 15, scope: !4218)
!4296 = !DILocation(line: 2543, column: 13, scope: !4222)
!4297 = !DILocation(line: 2543, column: 13, scope: !4223)
!4298 = !DILocation(line: 2543, column: 13, scope: !4221)
!4299 = !DILocation(line: 0, scope: !4221)
!4300 = !DILocation(line: 2547, column: 11, scope: !4218)
!4301 = !DILocation(line: 2548, column: 63, scope: !4218)
!4302 = !DILocation(line: 2548, column: 11, scope: !4218)
!4303 = !DILocation(line: 2549, column: 8, scope: !4230)
!4304 = !DILocation(line: 2549, column: 22, scope: !4230)
!4305 = !DILocation(line: 2549, column: 8, scope: !4218)
!4306 = !DILocation(line: 2550, column: 13, scope: !4228)
!4307 = !DILocation(line: 2550, column: 13, scope: !4229)
!4308 = !DILocation(line: 2550, column: 13, scope: !4227)
!4309 = !DILocation(line: 0, scope: !4227)
!4310 = !DILocation(line: 2554, column: 11, scope: !4218)
!4311 = !DILocation(line: 2558, column: 51, scope: !4218)
!4312 = !DILocation(line: 2556, column: 36, scope: !4218)
!4313 = !DILocation(line: 2557, column: 35, scope: !4218)
!4314 = !DILocation(line: 2557, column: 52, scope: !4218)
!4315 = !DILocation(line: 2556, column: 11, scope: !4218)
!4316 = !DILocation(line: 2561, column: 40, scope: !4218)
!4317 = !DILocation(line: 2560, column: 11, scope: !4218)
!4318 = !DILocation(line: 2562, column: 15, scope: !4237)
!4319 = !DILocation(line: 2562, column: 29, scope: !4237)
!4320 = !DILocation(line: 2562, column: 15, scope: !4218)
!4321 = !DILocation(line: 2564, column: 15, scope: !4234)
!4322 = !DILocation(line: 2564, column: 15, scope: !4235)
!4323 = !DILocation(line: 2564, column: 15, scope: !4233)
!4324 = !DILocation(line: 0, scope: !4233)
!4325 = !DILocation(line: 2565, column: 15, scope: !4236)
!4326 = !DILocation(line: 2566, column: 15, scope: !4241)
!4327 = !DILocation(line: 2566, column: 15, scope: !4242)
!4328 = !DILocation(line: 2566, column: 15, scope: !4240)
!4329 = !DILocation(line: 0, scope: !4240)
!4330 = !DILocation(line: 2570, column: 4, scope: !4218)
!4331 = !DILocation(line: 2571, column: 9, scope: !4218)
!4332 = !DILocation(line: 2573, column: 7, scope: !4207)
!4333 = !DILocation(line: 2574, column: 5, scope: !4208)
!4334 = !DILocation(line: 2574, column: 5, scope: !4207)
!4335 = !DILocation(line: 2576, column: 10, scope: !4185)
!4336 = !DILocation(line: 2577, column: 1, scope: !4185)
!4337 = !DILocation(line: 2576, column: 3, scope: !4185)
!4338 = distinct !DISubprogram(name: "update_liveness_on_insn", scope: !3, file: !3, line: 3139, type: !3806, scopeLine: 3140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4339)
!4339 = !{!4340}
!4340 = !DILocalVariable(name: "insn", arg: 1, scope: !4338, file: !3, line: 3139, type: !607)
!4341 = !DILocation(line: 0, scope: !4338)
!4342 = !DILocation(line: 3141, column: 16, scope: !4338)
!4343 = !DILocation(line: 3142, column: 3, scope: !4338)
!4344 = !DILocation(line: 3143, column: 1, scope: !4338)
!4345 = distinct !DISubprogram(name: "try_bitmap_cache", scope: !3, file: !3, line: 2325, type: !4346, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4349)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!594, !1834, !1911, !594, !4348}
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!4349 = !{!4350, !4351, !4352, !4353, !4354, !4355, !4364, !4365, !4371, !4372, !4381, !4382, !4389, !4390, !4396}
!4350 = !DILocalVariable(name: "expr", arg: 1, scope: !4345, file: !3, line: 2325, type: !1834)
!4351 = !DILocalVariable(name: "insn", arg: 2, scope: !4345, file: !3, line: 2325, type: !1911)
!4352 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !4345, file: !3, line: 2326, type: !594)
!4353 = !DILocalVariable(name: "res", arg: 4, scope: !4345, file: !3, line: 2327, type: !4348)
!4354 = !DILocalVariable(name: "expr_uid", scope: !4345, file: !3, line: 2329, type: !595)
!4355 = !DILocalVariable(name: "__j", scope: !4356, file: !3, line: 2337, type: !595)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 2337, column: 13)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 2337, column: 13)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 2337, column: 13)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 2336, column: 15)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 2335, column: 9)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 2334, column: 11)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 2333, column: 5)
!4363 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 2332, column: 7)
!4364 = !DILocalVariable(name: "__s", scope: !4356, file: !3, line: 2337, type: !597)
!4365 = !DILocalVariable(name: "__j", scope: !4366, file: !3, line: 2344, type: !595)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 2344, column: 13)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 2344, column: 13)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 2344, column: 13)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 2343, column: 15)
!4370 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 2342, column: 9)
!4371 = !DILocalVariable(name: "__s", scope: !4366, file: !3, line: 2344, type: !597)
!4372 = !DILocalVariable(name: "__j", scope: !4373, file: !3, line: 2354, type: !595)
!4373 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 2354, column: 13)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 2354, column: 13)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 2354, column: 13)
!4376 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 2353, column: 15)
!4377 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 2352, column: 9)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 2351, column: 11)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 2350, column: 5)
!4380 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 2349, column: 12)
!4381 = !DILocalVariable(name: "__s", scope: !4373, file: !3, line: 2354, type: !597)
!4382 = !DILocalVariable(name: "__j", scope: !4383, file: !3, line: 2368, type: !595)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 2368, column: 13)
!4384 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 2368, column: 13)
!4385 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 2368, column: 13)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 2367, column: 15)
!4387 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 2366, column: 9)
!4388 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 2365, column: 11)
!4389 = !DILocalVariable(name: "__s", scope: !4383, file: !3, line: 2368, type: !597)
!4390 = !DILocalVariable(name: "__j", scope: !4391, file: !3, line: 2375, type: !595)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 2375, column: 13)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 2375, column: 13)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 2375, column: 13)
!4394 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 2374, column: 15)
!4395 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 2373, column: 9)
!4396 = !DILocalVariable(name: "__s", scope: !4391, file: !3, line: 2375, type: !597)
!4397 = !DILocation(line: 0, scope: !4345)
!4398 = !DILocation(line: 2329, column: 18, scope: !4345)
!4399 = !DILocation(line: 2332, column: 21, scope: !4363)
!4400 = !DILocation(line: 2332, column: 7, scope: !4363)
!4401 = !DILocation(line: 0, scope: !4363)
!4402 = !DILocation(line: 2332, column: 7, scope: !4345)
!4403 = !DILocation(line: 0, scope: !4361)
!4404 = !DILocation(line: 2334, column: 11, scope: !4362)
!4405 = !DILocation(line: 2336, column: 15, scope: !4360)
!4406 = !DILocation(line: 2337, column: 13, scope: !4357)
!4407 = !DILocation(line: 2337, column: 13, scope: !4358)
!4408 = !DILocation(line: 2337, column: 13, scope: !4356)
!4409 = !DILocation(line: 0, scope: !4356)
!4410 = !DILocation(line: 2338, column: 16, scope: !4360)
!4411 = !DILocation(line: 2339, column: 11, scope: !4360)
!4412 = !DILocation(line: 2343, column: 15, scope: !4370)
!4413 = !DILocation(line: 2344, column: 13, scope: !4367)
!4414 = !DILocation(line: 2344, column: 13, scope: !4368)
!4415 = !DILocation(line: 2344, column: 13, scope: !4366)
!4416 = !DILocation(line: 0, scope: !4366)
!4417 = !DILocation(line: 2345, column: 16, scope: !4370)
!4418 = !DILocation(line: 2346, column: 11, scope: !4370)
!4419 = !DILocation(line: 2349, column: 12, scope: !4363)
!4420 = !DILocation(line: 2360, column: 9, scope: !4378)
!4421 = !DILocation(line: 2360, column: 38, scope: !4378)
!4422 = !DILocation(line: 2365, column: 11, scope: !4388)
!4423 = !DILocation(line: 0, scope: !4388)
!4424 = !DILocation(line: 2365, column: 11, scope: !4379)
!4425 = !DILocation(line: 2367, column: 15, scope: !4387)
!4426 = !DILocation(line: 2368, column: 13, scope: !4384)
!4427 = !DILocation(line: 2368, column: 13, scope: !4385)
!4428 = !DILocation(line: 2368, column: 13, scope: !4383)
!4429 = !DILocation(line: 0, scope: !4383)
!4430 = !DILocation(line: 2369, column: 16, scope: !4387)
!4431 = !DILocation(line: 2370, column: 11, scope: !4387)
!4432 = !DILocation(line: 2374, column: 15, scope: !4395)
!4433 = !DILocation(line: 2375, column: 13, scope: !4392)
!4434 = !DILocation(line: 2375, column: 13, scope: !4393)
!4435 = !DILocation(line: 2375, column: 13, scope: !4391)
!4436 = !DILocation(line: 0, scope: !4391)
!4437 = !DILocation(line: 2377, column: 16, scope: !4395)
!4438 = !DILocation(line: 2378, column: 11, scope: !4395)
!4439 = !DILocation(line: 2383, column: 1, scope: !4345)
!4440 = distinct !DISubprogram(name: "try_transformation_cache", scope: !3, file: !3, line: 2388, type: !4441, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4443)
!4441 = !DISubroutineType(types: !4442)
!4442 = !{!594, !1834, !1911, !4348}
!4443 = !{!4444, !4445, !4446, !4447, !4448, !4456, !4457, !4461}
!4444 = !DILocalVariable(name: "expr", arg: 1, scope: !4440, file: !3, line: 2388, type: !1834)
!4445 = !DILocalVariable(name: "insn", arg: 2, scope: !4440, file: !3, line: 2388, type: !1911)
!4446 = !DILocalVariable(name: "res", arg: 3, scope: !4440, file: !3, line: 2389, type: !4348)
!4447 = !DILocalVariable(name: "pti", scope: !4440, file: !3, line: 2391, type: !1912)
!4448 = !DILocalVariable(name: "__j", scope: !4449, file: !3, line: 2419, type: !595)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 2419, column: 11)
!4450 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 2419, column: 11)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 2419, column: 11)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 2418, column: 9)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 2417, column: 11)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 2397, column: 5)
!4455 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 2396, column: 7)
!4456 = !DILocalVariable(name: "__s", scope: !4449, file: !3, line: 2419, type: !597)
!4457 = !DILocalVariable(name: "__j", scope: !4458, file: !3, line: 2421, type: !595)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 2421, column: 11)
!4459 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 2421, column: 11)
!4460 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 2421, column: 11)
!4461 = !DILocalVariable(name: "__s", scope: !4458, file: !3, line: 2421, type: !597)
!4462 = !DILocation(line: 0, scope: !4440)
!4463 = !DILocation(line: 2393, column: 26, scope: !4440)
!4464 = !DILocation(line: 2394, column: 26, scope: !4440)
!4465 = !DILocation(line: 2395, column: 26, scope: !4440)
!4466 = !DILocation(line: 2393, column: 5, scope: !4440)
!4467 = !DILocation(line: 2396, column: 7, scope: !4455)
!4468 = !DILocation(line: 2396, column: 7, scope: !4440)
!4469 = !DILocation(line: 2401, column: 32, scope: !4454)
!4470 = !DILocation(line: 2402, column: 31, scope: !4454)
!4471 = !DILocation(line: 2402, column: 53, scope: !4454)
!4472 = !DILocation(line: 2403, column: 36, scope: !4454)
!4473 = !DILocation(line: 2403, column: 52, scope: !4454)
!4474 = !DILocation(line: 2404, column: 31, scope: !4454)
!4475 = !DILocation(line: 2401, column: 7, scope: !4454)
!4476 = !DILocation(line: 2406, column: 11, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 2406, column: 11)
!4478 = !DILocation(line: 2406, column: 11, scope: !4454)
!4479 = !DILocation(line: 2407, column: 26, scope: !4477)
!4480 = !DILocation(line: 2407, column: 24, scope: !4477)
!4481 = !DILocation(line: 2407, column: 9, scope: !4477)
!4482 = !DILocation(line: 2408, column: 40, scope: !4454)
!4483 = !DILocation(line: 2408, column: 7, scope: !4454)
!4484 = !DILocation(line: 2409, column: 16, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 2409, column: 11)
!4486 = !DILocation(line: 2409, column: 11, scope: !4485)
!4487 = !DILocation(line: 2409, column: 11, scope: !4454)
!4488 = !DILocation(line: 2410, column: 9, scope: !4485)
!4489 = !DILocation(line: 2410, column: 38, scope: !4485)
!4490 = !DILocation(line: 2411, column: 16, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 2411, column: 11)
!4492 = !DILocation(line: 2411, column: 21, scope: !4491)
!4493 = !DILocation(line: 2411, column: 11, scope: !4454)
!4494 = !DILocation(line: 2413, column: 43, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 2412, column: 9)
!4496 = !DILocation(line: 2413, column: 36, scope: !4495)
!4497 = !DILocation(line: 2414, column: 50, scope: !4495)
!4498 = !DILocation(line: 2414, column: 11, scope: !4495)
!4499 = !DILocation(line: 2414, column: 42, scope: !4495)
!4500 = !DILocation(line: 2415, column: 9, scope: !4495)
!4501 = !DILocation(line: 2417, column: 11, scope: !4453)
!4502 = !DILocation(line: 2417, column: 25, scope: !4453)
!4503 = !DILocation(line: 2417, column: 11, scope: !4454)
!4504 = !DILocation(line: 2419, column: 11, scope: !4450)
!4505 = !DILocation(line: 2419, column: 11, scope: !4451)
!4506 = !DILocation(line: 2419, column: 11, scope: !4449)
!4507 = !DILocation(line: 0, scope: !4449)
!4508 = !DILocation(line: 2420, column: 11, scope: !4452)
!4509 = !DILocation(line: 2421, column: 11, scope: !4459)
!4510 = !DILocation(line: 2421, column: 11, scope: !4460)
!4511 = !DILocation(line: 2421, column: 11, scope: !4458)
!4512 = !DILocation(line: 0, scope: !4458)
!4513 = !DILocation(line: 2424, column: 12, scope: !4454)
!4514 = !DILocation(line: 2425, column: 7, scope: !4454)
!4515 = !DILocation(line: 2429, column: 1, scope: !4440)
!4516 = distinct !DISubprogram(name: "moveup_expr", scope: !3, file: !3, line: 2129, type: !4517, scopeLine: 2131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4520)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!556, !1834, !1911, !594, !4519}
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!4520 = !{!4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4531, !4532, !4537, !4540, !4543}
!4521 = !DILocalVariable(name: "expr", arg: 1, scope: !4516, file: !3, line: 2129, type: !1834)
!4522 = !DILocalVariable(name: "through_insn", arg: 2, scope: !4516, file: !3, line: 2129, type: !1911)
!4523 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !4516, file: !3, line: 2129, type: !594)
!4524 = !DILocalVariable(name: "ptrans_type", arg: 4, scope: !4516, file: !3, line: 2130, type: !4519)
!4525 = !DILocalVariable(name: "vi", scope: !4516, file: !3, line: 2132, type: !1840)
!4526 = !DILocalVariable(name: "insn", scope: !4516, file: !3, line: 2133, type: !1911)
!4527 = !DILocalVariable(name: "was_changed", scope: !4516, file: !3, line: 2134, type: !594)
!4528 = !DILocalVariable(name: "as_rhs", scope: !4516, file: !3, line: 2135, type: !594)
!4529 = !DILocalVariable(name: "has_dep_p", scope: !4516, file: !3, line: 2136, type: !4530)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!4531 = !DILocalVariable(name: "full_ds", scope: !4516, file: !3, line: 2137, type: !1868)
!4532 = !DILocalVariable(name: "fallthru_bb", scope: !4533, file: !3, line: 2151, type: !1141)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2150, column: 9)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 2149, column: 11)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 2145, column: 5)
!4536 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 2144, column: 7)
!4537 = !DILocalVariable(name: "res", scope: !4538, file: !3, line: 2218, type: !595)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 2217, column: 5)
!4539 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 2216, column: 7)
!4540 = !DILocalVariable(name: "rhs_dsp", scope: !4541, file: !3, line: 2268, type: !4530)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 2267, column: 5)
!4542 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 2266, column: 7)
!4543 = !DILocalVariable(name: "res", scope: !4544, file: !3, line: 2275, type: !595)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 2274, column: 2)
!4545 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 2273, column: 11)
!4546 = !DILocation(line: 0, scope: !4516)
!4547 = !DILocation(line: 2132, column: 16, scope: !4516)
!4548 = !DILocation(line: 2133, column: 17, scope: !4516)
!4549 = !DILocation(line: 2136, column: 3, scope: !4516)
!4550 = !DILocation(line: 2144, column: 7, scope: !4536)
!4551 = !DILocation(line: 2144, column: 7, scope: !4516)
!4552 = !DILocation(line: 2149, column: 11, scope: !4534)
!4553 = !DILocation(line: 2149, column: 11, scope: !4535)
!4554 = !DILocation(line: 2155, column: 15, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 2155, column: 15)
!4556 = !DILocation(line: 2156, column: 15, scope: !4555)
!4557 = !DILocation(line: 2156, column: 18, scope: !4555)
!4558 = !DILocation(line: 2155, column: 15, scope: !4533)
!4559 = !DILocation(line: 2160, column: 15, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 2160, column: 15)
!4561 = !DILocation(line: 2160, column: 15, scope: !4533)
!4562 = !DILocation(line: 2165, column: 30, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 2165, column: 15)
!4564 = !DILocation(line: 0, scope: !4533)
!4565 = !DILocation(line: 2165, column: 58, scope: !4563)
!4566 = !DILocation(line: 2166, column: 15, scope: !4563)
!4567 = !DILocation(line: 2166, column: 20, scope: !4563)
!4568 = !DILocation(line: 2165, column: 15, scope: !4533)
!4569 = !DILocation(line: 2171, column: 17, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 2171, column: 15)
!4571 = !DILocation(line: 2172, column: 15, scope: !4570)
!4572 = !DILocation(line: 2172, column: 20, scope: !4570)
!4573 = !DILocation(line: 2173, column: 8, scope: !4570)
!4574 = !DILocation(line: 2173, column: 13, scope: !4570)
!4575 = !DILocation(line: 2171, column: 15, scope: !4533)
!4576 = !DILocation(line: 2175, column: 9, scope: !4534)
!4577 = !DILocation(line: 2178, column: 11, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 2178, column: 11)
!4579 = !DILocation(line: 2179, column: 4, scope: !4578)
!4580 = !DILocation(line: 2179, column: 7, scope: !4578)
!4581 = !DILocation(line: 2179, column: 40, scope: !4578)
!4582 = !DILocation(line: 2179, column: 37, scope: !4578)
!4583 = !DILocation(line: 2178, column: 11, scope: !4535)
!4584 = !DILocation(line: 2188, column: 11, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 2188, column: 11)
!4586 = !DILocation(line: 2188, column: 11, scope: !4535)
!4587 = !DILocation(line: 2192, column: 5, scope: !4536)
!4588 = !DILocation(line: 2195, column: 7, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 2195, column: 7)
!4590 = !DILocation(line: 2196, column: 7, scope: !4589)
!4591 = !DILocation(line: 2196, column: 10, scope: !4589)
!4592 = !DILocation(line: 2196, column: 43, scope: !4589)
!4593 = !DILocation(line: 2196, column: 40, scope: !4589)
!4594 = !DILocation(line: 2197, column: 7, scope: !4589)
!4595 = !DILocation(line: 2197, column: 10, scope: !4589)
!4596 = !DILocation(line: 2195, column: 7, scope: !4516)
!4597 = !DILocation(line: 2201, column: 23, scope: !4516)
!4598 = !DILocation(line: 2202, column: 13, scope: !4516)
!4599 = !DILocation(line: 2203, column: 15, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 2203, column: 7)
!4601 = !DILocation(line: 2203, column: 7, scope: !4516)
!4602 = !DILocation(line: 2205, column: 12, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2205, column: 11)
!4604 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 2204, column: 5)
!4605 = !DILocation(line: 2205, column: 11, scope: !4604)
!4606 = !DILocation(line: 2212, column: 11, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2212, column: 11)
!4608 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 2209, column: 5)
!4609 = !DILocation(line: 2212, column: 11, scope: !4608)
!4610 = !DILocation(line: 2216, column: 20, scope: !4539)
!4611 = !DILocation(line: 2216, column: 23, scope: !4539)
!4612 = !DILocation(line: 2216, column: 7, scope: !4516)
!4613 = !DILocation(line: 2220, column: 13, scope: !4538)
!4614 = !DILocation(line: 0, scope: !4538)
!4615 = !DILocation(line: 2221, column: 15, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 2221, column: 11)
!4617 = !DILocation(line: 2221, column: 11, scope: !4538)
!4618 = !DILocation(line: 2225, column: 30, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 2222, column: 2)
!4620 = !DILocation(line: 2225, column: 25, scope: !4619)
!4621 = !DILocation(line: 2226, column: 19, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 2226, column: 15)
!4623 = !DILocation(line: 2226, column: 15, scope: !4619)
!4624 = !DILocation(line: 2227, column: 33, scope: !4622)
!4625 = !DILocation(line: 2227, column: 13, scope: !4622)
!4626 = !DILocation(line: 2228, column: 15, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 2228, column: 15)
!4628 = !DILocation(line: 2228, column: 15, scope: !4619)
!4629 = !DILocation(line: 2229, column: 26, scope: !4627)
!4630 = !DILocation(line: 2229, column: 13, scope: !4627)
!4631 = !DILocation(line: 2230, column: 4, scope: !4619)
!4632 = !DILocation(line: 2231, column: 2, scope: !4619)
!4633 = !DILocation(line: 2234, column: 7, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 2234, column: 7)
!4635 = !DILocation(line: 2234, column: 7, scope: !4516)
!4636 = !DILocation(line: 2238, column: 7, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 2238, column: 7)
!4638 = !DILocation(line: 2238, column: 7, scope: !4516)
!4639 = !DILocation(line: 2243, column: 12, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 2243, column: 11)
!4641 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 2239, column: 5)
!4642 = !DILocation(line: 2243, column: 37, scope: !4640)
!4643 = !DILocation(line: 2243, column: 41, scope: !4640)
!4644 = !DILocation(line: 2243, column: 11, scope: !4641)
!4645 = !DILocation(line: 2246, column: 7, scope: !4641)
!4646 = !DILocation(line: 2246, column: 36, scope: !4641)
!4647 = !DILocation(line: 2247, column: 27, scope: !4641)
!4648 = !DILocation(line: 2249, column: 5, scope: !4641)
!4649 = !DILocation(line: 2266, column: 7, scope: !4542)
!4650 = !DILocation(line: 2266, column: 7, scope: !4516)
!4651 = !DILocation(line: 0, scope: !4541)
!4652 = !DILocation(line: 2271, column: 7, scope: !4541)
!4653 = !DILocation(line: 2273, column: 32, scope: !4545)
!4654 = !DILocation(line: 2273, column: 11, scope: !4545)
!4655 = !DILocation(line: 0, scope: !4545)
!4656 = !DILocation(line: 2273, column: 11, scope: !4541)
!4657 = !DILocation(line: 2277, column: 17, scope: !4544)
!4658 = !DILocation(line: 0, scope: !4544)
!4659 = !DILocation(line: 2278, column: 19, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 2278, column: 15)
!4661 = !DILocation(line: 2278, column: 15, scope: !4544)
!4662 = !DILocation(line: 2281, column: 24, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 2279, column: 13)
!4664 = !DILocation(line: 2282, column: 34, scope: !4663)
!4665 = !DILocation(line: 2282, column: 29, scope: !4663)
!4666 = !DILocation(line: 2283, column: 23, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 2283, column: 19)
!4668 = !DILocation(line: 2283, column: 19, scope: !4663)
!4669 = !DILocation(line: 2284, column: 37, scope: !4667)
!4670 = !DILocation(line: 2284, column: 17, scope: !4667)
!4671 = !DILocation(line: 2285, column: 19, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 2285, column: 19)
!4673 = !DILocation(line: 2285, column: 19, scope: !4663)
!4674 = !DILocation(line: 2286, column: 30, scope: !4672)
!4675 = !DILocation(line: 2286, column: 17, scope: !4672)
!4676 = !DILocation(line: 2291, column: 16, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 2291, column: 16)
!4678 = !DILocation(line: 2293, column: 16, scope: !4677)
!4679 = !DILocation(line: 2293, column: 19, scope: !4677)
!4680 = !DILocation(line: 2291, column: 16, scope: !4545)
!4681 = !DILocation(line: 2297, column: 11, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 2294, column: 2)
!4683 = !DILocation(line: 2299, column: 15, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 2299, column: 15)
!4685 = !DILocation(line: 2299, column: 15, scope: !4682)
!4686 = !DILocation(line: 2300, column: 26, scope: !4684)
!4687 = !DILocation(line: 2300, column: 13, scope: !4684)
!4688 = !DILocation(line: 2301, column: 11, scope: !4682)
!4689 = !DILocation(line: 2301, column: 39, scope: !4682)
!4690 = !DILocation(line: 2305, column: 5, scope: !4542)
!4691 = !DILocation(line: 2310, column: 7, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 2310, column: 7)
!4693 = !DILocation(line: 2310, column: 7, scope: !4516)
!4694 = !DILocation(line: 2313, column: 11, scope: !4516)
!4695 = !DILocation(line: 2318, column: 1, scope: !4516)
!4696 = distinct !DISubprogram(name: "update_bitmap_cache", scope: !3, file: !3, line: 2433, type: !4697, scopeLine: 2435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4699)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{null, !1834, !1911, !594, !556}
!4699 = !{!4700, !4701, !4702, !4703, !4704}
!4700 = !DILocalVariable(name: "expr", arg: 1, scope: !4696, file: !3, line: 2433, type: !1834)
!4701 = !DILocalVariable(name: "insn", arg: 2, scope: !4696, file: !3, line: 2433, type: !1911)
!4702 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !4696, file: !3, line: 2433, type: !594)
!4703 = !DILocalVariable(name: "res", arg: 4, scope: !4696, file: !3, line: 2434, type: !556)
!4704 = !DILocalVariable(name: "expr_uid", scope: !4696, file: !3, line: 2436, type: !595)
!4705 = !DILocation(line: 0, scope: !4696)
!4706 = !DILocation(line: 2436, column: 18, scope: !4696)
!4707 = !DILocation(line: 2440, column: 7, scope: !4696)
!4708 = !DILocation(line: 2443, column: 7, scope: !4696)
!4709 = !DILocation(line: 2445, column: 23, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 2444, column: 5)
!4711 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 2443, column: 7)
!4712 = !DILocation(line: 2445, column: 7, scope: !4710)
!4713 = !DILocation(line: 2446, column: 23, scope: !4710)
!4714 = !DILocation(line: 2446, column: 7, scope: !4710)
!4715 = !DILocation(line: 2447, column: 5, scope: !4710)
!4716 = !DILocation(line: 2450, column: 23, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 2449, column: 5)
!4718 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 2448, column: 12)
!4719 = !DILocation(line: 2450, column: 7, scope: !4717)
!4720 = !DILocation(line: 2451, column: 25, scope: !4717)
!4721 = !DILocation(line: 2451, column: 7, scope: !4717)
!4722 = !DILocation(line: 2452, column: 5, scope: !4717)
!4723 = !DILocation(line: 2455, column: 25, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 2454, column: 5)
!4725 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 2453, column: 12)
!4726 = !DILocation(line: 2455, column: 7, scope: !4724)
!4727 = !DILocation(line: 2456, column: 23, scope: !4724)
!4728 = !DILocation(line: 2456, column: 7, scope: !4724)
!4729 = !DILocation(line: 2457, column: 5, scope: !4724)
!4730 = !DILocation(line: 2459, column: 5, scope: !4725)
!4731 = !DILocation(line: 2460, column: 1, scope: !4696)
!4732 = distinct !DISubprogram(name: "update_transformation_cache", scope: !3, file: !3, line: 2465, type: !4733, scopeLine: 2469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4735)
!4733 = !DISubroutineType(types: !4734)
!4734 = !{null, !1834, !1911, !594, !397, !1840}
!4735 = !{!4736, !4737, !4738, !4739, !4740, !4741}
!4736 = !DILocalVariable(name: "expr", arg: 1, scope: !4732, file: !3, line: 2465, type: !1834)
!4737 = !DILocalVariable(name: "insn", arg: 2, scope: !4732, file: !3, line: 2465, type: !1911)
!4738 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !4732, file: !3, line: 2466, type: !594)
!4739 = !DILocalVariable(name: "trans_type", arg: 4, scope: !4732, file: !3, line: 2467, type: !397)
!4740 = !DILocalVariable(name: "expr_old_vinsn", arg: 5, scope: !4732, file: !3, line: 2468, type: !1840)
!4741 = !DILocalVariable(name: "pti", scope: !4732, file: !3, line: 2470, type: !1912)
!4742 = !DILocation(line: 0, scope: !4732)
!4743 = !DILocation(line: 2472, column: 7, scope: !4732)
!4744 = !DILocation(line: 2475, column: 9, scope: !4732)
!4745 = !DILocation(line: 2476, column: 8, scope: !4732)
!4746 = !DILocation(line: 2476, column: 18, scope: !4732)
!4747 = !DILocation(line: 2477, column: 20, scope: !4732)
!4748 = !DILocation(line: 2477, column: 8, scope: !4732)
!4749 = !DILocation(line: 2477, column: 18, scope: !4732)
!4750 = !DILocation(line: 2478, column: 8, scope: !4732)
!4751 = !DILocation(line: 2478, column: 13, scope: !4732)
!4752 = !DILocation(line: 2479, column: 30, scope: !4732)
!4753 = !DILocation(line: 2479, column: 8, scope: !4732)
!4754 = !DILocation(line: 2479, column: 28, scope: !4732)
!4755 = !DILocation(line: 2480, column: 13, scope: !4732)
!4756 = !DILocation(line: 2480, column: 8, scope: !4732)
!4757 = !DILocation(line: 2480, column: 11, scope: !4732)
!4758 = !DILocation(line: 2481, column: 22, scope: !4732)
!4759 = !DILocation(line: 2481, column: 20, scope: !4732)
!4760 = !DILocation(line: 2482, column: 3, scope: !4732)
!4761 = !DILocation(line: 2483, column: 22, scope: !4732)
!4762 = !DILocation(line: 2483, column: 3, scope: !4732)
!4763 = !DILocation(line: 2485, column: 31, scope: !4732)
!4764 = !DILocation(line: 2486, column: 36, scope: !4732)
!4765 = !DILocation(line: 2485, column: 5, scope: !4732)
!4766 = !DILocation(line: 2487, column: 40, scope: !4732)
!4767 = !DILocation(line: 2488, column: 1, scope: !4732)
!4768 = distinct !DISubprogram(name: "moveup_expr_inside_insn_group", scope: !3, file: !3, line: 2019, type: !4769, scopeLine: 2020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4771)
!4769 = !DISubroutineType(types: !4770)
!4770 = !{!556, !1834, !1911}
!4771 = !{!4772, !4773, !4774, !4775, !4776}
!4772 = !DILocalVariable(name: "expr", arg: 1, scope: !4768, file: !3, line: 2019, type: !1834)
!4773 = !DILocalVariable(name: "through_insn", arg: 2, scope: !4768, file: !3, line: 2019, type: !1911)
!4774 = !DILocalVariable(name: "vi", scope: !4768, file: !3, line: 2021, type: !1840)
!4775 = !DILocalVariable(name: "has_dep_p", scope: !4768, file: !3, line: 2022, type: !4530)
!4776 = !DILocalVariable(name: "full_ds", scope: !4768, file: !3, line: 2023, type: !1868)
!4777 = distinct !DISubprogram(name: "moving_insn_creates_bookkeeping_block_p", scope: !3, file: !3, line: 2077, type: !4778, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4780)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!594, !1911, !1911}
!4780 = !{!4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4796, !4797, !4804, !4805, !4818, !4819, !4824}
!4781 = !DILocalVariable(name: "insn", arg: 1, scope: !4777, file: !3, line: 2077, type: !1911)
!4782 = !DILocalVariable(name: "through_insn", arg: 2, scope: !4777, file: !3, line: 2078, type: !1911)
!4783 = !DILocalVariable(name: "bbi", scope: !4777, file: !3, line: 2080, type: !1141)
!4784 = !DILocalVariable(name: "bbt", scope: !4777, file: !3, line: 2080, type: !1141)
!4785 = !DILocalVariable(name: "e1", scope: !4777, file: !3, line: 2081, type: !1158)
!4786 = !DILocalVariable(name: "e2", scope: !4777, file: !3, line: 2081, type: !1158)
!4787 = !DILocalVariable(name: "ei1", scope: !4777, file: !3, line: 2082, type: !2985)
!4788 = !DILocalVariable(name: "ei2", scope: !4777, file: !3, line: 2082, type: !2985)
!4789 = !DILocalVariable(name: "__j", scope: !4790, file: !3, line: 2087, type: !595)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 2087, column: 2)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 2087, column: 2)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !3, line: 2087, column: 2)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 2086, column: 11)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2085, column: 5)
!4795 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2084, column: 7)
!4796 = !DILocalVariable(name: "__s", scope: !4790, file: !3, line: 2087, type: !597)
!4797 = !DILocalVariable(name: "__j", scope: !4798, file: !3, line: 2096, type: !595)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2096, column: 2)
!4799 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 2096, column: 2)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 2096, column: 2)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 2095, column: 11)
!4802 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 2094, column: 5)
!4803 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2093, column: 7)
!4804 = !DILocalVariable(name: "__s", scope: !4798, file: !3, line: 2096, type: !597)
!4805 = !DILocalVariable(name: "__j", scope: !4806, file: !3, line: 2109, type: !595)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 2109, column: 3)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 2109, column: 3)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 2109, column: 3)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 2108, column: 12)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 2107, column: 6)
!4811 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 2106, column: 8)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 2105, column: 2)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 2104, column: 7)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !3, line: 2104, column: 7)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 2103, column: 5)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 2102, column: 3)
!4817 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2102, column: 3)
!4818 = !DILocalVariable(name: "__s", scope: !4806, file: !3, line: 2109, type: !597)
!4819 = !DILocalVariable(name: "__j", scope: !4820, file: !3, line: 2116, type: !595)
!4820 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 2116, column: 5)
!4821 = distinct !DILexicalBlock(scope: !4822, file: !3, line: 2116, column: 5)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 2116, column: 5)
!4823 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2115, column: 7)
!4824 = !DILocalVariable(name: "__s", scope: !4820, file: !3, line: 2116, type: !597)
!4825 = !DILocation(line: 0, scope: !4777)
!4826 = !DILocation(line: 2081, column: 3, scope: !4777)
!4827 = !DILocation(line: 2082, column: 3, scope: !4777)
!4828 = !DILocation(line: 2084, column: 8, scope: !4795)
!4829 = !DILocation(line: 2084, column: 7, scope: !4777)
!4830 = !DILocation(line: 2086, column: 11, scope: !4793)
!4831 = !DILocation(line: 2086, column: 25, scope: !4793)
!4832 = !DILocation(line: 2086, column: 11, scope: !4794)
!4833 = !DILocation(line: 2087, column: 2, scope: !4791)
!4834 = !DILocation(line: 2087, column: 2, scope: !4792)
!4835 = !DILocation(line: 2087, column: 2, scope: !4790)
!4836 = !DILocation(line: 0, scope: !4790)
!4837 = !DILocation(line: 2091, column: 9, scope: !4777)
!4838 = !DILocation(line: 2093, column: 7, scope: !4803)
!4839 = !DILocation(line: 2093, column: 31, scope: !4803)
!4840 = !DILocation(line: 2093, column: 7, scope: !4777)
!4841 = !DILocation(line: 2095, column: 11, scope: !4801)
!4842 = !DILocation(line: 2095, column: 25, scope: !4801)
!4843 = !DILocation(line: 2095, column: 11, scope: !4802)
!4844 = !DILocation(line: 2096, column: 2, scope: !4799)
!4845 = !DILocation(line: 2096, column: 2, scope: !4800)
!4846 = !DILocation(line: 2096, column: 2, scope: !4798)
!4847 = !DILocation(line: 0, scope: !4798)
!4848 = !DILocation(line: 2100, column: 9, scope: !4777)
!4849 = !DILocation(line: 2102, column: 3, scope: !4817)
!4850 = !DILocation(line: 0, scope: !4816)
!4851 = !DILocation(line: 0, scope: !4814)
!4852 = !DILocation(line: 0, scope: !4813)
!4853 = !DILocation(line: 2102, column: 3, scope: !4816)
!4854 = !DILocation(line: 2104, column: 7, scope: !4814)
!4855 = !DILocation(line: 2104, column: 7, scope: !4813)
!4856 = !DILocation(line: 2106, column: 36, scope: !4811)
!4857 = !DILocation(line: 2106, column: 40, scope: !4811)
!4858 = !DILocation(line: 2106, column: 8, scope: !4811)
!4859 = !DILocation(line: 2106, column: 8, scope: !4812)
!4860 = !DILocation(line: 2108, column: 12, scope: !4809)
!4861 = !DILocation(line: 2108, column: 26, scope: !4809)
!4862 = !DILocation(line: 2108, column: 12, scope: !4810)
!4863 = !DILocation(line: 2109, column: 3, scope: !4807)
!4864 = !DILocation(line: 2109, column: 3, scope: !4808)
!4865 = !DILocation(line: 2109, column: 3, scope: !4806)
!4866 = !DILocation(line: 0, scope: !4806)
!4867 = distinct !{!4867, !4854, !4868}
!4868 = !DILocation(line: 2112, column: 2, scope: !4814)
!4869 = distinct !{!4869, !4849, !4870}
!4870 = !DILocation(line: 2113, column: 5, scope: !4817)
!4871 = !DILocation(line: 2115, column: 7, scope: !4823)
!4872 = !DILocation(line: 2115, column: 21, scope: !4823)
!4873 = !DILocation(line: 2115, column: 7, scope: !4777)
!4874 = !DILocation(line: 2116, column: 5, scope: !4821)
!4875 = !DILocation(line: 2116, column: 5, scope: !4822)
!4876 = !DILocation(line: 2116, column: 5, scope: !4820)
!4877 = !DILocation(line: 0, scope: !4820)
!4878 = !DILocation(line: 2119, column: 1, scope: !4777)
!4879 = distinct !DISubprogram(name: "can_speculate_dep_p", scope: !3, file: !3, line: 1790, type: !4880, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4882)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!594, !1868}
!4882 = !{!4883, !4884}
!4883 = !DILocalVariable(name: "ds", arg: 1, scope: !4879, file: !3, line: 1790, type: !1868)
!4884 = !DILocalVariable(name: "spec_mask", scope: !4885, file: !3, line: 1804, type: !1868)
!4885 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1801, column: 3)
!4886 = !DILocation(line: 0, scope: !4879)
!4887 = !DILocation(line: 1792, column: 7, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1792, column: 7)
!4889 = !DILocation(line: 1792, column: 17, scope: !4888)
!4890 = !DILocation(line: 1792, column: 7, scope: !4879)
!4891 = !DILocation(line: 1796, column: 6, scope: !4879)
!4892 = !DILocation(line: 1798, column: 10, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1798, column: 7)
!4894 = !DILocation(line: 1798, column: 7, scope: !4879)
!4895 = !DILocation(line: 1804, column: 33, scope: !4885)
!4896 = !DILocation(line: 0, scope: !4885)
!4897 = !DILocation(line: 1806, column: 13, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 1806, column: 9)
!4899 = !DILocation(line: 1806, column: 26, scope: !4898)
!4900 = !DILocation(line: 1810, column: 7, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1810, column: 7)
!4902 = !DILocation(line: 1810, column: 22, scope: !4901)
!4903 = !DILocation(line: 1810, column: 33, scope: !4901)
!4904 = !DILocation(line: 1810, column: 20, scope: !4901)
!4905 = !DILocation(line: 1814, column: 1, scope: !4879)
!4906 = distinct !DISubprogram(name: "can_substitute_through_p", scope: !3, file: !3, line: 717, type: !4907, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4909)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{!594, !1911, !1868}
!4909 = !{!4910, !4911}
!4910 = !DILocalVariable(name: "insn", arg: 1, scope: !4906, file: !3, line: 717, type: !1911)
!4911 = !DILocalVariable(name: "ds", arg: 2, scope: !4906, file: !3, line: 717, type: !1868)
!4912 = !DILocation(line: 0, scope: !4906)
!4913 = !DILocation(line: 721, column: 7, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 720, column: 7)
!4915 = !DILocation(line: 722, column: 12, scope: !4914)
!4916 = !DILocation(line: 723, column: 7, scope: !4914)
!4917 = !DILocation(line: 723, column: 12, scope: !4914)
!4918 = !DILocation(line: 720, column: 7, scope: !4906)
!4919 = !DILocation(line: 728, column: 7, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 728, column: 7)
!4921 = !DILocation(line: 729, column: 7, scope: !4920)
!4922 = !DILocation(line: 729, column: 10, scope: !4920)
!4923 = !DILocation(line: 728, column: 7, scope: !4906)
!4924 = !DILocation(line: 731, column: 3, scope: !4906)
!4925 = !DILocation(line: 732, column: 1, scope: !4906)
!4926 = distinct !DISubprogram(name: "substitute_reg_in_expr", scope: !3, file: !3, line: 742, type: !4927, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4929)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{!594, !1834, !1911, !594}
!4929 = !{!4930, !4931, !4932, !4933, !4935, !4936, !4938, !4939, !4940, !4941, !4944}
!4930 = !DILocalVariable(name: "expr", arg: 1, scope: !4926, file: !3, line: 742, type: !1834)
!4931 = !DILocalVariable(name: "insn", arg: 2, scope: !4926, file: !3, line: 742, type: !1911)
!4932 = !DILocalVariable(name: "undo", arg: 3, scope: !4926, file: !3, line: 742, type: !594)
!4933 = !DILocalVariable(name: "where", scope: !4926, file: !3, line: 744, type: !4934)
!4934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!4935 = !DILocalVariable(name: "new_insn_valid", scope: !4926, file: !3, line: 745, type: !594)
!4936 = !DILocalVariable(name: "vi", scope: !4926, file: !3, line: 746, type: !4937)
!4937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!4938 = !DILocalVariable(name: "has_rhs", scope: !4926, file: !3, line: 747, type: !594)
!4939 = !DILocalVariable(name: "old", scope: !4926, file: !3, line: 748, type: !607)
!4940 = !DILocalVariable(name: "new_rtx", scope: !4926, file: !3, line: 748, type: !607)
!4941 = !DILocalVariable(name: "new_insn", scope: !4942, file: !3, line: 763, type: !607)
!4942 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 762, column: 5)
!4943 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 761, column: 7)
!4944 = !DILocalVariable(name: "where_replace", scope: !4942, file: !3, line: 764, type: !4934)
!4945 = !DILocation(line: 0, scope: !4926)
!4946 = !DILocation(line: 746, column: 18, scope: !4926)
!4947 = !DILocation(line: 747, column: 18, scope: !4926)
!4948 = !DILocation(line: 747, column: 34, scope: !4926)
!4949 = !DILocation(line: 755, column: 12, scope: !4926)
!4950 = !DILocation(line: 757, column: 8, scope: !4926)
!4951 = !DILocation(line: 758, column: 9, scope: !4926)
!4952 = !DILocation(line: 758, column: 16, scope: !4926)
!4953 = !DILocation(line: 758, column: 34, scope: !4926)
!4954 = !DILocation(line: 761, column: 39, scope: !4943)
!4955 = !DILocation(line: 761, column: 7, scope: !4943)
!4956 = !DILocation(line: 761, column: 7, scope: !4926)
!4957 = !DILocation(line: 0, scope: !4942)
!4958 = !DILocation(line: 767, column: 27, scope: !4942)
!4959 = !DILocation(line: 767, column: 34, scope: !4942)
!4960 = !DILocation(line: 767, column: 52, scope: !4942)
!4961 = !DILocation(line: 767, column: 17, scope: !4942)
!4962 = !DILocation(line: 768, column: 43, scope: !4942)
!4963 = !DILocation(line: 768, column: 18, scope: !4942)
!4964 = !DILocation(line: 773, column: 24, scope: !4942)
!4965 = !DILocation(line: 774, column: 13, scope: !4942)
!4966 = !DILocation(line: 778, column: 11, scope: !4942)
!4967 = !DILocation(line: 787, column: 11, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 787, column: 11)
!4969 = !DILocation(line: 787, column: 11, scope: !4942)
!4970 = !DILocation(line: 790, column: 5, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 788, column: 2)
!4972 = !DILocation(line: 789, column: 4, scope: !4971)
!4973 = !DILocation(line: 794, column: 9, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 794, column: 8)
!4975 = !DILocation(line: 794, column: 34, scope: !4974)
!4976 = !DILocation(line: 795, column: 15, scope: !4974)
!4977 = !DILocation(line: 795, column: 32, scope: !4974)
!4978 = !DILocation(line: 796, column: 11, scope: !4974)
!4979 = !DILocation(line: 795, column: 18, scope: !4974)
!4980 = !DILocation(line: 794, column: 8, scope: !4971)
!4981 = !DILocation(line: 797, column: 6, scope: !4974)
!4982 = !DILocation(line: 797, column: 35, scope: !4974)
!4983 = !DILocation(line: 0, scope: !4943)
!4984 = !DILocation(line: 806, column: 1, scope: !4926)
!4985 = distinct !DISubprogram(name: "find_block_for_bookkeeping", scope: !3, file: !3, line: 4493, type: !4986, scopeLine: 4494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4988)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!1141, !1158, !1158, !594}
!4988 = !{!4989, !4990, !4991, !4992, !4993}
!4989 = !DILocalVariable(name: "e1", arg: 1, scope: !4985, file: !3, line: 4493, type: !1158)
!4990 = !DILocalVariable(name: "e2", arg: 2, scope: !4985, file: !3, line: 4493, type: !1158)
!4991 = !DILocalVariable(name: "lax", arg: 3, scope: !4985, file: !3, line: 4493, type: !594)
!4992 = !DILocalVariable(name: "candidate_block", scope: !4985, file: !3, line: 4495, type: !1141)
!4993 = !DILocalVariable(name: "e", scope: !4985, file: !3, line: 4496, type: !1158)
!4994 = !DILocation(line: 0, scope: !4985)
!4995 = !DILocation(line: 0, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 4499, column: 3)
!4997 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 4499, column: 3)
!4998 = !DILocation(line: 4499, column: 8, scope: !4997)
!4999 = !DILocation(line: 0, scope: !4997)
!5000 = !DILocation(line: 4501, column: 11, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 4501, column: 11)
!5002 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 4500, column: 5)
!5003 = !DILocation(line: 4501, column: 39, scope: !5001)
!5004 = !DILocation(line: 4501, column: 11, scope: !5002)
!5005 = !DILocation(line: 4512, column: 16, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 4512, column: 16)
!5007 = !DILocation(line: 4512, column: 44, scope: !5006)
!5008 = !DILocation(line: 4512, column: 16, scope: !5001)
!5009 = !DILocation(line: 4503, column: 24, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 4503, column: 8)
!5011 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 4502, column: 2)
!5012 = !DILocation(line: 4503, column: 8, scope: !5011)
!5013 = !DILocation(line: 4504, column: 25, scope: !5010)
!5014 = !DILocation(line: 4504, column: 48, scope: !5010)
!5015 = !DILocation(line: 0, scope: !5010)
!5016 = !DILocation(line: 4506, column: 13, scope: !5010)
!5017 = !DILocation(line: 4506, column: 37, scope: !5010)
!5018 = !DILocation(line: 4505, column: 13, scope: !5010)
!5019 = !DILocation(line: 4505, column: 37, scope: !5010)
!5020 = !DILocation(line: 4516, column: 13, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 4516, column: 11)
!5022 = !DILocation(line: 4516, column: 11, scope: !5002)
!5023 = !DILocation(line: 4522, column: 15, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 4522, column: 11)
!5025 = !DILocation(line: 4499, column: 55, scope: !4996)
!5026 = !DILocation(line: 4522, column: 18, scope: !5024)
!5027 = !DILocation(line: 4522, column: 11, scope: !5002)
!5028 = !DILocation(line: 4499, column: 3, scope: !4996)
!5029 = distinct !{!5029, !5030, !5031}
!5030 = !DILocation(line: 4499, column: 3, scope: !4997)
!5031 = !DILocation(line: 4524, column: 5, scope: !4997)
!5032 = !DILocation(line: 4533, column: 1, scope: !4985)
!5033 = !DILocation(line: 4517, column: 12, scope: !5021)
!5034 = !DILocation(line: 4499, column: 27, scope: !4996)
!5035 = !DILocation(line: 4499, column: 35, scope: !4996)
!5036 = !DILocation(line: 4499, column: 32, scope: !4996)
!5037 = !DILocation(line: 4517, column: 19, scope: !5021)
!5038 = !DILocation(line: 4517, column: 16, scope: !5021)
!5039 = !DILocation(line: 4518, column: 6, scope: !5021)
!5040 = !DILocation(line: 4517, column: 10, scope: !5021)
!5041 = !DILocation(line: 4522, column: 46, scope: !5024)
!5042 = !DILocation(line: 4526, column: 7, scope: !4985)
!5043 = !DILocation(line: 4531, column: 5, scope: !4985)
!5044 = distinct !DISubprogram(name: "block_valid_for_bookkeeping_p", scope: !3, file: !3, line: 4469, type: !5045, scopeLine: 4470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5047)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!594, !1141}
!5047 = !{!5048, !5049}
!5048 = !DILocalVariable(name: "bb", arg: 1, scope: !5044, file: !3, line: 4469, type: !1141)
!5049 = !DILocalVariable(name: "bb_end", scope: !5044, file: !3, line: 4471, type: !1911)
!5050 = !DILocation(line: 0, scope: !5044)
!5051 = !DILocation(line: 4471, column: 19, scope: !5044)
!5052 = !DILocation(line: 4473, column: 8, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 4473, column: 7)
!5054 = !DILocation(line: 4473, column: 33, scope: !5053)
!5055 = !DILocation(line: 4473, column: 36, scope: !5053)
!5056 = !DILocation(line: 4473, column: 59, scope: !5053)
!5057 = !DILocation(line: 4473, column: 7, scope: !5044)
!5058 = !DILocation(line: 4476, column: 7, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 4476, column: 7)
!5060 = !DILocation(line: 4476, column: 7, scope: !5044)
!5061 = !DILocation(line: 4478, column: 11, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 4478, column: 11)
!5063 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 4477, column: 5)
!5064 = !DILocation(line: 4478, column: 37, scope: !5062)
!5065 = !DILocation(line: 4478, column: 11, scope: !5063)
!5066 = !DILocation(line: 4482, column: 5, scope: !5059)
!5067 = !DILocation(line: 4484, column: 3, scope: !5044)
!5068 = !DILocation(line: 4485, column: 1, scope: !5044)
!5069 = distinct !DISubprogram(name: "rtx_ok_for_substitution_p", scope: !3, file: !3, line: 869, type: !5070, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5072)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{!594, !607, !607}
!5072 = !{!5073, !5074}
!5073 = !DILocalVariable(name: "what", arg: 1, scope: !5069, file: !3, line: 869, type: !607)
!5074 = !DILocalVariable(name: "where", arg: 2, scope: !5069, file: !3, line: 869, type: !607)
!5075 = !DILocation(line: 0, scope: !5069)
!5076 = !DILocation(line: 871, column: 11, scope: !5069)
!5077 = !DILocation(line: 871, column: 49, scope: !5069)
!5078 = !DILocation(line: 871, column: 10, scope: !5069)
!5079 = !DILocation(line: 871, column: 3, scope: !5069)
!5080 = distinct !DISubprogram(name: "count_occurrences_equiv", scope: !3, file: !3, line: 855, type: !5081, scopeLine: 856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5083)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{!595, !607, !607}
!5083 = !{!5084, !5085, !5086}
!5084 = !DILocalVariable(name: "what", arg: 1, scope: !5080, file: !3, line: 855, type: !607)
!5085 = !DILocalVariable(name: "where", arg: 2, scope: !5080, file: !3, line: 855, type: !607)
!5086 = !DILocalVariable(name: "arg", scope: !5080, file: !3, line: 857, type: !1923)
!5087 = !DILocation(line: 0, scope: !5080)
!5088 = !DILocation(line: 857, column: 3, scope: !5080)
!5089 = !DILocation(line: 859, column: 7, scope: !5080)
!5090 = !DILocation(line: 859, column: 9, scope: !5080)
!5091 = !DILocation(line: 860, column: 7, scope: !5080)
!5092 = !DILocation(line: 860, column: 9, scope: !5080)
!5093 = !DILocation(line: 862, column: 3, scope: !5080)
!5094 = !DILocation(line: 864, column: 14, scope: !5080)
!5095 = !DILocation(line: 865, column: 1, scope: !5080)
!5096 = !DILocation(line: 864, column: 3, scope: !5080)
!5097 = distinct !DISubprogram(name: "count_occurrences_1", scope: !3, file: !3, line: 810, type: !5098, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5100)
!5098 = !DISubroutineType(types: !5099)
!5099 = !{!595, !4934, !599}
!5100 = !{!5101, !5102, !5103}
!5101 = !DILocalVariable(name: "cur_rtx", arg: 1, scope: !5097, file: !3, line: 810, type: !4934)
!5102 = !DILocalVariable(name: "arg", arg: 2, scope: !5097, file: !3, line: 810, type: !599)
!5103 = !DILocalVariable(name: "p", scope: !5097, file: !3, line: 812, type: !1921)
!5104 = !DILocation(line: 0, scope: !5097)
!5105 = !DILocation(line: 820, column: 20, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 820, column: 7)
!5107 = !DILocation(line: 820, column: 33, scope: !5106)
!5108 = !DILocation(line: 820, column: 7, scope: !5106)
!5109 = !DILocation(line: 820, column: 7, scope: !5097)
!5110 = !DILocation(line: 823, column: 11, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 823, column: 11)
!5112 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 821, column: 5)
!5113 = !DILocation(line: 824, column: 11, scope: !5111)
!5114 = !DILocation(line: 824, column: 14, scope: !5111)
!5115 = !DILocation(line: 825, column: 11, scope: !5111)
!5116 = !DILocation(line: 825, column: 31, scope: !5111)
!5117 = !DILocation(line: 825, column: 14, scope: !5111)
!5118 = !DILocation(line: 825, column: 48, scope: !5111)
!5119 = !DILocation(line: 825, column: 69, scope: !5111)
!5120 = !DILocation(line: 823, column: 11, scope: !5112)
!5121 = !DILocation(line: 827, column: 14, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 826, column: 9)
!5123 = !DILocation(line: 827, column: 16, scope: !5122)
!5124 = !DILocation(line: 828, column: 11, scope: !5122)
!5125 = !DILocation(line: 831, column: 10, scope: !5112)
!5126 = !DILocation(line: 831, column: 11, scope: !5112)
!5127 = !DILocation(line: 834, column: 7, scope: !5112)
!5128 = !DILocation(line: 837, column: 27, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 837, column: 7)
!5130 = !DILocation(line: 838, column: 7, scope: !5129)
!5131 = !DILocation(line: 838, column: 10, scope: !5129)
!5132 = !DILocation(line: 839, column: 7, scope: !5129)
!5133 = !DILocation(line: 839, column: 10, scope: !5129)
!5134 = !DILocation(line: 839, column: 43, scope: !5129)
!5135 = !DILocation(line: 839, column: 40, scope: !5129)
!5136 = !DILocation(line: 837, column: 7, scope: !5097)
!5137 = !DILocation(line: 844, column: 10, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5129, file: !3, line: 840, column: 5)
!5139 = !DILocation(line: 844, column: 12, scope: !5138)
!5140 = !DILocation(line: 845, column: 7, scope: !5138)
!5141 = !DILocation(line: 850, column: 1, scope: !5097)
!5142 = distinct !DISubprogram(name: "generate_bookkeeping_insn", scope: !3, file: !3, line: 4790, type: !5143, scopeLine: 4791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5145)
!5143 = !DISubroutineType(types: !5144)
!5144 = !{!1141, !1834, !1158, !1158}
!5145 = !{!5146, !5147, !5148, !5149, !5150, !5151, !5152, !5153, !5154, !5159}
!5146 = !DILocalVariable(name: "c_expr", arg: 1, scope: !5142, file: !3, line: 4790, type: !1834)
!5147 = !DILocalVariable(name: "e1", arg: 2, scope: !5142, file: !3, line: 4790, type: !1158)
!5148 = !DILocalVariable(name: "e2", arg: 3, scope: !5142, file: !3, line: 4790, type: !1158)
!5149 = !DILocalVariable(name: "join_point", scope: !5142, file: !3, line: 4792, type: !1911)
!5150 = !DILocalVariable(name: "place_to_insert", scope: !5142, file: !3, line: 4792, type: !1911)
!5151 = !DILocalVariable(name: "new_insn", scope: !5142, file: !3, line: 4792, type: !1911)
!5152 = !DILocalVariable(name: "new_seqno", scope: !5142, file: !3, line: 4793, type: !595)
!5153 = !DILocalVariable(name: "need_to_exchange_data_sets", scope: !5142, file: !3, line: 4794, type: !594)
!5154 = !DILocalVariable(name: "__j", scope: !5155, file: !3, line: 4797, type: !595)
!5155 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 4797, column: 5)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !3, line: 4797, column: 5)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 4797, column: 5)
!5158 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 4796, column: 7)
!5159 = !DILocalVariable(name: "__s", scope: !5155, file: !3, line: 4797, type: !597)
!5160 = !DILocation(line: 0, scope: !5142)
!5161 = !DILocation(line: 4796, column: 7, scope: !5158)
!5162 = !DILocation(line: 4796, column: 21, scope: !5158)
!5163 = !DILocation(line: 4796, column: 7, scope: !5142)
!5164 = !DILocation(line: 4797, column: 5, scope: !5156)
!5165 = !DILocation(line: 4797, column: 5, scope: !5157)
!5166 = !DILocation(line: 4797, column: 5, scope: !5155)
!5167 = !DILocation(line: 0, scope: !5155)
!5168 = !DILocation(line: 4800, column: 33, scope: !5142)
!5169 = !DILocation(line: 4800, column: 16, scope: !5142)
!5170 = !DILocation(line: 4801, column: 21, scope: !5142)
!5171 = !DILocation(line: 4802, column: 8, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 4802, column: 7)
!5173 = !DILocation(line: 4802, column: 7, scope: !5142)
!5174 = !DILocation(line: 4804, column: 15, scope: !5142)
!5175 = !DILocation(line: 4806, column: 23, scope: !5142)
!5176 = !DILocation(line: 4806, column: 7, scope: !5142)
!5177 = !DILocation(line: 4808, column: 14, scope: !5142)
!5178 = !DILocation(line: 4818, column: 7, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 4818, column: 7)
!5180 = !DILocation(line: 4818, column: 7, scope: !5142)
!5181 = !DILocation(line: 4819, column: 25, scope: !5179)
!5182 = !DILocation(line: 4820, column: 4, scope: !5179)
!5183 = !DILocation(line: 4819, column: 5, scope: !5179)
!5184 = !DILocation(line: 4822, column: 26, scope: !5142)
!5185 = !DILocation(line: 4823, column: 10, scope: !5142)
!5186 = !DILocation(line: 4823, column: 3, scope: !5142)
!5187 = !DILocation(line: 4824, column: 1, scope: !5142)
!5188 = distinct !DISubprogram(name: "update_data_sets", scope: !3, file: !3, line: 3158, type: !3806, scopeLine: 3159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5189)
!5189 = !{!5190}
!5190 = !DILocalVariable(name: "insn", arg: 1, scope: !5188, file: !3, line: 3158, type: !607)
!5191 = !DILocation(line: 0, scope: !5188)
!5192 = !DILocation(line: 3160, column: 3, scope: !5188)
!5193 = !DILocation(line: 3161, column: 7, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 3161, column: 7)
!5195 = !DILocation(line: 3161, column: 7, scope: !5188)
!5196 = !DILocation(line: 3163, column: 7, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 3162, column: 5)
!5198 = !DILocation(line: 3164, column: 7, scope: !5197)
!5199 = !DILocation(line: 3164, column: 43, scope: !5197)
!5200 = !DILocation(line: 3165, column: 7, scope: !5197)
!5201 = !DILocation(line: 3166, column: 5, scope: !5197)
!5202 = !DILocation(line: 3167, column: 1, scope: !5188)
!5203 = distinct !DISubprogram(name: "update_and_record_unavailable_insns", scope: !3, file: !3, line: 5649, type: !5204, scopeLine: 5650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5206)
!5204 = !DISubroutineType(types: !5205)
!5205 = !{null, !1141}
!5206 = !{!5207, !5208, !5209, !5210, !5211, !5212}
!5207 = !DILocalVariable(name: "book_block", arg: 1, scope: !5203, file: !3, line: 5649, type: !1141)
!5208 = !DILocalVariable(name: "i", scope: !5203, file: !3, line: 5651, type: !2188)
!5209 = !DILocalVariable(name: "old_av_set", scope: !5203, file: !3, line: 5652, type: !1945)
!5210 = !DILocalVariable(name: "cur_expr", scope: !5203, file: !3, line: 5653, type: !1834)
!5211 = !DILocalVariable(name: "bb_end", scope: !5203, file: !3, line: 5654, type: !607)
!5212 = !DILocalVariable(name: "new_expr", scope: !5213, file: !3, line: 5674, type: !1834)
!5213 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 5673, column: 9)
!5214 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 5672, column: 7)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 5672, column: 7)
!5216 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 5666, column: 5)
!5217 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 5665, column: 7)
!5218 = !DILocation(line: 0, scope: !5203)
!5219 = !DILocation(line: 5651, column: 3, scope: !5203)
!5220 = !DILocation(line: 5652, column: 3, scope: !5203)
!5221 = !DILocation(line: 5652, column: 12, scope: !5203)
!5222 = !DILocation(line: 5653, column: 3, scope: !5203)
!5223 = !DILocation(line: 5654, column: 16, scope: !5203)
!5224 = !DILocation(line: 5658, column: 3, scope: !5203)
!5225 = !DILocation(line: 5659, column: 7, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 5659, column: 7)
!5227 = !DILocation(line: 5659, column: 7, scope: !5203)
!5228 = !DILocation(line: 5660, column: 30, scope: !5226)
!5229 = !DILocation(line: 5660, column: 5, scope: !5226)
!5230 = !DILocation(line: 5665, column: 7, scope: !5217)
!5231 = !DILocation(line: 5665, column: 7, scope: !5203)
!5232 = !DILocation(line: 5667, column: 33, scope: !5216)
!5233 = !DILocation(line: 5667, column: 20, scope: !5216)
!5234 = !DILocation(line: 5667, column: 18, scope: !5216)
!5235 = !DILocation(line: 5668, column: 25, scope: !5216)
!5236 = !DILocation(line: 5668, column: 7, scope: !5216)
!5237 = !DILocation(line: 5672, column: 7, scope: !5215)
!5238 = !DILocation(line: 0, scope: !5214)
!5239 = !DILocation(line: 5672, column: 7, scope: !5214)
!5240 = !DILocation(line: 5674, column: 44, scope: !5213)
!5241 = !DILocation(line: 5675, column: 9, scope: !5213)
!5242 = !DILocation(line: 5674, column: 29, scope: !5213)
!5243 = !DILocation(line: 0, scope: !5213)
!5244 = !DILocation(line: 5677, column: 17, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 5677, column: 15)
!5246 = !DILocation(line: 5680, column: 15, scope: !5245)
!5247 = !DILocation(line: 5685, column: 61, scope: !5245)
!5248 = !DILocation(line: 5680, column: 18, scope: !5245)
!5249 = !DILocation(line: 5681, column: 7, scope: !5245)
!5250 = !DILocation(line: 5681, column: 4, scope: !5245)
!5251 = !DILocation(line: 5677, column: 15, scope: !5213)
!5252 = !DILocation(line: 5685, column: 13, scope: !5245)
!5253 = distinct !{!5253, !5237, !5254}
!5254 = !DILocation(line: 5686, column: 9, scope: !5215)
!5255 = !DILocation(line: 5688, column: 7, scope: !5216)
!5256 = !DILocation(line: 5689, column: 5, scope: !5216)
!5257 = !DILocation(line: 5690, column: 1, scope: !5203)
!5258 = distinct !DISubprogram(name: "find_place_for_bookkeeping", scope: !3, file: !3, line: 4676, type: !5259, scopeLine: 4677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5261)
!5259 = !DISubroutineType(types: !5260)
!5260 = !{!1911, !1158, !1158}
!5261 = !{!5262, !5263, !5264, !5265, !5266, !5271, !5278, !5279, !5285}
!5262 = !DILocalVariable(name: "e1", arg: 1, scope: !5258, file: !3, line: 4676, type: !1158)
!5263 = !DILocalVariable(name: "e2", arg: 2, scope: !5258, file: !3, line: 4676, type: !1158)
!5264 = !DILocalVariable(name: "place_to_insert", scope: !5258, file: !3, line: 4678, type: !1911)
!5265 = !DILocalVariable(name: "book_block", scope: !5258, file: !3, line: 4681, type: !1141)
!5266 = !DILocalVariable(name: "insn", scope: !5267, file: !3, line: 4693, type: !607)
!5267 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 4692, column: 2)
!5268 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 4691, column: 11)
!5269 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 4684, column: 5)
!5270 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 4683, column: 7)
!5271 = !DILocalVariable(name: "__j", scope: !5272, file: !3, line: 4709, type: !595)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 4709, column: 2)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 4709, column: 2)
!5274 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 4709, column: 2)
!5275 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 4708, column: 11)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 4705, column: 5)
!5277 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 4704, column: 7)
!5278 = !DILocalVariable(name: "__s", scope: !5272, file: !3, line: 4709, type: !597)
!5279 = !DILocalVariable(name: "__j", scope: !5280, file: !3, line: 4715, type: !595)
!5280 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 4715, column: 2)
!5281 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 4715, column: 2)
!5282 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 4715, column: 2)
!5283 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 4714, column: 11)
!5284 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 4713, column: 5)
!5285 = !DILocalVariable(name: "__s", scope: !5280, file: !3, line: 4715, type: !597)
!5286 = !DILocation(line: 0, scope: !5258)
!5287 = !DILocation(line: 4681, column: 28, scope: !5258)
!5288 = !DILocation(line: 4683, column: 7, scope: !5270)
!5289 = !DILocation(line: 4683, column: 7, scope: !5258)
!5290 = !DILocation(line: 4685, column: 25, scope: !5269)
!5291 = !DILocation(line: 4691, column: 11, scope: !5268)
!5292 = !DILocation(line: 4691, column: 11, scope: !5269)
!5293 = !DILocation(line: 4693, column: 15, scope: !5267)
!5294 = !DILocation(line: 0, scope: !5267)
!5295 = !DILocation(line: 4695, column: 4, scope: !5267)
!5296 = !DILocation(line: 4695, column: 16, scope: !5267)
!5297 = !DILocation(line: 4695, column: 35, scope: !5267)
!5298 = !DILocation(line: 4696, column: 5, scope: !5267)
!5299 = !DILocation(line: 4696, column: 28, scope: !5267)
!5300 = !DILocation(line: 4696, column: 25, scope: !5267)
!5301 = !DILocation(line: 4697, column: 13, scope: !5267)
!5302 = distinct !{!5302, !5295, !5301}
!5303 = !DILocation(line: 4699, column: 8, scope: !5267)
!5304 = !DILocation(line: 4701, column: 2, scope: !5267)
!5305 = !DILocation(line: 4704, column: 8, scope: !5277)
!5306 = !DILocation(line: 4704, column: 7, scope: !5258)
!5307 = !DILocation(line: 4706, column: 20, scope: !5276)
!5308 = !DILocation(line: 4707, column: 25, scope: !5276)
!5309 = !DILocation(line: 4708, column: 11, scope: !5275)
!5310 = !DILocation(line: 4708, column: 25, scope: !5275)
!5311 = !DILocation(line: 4708, column: 11, scope: !5276)
!5312 = !DILocation(line: 4709, column: 2, scope: !5273)
!5313 = !DILocation(line: 4709, column: 2, scope: !5274)
!5314 = !DILocation(line: 4709, column: 2, scope: !5272)
!5315 = !DILocation(line: 0, scope: !5272)
!5316 = !DILocation(line: 4714, column: 11, scope: !5283)
!5317 = !DILocation(line: 4714, column: 25, scope: !5283)
!5318 = !DILocation(line: 4714, column: 11, scope: !5284)
!5319 = !DILocation(line: 4715, column: 2, scope: !5281)
!5320 = !DILocation(line: 4715, column: 2, scope: !5282)
!5321 = !DILocation(line: 4715, column: 2, scope: !5280)
!5322 = !DILocation(line: 0, scope: !5280)
!5323 = !DILocation(line: 4719, column: 7, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 4719, column: 7)
!5325 = !DILocation(line: 4719, column: 32, scope: !5324)
!5326 = !DILocation(line: 4719, column: 35, scope: !5324)
!5327 = !DILocation(line: 4719, column: 7, scope: !5258)
!5328 = !DILocation(line: 4720, column: 23, scope: !5324)
!5329 = !DILocation(line: 4720, column: 5, scope: !5324)
!5330 = !DILocation(line: 4722, column: 3, scope: !5258)
!5331 = distinct !DISubprogram(name: "find_seqno_for_bookkeeping", scope: !3, file: !3, line: 4728, type: !5332, scopeLine: 4729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5334)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{!595, !1911, !1911}
!5334 = !{!5335, !5336, !5337, !5338}
!5335 = !DILocalVariable(name: "place_to_insert", arg: 1, scope: !5331, file: !3, line: 4728, type: !1911)
!5336 = !DILocalVariable(name: "join_point", arg: 2, scope: !5331, file: !3, line: 4728, type: !1911)
!5337 = !DILocalVariable(name: "seqno", scope: !5331, file: !3, line: 4730, type: !595)
!5338 = !DILocalVariable(name: "next", scope: !5331, file: !3, line: 4731, type: !607)
!5339 = !DILocation(line: 0, scope: !5331)
!5340 = !DILocation(line: 4735, column: 10, scope: !5331)
!5341 = !DILocation(line: 4736, column: 7, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 4736, column: 7)
!5343 = !DILocation(line: 4737, column: 7, scope: !5342)
!5344 = !DILocation(line: 4737, column: 10, scope: !5342)
!5345 = !DILocation(line: 4738, column: 7, scope: !5342)
!5346 = !DILocation(line: 4738, column: 10, scope: !5342)
!5347 = !DILocation(line: 4738, column: 35, scope: !5342)
!5348 = !DILocation(line: 4738, column: 32, scope: !5342)
!5349 = !DILocation(line: 4736, column: 7, scope: !5331)
!5350 = !DILocation(line: 4740, column: 7, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 4739, column: 5)
!5352 = !DILocation(line: 4741, column: 15, scope: !5351)
!5353 = !DILocation(line: 4742, column: 5, scope: !5351)
!5354 = !DILocation(line: 4743, column: 12, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 4743, column: 12)
!5356 = !DILocation(line: 4743, column: 36, scope: !5355)
!5357 = !DILocation(line: 4743, column: 12, scope: !5342)
!5358 = !DILocation(line: 4744, column: 13, scope: !5355)
!5359 = !DILocation(line: 4744, column: 5, scope: !5355)
!5360 = !DILocation(line: 4747, column: 15, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 4746, column: 5)
!5362 = !DILocation(line: 4754, column: 17, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 4754, column: 11)
!5364 = !DILocation(line: 4754, column: 11, scope: !5361)
!5365 = !DILocation(line: 4756, column: 11, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 4755, column: 9)
!5367 = !DILocation(line: 0, scope: !5342)
!5368 = !DILocation(line: 4761, column: 3, scope: !5331)
!5369 = !DILocation(line: 4762, column: 3, scope: !5331)
!5370 = distinct !DISubprogram(name: "emit_bookkeeping_insn", scope: !3, file: !3, line: 4768, type: !5371, scopeLine: 4769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5373)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{!1911, !1911, !1834, !595}
!5373 = !{!5374, !5375, !5376, !5377, !5378, !5379}
!5374 = !DILocalVariable(name: "place_to_insert", arg: 1, scope: !5370, file: !3, line: 4768, type: !1911)
!5375 = !DILocalVariable(name: "c_expr", arg: 2, scope: !5370, file: !3, line: 4768, type: !1834)
!5376 = !DILocalVariable(name: "new_seqno", arg: 3, scope: !5370, file: !3, line: 4768, type: !595)
!5377 = !DILocalVariable(name: "new_insn_rtx", scope: !5370, file: !3, line: 4770, type: !607)
!5378 = !DILocalVariable(name: "new_vinsn", scope: !5370, file: !3, line: 4772, type: !1840)
!5379 = !DILocalVariable(name: "new_insn", scope: !5370, file: !3, line: 4776, type: !1911)
!5380 = !DILocation(line: 0, scope: !5370)
!5381 = !DILocation(line: 4770, column: 47, scope: !5370)
!5382 = !DILocation(line: 4770, column: 22, scope: !5370)
!5383 = !DILocation(line: 4774, column: 7, scope: !5370)
!5384 = !DILocation(line: 4773, column: 7, scope: !5370)
!5385 = !DILocation(line: 4776, column: 21, scope: !5370)
!5386 = !DILocation(line: 4779, column: 3, scope: !5370)
!5387 = !DILocation(line: 4779, column: 31, scope: !5370)
!5388 = !DILocation(line: 4780, column: 19, scope: !5370)
!5389 = !DILocation(line: 4780, column: 35, scope: !5370)
!5390 = !DILocation(line: 4780, column: 3, scope: !5370)
!5391 = !DILocation(line: 4782, column: 3, scope: !5370)
!5392 = distinct !DISubprogram(name: "create_block_for_bookkeeping", scope: !3, file: !3, line: 4538, type: !5393, scopeLine: 4539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5395)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{!1141, !1158, !1158}
!5395 = !{!5396, !5397, !5398, !5399, !5400, !5403, !5406, !5407, !5408, !5413, !5420, !5421, !5426, !5427, !5432}
!5396 = !DILocalVariable(name: "e1", arg: 1, scope: !5392, file: !3, line: 4538, type: !1158)
!5397 = !DILocalVariable(name: "e2", arg: 2, scope: !5392, file: !3, line: 4538, type: !1158)
!5398 = !DILocalVariable(name: "new_bb", scope: !5392, file: !3, line: 4540, type: !1141)
!5399 = !DILocalVariable(name: "bb", scope: !5392, file: !3, line: 4540, type: !1141)
!5400 = !DILocalVariable(name: "latch", scope: !5401, file: !3, line: 4545, type: !1141)
!5401 = distinct !DILexicalBlock(scope: !5402, file: !3, line: 4544, column: 5)
!5402 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 4543, column: 7)
!5403 = !DILocalVariable(name: "succ", scope: !5404, file: !3, line: 4586, type: !1141)
!5404 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 4585, column: 5)
!5405 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 4584, column: 7)
!5406 = !DILocalVariable(name: "insn", scope: !5404, file: !3, line: 4587, type: !1911)
!5407 = !DILocalVariable(name: "last", scope: !5404, file: !3, line: 4588, type: !1911)
!5408 = !DILocalVariable(name: "gbi", scope: !5409, file: !3, line: 4601, type: !2907)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 4600, column: 6)
!5410 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 4599, column: 8)
!5411 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 4595, column: 2)
!5412 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 4590, column: 11)
!5413 = !DILocalVariable(name: "rbi", scope: !5409, file: !3, line: 4602, type: !5414)
!5414 = !DIDerivedType(tag: DW_TAG_typedef, name: "sel_region_bb_info_def", file: !398, line: 918, baseType: !5415)
!5415 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 906, size: 192, elements: !5416)
!5416 = !{!5417, !5418, !5419}
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "note_list", scope: !5415, file: !398, line: 910, baseType: !607, size: 64)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "av_set", scope: !5415, file: !398, line: 914, baseType: !1945, size: 64, offset: 64)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "av_level", scope: !5415, file: !398, line: 917, baseType: !595, size: 32, offset: 128)
!5420 = !DILocalVariable(name: "i", scope: !5409, file: !3, line: 4603, type: !595)
!5421 = !DILocalVariable(name: "__j", scope: !5422, file: !3, line: 4606, type: !595)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 4606, column: 3)
!5423 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 4606, column: 3)
!5424 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 4606, column: 3)
!5425 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 4605, column: 12)
!5426 = !DILocalVariable(name: "__s", scope: !5422, file: !3, line: 4606, type: !597)
!5427 = !DILocalVariable(name: "__j", scope: !5428, file: !3, line: 4658, type: !595)
!5428 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 4658, column: 3)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 4658, column: 3)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 4658, column: 3)
!5431 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 4657, column: 12)
!5432 = !DILocalVariable(name: "__s", scope: !5428, file: !3, line: 4658, type: !597)
!5433 = !DILocation(line: 0, scope: !5392)
!5434 = !DILocation(line: 4540, column: 32, scope: !5392)
!5435 = !DILocation(line: 4543, column: 7, scope: !5402)
!5436 = !DILocation(line: 4543, column: 7, scope: !5392)
!5437 = !DILocation(line: 4545, column: 46, scope: !5401)
!5438 = !DILocation(line: 0, scope: !5401)
!5439 = !DILocation(line: 4548, column: 7, scope: !5401)
!5440 = !DILocation(line: 4551, column: 7, scope: !5401)
!5441 = !DILocation(line: 4557, column: 12, scope: !5392)
!5442 = !DILocation(line: 4560, column: 3, scope: !5392)
!5443 = !DILocation(line: 4561, column: 27, scope: !5392)
!5444 = !DILocation(line: 4561, column: 3, scope: !5392)
!5445 = !DILocation(line: 4561, column: 25, scope: !5392)
!5446 = !DILocation(line: 4562, column: 3, scope: !5392)
!5447 = !DILocation(line: 4562, column: 21, scope: !5392)
!5448 = !DILocation(line: 4564, column: 3, scope: !5392)
!5449 = !DILocation(line: 4567, column: 11, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 4567, column: 7)
!5451 = !DILocation(line: 4567, column: 17, scope: !5450)
!5452 = !DILocation(line: 4567, column: 7, scope: !5392)
!5453 = !DILocation(line: 4568, column: 5, scope: !5450)
!5454 = !DILocation(line: 4570, column: 5, scope: !5450)
!5455 = !DILocation(line: 4572, column: 3, scope: !5392)
!5456 = !DILocation(line: 4573, column: 3, scope: !5392)
!5457 = !DILocation(line: 4584, column: 7, scope: !5405)
!5458 = !DILocation(line: 4584, column: 7, scope: !5392)
!5459 = !DILocation(line: 4587, column: 21, scope: !5404)
!5460 = !DILocation(line: 0, scope: !5404)
!5461 = !DILocation(line: 4590, column: 11, scope: !5412)
!5462 = !DILocation(line: 4591, column: 4, scope: !5412)
!5463 = !DILocation(line: 4591, column: 7, scope: !5412)
!5464 = !DILocation(line: 4592, column: 4, scope: !5412)
!5465 = !DILocation(line: 4592, column: 15, scope: !5412)
!5466 = !DILocation(line: 4592, column: 13, scope: !5412)
!5467 = !DILocation(line: 4593, column: 4, scope: !5412)
!5468 = !DILocation(line: 4593, column: 15, scope: !5412)
!5469 = !DILocation(line: 4593, column: 12, scope: !5412)
!5470 = !DILocation(line: 4594, column: 4, scope: !5412)
!5471 = !DILocation(line: 4594, column: 7, scope: !5412)
!5472 = !DILocation(line: 4590, column: 11, scope: !5404)
!5473 = !DILocation(line: 4596, column: 4, scope: !5411)
!5474 = !DILocation(line: 4596, column: 16, scope: !5411)
!5475 = !DILocation(line: 4596, column: 24, scope: !5411)
!5476 = !DILocation(line: 4596, column: 28, scope: !5411)
!5477 = !DILocation(line: 4596, column: 51, scope: !5411)
!5478 = !DILocation(line: 4596, column: 48, scope: !5411)
!5479 = !DILocation(line: 4597, column: 13, scope: !5411)
!5480 = distinct !{!5480, !5473, !5479}
!5481 = !DILocation(line: 4599, column: 8, scope: !5411)
!5482 = !DILocation(line: 4601, column: 8, scope: !5409)
!5483 = !DILocation(line: 4602, column: 8, scope: !5409)
!5484 = !DILocation(line: 4605, column: 12, scope: !5425)
!5485 = !DILocation(line: 4605, column: 26, scope: !5425)
!5486 = !DILocation(line: 4605, column: 12, scope: !5409)
!5487 = !DILocation(line: 4606, column: 3, scope: !5423)
!5488 = !DILocation(line: 4606, column: 3, scope: !5424)
!5489 = !DILocation(line: 4606, column: 3, scope: !5422)
!5490 = !DILocation(line: 0, scope: !5422)
!5491 = !DILocation(line: 4609, column: 20, scope: !5409)
!5492 = !DILocation(line: 0, scope: !5409)
!5493 = !DILocation(line: 4610, column: 30, scope: !5409)
!5494 = !DILocation(line: 4610, column: 22, scope: !5409)
!5495 = !DILocation(line: 4611, column: 20, scope: !5409)
!5496 = !DILocation(line: 4613, column: 8, scope: !5409)
!5497 = !DILocation(line: 4614, column: 8, scope: !5409)
!5498 = !DILocation(line: 4616, column: 22, scope: !5409)
!5499 = !DILocation(line: 4616, column: 8, scope: !5409)
!5500 = !DILocation(line: 4617, column: 16, scope: !5409)
!5501 = !DILocation(line: 4617, column: 45, scope: !5409)
!5502 = !DILocation(line: 4617, column: 8, scope: !5409)
!5503 = !DILocation(line: 4619, column: 16, scope: !5409)
!5504 = !DILocation(line: 4619, column: 8, scope: !5409)
!5505 = !DILocation(line: 4621, column: 22, scope: !5409)
!5506 = !DILocation(line: 4621, column: 8, scope: !5409)
!5507 = !DILocation(line: 4622, column: 16, scope: !5409)
!5508 = !DILocation(line: 4622, column: 45, scope: !5409)
!5509 = !DILocation(line: 4622, column: 8, scope: !5409)
!5510 = !DILocation(line: 4624, column: 16, scope: !5409)
!5511 = !DILocation(line: 4624, column: 8, scope: !5409)
!5512 = !DILocation(line: 4626, column: 12, scope: !5409)
!5513 = !DILocation(line: 4627, column: 38, scope: !5409)
!5514 = !DILocation(line: 4627, column: 36, scope: !5409)
!5515 = !DILocation(line: 4628, column: 8, scope: !5409)
!5516 = !DILocation(line: 4628, column: 34, scope: !5409)
!5517 = !DILocation(line: 4630, column: 12, scope: !5409)
!5518 = !DILocation(line: 4631, column: 41, scope: !5409)
!5519 = !DILocation(line: 4631, column: 39, scope: !5409)
!5520 = !DILocation(line: 4632, column: 8, scope: !5409)
!5521 = !DILocation(line: 4632, column: 37, scope: !5409)
!5522 = !DILocation(line: 4634, column: 13, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 4634, column: 8)
!5524 = !DILocation(line: 0, scope: !5523)
!5525 = !DILocation(line: 4634, column: 24, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 4634, column: 8)
!5527 = !DILocation(line: 4634, column: 22, scope: !5526)
!5528 = !DILocation(line: 4634, column: 8, scope: !5523)
!5529 = !DILocation(line: 4635, column: 7, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 4635, column: 7)
!5531 = !DILocation(line: 4635, column: 32, scope: !5530)
!5532 = !DILocation(line: 4635, column: 23, scope: !5530)
!5533 = !DILocation(line: 4635, column: 7, scope: !5526)
!5534 = !DILocation(line: 4636, column: 31, scope: !5530)
!5535 = !DILocation(line: 4636, column: 21, scope: !5530)
!5536 = !DILocation(line: 4636, column: 5, scope: !5530)
!5537 = !DILocation(line: 4637, column: 39, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 4637, column: 12)
!5539 = !DILocation(line: 4637, column: 28, scope: !5538)
!5540 = !DILocation(line: 4637, column: 12, scope: !5530)
!5541 = !DILocation(line: 4638, column: 21, scope: !5538)
!5542 = !DILocation(line: 4638, column: 5, scope: !5538)
!5543 = !DILocation(line: 4634, column: 44, scope: !5526)
!5544 = !DILocation(line: 4634, column: 8, scope: !5526)
!5545 = distinct !{!5545, !5528, !5546}
!5546 = !DILocation(line: 4638, column: 29, scope: !5523)
!5547 = !DILocation(line: 4640, column: 8, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 4640, column: 8)
!5549 = !DILocation(line: 0, scope: !5548)
!5550 = !DILocation(line: 4640, column: 8, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 4640, column: 8)
!5552 = !DILocation(line: 4641, column: 7, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 4641, column: 7)
!5554 = !DILocation(line: 4641, column: 7, scope: !5551)
!5555 = !DILocation(line: 4642, column: 53, scope: !5553)
!5556 = !DILocation(line: 4642, column: 5, scope: !5553)
!5557 = !DILocation(line: 4642, column: 43, scope: !5553)
!5558 = distinct !{!5558, !5547, !5559}
!5559 = !DILocation(line: 4642, column: 53, scope: !5548)
!5560 = !DILocation(line: 4644, column: 8, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 4644, column: 8)
!5562 = !DILocation(line: 0, scope: !5561)
!5563 = !DILocation(line: 4644, column: 8, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 4644, column: 8)
!5565 = !DILocation(line: 4645, column: 7, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 4645, column: 7)
!5567 = !DILocation(line: 4645, column: 7, scope: !5564)
!5568 = !DILocation(line: 4646, column: 51, scope: !5566)
!5569 = !DILocation(line: 4646, column: 5, scope: !5566)
!5570 = !DILocation(line: 4646, column: 43, scope: !5566)
!5571 = distinct !{!5571, !5560, !5572}
!5572 = !DILocation(line: 4646, column: 51, scope: !5561)
!5573 = !DILocation(line: 4648, column: 26, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 4648, column: 12)
!5575 = !DILocation(line: 4648, column: 62, scope: !5574)
!5576 = !DILocation(line: 4648, column: 12, scope: !5574)
!5577 = !DILocation(line: 4648, column: 12, scope: !5409)
!5578 = !DILocation(line: 4650, column: 21, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 4649, column: 3)
!5580 = !DILocation(line: 4650, column: 55, scope: !5579)
!5581 = !DILocation(line: 4650, column: 5, scope: !5579)
!5582 = !DILocation(line: 4651, column: 23, scope: !5579)
!5583 = !DILocation(line: 4651, column: 59, scope: !5579)
!5584 = !DILocation(line: 4651, column: 5, scope: !5579)
!5585 = !DILocation(line: 4652, column: 3, scope: !5579)
!5586 = !DILocation(line: 4654, column: 8, scope: !5409)
!5587 = !DILocation(line: 4657, column: 12, scope: !5431)
!5588 = !DILocation(line: 4657, column: 26, scope: !5431)
!5589 = !DILocation(line: 4657, column: 12, scope: !5409)
!5590 = !DILocation(line: 4658, column: 3, scope: !5429)
!5591 = !DILocation(line: 4658, column: 3, scope: !5430)
!5592 = !DILocation(line: 4658, column: 3, scope: !5428)
!5593 = !DILocation(line: 0, scope: !5428)
!5594 = !DILocation(line: 4662, column: 12, scope: !5409)
!5595 = !DILocation(line: 4664, column: 5, scope: !5409)
!5596 = !DILocation(line: 4664, column: 3, scope: !5409)
!5597 = !DILocation(line: 4665, column: 8, scope: !5409)
!5598 = !DILocation(line: 4665, column: 43, scope: !5409)
!5599 = !DILocation(line: 4666, column: 6, scope: !5410)
!5600 = !DILocation(line: 4666, column: 6, scope: !5409)
!5601 = !DILocation(line: 4670, column: 3, scope: !5392)
!5602 = distinct !DISubprogram(name: "single_pred_p", scope: !155, file: !155, line: 634, type: !5603, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5608)
!5603 = !DISubroutineType(types: !5604)
!5604 = !{!594, !5605}
!5605 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !608, line: 112, baseType: !5606)
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1143)
!5608 = !{!5609}
!5609 = !DILocalVariable(name: "bb", arg: 1, scope: !5602, file: !155, line: 634, type: !5605)
!5610 = !DILocation(line: 0, scope: !5602)
!5611 = !DILocation(line: 636, column: 10, scope: !5602)
!5612 = !DILocation(line: 636, column: 33, scope: !5602)
!5613 = !DILocation(line: 636, column: 3, scope: !5602)
!5614 = distinct !DISubprogram(name: "single_pred_edge", scope: !155, file: !155, line: 653, type: !5615, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5617)
!5615 = !DISubroutineType(types: !5616)
!5616 = !{!1158, !5605}
!5617 = !{!5618}
!5618 = !DILocalVariable(name: "bb", arg: 1, scope: !5614, file: !155, line: 653, type: !5605)
!5619 = !DILocation(line: 0, scope: !5614)
!5620 = !DILocation(line: 655, column: 3, scope: !5614)
!5621 = !DILocation(line: 656, column: 10, scope: !5614)
!5622 = !DILocation(line: 656, column: 3, scope: !5614)
!5623 = distinct !DISubprogram(name: "VEC_sel_region_bb_info_def_base_index", scope: !398, file: !398, line: 922, type: !5624, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5635)
!5624 = !DISubroutineType(types: !5625)
!5625 = !{!5626, !5627, !7}
!5626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 64)
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5628, size: 64)
!5628 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_region_bb_info_def_base", file: !398, line: 922, baseType: !5629)
!5629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_region_bb_info_def_base", file: !398, line: 922, size: 256, elements: !5630)
!5630 = !{!5631, !5632, !5633}
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5629, file: !398, line: 922, baseType: !7, size: 32)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5629, file: !398, line: 922, baseType: !7, size: 32, offset: 32)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !5629, file: !398, line: 922, baseType: !5634, size: 192, offset: 64)
!5634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5414, size: 192, elements: !642)
!5635 = !{!5636, !5637}
!5636 = !DILocalVariable(name: "vec_", arg: 1, scope: !5623, file: !398, line: 922, type: !5627)
!5637 = !DILocalVariable(name: "ix_", arg: 2, scope: !5623, file: !398, line: 922, type: !7)
!5638 = !DILocation(line: 0, scope: !5623)
!5639 = !DILocation(line: 922, column: 1, scope: !5623)
!5640 = distinct !DISubprogram(name: "single_succ_p", scope: !155, file: !155, line: 626, type: !5603, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5641)
!5641 = !{!5642}
!5642 = !DILocalVariable(name: "bb", arg: 1, scope: !5640, file: !155, line: 626, type: !5605)
!5643 = !DILocation(line: 0, scope: !5640)
!5644 = !DILocation(line: 628, column: 10, scope: !5640)
!5645 = !DILocation(line: 628, column: 33, scope: !5640)
!5646 = !DILocation(line: 628, column: 3, scope: !5640)
!5647 = distinct !DISubprogram(name: "single_succ", scope: !155, file: !155, line: 663, type: !5648, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5650)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{!1141, !5605}
!5650 = !{!5651}
!5651 = !DILocalVariable(name: "bb", arg: 1, scope: !5647, file: !155, line: 663, type: !5605)
!5652 = !DILocation(line: 0, scope: !5647)
!5653 = !DILocation(line: 665, column: 10, scope: !5647)
!5654 = !DILocation(line: 665, column: 33, scope: !5647)
!5655 = !DILocation(line: 665, column: 3, scope: !5647)
!5656 = distinct !DISubprogram(name: "VEC_basic_block_base_replace", scope: !155, file: !155, line: 281, type: !5657, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5660)
!5657 = !DISubroutineType(types: !5658)
!5658 = !{!1141, !5659, !7, !1141}
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!5660 = !{!5661, !5662, !5663, !5664}
!5661 = !DILocalVariable(name: "vec_", arg: 1, scope: !5656, file: !155, line: 281, type: !5659)
!5662 = !DILocalVariable(name: "ix_", arg: 2, scope: !5656, file: !155, line: 281, type: !7)
!5663 = !DILocalVariable(name: "obj_", arg: 3, scope: !5656, file: !155, line: 281, type: !1141)
!5664 = !DILocalVariable(name: "old_obj_", scope: !5656, file: !155, line: 281, type: !1141)
!5665 = !DILocation(line: 0, scope: !5656)
!5666 = !DILocation(line: 281, column: 1, scope: !5656)
!5667 = distinct !DISubprogram(name: "single_succ_edge", scope: !155, file: !155, line: 643, type: !5615, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5668)
!5668 = !{!5669}
!5669 = !DILocalVariable(name: "bb", arg: 1, scope: !5667, file: !155, line: 643, type: !5605)
!5670 = !DILocation(line: 0, scope: !5667)
!5671 = !DILocation(line: 645, column: 3, scope: !5667)
!5672 = !DILocation(line: 646, column: 10, scope: !5667)
!5673 = !DILocation(line: 646, column: 3, scope: !5667)
!5674 = distinct !DISubprogram(name: "emit_insn_from_expr_after", scope: !3, file: !3, line: 4441, type: !5675, scopeLine: 4443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5677)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{!1911, !1834, !1840, !595, !1911}
!5677 = !{!5678, !5679, !5680, !5681, !5682}
!5678 = !DILocalVariable(name: "expr", arg: 1, scope: !5674, file: !3, line: 4441, type: !1834)
!5679 = !DILocalVariable(name: "vinsn", arg: 2, scope: !5674, file: !3, line: 4441, type: !1840)
!5680 = !DILocalVariable(name: "seqno", arg: 3, scope: !5674, file: !3, line: 4441, type: !595)
!5681 = !DILocalVariable(name: "place_to_insert", arg: 4, scope: !5674, file: !3, line: 4442, type: !1911)
!5682 = !DILocalVariable(name: "regno", scope: !5683, file: !3, line: 4454, type: !7)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 4453, column: 5)
!5684 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 4452, column: 7)
!5685 = !DILocation(line: 0, scope: !5674)
!5686 = !DILocation(line: 4450, column: 3, scope: !5674)
!5687 = !DILocation(line: 4452, column: 7, scope: !5684)
!5688 = !DILocation(line: 4452, column: 7, scope: !5674)
!5689 = !DILocation(line: 4454, column: 24, scope: !5683)
!5690 = !DILocation(line: 0, scope: !5683)
!5691 = !DILocation(line: 4456, column: 11, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 4456, column: 11)
!5693 = !DILocation(line: 4456, column: 11, scope: !5683)
!5694 = !DILocation(line: 4458, column: 4, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 4457, column: 2)
!5696 = !DILocation(line: 4459, column: 29, scope: !5695)
!5697 = !DILocation(line: 4459, column: 4, scope: !5695)
!5698 = !DILocation(line: 4459, column: 27, scope: !5695)
!5699 = !DILocation(line: 4460, column: 2, scope: !5695)
!5700 = !DILocation(line: 4463, column: 10, scope: !5674)
!5701 = !DILocation(line: 4463, column: 3, scope: !5674)
!5702 = distinct !DISubprogram(name: "compute_av_set", scope: !3, file: !3, line: 3006, type: !5703, scopeLine: 3007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5705)
!5703 = !DISubroutineType(types: !5704)
!5704 = !{!1945, !1911, !1942, !595, !594}
!5705 = !{!5706, !5707, !5708, !5709}
!5706 = !DILocalVariable(name: "insn", arg: 1, scope: !5702, file: !3, line: 3006, type: !1911)
!5707 = !DILocalVariable(name: "p", arg: 2, scope: !5702, file: !3, line: 3006, type: !1942)
!5708 = !DILocalVariable(name: "ws", arg: 3, scope: !5702, file: !3, line: 3006, type: !595)
!5709 = !DILocalVariable(name: "unique_p", arg: 4, scope: !5702, file: !3, line: 3006, type: !594)
!5710 = !DILocation(line: 0, scope: !5702)
!5711 = !DILocation(line: 3008, column: 10, scope: !5702)
!5712 = !DILocation(line: 3008, column: 3, scope: !5702)
!5713 = distinct !DISubprogram(name: "compute_av_set_inside_bb", scope: !3, file: !3, line: 2851, type: !5703, scopeLine: 2853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5714)
!5714 = !{!5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5733, !5734, !5737, !5743, !5744, !5748, !5749, !5759, !5760, !5767, !5768, !5775, !5776, !5781, !5787, !5788, !5792}
!5715 = !DILocalVariable(name: "first_insn", arg: 1, scope: !5713, file: !3, line: 2851, type: !1911)
!5716 = !DILocalVariable(name: "p", arg: 2, scope: !5713, file: !3, line: 2851, type: !1942)
!5717 = !DILocalVariable(name: "ws", arg: 3, scope: !5713, file: !3, line: 2851, type: !595)
!5718 = !DILocalVariable(name: "need_copy_p", arg: 4, scope: !5713, file: !3, line: 2852, type: !594)
!5719 = !DILocalVariable(name: "cur_insn", scope: !5713, file: !3, line: 2854, type: !1911)
!5720 = !DILocalVariable(name: "end_ws", scope: !5713, file: !3, line: 2855, type: !595)
!5721 = !DILocalVariable(name: "bb_end", scope: !5713, file: !3, line: 2856, type: !1911)
!5722 = !DILocalVariable(name: "after_bb_end", scope: !5713, file: !3, line: 2857, type: !1911)
!5723 = !DILocalVariable(name: "last_insn", scope: !5713, file: !3, line: 2858, type: !1911)
!5724 = !DILocalVariable(name: "av", scope: !5713, file: !3, line: 2859, type: !1945)
!5725 = !DILocalVariable(name: "cur_bb", scope: !5713, file: !3, line: 2860, type: !1141)
!5726 = !DILocalVariable(name: "__j", scope: !5727, file: !3, line: 2866, type: !595)
!5727 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 2866, column: 9)
!5728 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 2866, column: 9)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 2866, column: 9)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 2865, column: 11)
!5731 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 2864, column: 5)
!5732 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 2863, column: 7)
!5733 = !DILocalVariable(name: "__s", scope: !5727, file: !3, line: 2866, type: !597)
!5734 = !DILocalVariable(name: "av_set", scope: !5735, file: !3, line: 2874, type: !1945)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 2873, column: 5)
!5736 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 2872, column: 7)
!5737 = !DILocalVariable(name: "__j", scope: !5738, file: !3, line: 2883, type: !595)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 2883, column: 11)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2883, column: 11)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 2883, column: 11)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 2882, column: 9)
!5742 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 2881, column: 11)
!5743 = !DILocalVariable(name: "__s", scope: !5738, file: !3, line: 2883, type: !597)
!5744 = !DILocalVariable(name: "__j", scope: !5745, file: !3, line: 2885, type: !595)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 2885, column: 11)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 2885, column: 11)
!5747 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 2885, column: 11)
!5748 = !DILocalVariable(name: "__s", scope: !5745, file: !3, line: 2885, type: !597)
!5749 = !DILocalVariable(name: "__j", scope: !5750, file: !3, line: 2906, type: !595)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 2906, column: 13)
!5751 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 2906, column: 13)
!5752 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 2906, column: 13)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 2905, column: 15)
!5754 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 2904, column: 2)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 2903, column: 11)
!5756 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 2900, column: 5)
!5757 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 2898, column: 3)
!5758 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 2898, column: 3)
!5759 = !DILocalVariable(name: "__s", scope: !5750, file: !3, line: 2906, type: !597)
!5760 = !DILocalVariable(name: "__j", scope: !5761, file: !3, line: 2917, type: !595)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 2917, column: 13)
!5762 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 2917, column: 13)
!5763 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 2917, column: 13)
!5764 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 2916, column: 15)
!5765 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2915, column: 2)
!5766 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 2913, column: 11)
!5767 = !DILocalVariable(name: "__s", scope: !5761, file: !3, line: 2917, type: !597)
!5768 = !DILocalVariable(name: "__j", scope: !5769, file: !3, line: 2931, type: !595)
!5769 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 2931, column: 13)
!5770 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 2931, column: 13)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 2931, column: 13)
!5772 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 2930, column: 8)
!5773 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 2925, column: 2)
!5774 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 2924, column: 11)
!5775 = !DILocalVariable(name: "__s", scope: !5769, file: !3, line: 2931, type: !597)
!5776 = !DILocalVariable(name: "expr", scope: !5777, file: !3, line: 2961, type: !1834)
!5777 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 2960, column: 7)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 2959, column: 9)
!5779 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 2957, column: 3)
!5780 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 2957, column: 3)
!5781 = !DILocalVariable(name: "__j", scope: !5782, file: !3, line: 2987, type: !595)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 2987, column: 7)
!5783 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 2987, column: 7)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 2987, column: 7)
!5785 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 2986, column: 5)
!5786 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 2985, column: 7)
!5787 = !DILocalVariable(name: "__s", scope: !5782, file: !3, line: 2987, type: !597)
!5788 = !DILocalVariable(name: "__j", scope: !5789, file: !3, line: 2989, type: !595)
!5789 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 2989, column: 7)
!5790 = distinct !DILexicalBlock(scope: !5791, file: !3, line: 2989, column: 7)
!5791 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 2989, column: 7)
!5792 = !DILocalVariable(name: "__s", scope: !5789, file: !3, line: 2989, type: !597)
!5793 = !DILocation(line: 0, scope: !5713)
!5794 = !DILocation(line: 2856, column: 31, scope: !5713)
!5795 = !DILocation(line: 2856, column: 19, scope: !5713)
!5796 = !DILocation(line: 2857, column: 25, scope: !5713)
!5797 = !DILocation(line: 2859, column: 3, scope: !5713)
!5798 = !DILocation(line: 2859, column: 12, scope: !5713)
!5799 = !DILocation(line: 2860, column: 24, scope: !5713)
!5800 = !DILocation(line: 2863, column: 7, scope: !5732)
!5801 = !DILocation(line: 2863, column: 7, scope: !5713)
!5802 = !DILocation(line: 2865, column: 11, scope: !5730)
!5803 = !DILocation(line: 2865, column: 25, scope: !5730)
!5804 = !DILocation(line: 2865, column: 11, scope: !5731)
!5805 = !DILocation(line: 2866, column: 9, scope: !5728)
!5806 = !DILocation(line: 2866, column: 9, scope: !5729)
!5807 = !DILocation(line: 2866, column: 9, scope: !5727)
!5808 = !DILocation(line: 0, scope: !5727)
!5809 = !DILocation(line: 2872, column: 7, scope: !5736)
!5810 = !DILocation(line: 2872, column: 7, scope: !5713)
!5811 = !DILocation(line: 2876, column: 11, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 2876, column: 11)
!5813 = !DILocation(line: 2876, column: 11, scope: !5735)
!5814 = !DILocation(line: 2877, column: 11, scope: !5812)
!5815 = !DILocation(line: 0, scope: !5735)
!5816 = !DILocation(line: 2877, column: 2, scope: !5812)
!5817 = !DILocation(line: 0, scope: !5812)
!5818 = !DILocation(line: 2881, column: 11, scope: !5742)
!5819 = !DILocation(line: 2881, column: 25, scope: !5742)
!5820 = !DILocation(line: 2881, column: 11, scope: !5735)
!5821 = !DILocation(line: 2883, column: 11, scope: !5739)
!5822 = !DILocation(line: 2883, column: 11, scope: !5740)
!5823 = !DILocation(line: 2883, column: 11, scope: !5738)
!5824 = !DILocation(line: 0, scope: !5738)
!5825 = !DILocation(line: 2884, column: 11, scope: !5741)
!5826 = !DILocation(line: 2885, column: 11, scope: !5746)
!5827 = !DILocation(line: 2885, column: 11, scope: !5747)
!5828 = !DILocation(line: 2885, column: 11, scope: !5745)
!5829 = !DILocation(line: 0, scope: !5745)
!5830 = !DILocation(line: 2888, column: 14, scope: !5735)
!5831 = !DILocation(line: 2888, column: 28, scope: !5735)
!5832 = !DILocation(line: 2891, column: 3, scope: !5713)
!5833 = !DILocation(line: 2898, column: 8, scope: !5758)
!5834 = !DILocation(line: 2855, column: 7, scope: !5713)
!5835 = !DILocation(line: 0, scope: !5758)
!5836 = !DILocation(line: 2898, column: 42, scope: !5757)
!5837 = !DILocation(line: 2898, column: 3, scope: !5758)
!5838 = !DILocation(line: 2903, column: 11, scope: !5755)
!5839 = !DILocation(line: 2903, column: 11, scope: !5756)
!5840 = !DILocation(line: 2905, column: 15, scope: !5753)
!5841 = !DILocation(line: 2905, column: 29, scope: !5753)
!5842 = !DILocation(line: 2905, column: 15, scope: !5754)
!5843 = !DILocation(line: 2906, column: 13, scope: !5751)
!5844 = !DILocation(line: 2906, column: 13, scope: !5752)
!5845 = !DILocation(line: 2906, column: 13, scope: !5750)
!5846 = !DILocation(line: 0, scope: !5750)
!5847 = !DILocation(line: 2913, column: 21, scope: !5766)
!5848 = !DILocation(line: 2914, column: 11, scope: !5766)
!5849 = !DILocation(line: 2914, column: 50, scope: !5766)
!5850 = !DILocation(line: 2914, column: 14, scope: !5766)
!5851 = !DILocation(line: 2913, column: 11, scope: !5756)
!5852 = !DILocation(line: 2916, column: 15, scope: !5764)
!5853 = !DILocation(line: 2916, column: 29, scope: !5764)
!5854 = !DILocation(line: 2916, column: 15, scope: !5765)
!5855 = !DILocation(line: 2917, column: 13, scope: !5762)
!5856 = !DILocation(line: 2917, column: 13, scope: !5763)
!5857 = !DILocation(line: 2917, column: 13, scope: !5761)
!5858 = !DILocation(line: 0, scope: !5761)
!5859 = !DILocation(line: 2921, column: 11, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 2921, column: 11)
!5861 = !DILocation(line: 2921, column: 11, scope: !5756)
!5862 = !DILocation(line: 2924, column: 20, scope: !5774)
!5863 = !DILocation(line: 2924, column: 18, scope: !5774)
!5864 = !DILocation(line: 2924, column: 11, scope: !5756)
!5865 = !DILocation(line: 2928, column: 32, scope: !5773)
!5866 = !DILocation(line: 2928, column: 4, scope: !5773)
!5867 = !DILocation(line: 2928, column: 30, scope: !5773)
!5868 = !DILocation(line: 2930, column: 8, scope: !5772)
!5869 = !DILocation(line: 2930, column: 22, scope: !5772)
!5870 = !DILocation(line: 2930, column: 8, scope: !5773)
!5871 = !DILocation(line: 2931, column: 13, scope: !5770)
!5872 = !DILocation(line: 2931, column: 13, scope: !5771)
!5873 = !DILocation(line: 2931, column: 13, scope: !5769)
!5874 = !DILocation(line: 0, scope: !5769)
!5875 = !DILocation(line: 2936, column: 13, scope: !5756)
!5876 = !DILocation(line: 2937, column: 5, scope: !5756)
!5877 = !DILocation(line: 2899, column: 20, scope: !5757)
!5878 = !DILocation(line: 2898, column: 3, scope: !5757)
!5879 = distinct !{!5879, !5837, !5880}
!5880 = !DILocation(line: 2937, column: 5, scope: !5758)
!5881 = !DILocation(line: 2942, column: 17, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 2942, column: 7)
!5883 = !DILocation(line: 2942, column: 7, scope: !5713)
!5884 = !DILocation(line: 2944, column: 10, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 2943, column: 5)
!5886 = !DILocation(line: 2948, column: 21, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 2948, column: 11)
!5888 = !DILocation(line: 2948, column: 35, scope: !5887)
!5889 = !DILocation(line: 2948, column: 39, scope: !5887)
!5890 = !DILocation(line: 2948, column: 11, scope: !5885)
!5891 = !DILocation(line: 2949, column: 26, scope: !5887)
!5892 = !DILocation(line: 2949, column: 9, scope: !5887)
!5893 = !DILocation(line: 2953, column: 44, scope: !5882)
!5894 = !DILocation(line: 2953, column: 10, scope: !5882)
!5895 = !DILocation(line: 2953, column: 8, scope: !5882)
!5896 = !DILocation(line: 0, scope: !5779)
!5897 = !DILocation(line: 2957, column: 8, scope: !5780)
!5898 = !DILocation(line: 0, scope: !5780)
!5899 = !DILocation(line: 2957, column: 54, scope: !5779)
!5900 = !DILocation(line: 2957, column: 51, scope: !5779)
!5901 = !DILocation(line: 2957, column: 3, scope: !5780)
!5902 = !DILocation(line: 2959, column: 10, scope: !5778)
!5903 = !DILocation(line: 2959, column: 9, scope: !5779)
!5904 = !DILocation(line: 2963, column: 9, scope: !5777)
!5905 = !DILocation(line: 2967, column: 31, scope: !5777)
!5906 = !DILocation(line: 2967, column: 35, scope: !5777)
!5907 = !DILocation(line: 2967, column: 16, scope: !5777)
!5908 = !DILocation(line: 0, scope: !5777)
!5909 = !DILocation(line: 2968, column: 18, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 2968, column: 13)
!5911 = !DILocation(line: 2968, column: 13, scope: !5777)
!5912 = !DILocation(line: 2970, column: 13, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 2969, column: 11)
!5914 = !DILocation(line: 2971, column: 30, scope: !5913)
!5915 = !DILocation(line: 2971, column: 13, scope: !5913)
!5916 = !DILocation(line: 2972, column: 11, scope: !5913)
!5917 = !DILocation(line: 2974, column: 28, scope: !5910)
!5918 = !DILocation(line: 2974, column: 11, scope: !5910)
!5919 = !DILocation(line: 2957, column: 3, scope: !5779)
!5920 = distinct !{!5920, !5901, !5921}
!5921 = !DILocation(line: 2975, column: 7, scope: !5780)
!5922 = !DILocation(line: 2978, column: 7, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 2978, column: 7)
!5924 = !DILocation(line: 2978, column: 7, scope: !5713)
!5925 = !DILocation(line: 2980, column: 22, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 2979, column: 5)
!5927 = !DILocation(line: 2980, column: 7, scope: !5926)
!5928 = !DILocation(line: 2981, column: 28, scope: !5926)
!5929 = !DILocation(line: 0, scope: !5926)
!5930 = !DILocation(line: 2981, column: 42, scope: !5926)
!5931 = !DILocation(line: 2981, column: 7, scope: !5926)
!5932 = !DILocation(line: 2981, column: 26, scope: !5926)
!5933 = !DILocation(line: 2982, column: 30, scope: !5926)
!5934 = !DILocation(line: 2982, column: 7, scope: !5926)
!5935 = !DILocation(line: 2982, column: 28, scope: !5926)
!5936 = !DILocation(line: 2983, column: 5, scope: !5926)
!5937 = !DILocation(line: 2985, column: 7, scope: !5786)
!5938 = !DILocation(line: 2985, column: 21, scope: !5786)
!5939 = !DILocation(line: 2985, column: 7, scope: !5713)
!5940 = !DILocation(line: 2987, column: 7, scope: !5783)
!5941 = !DILocation(line: 2987, column: 7, scope: !5784)
!5942 = !DILocation(line: 2987, column: 7, scope: !5782)
!5943 = !DILocation(line: 0, scope: !5782)
!5944 = !DILocation(line: 2988, column: 20, scope: !5785)
!5945 = !DILocation(line: 2988, column: 7, scope: !5785)
!5946 = !DILocation(line: 2989, column: 7, scope: !5790)
!5947 = !DILocation(line: 2989, column: 7, scope: !5791)
!5948 = !DILocation(line: 2989, column: 7, scope: !5789)
!5949 = !DILocation(line: 0, scope: !5789)
!5950 = !DILocation(line: 2992, column: 3, scope: !5713)
!5951 = !DILocation(line: 2993, column: 10, scope: !5713)
!5952 = !DILocation(line: 2993, column: 3, scope: !5713)
!5953 = !DILocation(line: 2994, column: 1, scope: !5713)
!5954 = distinct !DISubprogram(name: "is_ineligible_successor", scope: !3, file: !3, line: 2667, type: !5955, scopeLine: 2668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5957)
!5955 = !DISubroutineType(types: !5956)
!5956 = !{!594, !1911, !1942}
!5957 = !{!5958, !5959, !5960}
!5958 = !DILocalVariable(name: "insn", arg: 1, scope: !5954, file: !3, line: 2667, type: !1911)
!5959 = !DILocalVariable(name: "p", arg: 2, scope: !5954, file: !3, line: 2667, type: !1942)
!5960 = !DILocalVariable(name: "prev_insn", scope: !5954, file: !3, line: 2669, type: !1911)
!5961 = !DILocation(line: 0, scope: !5954)
!5962 = !DILocation(line: 2672, column: 7, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 2672, column: 7)
!5964 = !DILocation(line: 2672, column: 24, scope: !5963)
!5965 = !DILocation(line: 2672, column: 27, scope: !5963)
!5966 = !DILocation(line: 2672, column: 56, scope: !5963)
!5967 = !DILocation(line: 2672, column: 7, scope: !5954)
!5968 = !DILocation(line: 2673, column: 5, scope: !5963)
!5969 = !DILocation(line: 2674, column: 12, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 2674, column: 12)
!5971 = !DILocation(line: 2674, column: 29, scope: !5970)
!5972 = !DILocation(line: 2674, column: 32, scope: !5970)
!5973 = !DILocation(line: 2674, column: 61, scope: !5970)
!5974 = !DILocation(line: 2674, column: 12, scope: !5963)
!5975 = !DILocation(line: 2675, column: 5, scope: !5970)
!5976 = !DILocation(line: 2678, column: 8, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 2678, column: 7)
!5978 = !DILocation(line: 2678, column: 7, scope: !5954)
!5979 = !DILocation(line: 2681, column: 15, scope: !5954)
!5980 = !DILocation(line: 2684, column: 7, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 2684, column: 7)
!5982 = !DILocation(line: 2684, column: 27, scope: !5981)
!5983 = !DILocation(line: 2684, column: 25, scope: !5981)
!5984 = !DILocation(line: 2686, column: 7, scope: !5981)
!5985 = !DILocation(line: 2686, column: 11, scope: !5981)
!5986 = !DILocation(line: 2686, column: 32, scope: !5981)
!5987 = !DILocation(line: 2686, column: 29, scope: !5981)
!5988 = !DILocation(line: 2687, column: 4, scope: !5981)
!5989 = !DILocation(line: 2687, column: 8, scope: !5981)
!5990 = !DILocation(line: 2693, column: 15, scope: !5981)
!5991 = !DILocation(line: 2693, column: 18, scope: !5981)
!5992 = !DILocation(line: 2695, column: 7, scope: !5981)
!5993 = !DILocation(line: 2695, column: 11, scope: !5981)
!5994 = !DILocation(line: 2695, column: 31, scope: !5981)
!5995 = !DILocation(line: 2695, column: 29, scope: !5981)
!5996 = !DILocation(line: 2696, column: 4, scope: !5981)
!5997 = !DILocation(line: 2696, column: 7, scope: !5981)
!5998 = !DILocation(line: 2700, column: 7, scope: !5981)
!5999 = !DILocation(line: 2700, column: 12, scope: !5981)
!6000 = !DILocation(line: 2701, column: 11, scope: !5981)
!6001 = !DILocation(line: 2701, column: 14, scope: !5981)
!6002 = !DILocation(line: 2701, column: 38, scope: !5981)
!6003 = !DILocation(line: 2684, column: 7, scope: !5954)
!6004 = !DILocation(line: 2704, column: 5, scope: !5981)
!6005 = !DILocation(line: 2705, column: 1, scope: !5954)
!6006 = distinct !DISubprogram(name: "_xlist_add", scope: !398, file: !398, line: 477, type: !6007, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6010)
!6007 = !DISubroutineType(types: !6008)
!6008 = !{null, !6009, !607}
!6009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!6010 = !{!6011, !6012}
!6011 = !DILocalVariable(name: "lp", arg: 1, scope: !6006, file: !398, line: 477, type: !6009)
!6012 = !DILocalVariable(name: "x", arg: 2, scope: !6006, file: !398, line: 477, type: !607)
!6013 = !DILocation(line: 0, scope: !6006)
!6014 = !DILocation(line: 479, column: 3, scope: !6006)
!6015 = !DILocation(line: 480, column: 3, scope: !6006)
!6016 = !DILocation(line: 480, column: 18, scope: !6006)
!6017 = !DILocation(line: 481, column: 1, scope: !6006)
!6018 = distinct !DISubprogram(name: "compute_av_set_at_bb_end", scope: !3, file: !3, line: 2712, type: !6019, scopeLine: 2713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6021)
!6019 = !DISubroutineType(types: !6020)
!6020 = !{!1945, !1911, !1942, !595}
!6021 = !{!6022, !6023, !6024, !6025, !6047, !6048, !6049, !6050, !6051, !6052, !6058, !6059, !6063, !6064, !6069, !6070, !6074, !6079, !6080, !6083, !6084, !6089, !6092, !6093, !6099, !6100, !6104}
!6022 = !DILocalVariable(name: "insn", arg: 1, scope: !6018, file: !3, line: 2712, type: !1911)
!6023 = !DILocalVariable(name: "p", arg: 2, scope: !6018, file: !3, line: 2712, type: !1942)
!6024 = !DILocalVariable(name: "ws", arg: 3, scope: !6018, file: !3, line: 2712, type: !595)
!6025 = !DILocalVariable(name: "sinfo", scope: !6018, file: !3, line: 2714, type: !6026)
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64)
!6027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "succs_info", file: !398, line: 998, size: 384, elements: !6028)
!6028 = !{!6029, !6030, !6037, !6043, !6044, !6045, !6046}
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6027, file: !398, line: 1001, baseType: !3609, size: 16)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "succs_ok", scope: !6027, file: !398, line: 1004, baseType: !6031, size: 64, offset: 64)
!6031 = !DIDerivedType(tag: DW_TAG_typedef, name: "insn_vec_t", file: !403, line: 41, baseType: !6032)
!6032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6033, size: 64)
!6033 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_heap", file: !414, line: 201, baseType: !6034)
!6034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_heap", file: !414, line: 201, size: 128, elements: !6035)
!6035 = !{!6036}
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6034, file: !414, line: 201, baseType: !1823, size: 128)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "probs_ok", scope: !6027, file: !398, line: 1008, baseType: !6038, size: 64, offset: 128)
!6038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6039, size: 64)
!6039 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1124, line: 32, baseType: !6040)
!6040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1124, line: 32, size: 96, elements: !6041)
!6041 = !{!6042}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6040, file: !1124, line: 32, baseType: !2966, size: 96)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "succs_other", scope: !6027, file: !398, line: 1011, baseType: !6031, size: 64, offset: 192)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "all_prob", scope: !6027, file: !398, line: 1014, baseType: !595, size: 32, offset: 256)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "all_succs_n", scope: !6027, file: !398, line: 1017, baseType: !595, size: 32, offset: 288)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "succs_ok_n", scope: !6027, file: !398, line: 1020, baseType: !595, size: 32, offset: 320)
!6047 = !DILocalVariable(name: "expr_in_all_succ_branches", scope: !6018, file: !3, line: 2715, type: !1945)
!6048 = !DILocalVariable(name: "is", scope: !6018, file: !3, line: 2716, type: !595)
!6049 = !DILocalVariable(name: "succ", scope: !6018, file: !3, line: 2717, type: !1911)
!6050 = !DILocalVariable(name: "zero_succ", scope: !6018, file: !3, line: 2717, type: !1911)
!6051 = !DILocalVariable(name: "av1", scope: !6018, file: !3, line: 2718, type: !1945)
!6052 = !DILocalVariable(name: "__j", scope: !6053, file: !3, line: 2729, type: !595)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 2729, column: 7)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 2729, column: 7)
!6055 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 2729, column: 7)
!6056 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 2728, column: 5)
!6057 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 2727, column: 7)
!6058 = !DILocalVariable(name: "__s", scope: !6053, file: !3, line: 2729, type: !597)
!6059 = !DILocalVariable(name: "__j", scope: !6060, file: !3, line: 2731, type: !595)
!6060 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 2731, column: 7)
!6061 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 2731, column: 7)
!6062 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 2731, column: 7)
!6063 = !DILocalVariable(name: "__s", scope: !6060, file: !3, line: 2731, type: !597)
!6064 = !DILocalVariable(name: "__j", scope: !6065, file: !3, line: 2733, type: !595)
!6065 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 2733, column: 9)
!6066 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 2733, column: 9)
!6067 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 2733, column: 9)
!6068 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 2732, column: 11)
!6069 = !DILocalVariable(name: "__s", scope: !6065, file: !3, line: 2733, type: !597)
!6070 = !DILocalVariable(name: "succ_set", scope: !6071, file: !3, line: 2741, type: !1945)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 2740, column: 5)
!6072 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 2739, column: 3)
!6073 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 2739, column: 3)
!6074 = !DILocalVariable(name: "i", scope: !6075, file: !3, line: 2764, type: !2188)
!6075 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 2763, column: 13)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 2755, column: 15)
!6077 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 2751, column: 2)
!6078 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 2750, column: 11)
!6079 = !DILocalVariable(name: "expr", scope: !6075, file: !3, line: 2765, type: !1834)
!6080 = !DILocalVariable(name: "bb0", scope: !6081, file: !3, line: 2777, type: !1141)
!6081 = distinct !DILexicalBlock(scope: !6082, file: !3, line: 2776, column: 9)
!6082 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 2775, column: 11)
!6083 = !DILocalVariable(name: "bb1", scope: !6081, file: !3, line: 2778, type: !1141)
!6084 = !DILocalVariable(name: "succ_bb", scope: !6085, file: !3, line: 2795, type: !1141)
!6085 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 2794, column: 7)
!6086 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 2793, column: 5)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 2793, column: 5)
!6088 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 2792, column: 7)
!6089 = !DILocalVariable(name: "i", scope: !6090, file: !3, line: 2810, type: !2188)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 2809, column: 5)
!6091 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 2808, column: 7)
!6092 = !DILocalVariable(name: "expr", scope: !6090, file: !3, line: 2811, type: !1834)
!6093 = !DILocalVariable(name: "__j", scope: !6094, file: !3, line: 2833, type: !595)
!6094 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 2833, column: 7)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 2833, column: 7)
!6096 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 2833, column: 7)
!6097 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 2832, column: 5)
!6098 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 2831, column: 7)
!6099 = !DILocalVariable(name: "__s", scope: !6094, file: !3, line: 2833, type: !597)
!6100 = !DILocalVariable(name: "__j", scope: !6101, file: !3, line: 2835, type: !595)
!6101 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 2835, column: 7)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 2835, column: 7)
!6103 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 2835, column: 7)
!6104 = !DILocalVariable(name: "__s", scope: !6101, file: !3, line: 2835, type: !597)
!6105 = !DILocation(line: 0, scope: !6018)
!6106 = !DILocation(line: 2715, column: 3, scope: !6018)
!6107 = !DILocation(line: 2715, column: 12, scope: !6018)
!6108 = !DILocation(line: 2717, column: 3, scope: !6018)
!6109 = !DILocation(line: 2718, column: 3, scope: !6018)
!6110 = !DILocation(line: 2718, column: 12, scope: !6018)
!6111 = !DILocation(line: 2720, column: 3, scope: !6018)
!6112 = !DILocation(line: 2724, column: 11, scope: !6018)
!6113 = !DILocation(line: 2727, column: 7, scope: !6057)
!6114 = !DILocation(line: 2727, column: 21, scope: !6057)
!6115 = !DILocation(line: 2727, column: 7, scope: !6018)
!6116 = !DILocation(line: 2729, column: 7, scope: !6054)
!6117 = !DILocation(line: 2729, column: 7, scope: !6055)
!6118 = !DILocation(line: 2729, column: 7, scope: !6053)
!6119 = !DILocation(line: 0, scope: !6053)
!6120 = !DILocation(line: 2730, column: 32, scope: !6056)
!6121 = !DILocation(line: 2730, column: 7, scope: !6056)
!6122 = !DILocation(line: 2731, column: 7, scope: !6061)
!6123 = !DILocation(line: 2731, column: 7, scope: !6062)
!6124 = !DILocation(line: 2731, column: 7, scope: !6060)
!6125 = !DILocation(line: 0, scope: !6060)
!6126 = !DILocation(line: 2732, column: 18, scope: !6068)
!6127 = !DILocation(line: 2732, column: 39, scope: !6068)
!6128 = !DILocation(line: 2732, column: 29, scope: !6068)
!6129 = !DILocation(line: 2732, column: 11, scope: !6056)
!6130 = !DILocation(line: 2733, column: 9, scope: !6066)
!6131 = !DILocation(line: 2733, column: 9, scope: !6067)
!6132 = !DILocation(line: 2733, column: 9, scope: !6065)
!6133 = !DILocation(line: 0, scope: !6065)
!6134 = !DILocation(line: 2737, column: 3, scope: !6018)
!6135 = !DILocation(line: 0, scope: !6072)
!6136 = !DILocation(line: 0, scope: !6071)
!6137 = !DILocation(line: 0, scope: !6078)
!6138 = !DILocation(line: 0, scope: !6075)
!6139 = !DILocation(line: 0, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 2767, column: 15)
!6141 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 2767, column: 15)
!6142 = !DILocation(line: 0, scope: !6082)
!6143 = !DILocation(line: 2739, column: 8, scope: !6073)
!6144 = !DILocation(line: 0, scope: !6073)
!6145 = !DILocation(line: 2739, column: 16, scope: !6072)
!6146 = !DILocation(line: 2739, column: 3, scope: !6073)
!6147 = !DILocation(line: 2741, column: 7, scope: !6071)
!6148 = !DILocation(line: 2744, column: 44, scope: !6071)
!6149 = !DILocation(line: 2744, column: 50, scope: !6071)
!6150 = !DILocation(line: 2744, column: 18, scope: !6071)
!6151 = !DILocation(line: 2744, column: 16, scope: !6071)
!6152 = !DILocation(line: 2747, column: 32, scope: !6071)
!6153 = !DILocation(line: 2748, column: 39, scope: !6071)
!6154 = !DILocation(line: 2746, column: 7, scope: !6071)
!6155 = !DILocation(line: 2750, column: 18, scope: !6078)
!6156 = !DILocation(line: 2750, column: 30, scope: !6078)
!6157 = !DILocation(line: 2750, column: 11, scope: !6071)
!6158 = !DILocation(line: 2755, column: 18, scope: !6076)
!6159 = !DILocation(line: 2755, column: 15, scope: !6077)
!6160 = !DILocation(line: 2757, column: 56, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 2756, column: 13)
!6162 = !DILocation(line: 2757, column: 43, scope: !6161)
!6163 = !DILocation(line: 2757, column: 41, scope: !6161)
!6164 = !DILocation(line: 2760, column: 27, scope: !6161)
!6165 = !DILocation(line: 2761, column: 13, scope: !6161)
!6166 = !DILocation(line: 2764, column: 15, scope: !6075)
!6167 = !DILocation(line: 2765, column: 15, scope: !6075)
!6168 = !DILocation(line: 2767, column: 15, scope: !6141)
!6169 = !DILocation(line: 2767, column: 15, scope: !6140)
!6170 = !DILocation(line: 2768, column: 38, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 2768, column: 21)
!6172 = !DILocation(line: 2768, column: 48, scope: !6171)
!6173 = !DILocation(line: 2768, column: 22, scope: !6171)
!6174 = !DILocation(line: 2768, column: 21, scope: !6140)
!6175 = !DILocation(line: 2769, column: 19, scope: !6171)
!6176 = distinct !{!6176, !6168, !6177}
!6177 = !DILocation(line: 2769, column: 41, scope: !6141)
!6178 = !DILocation(line: 2770, column: 13, scope: !6076)
!6179 = !DILocation(line: 2775, column: 18, scope: !6082)
!6180 = !DILocation(line: 2775, column: 29, scope: !6082)
!6181 = !DILocation(line: 2775, column: 40, scope: !6082)
!6182 = !DILocation(line: 2775, column: 34, scope: !6082)
!6183 = !DILocation(line: 2777, column: 29, scope: !6081)
!6184 = !DILocation(line: 0, scope: !6081)
!6185 = !DILocation(line: 2778, column: 29, scope: !6081)
!6186 = !DILocation(line: 2780, column: 11, scope: !6081)
!6187 = !DILocation(line: 2782, column: 34, scope: !6081)
!6188 = !DILocation(line: 2783, column: 34, scope: !6081)
!6189 = !DILocation(line: 2781, column: 11, scope: !6081)
!6190 = !DILocation(line: 2785, column: 9, scope: !6081)
!6191 = !DILocation(line: 2787, column: 9, scope: !6082)
!6192 = !DILocation(line: 2788, column: 5, scope: !6072)
!6193 = !DILocation(line: 2739, column: 64, scope: !6072)
!6194 = !DILocation(line: 2739, column: 3, scope: !6072)
!6195 = distinct !{!6195, !6146, !6196}
!6196 = !DILocation(line: 2788, column: 5, scope: !6073)
!6197 = !DILocation(line: 2792, column: 14, scope: !6088)
!6198 = !DILocation(line: 2792, column: 25, scope: !6088)
!6199 = !DILocation(line: 2792, column: 7, scope: !6018)
!6200 = !DILocation(line: 2793, column: 5, scope: !6087)
!6201 = !DILocation(line: 0, scope: !6087)
!6202 = !DILocation(line: 2793, column: 18, scope: !6086)
!6203 = !DILocation(line: 2795, column: 31, scope: !6085)
!6204 = !DILocation(line: 0, scope: !6085)
!6205 = !DILocation(line: 2797, column: 9, scope: !6085)
!6206 = !DILocation(line: 2798, column: 35, scope: !6085)
!6207 = !DILocation(line: 2798, column: 40, scope: !6085)
!6208 = !DILocation(line: 2799, column: 35, scope: !6085)
!6209 = !DILocation(line: 2798, column: 9, scope: !6085)
!6210 = !DILocation(line: 2793, column: 66, scope: !6086)
!6211 = !DILocation(line: 2793, column: 5, scope: !6086)
!6212 = distinct !{!6212, !6200, !6213}
!6213 = !DILocation(line: 2800, column: 7, scope: !6087)
!6214 = !DILocation(line: 2803, column: 35, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 2803, column: 7)
!6216 = !DILocation(line: 2803, column: 14, scope: !6215)
!6217 = !DILocation(line: 2803, column: 26, scope: !6215)
!6218 = !DILocation(line: 2803, column: 7, scope: !6018)
!6219 = !DILocation(line: 0, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 2804, column: 5)
!6221 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 2804, column: 5)
!6222 = !DILocation(line: 2804, column: 5, scope: !6221)
!6223 = !DILocation(line: 0, scope: !6221)
!6224 = !DILocation(line: 2804, column: 18, scope: !6220)
!6225 = !DILocation(line: 2806, column: 10, scope: !6220)
!6226 = !DILocation(line: 2806, column: 21, scope: !6220)
!6227 = !DILocation(line: 2805, column: 7, scope: !6220)
!6228 = !DILocation(line: 2804, column: 69, scope: !6220)
!6229 = !DILocation(line: 2804, column: 5, scope: !6220)
!6230 = distinct !{!6230, !6222, !6231}
!6231 = !DILocation(line: 2806, column: 54, scope: !6221)
!6232 = !DILocation(line: 2808, column: 14, scope: !6091)
!6233 = !DILocation(line: 2808, column: 26, scope: !6091)
!6234 = !DILocation(line: 2808, column: 7, scope: !6018)
!6235 = !DILocation(line: 2810, column: 7, scope: !6090)
!6236 = !DILocation(line: 2811, column: 7, scope: !6090)
!6237 = !DILocation(line: 0, scope: !6090)
!6238 = !DILocation(line: 2815, column: 7, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 2815, column: 7)
!6240 = !DILocation(line: 0, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 2815, column: 7)
!6242 = !DILocation(line: 2815, column: 7, scope: !6241)
!6243 = !DILocation(line: 2816, column: 23, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 2816, column: 6)
!6245 = !DILocation(line: 2816, column: 50, scope: !6244)
!6246 = !DILocation(line: 2816, column: 7, scope: !6244)
!6247 = !DILocation(line: 2816, column: 6, scope: !6241)
!6248 = !DILocation(line: 2817, column: 4, scope: !6244)
!6249 = !DILocation(line: 2817, column: 20, scope: !6244)
!6250 = distinct !{!6250, !6238, !6251}
!6251 = !DILocation(line: 2817, column: 20, scope: !6239)
!6252 = !DILocation(line: 2819, column: 7, scope: !6090)
!6253 = !DILocation(line: 2825, column: 7, scope: !6090)
!6254 = !DILocation(line: 2826, column: 5, scope: !6091)
!6255 = !DILocation(line: 2826, column: 5, scope: !6090)
!6256 = !DILocation(line: 2828, column: 3, scope: !6018)
!6257 = !DILocation(line: 2829, column: 3, scope: !6018)
!6258 = !DILocation(line: 2831, column: 7, scope: !6098)
!6259 = !DILocation(line: 2831, column: 21, scope: !6098)
!6260 = !DILocation(line: 2831, column: 7, scope: !6018)
!6261 = !DILocation(line: 2833, column: 7, scope: !6095)
!6262 = !DILocation(line: 2833, column: 7, scope: !6096)
!6263 = !DILocation(line: 2833, column: 7, scope: !6094)
!6264 = !DILocation(line: 0, scope: !6094)
!6265 = !DILocation(line: 2834, column: 20, scope: !6097)
!6266 = !DILocation(line: 2834, column: 7, scope: !6097)
!6267 = !DILocation(line: 2835, column: 7, scope: !6102)
!6268 = !DILocation(line: 2835, column: 7, scope: !6103)
!6269 = !DILocation(line: 2835, column: 7, scope: !6101)
!6270 = !DILocation(line: 0, scope: !6101)
!6271 = !DILocation(line: 2838, column: 10, scope: !6018)
!6272 = !DILocation(line: 2839, column: 1, scope: !6018)
!6273 = !DILocation(line: 2838, column: 3, scope: !6018)
!6274 = distinct !DISubprogram(name: "moveup_set_expr", scope: !3, file: !3, line: 2582, type: !6275, scopeLine: 2583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6278)
!6275 = !DISubroutineType(types: !6276)
!6276 = !{null, !6277, !1911, !594}
!6277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!6278 = !{!6279, !6280, !6281, !6282, !6283}
!6279 = !DILocalVariable(name: "avp", arg: 1, scope: !6274, file: !3, line: 2582, type: !6277)
!6280 = !DILocalVariable(name: "insn", arg: 2, scope: !6274, file: !3, line: 2582, type: !1911)
!6281 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !6274, file: !3, line: 2582, type: !594)
!6282 = !DILocalVariable(name: "i", scope: !6274, file: !3, line: 2584, type: !2188)
!6283 = !DILocalVariable(name: "expr", scope: !6274, file: !3, line: 2585, type: !1834)
!6284 = !DILocation(line: 0, scope: !6274)
!6285 = !DILocation(line: 2584, column: 3, scope: !6274)
!6286 = !DILocation(line: 2585, column: 3, scope: !6274)
!6287 = !DILocation(line: 2587, column: 3, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 2587, column: 3)
!6289 = !DILocation(line: 0, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 2587, column: 3)
!6291 = !DILocation(line: 2587, column: 3, scope: !6290)
!6292 = !DILocation(line: 2590, column: 35, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 2588, column: 5)
!6294 = !DILocation(line: 2590, column: 15, scope: !6293)
!6295 = !DILocation(line: 2590, column: 7, scope: !6293)
!6296 = !DILocation(line: 2597, column: 4, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 2591, column: 2)
!6298 = !DILocation(line: 2598, column: 4, scope: !6297)
!6299 = !DILocation(line: 2601, column: 51, scope: !6297)
!6300 = !DILocation(line: 2601, column: 18, scope: !6297)
!6301 = !DILocation(line: 2601, column: 16, scope: !6297)
!6302 = !DILocation(line: 2602, column: 4, scope: !6297)
!6303 = !DILocation(line: 2605, column: 4, scope: !6297)
!6304 = !DILocation(line: 2606, column: 2, scope: !6297)
!6305 = distinct !{!6305, !6287, !6306}
!6306 = !DILocation(line: 2607, column: 5, scope: !6288)
!6307 = !DILocation(line: 2608, column: 1, scope: !6274)
!6308 = distinct !DISubprogram(name: "_list_remove", scope: !398, file: !398, line: 399, type: !6309, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6311)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{null, !2193}
!6311 = !{!6312, !6313}
!6312 = !DILocalVariable(name: "lp", arg: 1, scope: !6308, file: !398, line: 399, type: !2193)
!6313 = !DILocalVariable(name: "n", scope: !6308, file: !398, line: 401, type: !1928)
!6314 = !DILocation(line: 0, scope: !6308)
!6315 = !DILocation(line: 401, column: 15, scope: !6308)
!6316 = !DILocation(line: 403, column: 9, scope: !6308)
!6317 = !DILocation(line: 403, column: 7, scope: !6308)
!6318 = !DILocation(line: 404, column: 14, scope: !6308)
!6319 = !DILocation(line: 404, column: 32, scope: !6308)
!6320 = !DILocation(line: 404, column: 3, scope: !6308)
!6321 = !DILocation(line: 405, column: 1, scope: !6308)
!6322 = distinct !DISubprogram(name: "_xlist_is_in_p", scope: !398, file: !398, line: 487, type: !6323, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6325)
!6323 = !DISubroutineType(types: !6324)
!6324 = !{!594, !1943, !607}
!6325 = !{!6326, !6327}
!6326 = !DILocalVariable(name: "l", arg: 1, scope: !6322, file: !398, line: 487, type: !1943)
!6327 = !DILocalVariable(name: "x", arg: 2, scope: !6322, file: !398, line: 487, type: !607)
!6328 = !DILocation(line: 0, scope: !6322)
!6329 = !DILocation(line: 489, column: 3, scope: !6322)
!6330 = !DILocation(line: 491, column: 11, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !398, line: 491, column: 11)
!6332 = distinct !DILexicalBlock(scope: !6322, file: !398, line: 490, column: 5)
!6333 = !DILocation(line: 491, column: 24, scope: !6331)
!6334 = !DILocation(line: 491, column: 11, scope: !6332)
!6335 = !DILocation(line: 493, column: 11, scope: !6332)
!6336 = distinct !{!6336, !6329, !6337}
!6337 = !DILocation(line: 494, column: 5, scope: !6322)
!6338 = !DILocation(line: 497, column: 1, scope: !6322)
!6339 = distinct !DISubprogram(name: "_list_add", scope: !398, file: !398, line: 382, type: !6309, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6340)
!6340 = !{!6341, !6342}
!6341 = !DILocalVariable(name: "lp", arg: 1, scope: !6339, file: !398, line: 382, type: !2193)
!6342 = !DILocalVariable(name: "l", scope: !6339, file: !398, line: 384, type: !1928)
!6343 = !DILocation(line: 0, scope: !6339)
!6344 = !DILocation(line: 384, column: 15, scope: !6339)
!6345 = !DILocation(line: 386, column: 20, scope: !6339)
!6346 = !DILocation(line: 386, column: 18, scope: !6339)
!6347 = !DILocation(line: 387, column: 7, scope: !6339)
!6348 = !DILocation(line: 388, column: 1, scope: !6339)
!6349 = distinct !DISubprogram(name: "_list_alloc", scope: !398, file: !398, line: 376, type: !6350, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2384)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{!1928}
!6352 = !DILocation(line: 378, column: 32, scope: !6349)
!6353 = !DILocation(line: 378, column: 20, scope: !6349)
!6354 = !DILocation(line: 378, column: 10, scope: !6349)
!6355 = !DILocation(line: 378, column: 3, scope: !6349)
!6356 = distinct !DISubprogram(name: "VEC_rtx_base_iterate", scope: !414, file: !414, line: 200, type: !6357, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6361)
!6357 = !DISubroutineType(types: !6358)
!6358 = !{!595, !6359, !7, !4934}
!6359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6360, size: 64)
!6360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1823)
!6361 = !{!6362, !6363, !6364}
!6362 = !DILocalVariable(name: "vec_", arg: 1, scope: !6356, file: !414, line: 200, type: !6359)
!6363 = !DILocalVariable(name: "ix_", arg: 2, scope: !6356, file: !414, line: 200, type: !7)
!6364 = !DILocalVariable(name: "ptr", arg: 3, scope: !6356, file: !414, line: 200, type: !4934)
!6365 = !DILocation(line: 0, scope: !6356)
!6366 = !DILocation(line: 200, column: 1, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6356, file: !414, line: 200, column: 1)
!6368 = !DILocation(line: 200, column: 1, scope: !6356)
!6369 = !DILocation(line: 200, column: 1, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6367, file: !414, line: 200, column: 1)
!6371 = !DILocation(line: 200, column: 1, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6367, file: !414, line: 200, column: 1)
!6373 = !DILocation(line: 0, scope: !6367)
!6374 = distinct !DISubprogram(name: "_list_iter_start", scope: !398, file: !398, line: 429, type: !6375, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6378)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{null, !6377, !2193, !594}
!6377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!6378 = !{!6379, !6380, !6381}
!6379 = !DILocalVariable(name: "ip", arg: 1, scope: !6374, file: !398, line: 429, type: !6377)
!6380 = !DILocalVariable(name: "lp", arg: 2, scope: !6374, file: !398, line: 429, type: !2193)
!6381 = !DILocalVariable(name: "can_remove_p", arg: 3, scope: !6374, file: !398, line: 429, type: !594)
!6382 = !DILocation(line: 0, scope: !6374)
!6383 = !DILocation(line: 431, column: 7, scope: !6374)
!6384 = !DILocation(line: 431, column: 10, scope: !6374)
!6385 = !DILocation(line: 432, column: 7, scope: !6374)
!6386 = !DILocation(line: 432, column: 20, scope: !6374)
!6387 = !DILocation(line: 433, column: 7, scope: !6374)
!6388 = !DILocation(line: 433, column: 17, scope: !6374)
!6389 = !DILocation(line: 434, column: 1, scope: !6374)
!6390 = distinct !DISubprogram(name: "_list_iter_cond_expr", scope: !398, file: !398, line: 538, type: !6391, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6394)
!6391 = !DISubroutineType(types: !6392)
!6392 = !{!594, !1945, !6393}
!6393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!6394 = !{!6395, !6396}
!6395 = !DILocalVariable(name: "av", arg: 1, scope: !6390, file: !398, line: 538, type: !1945)
!6396 = !DILocalVariable(name: "exprp", arg: 2, scope: !6390, file: !398, line: 538, type: !6393)
!6397 = !DILocation(line: 0, scope: !6390)
!6398 = !DILocation(line: 540, column: 7, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6390, file: !398, line: 540, column: 7)
!6400 = !DILocation(line: 540, column: 7, scope: !6390)
!6401 = !DILocation(line: 542, column: 16, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6399, file: !398, line: 541, column: 5)
!6403 = !DILocation(line: 542, column: 14, scope: !6402)
!6404 = !DILocation(line: 543, column: 7, scope: !6402)
!6405 = !DILocation(line: 547, column: 1, scope: !6390)
!6406 = distinct !DISubprogram(name: "_list_iter_next", scope: !398, file: !398, line: 437, type: !6407, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6409)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{null, !6377}
!6409 = !{!6410}
!6410 = !DILocalVariable(name: "ip", arg: 1, scope: !6406, file: !398, line: 437, type: !6377)
!6411 = !DILocation(line: 0, scope: !6406)
!6412 = !DILocation(line: 439, column: 12, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6406, file: !398, line: 439, column: 7)
!6414 = !DILocation(line: 439, column: 8, scope: !6413)
!6415 = !DILocation(line: 439, column: 7, scope: !6406)
!6416 = !DILocation(line: 440, column: 15, scope: !6413)
!6417 = !DILocation(line: 440, column: 12, scope: !6413)
!6418 = !DILocation(line: 440, column: 5, scope: !6413)
!6419 = !DILocation(line: 442, column: 19, scope: !6413)
!6420 = !DILocation(line: 443, column: 1, scope: !6406)
!6421 = distinct !DISubprogram(name: "vinsn_vec_add", scope: !3, file: !3, line: 3657, type: !6422, scopeLine: 3658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6425)
!6422 = !DISubroutineType(types: !6423)
!6423 = !{null, !6424, !1834}
!6424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!6425 = !{!6426, !6427}
!6426 = !DILocalVariable(name: "vinsn_vec", arg: 1, scope: !6421, file: !3, line: 3657, type: !6424)
!6427 = !DILocalVariable(name: "expr", arg: 2, scope: !6421, file: !3, line: 3657, type: !1834)
!6428 = !DILocation(line: 0, scope: !6421)
!6429 = !DILocation(line: 3659, column: 17, scope: !6421)
!6430 = !DILocation(line: 3659, column: 3, scope: !6421)
!6431 = !DILocation(line: 3660, column: 3, scope: !6421)
!6432 = !DILocation(line: 3661, column: 1, scope: !6421)
!6433 = distinct !DISubprogram(name: "VEC_vinsn_t_heap_safe_push", scope: !3, file: !3, line: 512, type: !6434, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6437)
!6434 = !DISubroutineType(types: !6435)
!6435 = !{!4937, !6436, !1840}
!6436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!6437 = !{!6438, !6439}
!6438 = !DILocalVariable(name: "vec_", arg: 1, scope: !6433, file: !3, line: 512, type: !6436)
!6439 = !DILocalVariable(name: "obj_", arg: 2, scope: !6433, file: !3, line: 512, type: !1840)
!6440 = !DILocation(line: 0, scope: !6433)
!6441 = !DILocation(line: 512, column: 1, scope: !6433)
!6442 = distinct !DISubprogram(name: "VEC_vinsn_t_heap_reserve", scope: !3, file: !3, line: 512, type: !6443, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6445)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{!595, !6436, !595}
!6445 = !{!6446, !6447, !6448}
!6446 = !DILocalVariable(name: "vec_", arg: 1, scope: !6442, file: !3, line: 512, type: !6436)
!6447 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6442, file: !3, line: 512, type: !595)
!6448 = !DILocalVariable(name: "extend", scope: !6442, file: !3, line: 512, type: !595)
!6449 = !DILocation(line: 0, scope: !6442)
!6450 = !DILocation(line: 512, column: 1, scope: !6442)
!6451 = !DILocation(line: 512, column: 1, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 512, column: 1)
!6453 = distinct !DISubprogram(name: "VEC_vinsn_t_base_quick_push", scope: !3, file: !3, line: 511, type: !6454, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6457)
!6454 = !DISubroutineType(types: !6455)
!6455 = !{!4937, !6456, !1840}
!6456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!6457 = !{!6458, !6459, !6460}
!6458 = !DILocalVariable(name: "vec_", arg: 1, scope: !6453, file: !3, line: 511, type: !6456)
!6459 = !DILocalVariable(name: "obj_", arg: 2, scope: !6453, file: !3, line: 511, type: !1840)
!6460 = !DILocalVariable(name: "slot_", scope: !6453, file: !3, line: 511, type: !4937)
!6461 = !DILocation(line: 0, scope: !6453)
!6462 = !DILocation(line: 511, column: 1, scope: !6453)
!6463 = distinct !DISubprogram(name: "VEC_vinsn_t_base_space", scope: !3, file: !3, line: 511, type: !6464, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6466)
!6464 = !DISubroutineType(types: !6465)
!6465 = !{!595, !6456, !595}
!6466 = !{!6467, !6468}
!6467 = !DILocalVariable(name: "vec_", arg: 1, scope: !6463, file: !3, line: 511, type: !6456)
!6468 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6463, file: !3, line: 511, type: !595)
!6469 = !DILocation(line: 0, scope: !6463)
!6470 = !DILocation(line: 511, column: 1, scope: !6463)
!6471 = distinct !DISubprogram(name: "compute_live_below_insn", scope: !3, file: !3, line: 3147, type: !6472, scopeLine: 3148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6474)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{null, !607, !1852}
!6474 = !{!6475, !6476, !6477, !6478}
!6475 = !DILocalVariable(name: "insn", arg: 1, scope: !6471, file: !3, line: 3147, type: !607)
!6476 = !DILocalVariable(name: "regs", arg: 2, scope: !6471, file: !3, line: 3147, type: !1852)
!6477 = !DILocalVariable(name: "succ", scope: !6471, file: !3, line: 3149, type: !607)
!6478 = !DILocalVariable(name: "si", scope: !6471, file: !3, line: 3150, type: !3600)
!6479 = !DILocation(line: 0, scope: !6471)
!6480 = !DILocation(line: 3149, column: 3, scope: !6471)
!6481 = !DILocation(line: 3150, column: 3, scope: !6471)
!6482 = !DILocation(line: 3152, column: 3, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 3152, column: 3)
!6484 = !DILocation(line: 3152, column: 3, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6483, file: !3, line: 3152, column: 3)
!6486 = !DILocation(line: 3153, column: 5, scope: !6485)
!6487 = distinct !{!6487, !6482, !6488}
!6488 = !DILocation(line: 3153, column: 5, scope: !6483)
!6489 = !DILocation(line: 3154, column: 1, scope: !6471)
!6490 = distinct !DISubprogram(name: "_succ_iter_start", scope: !398, file: !398, line: 1200, type: !6491, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6493)
!6491 = !DISubroutineType(types: !6492)
!6492 = !{!3600, !4149, !1911, !595}
!6493 = !{!6494, !6495, !6496, !6497, !6498}
!6494 = !DILocalVariable(name: "succp", arg: 1, scope: !6490, file: !398, line: 1200, type: !4149)
!6495 = !DILocalVariable(name: "insn", arg: 2, scope: !6490, file: !398, line: 1200, type: !1911)
!6496 = !DILocalVariable(name: "flags", arg: 3, scope: !6490, file: !398, line: 1200, type: !595)
!6497 = !DILocalVariable(name: "i", scope: !6490, file: !398, line: 1202, type: !3600)
!6498 = !DILocalVariable(name: "bb", scope: !6490, file: !398, line: 1204, type: !1141)
!6499 = !DILocation(line: 0, scope: !6490)
!6500 = !DILocation(line: 1202, column: 17, scope: !6490)
!6501 = !DILocation(line: 1204, column: 20, scope: !6490)
!6502 = !DILocation(line: 1206, column: 3, scope: !6490)
!6503 = !DILocation(line: 1208, column: 13, scope: !6490)
!6504 = !DILocation(line: 1208, column: 5, scope: !6490)
!6505 = !DILocation(line: 1208, column: 11, scope: !6490)
!6506 = !DILocation(line: 1211, column: 10, scope: !6490)
!6507 = !DILocation(line: 1212, column: 5, scope: !6490)
!6508 = !DILocation(line: 1212, column: 8, scope: !6490)
!6509 = !DILocation(line: 1213, column: 5, scope: !6490)
!6510 = !DILocation(line: 1213, column: 8, scope: !6490)
!6511 = !DILocation(line: 1214, column: 5, scope: !6490)
!6512 = !DILocation(line: 1214, column: 8, scope: !6490)
!6513 = !DILocation(line: 1215, column: 5, scope: !6490)
!6514 = !DILocation(line: 1215, column: 19, scope: !6490)
!6515 = !DILocation(line: 1216, column: 5, scope: !6490)
!6516 = !DILocation(line: 1216, column: 18, scope: !6490)
!6517 = !DILocation(line: 1217, column: 5, scope: !6490)
!6518 = !DILocation(line: 1217, column: 16, scope: !6490)
!6519 = !DILocation(line: 1219, column: 13, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6490, file: !398, line: 1219, column: 7)
!6521 = !DILocation(line: 1219, column: 10, scope: !6520)
!6522 = !DILocation(line: 1219, column: 28, scope: !6520)
!6523 = !DILocation(line: 1219, column: 31, scope: !6520)
!6524 = !DILocation(line: 1219, column: 43, scope: !6520)
!6525 = !DILocation(line: 1219, column: 7, scope: !6490)
!6526 = !DILocation(line: 1221, column: 9, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6520, file: !398, line: 1220, column: 5)
!6528 = !DILocation(line: 1221, column: 16, scope: !6527)
!6529 = !DILocation(line: 1224, column: 12, scope: !6527)
!6530 = !DILocation(line: 1224, column: 18, scope: !6527)
!6531 = !DILocation(line: 1225, column: 12, scope: !6527)
!6532 = !DILocation(line: 1225, column: 22, scope: !6527)
!6533 = !DILocation(line: 1226, column: 5, scope: !6527)
!6534 = !DILocation(line: 1229, column: 9, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6520, file: !398, line: 1228, column: 5)
!6536 = !DILocation(line: 1229, column: 14, scope: !6535)
!6537 = !DILocation(line: 1230, column: 9, scope: !6535)
!6538 = !DILocation(line: 1230, column: 16, scope: !6535)
!6539 = !DILocation(line: 1234, column: 1, scope: !6490)
!6540 = distinct !DISubprogram(name: "_succ_iter_cond", scope: !398, file: !398, line: 1237, type: !6541, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6547)
!6541 = !DISubroutineType(types: !6542)
!6542 = !{!594, !6543, !4934, !607, !6544}
!6543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!6544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6545, size: 64)
!6545 = !DISubroutineType(types: !6546)
!6546 = !{!594, !1158, !6543}
!6547 = !{!6548, !6549, !6550, !6551, !6552, !6556, !6558}
!6548 = !DILocalVariable(name: "ip", arg: 1, scope: !6540, file: !398, line: 1237, type: !6543)
!6549 = !DILocalVariable(name: "succp", arg: 2, scope: !6540, file: !398, line: 1237, type: !4934)
!6550 = !DILocalVariable(name: "insn", arg: 3, scope: !6540, file: !398, line: 1237, type: !607)
!6551 = !DILocalVariable(name: "check", arg: 4, scope: !6540, file: !398, line: 1238, type: !6544)
!6552 = !DILocalVariable(name: "e_tmp", scope: !6553, file: !398, line: 1255, type: !1158)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !398, line: 1254, column: 9)
!6554 = distinct !DILexicalBlock(scope: !6555, file: !398, line: 1252, column: 5)
!6555 = distinct !DILexicalBlock(scope: !6540, file: !398, line: 1240, column: 7)
!6556 = !DILocalVariable(name: "bb", scope: !6557, file: !398, line: 1282, type: !1141)
!6557 = distinct !DILexicalBlock(scope: !6553, file: !398, line: 1281, column: 13)
!6558 = !DILocalVariable(name: "bb", scope: !6559, file: !398, line: 1322, type: !1141)
!6559 = distinct !DILexicalBlock(scope: !6560, file: !398, line: 1321, column: 2)
!6560 = distinct !DILexicalBlock(scope: !6554, file: !398, line: 1320, column: 11)
!6561 = !DILocation(line: 0, scope: !6540)
!6562 = !DILocation(line: 1240, column: 12, scope: !6555)
!6563 = !DILocation(line: 1240, column: 8, scope: !6555)
!6564 = !DILocation(line: 1240, column: 7, scope: !6540)
!6565 = !DILocation(line: 0, scope: !6553)
!6566 = !DILocation(line: 0, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6553, file: !398, line: 1258, column: 15)
!6568 = !DILocation(line: 0, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6570, file: !398, line: 1261, column: 17)
!6570 = distinct !DILexicalBlock(scope: !6567, file: !398, line: 1259, column: 13)
!6571 = !DILocation(line: 0, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6573, file: !398, line: 1274, column: 13)
!6573 = distinct !DILexicalBlock(scope: !6553, file: !398, line: 1273, column: 15)
!6574 = !DILocation(line: 0, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6557, file: !398, line: 1285, column: 19)
!6576 = !DILocation(line: 0, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6578, file: !398, line: 1295, column: 7)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !398, line: 1294, column: 9)
!6579 = distinct !DILexicalBlock(scope: !6575, file: !398, line: 1290, column: 17)
!6580 = !DILocation(line: 1258, column: 15, scope: !6553)
!6581 = !DILocation(line: 1244, column: 11, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6583, file: !398, line: 1244, column: 11)
!6583 = distinct !DILexicalBlock(scope: !6555, file: !398, line: 1241, column: 5)
!6584 = !DILocation(line: 1244, column: 18, scope: !6582)
!6585 = !DILocation(line: 1244, column: 26, scope: !6582)
!6586 = !DILocation(line: 1244, column: 34, scope: !6582)
!6587 = !DILocation(line: 1244, column: 40, scope: !6582)
!6588 = !DILocation(line: 1244, column: 56, scope: !6582)
!6589 = !DILocation(line: 1244, column: 11, scope: !6583)
!6590 = !DILocation(line: 1247, column: 16, scope: !6583)
!6591 = !DILocation(line: 1247, column: 14, scope: !6583)
!6592 = !DILocation(line: 1248, column: 11, scope: !6583)
!6593 = !DILocation(line: 1248, column: 25, scope: !6583)
!6594 = !DILocation(line: 1249, column: 7, scope: !6583)
!6595 = !DILocation(line: 1255, column: 11, scope: !6553)
!6596 = !DILocation(line: 1255, column: 16, scope: !6553)
!6597 = !DILocation(line: 1258, column: 19, scope: !6567)
!6598 = !DILocation(line: 1258, column: 15, scope: !6567)
!6599 = !DILocation(line: 1260, column: 15, scope: !6570)
!6600 = !DILocation(line: 1262, column: 19, scope: !6569)
!6601 = !DILocation(line: 1264, column: 35, scope: !6569)
!6602 = !DILocation(line: 1266, column: 15, scope: !6570)
!6603 = !DILocation(line: 1266, column: 21, scope: !6570)
!6604 = !DILocation(line: 1266, column: 25, scope: !6570)
!6605 = !DILocation(line: 1266, column: 24, scope: !6570)
!6606 = !DILocation(line: 1265, column: 17, scope: !6569)
!6607 = distinct !{!6607, !6599, !6608}
!6608 = !DILocation(line: 1266, column: 42, scope: !6570)
!6609 = !DILocation(line: 1268, column: 20, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6570, file: !398, line: 1268, column: 19)
!6611 = !DILocation(line: 0, scope: !6570)
!6612 = !DILocation(line: 1268, column: 19, scope: !6570)
!6613 = !DILocation(line: 1269, column: 17, scope: !6610)
!6614 = !DILocation(line: 1273, column: 15, scope: !6573)
!6615 = !DILocation(line: 1273, column: 15, scope: !6553)
!6616 = !DILocation(line: 1280, column: 11, scope: !6553)
!6617 = !DILocation(line: 1275, column: 22, scope: !6572)
!6618 = !DILocation(line: 1276, column: 15, scope: !6572)
!6619 = !DILocation(line: 1280, column: 18, scope: !6553)
!6620 = !DILocation(line: 1282, column: 36, scope: !6557)
!6621 = !DILocation(line: 1282, column: 40, scope: !6557)
!6622 = !DILocation(line: 0, scope: !6557)
!6623 = !DILocation(line: 1285, column: 24, scope: !6575)
!6624 = !DILocation(line: 1285, column: 30, scope: !6575)
!6625 = !DILocation(line: 1286, column: 22, scope: !6575)
!6626 = !DILocation(line: 1286, column: 19, scope: !6575)
!6627 = !DILocation(line: 1287, column: 10, scope: !6575)
!6628 = !DILocation(line: 1288, column: 9, scope: !6575)
!6629 = !DILocation(line: 1288, column: 12, scope: !6575)
!6630 = !DILocation(line: 1289, column: 7, scope: !6575)
!6631 = !DILocation(line: 1289, column: 5, scope: !6575)
!6632 = !DILocation(line: 1285, column: 19, scope: !6557)
!6633 = !DILocation(line: 1292, column: 22, scope: !6579)
!6634 = !DILocation(line: 1292, column: 20, scope: !6579)
!6635 = !DILocation(line: 1294, column: 9, scope: !6578)
!6636 = !DILocation(line: 1294, column: 9, scope: !6579)
!6637 = !DILocation(line: 1296, column: 28, scope: !6577)
!6638 = !DILocation(line: 1299, column: 9, scope: !6577)
!6639 = !DILocation(line: 1300, column: 9, scope: !6577)
!6640 = !DILocation(line: 1305, column: 30, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6557, file: !398, line: 1305, column: 19)
!6642 = !DILocation(line: 1305, column: 19, scope: !6641)
!6643 = !DILocation(line: 1305, column: 19, scope: !6557)
!6644 = !DILocation(line: 1308, column: 15, scope: !6557)
!6645 = !DILocation(line: 1309, column: 13, scope: !6553)
!6646 = distinct !{!6646, !6616, !6645}
!6647 = !DILocation(line: 1313, column: 19, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6553, file: !398, line: 1313, column: 15)
!6649 = !DILocation(line: 1313, column: 15, scope: !6648)
!6650 = distinct !{!6650, !6651, !6652}
!6651 = !DILocation(line: 1253, column: 7, scope: !6554)
!6652 = !DILocation(line: 1318, column: 9, scope: !6554)
!6653 = !DILocation(line: 1320, column: 15, scope: !6560)
!6654 = !DILocation(line: 1320, column: 11, scope: !6560)
!6655 = !DILocation(line: 1320, column: 11, scope: !6554)
!6656 = !DILocation(line: 1322, column: 25, scope: !6559)
!6657 = !DILocation(line: 1322, column: 29, scope: !6559)
!6658 = !DILocation(line: 0, scope: !6559)
!6659 = !DILocation(line: 1324, column: 14, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6559, file: !398, line: 1324, column: 8)
!6661 = !DILocation(line: 1324, column: 11, scope: !6660)
!6662 = !DILocation(line: 1324, column: 38, scope: !6660)
!6663 = !DILocation(line: 1324, column: 35, scope: !6660)
!6664 = !DILocation(line: 1324, column: 29, scope: !6660)
!6665 = !DILocation(line: 1325, column: 15, scope: !6660)
!6666 = !DILocation(line: 1325, column: 13, scope: !6660)
!6667 = !DILocation(line: 1325, column: 6, scope: !6660)
!6668 = !DILocation(line: 1328, column: 24, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6660, file: !398, line: 1327, column: 6)
!6670 = !DILocation(line: 1328, column: 22, scope: !6669)
!6671 = !DILocation(line: 1330, column: 15, scope: !6669)
!6672 = !DILocation(line: 1332, column: 8, scope: !6669)
!6673 = !DILocation(line: 0, scope: !6555)
!6674 = !DILocation(line: 1340, column: 1, scope: !6540)
!6675 = distinct !DISubprogram(name: "_eligible_successor_edge_p", scope: !398, file: !398, line: 1356, type: !6545, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6676)
!6676 = !{!6677, !6678, !6679, !6680, !6681, !6682, !6683, !6687, !6688}
!6677 = !DILocalVariable(name: "e1", arg: 1, scope: !6675, file: !398, line: 1356, type: !1158)
!6678 = !DILocalVariable(name: "ip", arg: 2, scope: !6675, file: !398, line: 1356, type: !6543)
!6679 = !DILocalVariable(name: "e2", scope: !6675, file: !398, line: 1358, type: !1158)
!6680 = !DILocalVariable(name: "bb", scope: !6675, file: !398, line: 1359, type: !1141)
!6681 = !DILocalVariable(name: "flags", scope: !6675, file: !398, line: 1360, type: !595)
!6682 = !DILocalVariable(name: "src_outside_rgn", scope: !6675, file: !398, line: 1361, type: !594)
!6683 = !DILocalVariable(name: "ne", scope: !6684, file: !398, line: 1382, type: !1158)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !398, line: 1381, column: 2)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !398, line: 1380, column: 11)
!6686 = distinct !DILexicalBlock(scope: !6675, file: !398, line: 1379, column: 5)
!6687 = !DILocalVariable(name: "nbb", scope: !6684, file: !398, line: 1383, type: !1141)
!6688 = !DILocalVariable(name: "succeeds_in_top_order", scope: !6689, file: !398, line: 1420, type: !594)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !398, line: 1415, column: 5)
!6690 = distinct !DILexicalBlock(scope: !6675, file: !398, line: 1414, column: 7)
!6691 = !DILocation(line: 0, scope: !6675)
!6692 = !DILocation(line: 1360, column: 19, scope: !6675)
!6693 = !DILocation(line: 1360, column: 15, scope: !6675)
!6694 = !DILocation(line: 1361, column: 52, scope: !6675)
!6695 = !DILocation(line: 1361, column: 27, scope: !6675)
!6696 = !DILocation(line: 1361, column: 26, scope: !6675)
!6697 = !DILocation(line: 1363, column: 3, scope: !6675)
!6698 = !DILocation(line: 1365, column: 7, scope: !6675)
!6699 = !DILocation(line: 0, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6686, file: !398, line: 1400, column: 11)
!6701 = !DILocation(line: 1369, column: 7, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !398, line: 1366, column: 5)
!6703 = distinct !DILexicalBlock(scope: !6675, file: !398, line: 1365, column: 7)
!6704 = !DILocation(line: 1371, column: 17, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6702, file: !398, line: 1371, column: 11)
!6706 = !DILocation(line: 1371, column: 11, scope: !6702)
!6707 = !DILocation(line: 1375, column: 12, scope: !6675)
!6708 = !DILocation(line: 1378, column: 3, scope: !6675)
!6709 = !DILocation(line: 1380, column: 12, scope: !6685)
!6710 = !DILocation(line: 1380, column: 11, scope: !6686)
!6711 = !DILocation(line: 1400, column: 12, scope: !6700)
!6712 = !DILocation(line: 1404, column: 11, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6686, file: !398, line: 1404, column: 11)
!6714 = !DILocation(line: 1404, column: 34, scope: !6713)
!6715 = !DILocation(line: 1404, column: 11, scope: !6686)
!6716 = !DILocation(line: 1407, column: 12, scope: !6686)
!6717 = !DILocation(line: 1408, column: 16, scope: !6686)
!6718 = !DILocation(line: 1385, column: 9, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6684, file: !398, line: 1385, column: 8)
!6720 = !DILocation(line: 1385, column: 8, scope: !6684)
!6721 = !DILocation(line: 1388, column: 9, scope: !6684)
!6722 = !DILocation(line: 0, scope: !6684)
!6723 = !DILocation(line: 1389, column: 14, scope: !6684)
!6724 = !DILocation(line: 1391, column: 9, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6684, file: !398, line: 1391, column: 8)
!6726 = !DILocation(line: 1392, column: 8, scope: !6725)
!6727 = distinct !{!6727, !6708, !6728}
!6728 = !DILocation(line: 1409, column: 5, scope: !6675)
!6729 = !DILocation(line: 1450, column: 1, scope: !6675)
!6730 = !DILocation(line: 1412, column: 7, scope: !6675)
!6731 = !DILocation(line: 1401, column: 11, scope: !6700)
!6732 = !DILocation(line: 1412, column: 10, scope: !6675)
!6733 = !DILocation(line: 1414, column: 7, scope: !6690)
!6734 = !DILocation(line: 1414, column: 7, scope: !6675)
!6735 = !DILocation(line: 1420, column: 37, scope: !6689)
!6736 = !DILocation(line: 1421, column: 11, scope: !6689)
!6737 = !DILocation(line: 1421, column: 9, scope: !6689)
!6738 = !DILocation(line: 0, scope: !6689)
!6739 = !DILocation(line: 1424, column: 11, scope: !6689)
!6740 = !DILocation(line: 1424, column: 25, scope: !6689)
!6741 = !DILocation(line: 1427, column: 11, scope: !6689)
!6742 = !DILocation(line: 1430, column: 11, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !398, line: 1428, column: 9)
!6744 = distinct !DILexicalBlock(scope: !6689, file: !398, line: 1427, column: 11)
!6745 = !DILocation(line: 1432, column: 18, scope: !6743)
!6746 = !DILocation(line: 1432, column: 11, scope: !6743)
!6747 = !DILocation(line: 1439, column: 11, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6689, file: !398, line: 1439, column: 11)
!6749 = !DILocation(line: 1440, column: 12, scope: !6748)
!6750 = !DILocation(line: 1440, column: 19, scope: !6748)
!6751 = !DILocation(line: 1440, column: 24, scope: !6748)
!6752 = !DILocation(line: 1440, column: 43, scope: !6748)
!6753 = !DILocation(line: 1440, column: 36, scope: !6748)
!6754 = !DILocation(line: 1439, column: 11, scope: !6689)
!6755 = !DILocation(line: 1441, column: 16, scope: !6748)
!6756 = !DILocation(line: 1441, column: 9, scope: !6748)
!6757 = !DILocation(line: 1444, column: 25, scope: !6689)
!6758 = !DILocation(line: 1445, column: 14, scope: !6689)
!6759 = !DILocation(line: 1445, column: 7, scope: !6689)
!6760 = !DILocation(line: 1448, column: 7, scope: !6675)
!6761 = !DILocation(line: 1448, column: 21, scope: !6675)
!6762 = !DILocation(line: 1449, column: 10, scope: !6675)
!6763 = !DILocation(line: 1449, column: 3, scope: !6675)
!6764 = distinct !DISubprogram(name: "_succ_iter_next", scope: !398, file: !398, line: 1343, type: !6765, scopeLine: 1344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6767)
!6765 = !DISubroutineType(types: !6766)
!6766 = !{null, !6543}
!6767 = !{!6768}
!6768 = !DILocalVariable(name: "ip", arg: 1, scope: !6764, file: !398, line: 1343, type: !6543)
!6769 = !DILocation(line: 0, scope: !6764)
!6770 = !DILocation(line: 1345, column: 3, scope: !6764)
!6771 = !DILocation(line: 1347, column: 11, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6764, file: !398, line: 1347, column: 7)
!6773 = !DILocation(line: 1347, column: 7, scope: !6772)
!6774 = !DILocation(line: 1347, column: 18, scope: !6772)
!6775 = !DILocation(line: 1347, column: 25, scope: !6772)
!6776 = !DILocation(line: 1347, column: 21, scope: !6772)
!6777 = !DILocation(line: 1347, column: 28, scope: !6772)
!6778 = !DILocation(line: 1347, column: 36, scope: !6772)
!6779 = !DILocation(line: 1347, column: 32, scope: !6772)
!6780 = !DILocation(line: 1347, column: 7, scope: !6764)
!6781 = !DILocation(line: 1348, column: 20, scope: !6772)
!6782 = !DILocation(line: 1348, column: 5, scope: !6772)
!6783 = !DILocation(line: 1349, column: 1, scope: !6764)
!6784 = distinct !DISubprogram(name: "VEC_edge_base_iterate", scope: !155, file: !155, line: 150, type: !6785, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6787)
!6785 = !DISubroutineType(types: !6786)
!6786 = !{!595, !3783, !7, !3739}
!6787 = !{!6788, !6789, !6790}
!6788 = !DILocalVariable(name: "vec_", arg: 1, scope: !6784, file: !155, line: 150, type: !3783)
!6789 = !DILocalVariable(name: "ix_", arg: 2, scope: !6784, file: !155, line: 150, type: !7)
!6790 = !DILocalVariable(name: "ptr", arg: 3, scope: !6784, file: !155, line: 150, type: !3739)
!6791 = !DILocation(line: 0, scope: !6784)
!6792 = !DILocation(line: 150, column: 1, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6784, file: !155, line: 150, column: 1)
!6794 = !DILocation(line: 150, column: 1, scope: !6784)
!6795 = !DILocation(line: 150, column: 1, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6793, file: !155, line: 150, column: 1)
!6797 = !DILocation(line: 150, column: 1, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6793, file: !155, line: 150, column: 1)
!6799 = !DILocation(line: 0, scope: !6793)
!6800 = distinct !DISubprogram(name: "VEC_edge_heap_free", scope: !155, file: !155, line: 152, type: !6801, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6804)
!6801 = !DISubroutineType(types: !6802)
!6802 = !{null, !6803}
!6803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!6804 = !{!6805}
!6805 = !DILocalVariable(name: "vec_", arg: 1, scope: !6800, file: !155, line: 152, type: !6803)
!6806 = !DILocation(line: 0, scope: !6800)
!6807 = !DILocation(line: 152, column: 1, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6800, file: !155, line: 152, column: 1)
!6809 = !DILocation(line: 152, column: 1, scope: !6800)
!6810 = distinct !DISubprogram(name: "get_all_loop_exits", scope: !398, file: !398, line: 1115, type: !6811, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6813)
!6811 = !DISubroutineType(types: !6812)
!6812 = !{!2034, !1141}
!6813 = !{!6814, !6815, !6816, !6819, !6820, !6821, !6822, !6827, !6830}
!6814 = !DILocalVariable(name: "bb", arg: 1, scope: !6810, file: !398, line: 1115, type: !1141)
!6815 = !DILocalVariable(name: "exits", scope: !6810, file: !398, line: 1117, type: !2034)
!6816 = !DILocalVariable(name: "this_loop", scope: !6817, file: !398, line: 1133, type: !1183)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !398, line: 1132, column: 5)
!6818 = distinct !DILexicalBlock(scope: !6810, file: !398, line: 1131, column: 7)
!6819 = !DILocalVariable(name: "pred_loop", scope: !6817, file: !398, line: 1134, type: !1183)
!6820 = !DILocalVariable(name: "i", scope: !6817, file: !398, line: 1135, type: !595)
!6821 = !DILocalVariable(name: "e", scope: !6817, file: !398, line: 1136, type: !1158)
!6822 = !DILocalVariable(name: "next_exits", scope: !6823, file: !398, line: 1153, type: !2034)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !398, line: 1152, column: 4)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !398, line: 1150, column: 6)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !398, line: 1149, column: 7)
!6826 = distinct !DILexicalBlock(scope: !6817, file: !398, line: 1149, column: 7)
!6827 = !DILocalVariable(name: "j", scope: !6828, file: !398, line: 1157, type: !595)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !398, line: 1156, column: 8)
!6829 = distinct !DILexicalBlock(scope: !6823, file: !398, line: 1155, column: 10)
!6830 = !DILocalVariable(name: "ne", scope: !6828, file: !398, line: 1158, type: !1158)
!6831 = !DILocation(line: 0, scope: !6810)
!6832 = !DILocation(line: 1117, column: 3, scope: !6810)
!6833 = !DILocation(line: 1117, column: 20, scope: !6810)
!6834 = !DILocation(line: 1121, column: 3, scope: !6810)
!6835 = !DILocation(line: 1121, column: 10, scope: !6810)
!6836 = !DILocation(line: 1122, column: 3, scope: !6810)
!6837 = !DILocation(line: 1122, column: 6, scope: !6810)
!6838 = !DILocation(line: 1124, column: 12, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6810, file: !398, line: 1123, column: 5)
!6840 = !DILocation(line: 1127, column: 7, scope: !6839)
!6841 = distinct !{!6841, !6834, !6842}
!6842 = !DILocation(line: 1128, column: 5, scope: !6810)
!6843 = !DILocation(line: 1131, column: 7, scope: !6818)
!6844 = !DILocation(line: 1131, column: 7, scope: !6810)
!6845 = !DILocation(line: 0, scope: !6817)
!6846 = !DILocation(line: 1136, column: 7, scope: !6817)
!6847 = !DILocation(line: 1138, column: 28, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6817, file: !398, line: 1138, column: 7)
!6849 = !DILocation(line: 1138, column: 12, scope: !6848)
!6850 = !DILocation(line: 0, scope: !6848)
!6851 = !DILocation(line: 1139, column: 12, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6848, file: !398, line: 1138, column: 7)
!6853 = !DILocation(line: 1139, column: 22, scope: !6852)
!6854 = !DILocation(line: 1138, column: 7, scope: !6848)
!6855 = !DILocation(line: 1140, column: 24, scope: !6852)
!6856 = !DILocation(line: 1138, column: 7, scope: !6852)
!6857 = distinct !{!6857, !6854, !6858}
!6858 = !DILocation(line: 1141, column: 21, scope: !6848)
!6859 = !DILocation(line: 1144, column: 7, scope: !6817)
!6860 = !DILocation(line: 1146, column: 15, scope: !6817)
!6861 = !DILocation(line: 1146, column: 13, scope: !6817)
!6862 = !DILocation(line: 0, scope: !6828)
!6863 = !DILocation(line: 1149, column: 12, scope: !6826)
!6864 = !DILocation(line: 1149, column: 19, scope: !6825)
!6865 = !DILocation(line: 0, scope: !6826)
!6866 = !DILocation(line: 1149, column: 7, scope: !6826)
!6867 = !DILocation(line: 1150, column: 27, scope: !6824)
!6868 = !DILocation(line: 1150, column: 30, scope: !6824)
!6869 = !DILocation(line: 1150, column: 6, scope: !6824)
!6870 = !DILocation(line: 1151, column: 6, scope: !6824)
!6871 = !DILocation(line: 1151, column: 30, scope: !6824)
!6872 = !DILocation(line: 1151, column: 33, scope: !6824)
!6873 = !DILocation(line: 1151, column: 9, scope: !6824)
!6874 = !DILocation(line: 1150, column: 6, scope: !6825)
!6875 = !DILocation(line: 1153, column: 56, scope: !6823)
!6876 = !DILocation(line: 1153, column: 59, scope: !6823)
!6877 = !DILocation(line: 1153, column: 36, scope: !6823)
!6878 = !DILocation(line: 0, scope: !6823)
!6879 = !DILocation(line: 1155, column: 10, scope: !6829)
!6880 = !DILocation(line: 1155, column: 10, scope: !6823)
!6881 = !DILocation(line: 1158, column: 3, scope: !6828)
!6882 = !DILocation(line: 0, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !398, line: 1162, column: 3)
!6884 = distinct !DILexicalBlock(scope: !6828, file: !398, line: 1162, column: 3)
!6885 = !DILocation(line: 1162, column: 8, scope: !6884)
!6886 = !DILocation(line: 0, scope: !6884)
!6887 = !DILocation(line: 1162, column: 15, scope: !6883)
!6888 = !DILocation(line: 1162, column: 3, scope: !6884)
!6889 = !DILocation(line: 1163, column: 5, scope: !6883)
!6890 = !DILocation(line: 1162, column: 55, scope: !6883)
!6891 = !DILocation(line: 1162, column: 3, scope: !6883)
!6892 = distinct !{!6892, !6888, !6893}
!6893 = !DILocation(line: 1163, column: 5, scope: !6884)
!6894 = !DILocation(line: 1166, column: 3, scope: !6828)
!6895 = !DILocation(line: 1169, column: 4, scope: !6828)
!6896 = !DILocation(line: 1171, column: 8, scope: !6829)
!6897 = !DILocation(line: 1149, column: 53, scope: !6825)
!6898 = !DILocation(line: 1149, column: 7, scope: !6825)
!6899 = distinct !{!6899, !6866, !6900}
!6900 = !DILocation(line: 1172, column: 4, scope: !6826)
!6901 = !DILocation(line: 1173, column: 5, scope: !6818)
!6902 = !DILocation(line: 1175, column: 10, scope: !6810)
!6903 = !DILocation(line: 1173, column: 5, scope: !6817)
!6904 = !DILocation(line: 1176, column: 1, scope: !6810)
!6905 = !DILocation(line: 1175, column: 3, scope: !6810)
!6906 = distinct !DISubprogram(name: "sel_bb_empty_or_nop_p", scope: !398, file: !398, line: 1089, type: !5045, scopeLine: 1090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6907)
!6907 = !{!6908, !6909, !6910}
!6908 = !DILocalVariable(name: "bb", arg: 1, scope: !6906, file: !398, line: 1089, type: !1141)
!6909 = !DILocalVariable(name: "first", scope: !6906, file: !398, line: 1091, type: !1911)
!6910 = !DILocalVariable(name: "last", scope: !6906, file: !398, line: 1091, type: !1911)
!6911 = !DILocation(line: 0, scope: !6906)
!6912 = !DILocation(line: 1091, column: 18, scope: !6906)
!6913 = !DILocation(line: 1093, column: 13, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6906, file: !398, line: 1093, column: 7)
!6915 = !DILocation(line: 1093, column: 7, scope: !6906)
!6916 = !DILocation(line: 1096, column: 8, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6906, file: !398, line: 1096, column: 7)
!6918 = !DILocation(line: 1096, column: 7, scope: !6906)
!6919 = !DILocation(line: 1099, column: 13, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6906, file: !398, line: 1099, column: 7)
!6921 = !DILocation(line: 1099, column: 10, scope: !6920)
!6922 = !DILocation(line: 1099, column: 7, scope: !6906)
!6923 = !DILocation(line: 1102, column: 10, scope: !6906)
!6924 = !DILocation(line: 1103, column: 13, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6906, file: !398, line: 1103, column: 7)
!6926 = !DILocation(line: 1107, column: 1, scope: !6906)
!6927 = distinct !DISubprogram(name: "inner_loop_header_p", scope: !398, file: !398, line: 1033, type: !5045, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6928)
!6928 = !{!6929, !6930}
!6929 = !DILocalVariable(name: "bb", arg: 1, scope: !6927, file: !398, line: 1033, type: !1141)
!6930 = !DILocalVariable(name: "inner_loop", scope: !6927, file: !398, line: 1035, type: !1183)
!6931 = !DILocation(line: 0, scope: !6927)
!6932 = !DILocation(line: 1037, column: 8, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6927, file: !398, line: 1037, column: 7)
!6934 = !DILocation(line: 1037, column: 7, scope: !6927)
!6935 = !DILocation(line: 1040, column: 13, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6927, file: !398, line: 1040, column: 7)
!6937 = !DILocation(line: 1040, column: 10, scope: !6936)
!6938 = !DILocation(line: 1040, column: 7, scope: !6927)
!6939 = !DILocation(line: 1043, column: 20, scope: !6927)
!6940 = !DILocation(line: 1044, column: 18, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6927, file: !398, line: 1044, column: 7)
!6942 = !DILocation(line: 1044, column: 7, scope: !6927)
!6943 = !DILocation(line: 1048, column: 25, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6927, file: !398, line: 1048, column: 7)
!6945 = !DILocation(line: 1048, column: 10, scope: !6944)
!6946 = !DILocation(line: 1049, column: 7, scope: !6944)
!6947 = !DILocation(line: 1049, column: 10, scope: !6944)
!6948 = !DILocation(line: 1048, column: 7, scope: !6927)
!6949 = !DILocation(line: 1052, column: 7, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6944, file: !398, line: 1050, column: 5)
!6951 = !DILocation(line: 1057, column: 1, scope: !6927)
!6952 = distinct !DISubprogram(name: "loop_outer", scope: !142, file: !142, line: 434, type: !6953, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6957)
!6953 = !DISubroutineType(types: !6954)
!6954 = !{!1183, !6955}
!6955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6956, size: 64)
!6956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1184)
!6957 = !{!6958, !6959}
!6958 = !DILocalVariable(name: "loop", arg: 1, scope: !6952, file: !142, line: 434, type: !6955)
!6959 = !DILocalVariable(name: "n", scope: !6952, file: !142, line: 436, type: !7)
!6960 = !DILocation(line: 0, scope: !6952)
!6961 = !DILocation(line: 436, column: 16, scope: !6952)
!6962 = !DILocation(line: 438, column: 9, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6952, file: !142, line: 438, column: 7)
!6964 = !DILocation(line: 438, column: 7, scope: !6952)
!6965 = !DILocation(line: 441, column: 10, scope: !6952)
!6966 = !DILocation(line: 441, column: 3, scope: !6952)
!6967 = !DILocation(line: 442, column: 1, scope: !6952)
!6968 = distinct !DISubprogram(name: "get_loop_exit_edges_unique_dests", scope: !398, file: !398, line: 1061, type: !6969, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6971)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{!2034, !6955}
!6971 = !{!6972, !6973, !6974, !6975, !6979, !6980}
!6972 = !DILocalVariable(name: "loop", arg: 1, scope: !6968, file: !398, line: 1061, type: !6955)
!6973 = !DILocalVariable(name: "edges", scope: !6968, file: !398, line: 1063, type: !2034)
!6974 = !DILocalVariable(name: "exit", scope: !6968, file: !398, line: 1064, type: !1232)
!6975 = !DILocalVariable(name: "i", scope: !6976, file: !398, line: 1071, type: !595)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !398, line: 1070, column: 5)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !398, line: 1069, column: 3)
!6978 = distinct !DILexicalBlock(scope: !6968, file: !398, line: 1069, column: 3)
!6979 = !DILocalVariable(name: "e", scope: !6976, file: !398, line: 1072, type: !1158)
!6980 = !DILocalVariable(name: "was_dest", scope: !6976, file: !398, line: 1073, type: !594)
!6981 = !DILocation(line: 0, scope: !6968)
!6982 = !DILocation(line: 1063, column: 3, scope: !6968)
!6983 = !DILocation(line: 1063, column: 21, scope: !6968)
!6984 = !DILocation(line: 1066, column: 3, scope: !6968)
!6985 = !DILocation(line: 1069, column: 21, scope: !6978)
!6986 = !DILocation(line: 0, scope: !6976)
!6987 = !DILocation(line: 1069, column: 8, scope: !6978)
!6988 = !DILocation(line: 0, scope: !6978)
!6989 = !DILocation(line: 1069, column: 40, scope: !6977)
!6990 = !DILocation(line: 1069, column: 3, scope: !6978)
!6991 = !DILocation(line: 1072, column: 7, scope: !6976)
!6992 = !DILocation(line: 1075, column: 12, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6976, file: !398, line: 1075, column: 7)
!6994 = !DILocation(line: 0, scope: !6993)
!6995 = !DILocation(line: 1075, column: 19, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6993, file: !398, line: 1075, column: 7)
!6997 = !DILocation(line: 1075, column: 7, scope: !6993)
!6998 = !DILocation(line: 1076, column: 13, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6996, file: !398, line: 1076, column: 13)
!7000 = !DILocation(line: 1076, column: 16, scope: !6999)
!7001 = !DILocation(line: 1076, column: 30, scope: !6999)
!7002 = !DILocation(line: 1076, column: 33, scope: !6999)
!7003 = !DILocation(line: 1076, column: 21, scope: !6999)
!7004 = !DILocation(line: 1076, column: 13, scope: !6996)
!7005 = !DILocation(line: 1075, column: 53, scope: !6996)
!7006 = !DILocation(line: 1075, column: 7, scope: !6996)
!7007 = distinct !{!7007, !6997, !7008}
!7008 = !DILocation(line: 1080, column: 11, scope: !6993)
!7009 = !DILocation(line: 1082, column: 11, scope: !6976)
!7010 = !DILocation(line: 1083, column: 9, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6976, file: !398, line: 1082, column: 11)
!7012 = !DILocation(line: 1084, column: 5, scope: !6977)
!7013 = !DILocation(line: 1069, column: 3, scope: !6977)
!7014 = distinct !{!7014, !6990, !7015}
!7015 = !DILocation(line: 1084, column: 5, scope: !6978)
!7016 = !DILocation(line: 1085, column: 10, scope: !6968)
!7017 = !DILocation(line: 1086, column: 1, scope: !6968)
!7018 = !DILocation(line: 1085, column: 3, scope: !6968)
!7019 = distinct !DISubprogram(name: "VEC_edge_heap_safe_push", scope: !155, file: !155, line: 152, type: !7020, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7022)
!7020 = !DISubroutineType(types: !7021)
!7021 = !{!3739, !6803, !1158}
!7022 = !{!7023, !7024}
!7023 = !DILocalVariable(name: "vec_", arg: 1, scope: !7019, file: !155, line: 152, type: !6803)
!7024 = !DILocalVariable(name: "obj_", arg: 2, scope: !7019, file: !155, line: 152, type: !1158)
!7025 = !DILocation(line: 0, scope: !7019)
!7026 = !DILocation(line: 152, column: 1, scope: !7019)
!7027 = distinct !DISubprogram(name: "VEC_edge_base_ordered_remove", scope: !155, file: !155, line: 150, type: !7028, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7031)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{!1158, !7030, !7}
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!7031 = !{!7032, !7033, !7034, !7035}
!7032 = !DILocalVariable(name: "vec_", arg: 1, scope: !7027, file: !155, line: 150, type: !7030)
!7033 = !DILocalVariable(name: "ix_", arg: 2, scope: !7027, file: !155, line: 150, type: !7)
!7034 = !DILocalVariable(name: "slot_", scope: !7027, file: !155, line: 150, type: !3739)
!7035 = !DILocalVariable(name: "obj_", scope: !7027, file: !155, line: 150, type: !1158)
!7036 = !DILocation(line: 0, scope: !7027)
!7037 = !DILocation(line: 150, column: 1, scope: !7027)
!7038 = distinct !DISubprogram(name: "loop_depth", scope: !142, file: !142, line: 425, type: !7039, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7041)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{!7, !6955}
!7041 = !{!7042}
!7042 = !DILocalVariable(name: "loop", arg: 1, scope: !7038, file: !142, line: 425, type: !6955)
!7043 = !DILocation(line: 0, scope: !7038)
!7044 = !DILocation(line: 427, column: 10, scope: !7038)
!7045 = !DILocation(line: 427, column: 3, scope: !7038)
!7046 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !142, file: !142, line: 85, type: !7047, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7051)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{!7, !7049}
!7049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7050, size: 64)
!7050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!7051 = !{!7052}
!7052 = !DILocalVariable(name: "vec_", arg: 1, scope: !7046, file: !142, line: 85, type: !7049)
!7053 = !DILocation(line: 0, scope: !7046)
!7054 = !DILocation(line: 85, column: 1, scope: !7046)
!7055 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !142, file: !142, line: 85, type: !7056, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7058)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{!1210, !7049, !7}
!7058 = !{!7059, !7060}
!7059 = !DILocalVariable(name: "vec_", arg: 1, scope: !7055, file: !142, line: 85, type: !7049)
!7060 = !DILocalVariable(name: "ix_", arg: 2, scope: !7055, file: !142, line: 85, type: !7)
!7061 = !DILocation(line: 0, scope: !7055)
!7062 = !DILocation(line: 85, column: 1, scope: !7055)
!7063 = distinct !DISubprogram(name: "VEC_edge_heap_reserve", scope: !155, file: !155, line: 152, type: !7064, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7066)
!7064 = !DISubroutineType(types: !7065)
!7065 = !{!595, !6803, !595}
!7066 = !{!7067, !7068, !7069}
!7067 = !DILocalVariable(name: "vec_", arg: 1, scope: !7063, file: !155, line: 152, type: !6803)
!7068 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7063, file: !155, line: 152, type: !595)
!7069 = !DILocalVariable(name: "extend", scope: !7063, file: !155, line: 152, type: !595)
!7070 = !DILocation(line: 0, scope: !7063)
!7071 = !DILocation(line: 152, column: 1, scope: !7063)
!7072 = !DILocation(line: 152, column: 1, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7063, file: !155, line: 152, column: 1)
!7074 = distinct !DISubprogram(name: "VEC_edge_base_quick_push", scope: !155, file: !155, line: 150, type: !7075, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7077)
!7075 = !DISubroutineType(types: !7076)
!7076 = !{!3739, !7030, !1158}
!7077 = !{!7078, !7079, !7080}
!7078 = !DILocalVariable(name: "vec_", arg: 1, scope: !7074, file: !155, line: 150, type: !7030)
!7079 = !DILocalVariable(name: "obj_", arg: 2, scope: !7074, file: !155, line: 150, type: !1158)
!7080 = !DILocalVariable(name: "slot_", scope: !7074, file: !155, line: 150, type: !3739)
!7081 = !DILocation(line: 0, scope: !7074)
!7082 = !DILocation(line: 150, column: 1, scope: !7074)
!7083 = distinct !DISubprogram(name: "VEC_edge_base_space", scope: !155, file: !155, line: 150, type: !7084, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7086)
!7084 = !DISubroutineType(types: !7085)
!7085 = !{!595, !7030, !595}
!7086 = !{!7087, !7088}
!7087 = !DILocalVariable(name: "vec_", arg: 1, scope: !7083, file: !155, line: 150, type: !7030)
!7088 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7083, file: !155, line: 150, type: !595)
!7089 = !DILocation(line: 0, scope: !7083)
!7090 = !DILocation(line: 150, column: 1, scope: !7083)
!7091 = distinct !DISubprogram(name: "current_region_empty_p", scope: !3, file: !3, line: 6768, type: !3662, scopeLine: 6769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7092)
!7092 = !{!7093}
!7093 = !DILocalVariable(name: "i", scope: !7091, file: !3, line: 6770, type: !595)
!7094 = !DILocation(line: 0, scope: !7091)
!7095 = !DILocation(line: 6771, column: 8, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 6771, column: 3)
!7097 = !DILocation(line: 0, scope: !7096)
!7098 = !DILocation(line: 6771, column: 19, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 6771, column: 3)
!7100 = !DILocation(line: 6771, column: 17, scope: !7099)
!7101 = !DILocation(line: 6771, column: 3, scope: !7096)
!7102 = !DILocation(line: 6772, column: 27, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 6772, column: 9)
!7104 = !DILocation(line: 6772, column: 11, scope: !7103)
!7105 = !DILocation(line: 6772, column: 9, scope: !7099)
!7106 = !DILocation(line: 6771, column: 39, scope: !7099)
!7107 = !DILocation(line: 6771, column: 3, scope: !7099)
!7108 = distinct !{!7108, !7101, !7109}
!7109 = !DILocation(line: 6773, column: 14, scope: !7096)
!7110 = !DILocation(line: 6776, column: 1, scope: !7091)
!7111 = distinct !DISubprogram(name: "setup_current_loop_nest", scope: !3, file: !3, line: 6780, type: !3337, scopeLine: 6781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7112)
!7112 = !{!7113}
!7113 = !DILocalVariable(name: "rgn", arg: 1, scope: !7111, file: !3, line: 6780, type: !595)
!7114 = !DILocation(line: 0, scope: !7111)
!7115 = !DILocation(line: 6782, column: 23, scope: !7111)
!7116 = !DILocation(line: 6782, column: 21, scope: !7111)
!7117 = !DILocation(line: 6784, column: 8, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 6784, column: 7)
!7119 = !DILocation(line: 6784, column: 7, scope: !7111)
!7120 = !DILocation(line: 6789, column: 3, scope: !7111)
!7121 = !DILocation(line: 6792, column: 3, scope: !7111)
!7122 = !DILocation(line: 6793, column: 3, scope: !7111)
!7123 = !DILocation(line: 6794, column: 1, scope: !7111)
!7124 = distinct !DISubprogram(name: "sel_setup_region_sched_flags", scope: !3, file: !3, line: 6755, type: !3458, scopeLine: 6756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2384)
!7125 = !DILocation(line: 6757, column: 28, scope: !7124)
!7126 = !DILocation(line: 6758, column: 17, scope: !7124)
!7127 = !DILocation(line: 6760, column: 23, scope: !7124)
!7128 = !DILocation(line: 6760, column: 49, scope: !7124)
!7129 = !DILocation(line: 6760, column: 19, scope: !7124)
!7130 = !DILocation(line: 6761, column: 8, scope: !7124)
!7131 = !DILocation(line: 6761, column: 26, scope: !7124)
!7132 = !DILocation(line: 6759, column: 16, scope: !7124)
!7133 = !DILocation(line: 6762, column: 25, scope: !7124)
!7134 = !DILocation(line: 6762, column: 23, scope: !7124)
!7135 = !DILocation(line: 6763, column: 12, scope: !7124)
!7136 = !DILocation(line: 6763, column: 10, scope: !7124)
!7137 = !DILocation(line: 6764, column: 1, scope: !7124)
!7138 = distinct !DISubprogram(name: "VEC_basic_block_heap_alloc", scope: !155, file: !155, line: 283, type: !7139, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7141)
!7139 = !DISubroutineType(types: !7140)
!7140 = !{!2039, !595}
!7141 = !{!7142}
!7142 = !DILocalVariable(name: "alloc_", arg: 1, scope: !7138, file: !155, line: 283, type: !595)
!7143 = !DILocation(line: 0, scope: !7138)
!7144 = !DILocation(line: 283, column: 1, scope: !7138)
!7145 = distinct !DISubprogram(name: "VEC_basic_block_base_quick_push", scope: !155, file: !155, line: 281, type: !7146, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7149)
!7146 = !DISubroutineType(types: !7147)
!7147 = !{!7148, !5659, !1141}
!7148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!7149 = !{!7150, !7151, !7152}
!7150 = !DILocalVariable(name: "vec_", arg: 1, scope: !7145, file: !155, line: 281, type: !5659)
!7151 = !DILocalVariable(name: "obj_", arg: 2, scope: !7145, file: !155, line: 281, type: !1141)
!7152 = !DILocalVariable(name: "slot_", scope: !7145, file: !155, line: 281, type: !7148)
!7153 = !DILocation(line: 0, scope: !7145)
!7154 = !DILocation(line: 281, column: 1, scope: !7145)
!7155 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !155, file: !155, line: 281, type: !7156, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7160)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{!1141, !7158, !7}
!7158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7159, size: 64)
!7159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1278)
!7160 = !{!7161, !7162}
!7161 = !DILocalVariable(name: "vec_", arg: 1, scope: !7155, file: !155, line: 281, type: !7158)
!7162 = !DILocalVariable(name: "ix_", arg: 2, scope: !7155, file: !155, line: 281, type: !7)
!7163 = !DILocation(line: 0, scope: !7155)
!7164 = !DILocation(line: 281, column: 1, scope: !7155)
!7165 = distinct !DISubprogram(name: "sel_compute_priorities", scope: !3, file: !3, line: 6798, type: !3337, scopeLine: 6799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7166)
!7166 = !{!7167}
!7167 = !DILocalVariable(name: "rgn", arg: 1, scope: !7165, file: !3, line: 6798, type: !595)
!7168 = !DILocation(line: 0, scope: !7165)
!7169 = !DILocation(line: 6800, column: 3, scope: !7165)
!7170 = !DILocation(line: 6804, column: 3, scope: !7165)
!7171 = !DILocation(line: 6806, column: 7, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 6806, column: 7)
!7173 = !DILocation(line: 6806, column: 21, scope: !7172)
!7174 = !DILocation(line: 6806, column: 7, scope: !7165)
!7175 = !DILocation(line: 6807, column: 5, scope: !7172)
!7176 = !DILocation(line: 6809, column: 3, scope: !7165)
!7177 = !DILocation(line: 6810, column: 1, scope: !7165)
!7178 = distinct !DISubprogram(name: "VEC_basic_block_heap_free", scope: !155, file: !155, line: 283, type: !7179, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7182)
!7179 = !DISubroutineType(types: !7180)
!7180 = !{null, !7181}
!7181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!7182 = !{!7183}
!7183 = !DILocalVariable(name: "vec_", arg: 1, scope: !7178, file: !155, line: 283, type: !7181)
!7184 = !DILocation(line: 0, scope: !7178)
!7185 = !DILocation(line: 283, column: 1, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7178, file: !155, line: 283, column: 1)
!7187 = !DILocation(line: 283, column: 1, scope: !7178)
!7188 = distinct !DISubprogram(name: "bitmap_initialize_stat", scope: !663, file: !663, line: 165, type: !7189, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7191)
!7189 = !DISubroutineType(types: !7190)
!7190 = !{null, !1853, !683}
!7191 = !{!7192, !7193}
!7192 = !DILocalVariable(name: "head", arg: 1, scope: !7188, file: !663, line: 165, type: !1853)
!7193 = !DILocalVariable(name: "obstack", arg: 2, scope: !7188, file: !663, line: 165, type: !683)
!7194 = !DILocation(line: 0, scope: !7188)
!7195 = !DILocation(line: 167, column: 23, scope: !7188)
!7196 = !DILocation(line: 167, column: 31, scope: !7188)
!7197 = !DILocation(line: 167, column: 9, scope: !7188)
!7198 = !DILocation(line: 167, column: 15, scope: !7188)
!7199 = !DILocation(line: 168, column: 9, scope: !7188)
!7200 = !DILocation(line: 168, column: 17, scope: !7188)
!7201 = !DILocation(line: 172, column: 1, scope: !7188)
!7202 = distinct !DISubprogram(name: "init_seqno", scope: !3, file: !3, line: 6722, type: !7203, scopeLine: 6723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7205)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{!595, !595, !1853, !1141}
!7205 = !{!7206, !7207, !7208, !7209, !7220, !7228}
!7206 = !DILocalVariable(name: "number_of_insns", arg: 1, scope: !7202, file: !3, line: 6722, type: !595)
!7207 = !DILocalVariable(name: "blocks_to_reschedule", arg: 2, scope: !7202, file: !3, line: 6722, type: !1853)
!7208 = !DILocalVariable(name: "from", arg: 3, scope: !7202, file: !3, line: 6722, type: !1141)
!7209 = !DILocalVariable(name: "visited_bbs", scope: !7202, file: !3, line: 6724, type: !7210)
!7210 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !7211, line: 45, baseType: !7212)
!7211 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7213, size: 64)
!7213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !7211, line: 39, size: 192, elements: !7214)
!7214 = !{!7215, !7216, !7217, !7218}
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !7213, file: !7211, line: 41, baseType: !593, size: 64)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !7213, file: !7211, line: 42, baseType: !7, size: 32, offset: 64)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7213, file: !7211, line: 43, baseType: !7, size: 32, offset: 96)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !7213, file: !7211, line: 44, baseType: !7219, size: 64, offset: 128)
!7219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 64, elements: !642)
!7220 = !DILocalVariable(name: "bi", scope: !7202, file: !3, line: 6725, type: !7221)
!7221 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !663, line: 218, baseType: !7222)
!7222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !663, line: 203, size: 256, elements: !7223)
!7223 = !{!7224, !7225, !7226, !7227}
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !7222, file: !663, line: 206, baseType: !666, size: 64)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !7222, file: !663, line: 209, baseType: !666, size: 64, offset: 64)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !7222, file: !663, line: 212, baseType: !7, size: 32, offset: 128)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !7222, file: !663, line: 217, baseType: !676, size: 64, offset: 192)
!7228 = !DILocalVariable(name: "bbi", scope: !7202, file: !3, line: 6726, type: !7)
!7229 = !DILocation(line: 0, scope: !7202)
!7230 = !DILocation(line: 6725, column: 3, scope: !7202)
!7231 = !DILocation(line: 6726, column: 3, scope: !7202)
!7232 = !DILocation(line: 6728, column: 32, scope: !7202)
!7233 = !DILocation(line: 6728, column: 17, scope: !7202)
!7234 = !DILocation(line: 6730, column: 7, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 6730, column: 7)
!7236 = !DILocation(line: 6730, column: 7, scope: !7202)
!7237 = !DILocation(line: 6732, column: 7, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 6731, column: 5)
!7239 = !DILocation(line: 6733, column: 7, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 6733, column: 7)
!7241 = !DILocation(line: 6733, column: 7, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 6733, column: 7)
!7243 = !DILocation(line: 6735, column: 4, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 6734, column: 9)
!7245 = !DILocation(line: 6736, column: 35, scope: !7244)
!7246 = !DILocation(line: 0, scope: !7244)
!7247 = !DILocation(line: 6736, column: 11, scope: !7244)
!7248 = distinct !{!7248, !7239, !7249}
!7249 = !DILocation(line: 6737, column: 2, scope: !7240)
!7250 = !DILocation(line: 6741, column: 7, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 6740, column: 5)
!7252 = !DILocation(line: 6742, column: 14, scope: !7251)
!7253 = !DILocation(line: 6745, column: 31, scope: !7202)
!7254 = !DILocation(line: 6745, column: 15, scope: !7202)
!7255 = !DILocation(line: 6745, column: 13, scope: !7202)
!7256 = !DILocation(line: 6746, column: 3, scope: !7202)
!7257 = !DILocation(line: 6747, column: 3, scope: !7202)
!7258 = !DILocation(line: 6749, column: 3, scope: !7202)
!7259 = !DILocation(line: 6750, column: 10, scope: !7202)
!7260 = !DILocation(line: 6750, column: 25, scope: !7202)
!7261 = !DILocation(line: 6751, column: 1, scope: !7202)
!7262 = !DILocation(line: 6750, column: 3, scope: !7202)
!7263 = distinct !DISubprogram(name: "sel_sched_region_2", scope: !3, file: !3, line: 7394, type: !3337, scopeLine: 7395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7264)
!7264 = !{!7265, !7266, !7267, !7269, !7270, !7271, !7273, !7278}
!7265 = !DILocalVariable(name: "orig_max_seqno", arg: 1, scope: !7263, file: !3, line: 7394, type: !595)
!7266 = !DILocalVariable(name: "highest_seqno_in_use", scope: !7263, file: !3, line: 7396, type: !595)
!7267 = !DILocalVariable(name: "min_seqno", scope: !7268, file: !3, line: 7406, type: !595)
!7268 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 7405, column: 5)
!7269 = !DILocalVariable(name: "max_seqno", scope: !7268, file: !3, line: 7406, type: !595)
!7270 = !DILocalVariable(name: "scheduled_insns", scope: !7268, file: !3, line: 7407, type: !1942)
!7271 = !DILocalVariable(name: "scheduled_insns_tailp", scope: !7268, file: !3, line: 7408, type: !7272)
!7272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!7273 = !DILocalVariable(name: "__j", scope: !7274, file: !3, line: 7419, type: !595)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 7419, column: 5)
!7275 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 7419, column: 5)
!7276 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 7419, column: 5)
!7277 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 7418, column: 7)
!7278 = !DILocalVariable(name: "__s", scope: !7274, file: !3, line: 7419, type: !597)
!7279 = !DILocation(line: 0, scope: !7263)
!7280 = !DILocation(line: 7398, column: 27, scope: !7263)
!7281 = !DILocation(line: 7399, column: 33, scope: !7263)
!7282 = !DILocation(line: 7400, column: 26, scope: !7263)
!7283 = !DILocation(line: 7401, column: 28, scope: !7263)
!7284 = !DILocation(line: 7402, column: 23, scope: !7263)
!7285 = !DILocation(line: 0, scope: !7268)
!7286 = !DILocation(line: 7404, column: 3, scope: !7263)
!7287 = !DILocation(line: 7404, column: 10, scope: !7263)
!7288 = !DILocation(line: 7406, column: 7, scope: !7268)
!7289 = !DILocation(line: 7407, column: 7, scope: !7268)
!7290 = !DILocation(line: 7407, column: 15, scope: !7268)
!7291 = !DILocation(line: 7408, column: 7, scope: !7268)
!7292 = !DILocation(line: 7408, column: 16, scope: !7268)
!7293 = !DILocation(line: 7410, column: 7, scope: !7268)
!7294 = !DILocation(line: 7411, column: 27, scope: !7268)
!7295 = !DILocation(line: 7411, column: 35, scope: !7268)
!7296 = !DILocation(line: 7411, column: 7, scope: !7268)
!7297 = !DILocation(line: 7412, column: 38, scope: !7268)
!7298 = !DILocation(line: 7412, column: 16, scope: !7268)
!7299 = !DILocation(line: 7412, column: 14, scope: !7268)
!7300 = !DILocation(line: 7413, column: 55, scope: !7268)
!7301 = !DILocation(line: 7413, column: 66, scope: !7268)
!7302 = !DILocation(line: 7413, column: 30, scope: !7268)
!7303 = !DILocation(line: 7416, column: 5, scope: !7263)
!7304 = distinct !{!7304, !7286, !7303}
!7305 = !DILocation(line: 7418, column: 7, scope: !7277)
!7306 = !DILocation(line: 7418, column: 21, scope: !7277)
!7307 = !DILocation(line: 7418, column: 7, scope: !7263)
!7308 = !DILocation(line: 7419, column: 5, scope: !7275)
!7309 = !DILocation(line: 7419, column: 5, scope: !7276)
!7310 = !DILocation(line: 7419, column: 5, scope: !7274)
!7311 = !DILocation(line: 0, scope: !7274)
!7312 = !DILocation(line: 7425, column: 1, scope: !7263)
!7313 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !663, file: !663, line: 224, type: !7314, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7321)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{null, !7316, !7317, !7, !7320}
!7316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7221, size: 64)
!7317 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !608, line: 48, baseType: !7318)
!7318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7319, size: 64)
!7319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !662)
!7320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7321 = !{!7322, !7323, !7324, !7325}
!7322 = !DILocalVariable(name: "bi", arg: 1, scope: !7313, file: !663, line: 224, type: !7316)
!7323 = !DILocalVariable(name: "map", arg: 2, scope: !7313, file: !663, line: 224, type: !7317)
!7324 = !DILocalVariable(name: "start_bit", arg: 3, scope: !7313, file: !663, line: 225, type: !7)
!7325 = !DILocalVariable(name: "bit_no", arg: 4, scope: !7313, file: !663, line: 225, type: !7320)
!7326 = !DILocation(line: 0, scope: !7313)
!7327 = !DILocation(line: 227, column: 19, scope: !7313)
!7328 = !DILocation(line: 227, column: 12, scope: !7313)
!7329 = !DILocation(line: 228, column: 7, scope: !7313)
!7330 = !DILocation(line: 228, column: 12, scope: !7313)
!7331 = !DILocation(line: 0, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !663, line: 233, column: 11)
!7333 = distinct !DILexicalBlock(scope: !7313, file: !663, line: 232, column: 5)
!7334 = !DILocation(line: 231, column: 3, scope: !7313)
!7335 = !DILocation(line: 233, column: 12, scope: !7332)
!7336 = !DILocation(line: 233, column: 11, scope: !7333)
!7337 = !DILocation(line: 235, column: 13, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7332, file: !663, line: 234, column: 2)
!7339 = !DILocation(line: 236, column: 4, scope: !7338)
!7340 = !DILocation(line: 239, column: 11, scope: !7333)
!7341 = distinct !{!7341, !7334, !7342}
!7342 = !DILocation(line: 242, column: 5, scope: !7313)
!7343 = !DILocation(line: 245, column: 11, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7313, file: !663, line: 245, column: 7)
!7345 = !DILocation(line: 245, column: 17, scope: !7344)
!7346 = !DILocation(line: 245, column: 22, scope: !7344)
!7347 = !DILocation(line: 245, column: 7, scope: !7313)
!7348 = !DILocation(line: 246, column: 27, scope: !7344)
!7349 = !DILocation(line: 246, column: 32, scope: !7344)
!7350 = !DILocation(line: 246, column: 5, scope: !7344)
!7351 = !DILocation(line: 249, column: 7, scope: !7313)
!7352 = !DILocation(line: 249, column: 15, scope: !7313)
!7353 = !DILocation(line: 250, column: 14, scope: !7313)
!7354 = !DILocation(line: 251, column: 7, scope: !7313)
!7355 = !DILocation(line: 251, column: 12, scope: !7313)
!7356 = !DILocation(line: 257, column: 16, scope: !7313)
!7357 = !DILocation(line: 257, column: 13, scope: !7313)
!7358 = !DILocation(line: 259, column: 11, scope: !7313)
!7359 = !DILocation(line: 260, column: 1, scope: !7313)
!7360 = distinct !DISubprogram(name: "bmp_iter_set", scope: !663, file: !663, line: 393, type: !7361, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7363)
!7361 = !DISubroutineType(types: !7362)
!7362 = !{!594, !7316, !7320}
!7363 = !{!7364, !7365, !7366}
!7364 = !DILocalVariable(name: "bi", arg: 1, scope: !7360, file: !663, line: 393, type: !7316)
!7365 = !DILocalVariable(name: "bit_no", arg: 2, scope: !7360, file: !663, line: 393, type: !7320)
!7366 = !DILabel(scope: !7367, name: "next_bit", file: !663, line: 398)
!7367 = distinct !DILexicalBlock(scope: !7368, file: !663, line: 397, column: 5)
!7368 = distinct !DILexicalBlock(scope: !7360, file: !663, line: 396, column: 7)
!7369 = !DILocation(line: 0, scope: !7360)
!7370 = !DILocation(line: 396, column: 11, scope: !7368)
!7371 = !DILocation(line: 396, column: 7, scope: !7368)
!7372 = !DILocation(line: 396, column: 7, scope: !7360)
!7373 = !DILocation(line: 419, column: 15, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7375, file: !663, line: 418, column: 2)
!7375 = distinct !DILexicalBlock(scope: !7360, file: !663, line: 415, column: 5)
!7376 = !DILocation(line: 399, column: 7, scope: !7367)
!7377 = !DILocation(line: 398, column: 5, scope: !7367)
!7378 = !DILocation(line: 399, column: 20, scope: !7367)
!7379 = !DILocation(line: 399, column: 25, scope: !7367)
!7380 = !DILocation(line: 399, column: 14, scope: !7367)
!7381 = !DILocation(line: 401, column: 13, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7367, file: !663, line: 400, column: 2)
!7383 = !DILocation(line: 402, column: 12, scope: !7382)
!7384 = distinct !{!7384, !7376, !7385}
!7385 = !DILocation(line: 403, column: 2, scope: !7367)
!7386 = !DILocation(line: 410, column: 15, scope: !7360)
!7387 = !DILocation(line: 410, column: 42, scope: !7360)
!7388 = !DILocation(line: 411, column: 26, scope: !7360)
!7389 = !DILocation(line: 410, column: 11, scope: !7360)
!7390 = !DILocation(line: 412, column: 7, scope: !7360)
!7391 = !DILocation(line: 412, column: 14, scope: !7360)
!7392 = !DILocation(line: 0, scope: !7375)
!7393 = !DILocation(line: 414, column: 3, scope: !7360)
!7394 = !DILocation(line: 417, column: 7, scope: !7375)
!7395 = !DILocation(line: 417, column: 18, scope: !7375)
!7396 = !DILocation(line: 417, column: 26, scope: !7375)
!7397 = !DILocation(line: 419, column: 13, scope: !7374)
!7398 = !DILocation(line: 420, column: 8, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7374, file: !663, line: 420, column: 8)
!7400 = !DILocation(line: 420, column: 8, scope: !7374)
!7401 = !DILocation(line: 422, column: 12, scope: !7374)
!7402 = !DILocation(line: 423, column: 15, scope: !7374)
!7403 = distinct !{!7403, !7394, !7404}
!7404 = !DILocation(line: 424, column: 2, scope: !7375)
!7405 = !DILocation(line: 427, column: 28, scope: !7375)
!7406 = !DILocation(line: 427, column: 16, scope: !7375)
!7407 = !DILocation(line: 428, column: 12, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7375, file: !663, line: 428, column: 11)
!7409 = !DILocation(line: 428, column: 11, scope: !7375)
!7410 = !DILocation(line: 430, column: 27, scope: !7375)
!7411 = !DILocation(line: 430, column: 32, scope: !7375)
!7412 = !DILocation(line: 430, column: 15, scope: !7375)
!7413 = !DILocation(line: 431, column: 19, scope: !7375)
!7414 = distinct !{!7414, !7393, !7415}
!7415 = !DILocation(line: 432, column: 5, scope: !7360)
!7416 = !DILocation(line: 433, column: 1, scope: !7360)
!7417 = distinct !DISubprogram(name: "RESET_BIT", scope: !7211, file: !7211, line: 82, type: !7418, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7420)
!7418 = !DISubroutineType(types: !7419)
!7419 = !{null, !7210, !7}
!7420 = !{!7421, !7422, !7423}
!7421 = !DILocalVariable(name: "map", arg: 1, scope: !7417, file: !7211, line: 82, type: !7210)
!7422 = !DILocalVariable(name: "bitno", arg: 2, scope: !7417, file: !7211, line: 82, type: !7)
!7423 = !DILocalVariable(name: "oldbit", scope: !7424, file: !7211, line: 86, type: !594)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !7211, line: 85, column: 5)
!7425 = distinct !DILexicalBlock(scope: !7417, file: !7211, line: 84, column: 7)
!7426 = !DILocation(line: 0, scope: !7417)
!7427 = !DILocation(line: 84, column: 12, scope: !7425)
!7428 = !DILocation(line: 84, column: 7, scope: !7425)
!7429 = !DILocation(line: 84, column: 7, scope: !7417)
!7430 = !DILocation(line: 92, column: 42, scope: !7417)
!7431 = !DILocation(line: 92, column: 31, scope: !7417)
!7432 = !DILocation(line: 91, column: 19, scope: !7417)
!7433 = !DILocation(line: 91, column: 3, scope: !7417)
!7434 = !DILocation(line: 87, column: 16, scope: !7424)
!7435 = !DILocation(line: 88, column: 11, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7424, file: !7211, line: 88, column: 11)
!7437 = !DILocation(line: 88, column: 11, scope: !7424)
!7438 = !DILocation(line: 89, column: 2, scope: !7436)
!7439 = !DILocation(line: 89, column: 41, scope: !7436)
!7440 = !DILocation(line: 92, column: 8, scope: !7417)
!7441 = !DILocation(line: 92, column: 5, scope: !7417)
!7442 = !DILocation(line: 93, column: 1, scope: !7417)
!7443 = distinct !DISubprogram(name: "bmp_iter_next", scope: !663, file: !663, line: 382, type: !7444, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7446)
!7444 = !DISubroutineType(types: !7445)
!7445 = !{null, !7316, !7320}
!7446 = !{!7447, !7448}
!7447 = !DILocalVariable(name: "bi", arg: 1, scope: !7443, file: !663, line: 382, type: !7316)
!7448 = !DILocalVariable(name: "bit_no", arg: 2, scope: !7443, file: !663, line: 382, type: !7320)
!7449 = !DILocation(line: 0, scope: !7443)
!7450 = !DILocation(line: 384, column: 7, scope: !7443)
!7451 = !DILocation(line: 384, column: 12, scope: !7443)
!7452 = !DILocation(line: 385, column: 11, scope: !7443)
!7453 = !DILocation(line: 386, column: 1, scope: !7443)
!7454 = distinct !DISubprogram(name: "init_seqno_1", scope: !3, file: !3, line: 6683, type: !7455, scopeLine: 6684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7457)
!7455 = !DISubroutineType(types: !7456)
!7456 = !{null, !1141, !7210, !1853}
!7457 = !{!7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7470}
!7458 = !DILocalVariable(name: "bb", arg: 1, scope: !7454, file: !3, line: 6683, type: !1141)
!7459 = !DILocalVariable(name: "visited_bbs", arg: 2, scope: !7454, file: !3, line: 6683, type: !7210)
!7460 = !DILocalVariable(name: "blocks_to_reschedule", arg: 3, scope: !7454, file: !3, line: 6683, type: !1853)
!7461 = !DILocalVariable(name: "bbi", scope: !7454, file: !3, line: 6685, type: !595)
!7462 = !DILocalVariable(name: "insn", scope: !7454, file: !3, line: 6686, type: !1911)
!7463 = !DILocalVariable(name: "note", scope: !7454, file: !3, line: 6686, type: !1911)
!7464 = !DILocalVariable(name: "succ_insn", scope: !7454, file: !3, line: 6687, type: !1911)
!7465 = !DILocalVariable(name: "si", scope: !7454, file: !3, line: 6688, type: !3600)
!7466 = !DILocalVariable(name: "succ", scope: !7467, file: !3, line: 6697, type: !1141)
!7467 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 6696, column: 5)
!7468 = distinct !DILexicalBlock(scope: !7469, file: !3, line: 6694, column: 3)
!7469 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 6694, column: 3)
!7470 = !DILocalVariable(name: "succ_bbi", scope: !7467, file: !3, line: 6698, type: !595)
!7471 = !DILocation(line: 0, scope: !7454)
!7472 = !DILocation(line: 6685, column: 13, scope: !7454)
!7473 = !DILocation(line: 6686, column: 23, scope: !7454)
!7474 = !DILocation(line: 6687, column: 3, scope: !7454)
!7475 = !DILocation(line: 6688, column: 3, scope: !7454)
!7476 = !DILocation(line: 6690, column: 3, scope: !7454)
!7477 = !DILocation(line: 6691, column: 7, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 6691, column: 7)
!7479 = !DILocation(line: 6691, column: 7, scope: !7454)
!7480 = !DILocation(line: 6692, column: 49, scope: !7478)
!7481 = !DILocation(line: 6692, column: 5, scope: !7478)
!7482 = !DILocation(line: 6694, column: 3, scope: !7469)
!7483 = !DILocation(line: 6694, column: 3, scope: !7468)
!7484 = !DILocation(line: 6697, column: 26, scope: !7467)
!7485 = !DILocation(line: 0, scope: !7467)
!7486 = !DILocation(line: 6698, column: 22, scope: !7467)
!7487 = !DILocation(line: 6700, column: 7, scope: !7467)
!7488 = !DILocation(line: 6702, column: 12, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 6702, column: 11)
!7490 = !DILocation(line: 6702, column: 11, scope: !7467)
!7491 = !DILocation(line: 6704, column: 4, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 6703, column: 2)
!7493 = !DILocation(line: 6706, column: 4, scope: !7492)
!7494 = !DILocation(line: 6707, column: 2, scope: !7492)
!7495 = distinct !{!7495, !7482, !7496}
!7496 = !DILocation(line: 6708, column: 5, scope: !7469)
!7497 = !DILocation(line: 6710, column: 15, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 6710, column: 3)
!7499 = !DILocation(line: 6710, column: 8, scope: !7498)
!7500 = !DILocation(line: 0, scope: !7498)
!7501 = !DILocation(line: 6710, column: 33, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 6710, column: 3)
!7503 = !DILocation(line: 6710, column: 3, scope: !7498)
!7504 = !DILocation(line: 6711, column: 34, scope: !7502)
!7505 = !DILocation(line: 6711, column: 5, scope: !7502)
!7506 = !DILocation(line: 6711, column: 23, scope: !7502)
!7507 = !DILocation(line: 6710, column: 49, scope: !7502)
!7508 = !DILocation(line: 6710, column: 3, scope: !7502)
!7509 = distinct !{!7509, !7503, !7510}
!7510 = !DILocation(line: 6711, column: 34, scope: !7498)
!7511 = !DILocation(line: 6712, column: 1, scope: !7454)
!7512 = distinct !DISubprogram(name: "SET_BIT", scope: !7211, file: !7211, line: 63, type: !7418, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7513)
!7513 = !{!7514, !7515, !7516}
!7514 = !DILocalVariable(name: "map", arg: 1, scope: !7512, file: !7211, line: 63, type: !7210)
!7515 = !DILocalVariable(name: "bitno", arg: 2, scope: !7512, file: !7211, line: 63, type: !7)
!7516 = !DILocalVariable(name: "oldbit", scope: !7517, file: !7211, line: 67, type: !594)
!7517 = distinct !DILexicalBlock(scope: !7518, file: !7211, line: 66, column: 5)
!7518 = distinct !DILexicalBlock(scope: !7512, file: !7211, line: 65, column: 7)
!7519 = !DILocation(line: 0, scope: !7512)
!7520 = !DILocation(line: 65, column: 12, scope: !7518)
!7521 = !DILocation(line: 65, column: 7, scope: !7518)
!7522 = !DILocation(line: 65, column: 7, scope: !7512)
!7523 = !DILocation(line: 73, column: 40, scope: !7512)
!7524 = !DILocation(line: 73, column: 29, scope: !7512)
!7525 = !DILocation(line: 72, column: 19, scope: !7512)
!7526 = !DILocation(line: 72, column: 3, scope: !7512)
!7527 = !DILocation(line: 68, column: 16, scope: !7517)
!7528 = !DILocation(line: 69, column: 12, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7517, file: !7211, line: 69, column: 11)
!7530 = !DILocation(line: 69, column: 11, scope: !7517)
!7531 = !DILocation(line: 70, column: 2, scope: !7529)
!7532 = !DILocation(line: 70, column: 41, scope: !7529)
!7533 = !DILocation(line: 73, column: 5, scope: !7512)
!7534 = !DILocation(line: 74, column: 1, scope: !7512)
!7535 = distinct !DISubprogram(name: "find_min_max_seqno", scope: !3, file: !3, line: 7290, type: !7536, scopeLine: 7291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7538)
!7536 = !DISubroutineType(types: !7537)
!7537 = !{null, !2127, !1998, !1998}
!7538 = !{!7539, !7540, !7541, !7542}
!7539 = !DILocalVariable(name: "fences", arg: 1, scope: !7535, file: !3, line: 7290, type: !2127)
!7540 = !DILocalVariable(name: "min_seqno", arg: 2, scope: !7535, file: !3, line: 7290, type: !1998)
!7541 = !DILocalVariable(name: "max_seqno", arg: 3, scope: !7535, file: !3, line: 7290, type: !1998)
!7542 = !DILocalVariable(name: "seqno", scope: !7543, file: !3, line: 7297, type: !595)
!7543 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 7296, column: 5)
!7544 = !DILocation(line: 0, scope: !7535)
!7545 = !DILocation(line: 7292, column: 29, scope: !7535)
!7546 = !DILocation(line: 7292, column: 27, scope: !7535)
!7547 = !DILocation(line: 7292, column: 14, scope: !7535)
!7548 = !DILocation(line: 7295, column: 3, scope: !7535)
!7549 = !DILocation(line: 7295, column: 20, scope: !7535)
!7550 = !DILocation(line: 7297, column: 19, scope: !7543)
!7551 = !DILocation(line: 0, scope: !7543)
!7552 = !DILocation(line: 7299, column: 11, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 7299, column: 11)
!7554 = !DILocation(line: 7299, column: 22, scope: !7553)
!7555 = !DILocation(line: 7299, column: 11, scope: !7543)
!7556 = !DILocation(line: 7300, column: 20, scope: !7553)
!7557 = !DILocation(line: 7300, column: 9, scope: !7553)
!7558 = !DILocation(line: 7301, column: 16, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 7301, column: 16)
!7560 = !DILocation(line: 7301, column: 27, scope: !7559)
!7561 = !DILocation(line: 7301, column: 16, scope: !7553)
!7562 = !DILocation(line: 7302, column: 20, scope: !7559)
!7563 = !DILocation(line: 7302, column: 9, scope: !7559)
!7564 = distinct !{!7564, !7548, !7565}
!7565 = !DILocation(line: 7303, column: 5, scope: !7535)
!7566 = !DILocation(line: 7304, column: 1, scope: !7535)
!7567 = distinct !DISubprogram(name: "schedule_on_fences", scope: !3, file: !3, line: 7227, type: !7568, scopeLine: 7229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7571)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{null, !2127, !595, !7570}
!7570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7272, size: 64)
!7571 = !{!7572, !7573, !7574, !7575, !7576, !7582, !7583, !7587, !7588, !7592, !7593, !7594, !7595, !7599}
!7572 = !DILocalVariable(name: "fences", arg: 1, scope: !7567, file: !3, line: 7227, type: !2127)
!7573 = !DILocalVariable(name: "max_seqno", arg: 2, scope: !7567, file: !3, line: 7227, type: !595)
!7574 = !DILocalVariable(name: "scheduled_insns_tailpp", arg: 3, scope: !7567, file: !3, line: 7228, type: !7570)
!7575 = !DILocalVariable(name: "old_fences", scope: !7567, file: !3, line: 7230, type: !2127)
!7576 = !DILocalVariable(name: "__j", scope: !7577, file: !3, line: 7234, type: !595)
!7577 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 7234, column: 7)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 7234, column: 7)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 7234, column: 7)
!7580 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 7233, column: 5)
!7581 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 7232, column: 7)
!7582 = !DILocalVariable(name: "__s", scope: !7577, file: !3, line: 7234, type: !597)
!7583 = !DILocalVariable(name: "__j", scope: !7584, file: !3, line: 7236, type: !595)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 7236, column: 7)
!7585 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 7236, column: 7)
!7586 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 7236, column: 7)
!7587 = !DILocalVariable(name: "__s", scope: !7584, file: !3, line: 7236, type: !597)
!7588 = !DILocalVariable(name: "fence", scope: !7589, file: !3, line: 7242, type: !2180)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 7241, column: 5)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 7240, column: 3)
!7591 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 7240, column: 3)
!7592 = !DILocalVariable(name: "seqno", scope: !7589, file: !3, line: 7243, type: !595)
!7593 = !DILocalVariable(name: "fences2", scope: !7589, file: !3, line: 7244, type: !2127)
!7594 = !DILocalVariable(name: "first_p", scope: !7589, file: !3, line: 7245, type: !594)
!7595 = !DILocalVariable(name: "f", scope: !7596, file: !3, line: 7255, type: !2180)
!7596 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 7254, column: 9)
!7597 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 7253, column: 7)
!7598 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 7253, column: 7)
!7599 = !DILocalVariable(name: "i", scope: !7600, file: !3, line: 7259, type: !595)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 7258, column: 13)
!7601 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 7257, column: 15)
!7602 = !DILocation(line: 0, scope: !7567)
!7603 = !DILocation(line: 7232, column: 7, scope: !7581)
!7604 = !DILocation(line: 7232, column: 21, scope: !7581)
!7605 = !DILocation(line: 7232, column: 7, scope: !7567)
!7606 = !DILocation(line: 7234, column: 7, scope: !7578)
!7607 = !DILocation(line: 7234, column: 7, scope: !7579)
!7608 = !DILocation(line: 7234, column: 7, scope: !7577)
!7609 = !DILocation(line: 0, scope: !7577)
!7610 = !DILocation(line: 7235, column: 7, scope: !7580)
!7611 = !DILocation(line: 7236, column: 7, scope: !7585)
!7612 = !DILocation(line: 7236, column: 7, scope: !7586)
!7613 = !DILocation(line: 7236, column: 7, scope: !7584)
!7614 = !DILocation(line: 0, scope: !7584)
!7615 = !DILocation(line: 7239, column: 41, scope: !7567)
!7616 = !DILocation(line: 0, scope: !7589)
!7617 = !DILocation(line: 7240, column: 3, scope: !7567)
!7618 = !DILocation(line: 7240, column: 3, scope: !7591)
!7619 = !DILocation(line: 7253, column: 7, scope: !7598)
!7620 = !DILocation(line: 7242, column: 15, scope: !7589)
!7621 = !DILocation(line: 7243, column: 11, scope: !7589)
!7622 = !DILocation(line: 0, scope: !7598)
!7623 = !DILocation(line: 7245, column: 12, scope: !7589)
!7624 = !DILocation(line: 7255, column: 23, scope: !7596)
!7625 = !DILocation(line: 0, scope: !7596)
!7626 = !DILocation(line: 7257, column: 16, scope: !7601)
!7627 = !DILocation(line: 7257, column: 15, scope: !7596)
!7628 = !DILocation(line: 7259, column: 23, scope: !7600)
!7629 = !DILocation(line: 0, scope: !7600)
!7630 = !DILocation(line: 7261, column: 19, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 7261, column: 19)
!7632 = !DILocation(line: 7261, column: 32, scope: !7631)
!7633 = !DILocation(line: 7261, column: 27, scope: !7631)
!7634 = !DILocation(line: 7253, column: 53, scope: !7597)
!7635 = !DILocation(line: 7253, column: 7, scope: !7597)
!7636 = distinct !{!7636, !7619, !7637}
!7637 = !DILocation(line: 7271, column: 9, scope: !7598)
!7638 = !DILocation(line: 7273, column: 7, scope: !7589)
!7639 = !DILocation(line: 7276, column: 13, scope: !7589)
!7640 = !DILocation(line: 7277, column: 7, scope: !7589)
!7641 = !DILocation(line: 7278, column: 7, scope: !7589)
!7642 = !DILocation(line: 7278, column: 33, scope: !7589)
!7643 = !DILocation(line: 7240, column: 27, scope: !7590)
!7644 = !DILocation(line: 7240, column: 3, scope: !7590)
!7645 = distinct !{!7645, !7618, !7646}
!7646 = !DILocation(line: 7279, column: 5, scope: !7591)
!7647 = !DILocation(line: 7284, column: 3, scope: !7567)
!7648 = !DILocation(line: 7285, column: 3, scope: !7567)
!7649 = !DILocation(line: 7286, column: 1, scope: !7567)
!7650 = distinct !DISubprogram(name: "calculate_new_fences", scope: !3, file: !3, line: 7308, type: !7651, scopeLine: 7309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7653)
!7651 = !DISubroutineType(types: !7652)
!7652 = !{!2127, !2127, !595}
!7653 = !{!7654, !7655, !7656, !7657, !7658, !7659, !7663, !7664, !7669, !7674}
!7654 = !DILocalVariable(name: "fences", arg: 1, scope: !7650, file: !3, line: 7308, type: !2127)
!7655 = !DILocalVariable(name: "orig_max_seqno", arg: 2, scope: !7650, file: !3, line: 7308, type: !595)
!7656 = !DILocalVariable(name: "old_fences", scope: !7650, file: !3, line: 7310, type: !2127)
!7657 = !DILocalVariable(name: "_new_fences", scope: !7650, file: !3, line: 7311, type: !3468)
!7658 = !DILocalVariable(name: "new_fences", scope: !7650, file: !3, line: 7311, type: !3475)
!7659 = !DILocalVariable(name: "fence", scope: !7660, file: !3, line: 7316, type: !2180)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 7315, column: 5)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 7314, column: 3)
!7662 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 7314, column: 3)
!7663 = !DILocalVariable(name: "insn", scope: !7660, file: !3, line: 7317, type: !1911)
!7664 = !DILocalVariable(name: "seqno", scope: !7665, file: !3, line: 7325, type: !595)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 7323, column: 13)
!7666 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 7322, column: 15)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 7320, column: 9)
!7668 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 7319, column: 11)
!7669 = !DILocalVariable(name: "__j", scope: !7670, file: !3, line: 7332, type: !595)
!7670 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 7332, column: 17)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 7332, column: 17)
!7672 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 7332, column: 17)
!7673 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 7331, column: 19)
!7674 = !DILocalVariable(name: "__s", scope: !7670, file: !3, line: 7332, type: !597)
!7675 = !DILocation(line: 0, scope: !7650)
!7676 = !DILocation(line: 7310, column: 3, scope: !7650)
!7677 = !DILocation(line: 7310, column: 11, scope: !7650)
!7678 = !DILocation(line: 7311, column: 3, scope: !7650)
!7679 = !DILocation(line: 7313, column: 3, scope: !7650)
!7680 = !DILocation(line: 7314, column: 3, scope: !7650)
!7681 = !DILocation(line: 7314, column: 3, scope: !7662)
!7682 = !DILocation(line: 0, scope: !7660)
!7683 = !DILocation(line: 7319, column: 12, scope: !7668)
!7684 = !DILocation(line: 7319, column: 11, scope: !7660)
!7685 = !DILocation(line: 7322, column: 16, scope: !7666)
!7686 = !DILocation(line: 7322, column: 15, scope: !7667)
!7687 = !DILocation(line: 7327, column: 22, scope: !7665)
!7688 = !DILocation(line: 7328, column: 23, scope: !7665)
!7689 = !DILocation(line: 0, scope: !7665)
!7690 = !DILocation(line: 7329, column: 15, scope: !7665)
!7691 = !DILocation(line: 7331, column: 19, scope: !7673)
!7692 = !DILocation(line: 7331, column: 33, scope: !7673)
!7693 = !DILocation(line: 7331, column: 19, scope: !7665)
!7694 = !DILocation(line: 7332, column: 17, scope: !7671)
!7695 = !DILocation(line: 7332, column: 17, scope: !7672)
!7696 = !DILocation(line: 7332, column: 17, scope: !7670)
!7697 = !DILocation(line: 0, scope: !7670)
!7698 = !DILocation(line: 7335, column: 15, scope: !7665)
!7699 = !DILocation(line: 7336, column: 13, scope: !7665)
!7700 = !DILocation(line: 7339, column: 9, scope: !7668)
!7701 = !DILocation(line: 7314, column: 27, scope: !7661)
!7702 = !DILocation(line: 7314, column: 3, scope: !7661)
!7703 = distinct !{!7703, !7681, !7704}
!7704 = !DILocation(line: 7340, column: 5, scope: !7662)
!7705 = !DILocation(line: 7342, column: 3, scope: !7650)
!7706 = !DILocation(line: 7343, column: 10, scope: !7650)
!7707 = !DILocation(line: 7344, column: 1, scope: !7650)
!7708 = !DILocation(line: 7343, column: 3, scope: !7650)
!7709 = distinct !DISubprogram(name: "update_seqnos_and_stage", scope: !3, file: !3, line: 7350, type: !7710, scopeLine: 7353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7712)
!7710 = !DISubroutineType(types: !7711)
!7711 = !{!595, !595, !595, !595, !7272}
!7712 = !{!7713, !7714, !7715, !7716, !7717, !7718, !7721}
!7713 = !DILocalVariable(name: "min_seqno", arg: 1, scope: !7709, file: !3, line: 7350, type: !595)
!7714 = !DILocalVariable(name: "max_seqno", arg: 2, scope: !7709, file: !3, line: 7350, type: !595)
!7715 = !DILocalVariable(name: "highest_seqno_in_use", arg: 3, scope: !7709, file: !3, line: 7351, type: !595)
!7716 = !DILocalVariable(name: "pscheduled_insns", arg: 4, scope: !7709, file: !3, line: 7352, type: !7272)
!7717 = !DILocalVariable(name: "new_hs", scope: !7709, file: !3, line: 7354, type: !595)
!7718 = !DILocalVariable(name: "ii", scope: !7709, file: !3, line: 7355, type: !7719)
!7719 = !DIDerivedType(tag: DW_TAG_typedef, name: "ilist_iterator", file: !398, line: 527, baseType: !7720)
!7720 = !DIDerivedType(tag: DW_TAG_typedef, name: "_xlist_iterator", file: !398, line: 514, baseType: !2189)
!7721 = !DILocalVariable(name: "insn", scope: !7709, file: !3, line: 7356, type: !1911)
!7722 = !DILocation(line: 0, scope: !7709)
!7723 = !DILocation(line: 7355, column: 3, scope: !7709)
!7724 = !DILocation(line: 7356, column: 3, scope: !7709)
!7725 = !DILocation(line: 7360, column: 7, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 7360, column: 7)
!7727 = !DILocation(line: 7360, column: 7, scope: !7709)
!7728 = !DILocation(line: 7362, column: 17, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 7361, column: 5)
!7730 = !DILocation(line: 7363, column: 17, scope: !7729)
!7731 = !DILocation(line: 7363, column: 40, scope: !7729)
!7732 = !DILocation(line: 7363, column: 52, scope: !7729)
!7733 = !DILocation(line: 7363, column: 64, scope: !7729)
!7734 = !DILocation(line: 7364, column: 7, scope: !7729)
!7735 = !DILocation(line: 0, scope: !7726)
!7736 = !DILocation(line: 7369, column: 3, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 7369, column: 3)
!7738 = !DILocation(line: 0, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 7369, column: 3)
!7740 = !DILocation(line: 0, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 7370, column: 5)
!7742 = !DILocation(line: 7369, column: 3, scope: !7739)
!7743 = !DILocation(line: 7371, column: 7, scope: !7741)
!7744 = !DILocation(line: 7372, column: 7, scope: !7741)
!7745 = !DILocation(line: 7372, column: 25, scope: !7741)
!7746 = !DILocation(line: 7373, column: 7, scope: !7741)
!7747 = !DILocation(line: 7378, column: 13, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 7378, column: 11)
!7749 = !DILocation(line: 7378, column: 11, scope: !7741)
!7750 = !DILocation(line: 7379, column: 39, scope: !7748)
!7751 = !DILocation(line: 7379, column: 9, scope: !7748)
!7752 = distinct !{!7752, !7736, !7753}
!7753 = !DILocation(line: 7380, column: 5, scope: !7737)
!7754 = !DILocation(line: 7382, column: 3, scope: !7709)
!7755 = !DILocation(line: 7383, column: 15, scope: !7709)
!7756 = !DILocation(line: 7386, column: 1, scope: !7709)
!7757 = !DILocation(line: 7385, column: 3, scope: !7709)
!7758 = distinct !DISubprogram(name: "fill_insns", scope: !3, file: !3, line: 5483, type: !7759, scopeLine: 5484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7761)
!7759 = !DISubroutineType(types: !7760)
!7760 = !{null, !2180, !595, !7570}
!7761 = !{!7762, !7763, !7764, !7765, !7766, !7768, !7769, !7770, !7775, !7776, !7778, !7779, !7780, !7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788, !7792}
!7762 = !DILocalVariable(name: "fence", arg: 1, scope: !7758, file: !3, line: 5483, type: !2180)
!7763 = !DILocalVariable(name: "seqno", arg: 2, scope: !7758, file: !3, line: 5483, type: !595)
!7764 = !DILocalVariable(name: "scheduled_insns_tailpp", arg: 3, scope: !7758, file: !3, line: 5483, type: !7570)
!7765 = !DILocalVariable(name: "bnds", scope: !7758, file: !3, line: 5485, type: !2179)
!7766 = !DILocalVariable(name: "bnds_tailp", scope: !7758, file: !3, line: 5485, type: !7767)
!7767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!7768 = !DILocalVariable(name: "av_vliw", scope: !7758, file: !3, line: 5486, type: !1945)
!7769 = !DILocalVariable(name: "insn", scope: !7758, file: !3, line: 5487, type: !1911)
!7770 = !DILocalVariable(name: "__j", scope: !7771, file: !3, line: 5490, type: !595)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 5490, column: 5)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 5490, column: 5)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 5490, column: 5)
!7774 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 5489, column: 7)
!7775 = !DILocalVariable(name: "__s", scope: !7771, file: !3, line: 5490, type: !597)
!7776 = !DILocalVariable(name: "bnds_tailp1", scope: !7777, file: !3, line: 5502, type: !7767)
!7777 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 5501, column: 5)
!7778 = !DILocalVariable(name: "bndsp", scope: !7777, file: !3, line: 5502, type: !7767)
!7779 = !DILocalVariable(name: "expr_vliw", scope: !7777, file: !3, line: 5503, type: !1834)
!7780 = !DILocalVariable(name: "need_stall", scope: !7777, file: !3, line: 5504, type: !595)
!7781 = !DILocalVariable(name: "was_stall", scope: !7777, file: !3, line: 5505, type: !595)
!7782 = !DILocalVariable(name: "scheduled_insns", scope: !7777, file: !3, line: 5505, type: !595)
!7783 = !DILocalVariable(name: "stall_iterations", scope: !7777, file: !3, line: 5505, type: !595)
!7784 = !DILocalVariable(name: "max_insns", scope: !7777, file: !3, line: 5506, type: !595)
!7785 = !DILocalVariable(name: "max_stall", scope: !7777, file: !3, line: 5507, type: !595)
!7786 = !DILocalVariable(name: "last_insn_was_debug", scope: !7777, file: !3, line: 5508, type: !594)
!7787 = !DILocalVariable(name: "was_debug_bb_end_p", scope: !7777, file: !3, line: 5509, type: !594)
!7788 = !DILocalVariable(name: "bnd", scope: !7789, file: !3, line: 5559, type: !7790)
!7789 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 5558, column: 9)
!7790 = !DIDerivedType(tag: DW_TAG_typedef, name: "bnd_t", file: !398, line: 241, baseType: !7791)
!7791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!7792 = !DILocalVariable(name: "ptr", scope: !7793, file: !3, line: 5601, type: !1942)
!7793 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 5600, column: 5)
!7794 = !DILocation(line: 0, scope: !7758)
!7795 = !DILocation(line: 5485, column: 3, scope: !7758)
!7796 = !DILocation(line: 5485, column: 11, scope: !7758)
!7797 = !DILocation(line: 5486, column: 3, scope: !7758)
!7798 = !DILocation(line: 5486, column: 12, scope: !7758)
!7799 = !DILocation(line: 5487, column: 17, scope: !7758)
!7800 = !DILocation(line: 5489, column: 7, scope: !7774)
!7801 = !DILocation(line: 5489, column: 21, scope: !7774)
!7802 = !DILocation(line: 5489, column: 7, scope: !7758)
!7803 = !DILocation(line: 5490, column: 5, scope: !7772)
!7804 = !DILocation(line: 5490, column: 5, scope: !7773)
!7805 = !DILocation(line: 5490, column: 5, scope: !7771)
!7806 = !DILocation(line: 0, scope: !7771)
!7807 = !DILocation(line: 5493, column: 33, scope: !7758)
!7808 = !DILocation(line: 5493, column: 3, scope: !7758)
!7809 = !DILocation(line: 5494, column: 17, scope: !7758)
!7810 = !DILocation(line: 5495, column: 23, scope: !7758)
!7811 = !DILocation(line: 5495, column: 3, scope: !7758)
!7812 = !DILocation(line: 5496, column: 20, scope: !7758)
!7813 = !DILocation(line: 5496, column: 18, scope: !7758)
!7814 = !DILocation(line: 5497, column: 15, scope: !7758)
!7815 = !DILocation(line: 5497, column: 13, scope: !7758)
!7816 = !DILocation(line: 0, scope: !7777)
!7817 = !DILocation(line: 5511, column: 44, scope: !7777)
!7818 = !DILocation(line: 5500, column: 3, scope: !7758)
!7819 = !DILocation(line: 5487, column: 10, scope: !7758)
!7820 = !DILocation(line: 5494, column: 14, scope: !7758)
!7821 = !DILocation(line: 5504, column: 7, scope: !7777)
!7822 = !DILocation(line: 5506, column: 23, scope: !7777)
!7823 = !DILocation(line: 5507, column: 23, scope: !7777)
!7824 = !DILocation(line: 5511, column: 7, scope: !7777)
!7825 = !DILocation(line: 5512, column: 7, scope: !7777)
!7826 = !DILocation(line: 5513, column: 31, scope: !7777)
!7827 = !DILocation(line: 5513, column: 7, scope: !7777)
!7828 = !DILocation(line: 5516, column: 11, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 5516, column: 11)
!7830 = !DILocation(line: 5516, column: 19, scope: !7829)
!7831 = !DILocation(line: 5516, column: 11, scope: !7777)
!7832 = !DILocation(line: 5521, column: 7, scope: !7777)
!7833 = !DILocation(line: 5505, column: 11, scope: !7777)
!7834 = !DILocation(line: 5523, column: 49, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 5522, column: 9)
!7836 = !DILocation(line: 5523, column: 23, scope: !7835)
!7837 = !DILocation(line: 5524, column: 16, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 5524, column: 15)
!7839 = !DILocation(line: 5524, column: 29, scope: !7838)
!7840 = !DILocation(line: 5524, column: 26, scope: !7838)
!7841 = !DILocation(line: 5531, column: 24, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 5525, column: 13)
!7843 = !DILocation(line: 5534, column: 23, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7842, file: !3, line: 5534, column: 12)
!7845 = !DILocation(line: 5534, column: 12, scope: !7842)
!7846 = !DILocation(line: 5535, column: 3, scope: !7844)
!7847 = !DILocation(line: 5543, column: 26, scope: !7777)
!7848 = !DILocation(line: 5541, column: 13, scope: !7842)
!7849 = !DILocation(line: 5538, column: 5, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 5537, column: 3)
!7851 = !DILocation(line: 5539, column: 5, scope: !7850)
!7852 = !DILocation(line: 5542, column: 9, scope: !7835)
!7853 = distinct !{!7853, !7832, !7854}
!7854 = !DILocation(line: 5543, column: 39, scope: !7777)
!7855 = !DILocation(line: 5546, column: 12, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 5546, column: 11)
!7857 = !DILocation(line: 5546, column: 11, scope: !7777)
!7858 = !DILocation(line: 0, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 5561, column: 8)
!7860 = !DILocation(line: 5559, column: 16, scope: !7789)
!7861 = !DILocation(line: 5555, column: 7, scope: !7777)
!7862 = !DILocation(line: 5548, column: 4, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 5547, column: 9)
!7864 = !DILocation(line: 5549, column: 11, scope: !7863)
!7865 = !DILocation(line: 5552, column: 13, scope: !7777)
!7866 = !DILocation(line: 0, scope: !7789)
!7867 = !DILocation(line: 5561, column: 25, scope: !7859)
!7868 = !DILocation(line: 5561, column: 40, scope: !7859)
!7869 = !DILocation(line: 5561, column: 9, scope: !7859)
!7870 = !DILocation(line: 5561, column: 8, scope: !7789)
!7871 = !DILocation(line: 5563, column: 17, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7859, file: !3, line: 5562, column: 6)
!7873 = !DILocation(line: 5564, column: 8, scope: !7872)
!7874 = !DILocation(line: 5567, column: 18, scope: !7789)
!7875 = !DILocation(line: 5568, column: 26, scope: !7789)
!7876 = !DILocation(line: 5569, column: 8, scope: !7789)
!7877 = !DILocation(line: 5570, column: 36, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 5569, column: 8)
!7879 = !DILocation(line: 5570, column: 33, scope: !7878)
!7880 = !DILocation(line: 5570, column: 49, scope: !7878)
!7881 = !DILocation(line: 5570, column: 52, scope: !7878)
!7882 = !DILocation(line: 0, scope: !7878)
!7883 = !DILocation(line: 5570, column: 27, scope: !7878)
!7884 = !DILocation(line: 5570, column: 6, scope: !7878)
!7885 = !DILocation(line: 5571, column: 47, scope: !7789)
!7886 = !DILocation(line: 5571, column: 11, scope: !7789)
!7887 = !DILocation(line: 5572, column: 24, scope: !7789)
!7888 = !DILocation(line: 5575, column: 4, scope: !7789)
!7889 = !DILocation(line: 5576, column: 31, scope: !7789)
!7890 = !DILocation(line: 5576, column: 28, scope: !7789)
!7891 = !DILocation(line: 5577, column: 9, scope: !7777)
!7892 = !DILocation(line: 5578, column: 14, scope: !7777)
!7893 = !DILocation(line: 5578, column: 24, scope: !7777)
!7894 = !DILocation(line: 5578, column: 21, scope: !7777)
!7895 = !DILocation(line: 5577, column: 9, scope: !7789)
!7896 = distinct !{!7896, !7861, !7897}
!7897 = !DILocation(line: 5578, column: 36, scope: !7777)
!7898 = !DILocation(line: 5580, column: 7, scope: !7777)
!7899 = !DILocation(line: 5581, column: 12, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 5581, column: 11)
!7901 = !DILocation(line: 5581, column: 11, scope: !7777)
!7902 = !DILocation(line: 5589, column: 11, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 5588, column: 11)
!7904 = !DILocation(line: 5588, column: 34, scope: !7903)
!7905 = !DILocation(line: 5588, column: 12, scope: !7903)
!7906 = !DILocation(line: 5588, column: 55, scope: !7903)
!7907 = !DILocation(line: 5589, column: 15, scope: !7903)
!7908 = !DILocation(line: 5590, column: 15, scope: !7903)
!7909 = !DILocation(line: 5590, column: 29, scope: !7903)
!7910 = !DILocation(line: 5591, column: 38, scope: !7903)
!7911 = !DILocation(line: 5591, column: 19, scope: !7903)
!7912 = !DILocation(line: 5593, column: 5, scope: !7758)
!7913 = !DILocation(line: 5594, column: 10, scope: !7758)
!7914 = !DILocation(line: 5593, column: 5, scope: !7777)
!7915 = distinct !{!7915, !7818, !7916}
!7916 = !DILocation(line: 5594, column: 14, scope: !7758)
!7917 = !DILocation(line: 5596, column: 3, scope: !7758)
!7918 = !DILocation(line: 5599, column: 3, scope: !7758)
!7919 = !DILocation(line: 5599, column: 10, scope: !7758)
!7920 = !DILocation(line: 5601, column: 21, scope: !7793)
!7921 = !DILocation(line: 0, scope: !7793)
!7922 = !DILocation(line: 5603, column: 11, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 5603, column: 11)
!7924 = !DILocation(line: 5603, column: 11, scope: !7793)
!7925 = !DILocation(line: 5605, column: 11, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 5604, column: 2)
!7927 = !DILocation(line: 5607, column: 9, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 5607, column: 8)
!7929 = !DILocation(line: 5607, column: 8, scope: !7926)
!7930 = !DILocation(line: 5608, column: 6, scope: !7928)
!7931 = !DILocation(line: 5611, column: 7, scope: !7793)
!7932 = distinct !{!7932, !7918, !7933}
!7933 = !DILocation(line: 5612, column: 5, scope: !7758)
!7934 = !DILocation(line: 5615, column: 25, scope: !7758)
!7935 = !DILocation(line: 5615, column: 3, scope: !7758)
!7936 = !DILocation(line: 5616, column: 1, scope: !7758)
!7937 = distinct !DISubprogram(name: "vinsn_vec_clear", scope: !3, file: !3, line: 3641, type: !7938, scopeLine: 3642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7940)
!7938 = !DISubroutineType(types: !7939)
!7939 = !{null, !6424}
!7940 = !{!7941, !7942, !7943, !7946}
!7941 = !DILocalVariable(name: "vinsn_vec", arg: 1, scope: !7937, file: !3, line: 3641, type: !6424)
!7942 = !DILocalVariable(name: "len", scope: !7937, file: !3, line: 3643, type: !7)
!7943 = !DILocalVariable(name: "vinsn", scope: !7944, file: !3, line: 3646, type: !1840)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 3645, column: 5)
!7945 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 3644, column: 7)
!7946 = !DILocalVariable(name: "n", scope: !7944, file: !3, line: 3647, type: !595)
!7947 = !DILocation(line: 0, scope: !7937)
!7948 = !DILocation(line: 3643, column: 18, scope: !7937)
!7949 = !DILocation(line: 3644, column: 11, scope: !7945)
!7950 = !DILocation(line: 3644, column: 7, scope: !7937)
!7951 = !DILocation(line: 3646, column: 7, scope: !7944)
!7952 = !DILocation(line: 0, scope: !7944)
!7953 = !DILocation(line: 3649, column: 12, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 3649, column: 7)
!7955 = !DILocation(line: 0, scope: !7954)
!7956 = !DILocation(line: 3649, column: 19, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 3649, column: 7)
!7958 = !DILocation(line: 3649, column: 7, scope: !7954)
!7959 = !DILocation(line: 3650, column: 23, scope: !7957)
!7960 = !DILocation(line: 3650, column: 9, scope: !7957)
!7961 = !DILocation(line: 3649, column: 65, scope: !7957)
!7962 = !DILocation(line: 3649, column: 7, scope: !7957)
!7963 = distinct !{!7963, !7958, !7964}
!7964 = !DILocation(line: 3650, column: 28, scope: !7954)
!7965 = !DILocation(line: 3651, column: 7, scope: !7944)
!7966 = !DILocation(line: 3652, column: 5, scope: !7945)
!7967 = !DILocation(line: 3652, column: 5, scope: !7944)
!7968 = !DILocation(line: 3653, column: 1, scope: !7937)
!7969 = distinct !DISubprogram(name: "compute_av_set_on_boundaries", scope: !3, file: !3, line: 5010, type: !7970, scopeLine: 5011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7972)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{null, !2180, !2179, !6277}
!7972 = !{!7973, !7974, !7975, !7976, !7982, !7983, !7987, !7988, !7992, !7993, !7994, !8000, !8001, !8005}
!7973 = !DILocalVariable(name: "fence", arg: 1, scope: !7969, file: !3, line: 5010, type: !2180)
!7974 = !DILocalVariable(name: "bnds", arg: 2, scope: !7969, file: !3, line: 5010, type: !2179)
!7975 = !DILocalVariable(name: "av_vliw_p", arg: 3, scope: !7969, file: !3, line: 5010, type: !6277)
!7976 = !DILocalVariable(name: "__j", scope: !7977, file: !3, line: 5014, type: !595)
!7977 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 5014, column: 7)
!7978 = distinct !DILexicalBlock(scope: !7979, file: !3, line: 5014, column: 7)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 5014, column: 7)
!7980 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 5013, column: 5)
!7981 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 5012, column: 7)
!7982 = !DILocalVariable(name: "__s", scope: !7977, file: !3, line: 5014, type: !597)
!7983 = !DILocalVariable(name: "__j", scope: !7984, file: !3, line: 5016, type: !595)
!7984 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 5016, column: 7)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 5016, column: 7)
!7986 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 5016, column: 7)
!7987 = !DILocalVariable(name: "__s", scope: !7984, file: !3, line: 5016, type: !597)
!7988 = !DILocalVariable(name: "bnd", scope: !7989, file: !3, line: 5021, type: !7790)
!7989 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 5020, column: 5)
!7990 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 5019, column: 3)
!7991 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 5019, column: 3)
!7992 = !DILocalVariable(name: "av1_copy", scope: !7989, file: !3, line: 5022, type: !1945)
!7993 = !DILocalVariable(name: "bnd_to", scope: !7989, file: !3, line: 5023, type: !1911)
!7994 = !DILocalVariable(name: "__j", scope: !7995, file: !3, line: 5059, type: !595)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 5059, column: 7)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 5059, column: 7)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 5059, column: 7)
!7998 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 5058, column: 5)
!7999 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 5057, column: 7)
!8000 = !DILocalVariable(name: "__s", scope: !7995, file: !3, line: 5059, type: !597)
!8001 = !DILocalVariable(name: "__j", scope: !8002, file: !3, line: 5061, type: !595)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 5061, column: 7)
!8003 = distinct !DILexicalBlock(scope: !8004, file: !3, line: 5061, column: 7)
!8004 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 5061, column: 7)
!8005 = !DILocalVariable(name: "__s", scope: !8002, file: !3, line: 5061, type: !597)
!8006 = !DILocation(line: 0, scope: !7969)
!8007 = !DILocation(line: 5012, column: 7, scope: !7981)
!8008 = !DILocation(line: 5012, column: 21, scope: !7981)
!8009 = !DILocation(line: 5012, column: 7, scope: !7969)
!8010 = !DILocation(line: 5014, column: 7, scope: !7978)
!8011 = !DILocation(line: 5014, column: 7, scope: !7979)
!8012 = !DILocation(line: 5014, column: 7, scope: !7977)
!8013 = !DILocation(line: 0, scope: !7977)
!8014 = !DILocation(line: 5015, column: 7, scope: !7980)
!8015 = !DILocation(line: 5016, column: 7, scope: !7985)
!8016 = !DILocation(line: 5016, column: 7, scope: !7986)
!8017 = !DILocation(line: 5016, column: 7, scope: !7984)
!8018 = !DILocation(line: 0, scope: !7984)
!8019 = !DILocation(line: 0, scope: !7989)
!8020 = !DILocation(line: 0, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8022, file: !3, line: 5039, column: 2)
!8022 = distinct !DILexicalBlock(scope: !7989, file: !3, line: 5038, column: 11)
!8023 = !DILocation(line: 5019, column: 3, scope: !7969)
!8024 = !DILocation(line: 5019, column: 3, scope: !7991)
!8025 = !DILocation(line: 5022, column: 7, scope: !7989)
!8026 = !DILocation(line: 5023, column: 23, scope: !7989)
!8027 = !DILocation(line: 5028, column: 11, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !7989, file: !3, line: 5028, column: 11)
!8029 = !DILocation(line: 5028, column: 11, scope: !7989)
!8030 = !DILocation(line: 5031, column: 9, scope: !8028)
!8031 = !DILocation(line: 5029, column: 9, scope: !8028)
!8032 = !DILocation(line: 5031, column: 16, scope: !8028)
!8033 = !DILocation(line: 5031, column: 54, scope: !8028)
!8034 = !DILocation(line: 5033, column: 22, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 5032, column: 11)
!8036 = !DILocation(line: 5034, column: 17, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 5034, column: 17)
!8038 = !DILocation(line: 5034, column: 17, scope: !8035)
!8039 = distinct !{!8039, !8030, !8040}
!8040 = !DILocation(line: 5036, column: 11, scope: !8028)
!8041 = !DILocation(line: 5038, column: 11, scope: !8022)
!8042 = !DILocation(line: 5038, column: 24, scope: !8022)
!8043 = !DILocation(line: 5038, column: 11, scope: !7989)
!8044 = !DILocation(line: 5040, column: 6, scope: !8021)
!8045 = !DILocation(line: 5041, column: 23, scope: !8021)
!8046 = !DILocation(line: 5042, column: 17, scope: !8021)
!8047 = !DILocation(line: 5043, column: 2, scope: !8021)
!8048 = !DILocation(line: 5045, column: 22, scope: !7989)
!8049 = !DILocation(line: 5045, column: 7, scope: !7989)
!8050 = !DILocation(line: 5046, column: 38, scope: !7989)
!8051 = !DILocation(line: 5046, column: 22, scope: !7989)
!8052 = !DILocation(line: 5046, column: 20, scope: !7989)
!8053 = !DILocation(line: 5048, column: 22, scope: !7989)
!8054 = !DILocation(line: 5048, column: 7, scope: !7989)
!8055 = !DILocation(line: 5049, column: 36, scope: !7989)
!8056 = !DILocation(line: 5049, column: 23, scope: !7989)
!8057 = !DILocation(line: 5049, column: 21, scope: !7989)
!8058 = !DILocation(line: 5051, column: 7, scope: !7989)
!8059 = !DILocation(line: 5053, column: 31, scope: !7989)
!8060 = !DILocation(line: 5053, column: 18, scope: !7989)
!8061 = !DILocation(line: 5053, column: 16, scope: !7989)
!8062 = !DILocation(line: 5054, column: 7, scope: !7989)
!8063 = !DILocation(line: 5055, column: 5, scope: !7990)
!8064 = !DILocation(line: 5019, column: 23, scope: !7990)
!8065 = !DILocation(line: 5019, column: 3, scope: !7990)
!8066 = distinct !{!8066, !8024, !8067}
!8067 = !DILocation(line: 5055, column: 5, scope: !7991)
!8068 = !DILocation(line: 5057, column: 7, scope: !7999)
!8069 = !DILocation(line: 5057, column: 21, scope: !7999)
!8070 = !DILocation(line: 5057, column: 7, scope: !7969)
!8071 = !DILocation(line: 5059, column: 7, scope: !7996)
!8072 = !DILocation(line: 5059, column: 7, scope: !7997)
!8073 = !DILocation(line: 5059, column: 7, scope: !7995)
!8074 = !DILocation(line: 0, scope: !7995)
!8075 = !DILocation(line: 5060, column: 20, scope: !7998)
!8076 = !DILocation(line: 5060, column: 7, scope: !7998)
!8077 = !DILocation(line: 5061, column: 7, scope: !8003)
!8078 = !DILocation(line: 5061, column: 7, scope: !8004)
!8079 = !DILocation(line: 5061, column: 7, scope: !8002)
!8080 = !DILocation(line: 0, scope: !8002)
!8081 = !DILocation(line: 5063, column: 1, scope: !7969)
!8082 = distinct !DISubprogram(name: "remove_insns_that_need_bookkeeping", scope: !3, file: !3, line: 4829, type: !8083, scopeLine: 4830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8085)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{null, !2180, !6277}
!8085 = !{!8086, !8087, !8088, !8089, !8090, !8100}
!8086 = !DILocalVariable(name: "fence", arg: 1, scope: !8082, file: !3, line: 4829, type: !2180)
!8087 = !DILocalVariable(name: "av_ptr", arg: 2, scope: !8082, file: !3, line: 4829, type: !6277)
!8088 = !DILocalVariable(name: "expr", scope: !8082, file: !3, line: 4831, type: !1834)
!8089 = !DILocalVariable(name: "i", scope: !8082, file: !3, line: 4832, type: !2188)
!8090 = !DILocalVariable(name: "__j", scope: !8091, file: !3, line: 4852, type: !595)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 4852, column: 13)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 4852, column: 13)
!8093 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 4852, column: 13)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 4851, column: 15)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 4850, column: 2)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 4843, column: 11)
!8097 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 4842, column: 5)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 4841, column: 3)
!8099 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 4841, column: 3)
!8100 = !DILocalVariable(name: "__s", scope: !8091, file: !3, line: 4852, type: !597)
!8101 = !DILocation(line: 0, scope: !8082)
!8102 = !DILocation(line: 4831, column: 3, scope: !8082)
!8103 = !DILocation(line: 4832, column: 3, scope: !8082)
!8104 = !DILocation(line: 4841, column: 3, scope: !8099)
!8105 = !DILocation(line: 0, scope: !8098)
!8106 = !DILocation(line: 0, scope: !8096)
!8107 = !DILocation(line: 4841, column: 3, scope: !8098)
!8108 = !DILocation(line: 4843, column: 33, scope: !8096)
!8109 = !DILocation(line: 4843, column: 12, scope: !8096)
!8110 = !DILocation(line: 4844, column: 4, scope: !8096)
!8111 = !DILocation(line: 4844, column: 9, scope: !8096)
!8112 = !DILocation(line: 4844, column: 23, scope: !8096)
!8113 = !DILocation(line: 4845, column: 8, scope: !8096)
!8114 = !DILocation(line: 4844, column: 26, scope: !8096)
!8115 = !DILocation(line: 4845, column: 4, scope: !8096)
!8116 = !DILocation(line: 4846, column: 8, scope: !8096)
!8117 = !DILocation(line: 4846, column: 12, scope: !8096)
!8118 = !DILocation(line: 4847, column: 8, scope: !8096)
!8119 = !DILocation(line: 4848, column: 7, scope: !8096)
!8120 = !DILocation(line: 4849, column: 7, scope: !8096)
!8121 = !DILocation(line: 4847, column: 12, scope: !8096)
!8122 = !DILocation(line: 4843, column: 11, scope: !8097)
!8123 = !DILocation(line: 4851, column: 15, scope: !8094)
!8124 = !DILocation(line: 4851, column: 29, scope: !8094)
!8125 = !DILocation(line: 4851, column: 15, scope: !8095)
!8126 = !DILocation(line: 4852, column: 13, scope: !8092)
!8127 = !DILocation(line: 4852, column: 13, scope: !8093)
!8128 = !DILocation(line: 4852, column: 13, scope: !8091)
!8129 = !DILocation(line: 0, scope: !8091)
!8130 = !DILocation(line: 4854, column: 4, scope: !8095)
!8131 = !DILocation(line: 4855, column: 2, scope: !8095)
!8132 = distinct !{!8132, !8104, !8133}
!8133 = !DILocation(line: 4856, column: 5, scope: !8099)
!8134 = !DILocation(line: 4857, column: 1, scope: !8082)
!8135 = distinct !DISubprogram(name: "remove_insns_for_debug", scope: !3, file: !3, line: 4989, type: !8136, scopeLine: 4990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8138)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{null, !2179, !6277}
!8138 = !{!8139, !8140, !8141, !8144, !8145, !8146}
!8139 = !DILocalVariable(name: "bnds", arg: 1, scope: !8135, file: !3, line: 4989, type: !2179)
!8140 = !DILocalVariable(name: "av_vliw_p", arg: 2, scope: !8135, file: !3, line: 4989, type: !6277)
!8141 = !DILocalVariable(name: "av_it", scope: !8142, file: !3, line: 4994, type: !2188)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 4993, column: 5)
!8143 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 4991, column: 7)
!8144 = !DILocalVariable(name: "expr", scope: !8142, file: !3, line: 4995, type: !1834)
!8145 = !DILocalVariable(name: "bnd", scope: !8142, file: !3, line: 4996, type: !7790)
!8146 = !DILocalVariable(name: "next", scope: !8142, file: !3, line: 4997, type: !1911)
!8147 = !DILocation(line: 0, scope: !8135)
!8148 = !DILocation(line: 4991, column: 9, scope: !8143)
!8149 = !DILocation(line: 4991, column: 7, scope: !8135)
!8150 = !DILocation(line: 4994, column: 7, scope: !8142)
!8151 = !DILocation(line: 4995, column: 7, scope: !8142)
!8152 = !DILocation(line: 0, scope: !8142)
!8153 = !DILocation(line: 4997, column: 21, scope: !8142)
!8154 = !DILocation(line: 4999, column: 7, scope: !8142)
!8155 = !DILocation(line: 5001, column: 7, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 5001, column: 7)
!8157 = !DILocation(line: 0, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 5001, column: 7)
!8159 = !DILocation(line: 5001, column: 7, scope: !8158)
!8160 = !DILocation(line: 5002, column: 13, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 5002, column: 13)
!8162 = !DILocation(line: 5002, column: 34, scope: !8161)
!8163 = !DILocation(line: 5002, column: 13, scope: !8158)
!8164 = !DILocation(line: 5003, column: 11, scope: !8161)
!8165 = distinct !{!8165, !8155, !8166}
!8166 = !DILocation(line: 5003, column: 37, scope: !8156)
!8167 = !DILocation(line: 5004, column: 5, scope: !8143)
!8168 = !DILocation(line: 5004, column: 5, scope: !8142)
!8169 = !DILocation(line: 5005, column: 1, scope: !8135)
!8170 = distinct !DISubprogram(name: "find_best_expr", scope: !3, file: !3, line: 4375, type: !8171, scopeLine: 4377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8173)
!8171 = !DISubroutineType(types: !8172)
!8172 = !{!1834, !6277, !2179, !2180, !1998}
!8173 = !{!8174, !8175, !8176, !8177, !8178, !8179, !8182, !8183, !8191, !8192, !8196, !8197, !8201}
!8174 = !DILocalVariable(name: "av_vliw_ptr", arg: 1, scope: !8170, file: !3, line: 4375, type: !6277)
!8175 = !DILocalVariable(name: "bnds", arg: 2, scope: !8170, file: !3, line: 4375, type: !2179)
!8176 = !DILocalVariable(name: "fence", arg: 3, scope: !8170, file: !3, line: 4375, type: !2180)
!8177 = !DILocalVariable(name: "pneed_stall", arg: 4, scope: !8170, file: !3, line: 4376, type: !1998)
!8178 = !DILocalVariable(name: "best", scope: !8170, file: !3, line: 4378, type: !1834)
!8179 = !DILocalVariable(name: "privileged_n", scope: !8180, file: !3, line: 4387, type: !595)
!8180 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 4386, column: 5)
!8181 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 4385, column: 7)
!8182 = !DILocalVariable(name: "index", scope: !8180, file: !3, line: 4387, type: !595)
!8183 = !DILocalVariable(name: "__j", scope: !8184, file: !3, line: 4423, type: !595)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 4423, column: 11)
!8185 = distinct !DILexicalBlock(scope: !8186, file: !3, line: 4423, column: 11)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 4423, column: 11)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 4422, column: 9)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 4421, column: 11)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 4420, column: 5)
!8190 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 4419, column: 7)
!8191 = !DILocalVariable(name: "__s", scope: !8184, file: !3, line: 4423, type: !597)
!8192 = !DILocalVariable(name: "__j", scope: !8193, file: !3, line: 4425, type: !595)
!8193 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 4425, column: 11)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 4425, column: 11)
!8195 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 4425, column: 11)
!8196 = !DILocalVariable(name: "__s", scope: !8193, file: !3, line: 4425, type: !597)
!8197 = !DILocalVariable(name: "__j", scope: !8198, file: !3, line: 4428, type: !595)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 4428, column: 9)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 4428, column: 9)
!8200 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 4428, column: 9)
!8201 = !DILocalVariable(name: "__s", scope: !8198, file: !3, line: 4428, type: !597)
!8202 = !DILocation(line: 0, scope: !8170)
!8203 = !DILocation(line: 4384, column: 10, scope: !8170)
!8204 = !DILocation(line: 4385, column: 12, scope: !8181)
!8205 = !DILocation(line: 4385, column: 29, scope: !8181)
!8206 = !DILocation(line: 4385, column: 37, scope: !8181)
!8207 = !DILocation(line: 4385, column: 20, scope: !8181)
!8208 = !DILocation(line: 4387, column: 7, scope: !8180)
!8209 = !DILocation(line: 4389, column: 24, scope: !8180)
!8210 = !DILocation(line: 4389, column: 22, scope: !8180)
!8211 = !DILocation(line: 4390, column: 26, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 4390, column: 11)
!8213 = !DILocation(line: 4390, column: 11, scope: !8180)
!8214 = !DILocation(line: 4396, column: 11, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 4391, column: 9)
!8216 = !DILocation(line: 4397, column: 26, scope: !8215)
!8217 = !DILocation(line: 0, scope: !8180)
!8218 = !DILocation(line: 4398, column: 28, scope: !8215)
!8219 = !DILocation(line: 4398, column: 26, scope: !8215)
!8220 = !DILocation(line: 4399, column: 15, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 4399, column: 15)
!8222 = !DILocation(line: 4399, column: 15, scope: !8215)
!8223 = !DILocation(line: 4400, column: 41, scope: !8221)
!8224 = !DILocation(line: 4400, column: 20, scope: !8221)
!8225 = !DILocation(line: 4404, column: 11, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 4404, column: 11)
!8227 = !DILocation(line: 4400, column: 13, scope: !8221)
!8228 = !DILocation(line: 4404, column: 26, scope: !8226)
!8229 = !DILocation(line: 4404, column: 11, scope: !8180)
!8230 = !DILocation(line: 4407, column: 24, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 4405, column: 9)
!8232 = !DILocation(line: 4408, column: 9, scope: !8231)
!8233 = !DILocation(line: 4409, column: 5, scope: !8181)
!8234 = !DILocation(line: 4409, column: 5, scope: !8180)
!8235 = !DILocation(line: 4411, column: 12, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 4411, column: 7)
!8237 = !DILocation(line: 4411, column: 7, scope: !8170)
!8238 = !DILocation(line: 4413, column: 55, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 4412, column: 5)
!8240 = !DILocation(line: 4414, column: 48, scope: !8239)
!8241 = !DILocation(line: 4413, column: 24, scope: !8239)
!8242 = !DILocation(line: 4413, column: 22, scope: !8239)
!8243 = !DILocation(line: 4415, column: 26, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 4415, column: 11)
!8245 = !DILocation(line: 4415, column: 11, scope: !8239)
!8246 = !DILocation(line: 4416, column: 22, scope: !8244)
!8247 = !DILocation(line: 4416, column: 9, scope: !8244)
!8248 = !DILocation(line: 4419, column: 7, scope: !8190)
!8249 = !DILocation(line: 4419, column: 21, scope: !8190)
!8250 = !DILocation(line: 4419, column: 7, scope: !8170)
!8251 = !DILocation(line: 0, scope: !8188)
!8252 = !DILocation(line: 4421, column: 11, scope: !8189)
!8253 = !DILocation(line: 4423, column: 11, scope: !8186)
!8254 = !DILocation(line: 4423, column: 11, scope: !8184)
!8255 = !DILocation(line: 0, scope: !8184)
!8256 = !DILocation(line: 4423, column: 11, scope: !8185)
!8257 = !DILocation(line: 4424, column: 11, scope: !8187)
!8258 = !DILocation(line: 4425, column: 11, scope: !8194)
!8259 = !DILocation(line: 4425, column: 11, scope: !8195)
!8260 = !DILocation(line: 4425, column: 11, scope: !8193)
!8261 = !DILocation(line: 0, scope: !8193)
!8262 = !DILocation(line: 4428, column: 9, scope: !8200)
!8263 = !DILocation(line: 4428, column: 9, scope: !8198)
!8264 = !DILocation(line: 0, scope: !8198)
!8265 = !DILocation(line: 4428, column: 9, scope: !8199)
!8266 = !DILocation(line: 4431, column: 3, scope: !8170)
!8267 = distinct !DISubprogram(name: "stall_for_cycles", scope: !3, file: !3, line: 5468, type: !8268, scopeLine: 5469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8270)
!8268 = !DISubroutineType(types: !8269)
!8269 = !{null, !2180, !595}
!8270 = !{!8271, !8272, !8273}
!8271 = !DILocalVariable(name: "fence", arg: 1, scope: !8267, file: !3, line: 5468, type: !2180)
!8272 = !DILocalVariable(name: "n", arg: 2, scope: !8267, file: !3, line: 5468, type: !595)
!8273 = !DILocalVariable(name: "could_more", scope: !8267, file: !3, line: 5470, type: !595)
!8274 = !DILocation(line: 0, scope: !8267)
!8275 = !DILocation(line: 5472, column: 18, scope: !8267)
!8276 = !DILocation(line: 5472, column: 22, scope: !8267)
!8277 = !DILocation(line: 5472, column: 25, scope: !8267)
!8278 = !DILocation(line: 5472, column: 54, scope: !8267)
!8279 = !DILocation(line: 5472, column: 52, scope: !8267)
!8280 = !DILocation(line: 5473, column: 3, scope: !8267)
!8281 = !DILocation(line: 5473, column: 11, scope: !8267)
!8282 = !DILocation(line: 5474, column: 5, scope: !8267)
!8283 = distinct !{!8283, !8280, !8284}
!8284 = !DILocation(line: 5474, column: 29, scope: !8267)
!8285 = !DILocation(line: 5475, column: 7, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 5475, column: 7)
!8287 = !DILocation(line: 5475, column: 7, scope: !8267)
!8288 = !DILocation(line: 5476, column: 5, scope: !8286)
!8289 = !DILocation(line: 5476, column: 33, scope: !8286)
!8290 = !DILocation(line: 5477, column: 1, scope: !8267)
!8291 = distinct !DISubprogram(name: "schedule_expr_on_boundary", scope: !3, file: !3, line: 5399, type: !8292, scopeLine: 5400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8294)
!8292 = !DISubroutineType(types: !8293)
!8293 = !{!1911, !7790, !1834, !595}
!8294 = !{!8295, !8296, !8297, !8298, !8299, !8300, !8301, !8302, !8303}
!8295 = !DILocalVariable(name: "bnd", arg: 1, scope: !8291, file: !3, line: 5399, type: !7790)
!8296 = !DILocalVariable(name: "expr_vliw", arg: 2, scope: !8291, file: !3, line: 5399, type: !1834)
!8297 = !DILocalVariable(name: "seqno", arg: 3, scope: !8291, file: !3, line: 5399, type: !595)
!8298 = !DILocalVariable(name: "expr_seq", scope: !8291, file: !3, line: 5401, type: !1945)
!8299 = !DILocalVariable(name: "c_expr", scope: !8291, file: !3, line: 5402, type: !1834)
!8300 = !DILocalVariable(name: "place_to_insert", scope: !8291, file: !3, line: 5403, type: !1911)
!8301 = !DILocalVariable(name: "insn", scope: !8291, file: !3, line: 5404, type: !1911)
!8302 = !DILocalVariable(name: "should_move", scope: !8291, file: !3, line: 5405, type: !594)
!8303 = !DILocalVariable(name: "vinsn_new", scope: !8304, file: !3, line: 5433, type: !1840)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 5432, column: 5)
!8305 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 5431, column: 7)
!8306 = !DILocation(line: 0, scope: !8291)
!8307 = !DILocation(line: 5401, column: 3, scope: !8291)
!8308 = !DILocation(line: 5402, column: 19, scope: !8291)
!8309 = !DILocation(line: 5407, column: 14, scope: !8291)
!8310 = !DILocation(line: 5407, column: 12, scope: !8291)
!8311 = !DILocation(line: 5412, column: 28, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 5412, column: 7)
!8313 = !DILocation(line: 5412, column: 7, scope: !8312)
!8314 = !DILocation(line: 5412, column: 7, scope: !8291)
!8315 = !DILocation(line: 5414, column: 14, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 5413, column: 5)
!8317 = !DILocation(line: 5417, column: 19, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 5417, column: 11)
!8319 = !DILocation(line: 5417, column: 16, scope: !8318)
!8320 = !DILocation(line: 5418, column: 11, scope: !8318)
!8321 = !DILocation(line: 5418, column: 15, scope: !8318)
!8322 = !DILocation(line: 5417, column: 11, scope: !8316)
!8323 = !DILocation(line: 5419, column: 9, scope: !8318)
!8324 = !DILocation(line: 5423, column: 21, scope: !8291)
!8325 = !DILocation(line: 5424, column: 17, scope: !8291)
!8326 = !DILocation(line: 5425, column: 3, scope: !8291)
!8327 = !DILocation(line: 5431, column: 7, scope: !8305)
!8328 = !DILocation(line: 5431, column: 7, scope: !8291)
!8329 = !DILocation(line: 5435, column: 19, scope: !8304)
!8330 = !DILocation(line: 0, scope: !8304)
!8331 = !DILocation(line: 5436, column: 7, scope: !8304)
!8332 = !DILocation(line: 5438, column: 5, scope: !8304)
!8333 = !DILocation(line: 5439, column: 7, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 5439, column: 7)
!8335 = !DILocation(line: 5439, column: 7, scope: !8291)
!8336 = !DILocation(line: 5440, column: 12, scope: !8334)
!8337 = !DILocation(line: 5440, column: 5, scope: !8334)
!8338 = !DILocation(line: 5442, column: 12, scope: !8334)
!8339 = !DILocation(line: 0, scope: !8334)
!8340 = !DILocation(line: 5447, column: 7, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 5447, column: 7)
!8342 = !DILocation(line: 5447, column: 7, scope: !8291)
!8343 = !DILocation(line: 5448, column: 43, scope: !8341)
!8344 = !DILocation(line: 5448, column: 42, scope: !8341)
!8345 = !DILocation(line: 5448, column: 5, scope: !8341)
!8346 = !DILocation(line: 5449, column: 29, scope: !8291)
!8347 = !DILocation(line: 5449, column: 28, scope: !8291)
!8348 = !DILocation(line: 5449, column: 3, scope: !8291)
!8349 = !DILocation(line: 5451, column: 3, scope: !8291)
!8350 = !DILocation(line: 5455, column: 7, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 5455, column: 7)
!8352 = !DILocation(line: 5455, column: 7, scope: !8291)
!8353 = !DILocation(line: 5456, column: 52, scope: !8351)
!8354 = !DILocation(line: 5456, column: 5, scope: !8351)
!8355 = !DILocation(line: 5460, column: 3, scope: !8291)
!8356 = !DILocation(line: 5464, column: 1, scope: !8291)
!8357 = !DILocation(line: 5463, column: 3, scope: !8291)
!8358 = distinct !DISubprogram(name: "update_fence_and_insn", scope: !3, file: !3, line: 5305, type: !8359, scopeLine: 5306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8361)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{null, !2180, !1911, !595}
!8361 = !{!8362, !8363, !8364, !8365, !8366, !8372, !8373, !8377}
!8362 = !DILocalVariable(name: "fence", arg: 1, scope: !8358, file: !3, line: 5305, type: !2180)
!8363 = !DILocalVariable(name: "insn", arg: 2, scope: !8358, file: !3, line: 5305, type: !1911)
!8364 = !DILocalVariable(name: "need_stall", arg: 3, scope: !8358, file: !3, line: 5305, type: !595)
!8365 = !DILocalVariable(name: "asm_p", scope: !8358, file: !3, line: 5307, type: !594)
!8366 = !DILocalVariable(name: "__j", scope: !8367, file: !3, line: 5351, type: !595)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 5351, column: 7)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 5351, column: 7)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 5351, column: 7)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 5350, column: 5)
!8371 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 5349, column: 7)
!8372 = !DILocalVariable(name: "__s", scope: !8367, file: !3, line: 5351, type: !597)
!8373 = !DILocalVariable(name: "__j", scope: !8374, file: !3, line: 5353, type: !595)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 5353, column: 7)
!8375 = distinct !DILexicalBlock(scope: !8376, file: !3, line: 5353, column: 7)
!8376 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 5353, column: 7)
!8377 = !DILocalVariable(name: "__s", scope: !8374, file: !3, line: 5353, type: !597)
!8378 = !DILocation(line: 0, scope: !8358)
!8379 = !DILocation(line: 5310, column: 11, scope: !8358)
!8380 = !DILocation(line: 5311, column: 3, scope: !8358)
!8381 = !DILocation(line: 5311, column: 37, scope: !8358)
!8382 = !DILocation(line: 5312, column: 3, scope: !8358)
!8383 = !DILocation(line: 5313, column: 7, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 5313, column: 7)
!8385 = !DILocation(line: 5313, column: 7, scope: !8358)
!8386 = !DILocation(line: 5315, column: 34, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 5314, column: 5)
!8388 = !DILocation(line: 5315, column: 7, scope: !8387)
!8389 = !DILocation(line: 5315, column: 32, scope: !8387)
!8390 = !DILocation(line: 5316, column: 28, scope: !8387)
!8391 = !DILocation(line: 5317, column: 5, scope: !8387)
!8392 = !DILocation(line: 5319, column: 5, scope: !8384)
!8393 = !DILocation(line: 5319, column: 30, scope: !8384)
!8394 = !DILocation(line: 5320, column: 7, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 5320, column: 7)
!8396 = !DILocation(line: 5320, column: 25, scope: !8395)
!8397 = !DILocation(line: 5320, column: 23, scope: !8395)
!8398 = !DILocation(line: 5320, column: 7, scope: !8358)
!8399 = !DILocation(line: 5321, column: 5, scope: !8395)
!8400 = !DILocation(line: 5321, column: 49, scope: !8395)
!8401 = !DILocation(line: 5325, column: 5, scope: !8358)
!8402 = !DILocation(line: 5325, column: 3, scope: !8358)
!8403 = !DILocation(line: 5326, column: 3, scope: !8358)
!8404 = !DILocation(line: 5326, column: 44, scope: !8358)
!8405 = !DILocation(line: 5327, column: 46, scope: !8358)
!8406 = !DILocation(line: 5327, column: 3, scope: !8358)
!8407 = !DILocation(line: 5327, column: 44, scope: !8358)
!8408 = !DILocation(line: 5328, column: 31, scope: !8358)
!8409 = !DILocation(line: 5328, column: 3, scope: !8358)
!8410 = !DILocation(line: 5328, column: 29, scope: !8358)
!8411 = !DILocation(line: 5329, column: 29, scope: !8358)
!8412 = !DILocation(line: 5329, column: 3, scope: !8358)
!8413 = !DILocation(line: 5329, column: 27, scope: !8358)
!8414 = !DILocation(line: 5335, column: 7, scope: !8358)
!8415 = !DILocation(line: 5335, column: 34, scope: !8358)
!8416 = !DILocation(line: 5335, column: 51, scope: !8358)
!8417 = !DILocation(line: 5337, column: 36, scope: !8358)
!8418 = !DILocation(line: 5337, column: 64, scope: !8358)
!8419 = !DILocation(line: 5335, column: 31, scope: !8358)
!8420 = !DILocation(line: 5334, column: 3, scope: !8358)
!8421 = !DILocation(line: 5335, column: 5, scope: !8358)
!8422 = !DILocation(line: 5340, column: 31, scope: !8358)
!8423 = !DILocation(line: 5341, column: 7, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 5341, column: 7)
!8425 = !DILocation(line: 5341, column: 16, scope: !8424)
!8426 = !DILocation(line: 5341, column: 13, scope: !8424)
!8427 = !DILocation(line: 5342, column: 5, scope: !8424)
!8428 = !DILocation(line: 5345, column: 29, scope: !8358)
!8429 = !DILocation(line: 5346, column: 41, scope: !8358)
!8430 = !DILocation(line: 5349, column: 7, scope: !8371)
!8431 = !DILocation(line: 5349, column: 21, scope: !8371)
!8432 = !DILocation(line: 5349, column: 7, scope: !8358)
!8433 = !DILocation(line: 5351, column: 7, scope: !8368)
!8434 = !DILocation(line: 5351, column: 7, scope: !8369)
!8435 = !DILocation(line: 5351, column: 7, scope: !8367)
!8436 = !DILocation(line: 0, scope: !8367)
!8437 = !DILocation(line: 5352, column: 7, scope: !8370)
!8438 = !DILocation(line: 5353, column: 7, scope: !8375)
!8439 = !DILocation(line: 5353, column: 7, scope: !8376)
!8440 = !DILocation(line: 5353, column: 7, scope: !8374)
!8441 = !DILocation(line: 0, scope: !8374)
!8442 = !DILocation(line: 5355, column: 1, scope: !8358)
!8443 = distinct !DISubprogram(name: "update_boundaries", scope: !3, file: !3, line: 5361, type: !8444, scopeLine: 5363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8446)
!8444 = !DISubroutineType(types: !8445)
!8445 = !{!7767, !2180, !7790, !1911, !7767, !7767}
!8446 = !{!8447, !8448, !8449, !8450, !8451, !8452, !8453, !8454, !8458, !8465}
!8447 = !DILocalVariable(name: "fence", arg: 1, scope: !8443, file: !3, line: 5361, type: !2180)
!8448 = !DILocalVariable(name: "bnd", arg: 2, scope: !8443, file: !3, line: 5361, type: !7790)
!8449 = !DILocalVariable(name: "insn", arg: 3, scope: !8443, file: !3, line: 5361, type: !1911)
!8450 = !DILocalVariable(name: "bndsp", arg: 4, scope: !8443, file: !3, line: 5361, type: !7767)
!8451 = !DILocalVariable(name: "bnds_tailp", arg: 5, scope: !8443, file: !3, line: 5362, type: !7767)
!8452 = !DILocalVariable(name: "si", scope: !8443, file: !3, line: 5364, type: !3600)
!8453 = !DILocalVariable(name: "succ", scope: !8443, file: !3, line: 5365, type: !1911)
!8454 = !DILocalVariable(name: "ptr", scope: !8455, file: !3, line: 5371, type: !1942)
!8455 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 5370, column: 5)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 5368, column: 3)
!8457 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 5368, column: 3)
!8458 = !DILocalVariable(name: "__j", scope: !8459, file: !3, line: 5385, type: !595)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 5385, column: 6)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 5385, column: 6)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 5385, column: 6)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 5384, column: 8)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 5383, column: 2)
!8464 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 5382, column: 11)
!8465 = !DILocalVariable(name: "__s", scope: !8459, file: !3, line: 5385, type: !597)
!8466 = !DILocation(line: 0, scope: !8443)
!8467 = !DILocation(line: 5364, column: 3, scope: !8443)
!8468 = !DILocation(line: 5365, column: 3, scope: !8443)
!8469 = !DILocation(line: 5367, column: 25, scope: !8443)
!8470 = !DILocation(line: 5367, column: 3, scope: !8443)
!8471 = !DILocation(line: 5368, column: 3, scope: !8457)
!8472 = !DILocation(line: 0, scope: !8455)
!8473 = !DILocation(line: 0, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 5375, column: 11)
!8475 = !DILocation(line: 0, scope: !8464)
!8476 = !DILocation(line: 0, scope: !8459)
!8477 = !DILocation(line: 0, scope: !8463)
!8478 = !DILocation(line: 5368, column: 3, scope: !8456)
!8479 = !DILocation(line: 5371, column: 7, scope: !8455)
!8480 = !DILocation(line: 5371, column: 33, scope: !8455)
!8481 = !DILocation(line: 5371, column: 21, scope: !8455)
!8482 = !DILocation(line: 5371, column: 15, scope: !8455)
!8483 = !DILocation(line: 5373, column: 7, scope: !8455)
!8484 = !DILocation(line: 5375, column: 11, scope: !8474)
!8485 = !DILocation(line: 5375, column: 31, scope: !8474)
!8486 = !DILocation(line: 5375, column: 34, scope: !8474)
!8487 = !DILocation(line: 5376, column: 4, scope: !8474)
!8488 = !DILocation(line: 5376, column: 32, scope: !8474)
!8489 = !DILocation(line: 5376, column: 38, scope: !8474)
!8490 = !DILocation(line: 5376, column: 7, scope: !8474)
!8491 = !DILocation(line: 5375, column: 11, scope: !8455)
!8492 = !DILocation(line: 5378, column: 4, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 5377, column: 2)
!8494 = !DILocation(line: 5379, column: 4, scope: !8493)
!8495 = !DILocation(line: 5382, column: 11, scope: !8464)
!8496 = !DILocation(line: 5382, column: 30, scope: !8464)
!8497 = !DILocation(line: 5382, column: 38, scope: !8464)
!8498 = !DILocation(line: 5382, column: 42, scope: !8464)
!8499 = !DILocation(line: 5382, column: 11, scope: !8455)
!8500 = !DILocation(line: 5384, column: 8, scope: !8462)
!8501 = !DILocation(line: 5384, column: 22, scope: !8462)
!8502 = !DILocation(line: 5384, column: 8, scope: !8463)
!8503 = !DILocation(line: 5385, column: 6, scope: !8460)
!8504 = !DILocation(line: 5385, column: 6, scope: !8461)
!8505 = !DILocation(line: 5385, column: 6, scope: !8459)
!8506 = !DILocation(line: 5387, column: 25, scope: !8463)
!8507 = !DILocation(line: 5387, column: 23, scope: !8463)
!8508 = !DILocation(line: 5388, column: 2, scope: !8463)
!8509 = !DILocation(line: 5389, column: 30, scope: !8455)
!8510 = !DILocation(line: 5389, column: 36, scope: !8455)
!8511 = !DILocation(line: 5389, column: 41, scope: !8455)
!8512 = !DILocation(line: 5389, column: 7, scope: !8455)
!8513 = !DILocation(line: 5390, column: 21, scope: !8455)
!8514 = !DILocation(line: 5391, column: 5, scope: !8456)
!8515 = distinct !{!8515, !8471, !8516}
!8516 = !DILocation(line: 5391, column: 5, scope: !8457)
!8517 = !DILocation(line: 5393, column: 3, scope: !8443)
!8518 = !DILocation(line: 5395, column: 1, scope: !8443)
!8519 = !DILocation(line: 5394, column: 3, scope: !8443)
!8520 = distinct !DISubprogram(name: "moveup_set_inside_insn_group", scope: !3, file: !3, line: 2612, type: !8521, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8523)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{null, !6277, !1942}
!8523 = !{!8524, !8525, !8526, !8527, !8532}
!8524 = !DILocalVariable(name: "avp", arg: 1, scope: !8520, file: !3, line: 2612, type: !6277)
!8525 = !DILocalVariable(name: "path", arg: 2, scope: !8520, file: !3, line: 2612, type: !1942)
!8526 = !DILocalVariable(name: "last_cycle", scope: !8520, file: !3, line: 2614, type: !595)
!8527 = !DILocalVariable(name: "__j", scope: !8528, file: !3, line: 2617, type: !595)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2617, column: 5)
!8529 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 2617, column: 5)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 2617, column: 5)
!8531 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 2616, column: 7)
!8532 = !DILocalVariable(name: "__s", scope: !8528, file: !3, line: 2617, type: !597)
!8533 = !DILocation(line: 0, scope: !8520)
!8534 = !DILocation(line: 2616, column: 7, scope: !8531)
!8535 = !DILocation(line: 2616, column: 21, scope: !8531)
!8536 = !DILocation(line: 2616, column: 7, scope: !8520)
!8537 = !DILocation(line: 2617, column: 5, scope: !8529)
!8538 = !DILocation(line: 2617, column: 5, scope: !8530)
!8539 = !DILocation(line: 2617, column: 5, scope: !8528)
!8540 = !DILocation(line: 0, scope: !8528)
!8541 = !DILocation(line: 2627, column: 1, scope: !8520)
!8542 = distinct !DISubprogram(name: "fill_ready_list", scope: !3, file: !3, line: 4000, type: !8171, scopeLine: 4002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8543)
!8543 = !{!8544, !8545, !8546, !8547, !8548}
!8544 = !DILocalVariable(name: "av_ptr", arg: 1, scope: !8542, file: !3, line: 4000, type: !6277)
!8545 = !DILocalVariable(name: "bnds", arg: 2, scope: !8542, file: !3, line: 4000, type: !2179)
!8546 = !DILocalVariable(name: "fence", arg: 3, scope: !8542, file: !3, line: 4000, type: !2180)
!8547 = !DILocalVariable(name: "pneed_stall", arg: 4, scope: !8542, file: !3, line: 4001, type: !1998)
!8548 = !DILocalVariable(name: "expr", scope: !8542, file: !3, line: 4003, type: !1834)
!8549 = !DILocation(line: 0, scope: !8542)
!8550 = !DILocation(line: 4006, column: 3, scope: !8542)
!8551 = !DILocation(line: 4010, column: 3, scope: !8542)
!8552 = !DILocation(line: 4011, column: 3, scope: !8542)
!8553 = !DILocation(line: 4014, column: 10, scope: !8542)
!8554 = !DILocation(line: 4015, column: 7, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 4015, column: 7)
!8556 = !DILocation(line: 4015, column: 7, scope: !8542)
!8557 = !DILocation(line: 4017, column: 20, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 4016, column: 5)
!8559 = !DILocation(line: 4018, column: 7, scope: !8558)
!8560 = !DILocation(line: 4022, column: 26, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 4022, column: 7)
!8562 = !DILocation(line: 4022, column: 9, scope: !8561)
!8563 = !DILocation(line: 4022, column: 7, scope: !8542)
!8564 = !DILocation(line: 4024, column: 21, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 4023, column: 5)
!8566 = !DILocation(line: 4025, column: 7, scope: !8565)
!8567 = !DILocation(line: 4029, column: 3, scope: !8542)
!8568 = !DILocation(line: 4030, column: 3, scope: !8542)
!8569 = !DILocation(line: 4031, column: 1, scope: !8542)
!8570 = distinct !DISubprogram(name: "invoke_reorder_hooks", scope: !3, file: !3, line: 4064, type: !8571, scopeLine: 4065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8573)
!8571 = !DISubroutineType(types: !8572)
!8572 = !{!595, !2180}
!8573 = !{!8574, !8575, !8576, !8577, !8580, !8581, !8582, !8583, !8584}
!8574 = !DILocalVariable(name: "fence", arg: 1, scope: !8570, file: !3, line: 4064, type: !2180)
!8575 = !DILocalVariable(name: "issue_more", scope: !8570, file: !3, line: 4066, type: !595)
!8576 = !DILocalVariable(name: "ran_hook", scope: !8570, file: !3, line: 4067, type: !594)
!8577 = !DILocalVariable(name: "i", scope: !8578, file: !3, line: 4128, type: !595)
!8578 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 4127, column: 5)
!8579 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 4126, column: 7)
!8580 = !DILocalVariable(name: "j", scope: !8578, file: !3, line: 4128, type: !595)
!8581 = !DILocalVariable(name: "n", scope: !8578, file: !3, line: 4128, type: !595)
!8582 = !DILocalVariable(name: "arr", scope: !8578, file: !3, line: 4129, type: !4934)
!8583 = !DILocalVariable(name: "vec", scope: !8578, file: !3, line: 4130, type: !6393)
!8584 = !DILocalVariable(name: "tmp", scope: !8585, file: !3, line: 4135, type: !1834)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 4134, column: 11)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 4133, column: 13)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 4132, column: 7)
!8588 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 4132, column: 7)
!8589 = !DILocation(line: 0, scope: !8570)
!8590 = !DILocation(line: 4071, column: 7, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 4071, column: 7)
!8592 = !DILocation(line: 4071, column: 34, scope: !8591)
!8593 = !DILocation(line: 4071, column: 7, scope: !8570)
!8594 = !DILocation(line: 4073, column: 25, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 4073, column: 11)
!8596 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 4072, column: 5)
!8597 = !DILocation(line: 4073, column: 11, scope: !8595)
!8598 = !DILocation(line: 4074, column: 11, scope: !8595)
!8599 = !DILocation(line: 4074, column: 15, scope: !8595)
!8600 = !DILocation(line: 4075, column: 20, scope: !8595)
!8601 = !DILocation(line: 4075, column: 28, scope: !8595)
!8602 = !DILocation(line: 4075, column: 11, scope: !8595)
!8603 = !DILocation(line: 4079, column: 15, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 4079, column: 15)
!8605 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 4076, column: 9)
!8606 = !DILocation(line: 4079, column: 15, scope: !8605)
!8607 = !DILocation(line: 4080, column: 13, scope: !8604)
!8608 = !DILocation(line: 4083, column: 29, scope: !8605)
!8609 = !DILocation(line: 4083, column: 38, scope: !8605)
!8610 = !DILocation(line: 4083, column: 50, scope: !8605)
!8611 = !DILocation(line: 4084, column: 38, scope: !8605)
!8612 = !DILocation(line: 4085, column: 54, scope: !8605)
!8613 = !DILocation(line: 4083, column: 15, scope: !8605)
!8614 = !DILocation(line: 4087, column: 15, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 4087, column: 15)
!8616 = !DILocation(line: 4087, column: 15, scope: !8605)
!8617 = !DILocation(line: 4088, column: 13, scope: !8615)
!8618 = !DILocation(line: 4094, column: 22, scope: !8595)
!8619 = !DILocation(line: 4096, column: 26, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 4096, column: 12)
!8621 = !DILocation(line: 4096, column: 12, scope: !8620)
!8622 = !DILocation(line: 4097, column: 12, scope: !8620)
!8623 = !DILocation(line: 4097, column: 16, scope: !8620)
!8624 = !DILocation(line: 4096, column: 12, scope: !8591)
!8625 = !DILocation(line: 4099, column: 17, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 4099, column: 11)
!8627 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 4098, column: 5)
!8628 = !DILocation(line: 4099, column: 25, scope: !8626)
!8629 = !DILocation(line: 4099, column: 11, scope: !8627)
!8630 = !DILocation(line: 4101, column: 25, scope: !8626)
!8631 = !DILocation(line: 4101, column: 35, scope: !8626)
!8632 = !DILocation(line: 4101, column: 47, scope: !8626)
!8633 = !DILocation(line: 4102, column: 35, scope: !8626)
!8634 = !DILocation(line: 4103, column: 51, scope: !8626)
!8635 = !DILocation(line: 4101, column: 11, scope: !8626)
!8636 = !DILocation(line: 4100, column: 9, scope: !8626)
!8637 = !DILocation(line: 4106, column: 15, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 4106, column: 15)
!8639 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 4105, column: 9)
!8640 = !DILocation(line: 4106, column: 15, scope: !8639)
!8641 = !DILocation(line: 4107, column: 13, scope: !8638)
!8642 = !DILocation(line: 4111, column: 43, scope: !8639)
!8643 = !DILocation(line: 4110, column: 27, scope: !8639)
!8644 = !DILocation(line: 4110, column: 37, scope: !8639)
!8645 = !DILocation(line: 4110, column: 49, scope: !8639)
!8646 = !DILocation(line: 4111, column: 37, scope: !8639)
!8647 = !DILocation(line: 4112, column: 39, scope: !8639)
!8648 = !DILocation(line: 4113, column: 53, scope: !8639)
!8649 = !DILocation(line: 4110, column: 13, scope: !8639)
!8650 = !DILocation(line: 4115, column: 15, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 4115, column: 15)
!8652 = !DILocation(line: 4115, column: 15, scope: !8639)
!8653 = !DILocation(line: 4116, column: 13, scope: !8651)
!8654 = !DILocation(line: 4122, column: 18, scope: !8620)
!8655 = !DILocation(line: 0, scope: !8591)
!8656 = !DILocation(line: 4126, column: 7, scope: !8579)
!8657 = !DILocation(line: 4126, column: 18, scope: !8579)
!8658 = !DILocation(line: 4129, column: 24, scope: !8578)
!8659 = !DILocation(line: 0, scope: !8578)
!8660 = !DILocation(line: 4130, column: 21, scope: !8578)
!8661 = !DILocation(line: 4132, column: 29, scope: !8588)
!8662 = !DILocation(line: 4132, column: 12, scope: !8588)
!8663 = !DILocation(line: 0, scope: !8588)
!8664 = !DILocation(line: 4132, column: 40, scope: !8587)
!8665 = !DILocation(line: 4132, column: 7, scope: !8588)
!8666 = !DILocation(line: 4133, column: 13, scope: !8586)
!8667 = !DILocation(line: 4133, column: 39, scope: !8586)
!8668 = !DILocation(line: 4133, column: 36, scope: !8586)
!8669 = !DILocation(line: 4133, column: 13, scope: !8587)
!8670 = !DILocation(line: 4137, column: 27, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 4137, column: 13)
!8672 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 4137, column: 13)
!8673 = !DILocation(line: 4137, column: 13, scope: !8672)
!8674 = !DILocation(line: 0, scope: !8672)
!8675 = !DILocation(line: 4138, column: 19, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 4138, column: 19)
!8677 = !DILocation(line: 4138, column: 42, scope: !8676)
!8678 = !DILocation(line: 4138, column: 19, scope: !8671)
!8679 = !DILocation(line: 4137, column: 33, scope: !8671)
!8680 = !DILocation(line: 4137, column: 13, scope: !8671)
!8681 = distinct !{!8681, !8673, !8682}
!8682 = !DILocation(line: 4139, column: 17, scope: !8672)
!8683 = !DILocation(line: 4140, column: 13, scope: !8585)
!8684 = !DILocation(line: 4142, column: 19, scope: !8585)
!8685 = !DILocation(line: 0, scope: !8585)
!8686 = !DILocation(line: 4143, column: 22, scope: !8585)
!8687 = !DILocation(line: 4143, column: 20, scope: !8585)
!8688 = !DILocation(line: 4144, column: 20, scope: !8585)
!8689 = !DILocation(line: 4145, column: 11, scope: !8585)
!8690 = !DILocation(line: 4132, column: 46, scope: !8587)
!8691 = !DILocation(line: 4132, column: 7, scope: !8587)
!8692 = distinct !{!8692, !8665, !8693}
!8693 = !DILocation(line: 4145, column: 11, scope: !8588)
!8694 = !DILocation(line: 4148, column: 3, scope: !8570)
!8695 = distinct !DISubprogram(name: "invoke_dfa_lookahead_guard", scope: !3, file: !3, line: 4172, type: !2382, scopeLine: 4173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8696)
!8696 = !{!8697, !8698, !8699, !8700, !8705, !8706, !8710, !8711, !8712, !8718, !8719, !8724}
!8697 = !DILocalVariable(name: "i", scope: !8695, file: !3, line: 4174, type: !595)
!8698 = !DILocalVariable(name: "n", scope: !8695, file: !3, line: 4174, type: !595)
!8699 = !DILocalVariable(name: "have_hook", scope: !8695, file: !3, line: 4175, type: !594)
!8700 = !DILocalVariable(name: "__j", scope: !8701, file: !3, line: 4179, type: !595)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 4179, column: 5)
!8702 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 4179, column: 5)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 4179, column: 5)
!8704 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 4178, column: 7)
!8705 = !DILocalVariable(name: "__s", scope: !8701, file: !3, line: 4179, type: !597)
!8706 = !DILocalVariable(name: "expr", scope: !8707, file: !3, line: 4183, type: !1834)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !3, line: 4182, column: 5)
!8708 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 4181, column: 3)
!8709 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 4181, column: 3)
!8710 = !DILocalVariable(name: "insn", scope: !8707, file: !3, line: 4184, type: !1911)
!8711 = !DILocalVariable(name: "r", scope: !8707, file: !3, line: 4185, type: !595)
!8712 = !DILocalVariable(name: "__j", scope: !8713, file: !3, line: 4210, type: !595)
!8713 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 4210, column: 11)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 4210, column: 11)
!8715 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 4210, column: 11)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 4208, column: 9)
!8717 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 4207, column: 11)
!8718 = !DILocalVariable(name: "__s", scope: !8713, file: !3, line: 4210, type: !597)
!8719 = !DILocalVariable(name: "__j", scope: !8720, file: !3, line: 4215, type: !595)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 4215, column: 5)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 4215, column: 5)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4215, column: 5)
!8723 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 4214, column: 7)
!8724 = !DILocalVariable(name: "__s", scope: !8720, file: !3, line: 4215, type: !597)
!8725 = !DILocation(line: 4176, column: 21, scope: !8695)
!8726 = !DILocation(line: 4176, column: 63, scope: !8695)
!8727 = !DILocation(line: 0, scope: !8695)
!8728 = !DILocation(line: 4178, column: 7, scope: !8704)
!8729 = !DILocation(line: 4178, column: 21, scope: !8704)
!8730 = !DILocation(line: 4178, column: 7, scope: !8695)
!8731 = !DILocation(line: 4179, column: 5, scope: !8702)
!8732 = !DILocation(line: 4179, column: 5, scope: !8703)
!8733 = !DILocation(line: 4179, column: 5, scope: !8701)
!8734 = !DILocation(line: 0, scope: !8701)
!8735 = !DILocation(line: 4181, column: 8, scope: !8709)
!8736 = !DILocation(line: 4181, column: 17, scope: !8709)
!8737 = !DILocation(line: 4181, column: 32, scope: !8708)
!8738 = !DILocation(line: 4181, column: 24, scope: !8708)
!8739 = !DILocation(line: 4181, column: 3, scope: !8709)
!8740 = !DILocation(line: 4189, column: 14, scope: !8707)
!8741 = !DILocation(line: 0, scope: !8707)
!8742 = !DILocation(line: 4196, column: 7, scope: !8707)
!8743 = !DILocation(line: 4200, column: 7, scope: !8707)
!8744 = !DILocation(line: 4201, column: 7, scope: !8707)
!8745 = !DILocation(line: 4201, column: 20, scope: !8707)
!8746 = !DILocation(line: 4202, column: 11, scope: !8707)
!8747 = !DILocation(line: 4205, column: 14, scope: !8707)
!8748 = !DILocation(line: 4207, column: 11, scope: !8717)
!8749 = !DILocation(line: 4207, column: 25, scope: !8717)
!8750 = !DILocation(line: 4207, column: 11, scope: !8707)
!8751 = !DILocation(line: 4209, column: 23, scope: !8716)
!8752 = !DILocation(line: 4209, column: 11, scope: !8716)
!8753 = !DILocation(line: 4210, column: 11, scope: !8714)
!8754 = !DILocation(line: 4210, column: 11, scope: !8715)
!8755 = !DILocation(line: 4210, column: 11, scope: !8713)
!8756 = !DILocation(line: 0, scope: !8713)
!8757 = !DILocation(line: 4181, column: 42, scope: !8708)
!8758 = !DILocation(line: 4181, column: 3, scope: !8708)
!8759 = distinct !{!8759, !8739, !8760}
!8760 = !DILocation(line: 4212, column: 5, scope: !8709)
!8761 = !DILocation(line: 4214, column: 7, scope: !8723)
!8762 = !DILocation(line: 4191, column: 28, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 4191, column: 11)
!8764 = !DILocation(line: 4191, column: 23, scope: !8763)
!8765 = !DILocation(line: 4194, column: 28, scope: !8763)
!8766 = !DILocation(line: 4194, column: 14, scope: !8763)
!8767 = !DILocation(line: 4194, column: 13, scope: !8763)
!8768 = !DILocation(line: 0, scope: !8763)
!8769 = !DILocation(line: 4201, column: 22, scope: !8707)
!8770 = !DILocation(line: 4214, column: 21, scope: !8723)
!8771 = !DILocation(line: 4214, column: 7, scope: !8695)
!8772 = !DILocation(line: 4215, column: 5, scope: !8721)
!8773 = !DILocation(line: 4215, column: 5, scope: !8722)
!8774 = !DILocation(line: 4215, column: 5, scope: !8720)
!8775 = !DILocation(line: 0, scope: !8720)
!8776 = !DILocation(line: 4216, column: 3, scope: !8695)
!8777 = distinct !DISubprogram(name: "calculate_privileged_insns", scope: !3, file: !3, line: 4221, type: !2382, scopeLine: 4222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8778)
!8778 = !{!8779, !8780, !8781, !8782, !8783, !8788}
!8779 = !DILocalVariable(name: "cur_expr", scope: !8777, file: !3, line: 4223, type: !1834)
!8780 = !DILocalVariable(name: "min_spec_expr", scope: !8777, file: !3, line: 4223, type: !1834)
!8781 = !DILocalVariable(name: "privileged_n", scope: !8777, file: !3, line: 4224, type: !595)
!8782 = !DILocalVariable(name: "i", scope: !8777, file: !3, line: 4224, type: !595)
!8783 = !DILocalVariable(name: "__j", scope: !8784, file: !3, line: 4246, type: !595)
!8784 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 4246, column: 5)
!8785 = distinct !DILexicalBlock(scope: !8786, file: !3, line: 4246, column: 5)
!8786 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 4246, column: 5)
!8787 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 4245, column: 7)
!8788 = !DILocalVariable(name: "__s", scope: !8784, file: !3, line: 4246, type: !597)
!8789 = !DILocation(line: 0, scope: !8777)
!8790 = !DILocation(line: 4226, column: 8, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 4226, column: 3)
!8792 = !DILocation(line: 4224, column: 7, scope: !8777)
!8793 = !DILocation(line: 4223, column: 20, scope: !8777)
!8794 = !DILocation(line: 4226, column: 25, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 4226, column: 3)
!8796 = !DILocation(line: 4226, column: 17, scope: !8795)
!8797 = !DILocation(line: 4226, column: 3, scope: !8791)
!8798 = !DILocation(line: 4228, column: 11, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 4228, column: 11)
!8800 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 4227, column: 5)
!8801 = !DILocation(line: 4228, column: 11, scope: !8800)
!8802 = !DILocation(line: 4231, column: 13, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 4231, column: 11)
!8804 = !DILocation(line: 4231, column: 11, scope: !8800)
!8805 = !DILocation(line: 4232, column: 18, scope: !8803)
!8806 = !DILocation(line: 4232, column: 2, scope: !8803)
!8807 = !DILocation(line: 4234, column: 18, scope: !8800)
!8808 = !DILocation(line: 4236, column: 11, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 4236, column: 11)
!8810 = !DILocation(line: 4236, column: 34, scope: !8809)
!8811 = !DILocation(line: 4236, column: 32, scope: !8809)
!8812 = !DILocation(line: 4236, column: 11, scope: !8800)
!8813 = !DILocation(line: 4242, column: 18, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 4242, column: 7)
!8815 = !DILocation(line: 4239, column: 7, scope: !8800)
!8816 = !DILocation(line: 4240, column: 5, scope: !8800)
!8817 = !DILocation(line: 4226, column: 35, scope: !8795)
!8818 = !DILocation(line: 4226, column: 3, scope: !8795)
!8819 = distinct !{!8819, !8797, !8820}
!8820 = !DILocation(line: 4240, column: 5, scope: !8791)
!8821 = !DILocation(line: 4242, column: 9, scope: !8814)
!8822 = !DILocation(line: 4242, column: 7, scope: !8777)
!8823 = !DILocation(line: 4245, column: 7, scope: !8787)
!8824 = !DILocation(line: 4245, column: 21, scope: !8787)
!8825 = !DILocation(line: 4245, column: 7, scope: !8777)
!8826 = !DILocation(line: 4246, column: 5, scope: !8785)
!8827 = !DILocation(line: 4246, column: 5, scope: !8786)
!8828 = !DILocation(line: 4246, column: 5, scope: !8784)
!8829 = !DILocation(line: 0, scope: !8784)
!8830 = !DILocation(line: 4248, column: 3, scope: !8777)
!8831 = distinct !DISubprogram(name: "choose_best_insn", scope: !3, file: !3, line: 4326, type: !8832, scopeLine: 4327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8834)
!8832 = !DISubroutineType(types: !8833)
!8833 = !{!595, !2180, !595, !1998}
!8834 = !{!8835, !8836, !8837, !8838, !8839, !8846, !8847, !8849, !8853, !8860}
!8835 = !DILocalVariable(name: "fence", arg: 1, scope: !8831, file: !3, line: 4326, type: !2180)
!8836 = !DILocalVariable(name: "privileged_n", arg: 2, scope: !8831, file: !3, line: 4326, type: !595)
!8837 = !DILocalVariable(name: "index", arg: 3, scope: !8831, file: !3, line: 4326, type: !1998)
!8838 = !DILocalVariable(name: "can_issue", scope: !8831, file: !3, line: 4328, type: !595)
!8839 = !DILocalVariable(name: "__j", scope: !8840, file: !3, line: 4336, type: !595)
!8840 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 4336, column: 9)
!8841 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 4336, column: 9)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 4336, column: 9)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 4335, column: 11)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 4331, column: 5)
!8845 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 4330, column: 7)
!8846 = !DILocalVariable(name: "__s", scope: !8840, file: !3, line: 4336, type: !597)
!8847 = !DILocalVariable(name: "i", scope: !8848, file: !3, line: 4342, type: !595)
!8848 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 4340, column: 5)
!8849 = !DILocalVariable(name: "expr", scope: !8850, file: !3, line: 4346, type: !1834)
!8850 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 4345, column: 2)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 4344, column: 7)
!8852 = distinct !DILexicalBlock(scope: !8848, file: !3, line: 4344, column: 7)
!8853 = !DILocalVariable(name: "__j", scope: !8854, file: !3, line: 4354, type: !595)
!8854 = distinct !DILexicalBlock(scope: !8855, file: !3, line: 4354, column: 3)
!8855 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 4354, column: 3)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !3, line: 4354, column: 3)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 4353, column: 12)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 4349, column: 6)
!8859 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 4348, column: 8)
!8860 = !DILocalVariable(name: "__s", scope: !8854, file: !3, line: 4354, type: !597)
!8861 = !DILocation(line: 0, scope: !8831)
!8862 = !DILocation(line: 4330, column: 7, scope: !8845)
!8863 = !DILocation(line: 4330, column: 21, scope: !8845)
!8864 = !DILocation(line: 4330, column: 7, scope: !8831)
!8865 = !DILocation(line: 4344, column: 7, scope: !8852)
!8866 = !DILocation(line: 4332, column: 28, scope: !8844)
!8867 = !DILocation(line: 4332, column: 26, scope: !8844)
!8868 = !DILocation(line: 4334, column: 30, scope: !8844)
!8869 = !DILocation(line: 4333, column: 19, scope: !8844)
!8870 = !DILocation(line: 4335, column: 11, scope: !8843)
!8871 = !DILocation(line: 4335, column: 25, scope: !8843)
!8872 = !DILocation(line: 4335, column: 11, scope: !8844)
!8873 = !DILocation(line: 4336, column: 9, scope: !8841)
!8874 = !DILocation(line: 4336, column: 9, scope: !8842)
!8875 = !DILocation(line: 4336, column: 9, scope: !8840)
!8876 = !DILocation(line: 0, scope: !8840)
!8877 = !DILocation(line: 0, scope: !8852)
!8878 = !DILocation(line: 0, scope: !8848)
!8879 = !DILocation(line: 4344, column: 29, scope: !8851)
!8880 = !DILocation(line: 4344, column: 21, scope: !8851)
!8881 = !DILocation(line: 4346, column: 18, scope: !8850)
!8882 = !DILocation(line: 0, scope: !8850)
!8883 = !DILocation(line: 4348, column: 8, scope: !8859)
!8884 = !DILocation(line: 4348, column: 36, scope: !8859)
!8885 = !DILocation(line: 4348, column: 8, scope: !8850)
!8886 = !DILocation(line: 4350, column: 20, scope: !8858)
!8887 = !DILocation(line: 4351, column: 15, scope: !8858)
!8888 = !DILocation(line: 4353, column: 12, scope: !8857)
!8889 = !DILocation(line: 4353, column: 26, scope: !8857)
!8890 = !DILocation(line: 4353, column: 12, scope: !8858)
!8891 = !DILocation(line: 4354, column: 3, scope: !8855)
!8892 = !DILocation(line: 4354, column: 3, scope: !8856)
!8893 = !DILocation(line: 4354, column: 3, scope: !8854)
!8894 = !DILocation(line: 0, scope: !8854)
!8895 = !DILocation(line: 4360, column: 22, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8848, file: !3, line: 4360, column: 11)
!8897 = !DILocation(line: 4344, column: 39, scope: !8851)
!8898 = !DILocation(line: 4344, column: 7, scope: !8851)
!8899 = distinct !{!8899, !8865, !8900}
!8900 = !DILocation(line: 4358, column: 2, scope: !8852)
!8901 = !DILocation(line: 4360, column: 13, scope: !8896)
!8902 = !DILocation(line: 4360, column: 11, scope: !8848)
!8903 = !DILocation(line: 4363, column: 11, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8896, file: !3, line: 4361, column: 2)
!8905 = !DILocation(line: 4364, column: 2, scope: !8904)
!8906 = !DILocation(line: 0, scope: !8845)
!8907 = !DILocation(line: 4367, column: 3, scope: !8831)
!8908 = distinct !DISubprogram(name: "find_expr_for_ready", scope: !3, file: !3, line: 4156, type: !8909, scopeLine: 4157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8911)
!8909 = !DISubroutineType(types: !8910)
!8910 = !{!1834, !595, !594}
!8911 = !{!8912, !8913, !8914, !8915}
!8912 = !DILocalVariable(name: "index", arg: 1, scope: !8908, file: !3, line: 4156, type: !595)
!8913 = !DILocalVariable(name: "follow_ready_element", arg: 2, scope: !8908, file: !3, line: 4156, type: !594)
!8914 = !DILocalVariable(name: "expr", scope: !8908, file: !3, line: 4158, type: !1834)
!8915 = !DILocalVariable(name: "real_index", scope: !8908, file: !3, line: 4159, type: !595)
!8916 = !DILocation(line: 0, scope: !8908)
!8917 = !DILocation(line: 4161, column: 16, scope: !8908)
!8918 = !DILocation(line: 4163, column: 10, scope: !8908)
!8919 = !DILocation(line: 4164, column: 3, scope: !8908)
!8920 = !DILocation(line: 4166, column: 3, scope: !8908)
!8921 = distinct !DISubprogram(name: "invoke_aftermath_hooks", scope: !3, file: !3, line: 4256, type: !8922, scopeLine: 4257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8924)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{!595, !2180, !607, !595}
!8924 = !{!8925, !8926, !8927}
!8925 = !DILocalVariable(name: "fence", arg: 1, scope: !8921, file: !3, line: 4256, type: !2180)
!8926 = !DILocalVariable(name: "best_insn", arg: 2, scope: !8921, file: !3, line: 4256, type: !607)
!8927 = !DILocalVariable(name: "issue_more", arg: 3, scope: !8921, file: !3, line: 4256, type: !595)
!8928 = !DILocation(line: 0, scope: !8921)
!8929 = !DILocation(line: 4258, column: 3, scope: !8921)
!8930 = !DILocation(line: 4261, column: 3, scope: !8921)
!8931 = !DILocation(line: 4263, column: 21, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 4263, column: 7)
!8933 = !DILocation(line: 4263, column: 7, scope: !8932)
!8934 = !DILocation(line: 4263, column: 7, scope: !8921)
!8935 = !DILocation(line: 4265, column: 15, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 4264, column: 5)
!8937 = !DILocation(line: 4265, column: 27, scope: !8936)
!8938 = !DILocation(line: 4265, column: 48, scope: !8936)
!8939 = !DILocation(line: 4265, column: 7, scope: !8936)
!8940 = !DILocation(line: 4267, column: 23, scope: !8936)
!8941 = !DILocation(line: 4267, column: 39, scope: !8936)
!8942 = !DILocation(line: 4267, column: 51, scope: !8936)
!8943 = !DILocation(line: 4267, column: 9, scope: !8936)
!8944 = !DILocation(line: 4269, column: 15, scope: !8936)
!8945 = !DILocation(line: 4269, column: 36, scope: !8936)
!8946 = !DILocation(line: 4269, column: 48, scope: !8936)
!8947 = !DILocation(line: 4269, column: 7, scope: !8936)
!8948 = !DILocation(line: 4270, column: 5, scope: !8936)
!8949 = !DILocation(line: 4271, column: 12, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 4271, column: 12)
!8951 = !DILocation(line: 4271, column: 43, scope: !8950)
!8952 = !DILocation(line: 4272, column: 12, scope: !8950)
!8953 = !DILocation(line: 4272, column: 46, scope: !8950)
!8954 = !DILocation(line: 4271, column: 12, scope: !8932)
!8955 = !DILocation(line: 0, scope: !8932)
!8956 = !DILocation(line: 4275, column: 3, scope: !8921)
!8957 = distinct !DISubprogram(name: "process_pipelined_exprs", scope: !3, file: !3, line: 3427, type: !8958, scopeLine: 3428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8960)
!8958 = !DISubroutineType(types: !8959)
!8959 = !{null, !6277}
!8960 = !{!8961, !8962, !8963}
!8961 = !DILocalVariable(name: "av_ptr", arg: 1, scope: !8957, file: !3, line: 3427, type: !6277)
!8962 = !DILocalVariable(name: "expr", scope: !8957, file: !3, line: 3429, type: !1834)
!8963 = !DILocalVariable(name: "si", scope: !8957, file: !3, line: 3430, type: !2188)
!8964 = !DILocation(line: 0, scope: !8957)
!8965 = !DILocation(line: 3429, column: 3, scope: !8957)
!8966 = !DILocation(line: 3430, column: 3, scope: !8957)
!8967 = !DILocation(line: 3434, column: 3, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8957, file: !3, line: 3434, column: 3)
!8969 = !DILocation(line: 0, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 3434, column: 3)
!8971 = !DILocation(line: 3434, column: 3, scope: !8970)
!8972 = !DILocation(line: 3436, column: 11, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 3436, column: 11)
!8974 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 3435, column: 5)
!8975 = !DILocation(line: 3437, column: 7, scope: !8973)
!8976 = !DILocation(line: 3437, column: 4, scope: !8973)
!8977 = !DILocation(line: 3436, column: 11, scope: !8974)
!8978 = !DILocation(line: 3438, column: 2, scope: !8973)
!8979 = distinct !{!8979, !8967, !8980}
!8980 = !DILocation(line: 3439, column: 5, scope: !8968)
!8981 = !DILocation(line: 3440, column: 1, scope: !8957)
!8982 = distinct !DISubprogram(name: "process_spec_exprs", scope: !3, file: !3, line: 3444, type: !8958, scopeLine: 3445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8983)
!8983 = !{!8984, !8985, !8986, !8987, !8988, !8989, !8993}
!8984 = !DILocalVariable(name: "av_ptr", arg: 1, scope: !8982, file: !3, line: 3444, type: !6277)
!8985 = !DILocalVariable(name: "try_data_p", scope: !8982, file: !3, line: 3446, type: !594)
!8986 = !DILocalVariable(name: "try_control_p", scope: !8982, file: !3, line: 3447, type: !594)
!8987 = !DILocalVariable(name: "expr", scope: !8982, file: !3, line: 3448, type: !1834)
!8988 = !DILocalVariable(name: "si", scope: !8982, file: !3, line: 3449, type: !2188)
!8989 = !DILocalVariable(name: "ds", scope: !8990, file: !3, line: 3458, type: !1868)
!8990 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 3457, column: 5)
!8991 = distinct !DILexicalBlock(scope: !8992, file: !3, line: 3456, column: 3)
!8992 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 3456, column: 3)
!8993 = !DILocalVariable(name: "ds", scope: !8994, file: !3, line: 3485, type: !1868)
!8994 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 3484, column: 5)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 3483, column: 3)
!8996 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 3483, column: 3)
!8997 = !DILocation(line: 0, scope: !8982)
!8998 = !DILocation(line: 3448, column: 3, scope: !8982)
!8999 = !DILocation(line: 3449, column: 3, scope: !8982)
!9000 = !DILocation(line: 3451, column: 7, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 3451, column: 7)
!9002 = !DILocation(line: 3451, column: 17, scope: !9001)
!9003 = !DILocation(line: 3451, column: 7, scope: !8982)
!9004 = !DILocation(line: 3456, column: 3, scope: !8992)
!9005 = !DILocation(line: 0, scope: !8991)
!9006 = !DILocation(line: 3447, column: 8, scope: !8982)
!9007 = !DILocation(line: 3446, column: 8, scope: !8982)
!9008 = !DILocation(line: 3456, column: 3, scope: !8991)
!9009 = !DILocation(line: 3460, column: 12, scope: !8990)
!9010 = !DILocation(line: 0, scope: !8990)
!9011 = !DILocation(line: 3463, column: 15, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 3463, column: 11)
!9013 = !DILocation(line: 3464, column: 11, scope: !9012)
!9014 = !DILocation(line: 3474, column: 12, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 3474, column: 11)
!9016 = !DILocation(line: 3464, column: 15, scope: !9012)
!9017 = !DILocation(line: 3464, column: 30, scope: !9012)
!9018 = !DILocation(line: 3464, column: 41, scope: !9012)
!9019 = !DILocation(line: 3464, column: 28, scope: !9012)
!9020 = !DILocation(line: 3465, column: 15, scope: !9012)
!9021 = !DILocation(line: 3465, column: 18, scope: !9012)
!9022 = !DILocation(line: 3465, column: 54, scope: !9012)
!9023 = !DILocation(line: 3465, column: 41, scope: !9012)
!9024 = !DILocation(line: 3466, column: 8, scope: !9012)
!9025 = !DILocation(line: 3470, column: 11, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 3469, column: 9)
!9027 = !DILocation(line: 3471, column: 11, scope: !9026)
!9028 = !DILocation(line: 3478, column: 12, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 3478, column: 11)
!9030 = !DILocation(line: 3474, column: 23, scope: !9015)
!9031 = !DILocation(line: 3474, column: 29, scope: !9015)
!9032 = !DILocation(line: 3475, column: 19, scope: !9015)
!9033 = !DILocation(line: 3475, column: 11, scope: !9015)
!9034 = !DILocation(line: 3478, column: 29, scope: !9029)
!9035 = !DILocation(line: 3479, column: 19, scope: !9029)
!9036 = !DILocation(line: 3479, column: 11, scope: !9029)
!9037 = distinct !{!9037, !9004, !9038}
!9038 = !DILocation(line: 3481, column: 5, scope: !8992)
!9039 = !DILocation(line: 3483, column: 3, scope: !8996)
!9040 = !DILocation(line: 0, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 3491, column: 15)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 3490, column: 9)
!9043 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 3489, column: 11)
!9044 = !DILocation(line: 0, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 3496, column: 15)
!9046 = !DILocation(line: 3483, column: 3, scope: !8995)
!9047 = !DILocation(line: 3489, column: 11, scope: !8994)
!9048 = !DILocation(line: 3496, column: 36, scope: !9045)
!9049 = distinct !{!9049, !9039, !9050}
!9050 = !DILocation(line: 3501, column: 5, scope: !8996)
!9051 = !DILocation(line: 3502, column: 1, scope: !8982)
!9052 = !DILocation(line: 3487, column: 12, scope: !8994)
!9053 = !DILocation(line: 0, scope: !8994)
!9054 = !DILocation(line: 3489, column: 14, scope: !9043)
!9055 = !DILocation(line: 3496, column: 19, scope: !9045)
!9056 = !DILocation(line: 3499, column: 13, scope: !9045)
!9057 = !DILocation(line: 3491, column: 19, scope: !9041)
!9058 = !DILocation(line: 3491, column: 33, scope: !9041)
!9059 = !DILocation(line: 3494, column: 13, scope: !9041)
!9060 = distinct !DISubprogram(name: "process_use_exprs", scope: !3, file: !3, line: 3509, type: !9061, scopeLine: 3510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9063)
!9061 = !DISubroutineType(types: !9062)
!9062 = !{!1834, !6277}
!9063 = !{!9064, !9065, !9066, !9067, !9068}
!9064 = !DILocalVariable(name: "av_ptr", arg: 1, scope: !9060, file: !3, line: 3509, type: !6277)
!9065 = !DILocalVariable(name: "expr", scope: !9060, file: !3, line: 3511, type: !1834)
!9066 = !DILocalVariable(name: "si", scope: !9060, file: !3, line: 3512, type: !2188)
!9067 = !DILocalVariable(name: "uses_present_p", scope: !9060, file: !3, line: 3513, type: !594)
!9068 = !DILocalVariable(name: "try_uses_p", scope: !9060, file: !3, line: 3514, type: !594)
!9069 = !DILocation(line: 0, scope: !9060)
!9070 = !DILocation(line: 3511, column: 3, scope: !9060)
!9071 = !DILocation(line: 3512, column: 3, scope: !9060)
!9072 = !DILocation(line: 3516, column: 3, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 3516, column: 3)
!9074 = !DILocation(line: 0, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 3516, column: 3)
!9076 = !DILocation(line: 3514, column: 8, scope: !9060)
!9077 = !DILocation(line: 3513, column: 8, scope: !9060)
!9078 = !DILocation(line: 3516, column: 3, scope: !9075)
!9079 = !DILocation(line: 3519, column: 27, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !3, line: 3519, column: 11)
!9081 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 3517, column: 5)
!9082 = !DILocation(line: 3519, column: 11, scope: !9080)
!9083 = !DILocation(line: 3519, column: 49, scope: !9080)
!9084 = !DILocation(line: 3519, column: 11, scope: !9081)
!9085 = !DILocation(line: 3523, column: 15, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 3523, column: 15)
!9087 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 3520, column: 9)
!9088 = !DILocation(line: 3523, column: 39, scope: !9086)
!9089 = !DILocation(line: 3523, column: 15, scope: !9087)
!9090 = !DILocation(line: 3525, column: 19, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 3525, column: 19)
!9092 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 3524, column: 13)
!9093 = !DILocation(line: 3525, column: 48, scope: !9091)
!9094 = !DILocation(line: 3525, column: 19, scope: !9092)
!9095 = !DILocation(line: 3526, column: 17, scope: !9091)
!9096 = !DILocation(line: 3528, column: 15, scope: !9092)
!9097 = !DILocation(line: 3529, column: 13, scope: !9092)
!9098 = !DILocation(line: 3532, column: 15, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 3531, column: 13)
!9100 = distinct !{!9100, !9072, !9101}
!9101 = !DILocation(line: 3539, column: 5, scope: !9073)
!9102 = !DILocation(line: 3541, column: 7, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 3541, column: 7)
!9104 = !DILocation(line: 3541, column: 7, scope: !9060)
!9105 = !DILocation(line: 3545, column: 12, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !3, line: 3545, column: 11)
!9107 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 3542, column: 5)
!9108 = !DILocation(line: 0, scope: !9106)
!9109 = !DILocation(line: 3545, column: 11, scope: !9107)
!9110 = !DILocation(line: 3553, column: 11, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 3553, column: 11)
!9112 = distinct !DILexicalBlock(scope: !9106, file: !3, line: 3552, column: 9)
!9113 = !DILocation(line: 3547, column: 11, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 3547, column: 11)
!9115 = distinct !DILexicalBlock(scope: !9106, file: !3, line: 3546, column: 9)
!9116 = !DILocation(line: 3547, column: 11, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 3547, column: 11)
!9118 = !DILocation(line: 3548, column: 17, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 3548, column: 17)
!9120 = !DILocation(line: 3548, column: 50, scope: !9119)
!9121 = !DILocation(line: 3548, column: 17, scope: !9117)
!9122 = !DILocation(line: 3549, column: 15, scope: !9119)
!9123 = distinct !{!9123, !9113, !9124}
!9124 = !DILocation(line: 3549, column: 38, scope: !9114)
!9125 = !DILocation(line: 3553, column: 11, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 3553, column: 11)
!9127 = !DILocation(line: 3555, column: 15, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 3554, column: 13)
!9129 = !DILocation(line: 3557, column: 19, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3557, column: 19)
!9131 = !DILocation(line: 3557, column: 48, scope: !9130)
!9132 = !DILocation(line: 3557, column: 19, scope: !9128)
!9133 = !DILocation(line: 3558, column: 17, scope: !9130)
!9134 = !DILocation(line: 3560, column: 15, scope: !9128)
!9135 = distinct !{!9135, !9110, !9136}
!9136 = !DILocation(line: 3561, column: 13, scope: !9111)
!9137 = !DILocation(line: 3566, column: 1, scope: !9060)
!9138 = !DILocation(line: 0, scope: !2176)
!9139 = !DILocation(line: 3692, column: 3, scope: !2176)
!9140 = !DILocation(line: 3693, column: 3, scope: !2176)
!9141 = !DILocation(line: 3697, column: 15, scope: !2176)
!9142 = !DILocation(line: 3701, column: 10, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 3701, column: 7)
!9144 = !DILocation(line: 3701, column: 7, scope: !2176)
!9145 = !DILocation(line: 3705, column: 7, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 3705, column: 7)
!9147 = !DILocation(line: 3705, column: 39, scope: !9146)
!9148 = !DILocation(line: 3705, column: 7, scope: !2176)
!9149 = !DILocation(line: 3706, column: 5, scope: !9146)
!9150 = !DILocation(line: 3710, column: 3, scope: !2176)
!9151 = !DILocation(line: 3711, column: 3, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 3711, column: 3)
!9153 = !DILocation(line: 0, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 3711, column: 3)
!9155 = !DILocation(line: 3711, column: 3, scope: !9154)
!9156 = !DILocation(line: 3713, column: 7, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 3712, column: 5)
!9158 = !DILocation(line: 3715, column: 7, scope: !9157)
!9159 = !DILocation(line: 3718, column: 35, scope: !9157)
!9160 = !DILocation(line: 3718, column: 7, scope: !9157)
!9161 = distinct !{!9161, !9151, !9162}
!9162 = !DILocation(line: 3719, column: 5, scope: !9152)
!9163 = !DILocation(line: 3723, column: 15, scope: !2176)
!9164 = !DILocation(line: 3723, column: 49, scope: !2176)
!9165 = !DILocation(line: 3723, column: 3, scope: !2176)
!9166 = !DILocation(line: 3732, column: 7, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 3732, column: 7)
!9168 = !DILocation(line: 3732, column: 7, scope: !2176)
!9169 = !DILocation(line: 3733, column: 41, scope: !9167)
!9170 = !DILocation(line: 3733, column: 17, scope: !9167)
!9171 = !DILocation(line: 3733, column: 5, scope: !9167)
!9172 = !DILocation(line: 3738, column: 12, scope: !2205)
!9173 = !DILocation(line: 0, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3747, column: 11)
!9175 = !DILocation(line: 0, scope: !2263)
!9176 = !DILocation(line: 0, scope: !2262)
!9177 = !DILocation(line: 0, scope: !2266)
!9178 = !DILocation(line: 3738, column: 8, scope: !2205)
!9179 = !DILocation(line: 3696, column: 7, scope: !2176)
!9180 = !DILocation(line: 3738, column: 57, scope: !2205)
!9181 = !DILocation(line: 3694, column: 7, scope: !2176)
!9182 = !DILocation(line: 0, scope: !2205)
!9183 = !DILocation(line: 3738, column: 64, scope: !2204)
!9184 = !DILocation(line: 3738, column: 3, scope: !2205)
!9185 = !DILocation(line: 3740, column: 21, scope: !2203)
!9186 = !DILocation(line: 0, scope: !2203)
!9187 = !DILocation(line: 3741, column: 21, scope: !2203)
!9188 = !DILocation(line: 3743, column: 7, scope: !2203)
!9189 = !DILocation(line: 3743, column: 12, scope: !2203)
!9190 = !DILocation(line: 3747, column: 11, scope: !9174)
!9191 = !DILocation(line: 3747, column: 36, scope: !9174)
!9192 = !DILocation(line: 3747, column: 44, scope: !9174)
!9193 = !DILocation(line: 3747, column: 11, scope: !2203)
!9194 = !DILocation(line: 3749, column: 11, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9174, file: !3, line: 3748, column: 9)
!9196 = !DILocation(line: 3750, column: 11, scope: !9195)
!9197 = !DILocation(line: 3755, column: 11, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3755, column: 11)
!9199 = !DILocation(line: 3755, column: 11, scope: !2203)
!9200 = !DILocation(line: 3760, column: 26, scope: !2203)
!9201 = !DILocation(line: 3764, column: 33, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3764, column: 11)
!9203 = !DILocation(line: 3764, column: 11, scope: !9202)
!9204 = !DILocation(line: 3764, column: 11, scope: !2203)
!9205 = !DILocation(line: 3771, column: 33, scope: !2217)
!9206 = !DILocation(line: 3771, column: 11, scope: !2217)
!9207 = !DILocation(line: 3771, column: 11, scope: !2203)
!9208 = !DILocation(line: 3773, column: 11, scope: !2216)
!9209 = !DILocation(line: 3774, column: 15, scope: !2215)
!9210 = !DILocation(line: 3774, column: 29, scope: !2215)
!9211 = !DILocation(line: 3774, column: 15, scope: !2216)
!9212 = !DILocation(line: 3775, column: 13, scope: !2213)
!9213 = !DILocation(line: 3775, column: 13, scope: !2214)
!9214 = !DILocation(line: 3775, column: 13, scope: !2212)
!9215 = !DILocation(line: 0, scope: !2212)
!9216 = !DILocation(line: 3780, column: 28, scope: !2226)
!9217 = !DILocation(line: 3780, column: 11, scope: !2203)
!9218 = !DILocation(line: 3783, column: 20, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !2226, file: !3, line: 3781, column: 2)
!9220 = !DILocation(line: 3783, column: 18, scope: !9219)
!9221 = !DILocation(line: 3784, column: 9, scope: !9219)
!9222 = !DILocation(line: 3787, column: 34, scope: !2225)
!9223 = !DILocation(line: 3788, column: 17, scope: !2225)
!9224 = !DILocation(line: 3788, column: 21, scope: !2225)
!9225 = !DILocation(line: 3790, column: 16, scope: !2225)
!9226 = !DILocation(line: 3790, column: 25, scope: !2225)
!9227 = !DILocation(line: 3790, column: 61, scope: !2225)
!9228 = !DILocation(line: 3790, column: 68, scope: !2225)
!9229 = !DILocation(line: 3790, column: 65, scope: !2225)
!9230 = !DILocation(line: 3792, column: 16, scope: !2225)
!9231 = !DILocation(line: 3792, column: 20, scope: !2225)
!9232 = !DILocation(line: 3792, column: 45, scope: !2225)
!9233 = !DILocation(line: 3793, column: 16, scope: !2225)
!9234 = !DILocation(line: 3793, column: 21, scope: !2225)
!9235 = !DILocation(line: 3787, column: 16, scope: !2226)
!9236 = !DILocation(line: 3795, column: 11, scope: !2224)
!9237 = !DILocation(line: 3796, column: 15, scope: !2223)
!9238 = !DILocation(line: 3796, column: 29, scope: !2223)
!9239 = !DILocation(line: 3796, column: 15, scope: !2224)
!9240 = !DILocation(line: 3797, column: 13, scope: !2221)
!9241 = !DILocation(line: 3797, column: 13, scope: !2222)
!9242 = !DILocation(line: 3797, column: 13, scope: !2220)
!9243 = !DILocation(line: 0, scope: !2220)
!9244 = !DILocation(line: 3806, column: 11, scope: !2230)
!9245 = !DILocation(line: 3806, column: 24, scope: !2230)
!9246 = !DILocation(line: 3806, column: 27, scope: !2230)
!9247 = !DILocation(line: 3806, column: 56, scope: !2230)
!9248 = !DILocation(line: 3807, column: 4, scope: !2230)
!9249 = !DILocation(line: 3807, column: 9, scope: !2230)
!9250 = !DILocation(line: 3807, column: 23, scope: !2230)
!9251 = !DILocation(line: 3807, column: 26, scope: !2230)
!9252 = !DILocation(line: 3807, column: 51, scope: !2230)
!9253 = !DILocation(line: 3806, column: 11, scope: !2203)
!9254 = !DILocation(line: 3811, column: 51, scope: !2229)
!9255 = !DILocation(line: 3811, column: 35, scope: !2229)
!9256 = !DILocation(line: 0, scope: !2229)
!9257 = !DILocation(line: 3813, column: 14, scope: !2237)
!9258 = !DILocation(line: 3813, column: 33, scope: !2237)
!9259 = !DILocation(line: 3813, column: 40, scope: !2237)
!9260 = !DILocation(line: 3813, column: 8, scope: !2229)
!9261 = !DILocation(line: 3815, column: 8, scope: !2236)
!9262 = !DILocation(line: 3816, column: 12, scope: !2235)
!9263 = !DILocation(line: 3816, column: 26, scope: !2235)
!9264 = !DILocation(line: 3816, column: 12, scope: !2236)
!9265 = !DILocation(line: 3817, column: 3, scope: !2233)
!9266 = !DILocation(line: 3817, column: 3, scope: !2234)
!9267 = !DILocation(line: 3817, column: 3, scope: !2232)
!9268 = !DILocation(line: 0, scope: !2232)
!9269 = !DILocation(line: 3822, column: 42, scope: !2245)
!9270 = !DILocation(line: 3822, column: 40, scope: !2245)
!9271 = !DILocation(line: 3823, column: 37, scope: !2245)
!9272 = !DILocation(line: 3823, column: 35, scope: !2245)
!9273 = !DILocation(line: 3823, column: 48, scope: !2245)
!9274 = !DILocation(line: 3823, column: 8, scope: !2245)
!9275 = !DILocation(line: 3824, column: 11, scope: !2245)
!9276 = !DILocation(line: 3824, column: 33, scope: !2245)
!9277 = !DILocation(line: 3824, column: 8, scope: !2245)
!9278 = !DILocation(line: 3826, column: 9, scope: !2244)
!9279 = !DILocation(line: 3827, column: 13, scope: !2243)
!9280 = !DILocation(line: 3827, column: 27, scope: !2243)
!9281 = !DILocation(line: 3827, column: 13, scope: !2244)
!9282 = !DILocation(line: 3828, column: 4, scope: !2241)
!9283 = !DILocation(line: 3828, column: 4, scope: !2242)
!9284 = !DILocation(line: 3828, column: 4, scope: !2240)
!9285 = !DILocation(line: 0, scope: !2240)
!9286 = !DILocation(line: 3836, column: 11, scope: !2253)
!9287 = !DILocation(line: 3837, column: 4, scope: !2253)
!9288 = !DILocation(line: 3837, column: 7, scope: !2253)
!9289 = !DILocation(line: 3837, column: 30, scope: !2253)
!9290 = !DILocation(line: 3837, column: 28, scope: !2253)
!9291 = !DILocation(line: 3836, column: 11, scope: !2203)
!9292 = !DILocation(line: 3839, column: 18, scope: !2252)
!9293 = !DILocation(line: 3840, column: 43, scope: !2252)
!9294 = !DILocation(line: 3840, column: 28, scope: !2252)
!9295 = !DILocation(line: 3841, column: 11, scope: !2252)
!9296 = !DILocation(line: 3842, column: 8, scope: !2251)
!9297 = !DILocation(line: 3842, column: 22, scope: !2251)
!9298 = !DILocation(line: 3842, column: 8, scope: !2252)
!9299 = !DILocation(line: 3843, column: 6, scope: !2249)
!9300 = !DILocation(line: 3843, column: 6, scope: !2250)
!9301 = !DILocation(line: 3843, column: 6, scope: !2248)
!9302 = !DILocation(line: 0, scope: !2248)
!9303 = !DILocation(line: 3849, column: 11, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3849, column: 11)
!9305 = !DILocation(line: 3849, column: 40, scope: !9304)
!9306 = !DILocation(line: 3849, column: 11, scope: !2203)
!9307 = !DILocation(line: 3850, column: 16, scope: !9304)
!9308 = !DILocation(line: 3850, column: 14, scope: !9304)
!9309 = !DILocation(line: 3850, column: 2, scope: !9304)
!9310 = !DILocation(line: 3854, column: 11, scope: !2263)
!9311 = !DILocation(line: 3854, column: 29, scope: !2263)
!9312 = !DILocation(line: 3854, column: 27, scope: !2263)
!9313 = !DILocation(line: 3854, column: 11, scope: !2203)
!9314 = !DILocation(line: 3856, column: 26, scope: !2262)
!9315 = !DILocation(line: 3857, column: 7, scope: !2262)
!9316 = !DILocation(line: 3857, column: 5, scope: !2262)
!9317 = !DILocation(line: 3858, column: 8, scope: !2262)
!9318 = !DILocation(line: 3859, column: 30, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !2262, file: !3, line: 3858, column: 8)
!9320 = !DILocation(line: 3859, column: 28, scope: !9319)
!9321 = !DILocation(line: 3859, column: 6, scope: !9319)
!9322 = !DILocation(line: 3862, column: 20, scope: !2261)
!9323 = !DILocation(line: 3862, column: 8, scope: !2262)
!9324 = !DILocation(line: 3864, column: 15, scope: !2260)
!9325 = !DILocation(line: 3865, column: 41, scope: !2260)
!9326 = !DILocation(line: 3865, column: 26, scope: !2260)
!9327 = !DILocation(line: 3868, column: 8, scope: !2260)
!9328 = !DILocation(line: 3870, column: 12, scope: !2259)
!9329 = !DILocation(line: 3870, column: 26, scope: !2259)
!9330 = !DILocation(line: 3870, column: 12, scope: !2260)
!9331 = !DILocation(line: 3871, column: 3, scope: !2257)
!9332 = !DILocation(line: 3871, column: 3, scope: !2258)
!9333 = !DILocation(line: 3871, column: 3, scope: !2256)
!9334 = !DILocation(line: 0, scope: !2256)
!9335 = !DILocation(line: 3880, column: 21, scope: !2203)
!9336 = !DILocation(line: 3881, column: 18, scope: !2203)
!9337 = !DILocation(line: 3881, column: 41, scope: !2203)
!9338 = !DILocation(line: 3881, column: 39, scope: !2203)
!9339 = !DILocation(line: 3881, column: 66, scope: !2203)
!9340 = !DILocation(line: 3883, column: 11, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3883, column: 11)
!9342 = !DILocation(line: 3883, column: 40, scope: !9341)
!9343 = !DILocation(line: 3883, column: 11, scope: !2203)
!9344 = !DILocation(line: 3884, column: 26, scope: !9341)
!9345 = !DILocation(line: 3884, column: 24, scope: !9341)
!9346 = !DILocation(line: 3884, column: 2, scope: !9341)
!9347 = !DILocation(line: 3887, column: 23, scope: !2269)
!9348 = !DILocation(line: 3887, column: 11, scope: !2203)
!9349 = !DILocation(line: 3889, column: 15, scope: !2267)
!9350 = !DILocation(line: 3889, column: 34, scope: !2267)
!9351 = !DILocation(line: 3889, column: 31, scope: !2267)
!9352 = !DILocation(line: 3889, column: 15, scope: !2268)
!9353 = !DILocation(line: 3898, column: 11, scope: !2268)
!9354 = !DILocation(line: 3891, column: 46, scope: !2266)
!9355 = !DILocation(line: 3891, column: 50, scope: !2266)
!9356 = !DILocation(line: 3894, column: 38, scope: !2266)
!9357 = !DILocation(line: 3895, column: 38, scope: !2266)
!9358 = !DILocation(line: 3895, column: 48, scope: !2266)
!9359 = !DILocation(line: 3894, column: 27, scope: !2266)
!9360 = !DILocation(line: 3894, column: 17, scope: !2266)
!9361 = !DILocation(line: 3897, column: 13, scope: !2266)
!9362 = !DILocation(line: 3898, column: 37, scope: !2268)
!9363 = !DILocation(line: 3899, column: 15, scope: !2268)
!9364 = !DILocation(line: 3899, column: 35, scope: !2268)
!9365 = !DILocation(line: 3899, column: 13, scope: !2268)
!9366 = !DILocation(line: 3901, column: 18, scope: !2268)
!9367 = !DILocation(line: 3902, column: 44, scope: !2268)
!9368 = !DILocation(line: 3902, column: 29, scope: !2268)
!9369 = !DILocation(line: 3906, column: 11, scope: !2268)
!9370 = !DILocation(line: 3908, column: 15, scope: !2274)
!9371 = !DILocation(line: 3908, column: 29, scope: !2274)
!9372 = !DILocation(line: 3908, column: 15, scope: !2268)
!9373 = !DILocation(line: 3909, column: 13, scope: !2272)
!9374 = !DILocation(line: 3909, column: 13, scope: !2273)
!9375 = !DILocation(line: 3909, column: 13, scope: !2271)
!9376 = !DILocation(line: 0, scope: !2271)
!9377 = !DILocation(line: 3915, column: 11, scope: !2280)
!9378 = !DILocation(line: 3915, column: 25, scope: !2280)
!9379 = !DILocation(line: 3915, column: 11, scope: !2203)
!9380 = !DILocation(line: 3916, column: 9, scope: !2278)
!9381 = !DILocation(line: 3916, column: 9, scope: !2279)
!9382 = !DILocation(line: 3916, column: 9, scope: !2277)
!9383 = !DILocation(line: 0, scope: !2277)
!9384 = !DILocation(line: 3918, column: 5, scope: !2204)
!9385 = !DILocation(line: 3738, column: 3, scope: !2204)
!9386 = distinct !{!9386, !9184, !9387}
!9387 = !DILocation(line: 3918, column: 5, scope: !2205)
!9388 = !DILocation(line: 3921, column: 7, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 3921, column: 7)
!9390 = !DILocation(line: 3921, column: 7, scope: !2176)
!9391 = !DILocation(line: 3923, column: 7, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 3922, column: 5)
!9393 = !DILocation(line: 3924, column: 32, scope: !9392)
!9394 = !DILocation(line: 3925, column: 5, scope: !9392)
!9395 = !DILocation(line: 3931, column: 7, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 3931, column: 7)
!9397 = !DILocation(line: 3931, column: 7, scope: !2176)
!9398 = !DILocation(line: 3928, column: 7, scope: !2176)
!9399 = !DILocation(line: 3935, column: 20, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 3932, column: 5)
!9401 = !DILocation(line: 3936, column: 7, scope: !9400)
!9402 = !DILocation(line: 3939, column: 5, scope: !9396)
!9403 = !DILocation(line: 3943, column: 15, scope: !2176)
!9404 = !DILocation(line: 3943, column: 49, scope: !2176)
!9405 = !DILocation(line: 3943, column: 3, scope: !2176)
!9406 = !DILocation(line: 3950, column: 7, scope: !2287)
!9407 = !DILocation(line: 3950, column: 21, scope: !2287)
!9408 = !DILocation(line: 3950, column: 7, scope: !2176)
!9409 = !DILocation(line: 3952, column: 7, scope: !2284)
!9410 = !DILocation(line: 3952, column: 7, scope: !2285)
!9411 = !DILocation(line: 3952, column: 7, scope: !2283)
!9412 = !DILocation(line: 0, scope: !2283)
!9413 = !DILocation(line: 3954, column: 7, scope: !2291)
!9414 = !DILocation(line: 3954, column: 7, scope: !2292)
!9415 = !DILocation(line: 3954, column: 7, scope: !2290)
!9416 = !DILocation(line: 0, scope: !2290)
!9417 = !DILocation(line: 3955, column: 12, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 3955, column: 7)
!9419 = !DILocation(line: 0, scope: !9418)
!9420 = !DILocation(line: 3955, column: 19, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9418, file: !3, line: 3955, column: 7)
!9422 = !DILocation(line: 3955, column: 7, scope: !9418)
!9423 = !DILocation(line: 3956, column: 20, scope: !9421)
!9424 = !DILocation(line: 3956, column: 9, scope: !9421)
!9425 = !DILocation(line: 3955, column: 63, scope: !9421)
!9426 = !DILocation(line: 3955, column: 7, scope: !9421)
!9427 = distinct !{!9427, !9422, !9428}
!9428 = !DILocation(line: 3956, column: 24, scope: !9418)
!9429 = !DILocation(line: 3957, column: 7, scope: !2296)
!9430 = !DILocation(line: 3957, column: 7, scope: !2297)
!9431 = !DILocation(line: 3957, column: 7, scope: !2295)
!9432 = !DILocation(line: 0, scope: !2295)
!9433 = !DILocation(line: 3960, column: 16, scope: !2176)
!9434 = !DILocation(line: 3961, column: 3, scope: !2176)
!9435 = !DILocation(line: 3962, column: 1, scope: !2176)
!9436 = distinct !DISubprogram(name: "convert_vec_av_set_to_ready", scope: !3, file: !3, line: 3967, type: !3458, scopeLine: 3968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9437)
!9437 = !{!9438, !9439, !9440, !9444}
!9438 = !DILocalVariable(name: "n", scope: !9436, file: !3, line: 3969, type: !595)
!9439 = !DILocalVariable(name: "expr", scope: !9436, file: !3, line: 3970, type: !1834)
!9440 = !DILocalVariable(name: "vi", scope: !9441, file: !3, line: 3986, type: !1840)
!9441 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 3985, column: 5)
!9442 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 3984, column: 3)
!9443 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 3984, column: 3)
!9444 = !DILocalVariable(name: "insn", scope: !9441, file: !3, line: 3987, type: !1911)
!9445 = !DILocation(line: 3970, column: 3, scope: !9436)
!9446 = !DILocation(line: 3973, column: 19, scope: !9436)
!9447 = !DILocation(line: 3973, column: 17, scope: !9436)
!9448 = !DILocation(line: 3974, column: 31, scope: !9436)
!9449 = !DILocation(line: 3974, column: 15, scope: !9436)
!9450 = !DILocation(line: 3976, column: 3, scope: !9436)
!9451 = !DILocation(line: 3978, column: 13, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 3978, column: 7)
!9453 = !DILocation(line: 3978, column: 23, scope: !9452)
!9454 = !DILocation(line: 3978, column: 21, scope: !9452)
!9455 = !DILocation(line: 3978, column: 7, scope: !9436)
!9456 = !DILocation(line: 3980, column: 22, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 3979, column: 5)
!9458 = !DILocation(line: 3981, column: 7, scope: !9457)
!9459 = !DILocation(line: 3982, column: 5, scope: !9457)
!9460 = !DILocation(line: 0, scope: !9436)
!9461 = !DILocation(line: 0, scope: !9441)
!9462 = !DILocation(line: 3984, column: 8, scope: !9443)
!9463 = !DILocation(line: 0, scope: !9443)
!9464 = !DILocation(line: 3984, column: 15, scope: !9442)
!9465 = !DILocation(line: 3984, column: 3, scope: !9443)
!9466 = !DILocation(line: 3986, column: 20, scope: !9441)
!9467 = !DILocation(line: 3987, column: 21, scope: !9441)
!9468 = !DILocation(line: 3989, column: 7, scope: !9441)
!9469 = !DILocation(line: 3989, column: 20, scope: !9441)
!9470 = !DILocation(line: 3990, column: 13, scope: !9441)
!9471 = !DILocation(line: 3990, column: 7, scope: !9441)
!9472 = !DILocation(line: 3990, column: 20, scope: !9441)
!9473 = !DILocation(line: 3984, column: 59, scope: !9442)
!9474 = !DILocation(line: 3984, column: 3, scope: !9442)
!9475 = distinct !{!9475, !9465, !9476}
!9476 = !DILocation(line: 3991, column: 5, scope: !9443)
!9477 = !DILocation(line: 3992, column: 1, scope: !9436)
!9478 = distinct !DISubprogram(name: "recog_memoized", scope: !9479, file: !9479, line: 150, type: !9480, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9482)
!9479 = !DIFile(filename: "./recog.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!9480 = !DISubroutineType(types: !9481)
!9481 = !{!595, !607}
!9482 = !{!9483}
!9483 = !DILocalVariable(name: "insn", arg: 1, scope: !9478, file: !9479, line: 150, type: !607)
!9484 = !DILocation(line: 0, scope: !9478)
!9485 = !DILocation(line: 152, column: 7, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9478, file: !9479, line: 152, column: 7)
!9487 = !DILocation(line: 152, column: 24, scope: !9486)
!9488 = !DILocation(line: 152, column: 7, scope: !9478)
!9489 = !DILocation(line: 153, column: 31, scope: !9486)
!9490 = !DILocation(line: 153, column: 24, scope: !9486)
!9491 = !DILocation(line: 153, column: 22, scope: !9486)
!9492 = !DILocation(line: 153, column: 5, scope: !9486)
!9493 = !DILocation(line: 154, column: 10, scope: !9478)
!9494 = !DILocation(line: 154, column: 3, scope: !9478)
!9495 = distinct !DISubprogram(name: "VEC_expr_t_base_length", scope: !3, file: !3, line: 506, type: !9496, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9500)
!9496 = !DISubroutineType(types: !9497)
!9497 = !{!7, !9498}
!9498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9499, size: 64)
!9499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2049)
!9500 = !{!9501}
!9501 = !DILocalVariable(name: "vec_", arg: 1, scope: !9495, file: !3, line: 506, type: !9498)
!9502 = !DILocation(line: 0, scope: !9495)
!9503 = !DILocation(line: 506, column: 1, scope: !9495)
!9504 = distinct !DISubprogram(name: "VEC_expr_t_base_block_remove", scope: !3, file: !3, line: 506, type: !9505, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9508)
!9505 = !DISubroutineType(types: !9506)
!9506 = !{null, !9507, !7, !7}
!9507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!9508 = !{!9509, !9510, !9511, !9512}
!9509 = !DILocalVariable(name: "vec_", arg: 1, scope: !9504, file: !3, line: 506, type: !9507)
!9510 = !DILocalVariable(name: "ix_", arg: 2, scope: !9504, file: !3, line: 506, type: !7)
!9511 = !DILocalVariable(name: "len_", arg: 3, scope: !9504, file: !3, line: 506, type: !7)
!9512 = !DILocalVariable(name: "slot_", scope: !9504, file: !3, line: 506, type: !6393)
!9513 = !DILocation(line: 0, scope: !9504)
!9514 = !DILocation(line: 506, column: 1, scope: !9504)
!9515 = distinct !DISubprogram(name: "VEC_expr_t_heap_safe_push", scope: !3, file: !3, line: 507, type: !9516, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9519)
!9516 = !DISubroutineType(types: !9517)
!9517 = !{!6393, !9518, !1834}
!9518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!9519 = !{!9520, !9521}
!9520 = !DILocalVariable(name: "vec_", arg: 1, scope: !9515, file: !3, line: 507, type: !9518)
!9521 = !DILocalVariable(name: "obj_", arg: 2, scope: !9515, file: !3, line: 507, type: !1834)
!9522 = !DILocation(line: 0, scope: !9515)
!9523 = !DILocation(line: 507, column: 1, scope: !9515)
!9524 = distinct !DISubprogram(name: "sel_target_adjust_priority", scope: !3, file: !3, line: 3295, type: !9525, scopeLine: 3296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9527)
!9525 = !DISubroutineType(types: !9526)
!9526 = !{!595, !1834}
!9527 = !{!9528, !9529, !9530, !9531, !9536}
!9528 = !DILocalVariable(name: "expr", arg: 1, scope: !9524, file: !3, line: 3295, type: !1834)
!9529 = !DILocalVariable(name: "priority", scope: !9524, file: !3, line: 3297, type: !595)
!9530 = !DILocalVariable(name: "new_priority", scope: !9524, file: !3, line: 3298, type: !595)
!9531 = !DILocalVariable(name: "__j", scope: !9532, file: !3, line: 3311, type: !595)
!9532 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 3311, column: 5)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 3311, column: 5)
!9534 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 3311, column: 5)
!9535 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 3310, column: 7)
!9536 = !DILocalVariable(name: "__s", scope: !9532, file: !3, line: 3311, type: !597)
!9537 = !DILocation(line: 0, scope: !9524)
!9538 = !DILocation(line: 3297, column: 18, scope: !9524)
!9539 = !DILocation(line: 3300, column: 21, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 3300, column: 7)
!9541 = !DILocation(line: 3300, column: 7, scope: !9540)
!9542 = !DILocation(line: 3300, column: 7, scope: !9524)
!9543 = !DILocation(line: 3301, column: 51, scope: !9540)
!9544 = !DILocation(line: 3301, column: 20, scope: !9540)
!9545 = !DILocation(line: 3306, column: 45, scope: !9524)
!9546 = !DILocation(line: 3301, column: 5, scope: !9540)
!9547 = !DILocation(line: 0, scope: !9540)
!9548 = !DILocation(line: 3306, column: 43, scope: !9524)
!9549 = !DILocation(line: 3306, column: 3, scope: !9524)
!9550 = !DILocation(line: 3306, column: 28, scope: !9524)
!9551 = !DILocation(line: 3308, column: 3, scope: !9524)
!9552 = !DILocation(line: 3310, column: 7, scope: !9535)
!9553 = !DILocation(line: 3310, column: 21, scope: !9535)
!9554 = !DILocation(line: 3310, column: 7, scope: !9524)
!9555 = !DILocation(line: 3311, column: 5, scope: !9533)
!9556 = !DILocation(line: 3311, column: 5, scope: !9534)
!9557 = !DILocation(line: 3311, column: 5, scope: !9532)
!9558 = !DILocation(line: 0, scope: !9532)
!9559 = !DILocation(line: 3315, column: 3, scope: !9524)
!9560 = distinct !DISubprogram(name: "VEC_expr_t_base_address", scope: !3, file: !3, line: 506, type: !9561, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9563)
!9561 = !DISubroutineType(types: !9562)
!9562 = !{!6393, !9507}
!9563 = !{!9564}
!9564 = !DILocalVariable(name: "vec_", arg: 1, scope: !9560, file: !3, line: 506, type: !9507)
!9565 = !DILocation(line: 0, scope: !9560)
!9566 = !DILocation(line: 506, column: 1, scope: !9560)
!9567 = distinct !DISubprogram(name: "sel_rank_for_schedule", scope: !3, file: !3, line: 3320, type: !1069, scopeLine: 3321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9568)
!9568 = !{!9569, !9570, !9571, !9572, !9573, !9574, !9575, !9576, !9577, !9578, !9581, !9582, !9585, !9586, !9588, !9589}
!9569 = !DILocalVariable(name: "x", arg: 1, scope: !9567, file: !3, line: 3320, type: !1064)
!9570 = !DILocalVariable(name: "y", arg: 2, scope: !9567, file: !3, line: 3320, type: !1064)
!9571 = !DILocalVariable(name: "tmp", scope: !9567, file: !3, line: 3322, type: !1834)
!9572 = !DILocalVariable(name: "tmp2", scope: !9567, file: !3, line: 3323, type: !1834)
!9573 = !DILocalVariable(name: "tmp_insn", scope: !9567, file: !3, line: 3324, type: !1911)
!9574 = !DILocalVariable(name: "tmp2_insn", scope: !9567, file: !3, line: 3324, type: !1911)
!9575 = !DILocalVariable(name: "tmp_vinsn", scope: !9567, file: !3, line: 3325, type: !1840)
!9576 = !DILocalVariable(name: "tmp2_vinsn", scope: !9567, file: !3, line: 3325, type: !1840)
!9577 = !DILocalVariable(name: "val", scope: !9567, file: !3, line: 3326, type: !595)
!9578 = !DILocalVariable(name: "p2", scope: !9579, file: !3, line: 3375, type: !595)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 3374, column: 5)
!9580 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3373, column: 7)
!9581 = !DILocalVariable(name: "p1", scope: !9579, file: !3, line: 3376, type: !595)
!9582 = !DILocalVariable(name: "ds1", scope: !9583, file: !3, line: 3389, type: !1868)
!9583 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 3388, column: 5)
!9584 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3386, column: 7)
!9585 = !DILocalVariable(name: "ds2", scope: !9583, file: !3, line: 3389, type: !1868)
!9586 = !DILocalVariable(name: "dw1", scope: !9583, file: !3, line: 3390, type: !9587)
!9587 = !DIDerivedType(tag: DW_TAG_typedef, name: "dw_t", file: !403, line: 221, baseType: !595)
!9588 = !DILocalVariable(name: "dw2", scope: !9583, file: !3, line: 3390, type: !9587)
!9589 = !DILocalVariable(name: "dw", scope: !9583, file: !3, line: 3391, type: !595)
!9590 = !DILocation(line: 0, scope: !9567)
!9591 = !DILocation(line: 3322, column: 17, scope: !9567)
!9592 = !DILocation(line: 3322, column: 16, scope: !9567)
!9593 = !DILocation(line: 3323, column: 18, scope: !9567)
!9594 = !DILocation(line: 3323, column: 17, scope: !9567)
!9595 = !DILocation(line: 3328, column: 15, scope: !9567)
!9596 = !DILocation(line: 3329, column: 16, scope: !9567)
!9597 = !DILocation(line: 3330, column: 14, scope: !9567)
!9598 = !DILocation(line: 3331, column: 15, scope: !9567)
!9599 = !DILocation(line: 3334, column: 7, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3334, column: 7)
!9601 = !DILocation(line: 3334, column: 31, scope: !9600)
!9602 = !DILocation(line: 0, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 3336, column: 12)
!9604 = !DILocation(line: 3336, column: 12, scope: !9603)
!9605 = !DILocation(line: 3334, column: 35, scope: !9600)
!9606 = !DILocation(line: 3334, column: 7, scope: !9567)
!9607 = !DILocation(line: 3336, column: 12, scope: !9600)
!9608 = !DILocation(line: 3340, column: 32, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3340, column: 7)
!9610 = !DILocation(line: 3340, column: 7, scope: !9567)
!9611 = !DILocation(line: 3342, column: 11, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 3342, column: 11)
!9613 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 3341, column: 5)
!9614 = !DILocation(line: 3342, column: 38, scope: !9612)
!9615 = !DILocation(line: 3342, column: 41, scope: !9612)
!9616 = !DILocation(line: 3342, column: 11, scope: !9613)
!9617 = !DILocation(line: 3343, column: 16, scope: !9612)
!9618 = !DILocation(line: 3343, column: 9, scope: !9612)
!9619 = !DILocation(line: 3347, column: 11, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 3347, column: 11)
!9621 = !DILocation(line: 3347, column: 11, scope: !9613)
!9622 = !DILocation(line: 3349, column: 7, scope: !9613)
!9623 = !DILocation(line: 3353, column: 10, scope: !9567)
!9624 = !DILocation(line: 3354, column: 5, scope: !9567)
!9625 = !DILocation(line: 3354, column: 3, scope: !9567)
!9626 = !DILocation(line: 3355, column: 7, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3355, column: 7)
!9628 = !DILocation(line: 3355, column: 7, scope: !9567)
!9629 = !DILocation(line: 3359, column: 7, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3359, column: 7)
!9631 = !DILocation(line: 3359, column: 30, scope: !9630)
!9632 = !DILocation(line: 3359, column: 34, scope: !9630)
!9633 = !DILocation(line: 0, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 3360, column: 5)
!9635 = !DILocation(line: 3361, column: 38, scope: !9634)
!9636 = !DILocation(line: 3359, column: 37, scope: !9630)
!9637 = !DILocation(line: 3359, column: 61, scope: !9630)
!9638 = !DILocation(line: 3359, column: 7, scope: !9567)
!9639 = !DILocation(line: 3361, column: 36, scope: !9634)
!9640 = !DILocation(line: 3362, column: 11, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 3362, column: 11)
!9642 = !DILocation(line: 3362, column: 11, scope: !9634)
!9643 = !DILocation(line: 3367, column: 7, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3367, column: 7)
!9645 = !DILocation(line: 3367, column: 38, scope: !9644)
!9646 = !DILocation(line: 3367, column: 42, scope: !9644)
!9647 = !DILocation(line: 3367, column: 7, scope: !9567)
!9648 = !DILocation(line: 3369, column: 12, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 3369, column: 12)
!9650 = !DILocation(line: 3369, column: 44, scope: !9649)
!9651 = !DILocation(line: 3369, column: 48, scope: !9649)
!9652 = !DILocation(line: 3369, column: 12, scope: !9644)
!9653 = !DILocation(line: 3373, column: 7, scope: !9580)
!9654 = !DILocation(line: 3373, column: 29, scope: !9580)
!9655 = !DILocation(line: 3373, column: 34, scope: !9580)
!9656 = !DILocation(line: 3373, column: 37, scope: !9580)
!9657 = !DILocation(line: 3373, column: 60, scope: !9580)
!9658 = !DILocation(line: 3373, column: 7, scope: !9567)
!9659 = !DILocation(line: 3375, column: 16, scope: !9579)
!9660 = !DILocation(line: 3375, column: 39, scope: !9579)
!9661 = !DILocation(line: 3375, column: 37, scope: !9579)
!9662 = !DILocation(line: 0, scope: !9579)
!9663 = !DILocation(line: 3376, column: 16, scope: !9579)
!9664 = !DILocation(line: 3376, column: 38, scope: !9579)
!9665 = !DILocation(line: 3376, column: 36, scope: !9579)
!9666 = !DILocation(line: 3378, column: 16, scope: !9579)
!9667 = !DILocation(line: 3378, column: 46, scope: !9579)
!9668 = !DILocation(line: 3378, column: 41, scope: !9579)
!9669 = !DILocation(line: 3379, column: 5, scope: !9579)
!9670 = !DILocation(line: 3381, column: 11, scope: !9580)
!9671 = !DILocation(line: 3381, column: 34, scope: !9580)
!9672 = !DILocation(line: 3381, column: 32, scope: !9580)
!9673 = !DILocation(line: 3382, column: 6, scope: !9580)
!9674 = !DILocation(line: 3382, column: 4, scope: !9580)
!9675 = !DILocation(line: 3382, column: 33, scope: !9580)
!9676 = !DILocation(line: 3382, column: 31, scope: !9580)
!9677 = !DILocation(line: 0, scope: !9580)
!9678 = !DILocation(line: 3383, column: 7, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3383, column: 7)
!9680 = !DILocation(line: 3383, column: 7, scope: !9567)
!9681 = !DILocation(line: 3386, column: 7, scope: !9584)
!9682 = !DILocation(line: 3386, column: 17, scope: !9584)
!9683 = !DILocation(line: 3386, column: 25, scope: !9584)
!9684 = !DILocation(line: 3386, column: 39, scope: !9584)
!9685 = !DILocation(line: 3386, column: 44, scope: !9584)
!9686 = !DILocation(line: 3386, column: 7, scope: !9567)
!9687 = !DILocation(line: 3393, column: 13, scope: !9583)
!9688 = !DILocation(line: 0, scope: !9583)
!9689 = !DILocation(line: 3394, column: 11, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 3394, column: 11)
!9691 = !DILocation(line: 3394, column: 11, scope: !9583)
!9692 = !DILocation(line: 3395, column: 8, scope: !9690)
!9693 = !DILocation(line: 3395, column: 2, scope: !9690)
!9694 = !DILocation(line: 0, scope: !9690)
!9695 = !DILocation(line: 3399, column: 13, scope: !9583)
!9696 = !DILocation(line: 3400, column: 11, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 3400, column: 11)
!9698 = !DILocation(line: 3400, column: 11, scope: !9583)
!9699 = !DILocation(line: 3401, column: 8, scope: !9697)
!9700 = !DILocation(line: 3401, column: 2, scope: !9697)
!9701 = !DILocation(line: 0, scope: !9697)
!9702 = !DILocation(line: 3405, column: 16, scope: !9583)
!9703 = !DILocation(line: 3406, column: 34, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 3406, column: 11)
!9705 = !DILocation(line: 3411, column: 7, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3411, column: 7)
!9707 = !DILocation(line: 3411, column: 29, scope: !9706)
!9708 = !DILocation(line: 3411, column: 27, scope: !9706)
!9709 = !DILocation(line: 3412, column: 7, scope: !9706)
!9710 = !DILocation(line: 3412, column: 10, scope: !9706)
!9711 = !DILocation(line: 3412, column: 31, scope: !9706)
!9712 = !DILocation(line: 3411, column: 7, scope: !9567)
!9713 = !DILocation(line: 3415, column: 7, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3414, column: 7)
!9715 = !DILocation(line: 3421, column: 32, scope: !9567)
!9716 = !DILocation(line: 3415, column: 10, scope: !9714)
!9717 = !DILocation(line: 3415, column: 31, scope: !9714)
!9718 = !DILocation(line: 3414, column: 7, scope: !9567)
!9719 = !DILocation(line: 3421, column: 30, scope: !9567)
!9720 = !DILocation(line: 3421, column: 3, scope: !9567)
!9721 = !DILocation(line: 3422, column: 1, scope: !9567)
!9722 = distinct !DISubprogram(name: "VEC_expr_t_base_index", scope: !3, file: !3, line: 506, type: !9723, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9725)
!9723 = !DISubroutineType(types: !9724)
!9724 = !{!1834, !9498, !7}
!9725 = !{!9726, !9727}
!9726 = !DILocalVariable(name: "vec_", arg: 1, scope: !9722, file: !3, line: 506, type: !9498)
!9727 = !DILocalVariable(name: "ix_", arg: 2, scope: !9722, file: !3, line: 506, type: !7)
!9728 = !DILocation(line: 0, scope: !9722)
!9729 = !DILocation(line: 506, column: 1, scope: !9722)
!9730 = distinct !DISubprogram(name: "VEC_expr_t_base_unordered_remove", scope: !3, file: !3, line: 506, type: !9731, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9733)
!9731 = !DISubroutineType(types: !9732)
!9732 = !{!1834, !9507, !7}
!9733 = !{!9734, !9735, !9736, !9737}
!9734 = !DILocalVariable(name: "vec_", arg: 1, scope: !9730, file: !3, line: 506, type: !9507)
!9735 = !DILocalVariable(name: "ix_", arg: 2, scope: !9730, file: !3, line: 506, type: !7)
!9736 = !DILocalVariable(name: "slot_", scope: !9730, file: !3, line: 506, type: !6393)
!9737 = !DILocalVariable(name: "obj_", scope: !9730, file: !3, line: 506, type: !1834)
!9738 = !DILocation(line: 0, scope: !9730)
!9739 = !DILocation(line: 506, column: 1, scope: !9730)
!9740 = distinct !DISubprogram(name: "vinsn_vec_has_expr_p", scope: !3, file: !3, line: 3570, type: !9741, scopeLine: 3571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9743)
!9741 = !DISubroutineType(types: !9742)
!9742 = !{!594, !2161, !1834}
!9743 = !{!9744, !9745, !9746, !9747}
!9744 = !DILocalVariable(name: "vinsn_vec", arg: 1, scope: !9740, file: !3, line: 3570, type: !2161)
!9745 = !DILocalVariable(name: "expr", arg: 2, scope: !9740, file: !3, line: 3570, type: !1834)
!9746 = !DILocalVariable(name: "vinsn", scope: !9740, file: !3, line: 3572, type: !1840)
!9747 = !DILocalVariable(name: "n", scope: !9740, file: !3, line: 3573, type: !595)
!9748 = !DILocation(line: 0, scope: !9740)
!9749 = !DILocation(line: 3572, column: 3, scope: !9740)
!9750 = !DILocation(line: 3578, column: 35, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9752, file: !3, line: 3578, column: 13)
!9752 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 3577, column: 7)
!9753 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 3576, column: 9)
!9754 = distinct !DILexicalBlock(scope: !9755, file: !3, line: 3575, column: 3)
!9755 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 3575, column: 3)
!9756 = !DILocation(line: 0, scope: !9754)
!9757 = !DILocation(line: 3575, column: 8, scope: !9755)
!9758 = !DILocation(line: 0, scope: !9755)
!9759 = !DILocation(line: 3575, column: 15, scope: !9754)
!9760 = !DILocation(line: 3575, column: 3, scope: !9755)
!9761 = !DILocation(line: 3576, column: 9, scope: !9753)
!9762 = !DILocation(line: 3576, column: 9, scope: !9754)
!9763 = !DILocation(line: 3578, column: 13, scope: !9751)
!9764 = !DILocation(line: 3578, column: 13, scope: !9752)
!9765 = !DILocation(line: 3587, column: 33, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9767, file: !3, line: 3587, column: 13)
!9767 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 3582, column: 7)
!9768 = !DILocation(line: 3588, column: 33, scope: !9766)
!9769 = !DILocation(line: 3587, column: 13, scope: !9766)
!9770 = !DILocation(line: 3587, column: 13, scope: !9767)
!9771 = !DILocation(line: 3575, column: 60, scope: !9754)
!9772 = !DILocation(line: 3575, column: 3, scope: !9754)
!9773 = distinct !{!9773, !9760, !9774}
!9774 = !DILocation(line: 3590, column: 7, scope: !9755)
!9775 = !DILocation(line: 3593, column: 1, scope: !9740)
!9776 = !DILocation(line: 0, scope: !2305)
!9777 = !DILocation(line: 1693, column: 3, scope: !2305)
!9778 = !DILocation(line: 1693, column: 14, scope: !2305)
!9779 = !DILocation(line: 1696, column: 18, scope: !2305)
!9780 = !DILocation(line: 1699, column: 7, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 1699, column: 7)
!9782 = !DILocation(line: 1700, column: 7, scope: !9781)
!9783 = !DILocation(line: 1700, column: 10, scope: !9781)
!9784 = !DILocation(line: 1699, column: 7, scope: !2305)
!9785 = !DILocation(line: 1703, column: 15, scope: !2305)
!9786 = !DILocation(line: 1704, column: 3, scope: !2305)
!9787 = !DILocation(line: 1706, column: 3, scope: !2305)
!9788 = !DILocation(line: 1721, column: 7, scope: !2317)
!9789 = !DILocation(line: 1721, column: 7, scope: !2305)
!9790 = !DILocation(line: 0, scope: !2316)
!9791 = !DILocation(line: 1726, column: 7, scope: !2316)
!9792 = !DILocation(line: 1729, column: 11, scope: !2320)
!9793 = !DILocation(line: 1729, column: 11, scope: !2316)
!9794 = !DILocation(line: 1731, column: 4, scope: !2319)
!9795 = !DILocation(line: 0, scope: !2319)
!9796 = !DILocation(line: 1732, column: 4, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 1732, column: 4)
!9798 = !DILocation(line: 1736, column: 4, scope: !2319)
!9799 = !DILocation(line: 1740, column: 11, scope: !2319)
!9800 = !DILocation(line: 1739, column: 15, scope: !2319)
!9801 = !DILocation(line: 1741, column: 2, scope: !2320)
!9802 = !DILocation(line: 1741, column: 2, scope: !2319)
!9803 = !DILocation(line: 1744, column: 9, scope: !2320)
!9804 = !DILocation(line: 1743, column: 13, scope: !2320)
!9805 = !DILocation(line: 0, scope: !2320)
!9806 = !DILocation(line: 1746, column: 12, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !2316, file: !3, line: 1746, column: 11)
!9808 = !DILocation(line: 1746, column: 11, scope: !2316)
!9809 = !DILocation(line: 1748, column: 16, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 1748, column: 16)
!9811 = !DILocation(line: 1748, column: 16, scope: !9807)
!9812 = !DILocation(line: 1753, column: 35, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 1749, column: 2)
!9814 = !DILocation(line: 1753, column: 13, scope: !9813)
!9815 = !DILocation(line: 1754, column: 2, scope: !9813)
!9816 = !DILocation(line: 1758, column: 24, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 1758, column: 8)
!9818 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 1756, column: 2)
!9819 = !DILocation(line: 1758, column: 8, scope: !9817)
!9820 = !DILocation(line: 1758, column: 43, scope: !9817)
!9821 = !DILocation(line: 1758, column: 8, scope: !9818)
!9822 = !DILocation(line: 1761, column: 37, scope: !9817)
!9823 = !DILocation(line: 1761, column: 15, scope: !9817)
!9824 = !DILocation(line: 1769, column: 27, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9826, file: !3, line: 1768, column: 11)
!9826 = distinct !DILexicalBlock(scope: !2317, file: !3, line: 1765, column: 5)
!9827 = !DILocation(line: 1768, column: 11, scope: !9825)
!9828 = !DILocation(line: 0, scope: !9825)
!9829 = !DILocation(line: 1768, column: 11, scope: !9826)
!9830 = !DILocation(line: 1772, column: 4, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 1770, column: 2)
!9832 = !DILocation(line: 1777, column: 4, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 1775, column: 2)
!9834 = !DILocation(line: 0, scope: !2317)
!9835 = !DILocation(line: 1781, column: 3, scope: !2305)
!9836 = !DILocation(line: 1782, column: 3, scope: !2305)
!9837 = !DILocation(line: 1784, column: 3, scope: !2305)
!9838 = !DILocation(line: 1785, column: 1, scope: !2305)
!9839 = distinct !DISubprogram(name: "VEC_expr_t_base_iterate", scope: !3, file: !3, line: 506, type: !9840, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9842)
!9840 = !DISubroutineType(types: !9841)
!9841 = !{!595, !9498, !7, !6393}
!9842 = !{!9843, !9844, !9845}
!9843 = !DILocalVariable(name: "vec_", arg: 1, scope: !9839, file: !3, line: 506, type: !9498)
!9844 = !DILocalVariable(name: "ix_", arg: 2, scope: !9839, file: !3, line: 506, type: !7)
!9845 = !DILocalVariable(name: "ptr", arg: 3, scope: !9839, file: !3, line: 506, type: !6393)
!9846 = !DILocation(line: 0, scope: !9839)
!9847 = !DILocation(line: 506, column: 1, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9839, file: !3, line: 506, column: 1)
!9849 = !DILocation(line: 506, column: 1, scope: !9839)
!9850 = !DILocation(line: 506, column: 1, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 506, column: 1)
!9852 = !DILocation(line: 506, column: 1, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 506, column: 1)
!9854 = !DILocation(line: 0, scope: !9848)
!9855 = distinct !DISubprogram(name: "VEC_expr_t_heap_reserve", scope: !3, file: !3, line: 507, type: !9856, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9858)
!9856 = !DISubroutineType(types: !9857)
!9857 = !{!595, !9518, !595}
!9858 = !{!9859, !9860, !9861}
!9859 = !DILocalVariable(name: "vec_", arg: 1, scope: !9855, file: !3, line: 507, type: !9518)
!9860 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9855, file: !3, line: 507, type: !595)
!9861 = !DILocalVariable(name: "extend", scope: !9855, file: !3, line: 507, type: !595)
!9862 = !DILocation(line: 0, scope: !9855)
!9863 = !DILocation(line: 507, column: 1, scope: !9855)
!9864 = !DILocation(line: 507, column: 1, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 507, column: 1)
!9866 = distinct !DISubprogram(name: "VEC_expr_t_base_quick_push", scope: !3, file: !3, line: 506, type: !9867, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9869)
!9867 = !DISubroutineType(types: !9868)
!9868 = !{!6393, !9507, !1834}
!9869 = !{!9870, !9871, !9872}
!9870 = !DILocalVariable(name: "vec_", arg: 1, scope: !9866, file: !3, line: 506, type: !9507)
!9871 = !DILocalVariable(name: "obj_", arg: 2, scope: !9866, file: !3, line: 506, type: !1834)
!9872 = !DILocalVariable(name: "slot_", scope: !9866, file: !3, line: 506, type: !6393)
!9873 = !DILocation(line: 0, scope: !9866)
!9874 = !DILocation(line: 506, column: 1, scope: !9866)
!9875 = distinct !DISubprogram(name: "VEC_expr_t_base_space", scope: !3, file: !3, line: 506, type: !9876, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9878)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{!595, !9507, !595}
!9878 = !{!9879, !9880}
!9879 = !DILocalVariable(name: "vec_", arg: 1, scope: !9875, file: !3, line: 506, type: !9507)
!9880 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9875, file: !3, line: 506, type: !595)
!9881 = !DILocation(line: 0, scope: !9875)
!9882 = !DILocation(line: 506, column: 1, scope: !9875)
!9883 = distinct !DISubprogram(name: "VEC_vinsn_t_base_iterate", scope: !3, file: !3, line: 511, type: !9884, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9888)
!9884 = !DISubroutineType(types: !9885)
!9885 = !{!595, !9886, !7, !4937}
!9886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9887, size: 64)
!9887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2018)
!9888 = !{!9889, !9890, !9891}
!9889 = !DILocalVariable(name: "vec_", arg: 1, scope: !9883, file: !3, line: 511, type: !9886)
!9890 = !DILocalVariable(name: "ix_", arg: 2, scope: !9883, file: !3, line: 511, type: !7)
!9891 = !DILocalVariable(name: "ptr", arg: 3, scope: !9883, file: !3, line: 511, type: !4937)
!9892 = !DILocation(line: 0, scope: !9883)
!9893 = !DILocation(line: 511, column: 1, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 511, column: 1)
!9895 = !DILocation(line: 511, column: 1, scope: !9883)
!9896 = !DILocation(line: 511, column: 1, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 511, column: 1)
!9898 = !DILocation(line: 511, column: 1, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 511, column: 1)
!9900 = !DILocation(line: 0, scope: !9894)
!9901 = distinct !DISubprogram(name: "collect_unavailable_regs_from_bnds", scope: !3, file: !3, line: 1623, type: !9902, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9905)
!9902 = !DISubroutineType(types: !9903)
!9903 = !{null, !1834, !2179, !1852, !9904, !2031}
!9904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!9905 = !{!9906, !9907, !9908, !9909, !9910, !9911, !9915, !9916}
!9906 = !DILocalVariable(name: "expr", arg: 1, scope: !9901, file: !3, line: 1623, type: !1834)
!9907 = !DILocalVariable(name: "bnds", arg: 2, scope: !9901, file: !3, line: 1623, type: !2179)
!9908 = !DILocalVariable(name: "used_regs", arg: 3, scope: !9901, file: !3, line: 1623, type: !1852)
!9909 = !DILocalVariable(name: "reg_rename_p", arg: 4, scope: !9901, file: !3, line: 1624, type: !9904)
!9910 = !DILocalVariable(name: "original_insns", arg: 5, scope: !9901, file: !3, line: 1625, type: !2031)
!9911 = !DILocalVariable(name: "res", scope: !9912, file: !3, line: 1629, type: !594)
!9912 = distinct !DILexicalBlock(scope: !9913, file: !3, line: 1628, column: 5)
!9913 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 1627, column: 3)
!9914 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 1627, column: 3)
!9915 = !DILocalVariable(name: "orig_ops", scope: !9912, file: !3, line: 1630, type: !1945)
!9916 = !DILocalVariable(name: "bnd", scope: !9912, file: !3, line: 1631, type: !7790)
!9917 = !DILocation(line: 0, scope: !9901)
!9918 = !DILocation(line: 0, scope: !9912)
!9919 = !DILocation(line: 0, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1635, column: 11)
!9921 = !DILocation(line: 1627, column: 3, scope: !9901)
!9922 = !DILocation(line: 1627, column: 3, scope: !9914)
!9923 = !DILocation(line: 1630, column: 7, scope: !9912)
!9924 = !DILocation(line: 1630, column: 16, scope: !9912)
!9925 = !DILocation(line: 1631, column: 19, scope: !9912)
!9926 = !DILocation(line: 1635, column: 28, scope: !9920)
!9927 = !DILocation(line: 1635, column: 43, scope: !9920)
!9928 = !DILocation(line: 1635, column: 12, scope: !9920)
!9929 = !DILocation(line: 1635, column: 11, scope: !9912)
!9930 = !DILocation(line: 1640, column: 18, scope: !9912)
!9931 = !DILocation(line: 1640, column: 16, scope: !9912)
!9932 = !DILocation(line: 1643, column: 29, scope: !9912)
!9933 = !DILocation(line: 1643, column: 13, scope: !9912)
!9934 = !DILocation(line: 1648, column: 7, scope: !9912)
!9935 = !DILocation(line: 1649, column: 5, scope: !9913)
!9936 = !DILocation(line: 1627, column: 23, scope: !9913)
!9937 = !DILocation(line: 1627, column: 3, scope: !9913)
!9938 = distinct !{!9938, !9922, !9939}
!9939 = !DILocation(line: 1649, column: 5, scope: !9914)
!9940 = !DILocation(line: 1650, column: 1, scope: !9901)
!9941 = distinct !DISubprogram(name: "verify_target_availability", scope: !3, file: !3, line: 1570, type: !9942, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9944)
!9942 = !DISubroutineType(types: !9943)
!9943 = !{null, !1834, !1852, !9904}
!9944 = !{!9945, !9946, !9947, !9948, !9949, !9950, !9951, !9952, !9953, !9954}
!9945 = !DILocalVariable(name: "expr", arg: 1, scope: !9941, file: !3, line: 1570, type: !1834)
!9946 = !DILocalVariable(name: "used_regs", arg: 2, scope: !9941, file: !3, line: 1570, type: !1852)
!9947 = !DILocalVariable(name: "reg_rename_p", arg: 3, scope: !9941, file: !3, line: 1571, type: !9904)
!9948 = !DILocalVariable(name: "n", scope: !9941, file: !3, line: 1573, type: !7)
!9949 = !DILocalVariable(name: "i", scope: !9941, file: !3, line: 1573, type: !7)
!9950 = !DILocalVariable(name: "regno", scope: !9941, file: !3, line: 1573, type: !7)
!9951 = !DILocalVariable(name: "mode", scope: !9941, file: !3, line: 1574, type: !5)
!9952 = !DILocalVariable(name: "target_available", scope: !9941, file: !3, line: 1575, type: !594)
!9953 = !DILocalVariable(name: "live_available", scope: !9941, file: !3, line: 1575, type: !594)
!9954 = !DILocalVariable(name: "hard_available", scope: !9941, file: !3, line: 1575, type: !594)
!9955 = !DILocation(line: 0, scope: !9941)
!9956 = !DILocation(line: 1577, column: 8, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 1577, column: 7)
!9958 = !DILocation(line: 1577, column: 32, scope: !9957)
!9959 = !DILocation(line: 1577, column: 35, scope: !9957)
!9960 = !DILocation(line: 1577, column: 64, scope: !9957)
!9961 = !DILocation(line: 1577, column: 7, scope: !9941)
!9962 = !DILocation(line: 1580, column: 11, scope: !9941)
!9963 = !DILocation(line: 1582, column: 22, scope: !9941)
!9964 = !DILocation(line: 1582, column: 51, scope: !9941)
!9965 = !DILocation(line: 1583, column: 7, scope: !9941)
!9966 = !DILocation(line: 1581, column: 10, scope: !9941)
!9967 = !DILocation(line: 1583, column: 26, scope: !9941)
!9968 = !DILocation(line: 1586, column: 8, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 1586, column: 3)
!9970 = !DILocation(line: 0, scope: !9969)
!9971 = !DILocation(line: 1586, column: 17, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1586, column: 3)
!9973 = !DILocation(line: 1586, column: 3, scope: !9969)
!9974 = !DILocation(line: 1588, column: 42, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 1588, column: 11)
!9976 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 1587, column: 5)
!9977 = !DILocation(line: 1588, column: 11, scope: !9975)
!9978 = !DILocation(line: 1588, column: 11, scope: !9976)
!9979 = !DILocation(line: 1590, column: 11, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 1590, column: 11)
!9981 = !DILocation(line: 1590, column: 11, scope: !9976)
!9982 = !DILocation(line: 1586, column: 23, scope: !9972)
!9983 = !DILocation(line: 1586, column: 3, scope: !9972)
!9984 = distinct !{!9984, !9973, !9985}
!9985 = !DILocation(line: 1592, column: 5, scope: !9969)
!9986 = !DILocation(line: 1596, column: 7, scope: !9941)
!9987 = !DILocation(line: 1597, column: 5, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 1596, column: 7)
!9989 = !DILocation(line: 1611, column: 5, scope: !9988)
!9990 = !DILocation(line: 1615, column: 1, scope: !9941)
!9991 = distinct !DISubprogram(name: "choose_best_reg", scope: !3, file: !3, line: 1467, type: !9992, scopeLine: 1469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9994)
!9992 = !DISubroutineType(types: !9993)
!9993 = !{!607, !2058, !9904, !2032, !593}
!9994 = !{!9995, !9996, !9997, !9998, !9999}
!9995 = !DILocalVariable(name: "hard_regs_used", arg: 1, scope: !9991, file: !3, line: 1467, type: !2058)
!9996 = !DILocalVariable(name: "reg_rename_p", arg: 2, scope: !9991, file: !3, line: 1467, type: !9904)
!9997 = !DILocalVariable(name: "original_insns", arg: 3, scope: !9991, file: !3, line: 1468, type: !2032)
!9998 = !DILocalVariable(name: "is_orig_reg_p_ptr", arg: 4, scope: !9991, file: !3, line: 1468, type: !593)
!9999 = !DILocalVariable(name: "best_reg", scope: !9991, file: !3, line: 1470, type: !607)
!10000 = !DILocation(line: 0, scope: !9991)
!10001 = !DILocation(line: 1470, column: 18, scope: !9991)
!10002 = !DILocation(line: 1474, column: 3, scope: !9991)
!10003 = !DILocation(line: 1477, column: 3, scope: !9991)
!10004 = distinct !DISubprogram(name: "choose_best_pseudo_reg", scope: !3, file: !3, line: 1490, type: !10005, scopeLine: 1493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10007)
!10005 = !DISubroutineType(types: !10006)
!10006 = !{!607, !1852, !9904, !2032, !593}
!10007 = !{!10008, !10009, !10010, !10011, !10012, !10014, !10017, !10018, !10019, !10023, !10024}
!10008 = !DILocalVariable(name: "used_regs", arg: 1, scope: !10004, file: !3, line: 1490, type: !1852)
!10009 = !DILocalVariable(name: "reg_rename_p", arg: 2, scope: !10004, file: !3, line: 1491, type: !9904)
!10010 = !DILocalVariable(name: "original_insns", arg: 3, scope: !10004, file: !3, line: 1492, type: !2032)
!10011 = !DILocalVariable(name: "is_orig_reg_p_ptr", arg: 4, scope: !10004, file: !3, line: 1492, type: !593)
!10012 = !DILocalVariable(name: "i", scope: !10004, file: !3, line: 1494, type: !10013)
!10013 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_list_iterator", file: !398, line: 552, baseType: !2189)
!10014 = !DILocalVariable(name: "def", scope: !10004, file: !3, line: 1495, type: !10015)
!10015 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_t", file: !398, line: 212, baseType: !10016)
!10016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!10017 = !DILocalVariable(name: "mode", scope: !10004, file: !3, line: 1496, type: !5)
!10018 = !DILocalVariable(name: "bad_hard_regs", scope: !10004, file: !3, line: 1497, type: !594)
!10019 = !DILocalVariable(name: "dest", scope: !10020, file: !3, line: 1507, type: !607)
!10020 = distinct !DILexicalBlock(scope: !10021, file: !3, line: 1506, column: 5)
!10021 = distinct !DILexicalBlock(scope: !10022, file: !3, line: 1505, column: 3)
!10022 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1505, column: 3)
!10023 = !DILocalVariable(name: "orig_regno", scope: !10020, file: !3, line: 1508, type: !595)
!10024 = !DILocalVariable(name: "new_reg", scope: !10025, file: !3, line: 1555, type: !607)
!10025 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1554, column: 3)
!10026 = !DILocation(line: 0, scope: !10004)
!10027 = !DILocation(line: 1494, column: 3, scope: !10004)
!10028 = !DILocation(line: 1495, column: 3, scope: !10004)
!10029 = !DILocation(line: 1500, column: 3, scope: !10004)
!10030 = !DILocation(line: 1503, column: 22, scope: !10004)
!10031 = !DILocation(line: 1505, column: 3, scope: !10022)
!10032 = !DILocation(line: 0, scope: !10021)
!10033 = !DILocation(line: 1497, column: 8, scope: !10004)
!10034 = !DILocation(line: 1505, column: 3, scope: !10021)
!10035 = !DILocation(line: 1507, column: 18, scope: !10020)
!10036 = !DILocation(line: 0, scope: !10020)
!10037 = !DILocation(line: 1510, column: 7, scope: !10020)
!10038 = !DILocation(line: 0, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 1513, column: 11)
!10040 = !DILocation(line: 1513, column: 16, scope: !10039)
!10041 = !DILocation(line: 1513, column: 11, scope: !10020)
!10042 = !DILocation(line: 1516, column: 9, scope: !10039)
!10043 = !DILocation(line: 1517, column: 20, scope: !10020)
!10044 = !DILocation(line: 1519, column: 12, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 1519, column: 11)
!10046 = !DILocation(line: 1519, column: 11, scope: !10020)
!10047 = !DILocation(line: 1521, column: 26, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !3, line: 1521, column: 15)
!10049 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 1520, column: 9)
!10050 = !DILocation(line: 1521, column: 15, scope: !10049)
!10051 = !DILocation(line: 1523, column: 15, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1522, column: 13)
!10053 = !DILocation(line: 1527, column: 20, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 1527, column: 19)
!10055 = !DILocation(line: 1527, column: 19, scope: !10052)
!10056 = !DILocation(line: 1533, column: 24, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 1533, column: 9)
!10058 = distinct !DILexicalBlock(scope: !10054, file: !3, line: 1529, column: 3)
!10059 = !DILocation(line: 1533, column: 10, scope: !10057)
!10060 = !DILocation(line: 1534, column: 9, scope: !10057)
!10061 = !DILocation(line: 1534, column: 12, scope: !10057)
!10062 = !DILocation(line: 1534, column: 45, scope: !10057)
!10063 = !DILocation(line: 1533, column: 9, scope: !10058)
!10064 = !DILocation(line: 1535, column: 14, scope: !10057)
!10065 = !DILocation(line: 1535, column: 7, scope: !10057)
!10066 = distinct !{!10066, !10031, !10067}
!10067 = !DILocation(line: 1543, column: 6, scope: !10022)
!10068 = !DILocation(line: 1545, column: 22, scope: !10004)
!10069 = !DILocation(line: 1549, column: 7, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1549, column: 7)
!10071 = !DILocation(line: 1549, column: 7, scope: !10004)
!10072 = !DILocation(line: 1555, column: 19, scope: !10025)
!10073 = !DILocation(line: 0, scope: !10025)
!10074 = !DILocation(line: 1557, column: 5, scope: !10025)
!10075 = !DILocation(line: 1559, column: 17, scope: !10025)
!10076 = !DILocation(line: 1559, column: 15, scope: !10025)
!10077 = !DILocation(line: 1560, column: 5, scope: !10025)
!10078 = !DILocation(line: 1561, column: 59, scope: !10025)
!10079 = !DILocation(line: 1561, column: 45, scope: !10025)
!10080 = !DILocation(line: 1561, column: 5, scope: !10025)
!10081 = !DILocation(line: 1561, column: 43, scope: !10025)
!10082 = !DILocation(line: 1565, column: 1, scope: !10004)
!10083 = distinct !DISubprogram(name: "try_replace_dest_reg", scope: !3, file: !3, line: 1655, type: !10084, scopeLine: 1656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10086)
!10084 = !DISubroutineType(types: !10085)
!10085 = !{!594, !1942, !607, !1834}
!10086 = !{!10087, !10088, !10089, !10090}
!10087 = !DILocalVariable(name: "orig_insns", arg: 1, scope: !10083, file: !3, line: 1655, type: !1942)
!10088 = !DILocalVariable(name: "best_reg", arg: 2, scope: !10083, file: !3, line: 1655, type: !607)
!10089 = !DILocalVariable(name: "expr", arg: 3, scope: !10083, file: !3, line: 1655, type: !1834)
!10090 = !DILocalVariable(name: "orig_insn", scope: !10091, file: !3, line: 1661, type: !1911)
!10091 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 1660, column: 5)
!10092 = distinct !DILexicalBlock(scope: !10093, file: !3, line: 1659, column: 3)
!10093 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 1659, column: 3)
!10094 = !DILocation(line: 0, scope: !10083)
!10095 = !DILocation(line: 1659, column: 3, scope: !10083)
!10096 = !DILocation(line: 1659, column: 3, scope: !10093)
!10097 = !DILocation(line: 1661, column: 53, scope: !10091)
!10098 = !DILocation(line: 0, scope: !10091)
!10099 = !DILocation(line: 1663, column: 7, scope: !10091)
!10100 = !DILocation(line: 1665, column: 11, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1665, column: 11)
!10102 = !DILocation(line: 1665, column: 31, scope: !10101)
!10103 = !DILocation(line: 1665, column: 28, scope: !10101)
!10104 = !DILocation(line: 1666, column: 4, scope: !10101)
!10105 = !DILocation(line: 1666, column: 10, scope: !10101)
!10106 = !DILocation(line: 1667, column: 8, scope: !10101)
!10107 = !DILocation(line: 1667, column: 13, scope: !10101)
!10108 = !DILocation(line: 1665, column: 11, scope: !10091)
!10109 = !DILocation(line: 1669, column: 5, scope: !10092)
!10110 = !DILocation(line: 1659, column: 35, scope: !10092)
!10111 = !DILocation(line: 1659, column: 3, scope: !10092)
!10112 = distinct !{!10112, !10096, !10113}
!10113 = !DILocation(line: 1669, column: 5, scope: !10093)
!10114 = !DILocation(line: 1673, column: 7, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 1673, column: 7)
!10116 = !DILocation(line: 1673, column: 33, scope: !10115)
!10117 = !DILocation(line: 1673, column: 30, scope: !10115)
!10118 = !DILocation(line: 1673, column: 7, scope: !10083)
!10119 = !DILocation(line: 1674, column: 5, scope: !10115)
!10120 = !DILocation(line: 1676, column: 5, scope: !10115)
!10121 = !DILocation(line: 1676, column: 34, scope: !10115)
!10122 = !DILocation(line: 1679, column: 1, scope: !10083)
!10123 = distinct !DISubprogram(name: "vinsn_writes_one_of_regs_p", scope: !3, file: !3, line: 994, type: !10124, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10126)
!10124 = !DISubroutineType(types: !10125)
!10125 = !{!594, !1840, !1852, !2058}
!10126 = !{!10127, !10128, !10129, !10130, !10131}
!10127 = !DILocalVariable(name: "vi", arg: 1, scope: !10123, file: !3, line: 994, type: !1840)
!10128 = !DILocalVariable(name: "used_regs", arg: 2, scope: !10123, file: !3, line: 994, type: !1852)
!10129 = !DILocalVariable(name: "unavailable_hard_regs", arg: 3, scope: !10123, file: !3, line: 995, type: !2058)
!10130 = !DILocalVariable(name: "regno", scope: !10123, file: !3, line: 997, type: !7)
!10131 = !DILocalVariable(name: "rsi", scope: !10123, file: !3, line: 998, type: !10132)
!10132 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_set_iterator", file: !155, line: 90, baseType: !7221)
!10133 = !DILocation(line: 0, scope: !10123)
!10134 = !DILocation(line: 997, column: 3, scope: !10123)
!10135 = !DILocation(line: 998, column: 3, scope: !10123)
!10136 = !DILocation(line: 1000, column: 3, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1000, column: 3)
!10138 = !DILocation(line: 1000, column: 3, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 1000, column: 3)
!10140 = !DILocation(line: 1002, column: 11, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 1002, column: 11)
!10142 = distinct !DILexicalBlock(scope: !10139, file: !3, line: 1001, column: 5)
!10143 = !DILocation(line: 1002, column: 11, scope: !10142)
!10144 = !DILocation(line: 1004, column: 11, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 1004, column: 11)
!10146 = !DILocation(line: 1005, column: 11, scope: !10145)
!10147 = !DILocation(line: 1005, column: 14, scope: !10145)
!10148 = !DILocation(line: 1004, column: 11, scope: !10142)
!10149 = distinct !{!10149, !10136, !10150}
!10150 = !DILocation(line: 1007, column: 5, scope: !10137)
!10151 = !DILocation(line: 1009, column: 3, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1009, column: 3)
!10153 = !DILocation(line: 1009, column: 3, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 1009, column: 3)
!10155 = !DILocation(line: 1011, column: 11, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 1011, column: 11)
!10157 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 1010, column: 5)
!10158 = !DILocation(line: 1011, column: 11, scope: !10157)
!10159 = !DILocation(line: 1013, column: 11, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 1013, column: 11)
!10161 = !DILocation(line: 1014, column: 11, scope: !10160)
!10162 = !DILocation(line: 1014, column: 14, scope: !10160)
!10163 = !DILocation(line: 1013, column: 11, scope: !10157)
!10164 = distinct !{!10164, !10151, !10165}
!10165 = !DILocation(line: 1016, column: 5, scope: !10152)
!10166 = !DILocation(line: 1019, column: 1, scope: !10123)
!10167 = distinct !DISubprogram(name: "_list_clear", scope: !398, file: !398, line: 408, type: !6309, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10168)
!10168 = !{!10169}
!10169 = !DILocalVariable(name: "l", arg: 1, scope: !10167, file: !398, line: 408, type: !2193)
!10170 = !DILocation(line: 0, scope: !10167)
!10171 = !DILocation(line: 410, column: 3, scope: !10167)
!10172 = !DILocation(line: 410, column: 10, scope: !10167)
!10173 = !DILocation(line: 411, column: 5, scope: !10167)
!10174 = distinct !{!10174, !10171, !10175}
!10175 = !DILocation(line: 411, column: 20, scope: !10167)
!10176 = !DILocation(line: 412, column: 1, scope: !10167)
!10177 = distinct !DISubprogram(name: "find_sequential_best_exprs", scope: !3, file: !3, line: 5069, type: !10178, scopeLine: 5070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10180)
!10178 = !DISubroutineType(types: !10179)
!10179 = !{!1945, !7790, !1834, !594}
!10180 = !{!10181, !10182, !10183, !10184, !10185, !10186, !10187, !10193, !10194, !10198}
!10181 = !DILocalVariable(name: "bnd", arg: 1, scope: !10177, file: !3, line: 5069, type: !7790)
!10182 = !DILocalVariable(name: "expr_vliw", arg: 2, scope: !10177, file: !3, line: 5069, type: !1834)
!10183 = !DILocalVariable(name: "for_moveop", arg: 3, scope: !10177, file: !3, line: 5069, type: !594)
!10184 = !DILocalVariable(name: "expr_seq", scope: !10177, file: !3, line: 5071, type: !1945)
!10185 = !DILocalVariable(name: "expr", scope: !10177, file: !3, line: 5072, type: !1834)
!10186 = !DILocalVariable(name: "i", scope: !10177, file: !3, line: 5073, type: !2188)
!10187 = !DILocalVariable(name: "__j", scope: !10188, file: !3, line: 5117, type: !595)
!10188 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 5117, column: 7)
!10189 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 5117, column: 7)
!10190 = distinct !DILexicalBlock(scope: !10191, file: !3, line: 5117, column: 7)
!10191 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 5116, column: 5)
!10192 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 5115, column: 7)
!10193 = !DILocalVariable(name: "__s", scope: !10188, file: !3, line: 5117, type: !597)
!10194 = !DILocalVariable(name: "__j", scope: !10195, file: !3, line: 5119, type: !595)
!10195 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 5119, column: 7)
!10196 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 5119, column: 7)
!10197 = distinct !DILexicalBlock(scope: !10191, file: !3, line: 5119, column: 7)
!10198 = !DILocalVariable(name: "__s", scope: !10195, file: !3, line: 5119, type: !597)
!10199 = !DILocation(line: 0, scope: !10177)
!10200 = !DILocation(line: 5071, column: 3, scope: !10177)
!10201 = !DILocation(line: 5071, column: 12, scope: !10177)
!10202 = !DILocation(line: 5072, column: 3, scope: !10177)
!10203 = !DILocation(line: 5073, column: 3, scope: !10177)
!10204 = !DILocation(line: 5075, column: 3, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 5075, column: 3)
!10206 = !DILocation(line: 0, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 5075, column: 3)
!10208 = !DILocation(line: 5075, column: 3, scope: !10207)
!10209 = !DILocation(line: 5077, column: 38, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 5077, column: 11)
!10211 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 5076, column: 5)
!10212 = !DILocation(line: 5077, column: 11, scope: !10210)
!10213 = !DILocation(line: 5077, column: 11, scope: !10211)
!10214 = !DILocation(line: 5079, column: 15, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 5079, column: 15)
!10216 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 5078, column: 9)
!10217 = !DILocation(line: 5079, column: 15, scope: !10216)
!10218 = !DILocation(line: 5105, column: 34, scope: !10216)
!10219 = !DILocation(line: 5084, column: 19, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 5084, column: 19)
!10221 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 5080, column: 13)
!10222 = !DILocation(line: 5084, column: 43, scope: !10220)
!10223 = !DILocation(line: 5084, column: 46, scope: !10220)
!10224 = !DILocation(line: 5084, column: 19, scope: !10221)
!10225 = !DILocation(line: 5086, column: 23, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 5086, column: 23)
!10227 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5085, column: 3)
!10228 = !DILocation(line: 5086, column: 49, scope: !10226)
!10229 = !DILocation(line: 5086, column: 46, scope: !10226)
!10230 = !DILocation(line: 0, scope: !10226)
!10231 = !DILocation(line: 5086, column: 23, scope: !10227)
!10232 = !DILocation(line: 5088, column: 46, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 5087, column: 7)
!10234 = !DILocation(line: 5088, column: 9, scope: !10233)
!10235 = !DILocation(line: 5089, column: 31, scope: !10233)
!10236 = !DILocation(line: 5101, column: 19, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 5101, column: 19)
!10238 = !DILocation(line: 5090, column: 7, scope: !10233)
!10239 = !DILocation(line: 5094, column: 28, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 5094, column: 28)
!10241 = !DILocation(line: 5095, column: 31, scope: !10240)
!10242 = !DILocation(line: 5095, column: 28, scope: !10240)
!10243 = !DILocation(line: 5094, column: 28, scope: !10226)
!10244 = !DILocation(line: 5097, column: 9, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 5096, column: 7)
!10246 = !DILocation(line: 5098, column: 9, scope: !10245)
!10247 = !DILocation(line: 5098, column: 38, scope: !10245)
!10248 = !DILocation(line: 5099, column: 7, scope: !10245)
!10249 = !DILocation(line: 5101, column: 19, scope: !10221)
!10250 = !DILocation(line: 5102, column: 41, scope: !10237)
!10251 = !DILocation(line: 5102, column: 17, scope: !10237)
!10252 = !DILocation(line: 5105, column: 11, scope: !10216)
!10253 = !DILocation(line: 5111, column: 11, scope: !10216)
!10254 = distinct !{!10254, !10204, !10255}
!10255 = !DILocation(line: 5113, column: 5, scope: !10205)
!10256 = !DILocation(line: 5115, column: 7, scope: !10192)
!10257 = !DILocation(line: 5115, column: 21, scope: !10192)
!10258 = !DILocation(line: 5115, column: 35, scope: !10192)
!10259 = !DILocation(line: 5115, column: 18, scope: !10192)
!10260 = !DILocation(line: 5117, column: 7, scope: !10189)
!10261 = !DILocation(line: 5117, column: 7, scope: !10190)
!10262 = !DILocation(line: 5117, column: 7, scope: !10188)
!10263 = !DILocation(line: 0, scope: !10188)
!10264 = !DILocation(line: 5118, column: 20, scope: !10191)
!10265 = !DILocation(line: 5118, column: 7, scope: !10191)
!10266 = !DILocation(line: 5119, column: 7, scope: !10196)
!10267 = !DILocation(line: 5119, column: 7, scope: !10197)
!10268 = !DILocation(line: 5119, column: 7, scope: !10195)
!10269 = !DILocation(line: 0, scope: !10195)
!10270 = !DILocation(line: 5122, column: 10, scope: !10177)
!10271 = !DILocation(line: 5123, column: 1, scope: !10177)
!10272 = !DILocation(line: 5122, column: 3, scope: !10177)
!10273 = distinct !DISubprogram(name: "find_used_regs", scope: !3, file: !3, line: 3233, type: !10274, scopeLine: 3235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10276)
!10274 = !DISubroutineType(types: !10275)
!10275 = !{!594, !1911, !1945, !1852, !9904, !2031}
!10276 = !{!10277, !10278, !10279, !10280, !10281, !10282, !10283, !10284, !10285, !10286, !10287, !10288, !10289, !10290}
!10277 = !DILocalVariable(name: "insn", arg: 1, scope: !10273, file: !3, line: 3233, type: !1911)
!10278 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !10273, file: !3, line: 3233, type: !1945)
!10279 = !DILocalVariable(name: "used_regs", arg: 3, scope: !10273, file: !3, line: 3233, type: !1852)
!10280 = !DILocalVariable(name: "reg_rename_p", arg: 4, scope: !10273, file: !3, line: 3234, type: !9904)
!10281 = !DILocalVariable(name: "original_insns", arg: 5, scope: !10273, file: !3, line: 3234, type: !2031)
!10282 = !DILocalVariable(name: "i", scope: !10273, file: !3, line: 3236, type: !10013)
!10283 = !DILocalVariable(name: "def", scope: !10273, file: !3, line: 3237, type: !10015)
!10284 = !DILocalVariable(name: "res", scope: !10273, file: !3, line: 3238, type: !595)
!10285 = !DILocalVariable(name: "needs_spec_check_p", scope: !10273, file: !3, line: 3239, type: !594)
!10286 = !DILocalVariable(name: "expr", scope: !10273, file: !3, line: 3240, type: !1834)
!10287 = !DILocalVariable(name: "expr_iter", scope: !10273, file: !3, line: 3241, type: !2188)
!10288 = !DILocalVariable(name: "sparams", scope: !10273, file: !3, line: 3242, type: !2027)
!10289 = !DILocalVariable(name: "lparams", scope: !10273, file: !3, line: 3243, type: !2076)
!10290 = !DILocalVariable(name: "vinsn", scope: !10291, file: !3, line: 3276, type: !1840)
!10291 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 3275, column: 5)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 3274, column: 3)
!10293 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 3274, column: 3)
!10294 = !DILocation(line: 0, scope: !10273)
!10295 = !DILocation(line: 3236, column: 3, scope: !10273)
!10296 = !DILocation(line: 3237, column: 3, scope: !10273)
!10297 = !DILocation(line: 3240, column: 3, scope: !10273)
!10298 = !DILocation(line: 3241, column: 3, scope: !10273)
!10299 = !DILocation(line: 3242, column: 3, scope: !10273)
!10300 = !DILocation(line: 3243, column: 3, scope: !10273)
!10301 = !DILocation(line: 3246, column: 17, scope: !10273)
!10302 = !DILocation(line: 3246, column: 3, scope: !10273)
!10303 = !DILocation(line: 3249, column: 11, scope: !10273)
!10304 = !DILocation(line: 3249, column: 24, scope: !10273)
!10305 = !DILocation(line: 3250, column: 11, scope: !10273)
!10306 = !DILocation(line: 3250, column: 26, scope: !10273)
!10307 = !DILocation(line: 3251, column: 11, scope: !10273)
!10308 = !DILocation(line: 3251, column: 21, scope: !10273)
!10309 = !DILocation(line: 3254, column: 32, scope: !10273)
!10310 = !DILocation(line: 3256, column: 9, scope: !10273)
!10311 = !DILocation(line: 3258, column: 41, scope: !10273)
!10312 = !DILocation(line: 3258, column: 30, scope: !10273)
!10313 = !DILocation(line: 3260, column: 3, scope: !10273)
!10314 = !DILocation(line: 3261, column: 3, scope: !10273)
!10315 = !DILocation(line: 3268, column: 3, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 3268, column: 3)
!10317 = !DILocation(line: 0, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 3268, column: 3)
!10319 = !DILocation(line: 3268, column: 3, scope: !10318)
!10320 = !DILocation(line: 3269, column: 27, scope: !10318)
!10321 = !DILocation(line: 3269, column: 24, scope: !10318)
!10322 = distinct !{!10322, !10315, !10323}
!10323 = !DILocation(line: 3269, column: 27, scope: !10316)
!10324 = !DILocation(line: 3274, column: 3, scope: !10293)
!10325 = !DILocation(line: 0, scope: !10292)
!10326 = !DILocation(line: 0, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 3283, column: 11)
!10328 = !DILocation(line: 3274, column: 3, scope: !10292)
!10329 = !DILocation(line: 3276, column: 23, scope: !10291)
!10330 = !DILocation(line: 0, scope: !10291)
!10331 = !DILocation(line: 3278, column: 11, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 3278, column: 11)
!10333 = !DILocation(line: 3278, column: 11, scope: !10291)
!10334 = !DILocation(line: 3279, column: 30, scope: !10332)
!10335 = !DILocation(line: 3279, column: 2, scope: !10332)
!10336 = distinct !{!10336, !10324, !10337}
!10337 = !DILocation(line: 3285, column: 5, scope: !10293)
!10338 = !DILocation(line: 3288, column: 1, scope: !10273)
!10339 = !DILocation(line: 3284, column: 2, scope: !10327)
!10340 = !DILocation(line: 3287, column: 3, scope: !10273)
!10341 = distinct !DISubprogram(name: "equal_after_moveup_path_p", scope: !3, file: !3, line: 2631, type: !10342, scopeLine: 2632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10344)
!10342 = !DISubroutineType(types: !10343)
!10343 = !{!594, !1834, !1942, !1834}
!10344 = !{!10345, !10346, !10347, !10348, !10349, !10350, !10351, !10352, !10355}
!10345 = !DILocalVariable(name: "expr", arg: 1, scope: !10341, file: !3, line: 2631, type: !1834)
!10346 = !DILocalVariable(name: "path", arg: 2, scope: !10341, file: !3, line: 2631, type: !1942)
!10347 = !DILocalVariable(name: "expr_vliw", arg: 3, scope: !10341, file: !3, line: 2631, type: !1834)
!10348 = !DILocalVariable(name: "_tmp", scope: !10341, file: !3, line: 2633, type: !1836)
!10349 = !DILocalVariable(name: "tmp", scope: !10341, file: !3, line: 2633, type: !1835)
!10350 = !DILocalVariable(name: "last_cycle", scope: !10341, file: !3, line: 2634, type: !595)
!10351 = !DILocalVariable(name: "res", scope: !10341, file: !3, line: 2635, type: !594)
!10352 = !DILocalVariable(name: "tmp_vinsn", scope: !10353, file: !3, line: 2650, type: !1840)
!10353 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 2649, column: 5)
!10354 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 2648, column: 7)
!10355 = !DILocalVariable(name: "expr_vliw_vinsn", scope: !10353, file: !3, line: 2651, type: !1840)
!10356 = !DILocation(line: 0, scope: !10341)
!10357 = !DILocation(line: 2633, column: 3, scope: !10341)
!10358 = !DILocation(line: 2637, column: 3, scope: !10341)
!10359 = !DILocation(line: 2648, column: 7, scope: !10341)
!10360 = !DILocation(line: 2650, column: 27, scope: !10353)
!10361 = !DILocation(line: 0, scope: !10353)
!10362 = !DILocation(line: 2651, column: 33, scope: !10353)
!10363 = !DILocation(line: 2653, column: 21, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 2653, column: 11)
!10365 = !DILocation(line: 2653, column: 11, scope: !10353)
!10366 = !DILocation(line: 2654, column: 8, scope: !10364)
!10367 = !DILocation(line: 2654, column: 2, scope: !10364)
!10368 = !DILocation(line: 2657, column: 3, scope: !10341)
!10369 = !DILocation(line: 2659, column: 1, scope: !10341)
!10370 = !DILocation(line: 2658, column: 3, scope: !10341)
!10371 = distinct !DISubprogram(name: "code_motion_path_driver", scope: !3, file: !3, line: 6402, type: !10372, scopeLine: 6405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10374)
!10372 = !DISubroutineType(types: !10373)
!10373 = !{!595, !1911, !1945, !1942, !2074, !599}
!10374 = !{!10375, !10376, !10377, !10378, !10379, !10380, !10381, !10382, !10383, !10384, !10385, !10386, !10392, !10393, !10397, !10398, !10402, !10403, !10410, !10411, !10420, !10421, !10428, !10429, !10436, !10437, !10443, !10448, !10449}
!10375 = !DILocalVariable(name: "insn", arg: 1, scope: !10371, file: !3, line: 6402, type: !1911)
!10376 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !10371, file: !3, line: 6402, type: !1945)
!10377 = !DILocalVariable(name: "path", arg: 3, scope: !10371, file: !3, line: 6402, type: !1942)
!10378 = !DILocalVariable(name: "local_params_in", arg: 4, scope: !10371, file: !3, line: 6403, type: !2074)
!10379 = !DILocalVariable(name: "static_params", arg: 5, scope: !10371, file: !3, line: 6404, type: !599)
!10380 = !DILocalVariable(name: "expr", scope: !10371, file: !3, line: 6406, type: !1834)
!10381 = !DILocalVariable(name: "bb", scope: !10371, file: !3, line: 6407, type: !1141)
!10382 = !DILocalVariable(name: "first_insn", scope: !10371, file: !3, line: 6408, type: !1911)
!10383 = !DILocalVariable(name: "bb_tail", scope: !10371, file: !3, line: 6408, type: !1911)
!10384 = !DILocalVariable(name: "before_first", scope: !10371, file: !3, line: 6408, type: !1911)
!10385 = !DILocalVariable(name: "removed_last_insn", scope: !10371, file: !3, line: 6409, type: !594)
!10386 = !DILocalVariable(name: "__j", scope: !10387, file: !3, line: 6413, type: !595)
!10387 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 6413, column: 7)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !3, line: 6413, column: 7)
!10389 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 6413, column: 7)
!10390 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 6412, column: 5)
!10391 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 6411, column: 7)
!10392 = !DILocalVariable(name: "__s", scope: !10387, file: !3, line: 6413, type: !597)
!10393 = !DILocalVariable(name: "__j", scope: !10394, file: !3, line: 6415, type: !595)
!10394 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 6415, column: 7)
!10395 = distinct !DILexicalBlock(scope: !10396, file: !3, line: 6415, column: 7)
!10396 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 6415, column: 7)
!10397 = !DILocalVariable(name: "__s", scope: !10394, file: !3, line: 6415, type: !597)
!10398 = !DILocalVariable(name: "__j", scope: !10399, file: !3, line: 6417, type: !595)
!10399 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 6417, column: 7)
!10400 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 6417, column: 7)
!10401 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 6417, column: 7)
!10402 = !DILocalVariable(name: "__s", scope: !10399, file: !3, line: 6417, type: !597)
!10403 = !DILocalVariable(name: "__j", scope: !10404, file: !3, line: 6426, type: !595)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !3, line: 6426, column: 9)
!10405 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 6426, column: 9)
!10406 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 6426, column: 9)
!10407 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 6425, column: 11)
!10408 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 6424, column: 5)
!10409 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 6423, column: 7)
!10410 = !DILocalVariable(name: "__s", scope: !10404, file: !3, line: 6426, type: !597)
!10411 = !DILocalVariable(name: "__j", scope: !10412, file: !3, line: 6437, type: !595)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 6437, column: 13)
!10413 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 6437, column: 13)
!10414 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 6437, column: 13)
!10415 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 6436, column: 15)
!10416 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 6435, column: 9)
!10417 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 6434, column: 11)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 6433, column: 5)
!10419 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 6432, column: 7)
!10420 = !DILocalVariable(name: "__s", scope: !10412, file: !3, line: 6437, type: !597)
!10421 = !DILocalVariable(name: "__j", scope: !10422, file: !3, line: 6450, type: !595)
!10422 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 6450, column: 13)
!10423 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 6450, column: 13)
!10424 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 6450, column: 13)
!10425 = distinct !DILexicalBlock(scope: !10426, file: !3, line: 6449, column: 15)
!10426 = distinct !DILexicalBlock(scope: !10427, file: !3, line: 6443, column: 9)
!10427 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 6442, column: 11)
!10428 = !DILocalVariable(name: "__s", scope: !10422, file: !3, line: 6450, type: !597)
!10429 = !DILocalVariable(name: "__j", scope: !10430, file: !3, line: 6472, type: !595)
!10430 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 6472, column: 9)
!10431 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 6472, column: 9)
!10432 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 6472, column: 9)
!10433 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 6471, column: 11)
!10434 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 6470, column: 5)
!10435 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 6469, column: 7)
!10436 = !DILocalVariable(name: "__s", scope: !10430, file: !3, line: 6472, type: !597)
!10437 = !DILocalVariable(name: "last_insn", scope: !10438, file: !3, line: 6517, type: !1911)
!10438 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 6516, column: 2)
!10439 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 6515, column: 11)
!10440 = distinct !DILexicalBlock(scope: !10441, file: !3, line: 6499, column: 5)
!10441 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 6498, column: 3)
!10442 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 6498, column: 3)
!10443 = !DILocalVariable(name: "__j", scope: !10444, file: !3, line: 6521, type: !595)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 6521, column: 13)
!10445 = distinct !DILexicalBlock(scope: !10446, file: !3, line: 6521, column: 13)
!10446 = distinct !DILexicalBlock(scope: !10447, file: !3, line: 6521, column: 13)
!10447 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 6520, column: 15)
!10448 = !DILocalVariable(name: "__s", scope: !10444, file: !3, line: 6521, type: !597)
!10449 = !DILocalVariable(name: "res", scope: !10450, file: !3, line: 6571, type: !595)
!10450 = distinct !DILexicalBlock(scope: !10451, file: !3, line: 6570, column: 5)
!10451 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 6569, column: 7)
!10452 = !DILocation(line: 0, scope: !10371)
!10453 = !DILocation(line: 6407, column: 20, scope: !10371)
!10454 = !DILocation(line: 6411, column: 7, scope: !10391)
!10455 = !DILocation(line: 6411, column: 21, scope: !10391)
!10456 = !DILocation(line: 6411, column: 7, scope: !10371)
!10457 = !DILocation(line: 6413, column: 7, scope: !10388)
!10458 = !DILocation(line: 6413, column: 7, scope: !10389)
!10459 = !DILocation(line: 6413, column: 7, scope: !10387)
!10460 = !DILocation(line: 0, scope: !10387)
!10461 = !DILocation(line: 6414, column: 7, scope: !10390)
!10462 = !DILocation(line: 6415, column: 7, scope: !10395)
!10463 = !DILocation(line: 6415, column: 7, scope: !10396)
!10464 = !DILocation(line: 6415, column: 7, scope: !10394)
!10465 = !DILocation(line: 0, scope: !10394)
!10466 = !DILocation(line: 6416, column: 20, scope: !10390)
!10467 = !DILocation(line: 6416, column: 7, scope: !10390)
!10468 = !DILocation(line: 6417, column: 7, scope: !10400)
!10469 = !DILocation(line: 6417, column: 7, scope: !10401)
!10470 = !DILocation(line: 6417, column: 7, scope: !10399)
!10471 = !DILocation(line: 0, scope: !10399)
!10472 = !DILocation(line: 6420, column: 3, scope: !10371)
!10473 = !DILocation(line: 6423, column: 38, scope: !10409)
!10474 = !DILocation(line: 6423, column: 7, scope: !10409)
!10475 = !DILocation(line: 6423, column: 7, scope: !10371)
!10476 = !DILocation(line: 6425, column: 11, scope: !10407)
!10477 = !DILocation(line: 6425, column: 25, scope: !10407)
!10478 = !DILocation(line: 6425, column: 11, scope: !10408)
!10479 = !DILocation(line: 6426, column: 9, scope: !10405)
!10480 = !DILocation(line: 6426, column: 9, scope: !10406)
!10481 = !DILocation(line: 6426, column: 9, scope: !10404)
!10482 = !DILocation(line: 0, scope: !10404)
!10483 = !DILocation(line: 6432, column: 7, scope: !10419)
!10484 = !DILocation(line: 6432, column: 7, scope: !10371)
!10485 = !DILocation(line: 6434, column: 13, scope: !10417)
!10486 = !DILocation(line: 6434, column: 11, scope: !10418)
!10487 = !DILocation(line: 6436, column: 15, scope: !10415)
!10488 = !DILocation(line: 6436, column: 29, scope: !10415)
!10489 = !DILocation(line: 6436, column: 15, scope: !10416)
!10490 = !DILocation(line: 6437, column: 13, scope: !10413)
!10491 = !DILocation(line: 6437, column: 13, scope: !10414)
!10492 = !DILocation(line: 6437, column: 13, scope: !10412)
!10493 = !DILocation(line: 0, scope: !10412)
!10494 = !DILocation(line: 6442, column: 25, scope: !10427)
!10495 = !DILocation(line: 6442, column: 57, scope: !10427)
!10496 = !DILocation(line: 6442, column: 11, scope: !10427)
!10497 = !DILocation(line: 6442, column: 11, scope: !10418)
!10498 = !DILocation(line: 6449, column: 15, scope: !10425)
!10499 = !DILocation(line: 6449, column: 29, scope: !10425)
!10500 = !DILocation(line: 6449, column: 15, scope: !10426)
!10501 = !DILocation(line: 6450, column: 13, scope: !10423)
!10502 = !DILocation(line: 6450, column: 13, scope: !10424)
!10503 = !DILocation(line: 6450, column: 13, scope: !10422)
!10504 = !DILocation(line: 0, scope: !10422)
!10505 = !DILocation(line: 6451, column: 15, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10426, file: !3, line: 6451, column: 15)
!10507 = !DILocation(line: 6451, column: 45, scope: !10506)
!10508 = !DILocation(line: 6451, column: 15, scope: !10426)
!10509 = !DILocation(line: 6452, column: 20, scope: !10506)
!10510 = !DILocation(line: 6452, column: 13, scope: !10506)
!10511 = !DILocation(line: 6459, column: 7, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 6459, column: 7)
!10513 = !DILocation(line: 6459, column: 37, scope: !10512)
!10514 = !DILocation(line: 6459, column: 7, scope: !10371)
!10515 = !DILocation(line: 6460, column: 5, scope: !10512)
!10516 = !DILocation(line: 6462, column: 27, scope: !10371)
!10517 = !DILocation(line: 6462, column: 14, scope: !10371)
!10518 = !DILocation(line: 6462, column: 12, scope: !10371)
!10519 = !DILocation(line: 6465, column: 7, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 6465, column: 7)
!10521 = !DILocation(line: 6465, column: 7, scope: !10371)
!10522 = !DILocation(line: 6466, column: 34, scope: !10520)
!10523 = !DILocation(line: 6466, column: 5, scope: !10520)
!10524 = !DILocation(line: 6469, column: 8, scope: !10435)
!10525 = !DILocation(line: 6469, column: 7, scope: !10371)
!10526 = !DILocation(line: 6471, column: 11, scope: !10433)
!10527 = !DILocation(line: 6471, column: 25, scope: !10433)
!10528 = !DILocation(line: 6471, column: 11, scope: !10434)
!10529 = !DILocation(line: 6472, column: 9, scope: !10431)
!10530 = !DILocation(line: 6472, column: 9, scope: !10432)
!10531 = !DILocation(line: 6472, column: 9, scope: !10430)
!10532 = !DILocation(line: 0, scope: !10430)
!10533 = !DILocation(line: 6484, column: 3, scope: !10371)
!10534 = !DILocation(line: 6487, column: 3, scope: !10371)
!10535 = !DILocation(line: 6491, column: 3, scope: !10371)
!10536 = !DILocation(line: 6493, column: 13, scope: !10371)
!10537 = !DILocation(line: 6498, column: 3, scope: !10371)
!10538 = !DILocation(line: 6514, column: 29, scope: !10440)
!10539 = !DILocation(line: 6514, column: 39, scope: !10440)
!10540 = !DILocation(line: 6514, column: 14, scope: !10440)
!10541 = !DILocation(line: 6515, column: 11, scope: !10439)
!10542 = !DILocation(line: 6515, column: 11, scope: !10440)
!10543 = !DILocation(line: 6517, column: 23, scope: !10438)
!10544 = !DILocation(line: 0, scope: !10438)
!10545 = !DILocation(line: 6520, column: 15, scope: !10447)
!10546 = !DILocation(line: 6520, column: 29, scope: !10447)
!10547 = !DILocation(line: 6520, column: 15, scope: !10438)
!10548 = !DILocation(line: 6521, column: 13, scope: !10445)
!10549 = !DILocation(line: 6521, column: 13, scope: !10446)
!10550 = !DILocation(line: 6521, column: 13, scope: !10444)
!10551 = !DILocation(line: 0, scope: !10444)
!10552 = !DILocation(line: 6523, column: 4, scope: !10438)
!10553 = !DILocation(line: 6523, column: 34, scope: !10438)
!10554 = !DILocation(line: 6529, column: 20, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 6529, column: 15)
!10556 = !DILocation(line: 6529, column: 15, scope: !10438)
!10557 = !DILocation(line: 6531, column: 28, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10555, file: !3, line: 6530, column: 13)
!10559 = !DILocation(line: 6532, column: 35, scope: !10558)
!10560 = !DILocation(line: 6533, column: 13, scope: !10558)
!10561 = !DILocation(line: 6541, column: 8, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 6541, column: 8)
!10563 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 6538, column: 2)
!10564 = !DILocation(line: 6541, column: 38, scope: !10562)
!10565 = !DILocation(line: 6542, column: 22, scope: !10562)
!10566 = !DILocation(line: 6541, column: 8, scope: !10563)
!10567 = !DILocation(line: 6546, column: 8, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 6543, column: 6)
!10569 = !DILocation(line: 6557, column: 4, scope: !10563)
!10570 = !DILocation(line: 6553, column: 8, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 6549, column: 6)
!10572 = !DILocation(line: 6554, column: 8, scope: !10571)
!10573 = !DILocation(line: 6561, column: 16, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 6561, column: 11)
!10575 = !DILocation(line: 6561, column: 11, scope: !10440)
!10576 = !DILocation(line: 6564, column: 14, scope: !10440)
!10577 = !DILocation(line: 6498, column: 3, scope: !10441)
!10578 = distinct !{!10578, !10579, !10580}
!10579 = !DILocation(line: 6498, column: 3, scope: !10442)
!10580 = !DILocation(line: 6565, column: 5, scope: !10442)
!10581 = !DILocation(line: 6569, column: 8, scope: !10451)
!10582 = !DILocation(line: 6569, column: 7, scope: !10371)
!10583 = !DILocation(line: 6573, column: 7, scope: !10450)
!10584 = !DILocation(line: 6577, column: 16, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 6577, column: 11)
!10586 = !DILocation(line: 6577, column: 11, scope: !10450)
!10587 = !DILocation(line: 6578, column: 2, scope: !10585)
!10588 = !DILocation(line: 6582, column: 51, scope: !10450)
!10589 = !DILocation(line: 6583, column: 45, scope: !10450)
!10590 = !DILocation(line: 6582, column: 13, scope: !10450)
!10591 = !DILocation(line: 0, scope: !10450)
!10592 = !DILocation(line: 6586, column: 11, scope: !10450)
!10593 = !DILocation(line: 6587, column: 2, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 6586, column: 11)
!10595 = !DILocation(line: 6589, column: 15, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 6589, column: 11)
!10597 = !DILocation(line: 6589, column: 11, scope: !10450)
!10598 = !DILocation(line: 6597, column: 4, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 6590, column: 2)
!10600 = !DILocation(line: 6598, column: 4, scope: !10599)
!10601 = !DILocation(line: 6603, column: 3, scope: !10371)
!10602 = !DILocation(line: 6607, column: 18, scope: !10371)
!10603 = !DILocation(line: 6608, column: 3, scope: !10371)
!10604 = !DILocation(line: 6608, column: 15, scope: !10371)
!10605 = !DILocation(line: 6610, column: 11, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 6610, column: 11)
!10607 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 6609, column: 5)
!10608 = !DILocation(line: 6610, column: 41, scope: !10606)
!10609 = !DILocation(line: 6610, column: 11, scope: !10607)
!10610 = !DILocation(line: 6611, column: 2, scope: !10606)
!10611 = !DILocation(line: 6613, column: 14, scope: !10607)
!10612 = distinct !{!10612, !10603, !10613}
!10613 = !DILocation(line: 6614, column: 5, scope: !10371)
!10614 = !DILocation(line: 6618, column: 3, scope: !10371)
!10615 = !DILocation(line: 6619, column: 20, scope: !10371)
!10616 = !DILocation(line: 6619, column: 38, scope: !10371)
!10617 = !DILocation(line: 6620, column: 3, scope: !10371)
!10618 = !DILocation(line: 6620, column: 33, scope: !10371)
!10619 = !DILocation(line: 6624, column: 7, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 6624, column: 7)
!10621 = !DILocation(line: 6624, column: 7, scope: !10371)
!10622 = !DILocation(line: 6625, column: 12, scope: !10620)
!10623 = !DILocation(line: 6625, column: 5, scope: !10620)
!10624 = !DILocation(line: 6626, column: 19, scope: !10371)
!10625 = !DILocation(line: 6626, column: 47, scope: !10371)
!10626 = !DILocation(line: 6626, column: 70, scope: !10371)
!10627 = !DILocation(line: 6626, column: 3, scope: !10371)
!10628 = !DILocation(line: 6627, column: 3, scope: !10371)
!10629 = !DILocation(line: 6628, column: 1, scope: !10371)
!10630 = distinct !DISubprogram(name: "_list_iter_cond_def", scope: !398, file: !398, line: 560, type: !10631, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10634)
!10631 = !DISubroutineType(types: !10632)
!10632 = !{!594, !2032, !10633}
!10633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10015, size: 64)
!10634 = !{!10635, !10636}
!10635 = !DILocalVariable(name: "def_list", arg: 1, scope: !10630, file: !398, line: 560, type: !2032)
!10636 = !DILocalVariable(name: "def", arg: 2, scope: !10630, file: !398, line: 560, type: !10633)
!10637 = !DILocation(line: 0, scope: !10630)
!10638 = !DILocation(line: 562, column: 7, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10630, file: !398, line: 562, column: 7)
!10640 = !DILocation(line: 562, column: 7, scope: !10630)
!10641 = !DILocation(line: 564, column: 14, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10639, file: !398, line: 563, column: 5)
!10643 = !DILocation(line: 564, column: 12, scope: !10642)
!10644 = !DILocation(line: 565, column: 7, scope: !10642)
!10645 = !DILocation(line: 569, column: 1, scope: !10630)
!10646 = distinct !DISubprogram(name: "mark_unavailable_hard_regs", scope: !3, file: !3, line: 1207, type: !10647, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10649)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{null, !10015, !9904, !1852}
!10649 = !{!10650, !10651, !10652, !10653, !10654, !10655, !10656, !10657, !10658, !10667, !10670, !10674}
!10650 = !DILocalVariable(name: "def", arg: 1, scope: !10646, file: !3, line: 1207, type: !10015)
!10651 = !DILocalVariable(name: "reg_rename_p", arg: 2, scope: !10646, file: !3, line: 1207, type: !9904)
!10652 = !DILocalVariable(name: "used_regs", arg: 3, scope: !10646, file: !3, line: 1208, type: !1852)
!10653 = !DILocalVariable(name: "mode", scope: !10646, file: !3, line: 1210, type: !5)
!10654 = !DILocalVariable(name: "cl", scope: !10646, file: !3, line: 1211, type: !562)
!10655 = !DILocalVariable(name: "orig_dest", scope: !10646, file: !3, line: 1212, type: !607)
!10656 = !DILocalVariable(name: "cur_reg", scope: !10646, file: !3, line: 1213, type: !7)
!10657 = !DILocalVariable(name: "regno", scope: !10646, file: !3, line: 1213, type: !7)
!10658 = !DILocalVariable(name: "hrsi", scope: !10646, file: !3, line: 1214, type: !10659)
!10659 = !DIDerivedType(tag: DW_TAG_typedef, name: "hard_reg_set_iterator", file: !2059, line: 499, baseType: !10660)
!10660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2059, line: 484, size: 192, elements: !10661)
!10661 = !{!10662, !10664, !10665, !10666}
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "pelt", scope: !10660, file: !2059, line: 487, baseType: !10663, size: 64)
!10663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!10664 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10660, file: !2059, line: 490, baseType: !2420, size: 16, offset: 64)
!10665 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !10660, file: !2059, line: 493, baseType: !2420, size: 16, offset: 80)
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !10660, file: !2059, line: 498, baseType: !2058, size: 64, offset: 128)
!10667 = !DILocalVariable(name: "i", scope: !10668, file: !3, line: 1260, type: !595)
!10668 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 1259, column: 5)
!10669 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1258, column: 7)
!10670 = !DILocalVariable(name: "nregs", scope: !10671, file: !3, line: 1320, type: !595)
!10671 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 1319, column: 5)
!10672 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 1317, column: 3)
!10673 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1317, column: 3)
!10674 = !DILocalVariable(name: "i", scope: !10671, file: !3, line: 1321, type: !595)
!10675 = !DILocation(line: 0, scope: !10646)
!10676 = !DILocation(line: 1213, column: 3, scope: !10646)
!10677 = !DILocation(line: 1214, column: 3, scope: !10646)
!10678 = !DILocation(line: 1216, column: 3, scope: !10646)
!10679 = !DILocation(line: 1219, column: 15, scope: !10646)
!10680 = !DILocation(line: 1223, column: 8, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1223, column: 7)
!10682 = !DILocation(line: 1223, column: 7, scope: !10646)
!10683 = !DILocation(line: 1226, column: 11, scope: !10646)
!10684 = !DILocation(line: 1229, column: 8, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1229, column: 7)
!10686 = !DILocation(line: 1229, column: 29, scope: !10685)
!10687 = !DILocation(line: 1229, column: 25, scope: !10685)
!10688 = !DILocation(line: 1232, column: 7, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1232, column: 7)
!10690 = !DILocation(line: 1232, column: 7, scope: !10646)
!10691 = !DILocation(line: 1233, column: 30, scope: !10689)
!10692 = !DILocation(line: 1233, column: 10, scope: !10689)
!10693 = !DILocation(line: 1233, column: 5, scope: !10689)
!10694 = !DILocation(line: 1237, column: 7, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1237, column: 7)
!10696 = !DILocation(line: 1238, column: 7, scope: !10695)
!10697 = !DILocation(line: 1238, column: 10, scope: !10695)
!10698 = !DILocation(line: 1240, column: 7, scope: !10695)
!10699 = !DILocation(line: 1240, column: 11, scope: !10695)
!10700 = !DILocation(line: 1240, column: 41, scope: !10695)
!10701 = !DILocation(line: 1240, column: 32, scope: !10695)
!10702 = !DILocation(line: 1244, column: 11, scope: !10695)
!10703 = !DILocation(line: 1244, column: 34, scope: !10695)
!10704 = !DILocation(line: 1244, column: 28, scope: !10695)
!10705 = !DILocation(line: 1246, column: 7, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 1245, column: 5)
!10707 = !DILocation(line: 1249, column: 17, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 1249, column: 11)
!10709 = !DILocation(line: 1249, column: 12, scope: !10708)
!10710 = !DILocation(line: 1249, column: 11, scope: !10706)
!10711 = !DILocation(line: 1250, column: 9, scope: !10708)
!10712 = !DILocation(line: 1258, column: 7, scope: !10669)
!10713 = !DILocation(line: 1258, column: 7, scope: !10646)
!10714 = !DILocation(line: 1262, column: 16, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 1262, column: 7)
!10716 = !DILocation(line: 0, scope: !10668)
!10717 = !DILocation(line: 1262, column: 12, scope: !10715)
!10718 = !DILocation(line: 0, scope: !10715)
!10719 = !DILocation(line: 1262, column: 7, scope: !10715)
!10720 = !DILocation(line: 1262, column: 64, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10715, file: !3, line: 1262, column: 7)
!10722 = !DILocation(line: 1263, column: 2, scope: !10721)
!10723 = !DILocation(line: 1262, column: 7, scope: !10721)
!10724 = distinct !{!10724, !10719, !10725}
!10725 = !DILocation(line: 1263, column: 2, scope: !10715)
!10726 = !DILocation(line: 1267, column: 16, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 1267, column: 7)
!10728 = !DILocation(line: 1267, column: 12, scope: !10727)
!10729 = !DILocation(line: 0, scope: !10727)
!10730 = !DILocation(line: 1267, column: 7, scope: !10727)
!10731 = !DILocation(line: 1268, column: 2, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10727, file: !3, line: 1267, column: 7)
!10733 = !DILocation(line: 1267, column: 69, scope: !10732)
!10734 = !DILocation(line: 1267, column: 7, scope: !10732)
!10735 = distinct !{!10735, !10730, !10736}
!10736 = !DILocation(line: 1268, column: 2, scope: !10727)
!10737 = !DILocation(line: 1280, column: 7, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1280, column: 7)
!10739 = !DILocation(line: 1281, column: 7, scope: !10738)
!10740 = !DILocation(line: 1281, column: 10, scope: !10738)
!10741 = !DILocation(line: 1280, column: 7, scope: !10646)
!10742 = !DILocation(line: 1282, column: 5, scope: !10738)
!10743 = !DILocation(line: 1288, column: 12, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1288, column: 7)
!10745 = !DILocation(line: 1288, column: 7, scope: !10744)
!10746 = !DILocation(line: 1288, column: 7, scope: !10646)
!10747 = !DILocation(line: 1289, column: 5, scope: !10744)
!10748 = !DILocation(line: 1294, column: 8, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1294, column: 7)
!10750 = !DILocation(line: 1294, column: 7, scope: !10646)
!10751 = !DILocation(line: 1299, column: 3, scope: !10646)
!10752 = !DILocation(line: 1302, column: 10, scope: !10646)
!10753 = !DILocation(line: 1305, column: 8, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1305, column: 7)
!10755 = !DILocation(line: 1305, column: 7, scope: !10646)
!10756 = !DILocation(line: 1306, column: 5, scope: !10754)
!10757 = !DILocation(line: 1307, column: 3, scope: !10646)
!10758 = !DILocation(line: 1311, column: 12, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1311, column: 7)
!10760 = !DILocation(line: 1311, column: 7, scope: !10759)
!10761 = !DILocation(line: 1311, column: 7, scope: !10646)
!10762 = !DILocation(line: 1313, column: 5, scope: !10759)
!10763 = !DILocation(line: 1317, column: 3, scope: !10673)
!10764 = !DILocation(line: 1317, column: 3, scope: !10672)
!10765 = !DILocation(line: 1323, column: 32, scope: !10671)
!10766 = !DILocation(line: 1323, column: 15, scope: !10671)
!10767 = !DILocation(line: 0, scope: !10671)
!10768 = !DILocation(line: 1324, column: 7, scope: !10671)
!10769 = !DILocation(line: 1326, column: 12, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 1326, column: 7)
!10771 = !DILocation(line: 0, scope: !10770)
!10772 = !DILocation(line: 1326, column: 29, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10770, file: !3, line: 1326, column: 7)
!10774 = !DILocation(line: 1326, column: 7, scope: !10770)
!10775 = !DILocation(line: 1327, column: 47, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 1327, column: 13)
!10777 = !DILocation(line: 1327, column: 52, scope: !10776)
!10778 = !DILocation(line: 1327, column: 60, scope: !10776)
!10779 = !DILocation(line: 1327, column: 15, scope: !10776)
!10780 = !DILocation(line: 1327, column: 13, scope: !10773)
!10781 = !DILocation(line: 1326, column: 7, scope: !10773)
!10782 = distinct !{!10782, !10774, !10783}
!10783 = !DILocation(line: 1328, column: 11, scope: !10770)
!10784 = !DILocation(line: 1330, column: 11, scope: !10671)
!10785 = !DILocation(line: 1331, column: 9, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 1330, column: 11)
!10787 = distinct !{!10787, !10763, !10788}
!10788 = !DILocation(line: 1333, column: 5, scope: !10673)
!10789 = !DILocation(line: 1335, column: 3, scope: !10646)
!10790 = !DILocation(line: 1341, column: 3, scope: !10646)
!10791 = !DILocation(line: 1342, column: 1, scope: !10646)
!10792 = distinct !DISubprogram(name: "undo_transformations", scope: !3, file: !3, line: 1916, type: !10793, scopeLine: 1917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10795)
!10793 = !DISubroutineType(types: !10794)
!10794 = !{null, !6277, !607}
!10795 = !{!10796, !10797, !10798, !10799, !10800, !10801, !10810, !10811, !10815, !10819, !10822, !10823, !10825, !10826, !10827}
!10796 = !DILocalVariable(name: "av_ptr", arg: 1, scope: !10792, file: !3, line: 1916, type: !6277)
!10797 = !DILocalVariable(name: "insn", arg: 2, scope: !10792, file: !3, line: 1916, type: !607)
!10798 = !DILocalVariable(name: "av_iter", scope: !10792, file: !3, line: 1918, type: !2188)
!10799 = !DILocalVariable(name: "expr", scope: !10792, file: !3, line: 1919, type: !1834)
!10800 = !DILocalVariable(name: "new_set", scope: !10792, file: !3, line: 1920, type: !1945)
!10801 = !DILocalVariable(name: "__j", scope: !10802, file: !3, line: 1934, type: !595)
!10802 = distinct !DILexicalBlock(scope: !10803, file: !3, line: 1934, column: 11)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 1934, column: 11)
!10804 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 1934, column: 11)
!10805 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 1933, column: 13)
!10806 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 1932, column: 7)
!10807 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 1925, column: 9)
!10808 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 1924, column: 3)
!10809 = distinct !DILexicalBlock(scope: !10792, file: !3, line: 1924, column: 3)
!10810 = !DILocalVariable(name: "__s", scope: !10802, file: !3, line: 1934, type: !597)
!10811 = !DILocalVariable(name: "index", scope: !10812, file: !3, line: 1942, type: !595)
!10812 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 1941, column: 5)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 1940, column: 3)
!10814 = distinct !DILexicalBlock(scope: !10792, file: !3, line: 1940, column: 3)
!10815 = !DILocalVariable(name: "phist", scope: !10816, file: !3, line: 1947, type: !10818)
!10816 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 1946, column: 9)
!10817 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 1945, column: 11)
!10818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!10819 = !DILocalVariable(name: "old_ds", scope: !10820, file: !3, line: 1957, type: !1868)
!10820 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 1956, column: 15)
!10821 = distinct !DILexicalBlock(scope: !10816, file: !3, line: 1954, column: 13)
!10822 = !DILocalVariable(name: "new_ds", scope: !10820, file: !3, line: 1957, type: !1868)
!10823 = !DILocalVariable(name: "_tmp_expr", scope: !10824, file: !3, line: 1979, type: !1836)
!10824 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 1978, column: 15)
!10825 = !DILocalVariable(name: "tmp_expr", scope: !10824, file: !3, line: 1979, type: !1835)
!10826 = !DILocalVariable(name: "new_vi", scope: !10824, file: !3, line: 1980, type: !1840)
!10827 = !DILocalVariable(name: "add", scope: !10824, file: !3, line: 1981, type: !594)
!10828 = !DILocation(line: 0, scope: !10792)
!10829 = !DILocation(line: 1918, column: 3, scope: !10792)
!10830 = !DILocation(line: 1919, column: 3, scope: !10792)
!10831 = !DILocation(line: 1920, column: 3, scope: !10792)
!10832 = !DILocation(line: 1920, column: 12, scope: !10792)
!10833 = !DILocation(line: 1924, column: 3, scope: !10809)
!10834 = !DILocation(line: 0, scope: !10808)
!10835 = !DILocation(line: 0, scope: !10807)
!10836 = !DILocation(line: 1924, column: 3, scope: !10808)
!10837 = !DILocation(line: 1925, column: 48, scope: !10807)
!10838 = !DILocation(line: 1925, column: 10, scope: !10807)
!10839 = !DILocation(line: 1926, column: 9, scope: !10807)
!10840 = !DILocation(line: 1926, column: 32, scope: !10807)
!10841 = !DILocation(line: 1927, column: 32, scope: !10807)
!10842 = !DILocation(line: 1926, column: 12, scope: !10807)
!10843 = !DILocation(line: 1931, column: 9, scope: !10807)
!10844 = !DILocation(line: 1931, column: 13, scope: !10807)
!10845 = !DILocation(line: 1925, column: 9, scope: !10808)
!10846 = !DILocation(line: 1933, column: 13, scope: !10805)
!10847 = !DILocation(line: 1933, column: 27, scope: !10805)
!10848 = !DILocation(line: 1933, column: 13, scope: !10806)
!10849 = !DILocation(line: 1934, column: 11, scope: !10803)
!10850 = !DILocation(line: 1934, column: 11, scope: !10804)
!10851 = !DILocation(line: 1934, column: 11, scope: !10802)
!10852 = !DILocation(line: 0, scope: !10802)
!10853 = !DILocation(line: 1936, column: 9, scope: !10806)
!10854 = !DILocation(line: 1937, column: 7, scope: !10806)
!10855 = distinct !{!10855, !10833, !10856}
!10856 = !DILocation(line: 1937, column: 7, scope: !10809)
!10857 = !DILocation(line: 1940, column: 3, scope: !10814)
!10858 = !DILocation(line: 0, scope: !10824)
!10859 = !DILocation(line: 0, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10824, file: !3, line: 1989, column: 21)
!10861 = !DILocation(line: 1940, column: 3, scope: !10813)
!10862 = !DILocation(line: 1942, column: 41, scope: !10812)
!10863 = !DILocation(line: 1943, column: 47, scope: !10812)
!10864 = !DILocation(line: 1942, column: 19, scope: !10812)
!10865 = !DILocation(line: 0, scope: !10812)
!10866 = !DILocation(line: 1945, column: 17, scope: !10817)
!10867 = !DILocation(line: 1945, column: 11, scope: !10812)
!10868 = !DILocation(line: 1949, column: 19, scope: !10816)
!10869 = !DILocation(line: 0, scope: !10816)
!10870 = !DILocation(line: 1953, column: 26, scope: !10816)
!10871 = !DILocation(line: 1953, column: 11, scope: !10816)
!10872 = !DILocation(line: 1967, column: 33, scope: !10820)
!10873 = !DILocation(line: 0, scope: !10820)
!10874 = !DILocation(line: 1968, column: 26, scope: !10820)
!10875 = !DILocation(line: 1970, column: 24, scope: !10820)
!10876 = !DILocation(line: 1971, column: 24, scope: !10820)
!10877 = !DILocation(line: 1972, column: 27, scope: !10820)
!10878 = !DILocation(line: 1972, column: 24, scope: !10820)
!10879 = !DILocation(line: 1974, column: 17, scope: !10820)
!10880 = !DILocation(line: 1974, column: 46, scope: !10820)
!10881 = !DILocation(line: 1979, column: 17, scope: !10824)
!10882 = !DILocation(line: 1983, column: 33, scope: !10824)
!10883 = !DILocation(line: 1985, column: 17, scope: !10824)
!10884 = !DILocation(line: 1987, column: 38, scope: !10824)
!10885 = !DILocation(line: 1987, column: 17, scope: !10824)
!10886 = !DILocation(line: 1989, column: 43, scope: !10860)
!10887 = !DILocation(line: 1990, column: 36, scope: !10860)
!10888 = !DILocation(line: 1989, column: 21, scope: !10860)
!10889 = !DILocation(line: 1989, column: 21, scope: !10824)
!10890 = !DILocation(line: 1991, column: 19, scope: !10860)
!10891 = !DILocation(line: 1996, column: 25, scope: !10860)
!10892 = !DILocation(line: 1997, column: 21, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10824, file: !3, line: 1997, column: 21)
!10894 = !DILocation(line: 1997, column: 21, scope: !10824)
!10895 = !DILocation(line: 1998, column: 19, scope: !10893)
!10896 = !DILocation(line: 1999, column: 17, scope: !10824)
!10897 = !DILocation(line: 2001, column: 15, scope: !10821)
!10898 = !DILocation(line: 2003, column: 15, scope: !10821)
!10899 = !DILocation(line: 2004, column: 13, scope: !10821)
!10900 = distinct !{!10900, !10857, !10901}
!10901 = !DILocation(line: 2007, column: 5, scope: !10814)
!10902 = !DILocation(line: 2009, column: 3, scope: !10792)
!10903 = !DILocation(line: 2010, column: 1, scope: !10792)
!10904 = distinct !DISubprogram(name: "code_motion_path_driver_cleanup", scope: !3, file: !3, line: 6384, type: !10905, scopeLine: 6385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10907)
!10905 = !DISubroutineType(types: !10906)
!10906 = !{null, !6277, !7272}
!10907 = !{!10908, !10909}
!10908 = !DILocalVariable(name: "orig_ops_p", arg: 1, scope: !10904, file: !3, line: 6384, type: !6277)
!10909 = !DILocalVariable(name: "path_p", arg: 2, scope: !10904, file: !3, line: 6384, type: !7272)
!10910 = !DILocation(line: 0, scope: !10904)
!10911 = !DILocation(line: 6386, column: 3, scope: !10904)
!10912 = !DILocation(line: 6387, column: 3, scope: !10904)
!10913 = !DILocation(line: 6388, column: 1, scope: !10904)
!10914 = distinct !DISubprogram(name: "code_motion_process_successors", scope: !3, file: !3, line: 6296, type: !10915, scopeLine: 6298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10917)
!10915 = !DISubroutineType(types: !10916)
!10916 = !{!595, !1911, !1945, !1942, !599}
!10917 = !{!10918, !10919, !10920, !10921, !10922, !10923, !10924, !10925, !10926, !10927, !10928, !10929, !10930, !10934}
!10918 = !DILocalVariable(name: "insn", arg: 1, scope: !10914, file: !3, line: 6296, type: !1911)
!10919 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !10914, file: !3, line: 6296, type: !1945)
!10920 = !DILocalVariable(name: "path", arg: 3, scope: !10914, file: !3, line: 6297, type: !1942)
!10921 = !DILocalVariable(name: "static_params", arg: 4, scope: !10914, file: !3, line: 6297, type: !599)
!10922 = !DILocalVariable(name: "res", scope: !10914, file: !3, line: 6299, type: !595)
!10923 = !DILocalVariable(name: "succ_i", scope: !10914, file: !3, line: 6300, type: !3600)
!10924 = !DILocalVariable(name: "succ", scope: !10914, file: !3, line: 6301, type: !607)
!10925 = !DILocalVariable(name: "bb", scope: !10914, file: !3, line: 6302, type: !1141)
!10926 = !DILocalVariable(name: "old_index", scope: !10914, file: !3, line: 6303, type: !595)
!10927 = !DILocalVariable(name: "old_succs", scope: !10914, file: !3, line: 6304, type: !7)
!10928 = !DILocalVariable(name: "lparams", scope: !10914, file: !3, line: 6306, type: !2076)
!10929 = !DILocalVariable(name: "_x", scope: !10914, file: !3, line: 6307, type: !1836)
!10930 = !DILocalVariable(name: "b", scope: !10931, file: !3, line: 6328, type: !595)
!10931 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 6327, column: 5)
!10932 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 6326, column: 3)
!10933 = distinct !DILexicalBlock(scope: !10914, file: !3, line: 6326, column: 3)
!10934 = !DILabel(scope: !10914, name: "rescan", file: !3, line: 6321)
!10935 = !DILocation(line: 0, scope: !10914)
!10936 = !DILocation(line: 6300, column: 3, scope: !10914)
!10937 = !DILocation(line: 6301, column: 3, scope: !10914)
!10938 = !DILocation(line: 6306, column: 3, scope: !10914)
!10939 = !DILocation(line: 6307, column: 3, scope: !10914)
!10940 = !DILocation(line: 6309, column: 11, scope: !10914)
!10941 = !DILocation(line: 6309, column: 24, scope: !10914)
!10942 = !DILocation(line: 6310, column: 11, scope: !10914)
!10943 = !DILocation(line: 6310, column: 25, scope: !10914)
!10944 = !DILocation(line: 0, scope: !10933)
!10945 = !DILocation(line: 0, scope: !10931)
!10946 = !DILocation(line: 0, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 6335, column: 11)
!10948 = !DILocation(line: 6310, column: 3, scope: !10914)
!10949 = !DILocation(line: 0, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 6345, column: 11)
!10951 = !DILocation(line: 6324, column: 15, scope: !10914)
!10952 = !DILocation(line: 6321, column: 2, scope: !10914)
!10953 = !DILocation(line: 6322, column: 8, scope: !10914)
!10954 = !DILocation(line: 6323, column: 19, scope: !10914)
!10955 = !DILocation(line: 6326, column: 3, scope: !10933)
!10956 = !DILocation(line: 6326, column: 3, scope: !10932)
!10957 = !DILocation(line: 6330, column: 27, scope: !10931)
!10958 = !DILocation(line: 6330, column: 18, scope: !10931)
!10959 = !DILocation(line: 6331, column: 27, scope: !10931)
!10960 = !DILocation(line: 6331, column: 18, scope: !10931)
!10961 = !DILocation(line: 6335, column: 18, scope: !10947)
!10962 = !DILocation(line: 6335, column: 32, scope: !10947)
!10963 = !DILocation(line: 6335, column: 11, scope: !10931)
!10964 = !DILocation(line: 6336, column: 31, scope: !10947)
!10965 = !DILocation(line: 6336, column: 6, scope: !10947)
!10966 = !DILocation(line: 6336, column: 2, scope: !10947)
!10967 = !DILocation(line: 6343, column: 7, scope: !10931)
!10968 = !DILocation(line: 6343, column: 37, scope: !10931)
!10969 = !DILocation(line: 6343, column: 56, scope: !10931)
!10970 = !DILocation(line: 6345, column: 11, scope: !10931)
!10971 = !DILocation(line: 6347, column: 31, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 6347, column: 16)
!10973 = !DILocation(line: 6347, column: 16, scope: !10950)
!10974 = !DILocation(line: 6352, column: 11, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 6352, column: 11)
!10976 = !DILocation(line: 6352, column: 34, scope: !10975)
!10977 = !DILocation(line: 6352, column: 40, scope: !10975)
!10978 = !DILocation(line: 6353, column: 11, scope: !10975)
!10979 = !DILocation(line: 6353, column: 14, scope: !10975)
!10980 = !DILocation(line: 6353, column: 37, scope: !10975)
!10981 = !DILocation(line: 6352, column: 11, scope: !10931)
!10982 = distinct !{!10982, !10955, !10983}
!10983 = !DILocation(line: 6355, column: 5, scope: !10933)
!10984 = !DILocation(line: 6373, column: 11, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10914, file: !3, line: 6373, column: 7)
!10986 = !DILocation(line: 6373, column: 17, scope: !10985)
!10987 = !DILocation(line: 6373, column: 20, scope: !10985)
!10988 = !DILocation(line: 6373, column: 50, scope: !10985)
!10989 = !DILocation(line: 6373, column: 7, scope: !10914)
!10990 = !DILocation(line: 6374, column: 5, scope: !10985)
!10991 = !DILocation(line: 6377, column: 1, scope: !10914)
!10992 = !DILocation(line: 6376, column: 3, scope: !10914)
!10993 = distinct !DISubprogram(name: "identical_copy_p", scope: !3, file: !3, line: 1893, type: !4099, scopeLine: 1894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10994)
!10994 = !{!10995, !10996, !10997, !10998}
!10995 = !DILocalVariable(name: "insn", arg: 1, scope: !10993, file: !3, line: 1893, type: !607)
!10996 = !DILocalVariable(name: "lhs", scope: !10993, file: !3, line: 1895, type: !607)
!10997 = !DILocalVariable(name: "rhs", scope: !10993, file: !3, line: 1895, type: !607)
!10998 = !DILocalVariable(name: "pat", scope: !10993, file: !3, line: 1895, type: !607)
!10999 = !DILocation(line: 0, scope: !10993)
!11000 = !DILocation(line: 1897, column: 9, scope: !10993)
!11001 = !DILocation(line: 1899, column: 7, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1899, column: 7)
!11003 = !DILocation(line: 1899, column: 22, scope: !11002)
!11004 = !DILocation(line: 1899, column: 7, scope: !10993)
!11005 = !DILocation(line: 1902, column: 9, scope: !10993)
!11006 = !DILocation(line: 1903, column: 8, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1903, column: 7)
!11008 = !DILocation(line: 1903, column: 7, scope: !10993)
!11009 = !DILocation(line: 1906, column: 9, scope: !10993)
!11010 = !DILocation(line: 1907, column: 8, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1907, column: 7)
!11012 = !DILocation(line: 1907, column: 7, scope: !10993)
!11013 = !DILocation(line: 1910, column: 10, scope: !10993)
!11014 = !DILocation(line: 1910, column: 25, scope: !10993)
!11015 = !DILocation(line: 1910, column: 22, scope: !10993)
!11016 = !DILocation(line: 1910, column: 3, scope: !10993)
!11017 = !DILocation(line: 1911, column: 1, scope: !10993)
!11018 = distinct !DISubprogram(name: "VEC_expr_history_def_base_index", scope: !398, file: !398, line: 101, type: !11019, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11022)
!11019 = !DISubroutineType(types: !11020)
!11020 = !{!10818, !11021, !7}
!11021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64)
!11022 = !{!11023, !11024}
!11023 = !DILocalVariable(name: "vec_", arg: 1, scope: !11018, file: !398, line: 101, type: !11021)
!11024 = !DILocalVariable(name: "ix_", arg: 2, scope: !11018, file: !398, line: 101, type: !7)
!11025 = !DILocation(line: 0, scope: !11018)
!11026 = !DILocation(line: 101, column: 1, scope: !11018)
!11027 = distinct !DISubprogram(name: "get_reg_class", scope: !3, file: !3, line: 1027, type: !11028, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11030)
!11028 = !DISubroutineType(types: !11029)
!11029 = !{!562, !607}
!11030 = !{!11031, !11032, !11033, !11034, !11035, !11039, !11046, !11047, !11048, !11054}
!11031 = !DILocalVariable(name: "insn", arg: 1, scope: !11027, file: !3, line: 1027, type: !607)
!11032 = !DILocalVariable(name: "alt", scope: !11027, file: !3, line: 1029, type: !595)
!11033 = !DILocalVariable(name: "i", scope: !11027, file: !3, line: 1029, type: !595)
!11034 = !DILocalVariable(name: "n_ops", scope: !11027, file: !3, line: 1029, type: !595)
!11035 = !DILocalVariable(name: "matches", scope: !11036, file: !3, line: 1040, type: !595)
!11036 = distinct !DILexicalBlock(scope: !11037, file: !3, line: 1039, column: 5)
!11037 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 1038, column: 3)
!11038 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 1038, column: 3)
!11039 = !DILocalVariable(name: "loc", scope: !11040, file: !3, line: 1050, type: !4934)
!11040 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 1049, column: 4)
!11041 = distinct !DILexicalBlock(scope: !11042, file: !3, line: 1048, column: 6)
!11042 = distinct !DILexicalBlock(scope: !11043, file: !3, line: 1047, column: 7)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 1047, column: 7)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !3, line: 1046, column: 5)
!11045 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 1045, column: 7)
!11046 = !DILocalVariable(name: "op", scope: !11040, file: !3, line: 1051, type: !607)
!11047 = !DILocalVariable(name: "cl", scope: !11040, file: !3, line: 1052, type: !562)
!11048 = !DILocalVariable(name: "opn", scope: !11049, file: !3, line: 1065, type: !595)
!11049 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 1064, column: 8)
!11050 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 1063, column: 7)
!11051 = distinct !DILexicalBlock(scope: !11052, file: !3, line: 1063, column: 7)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 1062, column: 5)
!11053 = distinct !DILexicalBlock(scope: !11045, file: !3, line: 1061, column: 12)
!11054 = !DILocalVariable(name: "cl", scope: !11049, file: !3, line: 1066, type: !562)
!11055 = !DILocation(line: 0, scope: !11027)
!11056 = !DILocation(line: 1031, column: 3, scope: !11027)
!11057 = !DILocation(line: 1032, column: 9, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 1032, column: 7)
!11059 = !DILocation(line: 1032, column: 7, scope: !11027)
!11060 = !DILocation(line: 1033, column: 5, scope: !11058)
!11061 = !DILocation(line: 1034, column: 3, scope: !11027)
!11062 = !DILocation(line: 1035, column: 9, scope: !11027)
!11063 = !DILocation(line: 1036, column: 22, scope: !11027)
!11064 = !DILocation(line: 0, scope: !11036)
!11065 = !DILocation(line: 1038, column: 8, scope: !11038)
!11066 = !DILocation(line: 0, scope: !11038)
!11067 = !DILocation(line: 1038, column: 17, scope: !11037)
!11068 = !DILocation(line: 1038, column: 3, scope: !11038)
!11069 = !DILocation(line: 1040, column: 42, scope: !11036)
!11070 = !DILocation(line: 1041, column: 19, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 1041, column: 11)
!11072 = !DILocation(line: 1041, column: 11, scope: !11036)
!11073 = !DILocation(line: 1042, column: 28, scope: !11071)
!11074 = !DILocation(line: 1042, column: 55, scope: !11071)
!11075 = !DILocation(line: 1042, column: 23, scope: !11071)
!11076 = !DILocation(line: 1042, column: 26, scope: !11071)
!11077 = !DILocation(line: 1042, column: 2, scope: !11071)
!11078 = !DILocation(line: 1038, column: 26, scope: !11037)
!11079 = !DILocation(line: 1038, column: 3, scope: !11037)
!11080 = distinct !{!11080, !11068, !11081}
!11081 = !DILocation(line: 1043, column: 5, scope: !11038)
!11082 = !DILocation(line: 1036, column: 11, scope: !11027)
!11083 = !DILocation(line: 1045, column: 22, scope: !11045)
!11084 = !DILocation(line: 1045, column: 7, scope: !11045)
!11085 = !DILocation(line: 1045, column: 38, scope: !11045)
!11086 = !DILocation(line: 1045, column: 7, scope: !11027)
!11087 = !DILocation(line: 1047, column: 7, scope: !11043)
!11088 = !DILocation(line: 0, scope: !11043)
!11089 = !DILocation(line: 1047, column: 21, scope: !11042)
!11090 = !DILocation(line: 1048, column: 6, scope: !11041)
!11091 = !DILocation(line: 1048, column: 33, scope: !11041)
!11092 = !DILocation(line: 1048, column: 6, scope: !11042)
!11093 = !DILocation(line: 1050, column: 17, scope: !11040)
!11094 = !DILocation(line: 0, scope: !11040)
!11095 = !DILocation(line: 1051, column: 15, scope: !11040)
!11096 = !DILocation(line: 1052, column: 47, scope: !11040)
!11097 = !DILocation(line: 1054, column: 10, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11040, file: !3, line: 1054, column: 10)
!11099 = !DILocation(line: 1055, column: 3, scope: !11098)
!11100 = !DILocation(line: 1055, column: 6, scope: !11098)
!11101 = !DILocation(line: 1055, column: 20, scope: !11098)
!11102 = !DILocation(line: 1055, column: 17, scope: !11098)
!11103 = !DILocation(line: 1054, column: 10, scope: !11040)
!11104 = !DILocation(line: 1058, column: 6, scope: !11040)
!11105 = !DILocation(line: 1047, column: 31, scope: !11042)
!11106 = !DILocation(line: 1047, column: 7, scope: !11042)
!11107 = distinct !{!11107, !11087, !11108}
!11108 = !DILocation(line: 1059, column: 4, scope: !11043)
!11109 = !DILocation(line: 1061, column: 13, scope: !11053)
!11110 = !DILocation(line: 1061, column: 12, scope: !11045)
!11111 = !DILocation(line: 0, scope: !11050)
!11112 = !DILocation(line: 1063, column: 7, scope: !11051)
!11113 = !DILocation(line: 0, scope: !11051)
!11114 = !DILocation(line: 1063, column: 21, scope: !11050)
!11115 = !DILocation(line: 1065, column: 15, scope: !11049)
!11116 = !DILocation(line: 1065, column: 13, scope: !11049)
!11117 = !DILocation(line: 1065, column: 50, scope: !11049)
!11118 = !DILocation(line: 1065, column: 29, scope: !11049)
!11119 = !DILocation(line: 1066, column: 23, scope: !11049)
!11120 = !DILocation(line: 1066, column: 46, scope: !11049)
!11121 = !DILocation(line: 0, scope: !11049)
!11122 = !DILocation(line: 1068, column: 7, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11049, file: !3, line: 1068, column: 7)
!11124 = !DILocation(line: 1068, column: 36, scope: !11123)
!11125 = !DILocation(line: 1068, column: 46, scope: !11123)
!11126 = !DILocation(line: 1069, column: 36, scope: !11123)
!11127 = !DILocation(line: 1068, column: 7, scope: !11049)
!11128 = !DILocation(line: 1063, column: 51, scope: !11050)
!11129 = !DILocation(line: 1063, column: 7, scope: !11050)
!11130 = distinct !{!11130, !11112, !11131}
!11131 = !DILocation(line: 1071, column: 8, scope: !11051)
!11132 = !DILocation(line: 1079, column: 1, scope: !11027)
!11133 = distinct !DISubprogram(name: "init_regs_for_mode", scope: !3, file: !3, line: 1122, type: !11134, scopeLine: 1123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11136)
!11134 = !DISubroutineType(types: !11135)
!11135 = !{null, !5}
!11136 = !{!11137, !11138, !11139, !11143}
!11137 = !DILocalVariable(name: "mode", arg: 1, scope: !11133, file: !3, line: 1122, type: !5)
!11138 = !DILocalVariable(name: "cur_reg", scope: !11133, file: !3, line: 1124, type: !595)
!11139 = !DILocalVariable(name: "nregs", scope: !11140, file: !3, line: 1131, type: !595)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !3, line: 1130, column: 5)
!11141 = distinct !DILexicalBlock(scope: !11142, file: !3, line: 1129, column: 3)
!11142 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 1129, column: 3)
!11143 = !DILocalVariable(name: "i", scope: !11140, file: !3, line: 1132, type: !595)
!11144 = !DILocation(line: 0, scope: !11133)
!11145 = !DILocation(line: 1126, column: 3, scope: !11133)
!11146 = !DILocation(line: 1127, column: 3, scope: !11133)
!11147 = !DILocation(line: 1129, column: 8, scope: !11142)
!11148 = !DILocation(line: 0, scope: !11142)
!11149 = !DILocation(line: 1129, column: 29, scope: !11141)
!11150 = !DILocation(line: 1129, column: 3, scope: !11142)
!11151 = !DILocation(line: 1131, column: 19, scope: !11140)
!11152 = !DILocation(line: 0, scope: !11140)
!11153 = !DILocation(line: 0, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !3, line: 1135, column: 13)
!11155 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 1134, column: 7)
!11156 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 1134, column: 7)
!11157 = !DILocation(line: 1134, column: 12, scope: !11156)
!11158 = !DILocation(line: 0, scope: !11156)
!11159 = !DILocation(line: 1134, column: 29, scope: !11155)
!11160 = !DILocation(line: 1134, column: 7, scope: !11156)
!11161 = !DILocation(line: 1135, column: 32, scope: !11154)
!11162 = !DILocation(line: 1135, column: 13, scope: !11154)
!11163 = !DILocation(line: 1136, column: 17, scope: !11154)
!11164 = !DILocation(line: 1136, column: 20, scope: !11154)
!11165 = !DILocation(line: 1139, column: 13, scope: !11154)
!11166 = !DILocation(line: 1139, column: 17, scope: !11154)
!11167 = !DILocation(line: 1135, column: 13, scope: !11155)
!11168 = !DILocation(line: 1134, column: 7, scope: !11155)
!11169 = distinct !{!11169, !11160, !11170}
!11170 = !DILocation(line: 1147, column: 11, scope: !11156)
!11171 = !DILocation(line: 1149, column: 11, scope: !11140)
!11172 = !DILocation(line: 1154, column: 13, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 1154, column: 11)
!11174 = !DILocation(line: 1154, column: 11, scope: !11140)
!11175 = !DILocation(line: 1163, column: 7, scope: !11140)
!11176 = !DILocation(line: 1164, column: 5, scope: !11141)
!11177 = !DILocation(line: 1129, column: 61, scope: !11141)
!11178 = !DILocation(line: 1129, column: 3, scope: !11141)
!11179 = distinct !{!11179, !11150, !11180}
!11180 = !DILocation(line: 1164, column: 5, scope: !11142)
!11181 = !DILocation(line: 1166, column: 3, scope: !11133)
!11182 = !DILocation(line: 1166, column: 34, scope: !11133)
!11183 = !DILocation(line: 1167, column: 1, scope: !11133)
!11184 = distinct !DISubprogram(name: "hard_reg_set_iter_init", scope: !2059, file: !2059, line: 506, type: !11185, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11188)
!11185 = !DISubroutineType(types: !11186)
!11186 = !{null, !11187, !2058, !7, !7320}
!11187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10659, size: 64)
!11188 = !{!11189, !11190, !11191, !11192}
!11189 = !DILocalVariable(name: "iter", arg: 1, scope: !11184, file: !2059, line: 506, type: !11187)
!11190 = !DILocalVariable(name: "set", arg: 2, scope: !11184, file: !2059, line: 506, type: !2058)
!11191 = !DILocalVariable(name: "min", arg: 3, scope: !11184, file: !2059, line: 507, type: !7)
!11192 = !DILocalVariable(name: "regno", arg: 4, scope: !11184, file: !2059, line: 507, type: !7320)
!11193 = !DILocation(line: 0, scope: !11184)
!11194 = !DILocation(line: 513, column: 9, scope: !11184)
!11195 = !DILocation(line: 513, column: 14, scope: !11184)
!11196 = !DILocation(line: 514, column: 9, scope: !11184)
!11197 = !DILocation(line: 514, column: 16, scope: !11184)
!11198 = !DILocation(line: 516, column: 9, scope: !11184)
!11199 = !DILocation(line: 516, column: 17, scope: !11184)
!11200 = !DILocation(line: 517, column: 7, scope: !11184)
!11201 = !DILocation(line: 520, column: 13, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !2059, line: 518, column: 5)
!11203 = distinct !DILexicalBlock(scope: !11184, file: !2059, line: 517, column: 7)
!11204 = !DILocation(line: 520, column: 18, scope: !11202)
!11205 = !DILocation(line: 523, column: 14, scope: !11202)
!11206 = !DILocation(line: 524, column: 5, scope: !11202)
!11207 = !DILocation(line: 525, column: 10, scope: !11184)
!11208 = !DILocation(line: 526, column: 1, scope: !11184)
!11209 = distinct !DISubprogram(name: "hard_reg_set_iter_set", scope: !2059, file: !2059, line: 529, type: !11210, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11212)
!11210 = !DISubroutineType(types: !11211)
!11211 = !{!594, !11187, !7320}
!11212 = !{!11213, !11214}
!11213 = !DILocalVariable(name: "iter", arg: 1, scope: !11209, file: !2059, line: 529, type: !11187)
!11214 = !DILocalVariable(name: "regno", arg: 2, scope: !11209, file: !2059, line: 529, type: !7320)
!11215 = !DILocation(line: 0, scope: !11209)
!11216 = !DILocation(line: 0, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11218, file: !2059, line: 534, column: 11)
!11218 = distinct !DILexicalBlock(scope: !11209, file: !2059, line: 532, column: 5)
!11219 = !DILocation(line: 0, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11218, file: !2059, line: 537, column: 11)
!11221 = !DILocation(line: 0, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11218, file: !2059, line: 554, column: 9)
!11223 = !DILocation(line: 534, column: 17, scope: !11217)
!11224 = !DILocation(line: 534, column: 34, scope: !11217)
!11225 = !DILocation(line: 531, column: 3, scope: !11209)
!11226 = !DILocation(line: 534, column: 25, scope: !11217)
!11227 = !DILocation(line: 534, column: 11, scope: !11218)
!11228 = !DILocation(line: 537, column: 17, scope: !11220)
!11229 = !DILocation(line: 537, column: 11, scope: !11220)
!11230 = !DILocation(line: 537, column: 11, scope: !11218)
!11231 = !DILocation(line: 540, column: 11, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11220, file: !2059, line: 538, column: 9)
!11233 = !DILocation(line: 540, column: 26, scope: !11232)
!11234 = !DILocation(line: 540, column: 31, scope: !11232)
!11235 = !DILocation(line: 540, column: 18, scope: !11232)
!11236 = !DILocation(line: 542, column: 26, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11232, file: !2059, line: 541, column: 13)
!11238 = !DILocation(line: 543, column: 22, scope: !11237)
!11239 = distinct !{!11239, !11231, !11240}
!11240 = !DILocation(line: 544, column: 13, scope: !11232)
!11241 = !DILocation(line: 545, column: 19, scope: !11232)
!11242 = !DILocation(line: 545, column: 26, scope: !11232)
!11243 = !DILocation(line: 545, column: 18, scope: !11232)
!11244 = !DILocation(line: 545, column: 11, scope: !11232)
!11245 = !DILocation(line: 549, column: 17, scope: !11218)
!11246 = !DILocation(line: 549, column: 44, scope: !11218)
!11247 = !DILocation(line: 550, column: 14, scope: !11218)
!11248 = !DILocation(line: 553, column: 7, scope: !11218)
!11249 = !DILocation(line: 0, scope: !11218)
!11250 = !DILocation(line: 553, column: 14, scope: !11218)
!11251 = !DILocation(line: 553, column: 38, scope: !11218)
!11252 = !DILocation(line: 553, column: 30, scope: !11218)
!11253 = !DILocation(line: 555, column: 30, scope: !11222)
!11254 = !DILocation(line: 555, column: 24, scope: !11222)
!11255 = !DILocation(line: 555, column: 22, scope: !11222)
!11256 = !DILocation(line: 556, column: 15, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11222, file: !2059, line: 556, column: 15)
!11258 = !DILocation(line: 556, column: 15, scope: !11222)
!11259 = !DILocation(line: 558, column: 18, scope: !11222)
!11260 = distinct !{!11260, !11248, !11261}
!11261 = !DILocation(line: 559, column: 9, scope: !11218)
!11262 = distinct !{!11262, !11225, !11263}
!11263 = !DILocation(line: 560, column: 5, scope: !11209)
!11264 = !DILocation(line: 561, column: 1, scope: !11209)
!11265 = distinct !DISubprogram(name: "sel_hard_regno_rename_ok", scope: !3, file: !3, line: 1105, type: !11266, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11268)
!11266 = !DISubroutineType(types: !11267)
!11267 = !{!594, !595, !595}
!11268 = !{!11269, !11270}
!11269 = !DILocalVariable(name: "from", arg: 1, scope: !11265, file: !3, line: 1105, type: !595)
!11270 = !DILocalVariable(name: "to", arg: 2, scope: !11265, file: !3, line: 1105, type: !595)
!11271 = !DILocation(line: 0, scope: !11265)
!11272 = !DILocation(line: 1109, column: 7, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11265, file: !3, line: 1109, column: 7)
!11274 = !DILocation(line: 1109, column: 7, scope: !11265)
!11275 = !DILocation(line: 1110, column: 12, scope: !11273)
!11276 = !DILocation(line: 1110, column: 5, scope: !11273)
!11277 = !DILocation(line: 1112, column: 3, scope: !11265)
!11278 = !DILocation(line: 1114, column: 10, scope: !11265)
!11279 = !DILocation(line: 1114, column: 3, scope: !11265)
!11280 = !DILocation(line: 1118, column: 1, scope: !11265)
!11281 = distinct !DISubprogram(name: "hard_reg_set_iter_next", scope: !2059, file: !2059, line: 564, type: !11282, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11284)
!11282 = !DISubroutineType(types: !11283)
!11283 = !{null, !11187, !7320}
!11284 = !{!11285, !11286}
!11285 = !DILocalVariable(name: "iter", arg: 1, scope: !11281, file: !2059, line: 564, type: !11187)
!11286 = !DILocalVariable(name: "regno", arg: 2, scope: !11281, file: !2059, line: 564, type: !7320)
!11287 = !DILocation(line: 0, scope: !11281)
!11288 = !DILocation(line: 566, column: 9, scope: !11281)
!11289 = !DILocation(line: 566, column: 14, scope: !11281)
!11290 = !DILocation(line: 567, column: 10, scope: !11281)
!11291 = !DILocation(line: 568, column: 1, scope: !11281)
!11292 = distinct !DISubprogram(name: "init_hard_regno_rename", scope: !3, file: !3, line: 1084, type: !3337, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11293)
!11293 = !{!11294, !11295}
!11294 = !DILocalVariable(name: "regno", arg: 1, scope: !11292, file: !3, line: 1084, type: !595)
!11295 = !DILocalVariable(name: "cur_reg", scope: !11292, file: !3, line: 1086, type: !595)
!11296 = !DILocation(line: 0, scope: !11292)
!11297 = !DILocation(line: 1088, column: 3, scope: !11292)
!11298 = !DILocation(line: 0, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 1096, column: 11)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 1091, column: 5)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !3, line: 1090, column: 3)
!11302 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 1090, column: 3)
!11303 = !DILocation(line: 1090, column: 8, scope: !11302)
!11304 = !DILocation(line: 1096, column: 11, scope: !11300)
!11305 = !DILocation(line: 1099, column: 1, scope: !11292)
!11306 = !DILocation(line: 1090, column: 29, scope: !11301)
!11307 = !DILocation(line: 1090, column: 3, scope: !11302)
!11308 = !DILocation(line: 1093, column: 12, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 1093, column: 11)
!11310 = !DILocation(line: 1093, column: 11, scope: !11300)
!11311 = !DILocation(line: 1097, column: 9, scope: !11299)
!11312 = !DILocation(line: 1090, column: 61, scope: !11301)
!11313 = !DILocation(line: 1090, column: 3, scope: !11301)
!11314 = distinct !{!11314, !11307, !11315}
!11315 = !DILocation(line: 1098, column: 5, scope: !11302)
!11316 = distinct !DISubprogram(name: "choose_best_reg_1", scope: !3, file: !3, line: 1379, type: !9992, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11317)
!11317 = !{!11318, !11319, !11320, !11321, !11322, !11323, !11324, !11325, !11326, !11327, !11328, !11329, !11330, !11331}
!11318 = !DILocalVariable(name: "hard_regs_used", arg: 1, scope: !11316, file: !3, line: 1379, type: !2058)
!11319 = !DILocalVariable(name: "reg_rename_p", arg: 2, scope: !11316, file: !3, line: 1380, type: !9904)
!11320 = !DILocalVariable(name: "original_insns", arg: 3, scope: !11316, file: !3, line: 1381, type: !2032)
!11321 = !DILocalVariable(name: "is_orig_reg_p_ptr", arg: 4, scope: !11316, file: !3, line: 1381, type: !593)
!11322 = !DILocalVariable(name: "best_new_reg", scope: !11316, file: !3, line: 1383, type: !595)
!11323 = !DILocalVariable(name: "cur_reg", scope: !11316, file: !3, line: 1384, type: !7)
!11324 = !DILocalVariable(name: "mode", scope: !11316, file: !3, line: 1385, type: !5)
!11325 = !DILocalVariable(name: "regno", scope: !11316, file: !3, line: 1386, type: !7)
!11326 = !DILocalVariable(name: "i", scope: !11316, file: !3, line: 1386, type: !7)
!11327 = !DILocalVariable(name: "n", scope: !11316, file: !3, line: 1386, type: !7)
!11328 = !DILocalVariable(name: "hrsi", scope: !11316, file: !3, line: 1387, type: !10659)
!11329 = !DILocalVariable(name: "di", scope: !11316, file: !3, line: 1388, type: !10013)
!11330 = !DILocalVariable(name: "def", scope: !11316, file: !3, line: 1389, type: !10015)
!11331 = !DILocalVariable(name: "orig_dest", scope: !11332, file: !3, line: 1396, type: !607)
!11332 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 1395, column: 5)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 1394, column: 3)
!11334 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 1394, column: 3)
!11335 = !DILocation(line: 0, scope: !11316)
!11336 = !DILocation(line: 1384, column: 3, scope: !11316)
!11337 = !DILocation(line: 1387, column: 3, scope: !11316)
!11338 = !DILocation(line: 1388, column: 3, scope: !11316)
!11339 = !DILocation(line: 1389, column: 3, scope: !11316)
!11340 = !DILocation(line: 1392, column: 22, scope: !11316)
!11341 = !DILocation(line: 1394, column: 3, scope: !11334)
!11342 = !DILocation(line: 0, scope: !11333)
!11343 = !DILocation(line: 1394, column: 3, scope: !11333)
!11344 = !DILocation(line: 1396, column: 23, scope: !11332)
!11345 = !DILocation(line: 0, scope: !11332)
!11346 = !DILocation(line: 1398, column: 7, scope: !11332)
!11347 = !DILocation(line: 1404, column: 16, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 1404, column: 11)
!11349 = !DILocation(line: 1404, column: 11, scope: !11332)
!11350 = !DILocation(line: 1406, column: 7, scope: !11332)
!11351 = !DILocation(line: 1405, column: 16, scope: !11348)
!11352 = !DILocation(line: 1405, column: 9, scope: !11348)
!11353 = !DILocation(line: 1408, column: 15, scope: !11332)
!11354 = !DILocation(line: 1409, column: 23, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 1409, column: 7)
!11356 = !DILocation(line: 1409, column: 56, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 1409, column: 7)
!11358 = !DILocation(line: 1409, column: 12, scope: !11355)
!11359 = !DILocation(line: 0, scope: !11355)
!11360 = !DILocation(line: 1409, column: 7, scope: !11355)
!11361 = !DILocation(line: 1410, column: 13, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11357, file: !3, line: 1410, column: 13)
!11363 = !DILocation(line: 1410, column: 13, scope: !11357)
!11364 = !DILocation(line: 1409, column: 62, scope: !11357)
!11365 = !DILocation(line: 1409, column: 7, scope: !11357)
!11366 = distinct !{!11366, !11360, !11367}
!11367 = !DILocation(line: 1411, column: 11, scope: !11355)
!11368 = !DILocation(line: 1414, column: 13, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 1414, column: 11)
!11370 = !DILocation(line: 1414, column: 11, scope: !11332)
!11371 = !DILocation(line: 1416, column: 11, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 1415, column: 9)
!11373 = !DILocation(line: 1419, column: 18, scope: !11372)
!11374 = !DILocation(line: 1419, column: 11, scope: !11372)
!11375 = distinct !{!11375, !11341, !11376}
!11376 = !DILocation(line: 1421, column: 5, scope: !11334)
!11377 = !DILocation(line: 1423, column: 22, scope: !11316)
!11378 = !DILocation(line: 1428, column: 3, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 1428, column: 3)
!11380 = !DILocation(line: 0, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 1433, column: 2)
!11382 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 1431, column: 7)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 1430, column: 9)
!11384 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 1428, column: 3)
!11385 = !DILocation(line: 1424, column: 16, scope: !11316)
!11386 = !DILocation(line: 1428, column: 3, scope: !11384)
!11387 = !DILocation(line: 1430, column: 11, scope: !11383)
!11388 = !DILocation(line: 1430, column: 9, scope: !11384)
!11389 = !DILocation(line: 1433, column: 18, scope: !11381)
!11390 = !DILocation(line: 1433, column: 7, scope: !11381)
!11391 = !DILocation(line: 1433, column: 53, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 1433, column: 2)
!11393 = !DILocation(line: 1433, column: 2, scope: !11381)
!11394 = !DILocation(line: 1434, column: 8, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11392, file: !3, line: 1434, column: 8)
!11396 = !DILocation(line: 1435, column: 8, scope: !11395)
!11397 = !DILocation(line: 1435, column: 12, scope: !11395)
!11398 = !DILocation(line: 1434, column: 8, scope: !11392)
!11399 = !DILocation(line: 1433, column: 59, scope: !11392)
!11400 = !DILocation(line: 1433, column: 2, scope: !11392)
!11401 = distinct !{!11401, !11393, !11402}
!11402 = !DILocation(line: 1437, column: 6, scope: !11381)
!11403 = !DILocation(line: 1439, column: 6, scope: !11382)
!11404 = !DILocation(line: 1443, column: 26, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 1443, column: 13)
!11406 = !DILocation(line: 1444, column: 13, scope: !11405)
!11407 = !DILocation(line: 1444, column: 16, scope: !11405)
!11408 = !DILocation(line: 1444, column: 43, scope: !11405)
!11409 = !DILocation(line: 1444, column: 41, scope: !11405)
!11410 = !DILocation(line: 1443, column: 13, scope: !11382)
!11411 = !DILocation(line: 1449, column: 19, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 1449, column: 17)
!11413 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 1445, column: 11)
!11414 = !DILocation(line: 1449, column: 17, scope: !11413)
!11415 = distinct !{!11415, !11378, !11416}
!11416 = !DILocation(line: 1452, column: 7, scope: !11379)
!11417 = !DILocation(line: 1454, column: 20, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 1454, column: 7)
!11419 = !DILocation(line: 1454, column: 7, scope: !11316)
!11420 = !DILocation(line: 1457, column: 7, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 1455, column: 5)
!11422 = !DILocation(line: 1458, column: 14, scope: !11421)
!11423 = !DILocation(line: 1458, column: 7, scope: !11421)
!11424 = !DILocation(line: 1462, column: 1, scope: !11316)
!11425 = distinct !DISubprogram(name: "replace_src_with_reg_ok_p", scope: !3, file: !3, line: 916, type: !11426, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11428)
!11426 = !DISubroutineType(types: !11427)
!11427 = !{!594, !1911, !607}
!11428 = !{!11429, !11430, !11431, !11432, !11433, !11434}
!11429 = !DILocalVariable(name: "insn", arg: 1, scope: !11425, file: !3, line: 916, type: !1911)
!11430 = !DILocalVariable(name: "new_src_reg", arg: 2, scope: !11425, file: !3, line: 916, type: !607)
!11431 = !DILocalVariable(name: "vi", scope: !11425, file: !3, line: 918, type: !1840)
!11432 = !DILocalVariable(name: "mode", scope: !11425, file: !3, line: 919, type: !5)
!11433 = !DILocalVariable(name: "dst_loc", scope: !11425, file: !3, line: 920, type: !607)
!11434 = !DILocalVariable(name: "res", scope: !11425, file: !3, line: 921, type: !594)
!11435 = !DILocation(line: 0, scope: !11425)
!11436 = !DILocation(line: 918, column: 16, scope: !11425)
!11437 = !DILocation(line: 919, column: 3, scope: !11425)
!11438 = !DILocation(line: 920, column: 3, scope: !11425)
!11439 = !DILocation(line: 923, column: 3, scope: !11425)
!11440 = !DILocation(line: 925, column: 3, scope: !11425)
!11441 = !DILocation(line: 926, column: 3, scope: !11425)
!11442 = !DILocation(line: 928, column: 7, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 928, column: 7)
!11444 = !DILocation(line: 928, column: 23, scope: !11443)
!11445 = !DILocation(line: 928, column: 26, scope: !11443)
!11446 = !DILocation(line: 928, column: 49, scope: !11443)
!11447 = !DILocation(line: 928, column: 46, scope: !11443)
!11448 = !DILocation(line: 928, column: 7, scope: !11425)
!11449 = !DILocation(line: 932, column: 27, scope: !11425)
!11450 = !DILocation(line: 932, column: 3, scope: !11425)
!11451 = !DILocation(line: 933, column: 9, scope: !11425)
!11452 = !DILocation(line: 934, column: 3, scope: !11425)
!11453 = !DILocation(line: 936, column: 3, scope: !11425)
!11454 = !DILocation(line: 937, column: 1, scope: !11425)
!11455 = distinct !DISubprogram(name: "replace_dest_with_reg_ok_p", scope: !3, file: !3, line: 942, type: !11426, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11456)
!11456 = !{!11457, !11458, !11459, !11460}
!11457 = !DILocalVariable(name: "insn", arg: 1, scope: !11455, file: !3, line: 942, type: !1911)
!11458 = !DILocalVariable(name: "new_reg", arg: 2, scope: !11455, file: !3, line: 942, type: !607)
!11459 = !DILocalVariable(name: "vi", scope: !11455, file: !3, line: 944, type: !1840)
!11460 = !DILocalVariable(name: "res", scope: !11455, file: !3, line: 945, type: !594)
!11461 = !DILocation(line: 0, scope: !11455)
!11462 = !DILocation(line: 944, column: 16, scope: !11455)
!11463 = !DILocation(line: 948, column: 3, scope: !11455)
!11464 = !DILocation(line: 949, column: 3, scope: !11455)
!11465 = !DILocation(line: 952, column: 27, scope: !11455)
!11466 = !DILocation(line: 952, column: 3, scope: !11455)
!11467 = !DILocation(line: 953, column: 9, scope: !11455)
!11468 = !DILocation(line: 954, column: 3, scope: !11455)
!11469 = !DILocation(line: 956, column: 3, scope: !11455)
!11470 = distinct !DISubprogram(name: "get_expr_cost", scope: !3, file: !3, line: 4301, type: !11471, scopeLine: 4302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11473)
!11471 = !DISubroutineType(types: !11472)
!11472 = !{!595, !1834, !2180}
!11473 = !{!11474, !11475, !11476}
!11474 = !DILocalVariable(name: "expr", arg: 1, scope: !11470, file: !3, line: 4301, type: !1834)
!11475 = !DILocalVariable(name: "fence", arg: 2, scope: !11470, file: !3, line: 4301, type: !2180)
!11476 = !DILocalVariable(name: "insn", scope: !11470, file: !3, line: 4303, type: !607)
!11477 = !DILocation(line: 0, scope: !11470)
!11478 = !DILocation(line: 4303, column: 14, scope: !11470)
!11479 = !DILocation(line: 4305, column: 7, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 4305, column: 7)
!11481 = !DILocation(line: 4305, column: 29, scope: !11480)
!11482 = !DILocation(line: 4305, column: 7, scope: !11470)
!11483 = !DILocation(line: 4307, column: 12, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 4307, column: 11)
!11485 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 4306, column: 5)
!11486 = !DILocation(line: 4308, column: 4, scope: !11484)
!11487 = !DILocation(line: 4308, column: 7, scope: !11484)
!11488 = !DILocation(line: 4307, column: 11, scope: !11485)
!11489 = !DILocation(line: 4317, column: 2, scope: !11484)
!11490 = !DILocation(line: 4320, column: 38, scope: !11480)
!11491 = !DILocation(line: 4320, column: 12, scope: !11480)
!11492 = !DILocation(line: 4320, column: 5, scope: !11480)
!11493 = !DILocation(line: 0, scope: !11480)
!11494 = !DILocation(line: 4321, column: 1, scope: !11470)
!11495 = !DILocation(line: 0, scope: !2345)
!11496 = !DILocation(line: 4285, column: 8, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !2345, file: !3, line: 4285, column: 7)
!11498 = !DILocation(line: 4285, column: 7, scope: !2345)
!11499 = !DILocation(line: 4286, column: 21, scope: !11497)
!11500 = !DILocation(line: 4286, column: 12, scope: !11497)
!11501 = !DILocation(line: 4286, column: 10, scope: !11497)
!11502 = !DILocation(line: 4286, column: 5, scope: !11497)
!11503 = !DILocation(line: 4288, column: 11, scope: !2345)
!11504 = !DILocation(line: 4288, column: 24, scope: !2345)
!11505 = !DILocation(line: 4288, column: 3, scope: !2345)
!11506 = !DILocation(line: 4289, column: 28, scope: !2345)
!11507 = !DILocation(line: 4289, column: 10, scope: !2345)
!11508 = !DILocation(line: 4291, column: 12, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !2345, file: !3, line: 4291, column: 7)
!11510 = !DILocation(line: 4291, column: 7, scope: !2345)
!11511 = !DILocation(line: 4293, column: 17, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 4293, column: 12)
!11513 = !DILocation(line: 4293, column: 12, scope: !11509)
!11514 = !DILocation(line: 4296, column: 1, scope: !2345)
!11515 = distinct !DISubprogram(name: "sel_dfa_new_cycle", scope: !3, file: !3, line: 4035, type: !11516, scopeLine: 4036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11518)
!11516 = !DISubroutineType(types: !11517)
!11517 = !{!594, !1911, !2180}
!11518 = !{!11519, !11520, !11521, !11522, !11523}
!11519 = !DILocalVariable(name: "insn", arg: 1, scope: !11515, file: !3, line: 4035, type: !1911)
!11520 = !DILocalVariable(name: "fence", arg: 2, scope: !11515, file: !3, line: 4035, type: !2180)
!11521 = !DILocalVariable(name: "last_scheduled_cycle", scope: !11515, file: !3, line: 4037, type: !595)
!11522 = !DILocalVariable(name: "res", scope: !11515, file: !3, line: 4040, type: !594)
!11523 = !DILocalVariable(name: "sort_p", scope: !11515, file: !3, line: 4041, type: !595)
!11524 = !DILocation(line: 0, scope: !11515)
!11525 = !DILocation(line: 4037, column: 30, scope: !11515)
!11526 = !DILocation(line: 4038, column: 32, scope: !11515)
!11527 = !DILocation(line: 4039, column: 32, scope: !11515)
!11528 = !DILocation(line: 4039, column: 52, scope: !11515)
!11529 = !DILocation(line: 4041, column: 3, scope: !11515)
!11530 = !DILocation(line: 4041, column: 7, scope: !11515)
!11531 = !DILocation(line: 4043, column: 22, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11515, file: !3, line: 4043, column: 7)
!11533 = !DILocation(line: 4043, column: 8, scope: !11532)
!11534 = !DILocation(line: 4043, column: 7, scope: !11515)
!11535 = !DILocation(line: 4046, column: 11, scope: !11515)
!11536 = !DILocation(line: 4046, column: 23, scope: !11515)
!11537 = !DILocation(line: 4046, column: 44, scope: !11515)
!11538 = !DILocation(line: 4046, column: 3, scope: !11515)
!11539 = !DILocation(line: 4048, column: 3, scope: !11515)
!11540 = !DILocation(line: 4048, column: 11, scope: !11515)
!11541 = !DILocation(line: 4048, column: 18, scope: !11515)
!11542 = !DILocation(line: 4048, column: 35, scope: !11515)
!11543 = !DILocation(line: 4048, column: 50, scope: !11515)
!11544 = !DILocation(line: 4048, column: 62, scope: !11515)
!11545 = !DILocation(line: 4050, column: 50, scope: !11515)
!11546 = !DILocation(line: 4048, column: 21, scope: !11515)
!11547 = !DILocation(line: 4052, column: 15, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11515, file: !3, line: 4051, column: 5)
!11549 = !DILocation(line: 4052, column: 36, scope: !11548)
!11550 = !DILocation(line: 4052, column: 48, scope: !11548)
!11551 = !DILocation(line: 4052, column: 7, scope: !11548)
!11552 = !DILocation(line: 4053, column: 7, scope: !11548)
!11553 = !DILocation(line: 4054, column: 15, scope: !11548)
!11554 = !DILocation(line: 4054, column: 27, scope: !11548)
!11555 = !DILocation(line: 4054, column: 48, scope: !11548)
!11556 = !DILocation(line: 4054, column: 7, scope: !11548)
!11557 = distinct !{!11557, !11539, !11558}
!11558 = !DILocation(line: 4056, column: 5, scope: !11515)
!11559 = !DILocation(line: 4059, column: 1, scope: !11515)
!11560 = distinct !DISubprogram(name: "advance_one_cycle", scope: !3, file: !3, line: 580, type: !11561, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11563)
!11561 = !DISubroutineType(types: !11562)
!11562 = !{null, !2180}
!11563 = !{!11564, !11565, !11566, !11567, !11568, !11574}
!11564 = !DILocalVariable(name: "fence", arg: 1, scope: !11560, file: !3, line: 580, type: !2180)
!11565 = !DILocalVariable(name: "i", scope: !11560, file: !3, line: 582, type: !7)
!11566 = !DILocalVariable(name: "cycle", scope: !11560, file: !3, line: 583, type: !595)
!11567 = !DILocalVariable(name: "insn", scope: !11560, file: !3, line: 584, type: !607)
!11568 = !DILocalVariable(name: "__j", scope: !11569, file: !3, line: 605, type: !595)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !3, line: 605, column: 7)
!11570 = distinct !DILexicalBlock(scope: !11571, file: !3, line: 605, column: 7)
!11571 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 605, column: 7)
!11572 = distinct !DILexicalBlock(scope: !11573, file: !3, line: 604, column: 5)
!11573 = distinct !DILexicalBlock(scope: !11560, file: !3, line: 603, column: 7)
!11574 = !DILocalVariable(name: "__s", scope: !11569, file: !3, line: 605, type: !597)
!11575 = !DILocation(line: 0, scope: !11560)
!11576 = !DILocation(line: 584, column: 3, scope: !11560)
!11577 = !DILocation(line: 586, column: 18, scope: !11560)
!11578 = !DILocation(line: 586, column: 3, scope: !11560)
!11579 = !DILocation(line: 587, column: 13, scope: !11560)
!11580 = !DILocation(line: 587, column: 11, scope: !11560)
!11581 = !DILocation(line: 588, column: 3, scope: !11560)
!11582 = !DILocation(line: 588, column: 30, scope: !11560)
!11583 = !DILocation(line: 589, column: 3, scope: !11560)
!11584 = !DILocation(line: 589, column: 32, scope: !11560)
!11585 = !DILocation(line: 590, column: 20, scope: !11560)
!11586 = !DILocation(line: 590, column: 18, scope: !11560)
!11587 = !DILocation(line: 591, column: 3, scope: !11560)
!11588 = !DILocation(line: 591, column: 28, scope: !11560)
!11589 = !DILocation(line: 0, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11591, file: !3, line: 593, column: 3)
!11591 = distinct !DILexicalBlock(scope: !11560, file: !3, line: 593, column: 3)
!11592 = !DILocation(line: 0, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11594, file: !3, line: 596, column: 9)
!11594 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 595, column: 11)
!11595 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 594, column: 5)
!11596 = !DILocation(line: 593, column: 8, scope: !11591)
!11597 = !DILocation(line: 593, column: 3, scope: !11591)
!11598 = !DILocation(line: 593, column: 15, scope: !11590)
!11599 = !DILocation(line: 595, column: 11, scope: !11594)
!11600 = !DILocation(line: 595, column: 35, scope: !11594)
!11601 = !DILocation(line: 595, column: 11, scope: !11595)
!11602 = !DILocation(line: 597, column: 29, scope: !11593)
!11603 = !DILocation(line: 597, column: 47, scope: !11593)
!11604 = !DILocation(line: 597, column: 11, scope: !11593)
!11605 = !DILocation(line: 598, column: 11, scope: !11593)
!11606 = !DILocation(line: 599, column: 11, scope: !11593)
!11607 = distinct !{!11607, !11597, !11608}
!11608 = !DILocation(line: 602, column: 5, scope: !11591)
!11609 = !DILocation(line: 601, column: 8, scope: !11595)
!11610 = !DILocation(line: 593, column: 3, scope: !11590)
!11611 = !DILocation(line: 603, column: 7, scope: !11573)
!11612 = !DILocation(line: 603, column: 21, scope: !11573)
!11613 = !DILocation(line: 603, column: 7, scope: !11560)
!11614 = !DILocation(line: 605, column: 7, scope: !11570)
!11615 = !DILocation(line: 605, column: 7, scope: !11571)
!11616 = !DILocation(line: 605, column: 7, scope: !11569)
!11617 = !DILocation(line: 0, scope: !11569)
!11618 = !DILocation(line: 606, column: 20, scope: !11572)
!11619 = !DILocation(line: 606, column: 7, scope: !11572)
!11620 = !DILocation(line: 607, column: 5, scope: !11572)
!11621 = !DILocation(line: 608, column: 1, scope: !11560)
!11622 = distinct !DISubprogram(name: "VEC_rtx_base_unordered_remove", scope: !414, file: !414, line: 200, type: !11623, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11626)
!11623 = !DISubroutineType(types: !11624)
!11624 = !{!607, !11625, !7}
!11625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!11626 = !{!11627, !11628, !11629, !11630}
!11627 = !DILocalVariable(name: "vec_", arg: 1, scope: !11622, file: !414, line: 200, type: !11625)
!11628 = !DILocalVariable(name: "ix_", arg: 2, scope: !11622, file: !414, line: 200, type: !7)
!11629 = !DILocalVariable(name: "slot_", scope: !11622, file: !414, line: 200, type: !4934)
!11630 = !DILocalVariable(name: "obj_", scope: !11622, file: !414, line: 200, type: !607)
!11631 = !DILocation(line: 0, scope: !11622)
!11632 = !DILocation(line: 200, column: 1, scope: !11622)
!11633 = distinct !DISubprogram(name: "debug_state", scope: !3, file: !3, line: 5246, type: !11634, scopeLine: 5247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11636)
!11634 = !DISubroutineType(types: !11635)
!11635 = !{null, !1988}
!11636 = !{!11637, !11638, !11639, !11640, !11641, !11645, !11646, !11652, !11653, !11657}
!11637 = !DILocalVariable(name: "state", arg: 1, scope: !11633, file: !3, line: 5246, type: !1988)
!11638 = !DILocalVariable(name: "p", scope: !11633, file: !3, line: 5248, type: !593)
!11639 = !DILocalVariable(name: "i", scope: !11633, file: !3, line: 5249, type: !7)
!11640 = !DILocalVariable(name: "size", scope: !11633, file: !3, line: 5249, type: !7)
!11641 = !DILocalVariable(name: "__j", scope: !11642, file: !3, line: 5251, type: !595)
!11642 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 5251, column: 3)
!11643 = distinct !DILexicalBlock(scope: !11644, file: !3, line: 5251, column: 3)
!11644 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 5251, column: 3)
!11645 = !DILocalVariable(name: "__s", scope: !11642, file: !3, line: 5251, type: !597)
!11646 = !DILocalVariable(name: "__j", scope: !11647, file: !3, line: 5253, type: !595)
!11647 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 5253, column: 5)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !3, line: 5253, column: 5)
!11649 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 5253, column: 5)
!11650 = distinct !DILexicalBlock(scope: !11651, file: !3, line: 5252, column: 3)
!11651 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 5252, column: 3)
!11652 = !DILocalVariable(name: "__s", scope: !11647, file: !3, line: 5253, type: !597)
!11653 = !DILocalVariable(name: "__j", scope: !11654, file: !3, line: 5254, type: !595)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 5254, column: 3)
!11655 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 5254, column: 3)
!11656 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 5254, column: 3)
!11657 = !DILocalVariable(name: "__s", scope: !11654, file: !3, line: 5254, type: !597)
!11658 = !DILocation(line: 0, scope: !11633)
!11659 = !DILocation(line: 5249, column: 26, scope: !11633)
!11660 = !DILocation(line: 5251, column: 3, scope: !11643)
!11661 = !DILocation(line: 5251, column: 3, scope: !11644)
!11662 = !DILocation(line: 5251, column: 3, scope: !11642)
!11663 = !DILocation(line: 0, scope: !11642)
!11664 = !DILocation(line: 5252, column: 46, scope: !11650)
!11665 = !DILocation(line: 5252, column: 8, scope: !11651)
!11666 = !DILocation(line: 0, scope: !11651)
!11667 = !DILocation(line: 5252, column: 3, scope: !11651)
!11668 = !DILocation(line: 5253, column: 5, scope: !11649)
!11669 = !DILocation(line: 5253, column: 5, scope: !11647)
!11670 = !DILocation(line: 0, scope: !11647)
!11671 = !DILocation(line: 5253, column: 5, scope: !11648)
!11672 = !DILocation(line: 5252, column: 55, scope: !11650)
!11673 = !DILocation(line: 5252, column: 3, scope: !11650)
!11674 = distinct !{!11674, !11667, !11675}
!11675 = !DILocation(line: 5253, column: 5, scope: !11651)
!11676 = !DILocation(line: 5254, column: 3, scope: !11656)
!11677 = !DILocation(line: 5254, column: 3, scope: !11654)
!11678 = !DILocation(line: 0, scope: !11654)
!11679 = !DILocation(line: 5254, column: 3, scope: !11655)
!11680 = !DILocation(line: 5255, column: 1, scope: !11633)
!11681 = distinct !DISubprogram(name: "move_cond_jump", scope: !3, file: !3, line: 4891, type: !11682, scopeLine: 4892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11684)
!11682 = !DISubroutineType(types: !11683)
!11683 = !{null, !607, !7790}
!11684 = !{!11685, !11686, !11687, !11688, !11689, !11690, !11691, !11692, !11693, !11694, !11699}
!11685 = !DILocalVariable(name: "insn", arg: 1, scope: !11681, file: !3, line: 4891, type: !607)
!11686 = !DILocalVariable(name: "bnd", arg: 2, scope: !11681, file: !3, line: 4891, type: !7790)
!11687 = !DILocalVariable(name: "ft_edge", scope: !11681, file: !3, line: 4893, type: !1158)
!11688 = !DILocalVariable(name: "block_from", scope: !11681, file: !3, line: 4894, type: !1141)
!11689 = !DILocalVariable(name: "block_next", scope: !11681, file: !3, line: 4894, type: !1141)
!11690 = !DILocalVariable(name: "block_new", scope: !11681, file: !3, line: 4894, type: !1141)
!11691 = !DILocalVariable(name: "next", scope: !11681, file: !3, line: 4895, type: !607)
!11692 = !DILocalVariable(name: "prev", scope: !11681, file: !3, line: 4895, type: !607)
!11693 = !DILocalVariable(name: "link", scope: !11681, file: !3, line: 4895, type: !607)
!11694 = !DILocalVariable(name: "__j", scope: !11695, file: !3, line: 4959, type: !595)
!11695 = distinct !DILexicalBlock(scope: !11696, file: !3, line: 4959, column: 5)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 4959, column: 5)
!11697 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 4959, column: 5)
!11698 = distinct !DILexicalBlock(scope: !11681, file: !3, line: 4958, column: 7)
!11699 = !DILocalVariable(name: "__s", scope: !11695, file: !3, line: 4959, type: !597)
!11700 = !DILocation(line: 0, scope: !11681)
!11701 = !DILocation(line: 4898, column: 16, scope: !11681)
!11702 = !DILocation(line: 4902, column: 3, scope: !11681)
!11703 = !DILocation(line: 4905, column: 10, scope: !11681)
!11704 = !DILocation(line: 4906, column: 10, scope: !11681)
!11705 = !DILocation(line: 4907, column: 16, scope: !11681)
!11706 = !DILocation(line: 4909, column: 13, scope: !11681)
!11707 = !DILocation(line: 4910, column: 25, scope: !11681)
!11708 = !DILocation(line: 4913, column: 3, scope: !11681)
!11709 = !DILocation(line: 4916, column: 15, scope: !11681)
!11710 = !DILocation(line: 4917, column: 3, scope: !11681)
!11711 = !DILocation(line: 4920, column: 3, scope: !11681)
!11712 = !DILocation(line: 0, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !3, line: 4925, column: 5)
!11714 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 4924, column: 3)
!11715 = distinct !DILexicalBlock(scope: !11681, file: !3, line: 4924, column: 3)
!11716 = !DILocation(line: 4924, column: 8, scope: !11715)
!11717 = !DILocation(line: 0, scope: !11715)
!11718 = !DILocation(line: 4924, column: 26, scope: !11714)
!11719 = !DILocation(line: 4924, column: 3, scope: !11715)
!11720 = !DILocation(line: 4926, column: 58, scope: !11713)
!11721 = !DILocation(line: 4926, column: 7, scope: !11713)
!11722 = !DILocation(line: 4926, column: 45, scope: !11713)
!11723 = !DILocation(line: 4927, column: 7, scope: !11713)
!11724 = !DILocation(line: 4924, column: 42, scope: !11714)
!11725 = !DILocation(line: 4924, column: 3, scope: !11714)
!11726 = distinct !{!11726, !11719, !11727}
!11727 = !DILocation(line: 4928, column: 5, scope: !11715)
!11728 = !DILocation(line: 4931, column: 24, scope: !11681)
!11729 = !DILocation(line: 4931, column: 3, scope: !11681)
!11730 = !DILocation(line: 4931, column: 22, scope: !11681)
!11731 = !DILocation(line: 4933, column: 3, scope: !11681)
!11732 = !DILocation(line: 4933, column: 32, scope: !11681)
!11733 = !DILocation(line: 4934, column: 22, scope: !11681)
!11734 = !DILocation(line: 4934, column: 20, scope: !11681)
!11735 = !DILocation(line: 4937, column: 3, scope: !11681)
!11736 = !DILocation(line: 4938, column: 22, scope: !11681)
!11737 = !DILocation(line: 4938, column: 20, scope: !11681)
!11738 = !DILocation(line: 4939, column: 22, scope: !11681)
!11739 = !DILocation(line: 4939, column: 3, scope: !11681)
!11740 = !DILocation(line: 4939, column: 20, scope: !11681)
!11741 = !DILocation(line: 4940, column: 3, scope: !11681)
!11742 = !DILocation(line: 4940, column: 35, scope: !11681)
!11743 = !DILocation(line: 4941, column: 3, scope: !11681)
!11744 = !DILocation(line: 4941, column: 32, scope: !11681)
!11745 = !DILocation(line: 4943, column: 3, scope: !11681)
!11746 = !DILocation(line: 4949, column: 29, scope: !11681)
!11747 = !DILocation(line: 4949, column: 3, scope: !11681)
!11748 = !DILocation(line: 4949, column: 27, scope: !11681)
!11749 = !DILocation(line: 4950, column: 3, scope: !11681)
!11750 = !DILocation(line: 4951, column: 27, scope: !11681)
!11751 = !DILocation(line: 4951, column: 3, scope: !11681)
!11752 = !DILocation(line: 4951, column: 25, scope: !11681)
!11753 = !DILocation(line: 4952, column: 21, scope: !11681)
!11754 = !DILocation(line: 4952, column: 3, scope: !11681)
!11755 = !DILocation(line: 4956, column: 3, scope: !11681)
!11756 = !DILocation(line: 4958, column: 7, scope: !11698)
!11757 = !DILocation(line: 4958, column: 21, scope: !11698)
!11758 = !DILocation(line: 4958, column: 7, scope: !11681)
!11759 = !DILocation(line: 4959, column: 5, scope: !11696)
!11760 = !DILocation(line: 4959, column: 5, scope: !11697)
!11761 = !DILocation(line: 4959, column: 5, scope: !11695)
!11762 = !DILocation(line: 0, scope: !11695)
!11763 = !DILocation(line: 4960, column: 1, scope: !11681)
!11764 = distinct !DISubprogram(name: "prepare_place_to_insert", scope: !3, file: !3, line: 5155, type: !11765, scopeLine: 5156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11767)
!11765 = !DISubroutineType(types: !11766)
!11766 = !{!1911, !7790}
!11767 = !{!11768, !11769, !11770}
!11768 = !DILocalVariable(name: "bnd", arg: 1, scope: !11764, file: !3, line: 5155, type: !7790)
!11769 = !DILocalVariable(name: "place_to_insert", scope: !11764, file: !3, line: 5157, type: !1911)
!11770 = !DILocalVariable(name: "l", scope: !11771, file: !3, line: 5168, type: !1942)
!11771 = distinct !DILexicalBlock(scope: !11772, file: !3, line: 5167, column: 2)
!11772 = distinct !DILexicalBlock(scope: !11773, file: !3, line: 5166, column: 11)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !3, line: 5163, column: 5)
!11774 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 5162, column: 7)
!11775 = !DILocation(line: 0, scope: !11764)
!11776 = !DILocation(line: 5162, column: 7, scope: !11774)
!11777 = !DILocation(line: 5162, column: 7, scope: !11764)
!11778 = !DILocation(line: 5165, column: 25, scope: !11773)
!11779 = !DILocation(line: 5166, column: 11, scope: !11772)
!11780 = !DILocation(line: 5166, column: 11, scope: !11773)
!11781 = !DILocation(line: 0, scope: !11771)
!11782 = !DILocation(line: 5169, column: 4, scope: !11771)
!11783 = !DILocation(line: 5169, column: 16, scope: !11771)
!11784 = !DILocation(line: 5169, column: 32, scope: !11771)
!11785 = !DILocation(line: 5170, column: 4, scope: !11771)
!11786 = distinct !{!11786, !11782, !11787}
!11787 = !DILocation(line: 5171, column: 6, scope: !11771)
!11788 = !DILocation(line: 5172, column: 8, scope: !11771)
!11789 = !DILocation(line: 5173, column: 6, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 5172, column: 8)
!11791 = !DILocation(line: 0, scope: !11774)
!11792 = !DILocation(line: 5179, column: 8, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 5179, column: 7)
!11794 = !DILocation(line: 5179, column: 7, scope: !11764)
!11795 = !DILocation(line: 5183, column: 44, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11793, file: !3, line: 5180, column: 5)
!11797 = !DILocation(line: 5183, column: 25, scope: !11796)
!11798 = !DILocation(line: 5184, column: 7, scope: !11796)
!11799 = !DILocation(line: 5188, column: 3, scope: !11764)
!11800 = distinct !DISubprogram(name: "move_exprs_to_boundary", scope: !3, file: !3, line: 5194, type: !11801, scopeLine: 5196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11803)
!11801 = !DISubroutineType(types: !11802)
!11802 = !{!594, !7790, !1834, !1945, !1834}
!11803 = !{!11804, !11805, !11806, !11807, !11808, !11809, !11810, !11811, !11812, !11813, !11817}
!11804 = !DILocalVariable(name: "bnd", arg: 1, scope: !11800, file: !3, line: 5194, type: !7790)
!11805 = !DILocalVariable(name: "expr_vliw", arg: 2, scope: !11800, file: !3, line: 5194, type: !1834)
!11806 = !DILocalVariable(name: "expr_seq", arg: 3, scope: !11800, file: !3, line: 5195, type: !1945)
!11807 = !DILocalVariable(name: "c_expr", arg: 4, scope: !11800, file: !3, line: 5195, type: !1834)
!11808 = !DILocalVariable(name: "b", scope: !11800, file: !3, line: 5197, type: !594)
!11809 = !DILocalVariable(name: "should_move", scope: !11800, file: !3, line: 5197, type: !594)
!11810 = !DILocalVariable(name: "book_uid", scope: !11800, file: !3, line: 5198, type: !7)
!11811 = !DILocalVariable(name: "bi", scope: !11800, file: !3, line: 5199, type: !7221)
!11812 = !DILocalVariable(name: "n_bookkeeping_copies_before_moveop", scope: !11800, file: !3, line: 5200, type: !595)
!11813 = !DILocalVariable(name: "uid", scope: !11814, file: !3, line: 5223, type: !7)
!11814 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 5222, column: 5)
!11815 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 5221, column: 3)
!11816 = distinct !DILexicalBlock(scope: !11800, file: !3, line: 5221, column: 3)
!11817 = !DILocalVariable(name: "bi", scope: !11814, file: !3, line: 5224, type: !7221)
!11818 = !DILocation(line: 0, scope: !11800)
!11819 = !DILocation(line: 5197, column: 3, scope: !11800)
!11820 = !DILocation(line: 5198, column: 3, scope: !11800)
!11821 = !DILocation(line: 5199, column: 3, scope: !11800)
!11822 = !DILocation(line: 5206, column: 40, scope: !11800)
!11823 = !DILocation(line: 5207, column: 28, scope: !11800)
!11824 = !DILocation(line: 5207, column: 26, scope: !11800)
!11825 = !DILocation(line: 5208, column: 17, scope: !11800)
!11826 = !DILocation(line: 5208, column: 3, scope: !11800)
!11827 = !DILocation(line: 5209, column: 17, scope: !11800)
!11828 = !DILocation(line: 5209, column: 3, scope: !11800)
!11829 = !DILocation(line: 5211, column: 16, scope: !11800)
!11830 = !DILocation(line: 5212, column: 16, scope: !11800)
!11831 = !DILocation(line: 5211, column: 7, scope: !11800)
!11832 = !DILocation(line: 5216, column: 3, scope: !11800)
!11833 = !DILocation(line: 5218, column: 7, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11800, file: !3, line: 5218, column: 7)
!11835 = !DILocation(line: 5218, column: 31, scope: !11834)
!11836 = !DILocation(line: 5218, column: 7, scope: !11800)
!11837 = !DILocation(line: 5219, column: 34, scope: !11834)
!11838 = !DILocation(line: 5219, column: 5, scope: !11834)
!11839 = !DILocation(line: 5221, column: 3, scope: !11816)
!11840 = !DILocation(line: 0, scope: !11814)
!11841 = !DILocation(line: 5221, column: 3, scope: !11815)
!11842 = !DILocation(line: 5223, column: 7, scope: !11814)
!11843 = !DILocation(line: 5224, column: 7, scope: !11814)
!11844 = !DILocation(line: 5227, column: 13, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11814, file: !3, line: 5227, column: 11)
!11846 = !DILocation(line: 5227, column: 11, scope: !11814)
!11847 = !DILocation(line: 5228, column: 46, scope: !11845)
!11848 = !DILocation(line: 5228, column: 9, scope: !11845)
!11849 = !DILocation(line: 5228, column: 44, scope: !11845)
!11850 = !DILocation(line: 5230, column: 20, scope: !11814)
!11851 = !DILocation(line: 5231, column: 20, scope: !11814)
!11852 = !DILocation(line: 5230, column: 7, scope: !11814)
!11853 = !DILocation(line: 5234, column: 7, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11814, file: !3, line: 5234, column: 7)
!11855 = !DILocation(line: 5234, column: 7, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11854, file: !3, line: 5234, column: 7)
!11857 = !DILocation(line: 5235, column: 12, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11856, file: !3, line: 5235, column: 12)
!11859 = !DILocation(line: 5235, column: 12, scope: !11856)
!11860 = !DILocation(line: 5236, column: 20, scope: !11858)
!11861 = !DILocation(line: 5237, column: 6, scope: !11858)
!11862 = !DILocation(line: 5236, column: 3, scope: !11858)
!11863 = distinct !{!11863, !11853, !11864}
!11864 = !DILocation(line: 5237, column: 35, scope: !11854)
!11865 = !DILocation(line: 5238, column: 5, scope: !11815)
!11866 = distinct !{!11866, !11839, !11867}
!11867 = !DILocation(line: 5238, column: 5, scope: !11816)
!11868 = !DILocation(line: 5240, column: 10, scope: !11800)
!11869 = !DILocation(line: 5241, column: 1, scope: !11800)
!11870 = !DILocation(line: 5240, column: 3, scope: !11800)
!11871 = distinct !DISubprogram(name: "remove_temp_moveop_nops", scope: !3, file: !3, line: 4965, type: !3594, scopeLine: 4966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11872)
!11872 = !{!11873, !11874, !11875}
!11873 = !DILocalVariable(name: "full_tidying", arg: 1, scope: !11871, file: !3, line: 4965, type: !594)
!11874 = !DILocalVariable(name: "i", scope: !11871, file: !3, line: 4967, type: !595)
!11875 = !DILocalVariable(name: "insn", scope: !11871, file: !3, line: 4968, type: !1911)
!11876 = !DILocation(line: 0, scope: !11871)
!11877 = !DILocation(line: 4968, column: 3, scope: !11871)
!11878 = !DILocation(line: 4970, column: 8, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 4970, column: 3)
!11880 = !DILocation(line: 0, scope: !11879)
!11881 = !DILocation(line: 4970, column: 15, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 4970, column: 3)
!11883 = !DILocation(line: 4970, column: 3, scope: !11879)
!11884 = !DILocation(line: 4972, column: 7, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 4971, column: 5)
!11886 = !DILocation(line: 4973, column: 27, scope: !11885)
!11887 = !DILocation(line: 4973, column: 7, scope: !11885)
!11888 = !DILocation(line: 4970, column: 69, scope: !11882)
!11889 = !DILocation(line: 4970, column: 3, scope: !11882)
!11890 = distinct !{!11890, !11883, !11891}
!11891 = !DILocation(line: 4974, column: 5, scope: !11879)
!11892 = !DILocation(line: 4977, column: 7, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 4977, column: 7)
!11894 = !DILocation(line: 4977, column: 49, scope: !11893)
!11895 = !DILocation(line: 4977, column: 7, scope: !11871)
!11896 = !DILocation(line: 4978, column: 5, scope: !11893)
!11897 = !DILocation(line: 4980, column: 1, scope: !11871)
!11898 = distinct !DISubprogram(name: "move_op", scope: !3, file: !3, line: 6641, type: !11899, scopeLine: 6643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11901)
!11899 = !DISubroutineType(types: !11900)
!11900 = !{!594, !1911, !1945, !1834, !607, !1834, !593}
!11901 = !{!11902, !11903, !11904, !11905, !11906, !11907, !11908, !11909, !11910}
!11902 = !DILocalVariable(name: "insn", arg: 1, scope: !11898, file: !3, line: 6641, type: !1911)
!11903 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !11898, file: !3, line: 6641, type: !1945)
!11904 = !DILocalVariable(name: "expr_vliw", arg: 3, scope: !11898, file: !3, line: 6641, type: !1834)
!11905 = !DILocalVariable(name: "dest", arg: 4, scope: !11898, file: !3, line: 6642, type: !607)
!11906 = !DILocalVariable(name: "c_expr", arg: 5, scope: !11898, file: !3, line: 6642, type: !1834)
!11907 = !DILocalVariable(name: "should_move", arg: 6, scope: !11898, file: !3, line: 6642, type: !593)
!11908 = !DILocalVariable(name: "sparams", scope: !11898, file: !3, line: 6644, type: !604)
!11909 = !DILocalVariable(name: "lparams", scope: !11898, file: !3, line: 6645, type: !2076)
!11910 = !DILocalVariable(name: "res", scope: !11898, file: !3, line: 6646, type: !594)
!11911 = !DILocation(line: 0, scope: !11898)
!11912 = !DILocation(line: 6644, column: 3, scope: !11898)
!11913 = !DILocation(line: 6645, column: 3, scope: !11898)
!11914 = !DILocation(line: 6649, column: 11, scope: !11898)
!11915 = !DILocation(line: 6649, column: 16, scope: !11898)
!11916 = !DILocation(line: 6650, column: 11, scope: !11898)
!11917 = !DILocation(line: 6650, column: 18, scope: !11898)
!11918 = !DILocation(line: 6651, column: 17, scope: !11898)
!11919 = !DILocation(line: 6651, column: 11, scope: !11898)
!11920 = !DILocation(line: 6651, column: 15, scope: !11898)
!11921 = !DILocation(line: 6655, column: 11, scope: !11898)
!11922 = !DILocation(line: 6655, column: 23, scope: !11898)
!11923 = !DILocation(line: 6656, column: 11, scope: !11898)
!11924 = !DILocation(line: 6656, column: 14, scope: !11898)
!11925 = !DILocation(line: 6659, column: 17, scope: !11898)
!11926 = !DILocation(line: 6659, column: 3, scope: !11898)
!11927 = !DILocation(line: 6662, column: 32, scope: !11898)
!11928 = !DILocation(line: 6663, column: 9, scope: !11898)
!11929 = !DILocation(line: 6665, column: 15, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 6665, column: 7)
!11931 = !DILocation(line: 6665, column: 7, scope: !11930)
!11932 = !DILocation(line: 6665, column: 7, scope: !11898)
!11933 = !DILocation(line: 6666, column: 5, scope: !11930)
!11934 = !DILocation(line: 6666, column: 34, scope: !11930)
!11935 = !DILocation(line: 6668, column: 27, scope: !11898)
!11936 = !DILocation(line: 6668, column: 31, scope: !11898)
!11937 = !DILocation(line: 6668, column: 18, scope: !11898)
!11938 = !DILocation(line: 6668, column: 16, scope: !11898)
!11939 = !DILocation(line: 6671, column: 1, scope: !11898)
!11940 = !DILocation(line: 6670, column: 3, scope: !11898)
!11941 = distinct !DISubprogram(name: "get_dest_from_orig_ops", scope: !3, file: !3, line: 5621, type: !11942, scopeLine: 5622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11944)
!11942 = !DISubroutineType(types: !11943)
!11943 = !{!607, !1945}
!11944 = !{!11945, !11946, !11947, !11948, !11949, !11950}
!11945 = !DILocalVariable(name: "orig_ops", arg: 1, scope: !11941, file: !3, line: 5621, type: !1945)
!11946 = !DILocalVariable(name: "dest", scope: !11941, file: !3, line: 5623, type: !607)
!11947 = !DILocalVariable(name: "av_it", scope: !11941, file: !3, line: 5624, type: !2188)
!11948 = !DILocalVariable(name: "expr", scope: !11941, file: !3, line: 5625, type: !1834)
!11949 = !DILocalVariable(name: "first_p", scope: !11941, file: !3, line: 5626, type: !594)
!11950 = !DILocalVariable(name: "x", scope: !11951, file: !3, line: 5630, type: !607)
!11951 = distinct !DILexicalBlock(scope: !11952, file: !3, line: 5629, column: 5)
!11952 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 5628, column: 3)
!11953 = distinct !DILexicalBlock(scope: !11941, file: !3, line: 5628, column: 3)
!11954 = !DILocation(line: 0, scope: !11941)
!11955 = !DILocation(line: 5624, column: 3, scope: !11941)
!11956 = !DILocation(line: 5625, column: 3, scope: !11941)
!11957 = !DILocation(line: 5628, column: 3, scope: !11953)
!11958 = !DILocation(line: 0, scope: !11952)
!11959 = !DILocation(line: 5628, column: 3, scope: !11952)
!11960 = !DILocation(line: 5630, column: 15, scope: !11951)
!11961 = !DILocation(line: 0, scope: !11951)
!11962 = !DILocation(line: 5632, column: 11, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 5632, column: 11)
!11964 = !DILocation(line: 5632, column: 11, scope: !11951)
!11965 = !DILocation(line: 5638, column: 2, scope: !11963)
!11966 = distinct !{!11966, !11957, !11967}
!11967 = !DILocation(line: 5641, column: 5, scope: !11953)
!11968 = !DILocation(line: 5644, column: 1, scope: !11941)
!11969 = !DILocation(line: 5643, column: 3, scope: !11941)
!11970 = distinct !DISubprogram(name: "VEC_insn_t_base_iterate", scope: !3, file: !3, line: 528, type: !11971, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11975)
!11971 = !DISubroutineType(types: !11972)
!11972 = !{!595, !11973, !7, !4149}
!11973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11974, size: 64)
!11974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1904)
!11975 = !{!11976, !11977, !11978}
!11976 = !DILocalVariable(name: "vec_", arg: 1, scope: !11970, file: !3, line: 528, type: !11973)
!11977 = !DILocalVariable(name: "ix_", arg: 2, scope: !11970, file: !3, line: 528, type: !7)
!11978 = !DILocalVariable(name: "ptr", arg: 3, scope: !11970, file: !3, line: 528, type: !4149)
!11979 = !DILocation(line: 0, scope: !11970)
!11980 = !DILocation(line: 528, column: 1, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 528, column: 1)
!11982 = !DILocation(line: 528, column: 1, scope: !11970)
!11983 = !DILocation(line: 528, column: 1, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11981, file: !3, line: 528, column: 1)
!11985 = !DILocation(line: 528, column: 1, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11981, file: !3, line: 528, column: 1)
!11987 = !DILocation(line: 0, scope: !11981)
!11988 = distinct !DISubprogram(name: "VEC_insn_t_base_length", scope: !3, file: !3, line: 528, type: !11989, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11991)
!11989 = !DISubroutineType(types: !11990)
!11990 = !{!7, !11973}
!11991 = !{!11992}
!11992 = !DILocalVariable(name: "vec_", arg: 1, scope: !11988, file: !3, line: 528, type: !11973)
!11993 = !DILocation(line: 0, scope: !11988)
!11994 = !DILocation(line: 528, column: 1, scope: !11988)
!11995 = distinct !DISubprogram(name: "VEC_insn_t_base_block_remove", scope: !3, file: !3, line: 528, type: !11996, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11998)
!11996 = !DISubroutineType(types: !11997)
!11997 = !{null, !4170, !7, !7}
!11998 = !{!11999, !12000, !12001, !12002}
!11999 = !DILocalVariable(name: "vec_", arg: 1, scope: !11995, file: !3, line: 528, type: !4170)
!12000 = !DILocalVariable(name: "ix_", arg: 2, scope: !11995, file: !3, line: 528, type: !7)
!12001 = !DILocalVariable(name: "len_", arg: 3, scope: !11995, file: !3, line: 528, type: !7)
!12002 = !DILocalVariable(name: "slot_", scope: !11995, file: !3, line: 528, type: !4149)
!12003 = !DILocation(line: 0, scope: !11995)
!12004 = !DILocation(line: 528, column: 1, scope: !11995)
!12005 = distinct !DISubprogram(name: "advance_state_on_fence", scope: !3, file: !3, line: 5260, type: !12006, scopeLine: 5261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12008)
!12006 = !DISubroutineType(types: !12007)
!12007 = !{!594, !2180, !1911}
!12008 = !{!12009, !12010, !12011, !12012, !12015}
!12009 = !DILocalVariable(name: "fence", arg: 1, scope: !12005, file: !3, line: 5260, type: !2180)
!12010 = !DILocalVariable(name: "insn", arg: 2, scope: !12005, file: !3, line: 5260, type: !1911)
!12011 = !DILocalVariable(name: "asm_p", scope: !12005, file: !3, line: 5262, type: !594)
!12012 = !DILocalVariable(name: "res", scope: !12013, file: !3, line: 5266, type: !595)
!12013 = distinct !DILexicalBlock(scope: !12014, file: !3, line: 5265, column: 5)
!12014 = distinct !DILexicalBlock(scope: !12005, file: !3, line: 5264, column: 7)
!12015 = !DILocalVariable(name: "temp_state", scope: !12013, file: !3, line: 5267, type: !1988)
!12016 = !DILocation(line: 0, scope: !12005)
!12017 = !DILocation(line: 5264, column: 7, scope: !12014)
!12018 = !DILocation(line: 5264, column: 29, scope: !12014)
!12019 = !DILocation(line: 5264, column: 7, scope: !12005)
!12020 = !DILocation(line: 5267, column: 28, scope: !12013)
!12021 = !DILocation(line: 0, scope: !12013)
!12022 = !DILocation(line: 5269, column: 7, scope: !12013)
!12023 = !DILocation(line: 5272, column: 27, scope: !12013)
!12024 = !DILocation(line: 5272, column: 48, scope: !12013)
!12025 = !DILocation(line: 5272, column: 7, scope: !12013)
!12026 = !DILocation(line: 5273, column: 31, scope: !12013)
!12027 = !DILocation(line: 5273, column: 13, scope: !12013)
!12028 = !DILocation(line: 5274, column: 7, scope: !12013)
!12029 = !DILocation(line: 5276, column: 31, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12013, file: !3, line: 5276, column: 11)
!12031 = !DILocation(line: 5276, column: 52, scope: !12030)
!12032 = !DILocation(line: 5276, column: 11, scope: !12030)
!12033 = !DILocation(line: 5276, column: 11, scope: !12013)
!12034 = !DILocation(line: 5278, column: 11, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 5277, column: 9)
!12036 = !DILocation(line: 5278, column: 37, scope: !12035)
!12037 = !DILocation(line: 5281, column: 44, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 5281, column: 15)
!12039 = !DILocation(line: 5281, column: 42, scope: !12038)
!12040 = !DILocation(line: 5281, column: 15, scope: !12035)
!12041 = !DILocation(line: 5282, column: 13, scope: !12038)
!12042 = !DILocation(line: 5289, column: 15, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12014, file: !3, line: 5286, column: 5)
!12044 = !DILocation(line: 5290, column: 12, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 5290, column: 11)
!12046 = !DILocation(line: 5290, column: 44, scope: !12045)
!12047 = !DILocation(line: 5290, column: 41, scope: !12045)
!12048 = !DILocation(line: 5291, column: 9, scope: !12045)
!12049 = !DILocation(line: 0, scope: !12014)
!12050 = !DILocation(line: 5294, column: 7, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12005, file: !3, line: 5294, column: 7)
!12052 = !DILocation(line: 5294, column: 21, scope: !12051)
!12053 = !DILocation(line: 5294, column: 7, scope: !12005)
!12054 = !DILocation(line: 5295, column: 18, scope: !12051)
!12055 = !DILocation(line: 5295, column: 5, scope: !12051)
!12056 = !DILocation(line: 5296, column: 8, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12005, file: !3, line: 5296, column: 7)
!12058 = !DILocation(line: 5296, column: 7, scope: !12005)
!12059 = !DILocation(line: 5297, column: 5, scope: !12057)
!12060 = !DILocation(line: 5297, column: 34, scope: !12057)
!12061 = !DILocation(line: 5298, column: 30, scope: !12005)
!12062 = !DILocation(line: 5298, column: 3, scope: !12005)
!12063 = !DILocation(line: 5298, column: 28, scope: !12005)
!12064 = !DILocation(line: 5299, column: 3, scope: !12005)
!12065 = distinct !DISubprogram(name: "VEC_rtx_gc_safe_push", scope: !414, file: !414, line: 202, type: !12066, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12069)
!12066 = !DISubroutineType(types: !12067)
!12067 = !{!4934, !12068, !607}
!12068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!12069 = !{!12070, !12071}
!12070 = !DILocalVariable(name: "vec_", arg: 1, scope: !12065, file: !414, line: 202, type: !12068)
!12071 = !DILocalVariable(name: "obj_", arg: 2, scope: !12065, file: !414, line: 202, type: !607)
!12072 = !DILocation(line: 0, scope: !12065)
!12073 = !DILocation(line: 202, column: 1, scope: !12065)
!12074 = distinct !DISubprogram(name: "VEC_rtx_gc_reserve", scope: !414, file: !414, line: 202, type: !12075, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12077)
!12075 = !DISubroutineType(types: !12076)
!12076 = !{!595, !12068, !595}
!12077 = !{!12078, !12079, !12080}
!12078 = !DILocalVariable(name: "vec_", arg: 1, scope: !12074, file: !414, line: 202, type: !12068)
!12079 = !DILocalVariable(name: "alloc_", arg: 2, scope: !12074, file: !414, line: 202, type: !595)
!12080 = !DILocalVariable(name: "extend", scope: !12074, file: !414, line: 202, type: !595)
!12081 = !DILocation(line: 0, scope: !12074)
!12082 = !DILocation(line: 202, column: 1, scope: !12074)
!12083 = !DILocation(line: 202, column: 1, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12074, file: !414, line: 202, column: 1)
!12085 = distinct !DISubprogram(name: "VEC_rtx_base_quick_push", scope: !414, file: !414, line: 200, type: !12086, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12088)
!12086 = !DISubroutineType(types: !12087)
!12087 = !{!4934, !11625, !607}
!12088 = !{!12089, !12090, !12091}
!12089 = !DILocalVariable(name: "vec_", arg: 1, scope: !12085, file: !414, line: 200, type: !11625)
!12090 = !DILocalVariable(name: "obj_", arg: 2, scope: !12085, file: !414, line: 200, type: !607)
!12091 = !DILocalVariable(name: "slot_", scope: !12085, file: !414, line: 200, type: !4934)
!12092 = !DILocation(line: 0, scope: !12085)
!12093 = !DILocation(line: 200, column: 1, scope: !12085)
!12094 = distinct !DISubprogram(name: "VEC_rtx_base_space", scope: !414, file: !414, line: 200, type: !12095, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12097)
!12095 = !DISubroutineType(types: !12096)
!12096 = !{!595, !11625, !595}
!12097 = !{!12098, !12099}
!12098 = !DILocalVariable(name: "vec_", arg: 1, scope: !12094, file: !414, line: 200, type: !11625)
!12099 = !DILocalVariable(name: "alloc_", arg: 2, scope: !12094, file: !414, line: 200, type: !595)
!12100 = !DILocation(line: 0, scope: !12094)
!12101 = !DILocation(line: 200, column: 1, scope: !12094)
!12102 = distinct !DISubprogram(name: "VEC_vinsn_t_base_length", scope: !3, file: !3, line: 511, type: !12103, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12105)
!12103 = !DISubroutineType(types: !12104)
!12104 = !{!7, !9886}
!12105 = !{!12106}
!12106 = !DILocalVariable(name: "vec_", arg: 1, scope: !12102, file: !3, line: 511, type: !9886)
!12107 = !DILocation(line: 0, scope: !12102)
!12108 = !DILocation(line: 511, column: 1, scope: !12102)
!12109 = distinct !DISubprogram(name: "VEC_vinsn_t_base_block_remove", scope: !3, file: !3, line: 511, type: !12110, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12112)
!12110 = !DISubroutineType(types: !12111)
!12111 = !{null, !6456, !7, !7}
!12112 = !{!12113, !12114, !12115, !12116}
!12113 = !DILocalVariable(name: "vec_", arg: 1, scope: !12109, file: !3, line: 511, type: !6456)
!12114 = !DILocalVariable(name: "ix_", arg: 2, scope: !12109, file: !3, line: 511, type: !7)
!12115 = !DILocalVariable(name: "len_", arg: 3, scope: !12109, file: !3, line: 511, type: !7)
!12116 = !DILocalVariable(name: "slot_", scope: !12109, file: !3, line: 511, type: !4937)
!12117 = !DILocation(line: 0, scope: !12109)
!12118 = !DILocation(line: 511, column: 1, scope: !12109)
!12119 = distinct !DISubprogram(name: "extract_new_fences_from", scope: !3, file: !3, line: 636, type: !12120, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12122)
!12120 = !DISubroutineType(types: !12121)
!12121 = !{null, !2127, !3474, !595}
!12122 = !{!12123, !12124, !12125, !12126, !12127, !12128, !12129, !12130, !12131, !12132, !12133, !12136, !12143, !12144, !12148, !12151, !12156}
!12123 = !DILocalVariable(name: "old_fences", arg: 1, scope: !12119, file: !3, line: 636, type: !2127)
!12124 = !DILocalVariable(name: "new_fences", arg: 2, scope: !12119, file: !3, line: 636, type: !3474)
!12125 = !DILocalVariable(name: "orig_max_seqno", arg: 3, scope: !12119, file: !3, line: 637, type: !595)
!12126 = !DILocalVariable(name: "was_here_p", scope: !12119, file: !3, line: 639, type: !594)
!12127 = !DILocalVariable(name: "insn", scope: !12119, file: !3, line: 640, type: !1911)
!12128 = !DILocalVariable(name: "succ", scope: !12119, file: !3, line: 641, type: !1911)
!12129 = !DILocalVariable(name: "si", scope: !12119, file: !3, line: 642, type: !3600)
!12130 = !DILocalVariable(name: "ii", scope: !12119, file: !3, line: 643, type: !7719)
!12131 = !DILocalVariable(name: "fence", scope: !12119, file: !3, line: 644, type: !2180)
!12132 = !DILocalVariable(name: "bb", scope: !12119, file: !3, line: 645, type: !1141)
!12133 = !DILocalVariable(name: "succ", scope: !12134, file: !3, line: 662, type: !1911)
!12134 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 661, column: 5)
!12135 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 658, column: 7)
!12136 = !DILocalVariable(name: "__j", scope: !12137, file: !3, line: 676, type: !595)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 676, column: 13)
!12138 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 676, column: 13)
!12139 = distinct !DILexicalBlock(scope: !12140, file: !3, line: 676, column: 13)
!12140 = distinct !DILexicalBlock(scope: !12141, file: !3, line: 675, column: 15)
!12141 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 671, column: 9)
!12142 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 668, column: 11)
!12143 = !DILocalVariable(name: "__s", scope: !12137, file: !3, line: 676, type: !597)
!12144 = !DILocalVariable(name: "seqno", scope: !12145, file: !3, line: 685, type: !595)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !3, line: 684, column: 5)
!12146 = distinct !DILexicalBlock(scope: !12147, file: !3, line: 683, column: 3)
!12147 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 683, column: 3)
!12148 = !DILocalVariable(name: "b", scope: !12149, file: !3, line: 690, type: !594)
!12149 = distinct !DILexicalBlock(scope: !12150, file: !3, line: 689, column: 9)
!12150 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 687, column: 11)
!12151 = !DILocalVariable(name: "__j", scope: !12152, file: !3, line: 694, type: !595)
!12152 = distinct !DILexicalBlock(scope: !12153, file: !3, line: 694, column: 13)
!12153 = distinct !DILexicalBlock(scope: !12154, file: !3, line: 694, column: 13)
!12154 = distinct !DILexicalBlock(scope: !12155, file: !3, line: 694, column: 13)
!12155 = distinct !DILexicalBlock(scope: !12149, file: !3, line: 693, column: 15)
!12156 = !DILocalVariable(name: "__s", scope: !12152, file: !3, line: 694, type: !597)
!12157 = !DILocation(line: 0, scope: !12119)
!12158 = !DILocation(line: 640, column: 3, scope: !12119)
!12159 = !DILocation(line: 640, column: 10, scope: !12119)
!12160 = !DILocation(line: 641, column: 3, scope: !12119)
!12161 = !DILocation(line: 642, column: 3, scope: !12119)
!12162 = !DILocation(line: 643, column: 3, scope: !12119)
!12163 = !DILocation(line: 648, column: 3, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 648, column: 3)
!12165 = !DILocation(line: 0, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 648, column: 3)
!12167 = !DILocation(line: 648, column: 3, scope: !12166)
!12168 = !DILocation(line: 650, column: 7, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12166, file: !3, line: 649, column: 5)
!12170 = distinct !{!12170, !12163, !12171}
!12171 = !DILocation(line: 652, column: 5, scope: !12164)
!12172 = !DILocation(line: 644, column: 19, scope: !12119)
!12173 = !DILocation(line: 653, column: 3, scope: !12119)
!12174 = !DILocation(line: 657, column: 8, scope: !12119)
!12175 = !DILocation(line: 658, column: 9, scope: !12135)
!12176 = !DILocation(line: 659, column: 7, scope: !12135)
!12177 = !DILocation(line: 659, column: 11, scope: !12135)
!12178 = !DILocation(line: 660, column: 11, scope: !12135)
!12179 = !DILocation(line: 660, column: 29, scope: !12135)
!12180 = !DILocation(line: 660, column: 14, scope: !12135)
!12181 = !DILocation(line: 658, column: 7, scope: !12119)
!12182 = !DILocation(line: 664, column: 29, scope: !12134)
!12183 = !DILocation(line: 664, column: 15, scope: !12134)
!12184 = !DILocation(line: 665, column: 30, scope: !12134)
!12185 = !DILocation(line: 665, column: 17, scope: !12134)
!12186 = !DILocation(line: 666, column: 17, scope: !12134)
!12187 = !DILocation(line: 0, scope: !12134)
!12188 = !DILocation(line: 668, column: 11, scope: !12142)
!12189 = !DILocation(line: 668, column: 29, scope: !12142)
!12190 = !DILocation(line: 669, column: 11, scope: !12142)
!12191 = !DILocation(line: 669, column: 14, scope: !12142)
!12192 = !DILocation(line: 669, column: 32, scope: !12142)
!12193 = !DILocation(line: 670, column: 11, scope: !12142)
!12194 = !DILocation(line: 670, column: 14, scope: !12142)
!12195 = !DILocation(line: 670, column: 38, scope: !12142)
!12196 = !DILocation(line: 668, column: 11, scope: !12134)
!12197 = !DILocation(line: 672, column: 11, scope: !12141)
!12198 = !DILocation(line: 672, column: 30, scope: !12141)
!12199 = !DILocation(line: 673, column: 11, scope: !12141)
!12200 = !DILocation(line: 675, column: 15, scope: !12140)
!12201 = !DILocation(line: 675, column: 29, scope: !12140)
!12202 = !DILocation(line: 675, column: 15, scope: !12141)
!12203 = !DILocation(line: 676, column: 13, scope: !12138)
!12204 = !DILocation(line: 676, column: 13, scope: !12139)
!12205 = !DILocation(line: 676, column: 13, scope: !12137)
!12206 = !DILocation(line: 0, scope: !12137)
!12207 = !DILocation(line: 683, column: 3, scope: !12147)
!12208 = !DILocation(line: 683, column: 3, scope: !12146)
!12209 = !DILocation(line: 685, column: 19, scope: !12145)
!12210 = !DILocation(line: 0, scope: !12145)
!12211 = !DILocation(line: 687, column: 13, scope: !12150)
!12212 = !DILocation(line: 687, column: 30, scope: !12150)
!12213 = !DILocation(line: 687, column: 21, scope: !12150)
!12214 = !DILocation(line: 688, column: 15, scope: !12150)
!12215 = !DILocation(line: 688, column: 28, scope: !12150)
!12216 = !DILocation(line: 688, column: 31, scope: !12150)
!12217 = !DILocation(line: 688, column: 55, scope: !12150)
!12218 = !DILocation(line: 687, column: 11, scope: !12145)
!12219 = !DILocation(line: 690, column: 36, scope: !12149)
!12220 = !DILocation(line: 690, column: 42, scope: !12149)
!12221 = !DILocation(line: 690, column: 21, scope: !12149)
!12222 = !DILocation(line: 691, column: 21, scope: !12149)
!12223 = !DILocation(line: 691, column: 42, scope: !12149)
!12224 = !DILocation(line: 691, column: 48, scope: !12149)
!12225 = !DILocation(line: 691, column: 24, scope: !12149)
!12226 = !DILocation(line: 0, scope: !12149)
!12227 = !DILocation(line: 693, column: 15, scope: !12155)
!12228 = !DILocation(line: 693, column: 29, scope: !12155)
!12229 = !DILocation(line: 693, column: 15, scope: !12149)
!12230 = !DILocation(line: 694, column: 13, scope: !12153)
!12231 = !DILocation(line: 694, column: 13, scope: !12154)
!12232 = !DILocation(line: 694, column: 13, scope: !12152)
!12233 = !DILocation(line: 0, scope: !12152)
!12234 = !DILocation(line: 698, column: 15, scope: !12149)
!12235 = !DILocation(line: 699, column: 52, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12149, file: !3, line: 698, column: 15)
!12237 = !DILocation(line: 699, column: 13, scope: !12236)
!12238 = !DILocation(line: 703, column: 31, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 701, column: 13)
!12240 = !DILocation(line: 703, column: 49, scope: !12239)
!12241 = !DILocation(line: 703, column: 15, scope: !12239)
!12242 = !DILocation(line: 704, column: 54, scope: !12239)
!12243 = !DILocation(line: 704, column: 15, scope: !12239)
!12244 = distinct !{!12244, !12207, !12245}
!12245 = !DILocation(line: 707, column: 5, scope: !12147)
!12246 = !DILocation(line: 708, column: 1, scope: !12119)
!12247 = distinct !DISubprogram(name: "_list_iter_cond_x", scope: !398, file: !398, line: 501, type: !12248, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12250)
!12248 = !DISubroutineType(types: !12249)
!12249 = !{!594, !1943, !4934}
!12250 = !{!12251, !12252}
!12251 = !DILocalVariable(name: "l", arg: 1, scope: !12247, file: !398, line: 501, type: !1943)
!12252 = !DILocalVariable(name: "xp", arg: 2, scope: !12247, file: !398, line: 501, type: !4934)
!12253 = !DILocation(line: 0, scope: !12247)
!12254 = !DILocation(line: 503, column: 7, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12247, file: !398, line: 503, column: 7)
!12256 = !DILocation(line: 503, column: 7, scope: !12247)
!12257 = !DILocation(line: 505, column: 13, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12255, file: !398, line: 504, column: 5)
!12259 = !DILocation(line: 505, column: 11, scope: !12258)
!12260 = !DILocation(line: 506, column: 7, scope: !12258)
!12261 = !DILocation(line: 510, column: 1, scope: !12247)
!12262 = distinct !DISubprogram(name: "in_fallthru_bb_p", scope: !3, file: !3, line: 613, type: !5070, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12263)
!12263 = !{!12264, !12265, !12266}
!12264 = !DILocalVariable(name: "insn", arg: 1, scope: !12262, file: !3, line: 613, type: !607)
!12265 = !DILocalVariable(name: "succ", arg: 2, scope: !12262, file: !3, line: 613, type: !607)
!12266 = !DILocalVariable(name: "bb", scope: !12262, file: !3, line: 615, type: !1141)
!12267 = !DILocation(line: 0, scope: !12262)
!12268 = !DILocation(line: 615, column: 20, scope: !12262)
!12269 = !DILocation(line: 617, column: 13, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12262, file: !3, line: 617, column: 7)
!12271 = !DILocation(line: 617, column: 10, scope: !12270)
!12272 = !DILocation(line: 617, column: 7, scope: !12262)
!12273 = !DILocation(line: 620, column: 7, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12262, file: !3, line: 620, column: 7)
!12275 = !DILocation(line: 620, column: 7, scope: !12262)
!12276 = !DILocation(line: 621, column: 10, scope: !12274)
!12277 = !DILocation(line: 621, column: 35, scope: !12274)
!12278 = !DILocation(line: 625, column: 3, scope: !12262)
!12279 = !DILocation(line: 625, column: 10, scope: !12262)
!12280 = !DILocation(line: 626, column: 14, scope: !12262)
!12281 = distinct !{!12281, !12278, !12280}
!12282 = !DILocation(line: 628, column: 16, scope: !12262)
!12283 = !DILocation(line: 628, column: 13, scope: !12262)
!12284 = !DILocation(line: 628, column: 10, scope: !12262)
!12285 = !DILocation(line: 628, column: 3, scope: !12262)
!12286 = !DILocation(line: 629, column: 1, scope: !12262)
!12287 = distinct !DISubprogram(name: "simplify_changed_insns", scope: !3, file: !3, line: 6904, type: !3458, scopeLine: 6905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12288)
!12288 = !{!12289, !12290, !12294, !12295}
!12289 = !DILocalVariable(name: "i", scope: !12287, file: !3, line: 6906, type: !595)
!12290 = !DILocalVariable(name: "bb", scope: !12291, file: !3, line: 6910, type: !1141)
!12291 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 6909, column: 5)
!12292 = distinct !DILexicalBlock(scope: !12293, file: !3, line: 6908, column: 3)
!12293 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 6908, column: 3)
!12294 = !DILocalVariable(name: "insn", scope: !12291, file: !3, line: 6911, type: !607)
!12295 = !DILocalVariable(name: "expr", scope: !12296, file: !3, line: 6916, type: !1834)
!12296 = distinct !DILexicalBlock(scope: !12297, file: !3, line: 6915, column: 4)
!12297 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 6914, column: 6)
!12298 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 6913, column: 7)
!12299 = distinct !DILexicalBlock(scope: !12291, file: !3, line: 6913, column: 7)
!12300 = !DILocation(line: 0, scope: !12287)
!12301 = !DILocation(line: 6908, column: 8, scope: !12293)
!12302 = !DILocation(line: 0, scope: !12293)
!12303 = !DILocation(line: 6908, column: 19, scope: !12292)
!12304 = !DILocation(line: 6908, column: 17, scope: !12292)
!12305 = !DILocation(line: 6908, column: 3, scope: !12293)
!12306 = !DILocation(line: 6910, column: 24, scope: !12291)
!12307 = !DILocation(line: 0, scope: !12291)
!12308 = !DILocation(line: 6913, column: 7, scope: !12299)
!12309 = !DILocation(line: 0, scope: !12299)
!12310 = !DILocation(line: 6913, column: 7, scope: !12298)
!12311 = !DILocation(line: 6914, column: 6, scope: !12297)
!12312 = !DILocation(line: 6914, column: 6, scope: !12298)
!12313 = !DILocation(line: 6916, column: 20, scope: !12296)
!12314 = !DILocation(line: 0, scope: !12296)
!12315 = !DILocation(line: 6918, column: 10, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12296, file: !3, line: 6918, column: 10)
!12317 = !DILocation(line: 6918, column: 10, scope: !12296)
!12318 = !DILocation(line: 6919, column: 8, scope: !12316)
!12319 = distinct !{!12319, !12308, !12320}
!12320 = !DILocation(line: 6920, column: 4, scope: !12299)
!12321 = !DILocation(line: 6908, column: 39, scope: !12292)
!12322 = !DILocation(line: 6908, column: 3, scope: !12292)
!12323 = distinct !{!12323, !12305, !12324}
!12324 = !DILocation(line: 6921, column: 5, scope: !12293)
!12325 = !DILocation(line: 6922, column: 1, scope: !12287)
!12326 = distinct !DISubprogram(name: "VEC_expr_t_heap_free", scope: !3, file: !3, line: 507, type: !12327, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12329)
!12327 = !DISubroutineType(types: !12328)
!12328 = !{null, !9518}
!12329 = !{!12330}
!12330 = !DILocalVariable(name: "vec_", arg: 1, scope: !12326, file: !3, line: 507, type: !9518)
!12331 = !DILocation(line: 0, scope: !12326)
!12332 = !DILocation(line: 507, column: 1, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 507, column: 1)
!12334 = !DILocation(line: 507, column: 1, scope: !12326)
!12335 = distinct !DISubprogram(name: "vinsn_vec_free", scope: !3, file: !3, line: 3665, type: !7938, scopeLine: 3666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12336)
!12336 = !{!12337}
!12337 = !DILocalVariable(name: "vinsn_vec", arg: 1, scope: !12335, file: !3, line: 3665, type: !6424)
!12338 = !DILocation(line: 0, scope: !12335)
!12339 = !DILocation(line: 3667, column: 7, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12335, file: !3, line: 3667, column: 7)
!12341 = !DILocation(line: 3667, column: 7, scope: !12335)
!12342 = !DILocation(line: 3668, column: 5, scope: !12340)
!12343 = !DILocation(line: 3669, column: 1, scope: !12335)
!12344 = distinct !DISubprogram(name: "sel_region_target_finish", scope: !3, file: !3, line: 7123, type: !3594, scopeLine: 7124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12345)
!12345 = !{!12346, !12347, !12348}
!12346 = !DILocalVariable(name: "reset_sched_cycles_p", arg: 1, scope: !12344, file: !3, line: 7123, type: !594)
!12347 = !DILocalVariable(name: "i", scope: !12344, file: !3, line: 7125, type: !595)
!12348 = !DILocalVariable(name: "scheduled_blocks", scope: !12344, file: !3, line: 7126, type: !1853)
!12349 = !DILocation(line: 0, scope: !12344)
!12350 = !DILocation(line: 7126, column: 29, scope: !12344)
!12351 = !DILocation(line: 0, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 7143, column: 11)
!12353 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 7129, column: 5)
!12354 = distinct !DILexicalBlock(scope: !12355, file: !3, line: 7128, column: 3)
!12355 = distinct !DILexicalBlock(scope: !12344, file: !3, line: 7128, column: 3)
!12356 = !DILocation(line: 7128, column: 8, scope: !12355)
!12357 = !DILocation(line: 0, scope: !12355)
!12358 = !DILocation(line: 7128, column: 19, scope: !12354)
!12359 = !DILocation(line: 7128, column: 17, scope: !12354)
!12360 = !DILocation(line: 7128, column: 3, scope: !12355)
!12361 = !DILocation(line: 7130, column: 11, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 7130, column: 11)
!12363 = !DILocation(line: 7130, column: 11, scope: !12353)
!12364 = !DILocation(line: 7135, column: 36, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 7135, column: 11)
!12366 = !DILocation(line: 7135, column: 11, scope: !12365)
!12367 = !DILocation(line: 7135, column: 11, scope: !12353)
!12368 = !DILocation(line: 7138, column: 28, scope: !12353)
!12369 = !DILocation(line: 7138, column: 7, scope: !12353)
!12370 = !DILocation(line: 7140, column: 28, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 7140, column: 11)
!12372 = !DILocation(line: 7140, column: 48, scope: !12371)
!12373 = !DILocation(line: 7140, column: 74, scope: !12371)
!12374 = !DILocation(line: 7140, column: 11, scope: !12371)
!12375 = !DILocation(line: 7140, column: 11, scope: !12353)
!12376 = !DILocation(line: 7146, column: 25, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 7146, column: 11)
!12378 = !DILocation(line: 7146, column: 11, scope: !12377)
!12379 = !DILocation(line: 7146, column: 11, scope: !12353)
!12380 = !DILocation(line: 7147, column: 25, scope: !12377)
!12381 = !DILocation(line: 7147, column: 37, scope: !12377)
!12382 = !DILocation(line: 7147, column: 2, scope: !12377)
!12383 = !DILocation(line: 7149, column: 7, scope: !12353)
!12384 = !DILocation(line: 7151, column: 25, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 7151, column: 11)
!12386 = !DILocation(line: 7151, column: 11, scope: !12385)
!12387 = !DILocation(line: 7151, column: 11, scope: !12353)
!12388 = !DILocation(line: 7153, column: 29, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 7152, column: 2)
!12390 = !DILocation(line: 7153, column: 41, scope: !12389)
!12391 = !DILocation(line: 7153, column: 4, scope: !12389)
!12392 = !DILocation(line: 7157, column: 4, scope: !12389)
!12393 = !DILocation(line: 7158, column: 2, scope: !12389)
!12394 = !DILocation(line: 7128, column: 39, scope: !12354)
!12395 = !DILocation(line: 7128, column: 3, scope: !12354)
!12396 = distinct !{!12396, !12360, !12397}
!12397 = !DILocation(line: 7159, column: 5, scope: !12355)
!12398 = !DILocation(line: 7161, column: 3, scope: !12344)
!12399 = !DILocation(line: 7144, column: 2, scope: !12352)
!12400 = !DILocation(line: 7162, column: 1, scope: !12344)
!12401 = distinct !DISubprogram(name: "VEC_vinsn_t_heap_free", scope: !3, file: !3, line: 512, type: !12402, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12404)
!12402 = !DISubroutineType(types: !12403)
!12403 = !{null, !6436}
!12404 = !{!12405}
!12405 = !DILocalVariable(name: "vec_", arg: 1, scope: !12401, file: !3, line: 512, type: !6436)
!12406 = !DILocation(line: 0, scope: !12401)
!12407 = !DILocation(line: 512, column: 1, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 512, column: 1)
!12409 = !DILocation(line: 512, column: 1, scope: !12401)
!12410 = distinct !DISubprogram(name: "find_ebb_boundaries", scope: !3, file: !3, line: 6928, type: !12411, scopeLine: 6929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12413)
!12411 = !DISubroutineType(types: !12412)
!12412 = !{null, !1141, !1853}
!12413 = !{!12414, !12415, !12416, !12417, !12418, !12419, !12424, !12425, !12431, !12432, !12437}
!12414 = !DILocalVariable(name: "bb", arg: 1, scope: !12410, file: !3, line: 6928, type: !1141)
!12415 = !DILocalVariable(name: "scheduled_blocks", arg: 2, scope: !12410, file: !3, line: 6928, type: !1853)
!12416 = !DILocalVariable(name: "head", scope: !12410, file: !3, line: 6930, type: !1911)
!12417 = !DILocalVariable(name: "tail", scope: !12410, file: !3, line: 6930, type: !1911)
!12418 = !DILocalVariable(name: "bb1", scope: !12410, file: !3, line: 6931, type: !1141)
!12419 = !DILocalVariable(name: "__j", scope: !12420, file: !3, line: 6933, type: !595)
!12420 = distinct !DILexicalBlock(scope: !12421, file: !3, line: 6933, column: 5)
!12421 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 6933, column: 5)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !3, line: 6933, column: 5)
!12423 = distinct !DILexicalBlock(scope: !12410, file: !3, line: 6932, column: 7)
!12424 = !DILocalVariable(name: "__s", scope: !12420, file: !3, line: 6933, type: !597)
!12425 = !DILocalVariable(name: "__j", scope: !12426, file: !3, line: 6940, type: !595)
!12426 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 6940, column: 2)
!12427 = distinct !DILexicalBlock(scope: !12428, file: !3, line: 6940, column: 2)
!12428 = distinct !DILexicalBlock(scope: !12429, file: !3, line: 6940, column: 2)
!12429 = distinct !DILexicalBlock(scope: !12430, file: !3, line: 6939, column: 11)
!12430 = distinct !DILexicalBlock(scope: !12410, file: !3, line: 6936, column: 5)
!12431 = !DILocalVariable(name: "__s", scope: !12426, file: !3, line: 6940, type: !597)
!12432 = !DILocalVariable(name: "__j", scope: !12433, file: !3, line: 6945, type: !595)
!12433 = distinct !DILexicalBlock(scope: !12434, file: !3, line: 6945, column: 5)
!12434 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 6945, column: 5)
!12435 = distinct !DILexicalBlock(scope: !12436, file: !3, line: 6945, column: 5)
!12436 = distinct !DILexicalBlock(scope: !12410, file: !3, line: 6944, column: 7)
!12437 = !DILocalVariable(name: "__s", scope: !12433, file: !3, line: 6945, type: !597)
!12438 = !DILocation(line: 0, scope: !12410)
!12439 = !DILocation(line: 6930, column: 3, scope: !12410)
!12440 = !DILocation(line: 6932, column: 7, scope: !12423)
!12441 = !DILocation(line: 6932, column: 21, scope: !12423)
!12442 = !DILocation(line: 6932, column: 7, scope: !12410)
!12443 = !DILocation(line: 6933, column: 5, scope: !12421)
!12444 = !DILocation(line: 6933, column: 5, scope: !12422)
!12445 = !DILocation(line: 6933, column: 5, scope: !12420)
!12446 = !DILocation(line: 0, scope: !12420)
!12447 = !DILocation(line: 6935, column: 3, scope: !12410)
!12448 = !DILocation(line: 6931, column: 15, scope: !12410)
!12449 = !DILocation(line: 6937, column: 41, scope: !12430)
!12450 = !DILocation(line: 6937, column: 7, scope: !12430)
!12451 = !DILocation(line: 6939, column: 11, scope: !12429)
!12452 = !DILocation(line: 6939, column: 25, scope: !12429)
!12453 = !DILocation(line: 6939, column: 11, scope: !12430)
!12454 = !DILocation(line: 6940, column: 2, scope: !12427)
!12455 = !DILocation(line: 6940, column: 2, scope: !12428)
!12456 = !DILocation(line: 6940, column: 2, scope: !12426)
!12457 = !DILocation(line: 0, scope: !12426)
!12458 = !DILocation(line: 6942, column: 11, scope: !12410)
!12459 = !DILocation(line: 6942, column: 31, scope: !12410)
!12460 = !DILocation(line: 6942, column: 41, scope: !12410)
!12461 = !DILocation(line: 6941, column: 5, scope: !12430)
!12462 = distinct !{!12462, !12447, !12463}
!12463 = !DILocation(line: 6942, column: 58, scope: !12410)
!12464 = !DILocation(line: 6944, column: 7, scope: !12436)
!12465 = !DILocation(line: 6944, column: 21, scope: !12436)
!12466 = !DILocation(line: 6944, column: 7, scope: !12410)
!12467 = !DILocation(line: 6945, column: 5, scope: !12434)
!12468 = !DILocation(line: 6945, column: 5, scope: !12435)
!12469 = !DILocation(line: 6945, column: 5, scope: !12433)
!12470 = !DILocation(line: 0, scope: !12433)
!12471 = !DILocation(line: 6947, column: 3, scope: !12410)
!12472 = !DILocation(line: 6949, column: 30, scope: !12410)
!12473 = !DILocation(line: 6949, column: 3, scope: !12410)
!12474 = !DILocation(line: 6949, column: 23, scope: !12410)
!12475 = !DILocation(line: 6949, column: 28, scope: !12410)
!12476 = !DILocation(line: 6950, column: 30, scope: !12410)
!12477 = !DILocation(line: 6950, column: 23, scope: !12410)
!12478 = !DILocation(line: 6950, column: 28, scope: !12410)
!12479 = !DILocation(line: 6951, column: 35, scope: !12410)
!12480 = !DILocation(line: 6951, column: 23, scope: !12410)
!12481 = !DILocation(line: 6951, column: 33, scope: !12410)
!12482 = !DILocation(line: 6952, column: 35, scope: !12410)
!12483 = !DILocation(line: 6952, column: 23, scope: !12410)
!12484 = !DILocation(line: 6952, column: 33, scope: !12410)
!12485 = !DILocation(line: 6953, column: 1, scope: !12410)
!12486 = distinct !DISubprogram(name: "reset_sched_cycles_in_current_ebb", scope: !3, file: !3, line: 6957, type: !3458, scopeLine: 6958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12487)
!12487 = !{!12488, !12489, !12490, !12491, !12492, !12496, !12497, !12498, !12499, !12500, !12501, !12502, !12505, !12512, !12513, !12518, !12519, !12527}
!12488 = !DILocalVariable(name: "last_clock", scope: !12486, file: !3, line: 6959, type: !595)
!12489 = !DILocalVariable(name: "haifa_last_clock", scope: !12486, file: !3, line: 6960, type: !595)
!12490 = !DILocalVariable(name: "haifa_clock", scope: !12486, file: !3, line: 6961, type: !595)
!12491 = !DILocalVariable(name: "insn", scope: !12486, file: !3, line: 6962, type: !1911)
!12492 = !DILocalVariable(name: "cost", scope: !12493, file: !3, line: 6978, type: !595)
!12493 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 6977, column: 5)
!12494 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 6974, column: 3)
!12495 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 6974, column: 3)
!12496 = !DILocalVariable(name: "haifa_cost", scope: !12493, file: !3, line: 6978, type: !595)
!12497 = !DILocalVariable(name: "sort_p", scope: !12493, file: !3, line: 6979, type: !595)
!12498 = !DILocalVariable(name: "asm_p", scope: !12493, file: !3, line: 6980, type: !594)
!12499 = !DILocalVariable(name: "real_insn", scope: !12493, file: !3, line: 6980, type: !594)
!12500 = !DILocalVariable(name: "after_stall", scope: !12493, file: !3, line: 6980, type: !594)
!12501 = !DILocalVariable(name: "clock", scope: !12493, file: !3, line: 6981, type: !595)
!12502 = !DILocalVariable(name: "i", scope: !12503, file: !3, line: 7019, type: !595)
!12503 = distinct !DILexicalBlock(scope: !12504, file: !3, line: 7018, column: 2)
!12504 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 7017, column: 11)
!12505 = !DILocalVariable(name: "__j", scope: !12506, file: !3, line: 7028, type: !595)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !3, line: 7028, column: 19)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !3, line: 7028, column: 19)
!12508 = distinct !DILexicalBlock(scope: !12509, file: !3, line: 7028, column: 19)
!12509 = distinct !DILexicalBlock(scope: !12510, file: !3, line: 7027, column: 17)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !3, line: 7026, column: 12)
!12511 = distinct !DILexicalBlock(scope: !12503, file: !3, line: 7022, column: 6)
!12512 = !DILocalVariable(name: "__s", scope: !12506, file: !3, line: 7028, type: !597)
!12513 = !DILocalVariable(name: "__j", scope: !12514, file: !3, line: 7048, type: !595)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !3, line: 7048, column: 2)
!12515 = distinct !DILexicalBlock(scope: !12516, file: !3, line: 7048, column: 2)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !3, line: 7048, column: 2)
!12517 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 7047, column: 11)
!12518 = !DILocalVariable(name: "__s", scope: !12514, file: !3, line: 7048, type: !597)
!12519 = !DILocalVariable(name: "__j", scope: !12520, file: !3, line: 7059, type: !595)
!12520 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 7059, column: 17)
!12521 = distinct !DILexicalBlock(scope: !12522, file: !3, line: 7059, column: 17)
!12522 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 7059, column: 17)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !3, line: 7058, column: 15)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !3, line: 7057, column: 10)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !3, line: 7054, column: 4)
!12526 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 7050, column: 11)
!12527 = !DILocalVariable(name: "__s", scope: !12520, file: !3, line: 7059, type: !597)
!12528 = !DILocation(line: 0, scope: !12486)
!12529 = !DILocation(line: 6964, column: 21, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 6964, column: 7)
!12531 = !DILocation(line: 6964, column: 7, scope: !12530)
!12532 = !DILocation(line: 6964, column: 7, scope: !12486)
!12533 = !DILocation(line: 6968, column: 30, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 6965, column: 5)
!12535 = !DILocation(line: 6968, column: 42, scope: !12534)
!12536 = !DILocation(line: 6968, column: 7, scope: !12534)
!12537 = !DILocation(line: 6969, column: 5, scope: !12534)
!12538 = !DILocation(line: 6971, column: 16, scope: !12486)
!12539 = !DILocation(line: 6971, column: 3, scope: !12486)
!12540 = !DILocation(line: 6972, column: 18, scope: !12486)
!12541 = !DILocation(line: 6972, column: 3, scope: !12486)
!12542 = !DILocation(line: 6974, column: 15, scope: !12495)
!12543 = !DILocation(line: 6974, column: 35, scope: !12495)
!12544 = !DILocation(line: 0, scope: !12493)
!12545 = !DILocation(line: 6974, column: 8, scope: !12495)
!12546 = !DILocation(line: 6975, column: 16, scope: !12494)
!12547 = !DILocation(line: 0, scope: !12495)
!12548 = !DILocation(line: 6975, column: 36, scope: !12494)
!12549 = !DILocation(line: 6975, column: 13, scope: !12494)
!12550 = !DILocation(line: 6974, column: 3, scope: !12495)
!12551 = !DILocation(line: 6979, column: 7, scope: !12493)
!12552 = !DILocation(line: 6983, column: 12, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 6983, column: 11)
!12554 = !DILocation(line: 6983, column: 11, scope: !12493)
!12555 = !DILocation(line: 6987, column: 19, scope: !12493)
!12556 = !DILocation(line: 6988, column: 15, scope: !12493)
!12557 = !DILocation(line: 6990, column: 20, scope: !12493)
!12558 = !DILocation(line: 6993, column: 13, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 6993, column: 11)
!12560 = !DILocation(line: 6993, column: 11, scope: !12493)
!12561 = !DILocation(line: 6995, column: 12, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12559, file: !3, line: 6994, column: 2)
!12563 = !DILocation(line: 7005, column: 2, scope: !12562)
!12564 = !DILocation(line: 7007, column: 48, scope: !12559)
!12565 = !DILocation(line: 7007, column: 22, scope: !12559)
!12566 = !DILocation(line: 0, scope: !12559)
!12567 = !DILocation(line: 7011, column: 11, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 7011, column: 11)
!12569 = !DILocation(line: 7011, column: 45, scope: !12568)
!12570 = !DILocation(line: 7011, column: 37, scope: !12568)
!12571 = !DILocation(line: 7017, column: 22, scope: !12504)
!12572 = !DILocation(line: 7017, column: 11, scope: !12493)
!12573 = !DILocation(line: 0, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12511, file: !3, line: 7035, column: 19)
!12575 = !DILocation(line: 7021, column: 4, scope: !12503)
!12576 = !DILocation(line: 0, scope: !12503)
!12577 = !DILocation(line: 7021, column: 21, scope: !12503)
!12578 = !DILocation(line: 7023, column: 23, scope: !12511)
!12579 = !DILocation(line: 7023, column: 8, scope: !12511)
!12580 = !DILocation(line: 7024, column: 16, scope: !12511)
!12581 = !DILocation(line: 7026, column: 12, scope: !12510)
!12582 = !DILocation(line: 7026, column: 26, scope: !12510)
!12583 = !DILocation(line: 7026, column: 12, scope: !12511)
!12584 = !DILocation(line: 7028, column: 19, scope: !12507)
!12585 = !DILocation(line: 7028, column: 19, scope: !12508)
!12586 = !DILocation(line: 7028, column: 19, scope: !12506)
!12587 = !DILocation(line: 0, scope: !12506)
!12588 = !DILocation(line: 7029, column: 32, scope: !12509)
!12589 = !DILocation(line: 7029, column: 19, scope: !12509)
!12590 = !DILocation(line: 7030, column: 17, scope: !12509)
!12591 = !DILocation(line: 7037, column: 33, scope: !12574)
!12592 = !DILocation(line: 7036, column: 19, scope: !12574)
!12593 = !DILocation(line: 7038, column: 48, scope: !12574)
!12594 = !DILocation(line: 7038, column: 22, scope: !12574)
!12595 = !DILocation(line: 7038, column: 60, scope: !12574)
!12596 = !DILocation(line: 7035, column: 19, scope: !12511)
!12597 = distinct !{!12597, !12575, !12598}
!12598 = !DILocation(line: 7040, column: 6, scope: !12503)
!12599 = !DILocation(line: 7042, column: 16, scope: !12503)
!12600 = !DILocation(line: 7043, column: 2, scope: !12503)
!12601 = !DILocation(line: 7045, column: 2, scope: !12504)
!12602 = !DILocation(line: 7047, column: 11, scope: !12517)
!12603 = !DILocation(line: 7047, column: 25, scope: !12517)
!12604 = !DILocation(line: 7047, column: 11, scope: !12493)
!12605 = !DILocation(line: 7048, column: 2, scope: !12515)
!12606 = !DILocation(line: 7048, column: 2, scope: !12516)
!12607 = !DILocation(line: 7048, column: 2, scope: !12514)
!12608 = !DILocation(line: 0, scope: !12514)
!12609 = !DILocation(line: 7050, column: 25, scope: !12526)
!12610 = !DILocation(line: 7050, column: 11, scope: !12526)
!12611 = !DILocation(line: 7050, column: 11, scope: !12493)
!12612 = !DILocation(line: 7051, column: 2, scope: !12526)
!12613 = !DILocation(line: 7051, column: 23, scope: !12526)
!12614 = !DILocation(line: 7051, column: 38, scope: !12526)
!12615 = !DILocation(line: 7051, column: 50, scope: !12526)
!12616 = !DILocation(line: 7051, column: 9, scope: !12526)
!12617 = !DILocation(line: 7055, column: 21, scope: !12525)
!12618 = !DILocation(line: 7055, column: 6, scope: !12525)
!12619 = !DILocation(line: 7056, column: 17, scope: !12525)
!12620 = !DILocation(line: 7057, column: 10, scope: !12524)
!12621 = !DILocation(line: 7057, column: 24, scope: !12524)
!12622 = !DILocation(line: 7057, column: 10, scope: !12525)
!12623 = !DILocation(line: 7059, column: 17, scope: !12521)
!12624 = !DILocation(line: 7059, column: 17, scope: !12522)
!12625 = !DILocation(line: 7059, column: 17, scope: !12520)
!12626 = !DILocation(line: 0, scope: !12520)
!12627 = !DILocation(line: 7060, column: 30, scope: !12523)
!12628 = !DILocation(line: 7060, column: 17, scope: !12523)
!12629 = !DILocation(line: 7061, column: 15, scope: !12523)
!12630 = distinct !{!12630, !12612, !12631}
!12631 = !DILocation(line: 7062, column: 11, scope: !12526)
!12632 = !DILocation(line: 7064, column: 11, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 7064, column: 11)
!12634 = !DILocation(line: 7064, column: 11, scope: !12493)
!12635 = !DILocation(line: 7066, column: 29, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12633, file: !3, line: 7065, column: 2)
!12637 = !DILocation(line: 7066, column: 11, scope: !12636)
!12638 = !DILocation(line: 7068, column: 15, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12636, file: !3, line: 7068, column: 15)
!12640 = !DILocation(line: 7068, column: 29, scope: !12639)
!12641 = !DILocation(line: 7068, column: 15, scope: !12636)
!12642 = !DILocation(line: 7069, column: 26, scope: !12639)
!12643 = !DILocation(line: 7069, column: 13, scope: !12639)
!12644 = !DILocation(line: 7071, column: 4, scope: !12636)
!12645 = !DILocation(line: 7074, column: 25, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 7074, column: 11)
!12647 = !DILocation(line: 7074, column: 11, scope: !12646)
!12648 = !DILocation(line: 7074, column: 11, scope: !12493)
!12649 = !DILocation(line: 7075, column: 32, scope: !12646)
!12650 = !DILocation(line: 7075, column: 44, scope: !12646)
!12651 = !DILocation(line: 7075, column: 2, scope: !12646)
!12652 = !DILocation(line: 7077, column: 7, scope: !12493)
!12653 = !DILocation(line: 7077, column: 31, scope: !12493)
!12654 = !DILocation(line: 7081, column: 5, scope: !12494)
!12655 = !DILocation(line: 6976, column: 15, scope: !12494)
!12656 = !DILocation(line: 6974, column: 3, scope: !12494)
!12657 = distinct !{!12657, !12550, !12658}
!12658 = !DILocation(line: 7081, column: 5, scope: !12495)
!12659 = !DILocation(line: 7082, column: 1, scope: !12486)
!12660 = distinct !DISubprogram(name: "put_TImodes", scope: !3, file: !3, line: 7086, type: !3458, scopeLine: 7087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12661)
!12661 = !{!12662, !12663, !12664, !12668, !12669, !12674}
!12662 = !DILocalVariable(name: "last_clock", scope: !12660, file: !3, line: 7088, type: !595)
!12663 = !DILocalVariable(name: "insn", scope: !12660, file: !3, line: 7089, type: !1911)
!12664 = !DILocalVariable(name: "cost", scope: !12665, file: !3, line: 7094, type: !595)
!12665 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 7093, column: 5)
!12666 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 7091, column: 3)
!12667 = distinct !DILexicalBlock(scope: !12660, file: !3, line: 7091, column: 3)
!12668 = !DILocalVariable(name: "clock", scope: !12665, file: !3, line: 7094, type: !595)
!12669 = !DILocalVariable(name: "__j", scope: !12670, file: !3, line: 7115, type: !595)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !3, line: 7115, column: 2)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !3, line: 7115, column: 2)
!12672 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 7115, column: 2)
!12673 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 7114, column: 11)
!12674 = !DILocalVariable(name: "__s", scope: !12670, file: !3, line: 7115, type: !597)
!12675 = !DILocation(line: 0, scope: !12660)
!12676 = !DILocation(line: 7091, column: 15, scope: !12667)
!12677 = !DILocation(line: 7091, column: 35, scope: !12667)
!12678 = !DILocation(line: 7091, column: 8, scope: !12667)
!12679 = !DILocation(line: 7091, column: 49, scope: !12666)
!12680 = !DILocation(line: 0, scope: !12667)
!12681 = !DILocation(line: 7091, column: 69, scope: !12666)
!12682 = !DILocation(line: 7091, column: 46, scope: !12666)
!12683 = !DILocation(line: 7091, column: 3, scope: !12667)
!12684 = !DILocation(line: 7096, column: 12, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 7096, column: 11)
!12686 = !DILocation(line: 7096, column: 11, scope: !12665)
!12687 = !DILocation(line: 7099, column: 15, scope: !12665)
!12688 = !DILocation(line: 0, scope: !12665)
!12689 = !DILocation(line: 7100, column: 26, scope: !12665)
!12690 = !DILocation(line: 7100, column: 14, scope: !12665)
!12691 = !DILocation(line: 7102, column: 7, scope: !12665)
!12692 = !DILocation(line: 7104, column: 11, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 7104, column: 11)
!12694 = !DILocation(line: 7104, column: 22, scope: !12693)
!12695 = !DILocation(line: 7105, column: 4, scope: !12693)
!12696 = !DILocation(line: 7105, column: 7, scope: !12693)
!12697 = !DILocation(line: 7105, column: 33, scope: !12693)
!12698 = !DILocation(line: 7106, column: 4, scope: !12693)
!12699 = !DILocation(line: 7106, column: 33, scope: !12693)
!12700 = !DILocation(line: 7104, column: 11, scope: !12665)
!12701 = !DILocation(line: 7108, column: 8, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12703, file: !3, line: 7108, column: 8)
!12703 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 7107, column: 2)
!12704 = !DILocation(line: 7108, column: 33, scope: !12702)
!12705 = !DILocation(line: 7108, column: 25, scope: !12702)
!12706 = !DILocation(line: 7109, column: 6, scope: !12702)
!12707 = !DILocation(line: 7114, column: 11, scope: !12673)
!12708 = !DILocation(line: 7114, column: 25, scope: !12673)
!12709 = !DILocation(line: 7114, column: 11, scope: !12665)
!12710 = !DILocation(line: 7115, column: 2, scope: !12671)
!12711 = !DILocation(line: 7115, column: 2, scope: !12672)
!12712 = !DILocation(line: 7115, column: 2, scope: !12670)
!12713 = !DILocation(line: 0, scope: !12670)
!12714 = !DILocation(line: 7092, column: 15, scope: !12666)
!12715 = !DILocation(line: 7091, column: 3, scope: !12666)
!12716 = distinct !{!12716, !12683, !12717}
!12717 = !DILocation(line: 7116, column: 5, scope: !12667)
!12718 = !DILocation(line: 7117, column: 1, scope: !12660)
!12719 = distinct !DISubprogram(name: "bb_next_bb", scope: !398, file: !398, line: 1465, type: !12720, scopeLine: 1466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12722)
!12720 = !DISubroutineType(types: !12721)
!12721 = !{!1141, !1141}
!12722 = !{!12723}
!12723 = !DILocalVariable(name: "bb", arg: 1, scope: !12719, file: !398, line: 1465, type: !1141)
!12724 = !DILocation(line: 0, scope: !12719)
!12725 = !DILocation(line: 1467, column: 11, scope: !12719)
!12726 = !DILocation(line: 1467, column: 3, scope: !12719)
!12727 = !DILocation(line: 1470, column: 18, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12719, file: !398, line: 1468, column: 5)
!12729 = !DILocation(line: 1470, column: 7, scope: !12728)
!12730 = !DILocation(line: 1473, column: 14, scope: !12728)
!12731 = !DILocation(line: 1473, column: 7, scope: !12728)
!12732 = !DILocation(line: 1476, column: 14, scope: !12728)
!12733 = !DILocation(line: 1476, column: 34, scope: !12728)
!12734 = !DILocation(line: 1476, column: 7, scope: !12728)
!12735 = !DILocation(line: 1479, column: 18, scope: !12728)
!12736 = !DILocation(line: 1479, column: 7, scope: !12728)
!12737 = !DILocation(line: 0, scope: !12728)
!12738 = !DILocation(line: 1483, column: 1, scope: !12719)
!12739 = distinct !DISubprogram(name: "init_hard_regs_data", scope: !3, file: !3, line: 1171, type: !3458, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12740)
!12740 = !{!12741, !12742}
!12741 = !DILocalVariable(name: "cur_reg", scope: !12739, file: !3, line: 1173, type: !595)
!12742 = !DILocalVariable(name: "cur_mode", scope: !12739, file: !3, line: 1174, type: !595)
!12743 = !DILocation(line: 0, scope: !12739)
!12744 = !DILocation(line: 1176, column: 3, scope: !12739)
!12745 = !DILocation(line: 1177, column: 8, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1177, column: 3)
!12747 = !DILocation(line: 0, scope: !12746)
!12748 = !DILocation(line: 1177, column: 29, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 1177, column: 3)
!12750 = !DILocation(line: 1177, column: 3, scope: !12746)
!12751 = !DILocation(line: 1183, column: 3, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1183, column: 3)
!12753 = !DILocation(line: 1178, column: 9, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12749, file: !3, line: 1178, column: 9)
!12755 = !DILocation(line: 1178, column: 39, scope: !12754)
!12756 = !DILocation(line: 1178, column: 42, scope: !12754)
!12757 = !DILocation(line: 1178, column: 9, scope: !12749)
!12758 = !DILocation(line: 1179, column: 7, scope: !12754)
!12759 = !DILocation(line: 1177, column: 61, scope: !12749)
!12760 = !DILocation(line: 1177, column: 3, scope: !12749)
!12761 = distinct !{!12761, !12750, !12762}
!12762 = !DILocation(line: 1179, column: 7, scope: !12746)
!12763 = !DILocation(line: 0, scope: !12752)
!12764 = !DILocation(line: 1183, column: 31, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12752, file: !3, line: 1183, column: 3)
!12766 = !DILocation(line: 1187, column: 3, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1187, column: 3)
!12768 = !DILocation(line: 1184, column: 5, scope: !12765)
!12769 = !DILocation(line: 1184, column: 40, scope: !12765)
!12770 = !DILocation(line: 1183, column: 60, scope: !12765)
!12771 = !DILocation(line: 1183, column: 3, scope: !12765)
!12772 = distinct !{!12772, !12751, !12773}
!12773 = !DILocation(line: 1184, column: 42, scope: !12752)
!12774 = !DILocation(line: 0, scope: !12767)
!12775 = !DILocation(line: 1187, column: 29, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12767, file: !3, line: 1187, column: 3)
!12777 = !DILocation(line: 1188, column: 5, scope: !12776)
!12778 = !DILocation(line: 1187, column: 61, scope: !12776)
!12779 = !DILocation(line: 1187, column: 3, scope: !12776)
!12780 = distinct !{!12780, !12766, !12781}
!12781 = !DILocation(line: 1188, column: 5, scope: !12767)
!12782 = !DILocation(line: 1191, column: 3, scope: !12739)
!12783 = !DILocation(line: 1193, column: 8, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1193, column: 3)
!12785 = !DILocation(line: 1194, column: 5, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12784, file: !3, line: 1193, column: 3)
!12787 = !DILocation(line: 1196, column: 1, scope: !12739)
